/* A Bison parser, made by GNU Bison 2.3.  */

/* Skeleton implementation for Bison's Yacc-like parsers in C

   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.3"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Using locations.  */
#define YYLSP_NEEDED 1

/* Substitute the variable and function names.  */
#define yyparse base_yyparse
#define yylex   base_yylex
#define yyerror base_yyerror
#define yylval  base_yylval
#define yychar  base_yychar
#define yydebug base_yydebug
#define yynerrs base_yynerrs
#define yylloc base_yylloc

/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     IDENT = 258,
     FCONST = 259,
     SCONST = 260,
     BCONST = 261,
     XCONST = 262,
     Op = 263,
     ICONST = 264,
     PARAM = 265,
     TYPECAST = 266,
     DOT_DOT = 267,
     COLON_EQUALS = 268,
     EQUALS_GREATER = 269,
     LAMBDA_ARROW = 270,
     LESS_EQUALS = 271,
     GREATER_EQUALS = 272,
     NOT_EQUALS = 273,
     ABORT_P = 274,
     ABSOLUTE_P = 275,
     ACCESS = 276,
     ACTION = 277,
     ADD_P = 278,
     ADMIN = 279,
     AFTER = 280,
     AGGREGATE = 281,
     ALL = 282,
     ALSO = 283,
     ALTER = 284,
     ALWAYS = 285,
     ANALYSE = 286,
     ANALYZE = 287,
     AND = 288,
     ANY = 289,
     ARRAY = 290,
     AS = 291,
     ASC_P = 292,
     ASSERTION = 293,
     ASSIGNMENT = 294,
     ASYMMETRIC = 295,
     AT = 296,
     ATTACH = 297,
     ATTRIBUTE = 298,
     AUTHORIZATION = 299,
     BACKWARD = 300,
     BEFORE = 301,
     BEGIN_P = 302,
     BETWEEN = 303,
     BIGINT = 304,
     BINARY = 305,
     BIT = 306,
     BOOLEAN_P = 307,
     BOTH = 308,
     BY = 309,
     CACHE = 310,
     CALL_P = 311,
     CALLED = 312,
     CASCADE = 313,
     CASCADED = 314,
     CASE = 315,
     CAST = 316,
     CATALOG_P = 317,
     CHAIN = 318,
     CHAR_P = 319,
     CHARACTER = 320,
     CHARACTERISTICS = 321,
     CHECK_P = 322,
     CHECKPOINT = 323,
     CLASS = 324,
     CLOSE = 325,
     CLUSTER = 326,
     COALESCE = 327,
     COLLATE = 328,
     COLLATION = 329,
     COLUMN = 330,
     COLUMNS = 331,
     COMMENT = 332,
     COMMENTS = 333,
     COMMIT = 334,
     COMMITTED = 335,
     COMPRESSION = 336,
     CONCURRENTLY = 337,
     CONFIGURATION = 338,
     CONFLICT = 339,
     CONNECTION = 340,
     CONSTRAINT = 341,
     CONSTRAINTS = 342,
     CONTENT_P = 343,
     CONTINUE_P = 344,
     CONVERSION_P = 345,
     COPY = 346,
     COST = 347,
     CREATE_P = 348,
     CROSS = 349,
     CSV = 350,
     CUBE = 351,
     CURRENT_P = 352,
     CURRENT_CATALOG = 353,
     CURRENT_DATE = 354,
     CURRENT_ROLE = 355,
     CURRENT_SCHEMA = 356,
     CURRENT_TIME = 357,
     CURRENT_TIMESTAMP = 358,
     CURRENT_USER = 359,
     CURSOR = 360,
     CYCLE = 361,
     DATA_P = 362,
     DATABASE = 363,
     DAY_P = 364,
     DAYS_P = 365,
     DEALLOCATE = 366,
     DEC = 367,
     DECIMAL_P = 368,
     DECLARE = 369,
     DEFAULT = 370,
     DEFAULTS = 371,
     DEFERRABLE = 372,
     DEFERRED = 373,
     DEFINER = 374,
     DELETE_P = 375,
     DELIMITER = 376,
     DELIMITERS = 377,
     DEPENDS = 378,
     DESC_P = 379,
     DESCRIBE = 380,
     DETACH = 381,
     DICTIONARY = 382,
     DISABLE_P = 383,
     DISCARD = 384,
     DISTINCT = 385,
     DO = 386,
     DOCUMENT_P = 387,
     DOMAIN_P = 388,
     DOUBLE_P = 389,
     DROP = 390,
     EACH = 391,
     ELSE = 392,
     ENABLE_P = 393,
     ENCODING = 394,
     ENCRYPTED = 395,
     END_P = 396,
     ENUM_P = 397,
     ESCAPE = 398,
     EVENT = 399,
     EXCEPT = 400,
     EXCLUDE = 401,
     EXCLUDING = 402,
     EXCLUSIVE = 403,
     EXECUTE = 404,
     EXISTS = 405,
     EXPLAIN = 406,
     EXPORT_P = 407,
     EXTENSION = 408,
     EXTERNAL = 409,
     EXTRACT = 410,
     FALSE_P = 411,
     FAMILY = 412,
     FETCH = 413,
     FILTER = 414,
     FIRST_P = 415,
     FLOAT_P = 416,
     FOLLOWING = 417,
     FOR = 418,
     FORCE = 419,
     FOREIGN = 420,
     FORWARD = 421,
     FREEZE = 422,
     FROM = 423,
     FULL = 424,
     FUNCTION = 425,
     FUNCTIONS = 426,
     GENERATED = 427,
     GLOB = 428,
     GLOBAL = 429,
     GRANT = 430,
     GRANTED = 431,
     GROUP_P = 432,
     GROUPING = 433,
     GROUPING_ID = 434,
     HANDLER = 435,
     HAVING = 436,
     HEADER_P = 437,
     HOLD = 438,
     HOUR_P = 439,
     HOURS_P = 440,
     IDENTITY_P = 441,
     IF_P = 442,
     IGNORE_P = 443,
     ILIKE = 444,
     IMMEDIATE = 445,
     IMMUTABLE = 446,
     IMPLICIT_P = 447,
     IMPORT_P = 448,
     IN_P = 449,
     INCLUDING = 450,
     INCREMENT = 451,
     INDEX = 452,
     INDEXES = 453,
     INHERIT = 454,
     INHERITS = 455,
     INITIALLY = 456,
     INLINE_P = 457,
     INNER_P = 458,
     INOUT = 459,
     INPUT_P = 460,
     INSENSITIVE = 461,
     INSERT = 462,
     INSTEAD = 463,
     INT_P = 464,
     INTEGER = 465,
     INTERSECT = 466,
     INTERVAL = 467,
     INTO = 468,
     INVOKER = 469,
     IS = 470,
     ISNULL = 471,
     ISOLATION = 472,
     JOIN = 473,
     KEY = 474,
     LABEL = 475,
     LANGUAGE = 476,
     LARGE_P = 477,
     LAST_P = 478,
     LATERAL_P = 479,
     LEADING = 480,
     LEAKPROOF = 481,
     LEFT = 482,
     LEVEL = 483,
     LIKE = 484,
     LIMIT = 485,
     LISTEN = 486,
     LOAD = 487,
     LOCAL = 488,
     LOCALTIME = 489,
     LOCALTIMESTAMP = 490,
     LOCATION = 491,
     LOCK_P = 492,
     LOCKED = 493,
     LOGGED = 494,
     MACRO = 495,
     MAP = 496,
     MAPPING = 497,
     MATCH = 498,
     MATERIALIZED = 499,
     MAXVALUE = 500,
     METHOD = 501,
     MICROSECOND_P = 502,
     MICROSECONDS_P = 503,
     MILLISECOND_P = 504,
     MILLISECONDS_P = 505,
     MINUTE_P = 506,
     MINUTES_P = 507,
     MINVALUE = 508,
     MODE = 509,
     MONTH_P = 510,
     MONTHS_P = 511,
     MOVE = 512,
     NAME_P = 513,
     NAMES = 514,
     NATIONAL = 515,
     NATURAL = 516,
     NCHAR = 517,
     NEW = 518,
     NEXT = 519,
     NO = 520,
     NONE = 521,
     NOT = 522,
     NOTHING = 523,
     NOTIFY = 524,
     NOTNULL = 525,
     NOWAIT = 526,
     NULL_P = 527,
     NULLIF = 528,
     NULLS_P = 529,
     NUMERIC = 530,
     OBJECT_P = 531,
     OF = 532,
     OFF = 533,
     OFFSET = 534,
     OIDS = 535,
     OLD = 536,
     ON = 537,
     ONLY = 538,
     OPERATOR = 539,
     OPTION = 540,
     OPTIONS = 541,
     OR = 542,
     ORDER = 543,
     ORDINALITY = 544,
     OUT_P = 545,
     OUTER_P = 546,
     OVER = 547,
     OVERLAPS = 548,
     OVERLAY = 549,
     OVERRIDING = 550,
     OWNED = 551,
     OWNER = 552,
     PARALLEL = 553,
     PARSER = 554,
     PARTIAL = 555,
     PARTITION = 556,
     PASSING = 557,
     PASSWORD = 558,
     PERCENT = 559,
     PLACING = 560,
     PLANS = 561,
     POLICY = 562,
     POSITION = 563,
     PRAGMA_P = 564,
     PRECEDING = 565,
     PRECISION = 566,
     PREPARE = 567,
     PREPARED = 568,
     PRESERVE = 569,
     PRIMARY = 570,
     PRIOR = 571,
     PRIVILEGES = 572,
     PROCEDURAL = 573,
     PROCEDURE = 574,
     PROGRAM = 575,
     PUBLICATION = 576,
     QUALIFY = 577,
     QUOTE = 578,
     RANGE = 579,
     READ_P = 580,
     REAL = 581,
     REASSIGN = 582,
     RECHECK = 583,
     RECURSIVE = 584,
     REF = 585,
     REFERENCES = 586,
     REFERENCING = 587,
     REFRESH = 588,
     REINDEX = 589,
     RELATIVE_P = 590,
     RELEASE = 591,
     RENAME = 592,
     REPEATABLE = 593,
     REPLACE = 594,
     REPLICA = 595,
     RESET = 596,
     RESPECT_P = 597,
     RESTART = 598,
     RESTRICT = 599,
     RETURNING = 600,
     RETURNS = 601,
     REVOKE = 602,
     RIGHT = 603,
     ROLE = 604,
     ROLLBACK = 605,
     ROLLUP = 606,
     ROW = 607,
     ROWS = 608,
     RULE = 609,
     SAMPLE = 610,
     SAVEPOINT = 611,
     SCHEMA = 612,
     SCHEMAS = 613,
     SCROLL = 614,
     SEARCH = 615,
     SECOND_P = 616,
     SECONDS_P = 617,
     SECURITY = 618,
     SELECT = 619,
     SEQUENCE = 620,
     SEQUENCES = 621,
     SERIALIZABLE = 622,
     SERVER = 623,
     SESSION = 624,
     SESSION_USER = 625,
     SET = 626,
     SETOF = 627,
     SETS = 628,
     SHARE = 629,
     SHOW = 630,
     SIMILAR = 631,
     SIMPLE = 632,
     SKIP = 633,
     SMALLINT = 634,
     SNAPSHOT = 635,
     SOME = 636,
     SQL_P = 637,
     STABLE = 638,
     STANDALONE_P = 639,
     START = 640,
     STATEMENT = 641,
     STATISTICS = 642,
     STDIN = 643,
     STDOUT = 644,
     STORAGE = 645,
     STRICT_P = 646,
     STRIP_P = 647,
     STRUCT = 648,
     SUBSCRIPTION = 649,
     SUBSTRING = 650,
     SUMMARIZE = 651,
     SYMMETRIC = 652,
     SYSID = 653,
     SYSTEM_P = 654,
     TABLE = 655,
     TABLES = 656,
     TABLESAMPLE = 657,
     TABLESPACE = 658,
     TEMP = 659,
     TEMPLATE = 660,
     TEMPORARY = 661,
     TEXT_P = 662,
     THEN = 663,
     TIME = 664,
     TIMESTAMP = 665,
     TO = 666,
     TRAILING = 667,
     TRANSACTION = 668,
     TRANSFORM = 669,
     TREAT = 670,
     TRIGGER = 671,
     TRIM = 672,
     TRUE_P = 673,
     TRUNCATE = 674,
     TRUSTED = 675,
     TRY_CAST = 676,
     TYPE_P = 677,
     TYPES_P = 678,
     UNBOUNDED = 679,
     UNCOMMITTED = 680,
     UNENCRYPTED = 681,
     UNION = 682,
     UNIQUE = 683,
     UNKNOWN = 684,
     UNLISTEN = 685,
     UNLOGGED = 686,
     UNTIL = 687,
     UPDATE = 688,
     USER = 689,
     USING = 690,
     VACUUM = 691,
     VALID = 692,
     VALIDATE = 693,
     VALIDATOR = 694,
     VALUE_P = 695,
     VALUES = 696,
     VARCHAR = 697,
     VARIADIC = 698,
     VARYING = 699,
     VERBOSE = 700,
     VERSION_P = 701,
     VIEW = 702,
     VIEWS = 703,
     VOLATILE = 704,
     WHEN = 705,
     WHERE = 706,
     WHITESPACE_P = 707,
     WINDOW = 708,
     WITH = 709,
     WITHIN = 710,
     WITHOUT = 711,
     WORK = 712,
     WRAPPER = 713,
     WRITE_P = 714,
     XML_P = 715,
     XMLATTRIBUTES = 716,
     XMLCONCAT = 717,
     XMLELEMENT = 718,
     XMLEXISTS = 719,
     XMLFOREST = 720,
     XMLNAMESPACES = 721,
     XMLPARSE = 722,
     XMLPI = 723,
     XMLROOT = 724,
     XMLSERIALIZE = 725,
     XMLTABLE = 726,
     YEAR_P = 727,
     YEARS_P = 728,
     YES_P = 729,
     ZONE = 730,
     NOT_LA = 731,
     NULLS_LA = 732,
     WITH_LA = 733,
     POSTFIXOP = 734,
     UMINUS = 735
   };
#endif
/* Tokens.  */
#define IDENT 258
#define FCONST 259
#define SCONST 260
#define BCONST 261
#define XCONST 262
#define Op 263
#define ICONST 264
#define PARAM 265
#define TYPECAST 266
#define DOT_DOT 267
#define COLON_EQUALS 268
#define EQUALS_GREATER 269
#define LAMBDA_ARROW 270
#define LESS_EQUALS 271
#define GREATER_EQUALS 272
#define NOT_EQUALS 273
#define ABORT_P 274
#define ABSOLUTE_P 275
#define ACCESS 276
#define ACTION 277
#define ADD_P 278
#define ADMIN 279
#define AFTER 280
#define AGGREGATE 281
#define ALL 282
#define ALSO 283
#define ALTER 284
#define ALWAYS 285
#define ANALYSE 286
#define ANALYZE 287
#define AND 288
#define ANY 289
#define ARRAY 290
#define AS 291
#define ASC_P 292
#define ASSERTION 293
#define ASSIGNMENT 294
#define ASYMMETRIC 295
#define AT 296
#define ATTACH 297
#define ATTRIBUTE 298
#define AUTHORIZATION 299
#define BACKWARD 300
#define BEFORE 301
#define BEGIN_P 302
#define BETWEEN 303
#define BIGINT 304
#define BINARY 305
#define BIT 306
#define BOOLEAN_P 307
#define BOTH 308
#define BY 309
#define CACHE 310
#define CALL_P 311
#define CALLED 312
#define CASCADE 313
#define CASCADED 314
#define CASE 315
#define CAST 316
#define CATALOG_P 317
#define CHAIN 318
#define CHAR_P 319
#define CHARACTER 320
#define CHARACTERISTICS 321
#define CHECK_P 322
#define CHECKPOINT 323
#define CLASS 324
#define CLOSE 325
#define CLUSTER 326
#define COALESCE 327
#define COLLATE 328
#define COLLATION 329
#define COLUMN 330
#define COLUMNS 331
#define COMMENT 332
#define COMMENTS 333
#define COMMIT 334
#define COMMITTED 335
#define COMPRESSION 336
#define CONCURRENTLY 337
#define CONFIGURATION 338
#define CONFLICT 339
#define CONNECTION 340
#define CONSTRAINT 341
#define CONSTRAINTS 342
#define CONTENT_P 343
#define CONTINUE_P 344
#define CONVERSION_P 345
#define COPY 346
#define COST 347
#define CREATE_P 348
#define CROSS 349
#define CSV 350
#define CUBE 351
#define CURRENT_P 352
#define CURRENT_CATALOG 353
#define CURRENT_DATE 354
#define CURRENT_ROLE 355
#define CURRENT_SCHEMA 356
#define CURRENT_TIME 357
#define CURRENT_TIMESTAMP 358
#define CURRENT_USER 359
#define CURSOR 360
#define CYCLE 361
#define DATA_P 362
#define DATABASE 363
#define DAY_P 364
#define DAYS_P 365
#define DEALLOCATE 366
#define DEC 367
#define DECIMAL_P 368
#define DECLARE 369
#define DEFAULT 370
#define DEFAULTS 371
#define DEFERRABLE 372
#define DEFERRED 373
#define DEFINER 374
#define DELETE_P 375
#define DELIMITER 376
#define DELIMITERS 377
#define DEPENDS 378
#define DESC_P 379
#define DESCRIBE 380
#define DETACH 381
#define DICTIONARY 382
#define DISABLE_P 383
#define DISCARD 384
#define DISTINCT 385
#define DO 386
#define DOCUMENT_P 387
#define DOMAIN_P 388
#define DOUBLE_P 389
#define DROP 390
#define EACH 391
#define ELSE 392
#define ENABLE_P 393
#define ENCODING 394
#define ENCRYPTED 395
#define END_P 396
#define ENUM_P 397
#define ESCAPE 398
#define EVENT 399
#define EXCEPT 400
#define EXCLUDE 401
#define EXCLUDING 402
#define EXCLUSIVE 403
#define EXECUTE 404
#define EXISTS 405
#define EXPLAIN 406
#define EXPORT_P 407
#define EXTENSION 408
#define EXTERNAL 409
#define EXTRACT 410
#define FALSE_P 411
#define FAMILY 412
#define FETCH 413
#define FILTER 414
#define FIRST_P 415
#define FLOAT_P 416
#define FOLLOWING 417
#define FOR 418
#define FORCE 419
#define FOREIGN 420
#define FORWARD 421
#define FREEZE 422
#define FROM 423
#define FULL 424
#define FUNCTION 425
#define FUNCTIONS 426
#define GENERATED 427
#define GLOB 428
#define GLOBAL 429
#define GRANT 430
#define GRANTED 431
#define GROUP_P 432
#define GROUPING 433
#define GROUPING_ID 434
#define HANDLER 435
#define HAVING 436
#define HEADER_P 437
#define HOLD 438
#define HOUR_P 439
#define HOURS_P 440
#define IDENTITY_P 441
#define IF_P 442
#define IGNORE_P 443
#define ILIKE 444
#define IMMEDIATE 445
#define IMMUTABLE 446
#define IMPLICIT_P 447
#define IMPORT_P 448
#define IN_P 449
#define INCLUDING 450
#define INCREMENT 451
#define INDEX 452
#define INDEXES 453
#define INHERIT 454
#define INHERITS 455
#define INITIALLY 456
#define INLINE_P 457
#define INNER_P 458
#define INOUT 459
#define INPUT_P 460
#define INSENSITIVE 461
#define INSERT 462
#define INSTEAD 463
#define INT_P 464
#define INTEGER 465
#define INTERSECT 466
#define INTERVAL 467
#define INTO 468
#define INVOKER 469
#define IS 470
#define ISNULL 471
#define ISOLATION 472
#define JOIN 473
#define KEY 474
#define LABEL 475
#define LANGUAGE 476
#define LARGE_P 477
#define LAST_P 478
#define LATERAL_P 479
#define LEADING 480
#define LEAKPROOF 481
#define LEFT 482
#define LEVEL 483
#define LIKE 484
#define LIMIT 485
#define LISTEN 486
#define LOAD 487
#define LOCAL 488
#define LOCALTIME 489
#define LOCALTIMESTAMP 490
#define LOCATION 491
#define LOCK_P 492
#define LOCKED 493
#define LOGGED 494
#define MACRO 495
#define MAP 496
#define MAPPING 497
#define MATCH 498
#define MATERIALIZED 499
#define MAXVALUE 500
#define METHOD 501
#define MICROSECOND_P 502
#define MICROSECONDS_P 503
#define MILLISECOND_P 504
#define MILLISECONDS_P 505
#define MINUTE_P 506
#define MINUTES_P 507
#define MINVALUE 508
#define MODE 509
#define MONTH_P 510
#define MONTHS_P 511
#define MOVE 512
#define NAME_P 513
#define NAMES 514
#define NATIONAL 515
#define NATURAL 516
#define NCHAR 517
#define NEW 518
#define NEXT 519
#define NO 520
#define NONE 521
#define NOT 522
#define NOTHING 523
#define NOTIFY 524
#define NOTNULL 525
#define NOWAIT 526
#define NULL_P 527
#define NULLIF 528
#define NULLS_P 529
#define NUMERIC 530
#define OBJECT_P 531
#define OF 532
#define OFF 533
#define OFFSET 534
#define OIDS 535
#define OLD 536
#define ON 537
#define ONLY 538
#define OPERATOR 539
#define OPTION 540
#define OPTIONS 541
#define OR 542
#define ORDER 543
#define ORDINALITY 544
#define OUT_P 545
#define OUTER_P 546
#define OVER 547
#define OVERLAPS 548
#define OVERLAY 549
#define OVERRIDING 550
#define OWNED 551
#define OWNER 552
#define PARALLEL 553
#define PARSER 554
#define PARTIAL 555
#define PARTITION 556
#define PASSING 557
#define PASSWORD 558
#define PERCENT 559
#define PLACING 560
#define PLANS 561
#define POLICY 562
#define POSITION 563
#define PRAGMA_P 564
#define PRECEDING 565
#define PRECISION 566
#define PREPARE 567
#define PREPARED 568
#define PRESERVE 569
#define PRIMARY 570
#define PRIOR 571
#define PRIVILEGES 572
#define PROCEDURAL 573
#define PROCEDURE 574
#define PROGRAM 575
#define PUBLICATION 576
#define QUALIFY 577
#define QUOTE 578
#define RANGE 579
#define READ_P 580
#define REAL 581
#define REASSIGN 582
#define RECHECK 583
#define RECURSIVE 584
#define REF 585
#define REFERENCES 586
#define REFERENCING 587
#define REFRESH 588
#define REINDEX 589
#define RELATIVE_P 590
#define RELEASE 591
#define RENAME 592
#define REPEATABLE 593
#define REPLACE 594
#define REPLICA 595
#define RESET 596
#define RESPECT_P 597
#define RESTART 598
#define RESTRICT 599
#define RETURNING 600
#define RETURNS 601
#define REVOKE 602
#define RIGHT 603
#define ROLE 604
#define ROLLBACK 605
#define ROLLUP 606
#define ROW 607
#define ROWS 608
#define RULE 609
#define SAMPLE 610
#define SAVEPOINT 611
#define SCHEMA 612
#define SCHEMAS 613
#define SCROLL 614
#define SEARCH 615
#define SECOND_P 616
#define SECONDS_P 617
#define SECURITY 618
#define SELECT 619
#define SEQUENCE 620
#define SEQUENCES 621
#define SERIALIZABLE 622
#define SERVER 623
#define SESSION 624
#define SESSION_USER 625
#define SET 626
#define SETOF 627
#define SETS 628
#define SHARE 629
#define SHOW 630
#define SIMILAR 631
#define SIMPLE 632
#define SKIP 633
#define SMALLINT 634
#define SNAPSHOT 635
#define SOME 636
#define SQL_P 637
#define STABLE 638
#define STANDALONE_P 639
#define START 640
#define STATEMENT 641
#define STATISTICS 642
#define STDIN 643
#define STDOUT 644
#define STORAGE 645
#define STRICT_P 646
#define STRIP_P 647
#define STRUCT 648
#define SUBSCRIPTION 649
#define SUBSTRING 650
#define SUMMARIZE 651
#define SYMMETRIC 652
#define SYSID 653
#define SYSTEM_P 654
#define TABLE 655
#define TABLES 656
#define TABLESAMPLE 657
#define TABLESPACE 658
#define TEMP 659
#define TEMPLATE 660
#define TEMPORARY 661
#define TEXT_P 662
#define THEN 663
#define TIME 664
#define TIMESTAMP 665
#define TO 666
#define TRAILING 667
#define TRANSACTION 668
#define TRANSFORM 669
#define TREAT 670
#define TRIGGER 671
#define TRIM 672
#define TRUE_P 673
#define TRUNCATE 674
#define TRUSTED 675
#define TRY_CAST 676
#define TYPE_P 677
#define TYPES_P 678
#define UNBOUNDED 679
#define UNCOMMITTED 680
#define UNENCRYPTED 681
#define UNION 682
#define UNIQUE 683
#define UNKNOWN 684
#define UNLISTEN 685
#define UNLOGGED 686
#define UNTIL 687
#define UPDATE 688
#define USER 689
#define USING 690
#define VACUUM 691
#define VALID 692
#define VALIDATE 693
#define VALIDATOR 694
#define VALUE_P 695
#define VALUES 696
#define VARCHAR 697
#define VARIADIC 698
#define VARYING 699
#define VERBOSE 700
#define VERSION_P 701
#define VIEW 702
#define VIEWS 703
#define VOLATILE 704
#define WHEN 705
#define WHERE 706
#define WHITESPACE_P 707
#define WINDOW 708
#define WITH 709
#define WITHIN 710
#define WITHOUT 711
#define WORK 712
#define WRAPPER 713
#define WRITE_P 714
#define XML_P 715
#define XMLATTRIBUTES 716
#define XMLCONCAT 717
#define XMLELEMENT 718
#define XMLEXISTS 719
#define XMLFOREST 720
#define XMLNAMESPACES 721
#define XMLPARSE 722
#define XMLPI 723
#define XMLROOT 724
#define XMLSERIALIZE 725
#define XMLTABLE 726
#define YEAR_P 727
#define YEARS_P 728
#define YES_P 729
#define ZONE 730
#define NOT_LA 731
#define NULLS_LA 732
#define WITH_LA 733
#define POSTFIXOP 734
#define UMINUS 735




/* Copy the first part of user declarations.  */
#line 1 "third_party/libpg_query/grammar/grammar.y.tmp"

#line 1 "third_party/libpg_query/grammar/grammar.hpp"
/*#define YYDEBUG 1*/
/*-------------------------------------------------------------------------
 *
 * gram.y
 *	  POSTGRESQL BISON rules/actions
 *
 * Portions Copyright (c) 1996-2017, PostgreSQL Global Development PGGroup
 * Portions Copyright (c) 1994, Regents of the University of California
 *
 *
 * IDENTIFICATION
 *	  src/backend/parser/gram.y
 *
 * HISTORY
 *	  AUTHOR			DATE			MAJOR EVENT
 *	  Andrew Yu			Sept, 1994		POSTQUEL to SQL conversion
 *	  Andrew Yu			Oct, 1994		lispy code conversion
 *
 * NOTES
 *	  CAPITALS are used to represent terminal symbols.
 *	  non-capitals are used to represent non-terminals.
 *
 *	  In general, nothing in this file should initiate database accesses
 *	  nor depend on changeable state (such as SET variables).  If you do
 *	  database accesses, your code will fail when we have aborted the
 *	  current transaction and are just parsing commands to find the next
 *	  ROLLBACK or COMMIT.  If you make use of SET variables, then you
 *	  will do the wrong thing in multi-query strings like this:
 *			SET constraint_exclusion TO off; SELECT * FROM foo;
 *	  because the entire string is parsed by gram.y before the SET gets
 *	  executed.  Anything that depends on the database or changeable state
 *	  should be handled during parse analysis so that it happens at the
 *	  right time not the wrong time.
 *
 * WARNINGS
 *	  If you use a list, make sure the datum is a node so that the printing
 *	  routines work.
 *
 *	  Sometimes we assign constants to makeStrings. Make sure we don't free
 *	  those.
 *
 *-------------------------------------------------------------------------
 */
#include "pg_functions.hpp"
#include <string.h>

#include <ctype.h>
#include <limits.h>

#include "nodes/makefuncs.hpp"
#include "nodes/nodeFuncs.hpp"
#include "parser/gramparse.hpp"
#include "parser/parser.hpp"
#include "utils/datetime.hpp"

namespace duckdb_libpgquery {
#define DEFAULT_SCHEMA "main"

/*
 * Location tracking support --- simpler than bison's default, since we only
 * want to track the start position not the end position of each nonterminal.
 */
#define YYLLOC_DEFAULT(Current, Rhs, N) \
	do { \
		if ((N) > 0) \
			(Current) = (Rhs)[1]; \
		else \
			(Current) = (-1); \
	} while (0)

/*
 * The above macro assigns -1 (unknown) as the parse location of any
 * nonterminal that was reduced from an empty rule, or whose leftmost
 * component was reduced from an empty rule.  This is problematic
 * for nonterminals defined like
 *		OptFooList: / * EMPTY * / { ... } | OptFooList Foo { ... } ;
 * because we'll set -1 as the location during the first reduction and then
 * copy it during each subsequent reduction, leaving us with -1 for the
 * location even when the list is not empty.  To fix that, do this in the
 * action for the nonempty rule(s):
 *		if (@$ < 0) @$ = @2;
 * (Although we have many nonterminals that follow this pattern, we only
 * bother with fixing @$ like this when the nonterminal's parse location
 * is actually referenced in some rule.)
 *
 * A cleaner answer would be to make YYLLOC_DEFAULT scan all the Rhs
 * locations until it's found one that's not -1.  Then we'd get a correct
 * location for any nonterminal that isn't entirely empty.  But this way
 * would add overhead to every rule reduction, and so far there's not been
 * a compelling reason to pay that overhead.
 */

/*
 * Bison doesn't allocate anything that needs to live across parser calls,
 * so we can easily have it use palloc instead of malloc.  This prevents
 * memory leaks if we error out during parsing.  Note this only works with
 * bison >= 2.0.  However, in bison 1.875 the default is to use alloca()
 * if possible, so there's not really much problem anyhow, at least if
 * you're building with gcc.
 */
#define YYMALLOC palloc
#define YYFREE   pfree
#define YYINITDEPTH 1000

/* yields an integer bitmask of these flags: */
#define CAS_NOT_DEFERRABLE			0x01
#define CAS_DEFERRABLE				0x02
#define CAS_INITIALLY_IMMEDIATE		0x04
#define CAS_INITIALLY_DEFERRED		0x08
#define CAS_NOT_VALID				0x10
#define CAS_NO_INHERIT				0x20


#define parser_yyerror(msg)  scanner_yyerror(msg, yyscanner)
#define parser_errposition(pos)  scanner_errposition(pos, yyscanner)

static void base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner,
						 const char *msg);
static PGRawStmt *makeRawStmt(PGNode *stmt, int stmt_location);
static void updateRawStmtEnd(PGRawStmt *rs, int end_location);
static PGNode *makeColumnRef(char *colname, PGList *indirection,
						   int location, core_yyscan_t yyscanner);
static PGNode *makeTypeCast(PGNode *arg, PGTypeName *tpname, int trycast, int location);
static PGNode *makeStringConst(char *str, int location);
static PGNode *makeStringConstCast(char *str, int location, PGTypeName *tpname);
static PGNode *makeIntervalNode(char *str, int location, PGList *typmods);
static PGNode *makeIntervalNode(int val, int location, PGList *typmods);
static PGNode *makeIntervalNode(PGNode *arg, int location, PGList *typmods);
static PGNode *makeSampleSize(PGValue *sample_size, bool is_percentage);
static PGNode *makeSampleOptions(PGNode *sample_size, char *method, int seed, int location);
static PGNode *makeIntConst(int val, int location);
static PGNode *makeFloatConst(char *str, int location);
static PGNode *makeBitStringConst(char *str, int location);
static PGNode *makeNullAConst(int location);
static PGNode *makeAConst(PGValue *v, int location);
static PGNode *makeBoolAConst(bool state, int location);
static PGNode *makeParamRef(int number, int location);
static void check_qualified_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_func_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_indirection(PGList *indirection, core_yyscan_t yyscanner);
static void insertSelectOptions(PGSelectStmt *stmt,
								PGList *sortClause, PGList *lockingClause,
								PGNode *limitOffset, PGNode *limitCount,
								PGWithClause *withClause,
								core_yyscan_t yyscanner);
static PGNode *makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg);
static PGNode *doNegate(PGNode *n, int location);
static void doNegateFloat(PGValue *v);
static PGNode *makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeNotExpr(PGNode *expr, int location);
static PGNode *makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod,
								  int location);
static void SplitColQualList(PGList *qualList,
							 PGList **constraintList, PGCollateClause **collClause,
							 core_yyscan_t yyscanner);
static void processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner);
static PGNode *makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query);
static PGNode *makeLimitPercent(PGNode *limit_percent);



/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* Enabling the token table.  */
#ifndef YYTOKEN_TABLE
# define YYTOKEN_TABLE 0
#endif

#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE
#line 14 "third_party/libpg_query/grammar/grammar.y"
{
	core_YYSTYPE		core_yystype;
	/* these fields must match core_YYSTYPE: */
	int					ival;
	char				*str;
	const char			*keyword;
	const char          *conststr;

	char				chr;
	bool				boolean;
	PGJoinType			jtype;
	PGDropBehavior		dbehavior;
	PGOnCommitAction		oncommit;
	PGOnCreateConflict		oncreateconflict;
	PGList				*list;
	PGNode				*node;
	PGValue				*value;
	PGObjectType			objtype;
	PGTypeName			*typnam;
	PGObjectWithArgs		*objwithargs;
	PGDefElem				*defelt;
	PGSortBy				*sortby;
	PGWindowDef			*windef;
	PGJoinExpr			*jexpr;
	PGIndexElem			*ielem;
	PGAlias				*alias;
	PGRangeVar			*range;
	PGIntoClause			*into;
	PGWithClause			*with;
	PGInferClause			*infer;
	PGOnConflictClause	*onconflict;
	PGAIndices			*aind;
	PGResTarget			*target;
	PGInsertStmt			*istmt;
	PGVariableSetStmt		*vsetstmt;
	PGOverridingKind       override;
	PGSortByDir            sortorder;
	PGSortByNulls          nullorder;
	PGLockClauseStrength lockstrength;
	PGLockWaitPolicy lockwaitpolicy;
	PGSubLinkType subquerytype;
	PGViewCheckOption viewcheckoption;
}
/* Line 187 of yacc.c.  */
#line 1274 "third_party/libpg_query/grammar/grammar_out.cpp"
	YYSTYPE;
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
# define YYSTYPE_IS_TRIVIAL 1
#endif

#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif


/* Copy the second part of user declarations.  */


/* Line 216 of yacc.c.  */
#line 1299 "third_party/libpg_query/grammar/grammar_out.cpp"

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#elif (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
typedef signed char yytype_int8;
#else
typedef short int yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(msgid) dgettext ("bison-runtime", msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(msgid) msgid
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(e) ((void) (e))
#else
# define YYUSE(e) /* empty */
#endif

/* Identity function, used to suppress warnings about constant conditions.  */
#ifndef lint
# define YYID(n) (n)
#else
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static int
YYID (int i)
#else
static int
YYID (i)
    int i;
#endif
{
  return i;
}
#endif

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#     ifndef _STDLIB_H
#      define _STDLIB_H 1
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined _STDLIB_H \
       && ! ((defined YYMALLOC || defined malloc) \
	     && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef _STDLIB_H
#    define _STDLIB_H 1
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
	 || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
	     && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss;
  YYSTYPE yyvs;
    YYLTYPE yyls;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(To, From, Count) \
      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
#  else
#   define YYCOPY(To, From, Count)		\
      do					\
	{					\
	  YYSIZE_T yyi;				\
	  for (yyi = 0; yyi < (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (YYID (0))
#  endif
# endif

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack)					\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack, Stack, yysize);				\
	Stack = &yyptr->Stack;						\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))

#endif

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  591
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   52525

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  502
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  384
/* YYNRULES -- Number of rules.  */
#define YYNRULES  1800
/* YYNRULES -- Number of states.  */
#define YYNSTATES  2977

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   735

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,   499,     2,   487,     2,     2,
     492,   493,   485,   483,   496,   484,   494,   486,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   501,   495,
     479,   481,   480,   500,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,   490,     2,   491,   488,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   497,     2,   498,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   482,   489
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const yytype_uint16 yyprhs[] =
{
       0,     0,     3,     5,     9,    11,    13,    15,    17,    19,
      21,    23,    25,    27,    29,    31,    33,    35,    37,    39,
      41,    43,    45,    47,    49,    51,    53,    55,    57,    59,
      61,    63,    65,    67,    69,    71,    73,    75,    77,    79,
      80,    85,    92,    97,   104,   109,   116,   121,   128,   130,
     133,   137,   140,   142,   146,   149,   153,   155,   159,   162,
     168,   172,   179,   184,   191,   198,   205,   211,   217,   224,
     234,   239,   245,   253,   260,   265,   274,   279,   282,   287,
     291,   298,   303,   306,   309,   312,   315,   317,   320,   321,
     323,   326,   329,   332,   334,   338,   343,   346,   348,   349,
     354,   358,   361,   366,   372,   379,   388,   395,   404,   411,
     420,   423,   428,   432,   438,   440,   441,   443,   445,   446,
     448,   450,   452,   454,   456,   458,   460,   462,   464,   466,
     468,   472,   474,   476,   478,   480,   482,   484,   487,   489,
     491,   494,   496,   499,   504,   512,   514,   519,   524,   532,
     535,   537,   541,   546,   550,   551,   553,   554,   557,   561,
     567,   576,   582,   583,   589,   595,   603,   606,   607,   609,
     611,   613,   617,   620,   621,   623,   624,   626,   630,   632,
     636,   638,   642,   645,   652,   659,   668,   675,   684,   691,
     700,   707,   716,   725,   736,   745,   756,   758,   759,   764,
     771,   773,   776,   778,   780,   781,   783,   786,   789,   791,
     794,   797,   799,   802,   806,   809,   812,   815,   818,   822,
     826,   830,   832,   836,   838,   839,   841,   844,   847,   857,
     870,   882,   883,   886,   888,   890,   892,   894,   896,   898,
     902,   903,   905,   908,   910,   912,   915,   918,   922,   924,
     926,   929,   932,   934,   937,   941,   947,   951,   954,   960,
     966,   969,   973,   975,   977,   980,   983,   984,   989,   990,
     994,   999,  1004,  1005,  1009,  1012,  1013,  1017,  1019,  1021,
    1023,  1025,  1027,  1029,  1031,  1033,  1035,  1037,  1041,  1045,
    1047,  1050,  1053,  1056,  1059,  1062,  1065,  1066,  1070,  1074,
    1078,  1079,  1081,  1084,  1086,  1089,  1092,  1095,  1098,  1103,
    1105,  1109,  1111,  1115,  1117,  1119,  1121,  1123,  1127,  1129,
    1132,  1133,  1135,  1136,  1138,  1142,  1143,  1146,  1147,  1151,
    1155,  1157,  1163,  1167,  1169,  1173,  1175,  1180,  1186,  1192,
    1199,  1203,  1211,  1216,  1228,  1230,  1234,  1237,  1240,  1243,
    1244,  1248,  1250,  1252,  1255,  1258,  1261,  1264,  1266,  1267,
    1269,  1272,  1278,  1287,  1289,  1290,  1293,  1296,  1299,  1302,
    1306,  1311,  1314,  1316,  1318,  1320,  1324,  1327,  1329,  1331,
    1333,  1336,  1340,  1354,  1371,  1373,  1376,  1377,  1379,  1380,
    1382,  1383,  1386,  1387,  1389,  1390,  1398,  1409,  1412,  1416,
    1417,  1422,  1425,  1429,  1432,  1436,  1439,  1442,  1445,  1448,
    1451,  1454,  1456,  1458,  1459,  1469,  1481,  1494,  1509,  1513,
    1518,  1523,  1524,  1529,  1535,  1541,  1546,  1553,  1555,  1557,
    1559,  1561,  1563,  1565,  1566,  1568,  1572,  1574,  1575,  1578,
    1581,  1585,  1589,  1593,  1595,  1599,  1603,  1606,  1610,  1614,
    1618,  1622,  1624,  1626,  1628,  1630,  1634,  1640,  1642,  1644,
    1646,  1648,  1652,  1664,  1674,  1676,  1678,  1682,  1683,  1685,
    1689,  1691,  1692,  1694,  1695,  1697,  1698,  1700,  1704,  1706,
    1708,  1710,  1714,  1715,  1718,  1721,  1722,  1725,  1726,  1728,
    1729,  1731,  1733,  1735,  1739,  1743,  1745,  1747,  1751,  1755,
    1759,  1763,  1768,  1772,  1775,  1777,  1779,  1781,  1783,  1785,
    1789,  1796,  1798,  1800,  1803,  1807,  1810,  1812,  1818,  1822,
    1823,  1825,  1827,  1829,  1831,  1840,  1842,  1844,  1848,  1852,
    1854,  1857,  1862,  1867,  1870,  1874,  1880,  1886,  1888,  1890,
    1902,  1914,  1916,  1919,  1924,  1929,  1934,  1937,  1940,  1944,
    1946,  1950,  1957,  1960,  1961,  1965,  1969,  1974,  1979,  1984,
    1989,  1993,  1996,  1998,  2000,  2001,  2003,  2005,  2006,  2008,
    2014,  2016,  2017,  2020,  2023,  2024,  2026,  2027,  2031,  2033,
    2037,  2042,  2046,  2048,  2050,  2051,  2054,  2057,  2058,  2061,
    2064,  2066,  2068,  2070,  2071,  2074,  2079,  2085,  2090,  2093,
    2097,  2100,  2103,  2106,  2109,  2111,  2114,  2118,  2119,  2121,
    2122,  2128,  2130,  2135,  2142,  2145,  2147,  2148,  2153,  2154,
    2156,  2158,  2161,  2164,  2167,  2169,  2171,  2174,  2177,  2179,
    2181,  2183,  2185,  2187,  2189,  2193,  2194,  2196,  2200,  2202,
    2204,  2206,  2208,  2210,  2213,  2218,  2223,  2229,  2231,  2233,
    2236,  2237,  2240,  2241,  2243,  2247,  2249,  2250,  2252,  2255,
    2259,  2262,  2267,  2270,  2274,  2277,  2278,  2280,  2283,  2284,
    2289,  2295,  2298,  2299,  2301,  2305,  2309,  2313,  2317,  2321,
    2325,  2327,  2332,  2336,  2341,  2347,  2352,  2358,  2363,  2369,
    2372,  2377,  2379,  2381,  2382,  2384,  2389,  2395,  2400,  2401,
    2404,  2407,  2410,  2412,  2414,  2415,  2420,  2423,  2425,  2428,
    2431,  2436,  2439,  2446,  2449,  2451,  2455,  2460,  2461,  2464,
    2465,  2468,  2469,  2471,  2475,  2479,  2482,  2483,  2486,  2491,
    2493,  2495,  2498,  2502,  2508,  2515,  2518,  2522,  2528,  2534,
    2538,  2543,  2544,  2546,  2548,  2550,  2552,  2554,  2557,  2562,
    2564,  2566,  2568,  2570,  2573,  2577,  2578,  2580,  2582,  2584,
    2586,  2588,  2591,  2594,  2597,  2600,  2603,  2605,  2609,  2610,
    2612,  2614,  2616,  2618,  2624,  2627,  2629,  2631,  2633,  2635,
    2640,  2642,  2645,  2648,  2650,  2654,  2658,  2661,  2663,  2664,
    2670,  2673,  2679,  2682,  2684,  2688,  2692,  2693,  2695,  2697,
    2699,  2701,  2703,  2705,  2707,  2709,  2711,  2713,  2715,  2717,
    2719,  2721,  2723,  2725,  2727,  2729,  2731,  2733,  2735,  2737,
    2739,  2741,  2745,  2749,  2753,  2757,  2761,  2765,  2769,  2770,
    2772,  2776,  2780,  2786,  2789,  2792,  2796,  2800,  2804,  2808,
    2812,  2816,  2820,  2824,  2828,  2832,  2836,  2840,  2844,  2847,
    2850,  2854,  2858,  2861,  2864,  2868,  2872,  2878,  2883,  2890,
    2894,  2900,  2905,  2912,  2917,  2924,  2930,  2938,  2942,  2945,
    2950,  2954,  2957,  2959,  2963,  2967,  2971,  2975,  2979,  2983,
    2988,  2992,  2997,  3001,  3006,  3012,  3019,  3026,  3034,  3041,
    3049,  3056,  3064,  3068,  3073,  3078,  3085,  3087,  3092,  3094,
    3098,  3101,  3104,  3108,  3112,  3116,  3120,  3124,  3128,  3132,
    3136,  3140,  3144,  3148,  3152,  3156,  3159,  3162,  3168,  3175,
    3182,  3190,  3192,  3194,  3197,  3200,  3203,  3208,  3210,  3213,
    3215,  3218,  3221,  3226,  3230,  3237,  3245,  3255,  3263,  3271,
    3276,  3281,  3283,  3285,  3287,  3293,  3295,  3297,  3302,  3304,
    3309,  3311,  3316,  3318,  3323,  3325,  3327,  3329,  3331,  3333,
    3335,  3342,  3349,  3354,  3359,  3364,  3369,  3376,  3382,  3388,
    3394,  3399,  3406,  3411,  3417,  3418,  3424,  3425,  3428,  3429,
    3431,  3435,  3439,  3442,  3445,  3446,  3453,  3455,  3456,  3460,
    3461,  3464,  3467,  3468,  3470,  3475,  3478,  3481,  3484,  3487,
    3490,  3495,  3499,  3501,  3507,  3511,  3513,  3517,  3519,  3521,
    3523,  3525,  3527,  3529,  3531,  3533,  3535,  3537,  3539,  3541,
    3543,  3545,  3547,  3549,  3551,  3553,  3558,  3560,  3565,  3567,
    3572,  3574,  3577,  3579,  3582,  3584,  3587,  3589,  3593,  3595,
    3599,  3601,  3602,  3604,  3608,  3610,  3614,  3618,  3620,  3624,
    3628,  3629,  3631,  3633,  3635,  3637,  3639,  3641,  3643,  3645,
    3647,  3649,  3654,  3658,  3661,  3665,  3666,  3670,  3674,  3677,
    3680,  3682,  3683,  3686,  3689,  3693,  3696,  3698,  3700,  3704,
    3710,  3712,  3715,  3720,  3723,  3724,  3726,  3727,  3729,  3732,
    3735,  3739,  3745,  3747,  3748,  3750,  3753,  3754,  3757,  3759,
    3760,  3762,  3763,  3765,  3769,  3773,  3776,  3778,  3782,  3788,
    3793,  3796,  3798,  3799,  3803,  3805,  3809,  3814,  3817,  3818,
    3820,  3824,  3826,  3829,  3831,  3835,  3837,  3839,  3841,  3844,
    3846,  3848,  3851,  3853,  3855,  3858,  3866,  3869,  3875,  3879,
    3883,  3885,  3887,  3889,  3891,  3893,  3895,  3897,  3899,  3901,
    3903,  3905,  3907,  3909,  3911,  3913,  3915,  3917,  3919,  3921,
    3923,  3926,  3929,  3933,  3937,  3938,  3940,  3942,  3944,  3946,
    3948,  3950,  3952,  3960,  3962,  3965,  3969,  3972,  3973,  3976,
    3977,  3982,  3990,  3993,  3994,  3996,  3998,  4000,  4002,  4009,
    4014,  4021,  4026,  4033,  4042,  4047,  4054,  4056,  4058,  4060,
    4062,  4064,  4067,  4069,  4072,  4074,  4076,  4078,  4082,  4086,
    4090,  4094,  4097,  4100,  4102,  4106,  4108,  4110,  4112,  4114,
    4118,  4120,  4122,  4123,  4125,  4127,  4129,  4131,  4135,  4144,
    4146,  4147,  4149,  4153,  4157,  4167,  4180,  4184,  4185,  4187,
    4189,  4191,  4193,  4195,  4197,  4199,  4201,  4203,  4205,  4207,
    4209,  4211,  4213,  4215,  4217,  4219,  4221,  4223,  4225,  4227,
    4229,  4231,  4233,  4235,  4237,  4239,  4241,  4243,  4245,  4247,
    4249,  4251,  4253,  4255,  4257,  4259,  4261,  4263,  4265,  4267,
    4269,  4271,  4273,  4275,  4277,  4279,  4281,  4283,  4285,  4287,
    4289,  4291,  4293,  4295,  4297,  4299,  4301,  4303,  4305,  4307,
    4309,  4311,  4313,  4315,  4317,  4319,  4321,  4323,  4325,  4327,
    4329,  4331,  4333,  4335,  4337,  4339,  4341,  4343,  4345,  4347,
    4349,  4351,  4353,  4355,  4357,  4359,  4361,  4363,  4365,  4367,
    4369,  4371,  4373,  4375,  4377,  4379,  4381,  4383,  4385,  4387,
    4389,  4391,  4393,  4395,  4397,  4399,  4401,  4403,  4405,  4407,
    4409,  4411,  4413,  4415,  4417,  4419,  4421,  4423,  4425,  4427,
    4429,  4431,  4433,  4435,  4437,  4439,  4441,  4443,  4445,  4447,
    4449,  4451,  4453,  4455,  4457,  4459,  4461,  4463,  4465,  4467,
    4469,  4471,  4473,  4475,  4477,  4479,  4481,  4483,  4485,  4487,
    4489,  4491,  4493,  4495,  4497,  4499,  4501,  4503,  4505,  4507,
    4509,  4511,  4513,  4515,  4517,  4519,  4521,  4523,  4525,  4527,
    4529,  4531,  4533,  4535,  4537,  4539,  4541,  4543,  4545,  4547,
    4549,  4551,  4553,  4555,  4557,  4559,  4561,  4563,  4565,  4567,
    4569,  4571,  4573,  4575,  4577,  4579,  4581,  4583,  4585,  4587,
    4589,  4591,  4593,  4595,  4597,  4599,  4601,  4603,  4605,  4607,
    4609,  4611,  4613,  4615,  4617,  4619,  4621,  4623,  4625,  4627,
    4629,  4631,  4633,  4635,  4637,  4639,  4641,  4643,  4645,  4647,
    4649,  4651,  4653,  4655,  4657,  4659,  4661,  4663,  4665,  4667,
    4669,  4671,  4673,  4675,  4677,  4679,  4681,  4683,  4685,  4687,
    4689,  4691,  4693,  4695,  4697,  4699,  4701,  4703,  4705,  4707,
    4709,  4711,  4713,  4715,  4717,  4719,  4721,  4723,  4725,  4727,
    4729,  4731,  4733,  4735,  4737,  4739,  4741,  4743,  4745,  4747,
    4749,  4751,  4753,  4755,  4757,  4759,  4761,  4763,  4765,  4767,
    4769,  4771,  4773,  4775,  4777,  4779,  4781,  4783,  4785,  4787,
    4789,  4791,  4793,  4795,  4797,  4799,  4801,  4803,  4805,  4807,
    4809,  4811,  4813,  4815,  4817,  4819,  4821,  4823,  4825,  4827,
    4829,  4831,  4833,  4835,  4837,  4839,  4841,  4843,  4845,  4847,
    4849,  4851,  4853,  4855,  4857,  4859,  4861,  4863,  4865,  4867,
    4869,  4871,  4873,  4875,  4877,  4879,  4881,  4883,  4885,  4887,
    4889,  4891,  4893,  4895,  4897,  4899,  4901,  4903,  4905,  4907,
    4909,  4911,  4913,  4915,  4917,  4919,  4921,  4923,  4925,  4927,
    4929,  4931,  4933,  4935,  4937,  4939,  4941,  4943,  4945,  4947,
    4949,  4951,  4953,  4955,  4957,  4959,  4961,  4963,  4965,  4967,
    4969,  4971,  4973,  4975,  4977,  4979,  4981,  4983,  4985,  4987,
    4989,  4991,  4993,  4995,  4997,  4999,  5001,  5003,  5005,  5007,
    5009,  5011,  5013,  5015,  5017,  5019,  5021,  5023,  5025,  5027,
    5029,  5031,  5033,  5035,  5037,  5039,  5041,  5043,  5045,  5047,
    5049,  5051,  5053,  5055,  5057,  5059,  5061,  5063,  5065,  5067,
    5069,  5071,  5073,  5075,  5077,  5079,  5081,  5083,  5085,  5087,
    5089,  5091,  5093,  5095,  5097,  5099,  5101,  5103,  5105,  5107,
    5109,  5111,  5113,  5115,  5117,  5119,  5121,  5123,  5125,  5127,
    5129,  5131,  5133,  5135,  5137,  5139,  5141,  5143,  5145,  5147,
    5149,  5151,  5153,  5155,  5157,  5159,  5161,  5163,  5165,  5167,
    5169,  5171,  5173,  5175,  5177,  5179,  5181,  5183,  5185,  5187,
    5189,  5191,  5193,  5195,  5197,  5199,  5201,  5203,  5205,  5207,
    5209,  5211,  5213,  5215,  5217,  5219,  5221,  5223,  5225,  5227,
    5229,  5231,  5233,  5235,  5237,  5239,  5241,  5243,  5245,  5247,
    5249,  5251,  5253,  5255,  5257,  5259,  5261,  5263,  5265,  5267,
    5269,  5271,  5273,  5275,  5277,  5279,  5281,  5283,  5285,  5287,
    5289,  5291,  5293,  5295,  5297,  5299,  5301,  5303,  5305,  5307,
    5309
};

/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
static const yytype_int16 yyrhs[] =
{
     503,     0,    -1,   504,    -1,   504,   495,   505,    -1,   505,
      -1,   520,    -1,   555,    -1,   506,    -1,   534,    -1,   636,
      -1,   663,    -1,   643,    -1,   623,    -1,   874,    -1,   660,
      -1,   864,    -1,   608,    -1,   562,    -1,   626,    -1,   860,
      -1,   867,    -1,   877,    -1,   521,    -1,   517,    -1,   518,
      -1,   616,    -1,   535,    -1,   532,    -1,   519,    -1,   664,
      -1,   553,    -1,   668,    -1,   627,    -1,   667,    -1,   631,
      -1,   613,    -1,   637,    -1,   610,    -1,   629,    -1,    -1,
      29,   400,   734,   514,    -1,    29,   400,   187,   150,   734,
     514,    -1,    29,   197,   841,   514,    -1,    29,   197,   187,
     150,   841,   514,    -1,    29,   365,   841,   514,    -1,    29,
     365,   187,   150,   841,   514,    -1,    29,   447,   841,   514,
      -1,    29,   447,   187,   150,   841,   514,    -1,   509,    -1,
     507,   509,    -1,   371,   115,   776,    -1,   135,   115,    -1,
     343,    -1,   343,   557,   558,    -1,   371,   559,    -1,   371,
     172,   607,    -1,   513,    -1,   510,   496,   513,    -1,    23,
     587,    -1,    23,   187,   267,   150,   587,    -1,    23,    75,
     587,    -1,    23,    75,   187,   267,   150,   587,    -1,    29,
     554,   849,   508,    -1,    29,   554,   849,   135,   267,   272,
      -1,    29,   554,   849,   371,   267,   272,    -1,    29,   554,
     849,   371,   387,   561,    -1,    29,   554,   849,   371,   575,
      -1,    29,   554,   849,   341,   575,    -1,    29,   554,   849,
     371,   390,   849,    -1,    29,   554,   849,    23,   172,   607,
      36,   186,   565,    -1,    29,   554,   849,   507,    -1,    29,
     554,   849,   135,   186,    -1,    29,   554,   849,   135,   186,
     187,   150,    -1,   135,   554,   187,   150,   849,   871,    -1,
     135,   554,   849,   871,    -1,    29,   554,   849,   516,   422,
     746,   743,   512,    -1,    29,   554,   849,   515,    -1,    23,
     577,    -1,    29,    86,   843,   563,    -1,   438,    86,   843,
      -1,   135,    86,   187,   150,   843,   871,    -1,   135,    86,
     843,   871,    -1,   371,   239,    -1,   371,   431,    -1,   371,
     575,    -1,   341,   575,    -1,   515,    -1,   435,   776,    -1,
      -1,   570,    -1,   371,   570,    -1,    23,   570,    -1,   135,
     585,    -1,   511,    -1,   514,   496,   511,    -1,   286,   492,
     510,   493,    -1,   371,   107,    -1,   371,    -1,    -1,   152,
     108,   848,   650,    -1,   193,   108,   848,    -1,   309,   849,
      -1,   309,   849,   481,   642,    -1,   309,   849,   492,   808,
     493,    -1,    29,   400,   734,   371,   357,   843,    -1,    29,
     400,   187,   150,   734,   371,   357,   843,    -1,    29,   365,
     841,   371,   357,   843,    -1,    29,   365,   187,   150,   841,
     371,   357,   843,    -1,    29,   447,   841,   371,   357,   843,
      -1,    29,   447,   187,   150,   841,   371,   357,   843,    -1,
     151,   524,    -1,   151,   528,   522,   524,    -1,   151,   445,
     524,    -1,   151,   492,   527,   493,   524,    -1,   445,    -1,
      -1,   529,    -1,   558,    -1,    -1,   668,    -1,   535,    -1,
     667,    -1,   860,    -1,   623,    -1,     3,    -1,   879,    -1,
     883,    -1,   525,    -1,   848,    -1,   530,    -1,   527,   496,
     530,    -1,    32,    -1,    31,    -1,   418,    -1,   156,    -1,
     282,    -1,   526,    -1,   531,   523,    -1,   525,    -1,   528,
      -1,   232,   533,    -1,   848,    -1,   528,   522,    -1,   528,
     522,   841,   856,    -1,   539,   207,   213,   537,   536,   542,
     544,    -1,   668,    -1,   295,   545,   440,   668,    -1,   492,
     549,   493,   668,    -1,   492,   549,   493,   295,   545,   440,
     668,    -1,   115,   441,    -1,   841,    -1,   841,    36,   849,
      -1,   492,   551,   493,   740,    -1,   282,    86,   843,    -1,
      -1,   673,    -1,    -1,   849,   830,    -1,   552,   481,   776,
      -1,   492,   546,   493,   481,   776,    -1,   282,    84,   538,
     131,   433,   371,   550,   740,    -1,   282,    84,   538,   131,
     268,    -1,    -1,   849,   547,   548,   687,   688,    -1,   781,
     547,   548,   687,   688,    -1,   492,   776,   493,   547,   548,
     687,   688,    -1,   345,   833,    -1,    -1,   434,    -1,   399,
      -1,   552,    -1,   546,   496,   552,    -1,    73,   854,    -1,
      -1,   854,    -1,    -1,   540,    -1,   549,   496,   540,    -1,
     541,    -1,   550,   496,   541,    -1,   543,    -1,   551,   496,
     543,    -1,   849,   830,    -1,    29,   357,   843,   337,   411,
     843,    -1,    29,   400,   734,   337,   411,   843,    -1,    29,
     400,   187,   150,   734,   337,   411,   843,    -1,    29,   365,
     841,   337,   411,   843,    -1,    29,   365,   187,   150,   841,
     337,   411,   843,    -1,    29,   447,   841,   337,   411,   843,
      -1,    29,   447,   187,   150,   841,   337,   411,   843,    -1,
      29,   197,   841,   337,   411,   843,    -1,    29,   197,   187,
     150,   841,   337,   411,   843,    -1,    29,   400,   734,   337,
     554,   843,   411,   843,    -1,    29,   400,   187,   150,   734,
     337,   554,   843,   411,   843,    -1,    29,   400,   734,   337,
      86,   843,   411,   843,    -1,    29,   400,   187,   150,   734,
     337,    86,   843,   411,   843,    -1,    75,    -1,    -1,    29,
     365,   841,   556,    -1,    29,   365,   187,   150,   841,   556,
      -1,   559,    -1,   556,   559,    -1,   454,    -1,   478,    -1,
      -1,     4,    -1,   483,     4,    -1,   484,     4,    -1,   561,
      -1,    36,   748,    -1,    55,   558,    -1,   106,    -1,   265,
     106,    -1,   196,   560,   558,    -1,   245,   558,    -1,   253,
     558,    -1,   265,   245,    -1,   265,   253,    -1,   296,    54,
     854,    -1,   365,   258,   854,    -1,   385,   557,   558,    -1,
     343,    -1,   343,   557,   558,    -1,    54,    -1,    -1,   847,
      -1,   483,   847,    -1,   484,   847,    -1,    93,   606,   400,
     841,   492,   594,   493,   582,   574,    -1,    93,   606,   400,
     187,   267,   150,   841,   492,   594,   493,   582,   574,    -1,
      93,   287,   339,   606,   400,   841,   492,   594,   493,   582,
     574,    -1,    -1,   563,   586,    -1,   601,    -1,   885,    -1,
     803,    -1,   558,    -1,   848,    -1,   266,    -1,   492,   556,
     493,    -1,    -1,   848,    -1,   265,    22,    -1,   344,    -1,
      58,    -1,   371,   272,    -1,   371,   115,    -1,    86,   843,
     569,    -1,   569,    -1,   581,    -1,    73,   854,    -1,   267,
     272,    -1,   272,    -1,   428,   593,    -1,   315,   219,   593,
      -1,    67,   492,   776,   493,   576,    -1,   435,    81,   843,
      -1,   115,   777,    -1,   172,   607,    36,   186,   565,    -1,
     331,   841,   596,   604,   572,    -1,   585,   566,    -1,   282,
     433,   567,    -1,   571,    -1,   598,    -1,   571,   598,    -1,
     598,   571,    -1,    -1,   286,   492,   588,   493,    -1,    -1,
     282,    79,   135,    -1,   282,    79,   120,   353,    -1,   282,
      79,   314,   353,    -1,    -1,   492,   579,   493,    -1,   265,
     199,    -1,    -1,    86,   843,   602,    -1,   602,    -1,    78,
      -1,    87,    -1,   116,    -1,   186,    -1,   198,    -1,   387,
      -1,   390,    -1,    27,    -1,   599,    -1,   579,   496,   599,
      -1,   435,   197,   590,    -1,   117,    -1,   267,   117,    -1,
     201,   118,    -1,   201,   190,    -1,   454,   575,    -1,   454,
     280,    -1,   456,   280,    -1,    -1,   492,   589,   493,    -1,
     584,   195,   578,    -1,   584,   147,   578,    -1,    -1,   858,
      -1,   267,   117,    -1,   117,    -1,   201,   190,    -1,   201,
     118,    -1,   267,   437,    -1,   265,   199,    -1,   849,   746,
     573,   597,    -1,   570,    -1,   588,   496,   570,    -1,   592,
      -1,   589,   496,   592,    -1,   849,    -1,   587,    -1,   605,
      -1,   577,    -1,   858,   481,   564,    -1,   858,    -1,   454,
     583,    -1,    -1,   603,    -1,    -1,   849,    -1,   492,   600,
     493,    -1,    -1,   597,   568,    -1,    -1,   282,   120,   567,
      -1,   858,   481,   564,    -1,   858,    -1,   858,   494,   858,
     481,   564,    -1,   858,   494,   858,    -1,   595,    -1,   600,
     496,   595,    -1,   746,    -1,   851,   855,   487,   422,    -1,
     372,   851,   855,   487,   422,    -1,    67,   492,   776,   493,
     563,    -1,   428,   492,   600,   493,   593,   563,    -1,   428,
     580,   563,    -1,   315,   219,   492,   600,   493,   593,   563,
      -1,   315,   219,   580,   563,    -1,   165,   219,   492,   600,
     493,   331,   841,   596,   604,   572,   563,    -1,   591,    -1,
     603,   496,   591,    -1,   243,   169,    -1,   243,   300,    -1,
     243,   377,    -1,    -1,   229,   841,   584,    -1,   406,    -1,
     404,    -1,   233,   406,    -1,   233,   404,    -1,   174,   406,
      -1,   174,   404,    -1,   431,    -1,    -1,    30,    -1,    54,
     115,    -1,    93,   606,   365,   841,   609,    -1,    93,   606,
     365,   187,   267,   150,   841,   609,    -1,   556,    -1,    -1,
     611,   668,    -1,   396,   668,    -1,   396,   612,    -1,   611,
     612,    -1,   611,   409,   475,    -1,   611,   413,   217,   228,
      -1,   611,    27,    -1,   375,    -1,   125,    -1,   849,    -1,
     612,   494,   849,    -1,   341,   615,    -1,   612,    -1,    27,
      -1,   614,    -1,   409,   475,    -1,   413,   217,   228,    -1,
      93,   622,   197,   619,   620,   282,   841,   618,   492,   551,
     493,   621,   740,    -1,    93,   622,   197,   619,   187,   267,
     150,   590,   282,   841,   618,   492,   551,   493,   621,   740,
      -1,   849,    -1,   435,   617,    -1,    -1,    82,    -1,    -1,
     590,    -1,    -1,   454,   575,    -1,    -1,   428,    -1,    -1,
      93,   606,   400,   625,    36,   668,   624,    -1,    93,   606,
     400,   187,   267,   150,   625,    36,   668,   624,    -1,   454,
     107,    -1,   454,   265,   107,    -1,    -1,   841,   596,   582,
     574,    -1,   111,   843,    -1,   111,   312,   843,    -1,   111,
      27,    -1,   111,   312,    27,    -1,    19,   628,    -1,    47,
     628,    -1,   385,   628,    -1,    79,   628,    -1,   141,   628,
      -1,   350,   628,    -1,   457,    -1,   413,    -1,    -1,    93,
     606,   447,   841,   596,   621,    36,   668,   630,    -1,    93,
     287,   339,   606,   447,   841,   596,   621,    36,   668,   630,
      -1,    93,   606,   329,   447,   841,   492,   600,   493,   621,
      36,   668,   630,    -1,    93,   287,   339,   606,   329,   447,
     841,   492,   600,   493,   621,    36,   668,   630,    -1,   454,
      67,   285,    -1,   454,    59,    67,   285,    -1,   454,   233,
      67,   285,    -1,    -1,   436,   633,   635,   522,    -1,   436,
     633,   635,   522,   841,    -1,   436,   633,   635,   522,   534,
      -1,   436,   492,   634,   493,    -1,   436,   492,   634,   493,
     841,   856,    -1,   528,    -1,   445,    -1,   167,    -1,   169,
      -1,     3,    -1,   169,    -1,    -1,   632,    -1,   634,   496,
     632,    -1,   167,    -1,    -1,    56,   779,    -1,   371,   638,
      -1,   371,   233,   638,    -1,   371,   369,   638,    -1,   371,
     174,   638,    -1,   639,    -1,   612,   168,    97,    -1,   409,
     475,   641,    -1,   357,   848,    -1,   612,   411,   642,    -1,
     612,   481,   642,    -1,   612,   411,   115,    -1,   612,   481,
     115,    -1,   529,    -1,   558,    -1,   848,    -1,     3,    -1,
     765,   848,   775,    -1,   765,   492,   847,   493,   848,    -1,
     558,    -1,   115,    -1,   233,    -1,   640,    -1,   642,   496,
     640,    -1,    91,   655,   841,   596,   653,   644,   649,   658,
     645,   557,   650,    -1,    91,   492,   666,   493,   411,   649,
     658,   557,   650,    -1,   168,    -1,   411,    -1,   647,   122,
     848,    -1,    -1,   657,    -1,   646,   496,   657,    -1,   435,
      -1,    -1,    36,    -1,    -1,   320,    -1,    -1,   654,    -1,
     492,   659,   493,    -1,   529,    -1,   558,    -1,   485,    -1,
     492,   646,   493,    -1,    -1,   858,   651,    -1,   454,   280,
      -1,    -1,   654,   656,    -1,    -1,    50,    -1,    -1,    50,
      -1,   280,    -1,   167,    -1,   121,   648,   848,    -1,   272,
     648,   848,    -1,    95,    -1,   182,    -1,   323,   648,   848,
      -1,   143,   648,   848,    -1,   164,   323,   600,    -1,   164,
     323,   485,    -1,   164,   267,   272,   600,    -1,   164,   272,
     600,    -1,   139,   848,    -1,   529,    -1,   848,    -1,   388,
      -1,   389,    -1,   652,    -1,   659,   496,   652,    -1,    93,
     661,   841,   662,    36,   776,    -1,   170,    -1,   240,    -1,
     492,   493,    -1,   492,   808,   493,    -1,   164,    68,    -1,
      68,    -1,   312,   843,   665,    36,   666,    -1,   492,   810,
     493,    -1,    -1,   668,    -1,   535,    -1,   667,    -1,   860,
      -1,   539,   433,   861,   371,   550,   724,   862,   544,    -1,
     670,    -1,   669,    -1,   492,   670,   493,    -1,   492,   669,
     493,    -1,   672,    -1,   671,   684,    -1,   671,   683,   716,
     690,    -1,   671,   683,   689,   717,    -1,   673,   671,    -1,
     673,   671,   684,    -1,   673,   671,   683,   716,   690,    -1,
     673,   671,   683,   689,   717,    -1,   672,    -1,   669,    -1,
     364,   681,   832,   676,   724,   740,   706,   714,   785,   715,
     694,    -1,   364,   680,   833,   676,   724,   740,   706,   714,
     785,   715,   694,    -1,   723,    -1,   400,   734,    -1,   671,
     427,   679,   671,    -1,   671,   211,   679,   671,    -1,   671,
     145,   679,   671,    -1,   454,   674,    -1,   478,   674,    -1,
     454,   329,   674,    -1,   675,    -1,   674,   496,   675,    -1,
     843,   856,    36,   492,   666,   493,    -1,   213,   677,    -1,
      -1,   406,   678,   841,    -1,   404,   678,   841,    -1,   233,
     406,   678,   841,    -1,   233,   404,   678,   841,    -1,   174,
     406,   678,   841,    -1,   174,   404,   678,   841,    -1,   431,
     678,   841,    -1,   400,   841,    -1,   841,    -1,   400,    -1,
      -1,    27,    -1,   130,    -1,    -1,   130,    -1,   130,   282,
     492,   806,   493,    -1,    27,    -1,    -1,   188,   274,    -1,
     342,   274,    -1,    -1,   684,    -1,    -1,   288,    54,   685,
      -1,   686,    -1,   685,   496,   686,    -1,   776,   435,   803,
     688,    -1,   776,   687,   688,    -1,    37,    -1,   124,    -1,
      -1,   477,   160,    -1,   477,   223,    -1,    -1,   691,   692,
      -1,   692,   691,    -1,   691,    -1,   692,    -1,   689,    -1,
      -1,   230,   700,    -1,   230,   700,   496,   701,    -1,   158,
     705,   702,   704,   283,    -1,   158,   705,   704,   283,    -1,
     279,   701,    -1,   279,   702,   704,    -1,     4,   487,    -1,
       9,   487,    -1,     4,   304,    -1,     9,   304,    -1,     9,
      -1,     9,   353,    -1,   435,   355,   696,    -1,    -1,   849,
      -1,    -1,   695,   492,   693,   493,   699,    -1,   693,    -1,
     693,   492,   849,   493,    -1,   693,   492,   849,   496,     9,
     493,    -1,   402,   696,    -1,   697,    -1,    -1,   338,   492,
       9,   493,    -1,    -1,   776,    -1,    27,    -1,   776,   487,
      -1,     4,   304,    -1,     9,   304,    -1,   776,    -1,   778,
      -1,   483,   703,    -1,   484,   703,    -1,   847,    -1,     4,
      -1,   352,    -1,   353,    -1,   160,    -1,   264,    -1,   177,
      54,   707,    -1,    -1,   708,    -1,   707,   496,   708,    -1,
     776,    -1,   709,    -1,   711,    -1,   710,    -1,   712,    -1,
     492,   493,    -1,   351,   492,   806,   493,    -1,    96,   492,
     806,   493,    -1,   178,   373,   492,   707,   493,    -1,   178,
      -1,   179,    -1,   181,   776,    -1,    -1,   322,   776,    -1,
      -1,   718,    -1,   163,   325,   283,    -1,   716,    -1,    -1,
     719,    -1,   718,   719,    -1,   720,   721,   722,    -1,   163,
     433,    -1,   163,   265,   219,   433,    -1,   163,   374,    -1,
     163,   219,   374,    -1,   277,   840,    -1,    -1,   271,    -1,
     378,   238,    -1,    -1,   441,   492,   806,   493,    -1,   723,
     496,   492,   806,   493,    -1,   168,   725,    -1,    -1,   726,
      -1,   725,   496,   726,    -1,   734,   729,   698,    -1,   735,
     730,   698,    -1,   224,   735,   730,    -1,   669,   729,   698,
      -1,   224,   669,   729,    -1,   727,    -1,   492,   727,   493,
     728,    -1,   492,   727,   493,    -1,   726,    94,   218,   726,
      -1,   726,   731,   218,   726,   733,    -1,   726,   218,   726,
     733,    -1,   726,   261,   731,   218,   726,    -1,   726,   261,
     218,   726,    -1,    36,   849,   492,   842,   493,    -1,    36,
     850,    -1,   849,   492,   842,   493,    -1,   849,    -1,   728,
      -1,    -1,   728,    -1,    36,   492,   741,   493,    -1,    36,
     849,   492,   741,   493,    -1,   849,   492,   741,   493,    -1,
      -1,   169,   732,    -1,   227,   732,    -1,   348,   732,    -1,
     203,    -1,   291,    -1,    -1,   435,   492,   842,   493,    -1,
     282,   776,    -1,   841,    -1,   841,   485,    -1,   283,   841,
      -1,   283,   492,   841,   493,    -1,   781,   739,    -1,   353,
     168,   492,   737,   493,   739,    -1,   781,   738,    -1,   736,
      -1,   737,   496,   736,    -1,    36,   492,   741,   493,    -1,
      -1,   478,   289,    -1,    -1,   451,   776,    -1,    -1,   742,
      -1,   741,   496,   742,    -1,   849,   746,   743,    -1,    73,
     854,    -1,    -1,   849,   746,    -1,   744,   496,   849,   746,
      -1,   352,    -1,   393,    -1,   748,   747,    -1,   372,   748,
     747,    -1,   748,    35,   490,   847,   491,    -1,   372,   748,
      35,   490,   847,   491,    -1,   748,    35,    -1,   372,   748,
      35,    -1,   745,   492,   744,   493,   747,    -1,   241,   492,
     810,   493,   747,    -1,   747,   490,   491,    -1,   747,   490,
     847,   491,    -1,    -1,   750,    -1,   752,    -1,   754,    -1,
     758,    -1,   764,    -1,   765,   775,    -1,   765,   492,   847,
     493,    -1,   752,    -1,   755,    -1,   759,    -1,   764,    -1,
     853,   751,    -1,   492,   806,   493,    -1,    -1,   209,    -1,
     210,    -1,   379,    -1,    49,    -1,   326,    -1,   161,   753,
      -1,   134,   311,    -1,   113,   751,    -1,   112,   751,    -1,
     275,   751,    -1,    52,    -1,   492,   847,   493,    -1,    -1,
     756,    -1,   757,    -1,   756,    -1,   757,    -1,    51,   763,
     492,   806,   493,    -1,    51,   763,    -1,   760,    -1,   761,
      -1,   760,    -1,   761,    -1,   762,   492,   847,   493,    -1,
     762,    -1,    65,   763,    -1,    64,   763,    -1,   442,    -1,
     260,    65,   763,    -1,   260,    64,   763,    -1,   262,   763,
      -1,   444,    -1,    -1,   410,   492,   847,   493,   766,    -1,
     410,   766,    -1,   409,   492,   847,   493,   766,    -1,   409,
     766,    -1,   212,    -1,   478,   409,   475,    -1,   456,   409,
     475,    -1,    -1,   472,    -1,   473,    -1,   255,    -1,   256,
      -1,   109,    -1,   110,    -1,   184,    -1,   185,    -1,   251,
      -1,   252,    -1,   361,    -1,   362,    -1,   249,    -1,   250,
      -1,   247,    -1,   248,    -1,   767,    -1,   768,    -1,   769,
      -1,   770,    -1,   771,    -1,   772,    -1,   773,    -1,   774,
      -1,   767,   411,   768,    -1,   769,   411,   770,    -1,   769,
     411,   771,    -1,   769,   411,   772,    -1,   770,   411,   771,
      -1,   770,   411,   772,    -1,   771,   411,   772,    -1,    -1,
     778,    -1,   776,    11,   746,    -1,   776,    73,   854,    -1,
     776,    41,   409,   475,   776,    -1,   483,   776,    -1,   484,
     776,    -1,   776,   483,   776,    -1,   776,   484,   776,    -1,
     776,   485,   776,    -1,   776,   486,   776,    -1,   776,   487,
     776,    -1,   776,   488,   776,    -1,   776,   479,   776,    -1,
     776,   480,   776,    -1,   776,   481,   776,    -1,   776,    16,
     776,    -1,   776,    17,   776,    -1,   776,    18,   776,    -1,
     776,   802,   776,    -1,   802,   776,    -1,   776,   802,    -1,
     776,    33,   776,    -1,   776,   287,   776,    -1,   267,   776,
      -1,   476,   776,    -1,   776,   173,   776,    -1,   776,   229,
     776,    -1,   776,   229,   776,   143,   776,    -1,   776,   476,
     229,   776,    -1,   776,   476,   229,   776,   143,   776,    -1,
     776,   189,   776,    -1,   776,   189,   776,   143,   776,    -1,
     776,   476,   189,   776,    -1,   776,   476,   189,   776,   143,
     776,    -1,   776,   376,   411,   776,    -1,   776,   376,   411,
     776,   143,   776,    -1,   776,   476,   376,   411,   776,    -1,
     776,   476,   376,   411,   776,   143,   776,    -1,   776,   215,
     272,    -1,   776,   216,    -1,   776,   215,   267,   272,    -1,
     776,   267,   272,    -1,   776,   270,    -1,   796,    -1,   497,
     798,   498,    -1,   490,   807,   491,    -1,   796,    15,   776,
      -1,   826,    15,   776,    -1,   796,   293,   796,    -1,   776,
     215,   418,    -1,   776,   215,   267,   418,    -1,   776,   215,
     156,    -1,   776,   215,   267,   156,    -1,   776,   215,   429,
      -1,   776,   215,   267,   429,    -1,   776,   215,   130,   168,
     776,    -1,   776,   215,   267,   130,   168,   776,    -1,   776,
     215,   277,   492,   810,   493,    -1,   776,   215,   267,   277,
     492,   810,   493,    -1,   776,    48,   831,   777,    33,   776,
      -1,   776,   476,    48,   831,   777,    33,   776,    -1,   776,
      48,   397,   777,    33,   776,    -1,   776,   476,    48,   397,
     777,    33,   776,    -1,   776,   194,   820,    -1,   776,   476,
     194,   820,    -1,   776,   804,   799,   669,    -1,   776,   804,
     799,   492,   776,   493,    -1,   115,    -1,    35,   490,   807,
     491,    -1,   778,    -1,   777,    11,   746,    -1,   483,   777,
      -1,   484,   777,    -1,   777,   483,   777,    -1,   777,   484,
     777,    -1,   777,   485,   777,    -1,   777,   486,   777,    -1,
     777,   487,   777,    -1,   777,   488,   777,    -1,   777,   479,
     777,    -1,   777,   480,   777,    -1,   777,   481,   777,    -1,
     777,    16,   777,    -1,   777,    17,   777,    -1,   777,    18,
     777,    -1,   777,   802,   777,    -1,   802,   777,    -1,   777,
     802,    -1,   777,   215,   130,   168,   777,    -1,   777,   215,
     267,   130,   168,   777,    -1,   777,   215,   277,   492,   810,
     493,    -1,   777,   215,   267,   277,   492,   810,   493,    -1,
     826,    -1,   846,    -1,   499,     9,    -1,   500,   830,    -1,
      10,   830,    -1,   492,   776,   493,   830,    -1,   821,    -1,
     780,   830,    -1,   669,    -1,   669,   829,    -1,   150,   669,
      -1,   713,   492,   806,   493,    -1,   845,   492,   493,    -1,
     845,   492,   808,   683,   682,   493,    -1,   845,   492,   443,
     809,   683,   682,   493,    -1,   845,   492,   808,   496,   443,
     809,   683,   682,   493,    -1,   845,   492,    27,   808,   683,
     682,   493,    -1,   845,   492,   130,   808,   683,   682,   493,
      -1,   845,   492,   485,   493,    -1,   779,   783,   784,   788,
      -1,   782,    -1,   779,    -1,   782,    -1,    74,   163,   492,
     776,   493,    -1,    99,    -1,   102,    -1,   102,   492,   847,
     493,    -1,   103,    -1,   103,   492,   847,   493,    -1,   234,
      -1,   234,   492,   847,   493,    -1,   235,    -1,   235,   492,
     847,   493,    -1,   100,    -1,   104,    -1,   370,    -1,   434,
      -1,    98,    -1,   101,    -1,    61,   492,   776,    36,   746,
     493,    -1,   421,   492,   776,    36,   746,   493,    -1,   155,
     492,   811,   493,    -1,   294,   492,   813,   493,    -1,   308,
     492,   815,   493,    -1,   395,   492,   816,   493,    -1,   415,
     492,   776,    36,   746,   493,    -1,   417,   492,    53,   819,
     493,    -1,   417,   492,   225,   819,   493,    -1,   417,   492,
     412,   819,   493,    -1,   417,   492,   819,   493,    -1,   273,
     492,   776,   496,   776,   493,    -1,    72,   492,   806,   493,
      -1,   455,   177,   492,   684,   493,    -1,    -1,   159,   492,
     451,   776,   493,    -1,    -1,   453,   786,    -1,    -1,   787,
      -1,   786,   496,   787,    -1,   849,    36,   789,    -1,   292,
     789,    -1,   292,   849,    -1,    -1,   492,   790,   791,   683,
     792,   493,    -1,   849,    -1,    -1,   301,    54,   806,    -1,
      -1,   324,   793,    -1,   353,   793,    -1,    -1,   794,    -1,
      48,   794,    33,   794,    -1,   424,   310,    -1,   424,   162,
      -1,    97,   352,    -1,   776,   310,    -1,   776,   162,    -1,
     352,   492,   806,   493,    -1,   352,   492,   493,    -1,   795,
      -1,   492,   806,   496,   776,   493,    -1,   850,   501,   776,
      -1,   797,    -1,   798,   496,   797,    -1,    34,    -1,   381,
      -1,    27,    -1,     8,    -1,   801,    -1,   483,    -1,   484,
      -1,   485,    -1,   486,    -1,   487,    -1,   488,    -1,   479,
      -1,   480,    -1,   481,    -1,    16,    -1,    17,    -1,    18,
      -1,     8,    -1,   284,   492,   805,   493,    -1,   800,    -1,
     284,   492,   805,   493,    -1,   800,    -1,   284,   492,   805,
     493,    -1,   229,    -1,   476,   229,    -1,   173,    -1,   476,
     173,    -1,   189,    -1,   476,   189,    -1,   800,    -1,   849,
     494,   805,    -1,   776,    -1,   806,   496,   776,    -1,   806,
      -1,    -1,   809,    -1,   808,   496,   809,    -1,   776,    -1,
     857,    13,   776,    -1,   857,    14,   776,    -1,   746,    -1,
     810,   496,   746,    -1,   812,   168,   776,    -1,    -1,     3,
      -1,   767,    -1,   768,    -1,   769,    -1,   770,    -1,   771,
      -1,   772,    -1,   773,    -1,   774,    -1,   848,    -1,   776,
     814,   817,   818,    -1,   776,   814,   817,    -1,   305,   776,
      -1,   777,   194,   777,    -1,    -1,   776,   817,   818,    -1,
     776,   818,   817,    -1,   776,   817,    -1,   776,   818,    -1,
     806,    -1,    -1,   168,   776,    -1,   163,   776,    -1,   776,
     168,   806,    -1,   168,   806,    -1,   806,    -1,   669,    -1,
     492,   806,   493,    -1,    60,   825,   822,   824,   141,    -1,
     823,    -1,   822,   823,    -1,   450,   776,   408,   776,    -1,
     137,   776,    -1,    -1,   776,    -1,    -1,   849,    -1,   849,
     829,    -1,   494,   844,    -1,   490,   776,   491,    -1,   490,
     828,   501,   828,   491,    -1,   776,    -1,    -1,   827,    -1,
     829,   827,    -1,    -1,   830,   827,    -1,    40,    -1,    -1,
     833,    -1,    -1,   834,    -1,   833,   496,   834,    -1,   776,
      36,   859,    -1,   776,     3,    -1,   776,    -1,   485,   836,
     839,    -1,   849,   494,   485,   836,   839,    -1,   146,   492,
     842,   493,    -1,   146,   849,    -1,   835,    -1,    -1,   776,
      36,   849,    -1,   837,    -1,   838,   496,   837,    -1,   339,
     492,   838,   493,    -1,   339,   837,    -1,    -1,   841,    -1,
     840,   496,   841,    -1,   850,    -1,   849,   829,    -1,   843,
      -1,   842,   496,   843,    -1,   849,    -1,   858,    -1,   852,
      -1,   849,   829,    -1,   847,    -1,     4,    -1,   848,   830,
      -1,     6,    -1,     7,    -1,   845,   848,    -1,   845,   492,
     808,   683,   682,   493,   848,    -1,   749,   848,    -1,   765,
     492,   776,   493,   775,    -1,   765,   847,   775,    -1,   765,
     848,   775,    -1,   418,    -1,   156,    -1,   272,    -1,     9,
      -1,     5,    -1,     3,    -1,   879,    -1,   880,    -1,   849,
      -1,     5,    -1,     3,    -1,   879,    -1,   884,    -1,     3,
      -1,   879,    -1,   881,    -1,     3,    -1,   879,    -1,   882,
      -1,   849,    -1,   849,   855,    -1,   494,   844,    -1,   855,
     494,   844,    -1,   492,   842,   493,    -1,    -1,   851,    -1,
       3,    -1,   883,    -1,   879,    -1,   885,    -1,   858,    -1,
       5,    -1,   539,   120,   168,   861,   863,   862,   544,    -1,
     734,    -1,   734,   849,    -1,   734,    36,   849,    -1,   451,
     776,    -1,    -1,   435,   725,    -1,    -1,    93,   357,   849,
     865,    -1,    93,   357,   187,   267,   150,   849,   865,    -1,
     865,   866,    -1,    -1,   562,    -1,   616,    -1,   608,    -1,
     629,    -1,   135,   868,   187,   150,   870,   871,    -1,   135,
     868,   870,   871,    -1,   135,   869,   187,   150,   842,   871,
      -1,   135,   869,   842,   871,    -1,   135,   872,   843,   282,
     854,   871,    -1,   135,   872,   187,   150,   843,   282,   854,
     871,    -1,   135,   422,   873,   871,    -1,   135,   422,   187,
     150,   873,   871,    -1,   400,    -1,   365,    -1,   170,    -1,
     240,    -1,   447,    -1,   244,   447,    -1,   197,    -1,   165,
     400,    -1,    74,    -1,    90,    -1,   387,    -1,   407,   360,
     299,    -1,   407,   360,   127,    -1,   407,   360,   405,    -1,
     407,   360,    83,    -1,    21,   246,    -1,   144,   416,    -1,
     153,    -1,   165,   107,   458,    -1,   321,    -1,   357,    -1,
     368,    -1,   854,    -1,   870,   496,   854,    -1,    58,    -1,
     344,    -1,    -1,   307,    -1,   354,    -1,   416,    -1,   746,
      -1,   873,   496,   746,    -1,    93,   422,   854,    36,   142,
     492,   875,   493,    -1,   876,    -1,    -1,   848,    -1,   876,
     496,   848,    -1,   149,   843,   878,    -1,    93,   606,   400,
     625,    36,   149,   843,   878,   624,    -1,    93,   606,   400,
     187,   267,   150,   625,    36,   149,   843,   878,   624,    -1,
     492,   806,   493,    -1,    -1,    19,    -1,    20,    -1,    21,
      -1,    22,    -1,    23,    -1,    24,    -1,    25,    -1,    26,
      -1,    28,    -1,    29,    -1,    30,    -1,    38,    -1,    39,
      -1,    41,    -1,    42,    -1,    43,    -1,    45,    -1,    46,
      -1,    47,    -1,    54,    -1,    55,    -1,    56,    -1,    57,
      -1,    58,    -1,    59,    -1,    62,    -1,    63,    -1,    66,
      -1,    68,    -1,    69,    -1,    70,    -1,    71,    -1,    76,
      -1,    77,    -1,    78,    -1,    79,    -1,    80,    -1,    81,
      -1,    83,    -1,    84,    -1,    85,    -1,    87,    -1,    88,
      -1,    89,    -1,    90,    -1,    91,    -1,    92,    -1,    95,
      -1,    96,    -1,    97,    -1,   105,    -1,   106,    -1,   107,
      -1,   108,    -1,   109,    -1,   110,    -1,   111,    -1,   114,
      -1,   116,    -1,   118,    -1,   119,    -1,   120,    -1,   121,
      -1,   122,    -1,   123,    -1,   125,    -1,   126,    -1,   127,
      -1,   128,    -1,   129,    -1,   132,    -1,   133,    -1,   134,
      -1,   135,    -1,   136,    -1,   138,    -1,   139,    -1,   140,
      -1,   142,    -1,   143,    -1,   144,    -1,   146,    -1,   147,
      -1,   148,    -1,   149,    -1,   151,    -1,   152,    -1,   153,
      -1,   154,    -1,   157,    -1,   159,    -1,   160,    -1,   162,
      -1,   164,    -1,   166,    -1,   170,    -1,   171,    -1,   172,
      -1,   174,    -1,   176,    -1,   180,    -1,   182,    -1,   183,
      -1,   184,    -1,   185,    -1,   186,    -1,   187,    -1,   188,
      -1,   190,    -1,   191,    -1,   192,    -1,   193,    -1,   195,
      -1,   196,    -1,   197,    -1,   198,    -1,   199,    -1,   200,
      -1,   202,    -1,   205,    -1,   206,    -1,   207,    -1,   208,
      -1,   214,    -1,   217,    -1,   219,    -1,   220,    -1,   221,
      -1,   222,    -1,   223,    -1,   226,    -1,   228,    -1,   231,
      -1,   232,    -1,   233,    -1,   236,    -1,   237,    -1,   238,
      -1,   239,    -1,   240,    -1,   242,    -1,   243,    -1,   244,
      -1,   245,    -1,   246,    -1,   247,    -1,   248,    -1,   249,
      -1,   250,    -1,   251,    -1,   252,    -1,   253,    -1,   254,
      -1,   255,    -1,   256,    -1,   257,    -1,   258,    -1,   259,
      -1,   263,    -1,   264,    -1,   265,    -1,   268,    -1,   269,
      -1,   271,    -1,   274,    -1,   276,    -1,   277,    -1,   278,
      -1,   280,    -1,   281,    -1,   284,    -1,   285,    -1,   286,
      -1,   289,    -1,   292,    -1,   295,    -1,   296,    -1,   297,
      -1,   298,    -1,   299,    -1,   300,    -1,   301,    -1,   302,
      -1,   303,    -1,   304,    -1,   306,    -1,   307,    -1,   309,
      -1,   310,    -1,   312,    -1,   313,    -1,   314,    -1,   316,
      -1,   317,    -1,   318,    -1,   319,    -1,   320,    -1,   321,
      -1,   323,    -1,   324,    -1,   325,    -1,   327,    -1,   328,
      -1,   329,    -1,   330,    -1,   332,    -1,   333,    -1,   334,
      -1,   335,    -1,   336,    -1,   337,    -1,   338,    -1,   339,
      -1,   340,    -1,   341,    -1,   342,    -1,   343,    -1,   344,
      -1,   346,    -1,   347,    -1,   349,    -1,   350,    -1,   351,
      -1,   353,    -1,   354,    -1,   355,    -1,   356,    -1,   357,
      -1,   358,    -1,   359,    -1,   360,    -1,   361,    -1,   362,
      -1,   363,    -1,   365,    -1,   366,    -1,   367,    -1,   368,
      -1,   369,    -1,   371,    -1,   373,    -1,   374,    -1,   375,
      -1,   377,    -1,   378,    -1,   380,    -1,   382,    -1,   383,
      -1,   384,    -1,   385,    -1,   386,    -1,   387,    -1,   388,
      -1,   389,    -1,   390,    -1,   391,    -1,   392,    -1,   394,
      -1,   396,    -1,   398,    -1,   399,    -1,   401,    -1,   403,
      -1,   404,    -1,   405,    -1,   406,    -1,   407,    -1,   413,
      -1,   414,    -1,   416,    -1,   419,    -1,   420,    -1,   422,
      -1,   423,    -1,   424,    -1,   425,    -1,   426,    -1,   429,
      -1,   430,    -1,   431,    -1,   432,    -1,   433,    -1,   436,
      -1,   437,    -1,   438,    -1,   439,    -1,   440,    -1,   444,
      -1,   446,    -1,   447,    -1,   448,    -1,   449,    -1,   452,
      -1,   455,    -1,   456,    -1,   457,    -1,   458,    -1,   459,
      -1,   460,    -1,   472,    -1,   473,    -1,   474,    -1,   475,
      -1,    48,    -1,    49,    -1,    51,    -1,    52,    -1,    64,
      -1,    65,    -1,    72,    -1,   112,    -1,   113,    -1,   150,
      -1,   155,    -1,   161,    -1,   178,    -1,   179,    -1,   204,
      -1,   209,    -1,   210,    -1,   212,    -1,   241,    -1,   260,
      -1,   262,    -1,   266,    -1,   273,    -1,   275,    -1,   290,
      -1,   294,    -1,   308,    -1,   311,    -1,   326,    -1,   352,
      -1,   372,    -1,   379,    -1,   393,    -1,   395,    -1,   409,
      -1,   410,    -1,   415,    -1,   417,    -1,   421,    -1,   441,
      -1,   442,    -1,   461,    -1,   462,    -1,   463,    -1,   464,
      -1,   465,    -1,   466,    -1,   467,    -1,   468,    -1,   469,
      -1,   470,    -1,   471,    -1,    44,    -1,    50,    -1,    74,
      -1,    82,    -1,    94,    -1,   101,    -1,   167,    -1,   169,
      -1,   173,    -1,   189,    -1,   203,    -1,   215,    -1,   216,
      -1,   218,    -1,   227,    -1,   229,    -1,   241,    -1,   261,
      -1,   270,    -1,   291,    -1,   293,    -1,   348,    -1,   376,
      -1,   393,    -1,   402,    -1,   445,    -1,    44,    -1,    50,
      -1,    74,    -1,    82,    -1,    94,    -1,   101,    -1,   167,
      -1,   169,    -1,   173,    -1,   189,    -1,   203,    -1,   215,
      -1,   216,    -1,   218,    -1,   227,    -1,   229,    -1,   261,
      -1,   270,    -1,   291,    -1,   293,    -1,   348,    -1,   376,
      -1,   402,    -1,   421,    -1,   445,    -1,    48,    -1,    49,
      -1,    51,    -1,    52,    -1,    65,    -1,    64,    -1,    72,
      -1,   112,    -1,   113,    -1,   150,    -1,   155,    -1,   161,
      -1,   178,    -1,   179,    -1,   204,    -1,   210,    -1,   212,
      -1,   209,    -1,   241,    -1,   260,    -1,   262,    -1,   266,
      -1,   273,    -1,   275,    -1,   290,    -1,   294,    -1,   308,
      -1,   311,    -1,   326,    -1,   352,    -1,   372,    -1,   379,
      -1,   393,    -1,   395,    -1,   409,    -1,   410,    -1,   415,
      -1,   417,    -1,   421,    -1,   441,    -1,   442,    -1,   461,
      -1,   462,    -1,   463,    -1,   464,    -1,   465,    -1,   466,
      -1,   467,    -1,   468,    -1,   469,    -1,   470,    -1,   471,
      -1,    44,    -1,    50,    -1,    74,    -1,    82,    -1,    94,
      -1,   101,    -1,   167,    -1,   169,    -1,   173,    -1,   189,
      -1,   203,    -1,   215,    -1,   216,    -1,   218,    -1,   227,
      -1,   229,    -1,   241,    -1,   261,    -1,   270,    -1,   291,
      -1,   293,    -1,   348,    -1,   376,    -1,   393,    -1,   402,
      -1,   421,    -1,   445,    -1,    27,    -1,    31,    -1,    32,
      -1,    33,    -1,    34,    -1,    35,    -1,    36,    -1,    37,
      -1,    40,    -1,    53,    -1,    60,    -1,    61,    -1,    67,
      -1,    73,    -1,    75,    -1,    86,    -1,    93,    -1,    98,
      -1,    99,    -1,   100,    -1,   102,    -1,   103,    -1,   104,
      -1,   115,    -1,   117,    -1,   124,    -1,   130,    -1,   131,
      -1,   137,    -1,   141,    -1,   145,    -1,   156,    -1,   158,
      -1,   163,    -1,   165,    -1,   168,    -1,   175,    -1,   177,
      -1,   181,    -1,   194,    -1,   201,    -1,   211,    -1,   213,
      -1,   224,    -1,   225,    -1,   230,    -1,   234,    -1,   235,
      -1,   267,    -1,   272,    -1,   279,    -1,   282,    -1,   283,
      -1,   287,    -1,   288,    -1,   305,    -1,   315,    -1,   322,
      -1,   331,    -1,   345,    -1,   364,    -1,   370,    -1,   381,
      -1,   397,    -1,   400,    -1,   408,    -1,   411,    -1,   412,
      -1,   418,    -1,   427,    -1,   428,    -1,   434,    -1,   435,
      -1,   443,    -1,   450,    -1,   451,    -1,   453,    -1,   454,
      -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,   465,   465,   481,   493,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   537,
       9,    18,    27,    36,    45,    54,    63,    72,    85,    87,
      93,    94,    99,   103,   107,   118,   126,   130,   139,   148,
     157,   166,   175,   184,   192,   200,   209,   218,   227,   236,
     253,   262,   271,   280,   290,   303,   318,   327,   335,   350,
     358,   368,   378,   385,   392,   400,   407,   418,   419,   424,
     428,   433,   438,   446,   447,   452,   456,   457,   458,     7,
      20,     7,    14,    22,     7,    16,    25,    34,    43,    52,
       9,    16,    26,    33,    44,    45,    50,    51,    52,    57,
      58,    59,    60,    61,    65,    66,    67,    72,    73,    78,
      82,    90,    91,    96,    97,    98,   104,   109,   117,   118,
       7,    16,     9,    19,     8,    21,    27,    34,    40,    47,
      57,    61,    70,    79,    88,    95,    96,   101,   113,   118,
     143,   153,   163,   169,   180,   191,   206,   207,   213,   214,
     219,   220,   226,   227,   231,   232,   237,   239,   245,   246,
     250,   251,   256,     6,    15,    25,    35,    45,    55,    65,
      75,    85,    95,   106,   117,   127,   140,   141,     9,    17,
      29,    30,    34,    35,    36,    41,    42,    43,    48,    52,
      56,    60,    64,    68,    72,    76,    80,    84,    88,    92,
      97,   101,   105,   112,   113,   117,   118,   119,     7,    21,
      36,    56,    57,    84,    85,    86,    87,    88,    89,    93,
      94,    99,   104,   105,   106,   107,   108,   113,   120,   121,
     122,   139,   146,   153,   163,   173,   185,   193,   202,   211,
     230,   237,   242,   244,   246,   248,   251,   256,   257,   261,
     262,   263,   264,   269,   273,   274,   279,   286,   291,   292,
     293,   294,   295,   296,   297,   298,   304,   305,   309,   314,
     321,   328,   335,   347,   348,   349,   350,   354,   359,   360,
     361,   366,   371,   372,   373,   374,   375,   376,   381,   404,
     408,   415,   416,   420,   424,   425,   426,   430,   434,   442,
     443,   448,   449,   453,   461,   462,   467,   468,   472,   477,
     481,   485,   490,   498,   499,   503,   504,   510,   521,   534,
     548,   562,   576,   590,   613,   617,   624,   628,   636,   641,
     648,   658,   659,   660,   661,   662,   669,   676,   677,   682,
     683,     9,    19,    32,    33,     3,    10,    17,    24,    31,
      38,    45,    55,    55,    57,    58,     2,     7,    14,    24,
      25,    32,     8,    33,    62,    66,    67,    72,    73,    78,
      79,    83,    84,    89,    90,    11,    24,    41,    42,    43,
      48,     7,    13,    19,    25,     2,     9,    15,    21,    28,
      35,    45,    46,    47,     8,    21,    34,    52,    74,    75,
      76,    77,     8,    22,    36,    48,    56,    70,    71,    72,
      73,    74,    87,    88,    93,    94,    98,    99,     6,    10,
      16,    22,    28,    38,    39,    47,    58,    70,    78,    86,
      93,   103,   105,   111,   115,   119,   134,   141,   142,   143,
     147,   148,     1,    30,    53,    54,    59,    63,    68,    72,
      80,    81,    85,    86,    91,    92,    96,    97,   102,   103,
     104,   105,   106,   111,   119,   123,   128,   129,   134,   138,
     143,   147,   151,   155,   159,   163,   167,   171,   175,   179,
     183,   187,   191,   195,   203,   209,   210,   211,   216,   220,
       7,    18,    19,    23,    27,     5,    11,     7,    18,    19,
      23,    24,    25,    26,     7,    47,    48,    52,    53,    68,
      69,    76,    84,    92,   100,   108,   116,   127,   128,   155,
     171,   188,   189,   208,   212,   216,   233,   240,   247,   257,
     258,   261,   273,   284,   292,   297,   302,   307,   312,   320,
     328,   333,   338,   345,   346,   350,   351,   352,   359,   360,
     364,   365,   369,   370,   371,   375,   376,   380,   384,   385,
     388,   397,   408,   409,   410,   413,   414,   415,   419,   420,
     421,   422,   426,   427,   431,   433,   449,   451,   456,   459,
     467,   471,   475,   479,   483,   487,   494,   499,   506,   507,
     511,   515,   519,   523,   530,   537,   538,   543,   544,   548,
     549,   554,   556,   558,   563,   583,   584,   586,   591,   592,
     596,   597,   600,   601,   626,   627,   631,   632,   636,   637,
     638,   639,   640,   644,   657,   664,   671,   678,   679,   683,
     684,   688,   689,   693,   694,   698,   699,   703,   704,   708,
     719,   720,   721,   722,   726,   727,   732,   733,   734,   743,
     749,   767,   768,   772,   773,   779,   785,   793,   801,   810,
     819,   823,   849,   853,   866,   880,   895,   907,   923,   929,
     934,   940,   947,   948,   956,   960,   964,   970,   977,   982,
     983,   984,   985,   989,   990,  1002,  1003,  1008,  1015,  1022,
    1029,  1061,  1072,  1085,  1090,  1091,  1094,  1095,  1098,  1099,
    1104,  1105,  1110,  1114,  1120,  1141,  1149,  1162,  1165,  1169,
    1169,  1171,  1176,  1183,  1188,  1194,  1199,  1205,  1211,  1220,
    1222,  1225,  1229,  1230,  1231,  1232,  1233,  1234,  1239,  1259,
    1260,  1261,  1262,  1273,  1287,  1288,  1294,  1299,  1304,  1309,
    1314,  1319,  1324,  1329,  1335,  1341,  1347,  1354,  1376,  1385,
    1389,  1397,  1401,  1409,  1421,  1442,  1446,  1452,  1456,  1469,
    1477,  1487,  1489,  1491,  1493,  1495,  1497,  1502,  1503,  1510,
    1519,  1527,  1536,  1547,  1555,  1556,  1557,  1561,  1561,  1564,
    1564,  1567,  1567,  1570,  1570,  1573,  1573,  1576,  1576,  1579,
    1579,  1582,  1582,  1585,  1587,  1589,  1591,  1593,  1595,  1597,
    1599,  1601,  1606,  1611,  1617,  1624,  1629,  1635,  1641,  1672,
    1674,  1676,  1684,  1699,  1701,  1703,  1705,  1707,  1709,  1711,
    1713,  1715,  1717,  1719,  1721,  1723,  1725,  1728,  1730,  1732,
    1735,  1737,  1739,  1741,  1744,  1749,  1754,  1761,  1766,  1773,
    1778,  1786,  1791,  1800,  1808,  1816,  1824,  1842,  1850,  1858,
    1866,  1874,  1882,  1886,  1890,  1894,  1902,  1910,  1926,  1934,
    1942,  1950,  1958,  1966,  1974,  1978,  1982,  1986,  1990,  1998,
    2006,  2014,  2022,  2042,  2064,  2075,  2082,  2096,  2112,  2114,
    2116,  2118,  2120,  2122,  2124,  2126,  2128,  2130,  2132,  2134,
    2136,  2138,  2140,  2142,  2144,  2146,  2148,  2150,  2154,  2158,
    2162,  2176,  2177,  2178,  2185,  2197,  2212,  2224,  2226,  2238,
    2249,  2273,  2284,  2293,  2297,  2304,  2312,  2320,  2331,  2339,
    2367,  2402,  2413,  2414,  2421,  2427,  2431,  2435,  2439,  2443,
    2447,  2451,  2455,  2459,  2463,  2467,  2471,  2475,  2479,  2483,
    2487,  2489,  2491,  2495,  2504,  2509,  2516,  2531,  2538,  2542,
    2546,  2550,  2554,  2568,  2569,  2573,  2574,  2582,  2583,  2587,
    2588,  2593,  2601,  2603,  2617,  2620,  2647,  2648,  2651,  2652,
    2663,  2669,  2676,  2685,  2702,  2747,  2755,  2763,  2771,  2779,
    2800,  2801,  2804,  2805,  2809,  2819,  2820,  2822,  2823,  2824,
    2827,  2828,  2831,  2832,  2833,  2834,  2835,  2836,  2837,  2838,
    2839,  2840,  2841,  2842,  2845,  2847,  2852,  2854,  2859,  2861,
    2863,  2865,  2867,  2869,  2871,  2873,  2887,  2889,  2893,  2897,
    2904,  2909,  2916,  2920,  2926,  2930,  2939,  2950,  2951,  2955,
    2959,  2966,  2967,  2968,  2969,  2970,  2971,  2972,  2973,  2974,
    2975,  2985,  2989,  2996,  3003,  3004,  3020,  3024,  3029,  3033,
    3048,  3053,  3057,  3060,  3063,  3064,  3065,  3068,  3075,  3085,
    3099,  3100,  3104,  3115,  3116,  3119,  3120,  3123,  3127,  3134,
    3138,  3146,  3157,  3158,  3162,  3163,  3167,  3168,  3171,  3172,
    3182,  3183,  3187,  3188,  3191,  3207,  3215,  3223,  3238,  3256,
    3257,  3260,  3261,  3264,  3268,  3269,  3272,  3273,  3274,  3284,
    3285,  3296,  3300,  3327,  3329,  3334,  3336,  3346,  3349,  3360,
    3364,  3368,  3380,  3384,  3393,  3400,  3438,  3442,  3446,  3450,
    3454,  3458,  3462,  3468,  3469,  3485,  3486,  3487,  3490,  3491,
    3497,  3498,  3499,  3502,  3503,  3504,  3507,  3508,  3509,  3512,
    3513,  3516,  3518,  3523,  3524,  3527,  3535,  3536,  3537,  3538,
    3541,  3542,     7,    21,    25,    32,    43,    44,    50,    51,
       7,    16,    34,    41,    46,    47,    48,    49,     9,    19,
      29,    39,    49,    59,    69,    79,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   112,   113,   114,   115,   116,   117,   118,   123,   124,
     129,   130,   131,   136,   137,   138,   141,   142,     7,    17,
      18,    21,    23,     7,    14,    31,    51,    52,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
      56,    57,    57,    57,    57,    57,    57,    57,    57,    57,
      57,    57,    57,    57,    57,    57,    57,    57,    57,    57,
      57,    57,    57,    57,    57,    57,    57,    57,    57,    57,
      57,    57,    57,    57,    57,    57,    57,    57,    57,    57,
      57,    57,    57,    57,    57,    57,    57,    57,    57,    57,
      57,    57,    57,    58,    58,    58,    58,    58,    58,    58,
      58,    58,    58,    58,    58,    58,    58,    58,    58,    58,
      58,    58,    58,    58,    58,    58,    58,    58,    58,    59,
      59,    59,    59,    59,    59,    59,    59,    59,    59,    59,
      59,    59,    59,    59,    59,    59,    59,    59,    59,    59,
      59,    59,    59,    59,    60,    60,    60,    60,    60,    60,
      60,    60,    60,    60,    60,    60,    60,    60,    60,    60,
      60,    60,    60,    60,    60,    60,    60,    60,    60,    60,
      60,    60,    60,    60,    60,    60,    60,    60,    60,    60,
      60,    60,    60,    60,    60,    60,    60,    60,    60,    60,
      60,    60,    60,    60,    60,    60,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "IDENT", "FCONST", "SCONST", "BCONST",
  "XCONST", "Op", "ICONST", "PARAM", "TYPECAST", "DOT_DOT", "COLON_EQUALS",
  "EQUALS_GREATER", "LAMBDA_ARROW", "LESS_EQUALS", "GREATER_EQUALS",
  "NOT_EQUALS", "ABORT_P", "ABSOLUTE_P", "ACCESS", "ACTION", "ADD_P",
  "ADMIN", "AFTER", "AGGREGATE", "ALL", "ALSO", "ALTER", "ALWAYS",
  "ANALYSE", "ANALYZE", "AND", "ANY", "ARRAY", "AS", "ASC_P", "ASSERTION",
  "ASSIGNMENT", "ASYMMETRIC", "AT", "ATTACH", "ATTRIBUTE", "AUTHORIZATION",
  "BACKWARD", "BEFORE", "BEGIN_P", "BETWEEN", "BIGINT", "BINARY", "BIT",
  "BOOLEAN_P", "BOTH", "BY", "CACHE", "CALL_P", "CALLED", "CASCADE",
  "CASCADED", "CASE", "CAST", "CATALOG_P", "CHAIN", "CHAR_P", "CHARACTER",
  "CHARACTERISTICS", "CHECK_P", "CHECKPOINT", "CLASS", "CLOSE", "CLUSTER",
  "COALESCE", "COLLATE", "COLLATION", "COLUMN", "COLUMNS", "COMMENT",
  "COMMENTS", "COMMIT", "COMMITTED", "COMPRESSION", "CONCURRENTLY",
  "CONFIGURATION", "CONFLICT", "CONNECTION", "CONSTRAINT", "CONSTRAINTS",
  "CONTENT_P", "CONTINUE_P", "CONVERSION_P", "COPY", "COST", "CREATE_P",
  "CROSS", "CSV", "CUBE", "CURRENT_P", "CURRENT_CATALOG", "CURRENT_DATE",
  "CURRENT_ROLE", "CURRENT_SCHEMA", "CURRENT_TIME", "CURRENT_TIMESTAMP",
  "CURRENT_USER", "CURSOR", "CYCLE", "DATA_P", "DATABASE", "DAY_P",
  "DAYS_P", "DEALLOCATE", "DEC", "DECIMAL_P", "DECLARE", "DEFAULT",
  "DEFAULTS", "DEFERRABLE", "DEFERRED", "DEFINER", "DELETE_P", "DELIMITER",
  "DELIMITERS", "DEPENDS", "DESC_P", "DESCRIBE", "DETACH", "DICTIONARY",
  "DISABLE_P", "DISCARD", "DISTINCT", "DO", "DOCUMENT_P", "DOMAIN_P",
  "DOUBLE_P", "DROP", "EACH", "ELSE", "ENABLE_P", "ENCODING", "ENCRYPTED",
  "END_P", "ENUM_P", "ESCAPE", "EVENT", "EXCEPT", "EXCLUDE", "EXCLUDING",
  "EXCLUSIVE", "EXECUTE", "EXISTS", "EXPLAIN", "EXPORT_P", "EXTENSION",
  "EXTERNAL", "EXTRACT", "FALSE_P", "FAMILY", "FETCH", "FILTER", "FIRST_P",
  "FLOAT_P", "FOLLOWING", "FOR", "FORCE", "FOREIGN", "FORWARD", "FREEZE",
  "FROM", "FULL", "FUNCTION", "FUNCTIONS", "GENERATED", "GLOB", "GLOBAL",
  "GRANT", "GRANTED", "GROUP_P", "GROUPING", "GROUPING_ID", "HANDLER",
  "HAVING", "HEADER_P", "HOLD", "HOUR_P", "HOURS_P", "IDENTITY_P", "IF_P",
  "IGNORE_P", "ILIKE", "IMMEDIATE", "IMMUTABLE", "IMPLICIT_P", "IMPORT_P",
  "IN_P", "INCLUDING", "INCREMENT", "INDEX", "INDEXES", "INHERIT",
  "INHERITS", "INITIALLY", "INLINE_P", "INNER_P", "INOUT", "INPUT_P",
  "INSENSITIVE", "INSERT", "INSTEAD", "INT_P", "INTEGER", "INTERSECT",
  "INTERVAL", "INTO", "INVOKER", "IS", "ISNULL", "ISOLATION", "JOIN",
  "KEY", "LABEL", "LANGUAGE", "LARGE_P", "LAST_P", "LATERAL_P", "LEADING",
  "LEAKPROOF", "LEFT", "LEVEL", "LIKE", "LIMIT", "LISTEN", "LOAD", "LOCAL",
  "LOCALTIME", "LOCALTIMESTAMP", "LOCATION", "LOCK_P", "LOCKED", "LOGGED",
  "MACRO", "MAP", "MAPPING", "MATCH", "MATERIALIZED", "MAXVALUE", "METHOD",
  "MICROSECOND_P", "MICROSECONDS_P", "MILLISECOND_P", "MILLISECONDS_P",
  "MINUTE_P", "MINUTES_P", "MINVALUE", "MODE", "MONTH_P", "MONTHS_P",
  "MOVE", "NAME_P", "NAMES", "NATIONAL", "NATURAL", "NCHAR", "NEW", "NEXT",
  "NO", "NONE", "NOT", "NOTHING", "NOTIFY", "NOTNULL", "NOWAIT", "NULL_P",
  "NULLIF", "NULLS_P", "NUMERIC", "OBJECT_P", "OF", "OFF", "OFFSET",
  "OIDS", "OLD", "ON", "ONLY", "OPERATOR", "OPTION", "OPTIONS", "OR",
  "ORDER", "ORDINALITY", "OUT_P", "OUTER_P", "OVER", "OVERLAPS", "OVERLAY",
  "OVERRIDING", "OWNED", "OWNER", "PARALLEL", "PARSER", "PARTIAL",
  "PARTITION", "PASSING", "PASSWORD", "PERCENT", "PLACING", "PLANS",
  "POLICY", "POSITION", "PRAGMA_P", "PRECEDING", "PRECISION", "PREPARE",
  "PREPARED", "PRESERVE", "PRIMARY", "PRIOR", "PRIVILEGES", "PROCEDURAL",
  "PROCEDURE", "PROGRAM", "PUBLICATION", "QUALIFY", "QUOTE", "RANGE",
  "READ_P", "REAL", "REASSIGN", "RECHECK", "RECURSIVE", "REF",
  "REFERENCES", "REFERENCING", "REFRESH", "REINDEX", "RELATIVE_P",
  "RELEASE", "RENAME", "REPEATABLE", "REPLACE", "REPLICA", "RESET",
  "RESPECT_P", "RESTART", "RESTRICT", "RETURNING", "RETURNS", "REVOKE",
  "RIGHT", "ROLE", "ROLLBACK", "ROLLUP", "ROW", "ROWS", "RULE", "SAMPLE",
  "SAVEPOINT", "SCHEMA", "SCHEMAS", "SCROLL", "SEARCH", "SECOND_P",
  "SECONDS_P", "SECURITY", "SELECT", "SEQUENCE", "SEQUENCES",
  "SERIALIZABLE", "SERVER", "SESSION", "SESSION_USER", "SET", "SETOF",
  "SETS", "SHARE", "SHOW", "SIMILAR", "SIMPLE", "SKIP", "SMALLINT",
  "SNAPSHOT", "SOME", "SQL_P", "STABLE", "STANDALONE_P", "START",
  "STATEMENT", "STATISTICS", "STDIN", "STDOUT", "STORAGE", "STRICT_P",
  "STRIP_P", "STRUCT", "SUBSCRIPTION", "SUBSTRING", "SUMMARIZE",
  "SYMMETRIC", "SYSID", "SYSTEM_P", "TABLE", "TABLES", "TABLESAMPLE",
  "TABLESPACE", "TEMP", "TEMPLATE", "TEMPORARY", "TEXT_P", "THEN", "TIME",
  "TIMESTAMP", "TO", "TRAILING", "TRANSACTION", "TRANSFORM", "TREAT",
  "TRIGGER", "TRIM", "TRUE_P", "TRUNCATE", "TRUSTED", "TRY_CAST", "TYPE_P",
  "TYPES_P", "UNBOUNDED", "UNCOMMITTED", "UNENCRYPTED", "UNION", "UNIQUE",
  "UNKNOWN", "UNLISTEN", "UNLOGGED", "UNTIL", "UPDATE", "USER", "USING",
  "VACUUM", "VALID", "VALIDATE", "VALIDATOR", "VALUE_P", "VALUES",
  "VARCHAR", "VARIADIC", "VARYING", "VERBOSE", "VERSION_P", "VIEW",
  "VIEWS", "VOLATILE", "WHEN", "WHERE", "WHITESPACE_P", "WINDOW", "WITH",
  "WITHIN", "WITHOUT", "WORK", "WRAPPER", "WRITE_P", "XML_P",
  "XMLATTRIBUTES", "XMLCONCAT", "XMLELEMENT", "XMLEXISTS", "XMLFOREST",
  "XMLNAMESPACES", "XMLPARSE", "XMLPI", "XMLROOT", "XMLSERIALIZE",
  "XMLTABLE", "YEAR_P", "YEARS_P", "YES_P", "ZONE", "NOT_LA", "NULLS_LA",
  "WITH_LA", "'<'", "'>'", "'='", "POSTFIXOP", "'+'", "'-'", "'*'", "'/'",
  "'%'", "'^'", "UMINUS", "'['", "']'", "'('", "')'", "'.'", "';'", "','",
  "'{'", "'}'", "'#'", "'?'", "':'", "$accept", "stmtblock", "stmtmulti",
  "stmt", "AlterTableStmt", "alter_identity_column_option_list",
  "alter_column_default", "alter_identity_column_option",
  "alter_generic_option_list", "alter_table_cmd", "alter_using",
  "alter_generic_option_elem", "alter_table_cmds", "alter_generic_options",
  "opt_set_data", "ExportStmt", "ImportStmt", "PragmaStmt",
  "AlterObjectSchemaStmt", "ExplainStmt", "opt_verbose",
  "explain_option_arg", "ExplainableStmt", "NonReservedWord",
  "NonReservedWord_or_Sconst", "explain_option_list", "analyze_keyword",
  "opt_boolean_or_string", "explain_option_elem", "explain_option_name",
  "LoadStmt", "file_name", "AnalyzeStmt", "InsertStmt", "insert_rest",
  "insert_target", "opt_conf_expr", "opt_with_clause",
  "insert_column_item", "set_clause", "opt_on_conflict", "index_elem",
  "returning_clause", "override_kind", "set_target_list", "opt_collate",
  "opt_class", "insert_column_list", "set_clause_list", "index_params",
  "set_target", "RenameStmt", "opt_column", "AlterSeqStmt", "SeqOptList",
  "opt_with", "NumericOnly", "SeqOptElem", "opt_by", "SignedIconst",
  "CreateStmt", "ConstraintAttributeSpec", "def_arg",
  "OptParenthesizedSeqOptList", "generic_option_arg", "key_action",
  "ColConstraint", "ColConstraintElem", "generic_option_elem",
  "key_update", "key_actions", "create_generic_options", "OnCommitOption",
  "reloptions", "opt_no_inherit", "TableConstraint", "TableLikeOption",
  "reloption_list", "ExistingIndex", "ConstraintAttr", "OptWith",
  "definition", "TableLikeOptionList", "generic_option_name",
  "ConstraintAttributeElem", "columnDef", "generic_option_list",
  "def_list", "index_name", "TableElement", "def_elem", "opt_definition",
  "OptTableElementList", "columnElem", "opt_column_list", "ColQualList",
  "key_delete", "reloption_elem", "columnList", "func_type",
  "ConstraintElem", "TableElementList", "key_match", "TableLikeClause",
  "OptTemp", "generated_when", "CreateSeqStmt", "OptSeqOptList",
  "VariableShowStmt", "show_or_describe", "var_name", "VariableResetStmt",
  "generic_reset", "reset_rest", "IndexStmt", "access_method",
  "access_method_clause", "opt_concurrently", "opt_index_name",
  "opt_reloptions", "opt_unique", "CreateAsStmt", "opt_with_data",
  "create_as_target", "DeallocateStmt", "TransactionStmt",
  "opt_transaction", "ViewStmt", "opt_check_option", "VacuumStmt",
  "vacuum_option_elem", "opt_full", "vacuum_option_list", "opt_freeze",
  "CallStmt", "VariableSetStmt", "set_rest", "generic_set", "var_value",
  "zone_value", "var_list", "CopyStmt", "copy_from", "copy_delimiter",
  "copy_generic_opt_arg_list", "opt_using", "opt_as", "opt_program",
  "copy_options", "copy_generic_opt_arg", "copy_generic_opt_elem",
  "opt_oids", "copy_opt_list", "opt_binary", "copy_opt_item",
  "copy_generic_opt_arg_list_item", "copy_file_name",
  "copy_generic_opt_list", "CreateFunctionStmt", "macro_alias",
  "param_list", "CheckPointStmt", "PrepareStmt", "prep_type_clause",
  "PreparableStmt", "UpdateStmt", "SelectStmt", "select_with_parens",
  "select_no_parens", "select_clause", "simple_select", "with_clause",
  "cte_list", "common_table_expr", "into_clause", "OptTempTableName",
  "opt_table", "all_or_distinct", "distinct_clause", "opt_all_clause",
  "opt_ignore_nulls", "opt_sort_clause", "sort_clause", "sortby_list",
  "sortby", "opt_asc_desc", "opt_nulls_order", "select_limit",
  "opt_select_limit", "limit_clause", "offset_clause", "sample_count",
  "sample_clause", "opt_sample_func", "tablesample_entry",
  "tablesample_clause", "opt_tablesample_clause", "opt_repeatable_clause",
  "select_limit_value", "select_offset_value", "select_fetch_first_value",
  "I_or_F_const", "row_or_rows", "first_or_next", "group_clause",
  "group_by_list", "group_by_item", "empty_grouping_set", "rollup_clause",
  "cube_clause", "grouping_sets_clause", "grouping_or_grouping_id",
  "having_clause", "qualify_clause", "for_locking_clause",
  "opt_for_locking_clause", "for_locking_items", "for_locking_item",
  "for_locking_strength", "locked_rels_list", "opt_nowait_or_skip",
  "values_clause", "from_clause", "from_list", "table_ref", "joined_table",
  "alias_clause", "opt_alias_clause", "func_alias_clause", "join_type",
  "join_outer", "join_qual", "relation_expr", "func_table",
  "rowsfrom_item", "rowsfrom_list", "opt_col_def_list", "opt_ordinality",
  "where_clause", "TableFuncElementList", "TableFuncElement",
  "opt_collate_clause", "colid_type_list", "RowOrStruct", "Typename",
  "opt_array_bounds", "SimpleTypename", "ConstTypename", "GenericType",
  "opt_type_modifiers", "Numeric", "opt_float", "Bit", "ConstBit",
  "BitWithLength", "BitWithoutLength", "Character", "ConstCharacter",
  "CharacterWithLength", "CharacterWithoutLength", "character",
  "opt_varying", "ConstDatetime", "ConstInterval", "opt_timezone",
  "year_keyword", "month_keyword", "day_keyword", "hour_keyword",
  "minute_keyword", "second_keyword", "millisecond_keyword",
  "microsecond_keyword", "opt_interval", "a_expr", "b_expr", "c_expr",
  "func_application", "func_expr", "func_expr_windowless",
  "func_expr_common_subexpr", "within_group_clause", "filter_clause",
  "window_clause", "window_definition_list", "window_definition",
  "over_clause", "window_specification", "opt_existing_window_name",
  "opt_partition_clause", "opt_frame_clause", "frame_extent",
  "frame_bound", "qualified_row", "row", "dict_arg", "dict_arguments",
  "sub_type", "all_Op", "MathOp", "qual_Op", "qual_all_Op", "subquery_Op",
  "any_operator", "expr_list", "opt_expr_list", "func_arg_list",
  "func_arg_expr", "type_list", "extract_list", "extract_arg",
  "overlay_list", "overlay_placing", "position_list", "substr_list",
  "substr_from", "substr_for", "trim_list", "in_expr", "case_expr",
  "when_clause_list", "when_clause", "case_default", "case_arg",
  "columnref", "indirection_el", "opt_slice_bound", "indirection",
  "opt_indirection", "opt_asymmetric", "opt_target_list", "target_list",
  "target_el", "except_list", "opt_except_list", "replace_list_el",
  "replace_list", "opt_replace_list", "qualified_name_list",
  "qualified_name", "name_list", "name", "attr_name", "func_name",
  "AexprConst", "Iconst", "Sconst", "ColId", "ColIdOrString",
  "type_function_name", "function_name_token", "type_name_token",
  "any_name", "attrs", "opt_name_list", "param_name", "ColLabel",
  "ColLabelOrString", "DeleteStmt", "relation_expr_opt_alias",
  "where_or_current_clause", "using_clause", "CreateSchemaStmt",
  "OptSchemaEltList", "schema_stmt", "DropStmt", "drop_type_any_name",
  "drop_type_name", "any_name_list", "opt_drop_behavior",
  "drop_type_name_on_any_name", "type_name_list", "CreateEnumStmt",
  "opt_enum_val_list", "enum_val_list", "ExecuteStmt",
  "execute_param_clause", "unreserved_keyword", "col_name_keyword",
  "func_name_keyword", "type_name_keyword", "other_keyword",
  "type_func_name_keyword", "reserved_keyword", 0
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,    60,
      62,    61,   734,    43,    45,    42,    47,    37,    94,   735,
      91,    93,    40,    41,    46,    59,    44,   123,   125,    35,
      63,    58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   502,   503,   504,   504,   505,   505,   505,   505,   505,
     505,   505,   505,   505,   505,   505,   505,   505,   505,   505,
     505,   505,   505,   505,   505,   505,   505,   505,   505,   505,
     505,   505,   505,   505,   505,   505,   505,   505,   505,   505,
     506,   506,   506,   506,   506,   506,   506,   506,   507,   507,
     508,   508,   509,   509,   509,   509,   510,   510,   511,   511,
     511,   511,   511,   511,   511,   511,   511,   511,   511,   511,
     511,   511,   511,   511,   511,   511,   511,   511,   511,   511,
     511,   511,   511,   511,   511,   511,   511,   512,   512,   513,
     513,   513,   513,   514,   514,   515,   516,   516,   516,   517,
     518,   519,   519,   519,   520,   520,   520,   520,   520,   520,
     521,   521,   521,   521,   522,   522,   523,   523,   523,   524,
     524,   524,   524,   524,   525,   525,   525,   526,   526,   527,
     527,   528,   528,   529,   529,   529,   529,   530,   531,   531,
     532,   533,   534,   534,   535,   536,   536,   536,   536,   536,
     537,   537,   538,   538,   538,   539,   539,   540,   541,   541,
     542,   542,   542,   543,   543,   543,   544,   544,   545,   545,
     546,   546,   547,   547,   548,   548,   549,   549,   550,   550,
     551,   551,   552,   553,   553,   553,   553,   553,   553,   553,
     553,   553,   553,   553,   553,   553,   554,   554,   555,   555,
     556,   556,   557,   557,   557,   558,   558,   558,   558,   559,
     559,   559,   559,   559,   559,   559,   559,   559,   559,   559,
     559,   559,   559,   560,   560,   561,   561,   561,   562,   562,
     562,   563,   563,   564,   564,   564,   564,   564,   564,   565,
     565,   566,   567,   567,   567,   567,   567,   568,   568,   568,
     568,   569,   569,   569,   569,   569,   569,   569,   569,   569,
     570,   571,   572,   572,   572,   572,   572,   573,   573,   574,
     574,   574,   574,   575,   576,   576,   577,   577,   578,   578,
     578,   578,   578,   578,   578,   578,   579,   579,   580,   581,
     581,   581,   581,   582,   582,   582,   582,   583,   584,   584,
     584,   585,   586,   586,   586,   586,   586,   586,   587,   588,
     588,   589,   589,   590,   591,   591,   591,   592,   592,   593,
     593,   594,   594,   595,   596,   596,   597,   597,   598,   599,
     599,   599,   599,   600,   600,   601,   601,   601,   602,   602,
     602,   602,   602,   602,   603,   603,   604,   604,   604,   604,
     605,   606,   606,   606,   606,   606,   606,   606,   606,   607,
     607,   608,   608,   609,   609,   610,   610,   610,   610,   610,
     610,   610,   611,   611,   612,   612,   613,   614,   614,   615,
     615,   615,   616,   616,   617,   618,   618,   619,   619,   620,
     620,   621,   621,   622,   622,   623,   623,   624,   624,   624,
     625,   626,   626,   626,   626,   627,   627,   627,   627,   627,
     627,   628,   628,   628,   629,   629,   629,   629,   630,   630,
     630,   630,   631,   631,   631,   631,   631,   632,   632,   632,
     632,   632,   633,   633,   634,   634,   635,   635,   636,   637,
     637,   637,   637,   638,   638,   638,   638,   639,   639,   639,
     639,   640,   640,   641,   641,   641,   641,   641,   641,   641,
     642,   642,   643,   643,   644,   644,   645,   645,   646,   646,
     647,   647,   648,   648,   649,   649,   650,   650,   651,   651,
     651,   651,   651,   652,   653,   653,   654,   654,   655,   655,
     656,   656,   656,   656,   656,   656,   656,   656,   656,   656,
     656,   656,   656,   656,   657,   658,   658,   658,   659,   659,
     660,   661,   661,   662,   662,   663,   663,   664,   665,   665,
     666,   666,   666,   666,   667,   668,   668,   669,   669,   670,
     670,   670,   670,   670,   670,   670,   670,   671,   671,   672,
     672,   672,   672,   672,   672,   672,   673,   673,   673,   674,
     674,   675,   676,   676,   677,   677,   677,   677,   677,   677,
     677,   677,   677,   678,   678,   679,   679,   679,   680,   680,
     681,   681,   682,   682,   682,   683,   683,   684,   685,   685,
     686,   686,   687,   687,   687,   688,   688,   688,   689,   689,
     689,   689,   690,   690,   691,   691,   691,   691,   692,   692,
     693,   693,   693,   693,   693,   693,   694,   694,   695,   695,
     696,   696,   696,   696,   697,   698,   698,   699,   699,   700,
     700,   700,   700,   700,   701,   702,   702,   702,   703,   703,
     704,   704,   705,   705,   706,   706,   707,   707,   708,   708,
     708,   708,   708,   709,   710,   711,   712,   713,   713,   714,
     714,   715,   715,   716,   716,   717,   717,   718,   718,   719,
     720,   720,   720,   720,   721,   721,   722,   722,   722,   723,
     723,   724,   724,   725,   725,   726,   726,   726,   726,   726,
     726,   726,   727,   727,   727,   727,   727,   727,   728,   728,
     728,   728,   729,   729,   730,   730,   730,   730,   730,   731,
     731,   731,   731,   732,   732,   733,   733,   734,   734,   734,
     734,   735,   735,   736,   737,   737,   738,   738,   739,   739,
     740,   740,   741,   741,   742,   743,   743,   744,   744,   745,
     745,   746,   746,   746,   746,   746,   746,   746,   746,   747,
     747,   747,   748,   748,   748,   748,   748,   748,   748,   749,
     749,   749,   749,   750,   751,   751,   752,   752,   752,   752,
     752,   752,   752,   752,   752,   752,   752,   753,   753,   754,
     754,   755,   755,   756,   757,   758,   758,   759,   759,   760,
     761,   762,   762,   762,   762,   762,   762,   763,   763,   764,
     764,   764,   764,   765,   766,   766,   766,   767,   767,   768,
     768,   769,   769,   770,   770,   771,   771,   772,   772,   773,
     773,   774,   774,   775,   775,   775,   775,   775,   775,   775,
     775,   775,   775,   775,   775,   775,   775,   775,   775,   776,
     776,   776,   776,   776,   776,   776,   776,   776,   776,   776,
     776,   776,   776,   776,   776,   776,   776,   776,   776,   776,
     776,   776,   776,   776,   776,   776,   776,   776,   776,   776,
     776,   776,   776,   776,   776,   776,   776,   776,   776,   776,
     776,   776,   776,   776,   776,   776,   776,   776,   776,   776,
     776,   776,   776,   776,   776,   776,   776,   776,   776,   776,
     776,   776,   776,   776,   776,   776,   776,   776,   777,   777,
     777,   777,   777,   777,   777,   777,   777,   777,   777,   777,
     777,   777,   777,   777,   777,   777,   777,   777,   777,   777,
     777,   778,   778,   778,   778,   778,   778,   778,   778,   778,
     778,   778,   778,   779,   779,   779,   779,   779,   779,   779,
     780,   780,   781,   781,   782,   782,   782,   782,   782,   782,
     782,   782,   782,   782,   782,   782,   782,   782,   782,   782,
     782,   782,   782,   782,   782,   782,   782,   782,   782,   782,
     782,   782,   782,   783,   783,   784,   784,   785,   785,   786,
     786,   787,   788,   788,   788,   789,   790,   790,   791,   791,
     792,   792,   792,   793,   793,   794,   794,   794,   794,   794,
     795,   795,   796,   796,   797,   798,   798,   799,   799,   799,
     800,   800,   801,   801,   801,   801,   801,   801,   801,   801,
     801,   801,   801,   801,   802,   802,   803,   803,   804,   804,
     804,   804,   804,   804,   804,   804,   805,   805,   806,   806,
     807,   807,   808,   808,   809,   809,   809,   810,   810,   811,
     811,   812,   812,   812,   812,   812,   812,   812,   812,   812,
     812,   813,   813,   814,   815,   815,   816,   816,   816,   816,
     816,   816,   817,   818,   819,   819,   819,   820,   820,   821,
     822,   822,   823,   824,   824,   825,   825,   826,   826,   827,
     827,   827,   828,   828,   829,   829,   830,   830,   831,   831,
     832,   832,   833,   833,   834,   834,   834,   834,   834,   835,
     835,   836,   836,   837,   838,   838,   839,   839,   839,   840,
     840,   841,   841,   842,   842,   843,   844,   845,   845,   846,
     846,   846,   846,   846,   846,   846,   846,   846,   846,   846,
     846,   846,   846,   847,   848,   849,   849,   849,   850,   850,
     851,   851,   851,   852,   852,   852,   853,   853,   853,   854,
     854,   855,   855,   856,   856,   857,   858,   858,   858,   858,
     859,   859,   860,   861,   861,   861,   862,   862,   863,   863,
     864,   864,   865,   865,   866,   866,   866,   866,   867,   867,
     867,   867,   867,   867,   867,   867,   868,   868,   868,   868,
     868,   868,   868,   868,   868,   868,   868,   868,   868,   868,
     868,   869,   869,   869,   869,   869,   869,   869,   870,   870,
     871,   871,   871,   872,   872,   872,   873,   873,   874,   875,
     875,   876,   876,   877,   877,   877,   878,   878,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   880,   880,   880,   880,   880,   880,   880,   880,   880,
     880,   880,   880,   880,   880,   880,   880,   880,   880,   880,
     880,   880,   880,   880,   880,   880,   880,   880,   880,   880,
     880,   880,   880,   880,   880,   880,   880,   880,   880,   880,
     880,   880,   880,   880,   880,   880,   880,   880,   880,   880,
     880,   880,   880,   881,   881,   881,   881,   881,   881,   881,
     881,   881,   881,   881,   881,   881,   881,   881,   881,   881,
     881,   881,   881,   881,   881,   881,   881,   881,   881,   882,
     882,   882,   882,   882,   882,   882,   882,   882,   882,   882,
     882,   882,   882,   882,   882,   882,   882,   882,   882,   882,
     882,   882,   882,   882,   883,   883,   883,   883,   883,   883,
     883,   883,   883,   883,   883,   883,   883,   883,   883,   883,
     883,   883,   883,   883,   883,   883,   883,   883,   883,   883,
     883,   883,   883,   883,   883,   883,   883,   883,   883,   883,
     883,   883,   883,   883,   883,   883,   883,   883,   883,   883,
     883,   883,   883,   883,   883,   883,   884,   884,   884,   884,
     884,   884,   884,   884,   884,   884,   884,   884,   884,   884,
     884,   884,   884,   884,   884,   884,   884,   884,   884,   884,
     884,   884,   884,   885,   885,   885,   885,   885,   885,   885,
     885,   885,   885,   885,   885,   885,   885,   885,   885,   885,
     885,   885,   885,   885,   885,   885,   885,   885,   885,   885,
     885,   885,   885,   885,   885,   885,   885,   885,   885,   885,
     885,   885,   885,   885,   885,   885,   885,   885,   885,   885,
     885,   885,   885,   885,   885,   885,   885,   885,   885,   885,
     885,   885,   885,   885,   885,   885,   885,   885,   885,   885,
     885,   885,   885,   885,   885,   885,   885,   885,   885,   885,
     885
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       4,     6,     4,     6,     4,     6,     4,     6,     1,     2,
       3,     2,     1,     3,     2,     3,     1,     3,     2,     5,
       3,     6,     4,     6,     6,     6,     5,     5,     6,     9,
       4,     5,     7,     6,     4,     8,     4,     2,     4,     3,
       6,     4,     2,     2,     2,     2,     1,     2,     0,     1,
       2,     2,     2,     1,     3,     4,     2,     1,     0,     4,
       3,     2,     4,     5,     6,     8,     6,     8,     6,     8,
       2,     4,     3,     5,     1,     0,     1,     1,     0,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       3,     1,     1,     1,     1,     1,     1,     2,     1,     1,
       2,     1,     2,     4,     7,     1,     4,     4,     7,     2,
       1,     3,     4,     3,     0,     1,     0,     2,     3,     5,
       8,     5,     0,     5,     5,     7,     2,     0,     1,     1,
       1,     3,     2,     0,     1,     0,     1,     3,     1,     3,
       1,     3,     2,     6,     6,     8,     6,     8,     6,     8,
       6,     8,     8,    10,     8,    10,     1,     0,     4,     6,
       1,     2,     1,     1,     0,     1,     2,     2,     1,     2,
       2,     1,     2,     3,     2,     2,     2,     2,     3,     3,
       3,     1,     3,     1,     0,     1,     2,     2,     9,    12,
      11,     0,     2,     1,     1,     1,     1,     1,     1,     3,
       0,     1,     2,     1,     1,     2,     2,     3,     1,     1,
       2,     2,     1,     2,     3,     5,     3,     2,     5,     5,
       2,     3,     1,     1,     2,     2,     0,     4,     0,     3,
       4,     4,     0,     3,     2,     0,     3,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     3,     3,     1,
       2,     2,     2,     2,     2,     2,     0,     3,     3,     3,
       0,     1,     2,     1,     2,     2,     2,     2,     4,     1,
       3,     1,     3,     1,     1,     1,     1,     3,     1,     2,
       0,     1,     0,     1,     3,     0,     2,     0,     3,     3,
       1,     5,     3,     1,     3,     1,     4,     5,     5,     6,
       3,     7,     4,    11,     1,     3,     2,     2,     2,     0,
       3,     1,     1,     2,     2,     2,     2,     1,     0,     1,
       2,     5,     8,     1,     0,     2,     2,     2,     2,     3,
       4,     2,     1,     1,     1,     3,     2,     1,     1,     1,
       2,     3,    13,    16,     1,     2,     0,     1,     0,     1,
       0,     2,     0,     1,     0,     7,    10,     2,     3,     0,
       4,     2,     3,     2,     3,     2,     2,     2,     2,     2,
       2,     1,     1,     0,     9,    11,    12,    14,     3,     4,
       4,     0,     4,     5,     5,     4,     6,     1,     1,     1,
       1,     1,     1,     0,     1,     3,     1,     0,     2,     2,
       3,     3,     3,     1,     3,     3,     2,     3,     3,     3,
       3,     1,     1,     1,     1,     3,     5,     1,     1,     1,
       1,     3,    11,     9,     1,     1,     3,     0,     1,     3,
       1,     0,     1,     0,     1,     0,     1,     3,     1,     1,
       1,     3,     0,     2,     2,     0,     2,     0,     1,     0,
       1,     1,     1,     3,     3,     1,     1,     3,     3,     3,
       3,     4,     3,     2,     1,     1,     1,     1,     1,     3,
       6,     1,     1,     2,     3,     2,     1,     5,     3,     0,
       1,     1,     1,     1,     8,     1,     1,     3,     3,     1,
       2,     4,     4,     2,     3,     5,     5,     1,     1,    11,
      11,     1,     2,     4,     4,     4,     2,     2,     3,     1,
       3,     6,     2,     0,     3,     3,     4,     4,     4,     4,
       3,     2,     1,     1,     0,     1,     1,     0,     1,     5,
       1,     0,     2,     2,     0,     1,     0,     3,     1,     3,
       4,     3,     1,     1,     0,     2,     2,     0,     2,     2,
       1,     1,     1,     0,     2,     4,     5,     4,     2,     3,
       2,     2,     2,     2,     1,     2,     3,     0,     1,     0,
       5,     1,     4,     6,     2,     1,     0,     4,     0,     1,
       1,     2,     2,     2,     1,     1,     2,     2,     1,     1,
       1,     1,     1,     1,     3,     0,     1,     3,     1,     1,
       1,     1,     1,     2,     4,     4,     5,     1,     1,     2,
       0,     2,     0,     1,     3,     1,     0,     1,     2,     3,
       2,     4,     2,     3,     2,     0,     1,     2,     0,     4,
       5,     2,     0,     1,     3,     3,     3,     3,     3,     3,
       1,     4,     3,     4,     5,     4,     5,     4,     5,     2,
       4,     1,     1,     0,     1,     4,     5,     4,     0,     2,
       2,     2,     1,     1,     0,     4,     2,     1,     2,     2,
       4,     2,     6,     2,     1,     3,     4,     0,     2,     0,
       2,     0,     1,     3,     3,     2,     0,     2,     4,     1,
       1,     2,     3,     5,     6,     2,     3,     5,     5,     3,
       4,     0,     1,     1,     1,     1,     1,     2,     4,     1,
       1,     1,     1,     2,     3,     0,     1,     1,     1,     1,
       1,     2,     2,     2,     2,     2,     1,     3,     0,     1,
       1,     1,     1,     5,     2,     1,     1,     1,     1,     4,
       1,     2,     2,     1,     3,     3,     2,     1,     0,     5,
       2,     5,     2,     1,     3,     3,     0,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     3,     3,     3,     3,     3,     3,     3,     0,     1,
       3,     3,     5,     2,     2,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     2,     2,
       3,     3,     2,     2,     3,     3,     5,     4,     6,     3,
       5,     4,     6,     4,     6,     5,     7,     3,     2,     4,
       3,     2,     1,     3,     3,     3,     3,     3,     3,     4,
       3,     4,     3,     4,     5,     6,     6,     7,     6,     7,
       6,     7,     3,     4,     4,     6,     1,     4,     1,     3,
       2,     2,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     2,     2,     5,     6,     6,
       7,     1,     1,     2,     2,     2,     4,     1,     2,     1,
       2,     2,     4,     3,     6,     7,     9,     7,     7,     4,
       4,     1,     1,     1,     5,     1,     1,     4,     1,     4,
       1,     4,     1,     4,     1,     1,     1,     1,     1,     1,
       6,     6,     4,     4,     4,     4,     6,     5,     5,     5,
       4,     6,     4,     5,     0,     5,     0,     2,     0,     1,
       3,     3,     2,     2,     0,     6,     1,     0,     3,     0,
       2,     2,     0,     1,     4,     2,     2,     2,     2,     2,
       4,     3,     1,     5,     3,     1,     3,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     4,     1,     4,     1,     4,
       1,     2,     1,     2,     1,     2,     1,     3,     1,     3,
       1,     0,     1,     3,     1,     3,     3,     1,     3,     3,
       0,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     4,     3,     2,     3,     0,     3,     3,     2,     2,
       1,     0,     2,     2,     3,     2,     1,     1,     3,     5,
       1,     2,     4,     2,     0,     1,     0,     1,     2,     2,
       3,     5,     1,     0,     1,     2,     0,     2,     1,     0,
       1,     0,     1,     3,     3,     2,     1,     3,     5,     4,
       2,     1,     0,     3,     1,     3,     4,     2,     0,     1,
       3,     1,     2,     1,     3,     1,     1,     1,     2,     1,
       1,     2,     1,     1,     2,     7,     2,     5,     3,     3,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       2,     2,     3,     3,     0,     1,     1,     1,     1,     1,
       1,     1,     7,     1,     2,     3,     2,     0,     2,     0,
       4,     7,     2,     0,     1,     1,     1,     1,     6,     4,
       6,     4,     6,     8,     4,     6,     1,     1,     1,     1,
       1,     2,     1,     2,     1,     1,     1,     3,     3,     3,
       3,     2,     2,     1,     3,     1,     1,     1,     1,     3,
       1,     1,     0,     1,     1,     1,     1,     3,     8,     1,
       0,     1,     3,     3,     9,    12,     3,     0,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1
};

/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
     156,   413,     0,   132,   131,   413,     0,   516,   413,   489,
     358,     0,   373,     0,   413,     0,   156,     0,     0,     0,
       0,     0,     0,     0,   413,   571,     0,   372,   413,     0,
       0,   433,     0,     0,     0,     0,     0,     2,     4,     7,
      23,    24,    28,     5,    22,   115,    27,     8,    26,     0,
      30,     6,    17,    16,    37,     0,    35,    25,    12,    18,
      32,    38,    34,     9,    36,    11,    14,    10,    29,    33,
      31,   538,   525,   576,   537,   155,   541,    19,    15,    20,
      13,    21,   412,   411,   405,     0,     0,     0,     0,     0,
     406,  1145,  1238,  1239,  1240,  1241,  1242,  1243,  1244,  1245,
    1246,  1247,  1248,  1249,  1250,  1251,  1252,  1253,  1593,  1254,
    1255,  1256,  1541,  1542,  1594,  1543,  1544,  1257,  1258,  1259,
    1260,  1261,  1262,  1263,  1264,  1545,  1546,  1265,  1266,  1267,
    1268,  1269,  1547,  1595,  1270,  1271,  1272,  1273,  1274,  1275,
    1596,  1276,  1277,  1278,  1279,  1280,  1281,  1282,  1283,  1284,
    1597,  1285,  1286,  1287,  1598,  1288,  1289,  1290,  1291,  1292,
    1293,  1294,  1548,  1549,  1295,  1296,  1297,  1298,  1299,  1300,
    1301,  1302,  1303,  1304,  1305,  1306,  1307,  1308,  1309,  1310,
    1311,  1312,  1313,  1314,  1315,  1316,  1317,  1318,  1319,  1320,
    1321,  1322,  1550,  1323,  1324,  1325,  1326,  1551,  1327,  1328,
    1329,  1552,  1330,  1331,  1332,  1599,  1600,  1333,  1334,  1335,
    1601,  1336,  1337,  1553,  1554,  1338,  1339,  1340,  1341,  1342,
    1343,  1344,  1345,  1602,  1346,  1347,  1348,  1349,  1350,  1351,
    1352,  1353,  1354,  1355,  1356,  1603,  1555,  1357,  1358,  1359,
    1360,  1556,  1557,  1558,  1361,  1604,  1605,  1362,  1606,  1363,
    1364,  1365,  1366,  1367,  1368,  1607,  1369,  1608,  1370,  1371,
    1372,  1373,  1374,  1375,  1376,  1377,  1559,  1378,  1379,  1380,
    1381,  1382,  1383,  1384,  1385,  1386,  1387,  1388,  1389,  1390,
    1391,  1392,  1393,  1394,  1395,  1560,  1610,  1561,  1396,  1397,
    1398,  1562,  1399,  1400,  1611,  1401,  1563,  1402,  1564,  1403,
    1404,  1405,  1406,  1407,  1408,  1409,  1410,  1411,  1565,  1612,
    1412,  1613,  1566,  1413,  1414,  1415,  1416,  1417,  1418,  1419,
    1420,  1421,  1422,  1423,  1424,  1567,  1425,  1426,  1568,  1427,
    1428,  1429,  1430,  1431,  1432,  1433,  1434,  1435,  1436,  1437,
    1438,  1569,  1439,  1440,  1441,  1442,  1443,  1444,  1445,  1446,
    1447,  1448,  1449,  1450,  1451,  1452,  1453,  1454,  1455,  1456,
    1457,  1614,  1458,  1459,  1460,  1570,  1461,  1462,  1463,  1464,
    1465,  1466,  1467,  1468,  1469,  1470,  1471,  1472,  1473,  1474,
    1475,  1476,  1477,  1571,  1478,  1479,  1480,  1615,  1481,  1482,
    1572,  1483,  1484,  1485,  1486,  1487,  1488,  1489,  1490,  1491,
    1492,  1493,  1494,  1573,  1495,  1574,  1496,  1497,  1498,  1499,
    1617,  1500,  1501,  1502,  1503,  1504,  1575,  1576,  1505,  1506,
    1577,  1507,  1578,  1508,  1509,  1579,  1510,  1511,  1512,  1513,
    1514,  1515,  1516,  1517,  1518,  1519,  1520,  1521,  1522,  1523,
    1524,  1580,  1581,  1525,  1618,  1526,  1527,  1528,  1529,  1530,
    1531,  1532,  1533,  1534,  1535,  1536,  1582,  1583,  1584,  1585,
    1586,  1587,  1588,  1589,  1590,  1591,  1592,  1537,  1538,  1539,
    1540,   438,     0,     0,  1127,  1146,  1147,  1155,   408,   488,
     156,     0,   511,     0,     0,   512,     0,     0,   352,   351,
       0,   393,   357,     0,     0,     0,  1145,   403,  1559,  1427,
    1573,   401,  1125,  1146,     0,  1204,  1205,     0,  1213,     0,
    1198,  1202,  1199,     0,  1223,  1215,  1224,  1216,  1197,  1217,
    1206,  1196,     0,  1225,     0,  1200,     0,     0,     0,   409,
    1237,   358,   156,     0,   110,   115,   120,   123,   121,   119,
     122,     0,   515,     0,  1144,   140,   141,   101,   519,   378,
    1575,  1505,   377,   379,   376,   374,   410,   570,   568,     0,
    1101,  1336,  1372,  1465,  1476,  1575,     0,   439,   443,   407,
    1580,   367,   366,     0,  1149,     0,   542,   707,  1148,  1121,
     432,     0,   437,     0,  1441,   546,   549,  1164,   547,   538,
       0,     1,   156,   114,   142,     0,     0,     0,   371,  1575,
    1505,   368,   365,   567,   567,     0,   567,     0,   530,   538,
     533,   537,     0,  1344,     0,     0,  1344,     0,  1344,     0,
    1344,     0,     0,  1093,     0,  1094,  1128,   521,     0,   522,
     520,   523,   325,   356,   355,   354,   353,   358,  1344,  1183,
    1159,     0,     0,     0,     0,     0,   388,     0,   404,   402,
    1211,  1212,     0,  1203,  1201,     0,  1156,  1619,   759,  1620,
     788,   766,   788,   788,  1621,  1622,  1623,  1624,   755,   755,
    1310,   768,  1625,  1626,  1627,  1344,  1628,  1629,   756,   757,
     793,  1630,  1631,  1632,  1633,  1634,     0,     0,  1635,   788,
    1636,   755,  1637,  1638,   760,  1639,   729,     0,  1640,   758,
     730,  1641,   796,   796,  1642,   783,  1643,     0,  1226,   741,
     742,   743,   744,   769,   770,   745,   775,   776,   780,   746,
     828,   755,  1222,  1157,  1158,  1344,  1218,  1222,  1344,  1222,
    1123,  1344,     0,     0,  1233,     0,   112,   124,  1644,  1645,
    1646,  1647,  1649,  1648,  1650,  1651,  1652,  1653,  1654,  1655,
    1656,  1657,  1658,  1661,  1659,  1660,  1662,  1663,  1664,  1665,
    1666,  1667,  1668,  1669,  1670,  1671,  1672,  1673,  1674,  1675,
    1676,  1677,  1678,  1679,  1680,  1681,  1682,  1683,  1684,  1685,
    1686,  1687,  1688,  1689,  1690,  1691,  1692,  1693,  1694,  1695,
     138,     0,   139,   129,   118,   125,   126,   156,   487,   100,
       0,     0,     0,     0,   380,     0,     0,     0,  1130,  1132,
    1133,  1024,  1143,  1096,     0,  1542,  1543,  1544,  1086,     0,
    1545,  1546,  1547,  1595,   958,   945,   954,   959,   946,   948,
     955,  1548,  1549,   896,  1550,  1551,  1141,  1552,  1553,  1554,
    1556,  1557,  1558,   950,   952,  1560,  1561,     0,  1142,  1563,
    1564,  1408,  1566,  1567,  1569,  1570,   956,  1572,  1574,  1575,
    1576,  1577,  1578,  1140,  1579,   957,  1581,     0,     0,     0,
    1112,  1041,     0,     0,     0,  1096,   929,     0,     0,   749,
     750,   771,   772,   751,   777,   778,   752,     0,  1106,   829,
     974,  1096,   941,  1002,   872,     0,   927,   921,   553,  1102,
       0,   922,  1129,  1096,  1087,   553,  1100,   442,   440,   446,
     441,     0,     0,     0,     0,     0,   709,   708,  1122,   431,
     429,   430,   428,   427,   434,     0,   436,   115,  1038,     0,
    1087,   548,     0,     0,     0,   528,   527,     3,  1164,     0,
       0,  1173,     0,   369,     0,   565,   566,     0,     0,     0,
       0,     0,     0,     0,     0,   656,   590,   591,   593,   653,
     657,   665,     0,   534,     0,     0,     0,   197,   197,     0,
       0,     0,     0,     0,    93,    42,    86,     0,     0,     0,
       0,   211,   224,     0,     0,     0,     0,     0,   221,     0,
       0,   204,    44,   198,   200,     0,   197,     0,    40,     0,
       0,     0,    46,  1145,     0,  1593,  1594,  1595,  1596,  1597,
     959,     0,  1599,  1600,  1601,  1602,  1603,  1604,  1605,  1606,
    1607,  1608,  1559,  1610,  1611,  1612,  1613,  1614,  1615,  1573,
    1617,  1579,     0,  1618,     0,   933,  1044,   576,  1042,  1165,
       0,  1146,  1152,  1092,     0,  1166,  1723,  1724,  1725,  1726,
    1727,  1728,  1729,  1730,  1731,  1732,  1733,  1734,  1735,  1736,
    1737,  1738,  1739,  1740,  1741,  1742,  1743,  1744,  1745,  1746,
    1747,  1748,  1749,  1750,  1751,  1752,  1753,  1754,  1755,  1756,
    1757,  1758,  1759,  1760,  1761,  1762,  1763,  1764,  1765,  1766,
    1767,  1768,  1769,  1770,  1771,  1772,  1773,  1774,  1775,  1776,
    1777,  1778,  1779,  1780,  1781,  1782,  1783,  1784,  1785,  1786,
    1787,  1788,  1789,  1790,  1791,  1792,  1793,  1794,  1795,  1683,
    1796,  1797,  1798,  1799,  1800,  1089,  1126,  1168,  1167,  1169,
    1095,     0,     0,   485,     0,     0,  1180,     0,  1160,     0,
       0,  1344,   364,  1344,     0,   325,   325,   387,   390,     0,
       0,  1214,  1210,  1208,  1207,  1209,   787,   774,   782,   781,
       0,   764,   763,   762,     0,   761,     0,     0,   788,   788,
     786,   765,   741,     0,     0,     0,   792,     0,   790,     0,
     735,   731,     0,   801,   802,   803,   804,   811,   812,   809,
     810,   805,   806,   799,   800,   807,   808,   797,   798,     0,
     813,   814,   815,   816,   817,   818,   819,   820,   747,   753,
    1220,  1221,     0,  1194,     0,     0,  1189,     0,     0,  1191,
       0,     0,     0,     0,   156,     0,   205,   134,   135,   133,
       0,     0,   137,   127,   136,   116,   117,   208,   225,   128,
     111,     0,    99,   476,   451,   452,   460,   102,     0,  1047,
       0,   156,   381,   375,     0,   925,  1041,  1085,     0,     0,
       0,     0,     0,     0,   931,  1050,     0,     0,   852,     0,
       0,     0,  1065,     0,  1071,     0,     0,     0,   853,   833,
     834,     0,  1111,  1118,  1040,     0,   929,  1038,     0,  1005,
       0,  1148,     0,   923,   924,   930,     0,  1136,     0,   828,
     828,  1105,  1024,     0,  1021,  1022,  1023,     0,     0,     0,
    1099,     0,  1032,  1034,     0,     0,   868,  1030,     0,   871,
       0,     0,     0,     0,  1018,  1019,  1020,  1012,  1013,  1014,
    1015,  1016,  1017,  1028,  1011,   849,     0,     0,   976,   928,
       0,     0,   848,     0,     0,     0,   672,     0,  1134,  1131,
       0,  1088,   672,   454,   458,   459,   457,   445,     0,   453,
     444,   449,   447,   450,   448,     0,   425,     0,   422,   669,
       0,   550,     0,     0,   143,  1179,     0,   150,     0,  1174,
       0,   370,   545,   544,   577,   578,   584,   543,   632,   633,
       0,     0,     0,     0,   662,   660,  1130,  1143,   620,   594,
     619,     0,     0,   598,     0,   624,   829,   655,   532,   588,
     589,   592,   531,     0,   658,     0,   668,   656,   593,     0,
       0,     0,     0,     0,     0,  1344,     0,     0,    77,    58,
     277,     0,   196,     0,     0,     0,     0,     0,     0,     0,
      85,    82,    83,    84,     0,     0,     0,     0,   209,   210,
     223,     0,   214,   215,   212,   216,   217,     0,     0,   202,
     203,     0,     0,     0,     0,   201,     0,     0,     0,     0,
       0,     0,     0,     0,   576,   576,   576,   939,     0,   574,
     575,     0,     0,  1090,  1093,   475,   333,     0,   323,     0,
       0,     0,     0,     0,     0,   358,  1184,  1186,  1185,  1187,
    1182,  1161,     0,     0,     0,     0,   363,   361,     0,     0,
     322,   296,   392,  1344,   389,     0,   313,   513,     0,     0,
       0,     0,     0,  1222,     0,   785,   784,   736,   732,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1227,  1222,  1219,  1222,  1124,     0,  1222,
    1236,  1344,     0,   325,   113,   130,   206,   226,   207,   227,
     508,     0,   482,   490,   495,   473,     0,   473,     0,   492,
     496,   473,   491,   473,   486,     0,   103,     0,   518,     0,
     517,     0,  1097,     0,     0,  1084,  1080,     0,     0,     0,
       0,     0,  1051,  1052,  1053,  1054,  1055,  1056,  1057,  1058,
    1059,     0,     0,  1060,     0,     0,     0,  1010,  1021,  1022,
    1023,  1018,  1019,  1020,  1012,  1013,  1014,  1015,  1016,  1017,
    1036,     0,     0,     0,     0,     0,     0,     0,     0,   898,
       0,     0,   921,  1001,     0,  1038,  1070,     0,     0,     0,
       0,     0,     0,  1038,  1076,     0,     0,     0,  1110,     0,
    1107,   874,  1096,     0,     0,   873,     0,     0,     0,  1138,
    1139,   830,   844,   845,   846,   850,  1171,  1170,  1104,     0,
    1098,     0,     0,   831,   854,   859,     0,  1077,   892,     0,
     880,     0,   867,     0,   878,   882,   855,   870,     0,   851,
       0,  1099,  1033,  1035,     0,  1031,     0,   841,   842,   843,
     835,   836,   837,   838,   839,   840,   847,  1009,  1007,  1008,
       0,     0,     0,   984,   875,     0,     0,   877,   876,  1336,
    1372,     0,   564,   564,   564,   552,   562,  1103,     0,   721,
     576,  1112,   721,     0,   828,   710,  1164,   435,   424,   423,
    1039,  1163,   156,     0,  1177,     0,     0,     0,   162,   145,
       0,  1175,     0,   178,   672,     0,  1096,     0,   582,   583,
       0,   587,  1570,  1461,     0,     0,     0,     0,   625,   663,
       0,   654,   622,   623,     0,   621,  1130,   626,  1129,   627,
     630,   631,   599,   664,  1119,   666,     0,   659,   536,   535,
     670,     0,    43,     0,  1344,    60,     0,     0,     0,     0,
       0,     0,   231,   268,   231,    98,  1344,  1222,  1344,  1222,
    1242,  1311,  1477,     0,    56,    89,     0,   301,   190,     0,
     286,   330,    79,    94,   183,     0,     0,    45,   199,   213,
     218,   186,   222,   219,   106,   220,   197,     0,    41,     0,
     184,     0,   104,     0,     0,    47,   188,   108,   574,   574,
     574,     0,  1043,     0,     0,     0,  1045,  1046,  1092,     0,
     474,     0,   324,     0,   484,   464,   465,   475,     0,     0,
     325,  1183,     0,  1162,  1230,     0,     0,     0,     0,   399,
       0,   316,   314,   344,     0,   321,   315,   323,     0,     0,
     272,     0,     0,     0,     0,   514,   510,     0,   754,   767,
    1195,   741,     0,   795,   794,   796,   796,   741,     0,   727,
       0,   739,     0,   779,   748,   821,   822,   823,   824,   825,
     826,   827,  1188,  1190,     0,  1192,     0,     0,   477,     0,
     480,     0,   478,   479,   483,   472,     0,   503,     0,     0,
       0,     0,     0,     0,   461,  1048,   569,   897,     0,     0,
    1081,     0,     0,   972,     0,   947,   949,   962,     0,   951,
     953,     0,  1025,     0,     0,     0,   963,   900,   901,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   916,   915,   964,  1000,
       0,     0,  1068,  1069,   965,     0,     0,  1075,     0,     0,
       0,   970,     0,     0,     0,     0,  1117,   926,  1039,  1006,
    1004,   932,   828,     0,     0,     0,     0,     0,     0,     0,
     881,   869,     0,   879,   883,     0,     0,     0,   863,     0,
       0,   861,   893,   857,     0,     0,   894,     0,     0,     0,
     940,   564,   564,   564,   564,   561,   563,     0,     0,     0,
       0,  1461,     0,   693,   671,   673,   680,   693,   698,   942,
     719,   943,  1148,     0,   635,   574,  1118,   635,     0,   455,
     426,     0,  1178,     0,   167,   149,   169,   168,     0,   176,
       0,  1096,     0,   167,   151,     0,   170,     0,  1177,     0,
     182,   579,     0,  1026,   587,     0,   581,   629,   628,     0,
     597,   661,   595,     0,   667,     0,     0,     0,   276,     0,
       0,     0,   231,     0,     0,   340,     0,   327,    78,     0,
       0,     0,    52,    97,    70,    62,    48,    76,     0,     0,
      81,     0,    74,    91,    92,    90,    95,     0,   260,   241,
     273,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   576,   572,   573,
     934,  1091,   506,   507,   204,   505,   334,     0,     0,   322,
     392,  1181,     0,  1231,     0,  1229,     0,   364,     0,   325,
    1237,     0,   395,   300,   296,     0,   294,   293,   295,     0,
     400,   391,     0,     0,   386,   773,   738,     0,   791,   789,
     737,     0,   733,   740,  1222,     0,   509,   504,     0,   468,
     493,   498,     0,   502,   500,   499,   494,   497,     0,  1083,
    1079,     0,   944,  1049,     0,  1037,  1063,  1062,   899,   911,
     912,   913,  1064,     0,     0,     0,   908,   909,   910,   902,
     903,   904,   905,   906,   907,   914,  1073,  1072,  1066,  1067,
       0,   967,   968,   969,  1074,     0,  1109,  1038,  1114,     0,
       0,  1003,  1137,   832,     0,     0,   860,  1078,   884,     0,
       0,     0,   856,  1025,     0,     0,     0,     0,     0,   865,
       0,     0,     0,   987,   982,   983,     0,     0,     0,     0,
     555,   554,   560,   693,   698,     0,   538,     0,   680,     0,
     692,   616,   691,     0,     0,   704,   702,     0,   704,     0,
     704,     0,   616,     0,   694,   616,   691,     0,   711,  1122,
     720,     0,   650,     0,  1108,   650,     0,   551,  1176,     0,
    1172,     0,     0,     0,   157,   154,   144,     0,     0,   179,
     167,   158,     0,   580,   585,   586,   596,  1120,   191,   231,
       0,     0,    59,     0,   342,   288,   320,   303,     0,     0,
       0,   232,     0,   308,     0,    51,    71,     0,    67,     0,
      96,     0,     0,     0,     0,     0,    54,    66,     0,    49,
       0,  1222,  1222,    57,   287,  1156,  1619,  1620,  1621,  1622,
    1623,  1624,  1625,  1626,  1627,  1628,  1629,  1630,  1631,  1632,
    1633,  1634,  1712,  1635,   238,  1636,  1408,  1637,  1638,  1639,
       0,  1640,   730,  1641,  1642,  1643,  1012,  1013,   236,   329,
     233,   335,   235,   237,     0,  1157,   234,   332,   187,   107,
       0,   185,     0,   105,   194,   192,   189,   109,   937,   938,
     935,   574,   487,   467,     0,     0,     0,  1344,     0,  1228,
       0,   392,   362,     0,   322,   399,   397,     0,   350,   272,
     345,     0,   421,     0,     0,     0,   734,   728,  1193,     0,
     481,     0,   501,  1082,   960,   971,  1061,     0,     0,     0,
       0,   966,   961,  1116,     0,  1113,   890,   888,   885,     0,
     886,   864,     0,     0,   862,   858,     0,   895,   973,     0,
     989,   986,   559,   558,   557,   556,   679,   677,     0,   682,
    1148,   689,   609,   615,   678,     0,   674,     0,   703,   699,
       0,   700,     0,     0,   701,     0,   675,     0,  1148,   676,
       0,   718,     0,     0,   978,   934,   978,   456,   166,   146,
       0,   147,   177,     0,     0,     0,     0,   171,   524,     0,
     338,    61,     0,   320,     0,   231,   305,   304,   307,   302,
     306,   309,     0,     0,     0,     0,     0,   289,     0,     0,
       0,   252,     0,     0,   320,     0,   326,   248,   249,   359,
       0,     0,     0,    63,    53,    50,    55,    64,     0,     0,
      65,    68,   726,    80,    73,  1712,  1719,     0,     0,     0,
       0,     0,     0,   463,   470,   204,     0,     0,   296,     0,
       0,   322,  1232,     0,     0,   399,     0,  1234,   398,     0,
       0,   228,     0,   269,     0,     0,   414,     0,   385,   384,
       0,     0,   469,   917,     0,     0,     0,  1115,   887,   891,
     889,   866,   975,     0,   576,   714,     0,   717,   681,     0,
       0,   604,   611,     0,   614,   608,     0,   683,     0,     0,
     685,   687,     0,     0,     0,   722,     0,     0,     0,  1125,
    1286,  1553,  1460,     0,   634,   636,   639,   641,   640,   642,
     638,   649,     0,   652,  1135,   652,     0,     0,     0,   180,
       0,   173,   173,     0,   159,  1027,     0,   231,     0,   319,
     339,   267,     0,     0,   250,     0,   257,     0,   291,   292,
     290,   251,   320,   325,   253,     0,   360,     0,    72,     0,
      88,     0,     0,   331,   195,   193,   936,   487,     0,   392,
     272,   421,     0,     0,  1237,   396,   296,   285,   278,   279,
     280,   281,   282,   283,   284,   299,   298,   270,   271,     0,
       0,     0,   386,     0,   918,     0,   919,     0,   992,   719,
       0,     0,   713,     0,   602,   600,   603,   605,   601,     0,
       0,   690,   706,     0,   686,   684,   695,     0,   726,     0,
     697,     0,     0,     0,   643,     0,   977,   979,     0,     0,
     607,   607,     0,   153,     0,   721,     0,     0,   175,   175,
     161,     0,   325,   341,     0,   311,   318,   310,     0,     0,
     247,     0,   254,   349,   256,   240,   725,     0,    75,     0,
     336,   462,   466,     0,   230,   415,     0,   421,   399,   272,
       0,   418,     0,     0,   392,   920,   988,     0,     0,     0,
     712,   715,     0,   688,     0,     0,     0,   723,   724,   696,
       0,     0,     0,   637,     0,     0,   651,     0,   540,   539,
     148,   173,   152,   181,   172,   584,   174,   584,     0,   349,
     297,     0,     0,   275,   240,     0,   266,     0,    69,    87,
     337,     0,   322,   416,  1235,   229,   419,   420,     0,   721,
    1541,  1287,  1512,     0,   990,   993,   991,   985,     0,   612,
       0,   618,   705,   645,     0,   644,   980,   981,   609,   175,
     587,   587,   721,   266,   312,   317,     0,   255,   258,   346,
     347,   348,     0,   262,   259,   263,     0,   421,     0,   382,
       0,   997,   996,   995,   999,   998,   716,     0,     0,   610,
     646,   606,   584,   164,   163,   160,   231,   274,     0,     0,
       0,   264,     0,   265,   239,   417,   392,     0,   613,     0,
     587,   343,   244,     0,   243,     0,   328,   261,   721,   994,
       0,   165,   242,   246,   245,   383,   617
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    36,    37,    38,    39,  2124,  2125,  2126,  1813,   974,
    2818,  1814,   975,   976,  2128,    40,    41,    42,    43,    44,
     594,  1232,   534,  1233,  1234,   791,    45,  1244,   793,   794,
      46,   545,    47,   536,  1748,  1376,  2545,    49,  2079,  1753,
    2083,  2689,  2330,  2078,  2085,  2798,  2865,  2080,  1754,  2690,
    1755,    50,  1434,    51,  1506,  1461,  1245,   994,  1451,  1237,
      52,  2115,  2419,  2878,  2138,  2966,  2576,  2577,  1815,  2923,
    2924,  2117,  2190,  1443,  2917,  1881,  2745,  1819,  1802,  2578,
    1890,  2699,  2458,  1816,  2361,  1882,  2562,  2804,  1514,  1883,
    2805,  2555,  1884,  1486,  1511,  2363,  2925,  1820,  1487,  2420,
    1430,  1885,  2876,  1886,   493,  2581,    53,  1507,    54,    55,
     566,    56,   553,   554,    57,  2628,  2465,  1148,  1515,  1892,
     494,   537,  2182,  1144,    59,    60,    84,    61,  2626,    62,
     924,   582,   925,   927,    63,    64,   567,   568,  1246,  1357,
    1247,    65,  1867,  2605,  2208,  2606,  1936,  1861,  1242,  1934,
    1560,  1490,  1243,   481,  1574,  2209,  2164,  1561,    66,   495,
    1150,    67,    68,   803,   628,   538,   539,   876,    72,    73,
      74,   573,   585,   586,  1346,  1725,  2047,   947,   559,   560,
    1855,   607,  1480,  1384,  1385,  1761,  2096,  1411,  1412,   956,
     957,  2652,  2858,  2653,  2654,  2513,  2514,  2939,  1399,  1403,
    1404,  1777,  1767,  1390,  2322,  2674,  2675,  2676,  2677,  2678,
    2679,   877,  2534,  2790,  1407,  1408,   959,   960,   961,  1416,
    1787,    76,  1729,  2054,  2055,  2056,  2300,  2301,  2315,  2311,
    2519,  2660,  2057,  2058,  2645,  2646,  2762,  2318,  2064,  2664,
    2665,  2720,  1533,   707,  1249,  1181,   709,   878,   710,  1161,
     879,  1165,   712,   880,   881,   882,   715,   883,   884,   885,
     718,  1157,   886,   887,  1176,  1200,  1201,  1202,  1203,  1204,
    1205,  1206,  1207,  1208,   928,  1628,   889,   890,   891,  2060,
     892,  1338,  1713,  2683,  2786,  2787,  2040,  2284,  2500,  2644,
    2839,  2894,  2895,   893,   894,  1289,  1290,  1710,  1333,  1334,
     895,  2422,  1336,  1621,  1288,  1285,  1037,  1038,  1250,  1601,
    1602,  1624,  1965,  1631,  1637,  1992,  1993,  1645,  1678,   896,
    1585,  1586,  1951,  1258,   897,   625,  1044,   626,  1255,  1672,
     905,   898,   899,  1282,  1283,  2006,  2259,  1650,  1783,   577,
    2656,   730,  1125,   900,   901,   902,   903,   930,   579,  1039,
     474,   721,  2866,  1138,   934,  1040,  1817,  1668,   540,   942,
    2074,  1744,    78,  1136,  1500,    79,   526,   527,   727,  1213,
     528,   722,    80,  2174,  2175,    81,   734,   503,   476,   477,
     724,  1128,  1042,  1129
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -2595
static const int yypact[] =
{
    5703,   187,   456, -2595, -2595,   187, 33175, -2595,   187,    57,
    1766, 37905, -2595,  5066,   187, 44054,   802,   231,   288,   252,
     431, 44054, 44054, 38378,   187,   234, 44527, -2595,   187, 22237,
   35540,    -1,   -36, 45000, 44054,  1088,   481,   151, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595,    62, -2595, -2595, -2595,    47,
   -2595, -2595, -2595, -2595, -2595, 21763, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595,    86, -2595,   572,   113,   -18,   162, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, 38851, 44054, 39324, 36013, 39797,
   -2595,    91, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595,   111, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595,   130, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595,   134,   -97, -2595,   142, -2595, -2595, -2595, -2595,
    1088, 40270, -2595,   600,   660, -2595,   347, 45473, -2595, -2595,
   44054, -2595, -2595,   535,   521, 40270, -2595, -2595, -2595, 40743,
   -2595, -2595, -2595, -2595,   480, -2595, -2595,   330, -2595,    64,
   -2595, -2595, -2595,   354, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595,   469, -2595, 50676, -2595, 45946, 46419, 46892, -2595,
     353,   606,   611, 21289, -2595,    62, -2595, -2595, -2595, -2595,
   -2595,   431, -2595,   431, -2595, -2595, -2595,   209,   384, -2595,
     412,   684,   445, -2595, -2595, -2595, -2595, -2595,   677,  9012,
    9012, 47365, 47365,   431, 47365,   493,   475, -2595, -2595, -2595,
     -36,   445, -2595,   -18, -2595, 22711, -2595,   489,   -97, -2595,
   -2595,   166,   814, 12000, 44054,   494, -2595,   505,   494,   492,
     539, -2595,  5703, -2595, 40270,   880,   857, 35540, -2595,   582,
     863,   445, -2595,   249,   249,  1032,   249,   932,  1128, -2595,
     110, -2595,   638,  1022,   192,   813,  1036,  4289,  1070,   219,
    1076,   393,  6522, 12000, 31756, -2595,   -97, -2595,   721, -2595,
   -2595, -2595,   738, -2595, -2595, -2595, -2595,   606,   979, -2595,
     765,  1259,   861, 41216, 41689, 40270,  1230,   824, -2595, -2595,
   -2595, -2595,   869, -2595, -2595,   220, -2595, -2595, -2595, -2595,
     891, -2595,   891,   891, -2595, -2595, -2595, -2595,   848,   848,
    1034,   865, -2595, -2595, -2595,  1213, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595,   879,   694, -2595,   891,
   -2595,   848, -2595, -2595, -2595, -2595, -2595, 52050, -2595, -2595,
   -2595, -2595,   348,   419, -2595, -2595, -2595,   883, -2595,  1352,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,   899, -2595,
    3672,   848,    68, -2595, -2595,  1254, -2595,   127,  1264,   128,
   -2595,  1278,  1175, 12000, -2595,  1063, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595,   -36, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595,   278, -2595, -2595, 29412, -2595, -2595,   611,   973, -2595,
   29412, 12498, 51134,  1433, -2595,  1246, 44054,   990, -2595, -2595,
   -2595, -2595, -2595, -2595,  1003,  1493,   118,  1499, 12000,  1018,
     118,   118,  1038,  1378, -2595, -2595, -2595,   146,  1059,  1080,
   -2595,   147,   147, -2595,  1089,  1097, -2595,   155,  1118,  1124,
    1513,  1563,    94,  1131,  1135,   694,   118, 12000, -2595,  1137,
     147,  1139,  1152,  1154,  1596,  1165, -2595,  1659,  1177,    83,
     109,  1180,  1182, -2595,  1186, -2595,   157, 12000, 12000, 12000,
    1534, 12000,  7518, 40270,  1676, -2595,   -97,  1196,   431, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595,   140, 26044, -2595,
    1268, -2595, -2595, -2595,   184, 12000, -2595,  1675,   -35, -2595,
     159, -2595, -2595, -2595,   404,  1501,  1223, -2595, -2595, -2595,
   -2595,   171,  1633, 28466, 28939, 40270, -2595, -2595,   -97, -2595,
   -2595, -2595, -2595, -2595, -2595,   434, -2595,    62, 30767,   459,
     -97,   494, 44054, 44054,  1696, -2595, -2595, -2595,   505, 35540,
   40270, 47838,  1365, -2595,  1514, -2595, -2595,   -18,   -18, 12000,
     -18,    93,    -8,  9510, 12996,  1580,  1465,   150,   573,  1582,
   -2595,  1469,   932,  1128, 12000, 40270, 33648,   761,   762,  1255,
    1339,  1256,   -16,  1667, -2595,  1260, -2595,  1347, 40270, 52050,
     137, -2595,  1705,   137,   137,   544,  1706,  1351,   183,  1507,
     547,   244,  1260,  1618, -2595, 35540,    95,   552,  1260, 40270,
    1356,   571,  1260,    97, 12498,   844,  1000,   299,  1009,  1150,
     104, 12498,  1183,  1337,  1405,  1442,  1489,  1548,  1612,  1625,
    1627,  1635,   107,  1638,  1642,  1645,  1647,  1649,  1654,   120,
    1663,   115, 12498,  1683,  1273, -2595, 30767,   -78, -2595, -2595,
    1685,   143, -2595, 27046,  1269, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595,  1360, 44054,  1319,   -95,  1624,  1682, 31756,  1282,  1636,
   40270,  1512,  1618,  1516,  1744,  1289,   738, -2595, 48311, 10008,
    1749, -2595, -2595, -2595, -2595, -2595, -2595,  1294, -2595, -2595,
   12000, -2595, -2595, -2595,  1779, -2595, 51134, 51134,   891,   891,
   -2595, -2595,  1760,  1387,  1388,  1779, -2595,  1779, -2595, 44054,
    1308,  1309,  1779, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,  1779,
    1389, -2595,  1390,  1396,  1397, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595, 51134, -2595, 44054, 44054, -2595, 44054, 44054, -2595,
   44054, 44054,   545, 42162,   611, 36486, -2595, -2595, -2595, -2595,
     850,   875, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, 31756, -2595,  1235, -2595, -2595, -2595,  1313,   549, -2595,
     592,  1088, -2595, -2595, 12000,   -97, 12000, 30767,  1361, 12000,
   12000,  1318,  1779,  1779, -2595,  3480,  1779,  1779,  5791, 12000,
   25558, 12000, 16482, 10506, 12000, 12000,  8016, 12000,  5791,  1801,
    1801, 23659, -2595,  1476,  1320,  1326,  1885, 26107,  1324, -2595,
     619, -2595,  1321, -2595,   -97,   -97, 12000, -2595, 12000,  4451,
    4451, -2595,   178, 51134, 12000, 12000, 12000, 12000, 31283,  1412,
      87, 44054, 12000, 12000,  1334,  1011, -2595, 12000,  1561, -2595,
    1342, 12000,  1424,   182, 12000, 12000, 12000, 12000, 12000, 12000,
   12000, 12000, 12000, -2595, -2595, 17962,   211,  1660,  1679,   -97,
   12000,  -105,   253, 12000, 36959,  9012,  1671,  6522, -2595,   -97,
   27520,    82,  1671, -2595, -2595, -2595, -2595, -2595,   160, -2595,
   -2595, -2595,  1313, -2595,  1313,  1349, 40270,   166, 35067, -2595,
   12000, -2595,   598,  1354, -2595,  1406,   967,  1804, 44054, -2595,
   24133, -2595,  1637, -2595,  1358, -2595, 29881,  1637, -2595, -2595,
   16966,  1470,  1628,  1569, -2595, -2595,  1552,  1553, -2595,  1362,
   30813, 13494, 13494, -2595,  1171, 30767,  1348, -2595, -2595, -2595,
   -2595, -2595, -2595,   449, -2595, 40270,     0,  1580,   573,   623,
     613,  1367, 48784, 44054,  1641,  1594,  1646,  -143, -2595, -2595,
   -2595, 51134, -2595, 44054, 44054, 49257, 49730, 32229, 44054, 31756,
   -2595, -2595, -2595, -2595, 44054,   227, 44054,  5159, -2595, -2595,
   -2595,   137, -2595, -2595, -2595, -2595, -2595, 44054, 44054, -2595,
   -2595,   137, 44054, 44054,   137, -2595,   851, 44054, 44054, 44054,
   44054,   938, 44054, 44054,   -70,   -70,  1576, -2595, 11004,   101,
   -2595, 12000, 12000, -2595, 12000,  1546, -2595,   632, -2595,  1587,
      46,  1421, 40270, 40270, 44054,   962, -2595, -2595, -2595, -2595,
   -2595, -2595, 31756,  1381,  1382,  1725,  1618, -2595,  1726,   729,
   34121,   667,  1426,  1617, -2595,  1603, -2595, -2595,   639, 12000,
   12000,   649,  1393,    68,   659, -2595, -2595,  1398,  1309,  1414,
    1415,  1394,  1399,   745, 51134,  1779,    80,  1400,  1401,  1447,
     816,   981,  1343, -2595,   127, -2595,   128, -2595,  1609,   119,
   -2595,  1629,  1859,   738, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595,   759, 20815, -2595, -2595,  1862,   431,  1862,    52, -2595,
   -2595,  1862, -2595,  1862, -2595, 29412, -2595, 12498, -2595, 51134,
   -2595,   764, -2595,  1408, 12000,    58, -2595, 29945,   781, 12000,
    1404,  1407, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595,  1410,  1733, -2595,  1411,  1413,  5550, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595,  1417,  1418, 30030,  1420, 16482, 16482,  7518,  1344, -2595,
   16482,  1422, -2595, -2595,   817, 29899,  1320,  1423, 30254, 11502,
   12000, 11502, 11502, 30434,  1320,  1425, 30487, 44054, -2595, 13992,
   -2595, -2595, -2595, 12000, 40270, -2595, 12000,   876, 26126, -2595,
   -2595, -2595,  1861,  1861,  1861,  5791, -2595, -2595, -2595,  1430,
   -2595, 16482, 16482, -2595,  4306,  1306,  7518, -2595, -2595,  1739,
   -2595,   807, -2595,  1416, -2595, -2595,  2422, -2595, 25558,  3100,
   12000,   154, -2595, 12000,  1334, 12000,  1500,  1861,  1861,  1861,
     185,   185,    81,    81,    81,   749,   253, -2595, -2595, -2595,
    1427,  1428,  1429,  1630, 30767,  1165, 12000, -2595, 30767,   799,
     836, 40270,  3011,  4685,  4827, -2595, -2595, -2595, 19393,  1466,
     -78,  1534,  1466,  1779,  4451, -2595,   505, -2595, -2595, -2595,
   30767, -2595,  1088, 19393,  1473,  1485,  -124, 22237,  1648, -2595,
   44054, -2595, 44054, -2595,    -2,  1446, -2595, 12000, -2595, -2595,
     508,  1451,  1650,  1652,   927,   927,  1171,  1655, -2595, -2595,
    1496, -2595, -2595, -2595, 12000,  8514,  1355, -2595,  1386, -2595,
   -2595, -2595, -2595,  1435, -2595, -2595,  1694, -2595, -2595, -2595,
   -2595,  1526,  1260, 12000,  1672, -2595,   122,  1449,  1794,  -134,
    1748, 44054, -2595,  1661, -2595,   676,  1798,   119,  1800,   119,
   31756, 31756, 31756,   877, -2595, -2595,   431, -2595, -2595,   887,
   -2595,   230, -2595, -2595, -2595,  1540,   646,  1260,  1618, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595,    98,   652,  1260,  1542,
   -2595,  1543, -2595,  1545,   718,  1260, -2595, -2595,   101,   101,
     101, 12498, -2595,  1686,  1688,  1464, 30767, 30767, 30767,  1468,
   -2595,    99, -2595, 44054, -2595, -2595, -2595,  1546, 40270,  1477,
     738, -2595,   650, -2595,   431, 44054, 40270, 40270, 44054,  1527,
   40270, -2595, -2595, -2595,  1494,  1490, -2595, 51134,   -64,  1708,
    1711,  1256,  1954,  1845, 40270, -2595, 30767,   892, -2595, -2595,
   -2595, -2595,  1779, -2595, -2595,   265,   265, -2595, 44054, -2595,
    1511, -2595,  1517, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, 44054, -2595,  1863,  1088, -2595, 31756,
   -2595, 34594, -2595, -2595, -2595, -2595,   431, -2595,   431,  1742,
   44054, 27993,   431,   431, -2595, -2595, -2595, -2595, 30535, 12000,
   -2595,  1870, 51134, -2595, 26174, -2595, -2595, -2595, 12000, -2595,
   -2595, 12000, -2595, 25558, 12000,  1847, -2595,  2005,  2005, 26107,
   51134, 16482, 16482, 16482, 16482,   202,  1139, 16482, 16482, 16482,
   16482, 16482, 16482, 16482, 16482, 16482, 17464,   331, -2595, -2595,
   12000, 12000,  1854,  1847, -2595, 51134,  1528,  1320,  1532,  1533,
   12000, -2595, 51134,   905,  7518, 30583, -2595,   -97, 26193, -2595,
   30767, -2595,  4451, 12000,  2586,  2724, 12000,   919, 12000,  1864,
   -2595, -2595,  1535, -2595, -2595, 51134, 12000,  1538,  3046, 16482,
   16482,  3383, -2595,  3715, 12000,  7518, -2595,  1576,  1588, 24607,
   -2595,  1640,  1640,  1640,  1640, -2595, -2595, 40270, 40270, 40270,
   19867,  1865, 18919, 42635,  1549,   955, -2595, 42635, 43108, -2595,
    1564, -2595,   -97, 12000,  1872,   101,  1476,  1872,  1554, -2595,
   -2595,  1558,  1549, 12000,  1707, -2595, -2595, -2595,  1614, -2595,
     930, -2595,  1975,  1707, -2595,   931, -2595, 24133,  1473, 12000,
     -97, -2595,  1568, -2595,  1451,   165, -2595, -2595, -2595,  1778,
   -2595, -2595, -2595, 40270, -2595, 44054, 26474,  1912, -2595, 44054,
   44054, 44054, -2595, 44054,   939,   853,  1571, -2595,   853,  1892,
     152,  1256,   183,  3783,   -41, -2595, -2595, -2595,  1643, 44054,
   -2595, 44054, -2595, -2595, -2595, -2595, -2595, 32229, -2595, -2595,
   -2595, 31756, 25084, 31756, 44054, 44054, 44054, 44054, 44054, 44054,
   44054, 44054, 44054, 44054,  1573,  1575,  1583,  1576, -2595, -2595,
   -2595, -2595, -2595, -2595,   244, -2595, -2595,    99,  1581, 34121,
    1426,  1682, 43581, -2595,  1584,  1579,   941,  1618,  2044,  1590,
     353,   170, -2595, -2595,   667, 34121, -2595, -2595, -2595,  2007,
   -2595, -2595,  1088, 44054,  1653, -2595,  1309,  1593, -2595, -2595,
    1309, 51134, -2595, -2595,   119, 40270, -2595, -2595,   943, -2595,
   -2595, -2595, 44054,  1595, -2595,  1595, -2595, -2595, 12000, 30767,
   -2595,  1600, -2595, 30767, 26556, -2595, 30767,  1854, -2595,   282,
     282,   282,  2102,  1927,   136,  1605,   282,   282,   282,   197,
     197,   131,   131,   131,  2005,   331, 30767, 30767, -2595, -2595,
    1606, -2595, -2595, -2595,  1320,  1607, -2595, 26073, -2595,   948,
   44054, -2595, -2595,   337, 12000, 12000,  4306, -2595, 27007, 12000,
   51134,   958,  4306,   212, 12000,  3226,  3482, 12000, 12000,  4373,
   26623,  1608, 12000, 50203, -2595, -2595, 40270, 40270, 40270, 40270,
   -2595, -2595, -2595, 42635, 43108,  1613, 18444,   955,  1615, 40270,
   -2595,  1704,  1619, 19393,  1880,  1818, -2595, 19393,  1818,  1179,
    1818,  1896,  1704, 23185, -2595,  1704,  1657,  1828, -2595,   541,
   30767,  2068,  1947,  1639, -2595,  1947,   431, -2595, 30767,  9012,
   -2595,  1088,   989, 44054,   -97,   -65, -2595,  1665, 44054, -2595,
    1707, 30767, 25558, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   44054,   965, -2595,   977,   853, -2595,  1680, -2595,   196,  1930,
      74, -2595, 31756,  2054,   797, -2595,  1943,  1866, -2595,   137,
   -2595, 12000,   797,  1869,   179, 44054, -2595, -2595,  2508, -2595,
   51134,   119,   119, -2595, -2595,  1656,  1658,  1668,  1669,  1673,
    1674,  1681,  1684,  1687,  1689,  1690,  1691,  1692,  1693,  1695,
    1697,  1698,   879,  1699, -2595,  1702,  1568,  1710,  1712,  1713,
   51592,  1714,  1715,  1716,  1719,  1720,   850,   875, -2595, -2595,
   -2595, -2595, -2595, -2595,   765,  1721, -2595,  1666, -2595, -2595,
    1722, -2595,  1740, -2595, -2595, -2595, -2595, -2595, -2595, -2595,
   -2595,   101,   973,   138, 44054,  1651,  2121,  1898,  1724, -2595,
     431,  1426, -2595,   804, 34121,  1527, -2595,  2059,   270,  1711,
   -2595,   145,  1728,  1897, 44054,  1729, -2595, -2595, -2595,  2138,
   -2595, 34594,  1595, 30767, -2595, -2595, -2595, 16482,  2012,  1730,
   51134, -2595, -2595, -2595, 12000, -2595,  4306,  4306, 27007,   984,
   -2595,  4306, 12000, 12000,  4306,  4306, 12000, -2595, -2595, 26705,
    1889, -2595, -2595, -2595, -2595, -2595, -2595, -2595, 32702, 42635,
    1732, -2595, 37432, -2595, -2595, 44054,   955, 19393, -2595, -2595,
    1244, -2595, 19393,  1980, -2595, 19393, -2595, 44054,  1735, -2595,
   44054, -2595, 14490, 12000,  1746,   431,  1746, -2595,  1223, -2595,
    -124, -2595, -2595,  2114, 20341,  2071, 12000, -2595, -2595,  1727,
     853, -2595,  1874,  1680,  1736, -2595, -2595, -2595, -2595, -2595,
   -2595, -2595,   993,  1743, 44054, 44054, 16482, -2595,   797,   200,
     135, -2595,  1998, 40270,  1680,  2150, -2595, -2595, -2595, -2595,
    2117,  2198,  2086, -2595, -2595, 30767, -2595, -2595,  1779,  1779,
   -2595, -2595,  2166, -2595, -2595, -2595, -2595,   765,   262, 25084,
   44054, 44054,  1747, -2595, -2595,   244,  2119,   994,   667,  1088,
    2092, 34121, -2595,  2207, 44054,  1527,  1751, -2595, -2595,  1107,
    1107, -2595,  1893, -2595,  1899,   176, -2595, 40270, -2595, -2595,
   20341,  1088, -2595,  2798, 16482, 51134,  1015, -2595, -2595,  4306,
    4306,  4306, -2595,  2191,  1576, -2595,  1016,  2213, -2595, 44054,
     -63,   -84,  1758,  1759, -2595, -2595,  1024, -2595, 12000,  1761,
   -2595, -2595, 19393,  1244,  1026, -2595, 51134, 44054,  1041, 51134,
    1762,  -122,  1764,  7020,  1765, -2595, -2595, -2595, -2595, -2595,
   30767, 30767, 44054,  1935, -2595,  1935,  1820, 44054, 12000, -2595,
    1053,  2189,    42,   -39, 30767, -2595, 40270, -2595, 31756, -2595,
     853, -2595, 31756, 12000, -2595,   705,  2102,  2230, -2595, -2595,
   -2595, -2595,  1680,   738, -2595, 44054, -2595,  2081, -2595, 44054,
    1835,   315,  1851, -2595, -2595, -2595, -2595,   973,   431,  1426,
    1711,  1728, 40270,  1088,   353, -2595,   667, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595, -2595,  2210,
    1989,  2212,  1653,  1057,  2798,  1064, -2595, 12000,    20,  1564,
   32702,  1788, -2595,  1074, -2595, -2595, -2595, -2595, -2595, 44054,
    1012, -2595, 30767, 44054, -2595, -2595, -2595, 44054,  2166,  1081,
   -2595, 12000,  1790, 12000, -2595, 14490,  1787, -2595,  2248, 12000,
    1850,  1850,  1088, -2595, 26856,  1466, 20341, 44054, 44054, 44054,
   -2595,  1915,   738,   853,  1083, -2595,  1809, -2595, 26979,  2019,
   -2595,  2106, -2595,  2050, -2595,  1802, -2595, 12000, -2595,  1873,
   -2595, -2595, -2595,  2260, -2595, -2595,  1806,  1728,  1527,  1711,
    2014, -2595,  2017,  1811,  1426, -2595,  1320, 14988, 14988,  1812,
   -2595, -2595, 44054, -2595,  1091,  1813,  1092, -2595, -2595, -2595,
    1098, 14490,  1109, -2595, 44054,  1815, 30767,  1949, -2595, -2595,
   -2595,  2189, -2595, -2595, -2595,   237, -2595,   237, 24133,  2050,
   -2595, 31756, 25084,  2043,  1802,    53,  2028,  1618, -2595, 30767,
   -2595,  1088, 34121, -2595, -2595, -2595, -2595, -2595, 20341,  1466,
   15984,  1962,   205, 29917, -2595, -2595, -2595, -2595,  1115, -2595,
    2306,  1981, -2595, -2595,  1116, -2595, -2595, -2595, 37432, 44054,
    1451,  1451,  -100,  2028, -2595, -2595,  2123, -2595, -2595, -2595,
   -2595, -2595,   164,  2036, -2595,  2038,  1310,  1728,  1122, -2595,
    2291, -2595, -2595, -2595, -2595, -2595, -2595,  1832,  1836, -2595,
   -2595, -2595,   237, -2595, -2595, -2595, -2595, -2595,   362,   362,
    2209, -2595,  1894, -2595, -2595, -2595,  1426, 15486, -2595,  2321,
    1451,   853, -2595,  2309, -2595,   129, -2595, -2595,  1466, -2595,
    1840, -2595, -2595, -2595, -2595, -2595, -2595
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -2595, -2595, -2595,  1763, -2595, -2595, -2595,   210, -2595,   890,
   -2595,   201,  -537,   534, -2595, -2595, -2595, -2595, -2595, -2595,
    -438, -2595,  -469,  -475, -2595, -2595,    14,  -762,  1125, -2595,
   -2595, -2595,   975,    13, -2595, -2595, -2595, -2595,    18,   267,
   -2595,  -444, -1870,  -183, -2595, -2461, -2550, -2595,  -509, -2428,
   -1678, -2595,  -934, -2595,  -612,  -975,  -756,  -984, -2595,   -14,
   -1100, -1771, -2399,  -516, -2595,  -588, -2595,  -342, -1758,  -559,
    -549, -2595, -2298,  -942, -2595,  1402,  -253, -2595,   574, -2595,
   -2108, -2595, -2595,   559, -2595,  -939, -2595, -2595, -1828,   186,
    -499, -2168, -2109,   513,  -626, -2595,  -543,   240, -1737, -2595,
     586, -2595,  -485, -2595,  -487, -2147, -1099,   213, -2595, -2595,
     722, -2595, -2595, -2595, -1097, -2595,  -365, -2595, -2595, -2114,
   -2595,    72, -2336, -1180, -2595, -2595,  1185, -1095, -2498, -2595,
    1021, -2595, -2595, -2595, -2595, -2595,   352, -2595,   828, -2595,
     827, -2595, -2595, -2595, -2595, -2595,  -718,   522, -2241, -2595,
     462, -2595, -2595, -2595, -2595,   -69,   238, -2595, -2595, -2595,
   -2595, -2595, -2595, -2595, -1160,    21,    77,   108,   -34,   -30,
     -25,    10,    49,  1474,  1502, -2595, -1014,   842, -2595, -2595,
   -1782,  -603,   -55, -2595,   653, -2561, -2041,  -477,   995,  1455,
    1458,  -354,  -374, -2595,  -490, -2595,  -712, -2595, -2595,   645,
    1030, -1244, -1232, -2595,   355,  -430,  -362, -2595, -2595, -2595,
   -2595, -2595,   102,  -261,  -417,  1014, -2595,  1467, -2595, -2595,
   -2595, -2595, -1251,   685, -1987,   380, -1963, -1838,   141,   125,
    -905,  -227,    12,   388,  -319, -2595, -2595,  -315, -1681, -2290,
    -332,  -331, -2595, -2595,  -510, -1126,  -682, -2595, -2595,   560,
    1913, -2595, -2595, -2595,  1948,  2097, -2595, -2595,  2160,  2241,
   -2595,  -584,  2574,  -388,  -678,  1181, -1072,  1187, -1058,  -863,
    -576,  1188,  1190, -1230,  3128, -1532,  -873,     6, -2595, -1612,
   -1584, -2595, -2595,   -88, -2595,  -398, -2595,  -397, -2595, -2595,
   -2595,  -381, -2594, -2595,  1119,   805, -2595, -2595, -1250, -2595,
    3661,   701, -2595, -1627,  -580,  1206,  -716,  -983, -1144, -2595,
   -2595, -2595, -2595, -2595, -2595, -1643, -1783,  -424,   770, -2595,
   -2595,   881, -2595, -2595,  1369,  -607,   983,  -561,  -844,   777,
   -2595,  -552,  1132, -2595,   742, -1914, -2595,   403, -2595,  1644,
    -525,   248, -1006,    29, -2595,  3575,   287,  1510,  -849, -2087,
   -2595, -2595,  -486, -2192,  -890, -2595,  -596, -2595,    22,  1541,
     391, -2595, -2595,   610, -2595, -2595, -2595, -2595,  1271,  -656,
   -2595,  1317, -2595, -2595, -2595, -2595, -2105,    -6, -2595, -2595,
   -2595,  -522, -2595, -2085
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If zero, do what YYDEFACT says.
   If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -1723
static const yytype_int16 yytable[] =
{
     475,   590,   729,   929,   641,   993,  1133,   962,   906,  1465,
      75,   796,   471,    48,   708,  1172,  1464,   918,   608,  1130,
    1620,    69,    77,  1524,  1292,  1178,    75,  1429,  1126,  1440,
     535,  1294,  1235,  2118,  1436,   472,  1496,  1497,  1236,  1498,
     726,  1499,   576,  1552,   735,   610,  1528,  1339,  1374,  1476,
     611,  2067,  2133,  2343,  2135,  2424,  2446,  2426,   790,  1349,
    2445,  2027,  1469,   736,  2114,  2297,  2154,  2155,  2156,  1659,
    1660,  1216,    58,  1219,  2086,  2455,  2459,    70,  1158,  1159,
     992,  1406,   998,   588,  1002,  1248,  -526, -1128,  -796,   812,
    2258,  1580,  1303,  1967,  1968,  2314, -1153,   797,  1987,  -793,
     619,  1732, -1153,  -793,   544,  1170,   572,   479,    71, -1598,
   -1150, -1150, -1609,  -529,  -796,  2797, -1609, -1701, -1701,  2617,
   -1712, -1712,  1309,  -788,    71, -1616,  1210,  1670, -1721, -1721,
     955,  1501,   602, -1719, -1719, -1616,   720,    71,  2176,  2014,
    2015,  1226,  1970,   589,  2061,   544,   812, -1154, -1154,   812,
    1134, -1598,  -755,  1222,  1311,  1356, -1151, -1151,  1779,  2061,
    -768,  2621,  -783,    71,   544,   544,  1728,   595,   580,   919,
    1432,   652,  1782,  1432,  1353,  1226,   544,  1210,  1344,  -526,
     812,  1467,  1178,   609,  2146,  1210,  1210,  -204,   812,  1421,
     958,  2559,  -204,  1594,  1670,  1949,  1303,     3,     4,  1340,
    2723,  2603,  2753,  2213,  2215, -1010,  -529,  1596,  1970,  2248,
     605,  1391, -1010,  2336,  1865,   966,  2186,  2543,   605,  2312,
    2766,   967,  2919,  1441,  1449,  2586,  1309,  1452,  1453,  2800,
    1691,  2799,  2598,  2825,  1491,  2749,  1158,  1159,  1707, -1029,
    2668,  2764,   966,  2750,  2973,  1708, -1029,  1715,   967,  2867,
     966,  2782,  2710,  1388,   596,   603,   967,  1392,  1311,   501,
    -471,   557,  1170,   530,  1303,  2622,  2478,  2365,  -576,  2767,
     548,  1785,   796,  -576,  1758,  2076,   945,  2456,   796,  2735,
    2623,   587,   587,  2323,  2948,  2355,  1354,  1424,  1474,  1853,
     811,  1284,  1800,  1970,  1309,  1475,  2930,  1448, -1723, -1723,
   -1723,  1800,  2122,  1152,  2910,  1492,  2911,   546,   951,   720,
    2077,  1130, -1698, -1698,  2556,  1295,  2516,  1393,  2708,  1939,
    2520,   604,  2227,  2597,  1940,  2344,  1311,   968,  1240,  2883,
    2378,  2314,  2233,   920,   615,   921,  2225,  2613,  2366,   541,
    -576,  2354,  1970,  1351,  2837,  2616,    25,  1153,  1303,  1801,
    2249,  2063,  1493,  2920,   968,  1692,   542,  1389,  2111,  2942,
     543,  1759,   968,  2969,   558,  2463,  1394,  2932,  -526,  1351,
    -647,  1693,  2351,  2838,  2353,  1941,  1694,  2779,  1786,   946,
     953,  2960,    30,   680,  1419,  2697,  2557,  1716,  2345,  -576,
    2709,   796,   796,   623,  2801,  -529,  2087,   624,   605,  1629,
    2909,  2974,  1597,  2768,  1355,  2721,  2714,  2711,  1372,  2751,
    1311,  1695,  1211,  2479,   720,  1442,   966,  2619,  1478,  2367,
    2962,  2707,   967,    32,  2765,  1395,  1577,  2544,  1439,  2955,
    2921,  -526,  2824,  1518,  1479,  2457,   544,  1426,  1620,  2229,
    2230,  2231,  2232,  1854,  2476,  2236,  2237,  2238,  2239,  2240,
    2241,  2242,  2243,  2244,  2245,  2506,   583,  1866,  -529,  2624,
    2928,  1345,  1261,  1211,   653,  2620,  2061,  1915,  2061,  2234,
    2548,  1211,  1211,  2915,    35,  2472,  1439,  1341,   969,  2235,
     597,   591,  1916,  1795,  1671,  1417,  2821,  2162,  2163,  1368,
      75,   581,  2884,   627,  2087,  1852,  1873,  2275,  2276,   590,
    2730,   629,   631,  2088,  2069,   969,  1468,   593,  1584,  2147,
    2093,  2560,  2424,   969,  2426,  2933,  1607,  1768,   723,  1154,
    1512,  1779,  1465,  1358,  1608,  1609,  1610,   795,   968,   970,
    2657,  2885,   623,   971,  2099,  2661,   624,   606,  2663,  1173,
    -526,  1126,    75,   610,  2812,  1418,  2648,   792,   611,   480,
    1427,  2029,  2898,   475,   475,   963,   996,   630,  1696, -1010,
     971,  1174,  1156,   972,  1212,  1173,  1976,  -529,   971,  1332,
    2637,  1911,   623,  2604, -1128,  1175,   624,   475,  2550,  -526,
    1521,  -526,  2071, -1153,  1525,  1526,  -793,  1174,    71, -1153,
     997,   720,  1709, -1029,  1852,   923, -1598,  2949,   972, -1609,
      82,  1177,    75, -1609,  2561,    48,  -529,  1277,  -529,   941,
    -788,   922, -1616,    69,    77,  2823,  1041,   475,  1127,  1985,
    1230,  1231, -1616,  1215,  1218,  1155,   622,  2963,  2829,  2828,
     973,  1730,  1298,   931, -1154, -1154,   966,  1459, -1598,  1160,
      71,   589,   967,   912,    83,  1562,   592,  1164,  1582,  -783,
    1454,  1347,  1733,    85,  1230,  1231,   708,   973,   612,  2602,
    2547,  1460,  2588,  2589,    58,   973,  -204,  -204,  1391,    70,
    1329,  1330,  1331,  1332,  1581,  2774,  1284,  1917,  1919,   969,
    1588,   609,  1982,  1983,  1984,  1985,   637,  1582,  1130,  1598,
     800,   723,  1546,  1634,  1636,  1829,  1644,  2178,  1459,  2119,
      71,   801,  1543,   796,   531,  1832,  2964,  2607,  1835,  2048,
    2049,  2142,  1667,  1620,  1392,  2549,  1657,   603,   646,  2061,
    2889,  1173,  1460,  2061,  2143,  1295,   650,   475,   726,  1545,
    1000,   951,  1582,  2965,   971,  1549,  1327,  1328,  1329,  1330,
    1331,  1332,  1582,  1174,  1130,   552,   651,   649,   968,  2722,
     790,   571,  1629,  1629,  1126,  1554,  1502,  1629,  1168,  1169,
    1303, -1723, -1723, -1723,  1001,  1980,  1981,  1982,  1983,  1984,
    1985,  1224,  2563,  2616,  1225,  2196,   732,   601,   720,   720,
     483,  2200,  2262,   604,  2700,  2424,  1441,  2426,   795,  1455,
    1309,  1441,  2092,  1661,   795,  1041,   723,  1456,  1629,  1629,
    1932,   654,  2819,   953,  1173,  1292,  1933,    75,  2007,  1502,
    1441,  2120,   475,    86,  1980,  1981,  1982,  1983,  1984,  1985,
    2566,    87,  1311,  1394,   720,  1673,  1174,  2579,   798,   655,
     799,   973,   587,     3,     4,  1828,  1432,  1432,   590,   484,
    1175,   475,  2968,  1821,  1465,   733,  2070,  1433,  1435,  1938,
     909,  2580,   954,  1942,  1556,  1943,    88, -1696, -1696,   812,
     605,   475,   475,   475,   642,   475,   475,  1900,  2157,  2943,
    2944,  1848,  1849,  1850,   966,  1173,   802,  2568,  1878,  1558,
     967,  2271,  1395,  1792,   812,  1441,   913,   804,  1922,   475,
    1923,  1441,  2093,  1925,   623,   531,  2647,  1174,  1350,   969,
     643,   805,  2148,    89,  1463,    71,  1126,   795,   795,  1470,
    1827,  1177,  2090,   907,   908,   720,   910,  1382,  1383,  2971,
    1387,  1803,   611,   611,  2061,   611,  2803,  1366,  1473,  1838,
    1367,  2097,  2691,  2061,  1845,   644,   812,  2019,  2061,   806,
    1897,  2061,  1264,   475,  2807,  2633,  2187,   475,   475,  2191,
    1791,   941,  1369,  2614,   971,  1370,   914,  1441,   475,   807,
    2061,   966,   969,  2020,  1918,  1920,  1921,   967,   911,   806,
    2357,  1830,  2809,   723,   917,    25,  1833,  2571,  1442,   642,
    1286,   926,   645,  1442,   972,   935,   968,  1611,  1612,  1613,
     932,  1614,  1615,  1616,  1617,  1618,  1619,   933,  1041,   606,
    1185,  1186,  1442,  2145,   633,  1041,   634,  1466,  1872,  2149,
     488,    30,   489, -1697, -1697,   643,  2650,  2121,  2691,  2122,
    2572,  2651, -1699, -1699,  1909,  2469,  1041,  2286,  2287,  2288,
    2289,   623,   936, -1128,  2706,   624,  2573,   492,  1550,  1439,
     796,  1370,  1576,   720,  1439,  1577,  2061,  2123,   939,  2304,
    2172,   973,    32,   796,  2358,   609,   609,   943,   609,  1644,
    1997,  1644,  1644,  1439,   635,    33,   636,  1191,  1192,  1945,
     940,  1496,  1497,   968,  1498,  2153,  1499,  1442,  2061,  2021,
     944,  1239,  1745,  1442,  2022,  1578,   949,  1239,  1579,    34,
     951,  1741,  1620,    25,  1218,   952,  2017,   645,  1629,  1629,
    1629,  1629,  2754,    35,  1629,  1629,  1629,  1629,  1629,  1629,
    1629,  1629,  1629,  1629,  2862,  1654,  1790,  1655,  2359,  1370,
    2360,  1888,  2003,  1889,  2305,  1862,  2489,  2065,  1863,    30,
     964,  1127,  1895,  2574,  2737,  1577,   483,   969,  1439,  2376,
    2575,  1679,  1898,  1041,  1439,  1370,   720,  2369,  2647,  1442,
     977,  2130,  1901,  2132,   475,  1579,  1629,  1629,  2306,  -394,
     723,   723,   953, -1700, -1700,  1297,    25,  1680,    25,  2207,
      32,  2352,   965,  2307,  1300,  2961,  2061,  1195,  1196,  2368,
     587,  2377,  2308,    33,  2691,  2738,   978,  1348,  1836,  2442,
      90,   720,   971,   478,  2739,   484, -1702, -1702,  1359,   529,
    1239,  1239,    30,  2041,    30,  2042,   723,    34,  2929,   556,
    1439,   954,  2061,   569,  1131,  1996,  2309,  1998,  1999,   795,
     995,    35,  1837,  2740,   969,  2023,   999,  2198,  2199,  1162,
    1132,  2945,  1191,  1192,    75,  1127,  2024,  2334,  1907,   792,
    2043,  1908,  2044,    32,  2170,    32,  1135,   532,   475,   486,
     475,  1171,  1928,   475,   475,  1929,    33,  1946,    33,  1137,
    1370,    75,  1746,   475,   627,   475,   475,   475,   475,   475,
     475,   475,   629,   631,  1953,  1843,  2691,  1370,  1681,   971,
      34,  1209,    34,  1682,  2540,  1563,  -575,  2975,  1683,   973,
     475,  -575,   475,  2741,   533,  1139,    35,   723,   475,   475,
     475,   475,  1127,  2310,  2061,  2742,   475,   475,  1140,  1844,
    1989,   475,  1147,  1370,  1302,   475,  1149,  1303,   475,   475,
     475,   475,   475,   475,   475,   475,   475,  1151,   630,   475,
    1564,    25,    71,  1562,   475,  1156,  2636,   475,  2304,   475,
    1160,  1041,  1195,  1196,  1127,  1163,   979,  1309,  2305,  2093,
   -1703, -1703,   811,    25, -1723,  1970,  1565,  1164,  -575,    71,
    1971,  1972,  1973,  1166,   475,   980,   488,    30,   489,  2011,
    2136,  1167,  1370,  2137,  1566,  1179,   973,  1803,  1567,  1311,
    2140,   923,  2306,  2141,   475,  2195,  2418,  1180,  1370,    30,
     491,  1182,  1162,   492,  2376,   475,   475,  2522,  2256,  1568,
    1582,  1218,  1569,  2521,  1214,  2524,  2308,  -575,    32,   796,
    1171,  2551,  2267,  2305,  1217,  1370,   981,  1570, -1704, -1704,
    2254,    33,  1677,  2332,  2337,   723,  2333,  2338,  1220,  1684,
      32,  1127,  2356,  1127,  2451,  1863,  2470,  1863,  2204,  2471,
    1685,  2483,  2221,    33,  2484,    34,   948,  2306,   950,  2016,
    2511,  2490,    25,  1749,  1579, -1705, -1705,  1221,  2552,  1747,
    2228,  1863,  2307,  1223,  2511,  1241,  1547,    34,  1548,  1251,
    2553,  2308,  1041,  1863,  1252,   475,   475,  2638,   475, -1723,
    1579,    35,  1254,  1582,    71,  2250,  2701,  2729,    30,  2702,
    1863,  2755,  2255,  1256,  2743, -1723,  1127,  2744,  -759,   720,
   -1723,  2319, -1706, -1706,  -766,  2309,   982,  1571,  2756,  2759,
    1259,  1579,  2760,   475,   475,  1572,   473,  2771,  -756,  2776,
    1218,   502,  2777,  1780,  1781,   502,  2658,  2310,   723,    32,
    1260,   547,   502,   555,  2780, -1723,   555,  2777,  1974,   555,
     578,  1261,    33,   502,   502,  1821,  2795,  2427,  2468,  2796,
    2834,  1262,  1603,  2796,  2441,   983,   795,  2835,  1573,  1975,
    1579, -1707, -1707,   984,   720,   555,    34,  2843,  -757,   795,
    1218,  1041,  1263,   723,  2849,   985,  2870,  2777,   475,  2871,
      35,    35,   720,   475,  2899,  2902,  1879,  2900,  1218,  1265,
    1320,  2903,  2310,   590,  1370,   578,   502,   578,   578,   578,
    2526,  -760,  2905,  2529,  1629,  1370,   986,   720,  2936,  2940,
    -647,  2777,  2785,  2584,   720,  2956,  -648,    71,  2796,   475,
     475,   475,  2093,  1266,   475, -1708, -1708,  1267,  1976,  1269,
    2727,  1270,  2421,   475,   475,   475,   475,   720, -1709, -1709,
   -1710, -1710,   590,   475,  1271,  1734,  1272,   475, -1711, -1711,
     475, -1713, -1713,   988,   979, -1714, -1714,  1273, -1715, -1715,
   -1716, -1716, -1717, -1717,  -758,   475,   475, -1718, -1718,  1274,
     475,  1796,  1275,   980,  1276,   989, -1720, -1720,  1277,  2659,
    1281,  1804, -1723,  1807,   475,  1293,  1818,   475,  1296,   475,
    1343,  2467,  1822,  1629,  1824,   991, -1722, -1722,  1481,  1482,
    -625,  -625,  1193,  1194,  1195,  1196,  1831,  -629,  -629,  2207,
     475,  1834,  1130,   590,  1344,  1839,  1840,  1841,  1842,  1345,
    1846,  1847,   475,  1337,   981,  2593,  2594,  1582,  1172,   614,
    1360,   617,  1373,   621,  2059,  1286,  1380,   475,  -628,  -628,
    1362,  1364,  1381,   952,   954,  1413,  1415,  1437,  1439,  2059,
    1438,   475,    75,  1444,   720,   627,  1445,   472,  1446,  1450,
    1457,  1629,  1458,   629,   631,  1462,  1477,  1472,   475,   475,
    1484,  1485,   472,  1489,  1494,  1495,  1502,  2538,  1503,  1505,
    1509,  1510, -1723,  1508,  1286,  1519,  1520,   475,   812,  1327,
    1328,  1329,  1330,  1331,  1332,  1527,  1529,  1530,  1535,  1536,
    1539,  1540,  1677,  2954,  1127,  1127,  1127,  1541,  1542,  1575,
    1589,  1584,  1303,   720,   982,  1649,  1370,  1651,  2036,   630,
    1653,  1669,  1656,  1977,  1978,  1979,  1676,  1980,  1981,  1982,
    1983,  1984,  1985,  1687,  1688,  1690,  2053,  1711,  1712,  1728,
    1750,  1743,  1735,  2418,  1769,  1041,  1742,  1770,   604,  1239,
      71,  2053,  1771,  1937,  1757,   589,  1772,  1773,  1774,  1793,
    1797,  1798,  1239,   983,   605,  1799,  1860,  1864,  1868,  1302,
    2592,   984,  1303,  1874,  1875,  1876,  1877, -1723, -1723, -1723,
    1891,   723,   720,   985,  1893,  1894,  1899,  1905,  1902,  1903,
    1904,  1924,  1906,  1913,  1914,  1927,  1926,  1955,  1935,  1947,
    1956,  1958,  1309,  1957,  1959,  2013,  1960,  2018,  2025,  1310,
    1962,  2034,  1963,  1966,   986,  1988,  1994,  2063,  2001,  2035,
    2037,  2038,  2039,  1127,  2073,   795,  2075,  2089,  2095,  2101,
    2082,  2103,  2104,  -630,  1311,  -631,   482,  2105,  2100,  2107,
     483,  2109,  1465,   475,  2110,  2113,   723,  2116,  2129,   796,
    2131,  2144,   475,  2150,  2151,   475,  2152,  2160,   475,  2161,
    2158,   988,  2159,  -394,   723,   475,   475,   475,   475,  2169,
     590,   475,   475,   475,   475,   475,   475,   475,   475,   475,
     475,  2181,  2281,   989,   475,   475,  2185,  2184,  2188,   723,
    2192,   578,   720,  2189,   475,  2193,   723,   639,   475,   484,
     640,   590,  2202,   991,  1879,   578,   485,   475,  2203,   502,
     475,  2220,   475,  2205,  2212,  1991,  1970,  1990,   590,   723,
     475,  2251,   720,   475,   475,  2252,  2253,  2270,   475,   475,
    -538,  2273,  2269,  2295,  1312,    71,   640,   502,   502,  2282,
    2046,  2758,  2317,  -538,   475,  2303,   475,  2326,  -538,  2321,
    1313,  2327,  2329,   486,  2331,  1314,  2059,   475,  2059,  2335,
    2342,  2346,  2350,  2362,  2364,  2380,  2438,   475,  2439,   904,
     904,   555,   555,  2444,   555,  2450,  2440,  2449,  2704,   472,
    2453,   472,  2454,   475,  2466,   578,  2461,  2813,  2464,  2421,
    1317,  1863,   720,  2474,   502,  2477,  -538,  2480,  2517,  2481,
    2482,  2498,  2806,  2139,   578,  2508,  2512,   578,  2509,  2518,
     811,  2515,  1286,  1970,  2525,  -538,  2418,  2531,  1971,  1972,
    1973,  2563,  2532,   487,  2763,   632,  2180,  2564,  2533,  2558,
    2582,  1127,  2535,  2600,  2554,  1127,  2425,  1127,  2583,   647,
    2565,  2587,  2763,  1286,  2608,  1320,  2546,  2599,  2165,  2530,
   -1150,  2601, -1696,   578,   578,   578,  2778,  2609,  2293,  2778,
    2296,  2173, -1697, -1698,  -538,  2610,  2618, -1699, -1700,  2566,
     488,  2567,   489,  -538,  2631, -1701,  2869,  2836, -1702,  2627,
    2634, -1703,  2625, -1704, -1705, -1706, -1707, -1708,   490, -1709,
    2643, -1710, -1711, -1713,   491,   723, -1714,   492,  2662,  2682,
    2687,  2850,  2693,  2852, -1715,  2696, -1716, -1717, -1718, -1719,
   -1720,   720,   475, -1721, -1722, -1151,  2611,  2712,  1239,   916,
    2695,  2630,  2635,  2210,  2649,  2211,  2568,  2667,  2698,  2216,
    2217,  2715,  2716,  2816,  2717,  2703,  2718,  1322,   938,  2719,
    2726,  2728,  2732,  2733,  2736,  2757,  2747,   720,  2846,  2761,
    2769,  2770,  2748,  2773,  2781,  2569,  2783,  2789,   475,   475,
    2792,  2785,  2797,   475,   723,  2926,  2811,  2815,   475,  2462,
    2817,   475,   475,  2820,  2831,  2806,   475,  2830,   720,  2832,
    2842,   720,  2851,  2854,  2855,  2857,  2868,  1142,  1145,  1146,
    2872,  2711,  2874,  2875,  2877,  2880,  2881,   475,  2882,  2886,
      71,   475,  2887,  2888,  2908,  2897,  2901,  2283,  2916,  2059,
    2922,  2864,  -538,  2059,  2931,  2937,  1253,  1975,  2950,  2938,
    2952,  2570,  2947,   475,  2957,  2958,  2571,  2949,  2959,  2948,
    2970,  2972,   472,  2976,  2379,  1823,   472,  1323,  2383,  2127,
   -1723, -1723, -1723,  1738,  1327,  1328,  1329,  1330,  1331,  1332,
    1555,  2542,  2863,  2348,  2339,   937,  1127,  2686,  2918,  2912,
    2590,  2967,  2421,  2810,  2946,   475,  2953,  2746,  1428,  2572,
    2134,  2460,  2914,  2112,   723,   623,  2166,  2381,   935,   624,
    2951,  2384,  2108,  1291,  2913,  2573,  1976,  2833,  1737,  2167,
    2452,  2206,  2428,  2429,  2430,  2431,  2432,  2433,  2434,  2435,
    2436,  2437,  2632,  1944,  2425,  2443,  1371,  1352,  2539,  2541,
    2091,  2053,  1410,  1789,  1409,  2053,  2845,  2859,  2941,  2102,
    1766,  2904,  2325,  2853,  2791,   578,  1414,  2536,  2072,  2423,
    1302,  1788,  2298,  1303,  2523,  2507,  2775,   711,  2294,    71,
      71,  2841,   502,   502,  2840,  2847,  1593,  2848,  2685,   578,
     578,  1379,  1595,  1599,  2165,  1600,  2906,  2896,  2907,  2009,
    1717,  2094,  1583,  1309,  2032,   795,  1950,  1859,  2030,  2324,
   -1723,   475,   713,  2066,   723,   578,  1431,  1727,   475,  2340,
    1375,  2171,  2574,  1523,   720,  1544,   475,   475,   578,  2575,
     475,     0,     0,     0,     0,  1311,     0,     0,     0,     0,
       0,     0,   475,     0,     0,   578,     0,     0,     0,   578,
       0,   475,     0,     0,  2059,     0,   475,     0,     0,   475,
       0,     0,     0,  2059,     0,     0,   475,   475,  2059,     0,
    2615,  2059,     0,     0,     0,     0,     0,   472,   475,     0,
     475,     0,     0,     0,   979,     0,   472,     0,     0,     0,
    2059,   472,     0,     0,   472,     0,     0,     0,     0,  1365,
     475,    71,     0,   980,     0,  2026,     0,     0,     0,     0,
       0,     0,     0,   472,     0,     0,     0,     0,     0,     0,
       0,  1977,  1978,  1979,  1377,  1980,  1981,  1982,  1983,  1984,
    1985,     0,     0,  2425,   811, -1723,     0,  1970,     0,     0,
       0,     0,  1971,  1972,  1973,     0,     0,     0,     0,  1420,
     711, -1723,     0,  2537,   981,     0, -1723,     0,     0,  2264,
       0,   714,  1447,     0,   475,  2053,     0,     0,   475,   723,
    2053,     0,     0,  2053,     0,     0,  2059,     0,     0,   590,
       0,  1632,  1488,  1471,     0,   713,     0,     0,     0,     0,
     578, -1723,   475,     0,     0,     0,   475,     0,  1516,   472,
     723,     0,     0,   723,     0,     0,     0,   475,  2059,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2372,     0,   475,     0,   716,     0,  2731,     0,     0,  1534,
       0,   472,  1127,     0,     0,     0,  1127,   475,     0,     0,
       0,     0,     0,     0,   982,     0,  1320,     0,  2615,     0,
       0,     0,     0,     0,     0,   711,     0,    71,     0,     0,
       0,     0,     0,     0,   640,   640,     0,   502,   502,     0,
     502,   640,   811,   578,     0,  1970,     0,  2612,     0,    71,
    1971,  1972,  1973,     0,     0,     0,     0,     0,     0,     0,
     713,   475,     0,   983,   475,     0,     0,  2265,  1239,  1632,
       0,   984,     0,     0,     0,   717,  2059,     0,     0,     0,
    2053,     0,     0,   985,     0,   475,     0,   475,     0,   475,
    1622,  1286,     0,   475,  1504,     0,     0,     0,     0,   472,
     475,  1648,     0,     0,   714,     0,     0,     0, -1723,     0,
       0,  1975,  2059,     0,   986,     0,   811,     0,     0,  1970,
    2827,   475,     0,  2705,  1971,  1972,  1973,     0,     0,     0,
       0,   640,  2684,     0,     0,   472,     0,     0,     0,     0,
       0,   475,   475,     0,     0,     0,     0,     0,     0,     0,
       0,    71,     0,     0,     0,   475,     0,     0,  2724,  2725,
       0,   988,     0,     0,   578,   904,     0,   716,     0,     0,
       0,     0,  2734,     0,     0,  1127,  2425,  1553,     0,  2860,
    1976,     0,     0,   989,     0,     0,   578,     0,   578,     0,
       0,     0,   475,     0,   475,     0,  2423,     0,  1751,     0,
    1756,     0,   711,   991,  2059,     0,     0,     0, -1723,   714,
      71,     0,     0,     0,     0,  1327,  1328,  1329,  1330,  1331,
    1332,     0,     0,     0,     0,     0,     0,   472,     0,     0,
       0,     0,     0,     0,     0,   578,     0,   713,     0,     0,
       0,     0,  1431,   502,     0,  2793,     0,     0,   717,  1975,
       0,     0,     0,   502,  1805,   502,  1809,     0,   502,     0,
       0,   475,     0,     0,   502,     0,   502,     0,  2927,     0,
       0,     0,   716,  2814,     0,     0,     0,   640,   502,     0,
       0,     0,   640,   502,     0,     0,     0,   502,   502,   502,
     502,     0,   502,   502,     0,     0,     0,     0,  1726,    71,
       0,     0,     0,     0,  1632,  1632,     0,     0,     0,  1632,
       0,     0,   578,   578,  1871,     0,     0,     0,  1976,     0,
    1736, -1501,  1739, -1723,     0,  2822,     0,     0,     0,     0,
    1887,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1632,  1632,     0,   717,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1302,     0,     0,  1303,     0,  1784,
       0,     0,     0,     0,     0,  1977,  1978,  1979,     0,  1980,
    1981,  1982,  1983,  1984,  1985,     0,   714,     0,     0,   711,
     711,     0,  1976,     0,     0,     0,     0,  1309,     0,     0,
       0,     0,     0,     0, -1723,     0,     0,     0,   719,     0,
       0,     0,     0,     0, -1501,     0,     0,     0,  1302,     0,
       0,  1303,     0,     0,   713,   713,  1304,  1305,  1306,  1311,
       0,     0,     0,     0,     0,   711,     0,     0,     0,     0,
       0,     0,     0,  1307,     0,     0,  1869,  1870,     0,   716,
       0,  1309,     0,     0,     0,     0,     0,     0,  1310,     0,
       0,     0,     0,     0,     0,     0, -1501,   502,     0,  2423,
     713,     0,     0,     0,  1291,     0,     0,     0,     0, -1501,
       0,     0,     0,  1311, -1501,     0,     0,     0,     0, -1501,
       0,     0,     0,     0,     0,     0,     0,     0, -1501,  2274,
       0,     0, -1501,     0,     0,     0,     0,     0,  1622,     0,
       0,     0,     0,  1977,  1978,  1979,     0,  1980,  1981,  1982,
    1983,  1984,  1985,     0,     0,     0,   711,     0,     0, -1723,
     717,     0, -1501,     0,     0,     0,     0,     0,     0,     0,
       0,   578,     0,     0,   811, -1723,     0,  1970,  2062,     0,
   -1723, -1501,  1971,  1972,  1973,     0,     0,     0,     0,     0,
       0,   713,     0,  2062,     0,     0,     0,  2081,     0,  2492,
    2084,     0,  1756,   714,   714,     0,     0,     0,     0,     0,
       0,   719,     0,  1312,     0, -1723,     0,  1977,  1978,  1979,
       0,  1980,  1981,  1982,  1983,  1984,  1985,     0,     0,  1313,
   -1501,     0,     0, -1501,  1314,     0,     0,     0,     0, -1501,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   714,
       0,  1488,     0,     0,     0,  1315,  1316,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   716,   716,     0,  1317,
    1320,     0,     0, -1501,     0,     0,     0,     0,     0,     0,
    1632,  1632,  1632,  1632,   711,     0,  1632,  1632,  1632,  1632,
    1632,  1632,  1632,  1632,  1632,  1632, -1501,     0,     0,     0,
       0,     0,     0,     0,     0,  2045,     0,  1318,     0,     0,
    1319,     0,   716,  1488,     0,     0,   719,     0,   578,   713,
       0,     0,     0,     0,  1320,  1488,   578,   578,   502,     0,
     578,  1302,     0,     0,  1303,     0,     0,     0,  1632,  1632,
     714,     0,     0,     0,   578,     0,     0,   717,   717,     0,
       0,  2046,     0,     0,     0,     0,     0,     0,  2201,     0,
       0,     0, -1723,     0,  1309,     0,     0,     0,     0,     0,
       0, -1723,     0,     0,   640,     0,     0,     0, -1501,     0,
       0,  1975,     0,     0,     0,     0, -1501,   711,     0,     0,
    1488,  1488,     0,   717,     0,     0,  1311,     0,     0,     0,
       0,     0, -1501,   716, -1501, -1501,     0,     0,     0,     0,
       0,     0,     0,  1622,     0,     0,  1322,     0,     0,     0,
       0,     0,   713,  1592,     0,   544,     0,     0,     0,     0,
     811,     0,   711,  1970,     0,     0,     0,     0,  1971,  1972,
    1973, -1501,     0,     0, -1501, -1501, -1501,     0,     0,     0,
    1976,     0,  2168,     0,     0,  2493,     0,     0,     0,     0,
    2177,  2179, -1723,     0,  2183,     0,  2277,   713,   714,  1327,
    1328,  1329,  1330,  1331,  1332,     0,     0,     0,  2194,     0,
       0,     0,     0,     0,   717,     0,     0,     0,     0,  2285,
       0,     0,     0,   719,     0,     0, -1723,   578,   578,   578,
     473,     0,  2062,  2302,     0,     0,     0,  2302,  2316,     0,
       0,     0, -1723,     0,     0,     0,  1323, -1723,     0,  1324,
    1325,  1326,     0,  1327,  1328,  1329,  1330,  1331,  1332,  1183,
    1184,   716,     0,     0,     0,     0,     0,  1756,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0, -1723,   578,     0,   502,     0,     0,     0,  1488,
    1431,  1488,     0,  1516,     0,     0,     0,     0,     0,     0,
       0,   714,     0,     0,     0,     0,     0,     0,     0,   502,
       0,  2382,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   502,   502,   502,   502,   502,   502,
     502,   502,   502,   502,  1185,  1186,     0,  1320,     0,     0,
       0,     0,   717,     0,     0,     0,   714,     0,     0,  1431,
       0,     0,   578,     0,     0,     0,     0,   888,   888,     0,
       0,  2290,  2291,  2292,   716,  1431,     0,  1975,     0,     0,
       0,     0,     0,  1516,     0,  1977,  1978,  1979,     0,  1980,
    1981,  1982,  1983,  1984,  1985,   578,     0,     0,     0,     0,
       0,     0,  1488,  1302,     0,     0,  1303,  1187,  1188,  1189,
    1190,  1191,  1192,     0,     0,  1193,  1194,     0,     0,   716,
     719,   719,     0,     0,     0,     0,     0,  2347,     0,     0,
    1036,  1043,     0,     0,     0,     0,  1309,     0,     0, -1723,
       0,     0,     0, -1723,     0,     0,  1976,     0,     0,     0,
    2485,     0,     0,     0,     0,   717,     0,     0,     0,     0,
       0,  1183,  1184,     0,     0,     0,   719,     0,  1311,     0,
       0,     0,     0,  2501,     0,     0,   578,   578,   578,   578,
     711,     0,     0,  2302,  2316,     0,  2302,     0,     0,  2510,
       0,     0,     0,  2062,     0,     0,  2448,  2062,     0,   979,
     717,     0,     0,  2528,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   713,     0,     0,   980,   904,
       0,  1195,  1196,  2081,     0,     0,  1632,     0,  1756,  1553,
       0,     0,  1622,     0,     0,     0,  1185,  1186,  2278, -1723,
    1431,     0,     0,     0,     0,   711,  1327,  1328,  1329,  1330,
    1331,  1332,     0,     0,     0,     0,     0,   719,     0,     0,
       0,     0,     0,   711,     0,  2591,     0,     0, -1723,   981,
    2370,     0,     0,     0,     0,     0,     0,     0,  2371,     0,
     713,     0,     0,     0, -1723,     0,     0,     0,   711, -1723,
       0,     0,     0,     0,     0,   711,     0,     0,   713,  1187,
    1188,  1189,  1190,  1191,  1192,     0,     0,  1193,  1194,  1036,
    2502,  2503,  2504,  2505,     0,  1632,     0,     0,   711,     0,
       0,     0,     0,   713, -1723,     0,  1257,     0,     0,     0,
     713,     0,  1197,  1198,  1488,  2372,     0,     0,     0,     0,
       0,  1977,  1978,  1979,  1887,  1980,  1981,  1982,  1983,  1984,
    1985,     0,     0,   713,  2629,  1268,     0,     0,     0,   982,
       0,     0,     0,     0,   714,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1278,  1279,  1280,     0,  1320,
    1287,     0,     0,  1632,     0,   719,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   473,  2302,
       0,     0,  2655,  1342,     0,   502,     0,  2062,   983,     0,
       0,     0,  2062,  1195,  1196,  2062,   984,  2666,     0,     0,
    2669,     0,     0,     0,     0,     0,     0,   716,   985,   714,
    2373,     0,     0,     0,  2692,   711,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   714,     0,     0,
       0,     0,     0,     0,   640,   502,     0,  1386,     0,   986,
       0,  1400,  1405,   578,     0,     0,     0,     0,     0,     0,
     713, -1723,   714,     0,     0,     0,     0,     0,     0,   714,
       0,     0,     0,     0,     0,     0,     0,     0,   719,     0,
     502,   502,   716,     0,   711,     0,     0,     0,     0,     0,
       0,  1431,   714,     0,   502,     0,   988,     0,   717,     0,
     716,     0,  1036,     0,     0,     0,     0,   578,     0,  1036,
    2692,     0,     0,     0,  1197,  1198,     0,     0,   989,   713,
       0,     0,     0,   719,     0,   716,     0,     0,     0,   502,
    1036,     0,   716,     0,  1199,     0,     0,     0,   991,     0,
    2374,     0,  2062,  2375,     0,     0,     0,  2669,     0,     0,
       0,     0,     0,   711,     0,   716,     0,     0,     0,     0,
       0, -1723,  2788,   717,     0,     0,     0,   502,  1327,  1328,
    1329,  1330,  1331,  1332,     0,     0,   578,     0,     0,     0,
       0,   717,     0,     0,     0,     0,     0,  2713,   713,     0,
       0,     0,     0,     0,     0,   502,     0,     0,     0,   640,
       0,     0,     0,     0,     0,     0,   717,     0,     0,   714,
       0,     0,   578,   717,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   717,     0,     0,     0,
     473,  2752,     0,     0,     0,  1439,     0,  1036,     0,  2844,
       0,     0,     0,   502,     0,     0,     0,  2666,     0,     0,
       0,     0,     0,   711,     0,     0,     0,     0,   714,     0,
       0,     0,   716,     0,     0,     0,  2692,   640,   640,   640,
       0,     0,   966,     0,  1302,     0,     0,  1303,   967,     0,
       0,     0,     0,   711,     0,   979,     0,     0,   713,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2802,     0,     0,     0,   980,     0,     0,  1309,     0,     0,
       0,     0,  2666,     0, -1723,     0,     0,     0,   713,     0,
       0,   716,     0,     0,  2788,     0,     0,   714,     0,  1238,
       0,     0,     0,     0,     0,  1238,  2826,     0,  1756,  1311,
       0,  1302,     0,   717,  1303,     0,     0,  1587,     0,     0,
       0,     0,  1431,   711,     0,   981,     0,  1606,  2692,  1623,
       0,     0,  1635,  1638,  1643,  1646,     0,     0,     0,     0,
       0,     0,     0,     0,  1309,     0,     0,     0,  2655,   640,
       0, -1723,     0,     0,   968,     0,  1658,     0,   713,     0,
     716,     0,  1662,  1663,  1664,  1665,     0,     0,     0,     0,
    1674,  1675,   717,     0,     0,  1686,  1311,     0,     0,  1689,
       0,     0,  1697,  1698,  1699,  1700,  1701,  1702,  1703,  1704,
    1705,   719,  1299,  1706,     0,     0,     0,     0,  1714,     0,
       0,  1718,     0,   888,     0,  1036,     0,   714,     0, -1723,
       0,     0,     0,     0,     0,   982,  1238,     0,  1238,  1238,
       0,     0,     0,     0,     0, -1723,     0,     0,  1740,     0,
   -1723,     0,     0,     0,     0,     0,     0,   714,     0,     0,
       0,   717,   711,     0,     0,     0,  2496,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   719,     0,     0,  1279,
    1280,     0,     0,     0,   983, -1723,     0,     0,     0,     0,
     716,     0,   984,     0,   719,     0, -1723,   713,   711,  1335,
       0,     0,     0,     0,   985,  1238,     0,     0,  1238,  1238,
    1183,  1184, -1723,     0,     0,     0,     0, -1723,     0,   719,
     716,     0,     0,     0,     0,   969,   719,   714,     0,   711,
       0,     0,   711,   713,     0,   986,     0,     0,     0,  1335,
    1320,     0,     0,     0,     0,     0,     0,     0,     0,   719,
       0,     0, -1723,     0,     0,     0,  1036,     0,     0,  1856,
    1857,     0,  1858,     0,   713,     0,     0,   713,     0,     0,
       0,   717,     0,     0,     0,     0,   987,     0,     0,     0,
     971,     0,   988,     0,     0,  1185,  1186,     0,     0,     0,
     716,     0,     0,     0,     0,     0,     0,  1896,     0,     0,
       0,   717,     0,     0,   989,     0,     0,  1320,     0,     0,
     990,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   991,     0,     0,     0,     0,     0,
       0,     0, -1723,     0,     0, -1503,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   714,  1335,  1187,  1188,
    1189,  1190,  1191,  1192,  1335,  1036,  1193,  1194,     0,     0,
       0,     0,  1948,     0,     0,     0,   719,  1954,     0,     0,
       0,   717,     0,     0,     0,     0,     0,   973,     0,     0,
       0,     0,   714,     0,     0,     0,     0,     0,     0,  1522,
       0,     0,     0,     0,     0,     0,     0,     0,     0, -1723,
    1531,     0,  1532,     0,     0,  1969,     0,  1537,     0,   716,
       0,     0,     0,   714,     0,     0,   714,  1643,     0,  1643,
    1643,     0,     0,     0,  1538,   719,     0,  2005, -1503,     0,
       0,  2008, -1723,     0,  2010,   711,     0,     0,     0,  1327,
    1328,  1329,  1330,  1331,  1332,   716,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1557,  1559,     0,     0,     0,
       0,     0,  1195,  1196,     0,     0,     0,     0,  2028,     0,
     713,  2031,     0,  2033,     0,     0,   716, -1517,     0,   716,
   -1503,     0,     0,     0,     0,     0,     0,  1590,  1591,     0,
     717,  1604,  1605, -1503,   719,     0,     0,     0, -1503, -1723,
       0,     0,     0, -1503,     0,     0,  1327,  1328,  1329,  1330,
    1331,  1332, -1503,     0,     0,     0, -1503,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   717,     0,     0,     0,
       0,     0,     0,     0,     0,  1386,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0, -1503,     0,     0,     0,
       0,     0,  1405,  1704,     0,     0,     0,   717,     0,     0,
     717,     0,     0,     0,     0, -1503,     0,     0,  1335,     0,
   -1517,  2106,     0,  1197,  1198,     0,     0,     0,     0,  1335,
       0,     0,     0,  1630,     0,     0,     0,     0,     0,  1335,
    1335,  1335,     0,     0,     0,     0,     0,     0,  1335,     0,
       0,     0,     0,     0,   719,     0,     0,     0,     0,     0,
       0,     0,     0,     0, -1503,     0,     0, -1503,     0,   714,
       0,     0, -1517, -1503,     0,     0,  1778,  1778,     0,  1036,
       0,     0,     0,     0,   719, -1517,     0,     0,     0,     0,
   -1517,     0,     0,     0,     0, -1517,     0,     0,     0,     0,
       0,     0,     0,  1335, -1517,     0,     0, -1503, -1517,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1238,     0,     0,     0,
   -1503,     0,   716,     0,     0,     0,  1238,     0, -1517,  1238,
       0,     0,     0,     0,     0,     0,     0,  1335,     0,     0,
       0,     0,     0,     0,   719,     0,     0, -1517,     0,     0,
       0,  1335,     0,     0,     0,     0,  1335,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2219,     0,     0,
       0,     0,     0,     0,     0,  2046,  2223,   504,     0,  2224,
       0,     0,  2226,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0, -1517,     0,     0, -1517,
    1910,  1912, -1503,   717,     0, -1517,     0,     0,  2246,  2247,
   -1503,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2257,     0,     0,     0, -1503,  1238, -1503, -1503,
     505,  2263,     0,     0,  2266,     0,  2268,     0,     0, -1517,
    1238,     0,     0,     0,  2272,     0,   506,     0,     0,     0,
       0,     0,  2279,  2280,     0,     0,     0,     0,     0,     0,
       0,     0, -1517,   719,     0, -1503,     0,     0, -1503, -1503,
   -1503,     0,   966,     0,     0,     0,     0,     0,   967,     0,
       0,  2320,     0,     0,     0,   979,     0,     0,     0,     0,
       0,  2328,     0,     0,     0,     0,     0,     0,     0,   719,
     507,     0,     0,     0,   980,     0,     0,  2341,     0,   508,
       0,     0,     0,     0,     0,     0,     0,  2046,     0,     0,
       0,   509,     0,     0,     0,     0,   510,     0,     0,     0,
     719,     0,     0,   719,     0,     0,     0,     0,  1335,     0,
       0,     0,     0,     0, -1517,     0,     0,     0,     0,     0,
       0,     0, -1517,   511,     0,   981,     0,  1335,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0, -1517,     0,
   -1517, -1517,     0,     0,  1335,     0,  1630,  1630,     0,  1986,
       0,  1630,     0,     0,   968,     0,  1335,     0,     0,  1335,
       0,     0,     0,     0,  1335,     0,   512,  1335,  2068,     0,
     513,     0,     0,     0,     0,     0,     0, -1517,     0,  1335,
   -1517, -1517, -1517,  1335,  1335,  1335,  1335,     0,     0,     0,
       0,     0,  1630,  1630,     0,  1335,  1335,     0,     0,  2098,
    2098,     0,     0,     0,     0,     0,  2473,  1335,     0,     0,
    1335,     0,     0,     0,     0,   982,     0,     0,  1335,  1335,
    1335,  1335,  1335,  1335,  1335,  1335,  1335,  1335,     0,     0,
       0,     0,     0,   514,     0,  1335,     0,     0,     0,  1335,
       0,     0,     0,     0,     0,     0,     0,   515,     0,     0,
       0,     0,  2486,  2487,     0,     0,     0,  2488,     0,     0,
       0,  1335,  2491,     0,   983,  2494,  2495,     0,     0,     0,
    2499,     0,   984,     0,     0,     0,     0,     0,     0,     0,
     516,     0,     0,   517,   985,     0,     0,     0,     0,     0,
       0,   518,     0,     0,   519,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   969,   719,     0,     0,     0,
       0,     0,     0,   520,     0,   986,     0,   888,     0,     0,
       0,     0,     0,     0,     0,     0,   521,     0,     0,     0,
       0,     0,     0,   522,     0,     0,     0,  2197,     0,     0,
       0,     0,   523,     0,     0,     0,     0,     0,   524,     0,
       0,     0,     0,     0,     0,     0,  1825,     0,     0,  2585,
     971,     0,   988,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   525,     0,     0,     0,  1335,  1335,  1335,
       0,     0,     0,     0,   989,     0,     0,     0,     0,     0,
    1826,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   991,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1335,  1302,     0,
       0,  1303,     0,     0,     0,     0,  1304,  1305,  1306,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1307,     0,     0,     0,     0,     0,     0,
       0,  1309,     0,     0,     0,     0,     0,   973,  1310,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1335,
       0,     0,  2005,     0,     0,  1335,     0,     0,     0,     0,
    2639,  2640,     0,  1311,  2641,     0,     0,     0,  1986,  1986,
    1335,     0,  1630,  1630,  1630,  1630,     0,     0,  1630,  1630,
    1630,  1630,  1630,  1630,  1630,  1630,  1630,  1630,  1986,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2680,  2681,     0,     0,     0,     0,  1335,     0,     0,  1335,
       0,  1335,     0,     0,  2694,  1986,  1986,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1335,
    1630,  1630,  1335,     0,  1335,     0,     0,     0,     0,     0,
       0,     0,     0,   -39,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1238,     0,     0,
       0,     0,     1,  1312,     0,     0,     0,     0,     0,     0,
       0,     0,     2,     0,     3,     4,     0,     0,     0,  1313,
       0,     0,     0,     0,  1314,     0,     0,     0,     0,     0,
       5,     0,     0,     0,     0,     0,     0,     0,     0,     6,
       0,     0,     0,     0,     0,  1315,  1316,  1335,     0,     0,
       0,     7,     0,     0,     0,     0,     0,     0,     0,  1317,
       0,     0,     8,     0,     0,     0,  2772,     0,     0,     0,
       0,     0,     0,     0,     9,     0,    10,     0,     0,  1302,
       0,  1287,  1303,     0,     0,     0,     0,  1304,  1305,  1306,
       0,     0,     0,     0,    11,     0,  2794,  1318,     0,     0,
    1319,     0,     0,     0,     0,     0,     0,     0,    12,     0,
       0,  2808,  1309,     0,  1320,     0,     0,  1321,    13,  1310,
       0,     0,     0,     0,    14,     0,     0,     0,     0,     0,
       0,     0,    15,     0,    16,    17,     0,     0,     0,     0,
       0,     0,     0,     0,  1311,     0,     0,    18,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1335,     0,     0,     0,  1335,  1335,     0,  1335,     0,     0,
    1986,  1986,  1986,  1986,     0,     0,    19,  1986,  1986,  1986,
    1986,  1986,  1986,  1986,  1986,  1986,  1986,  1335,  1335,     0,
       0,     0,     0,  2680,     0,     0,     0,  2856,  1335,     0,
       0,     0,     0,     0,  1335,     0,  1322,  1335,     0,  1335,
       0,     0,     0,  1335,     0,    20,  1986,  1986,     0,     0,
    1335,  1335,     0,     0,  1238,  2879,     0,     0,     0,  1238,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1312,  2893,  2893,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2680,
    1313,  1335,     0,     0,     0,  1314,     0,     0,     0,  1335,
       0,  1557,  1559,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1335,     0,     0,     0,  1315,  1316,     0,     0,
       0,     0,    21,     0,     0,    22,     0,     0,  2893,     0,
    1317,     0,     0,     0,     0,     0,  1323,     0,     0,  1324,
    1325,  1326,     0,  1327,  1328,  1329,  1330,  1331,  1332,     0,
       0,     0,     0,     0,    23,     0,  1961,     0,     0,     0,
       0,     0,     0,    24,     0,     0,     0,     0,  1318,     0,
       0,  1319,     0,     0,     0,     0,     0,    25,     0,     0,
       0,     0,     0,     0,    26,  1320,     0,     0,    27,     0,
       0,     0,     0,     0,     0,  2893,     0,     0,    28,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    29,
       0,     0,     0,    30,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1335,     0,     0,     0,  1630,    31,
       0,     0,     0,     0,    32,     0,     0,  1335,  1335,  1335,
       0,     0,  1335,     0,     0,  1335,  1335,    33,     0,     0,
    1335,     0,     0,  1557,  1559,     0,     0,  1322,     0,     0,
       0,     0,     0,     0,  1238,     0,     0,     0,     0,     0,
       0,    34,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    35,     0,     0,   -39,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1630,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1335,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1323,     0,     0,
    1324,  1325,  1326,     0,  1327,  1328,  1329,  1330,  1331,  1332,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1986,  1630,     0,     0,     0,     0,
    1335,  1335,  1335,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1335,  1335,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1335,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1986,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1986,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1335,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1238,     0,     0,
       0,     0,     0,     0,     0,  1335,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1335,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1335,     0,     0,
       0,     0,     0,     0,     0,  1003,   808,   544,   809,   810,
     811,   812,   813,     0,     0,     0,     0,     0,     0,     0,
    1335,    92,    93,    94,    95,    96,    97,    98,    99,  1004,
     100,   101,   102,     0,  1335,     0,     0,   814,     0,     0,
     103,   104,     0,   105,   106,   107,  1005,   109,   110,   111,
     112,   815,  1006,   816,   817,     0,   117,   118,   119,   120,
     121,   122,   818,   819,   123,   124,   820,   821,   127,     0,
     128,   129,   130,   131,   822,     0,  1007,     0,   134,   135,
     136,   137,   138,   139,  1008,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,  1009,   151,   152,   153,
     824,   825,   826,  1010,   828,   829,   830,   155,   156,   157,
     158,   159,   160,   161,   831,   832,   164,   833,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,  1011,     0,   177,   178,   670,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   834,   193,   194,   195,   196,   835,   836,   198,
       0,   199,   200,   837,   202,     0,   203,     0,   204,  1012,
       0,  1013,   207,   208,   209,  1014,   211,     0,   212,     0,
     838,   839,   215,     0,   216,   217,   218,   219,   220,   221,
     222,  1015,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,     0,   234,  1016,   236,   237,   238,   239,
     240,   840,   841,     0,   842,     0,   244,  1017,  1018,   247,
    1019,   249,   250,   251,   252,   253,     0,     0,   254,  1020,
     256,  1021,     0,   258,   259,   260,   843,   844,   261,   262,
     263,   264,   265,  1022,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   845,  1023,   846,   288,   289,   290,   291,   847,
     292,   293,  1024,   295,   848,   849,   297,   850,   299,   300,
     301,     0,   302,   303,     0,     0,   851,   305,   306,     0,
       0,   307,   308,  1025,   310,  1026,   852,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,     0,   323,   324,
     853,   326,   327,   328,   329,   330,   331,     0,   332,   333,
     334,   335,   336,   337,     0,   338,   339,   340,   854,   342,
     343,   344,   345,     0,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,     0,   359,   360,
    1027,   362,   363,   364,   855,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,     0,   377,   378,   379,
     380,   381,   856,   382,   383,   384,   385,   386,  1028,   388,
     389,   857,   391,     0,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,  1029,   404,   858,   406,     0,
     407,   408,     0,   409,  1030,   411,   412,   413,   414,   415,
       0,   859,   860,     0,     0,   418,   419,   861,   421,   862,
     863,   423,   424,  1031,   426,   427,   428,   429,   430,     0,
       0,   431,   432,   433,   434,   435,   865,     0,   436,   437,
     438,   439,   440,   441,   866,  1032,   443,  1033,   445,   446,
     447,   448,     0,     0,   449,     0,     0,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   867,     0,
       0,     0,     0,     0,     0,   868,   869,  1034,     0,     0,
       0,     0,   871,     0,   872,  1035,     0,     0,     0,   873,
       0,   874,   875,    91,   808,   544,   809,   810,   811,   812,
     813,     0,     0,     0,     0,     0,     0,     0,     0,    92,
      93,    94,    95,    96,    97,    98,    99,     0,   100,   101,
     102,     0,     0,     0,     0,   814,     0,     0,   103,   104,
       0,   105,   106,   107,   108,   109,   110,   111,   112,   815,
     114,   816,   817,     0,   117,   118,   119,   120,   121,   122,
     818,   819,   123,   124,   820,   821,   127,     0,   128,   129,
     130,   131,   822,     0,   823,     0,   134,   135,   136,   137,
     138,   139,   140,   141,   142,   143,     0,   144,   145,   146,
     147,   148,   149,     0,   150,   151,   152,   153,   824,   825,
     826,   827,   828,   829,   830,   155,   156,   157,   158,   159,
     160,   161,   831,   832,   164,   833,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,   174,   175,   176,
       0,     0,   177,   178,   670,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,   191,
     834,   193,   194,   195,   196,   835,   836,   198,     0,   199,
     200,   837,   202,     0,   203,     0,   204,   205,     0,   206,
     207,   208,   209,   210,   211,     0,   212,     0,   838,   839,
     215,     0,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,     0,   228,   229,   230,   231,   232,
     233,     0,   234,   235,   236,   237,   238,   239,   240,   840,
     841,     0,   842,     0,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,     0,     0,   254,   255,   256,   257,
       0,   258,   259,   260,   843,   844,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     845,   286,   846,   288,   289,   290,   291,   847,   292,   293,
     294,   295,   848,   849,   297,   850,   299,   300,   301,     0,
     302,   303,     0,     0,   851,   305,   306,     0,     0,   307,
     308,   309,   310,   311,   852,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,     0,   323,   324,   853,   326,
     327,   328,   329,   330,   331,     0,   332,   333,   334,   335,
     336,   337,     0,   338,   339,   340,   854,   342,   343,   344,
     345,     0,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,     0,   359,   360,   361,   362,
     363,   364,   855,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,    25,   377,   378,   379,   380,   381,
     856,   382,   383,   384,   385,   386,   387,   388,   389,   857,
     391,     0,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   858,   406,     0,   407,   408,
      30,   409,   410,   411,   412,   413,   414,   415,     0,   859,
     860,     0,     0,   418,   419,   861,   421,   862,   863,   423,
     424,   864,   426,   427,   428,   429,   430,     0,     0,   431,
     432,   433,   434,   435,   865,     0,   436,   437,   438,   439,
     440,   570,   866,     0,   443,   444,   445,   446,   447,   448,
       0,     0,   449,     0,    33,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   867,     0,    34,     0,
       0,     0,     0,   868,   869,     0,     0,     0,     0,     0,
     871,     0,   872,  2784,     0,     0,     0,   873,     0,   874,
     875,    91,   808,   544,   809,   810,   811,   812,   813,     0,
       0,     0,     0,     0,     0,     0,     0,    92,    93,    94,
      95,    96,    97,    98,    99,     0,   100,   101,   102,     0,
       0,     0,     0,   814,     0,     0,   103,   104,     0,   105,
     106,   107,   108,   109,   110,   111,   112,   815,   114,   816,
     817,     0,   117,   118,   119,   120,   121,   122,   818,   819,
     123,   124,   820,   821,   127,     0,   128,   129,   130,   131,
     822,     0,   823,     0,   134,   135,   136,   137,   138,   139,
     140,   141,   142,   143,     0,   144,   145,   146,   147,   148,
     149,     0,   150,   151,   152,   153,   824,   825,   826,   827,
     828,   829,   830,   155,   156,   157,   158,   159,   160,   161,
     831,   832,   164,   833,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,   174,   175,   176,     0,     0,
     177,   178,   670,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,   191,   834,   193,
     194,   195,   196,   835,   836,   198,     0,   199,   200,   837,
     202,     0,   203,     0,   204,   205,     0,   206,   207,   208,
     209,   210,   211,     0,   212,     0,   838,   839,   215,     0,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,     0,
     234,   235,   236,   237,   238,   239,   240,   840,   841,     0,
     842,     0,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,     0,     0,   254,   255,   256,   257,     0,   258,
     259,   260,   843,   844,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   845,   286,
     846,   288,   289,   290,   291,   847,   292,   293,   294,   295,
     848,   849,   297,   850,   299,   300,   301,     0,   302,   303,
       0,     0,   851,   305,   306,     0,     0,   307,   308,   309,
     310,   311,   852,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,     0,   323,   324,   853,   326,   327,   328,
     329,   330,   331,     0,   332,   333,   334,   335,   336,   337,
       0,   338,   339,   340,   854,   342,   343,   344,   345,     0,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,     0,   359,   360,   361,   362,   363,   364,
     855,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,    25,   377,   378,   379,   380,   381,   856,   382,
     383,   384,   385,   386,   387,   388,   389,   857,   391,     0,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   858,   406,     0,   407,   408,    30,   409,
     410,   411,   412,   413,   414,   415,     0,   859,   860,     0,
       0,   418,   419,   861,   421,   862,   863,   423,   424,   864,
     426,   427,   428,   429,   430,     0,     0,   431,   432,   433,
     434,   435,   865,     0,   436,   437,   438,   439,   440,   570,
     866,     0,   443,   444,   445,   446,   447,   448,     0,     0,
     449,     0,    33,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   867,     0,    34,     0,     0,     0,
       0,   868,   869,     0,     0,     0,     0,     0,   871,     0,
     872,     0,     0,     0,     0,   873,     0,   874,   875,    91,
     808,   544,   809,   810,   811,   812,   813,     0,     0,     0,
       0,     0,     0,     0,     0,    92,    93,    94,    95,    96,
      97,    98,    99,     0,   100,   101,   102,     0,     0,     0,
       0,   814,     0,     0,   103,   104,     0,   105,   106,   107,
     108,   109,   110,   111,   112,   815,   114,   816,   817,  1639,
     117,   118,   119,   120,   121,   122,   818,   819,   123,   124,
     820,   821,   127,     0,   128,   129,   130,   131,   822,     0,
     823,     0,   134,   135,   136,   137,   138,   139,   140,   141,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
     150,   151,   152,   153,   824,   825,   826,   827,   828,   829,
     830,   155,   156,   157,   158,   159,   160,   161,   831,   832,
     164,   833,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,   174,   175,   176,     0,     0,   177,   178,
     670,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,   191,   834,   193,   194,   195,
     196,   835,   836,   198,     0,   199,   200,   837,   202,     0,
     203,     0,   204,   205,  1640,   206,   207,   208,   209,   210,
     211,     0,   212,     0,   838,   839,   215,     0,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,     0,   234,   235,
     236,   237,   238,   239,   240,   840,   841,     0,   842,     0,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
       0,  1641,   254,   255,   256,   257,     0,   258,   259,   260,
     843,   844,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   845,   286,   846,   288,
     289,   290,   291,   847,   292,   293,   294,   295,   848,   849,
     297,   850,   299,   300,   301,     0,   302,   303,     0,     0,
     851,   305,   306,     0,     0,   307,   308,   309,   310,   311,
     852,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,     0,   323,   324,   853,   326,   327,   328,   329,   330,
     331,     0,   332,   333,   334,   335,   336,   337,     0,   338,
     339,   340,   854,   342,   343,   344,   345,     0,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,     0,   359,   360,   361,   362,   363,   364,   855,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
       0,   377,   378,   379,   380,   381,   856,   382,   383,   384,
     385,   386,   387,   388,   389,   857,   391,     0,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   858,   406,     0,   407,   408,     0,   409,   410,   411,
     412,   413,   414,   415,     0,   859,   860,     0,  1642,   418,
     419,   861,   421,   862,   863,   423,   424,   864,   426,   427,
     428,   429,   430,     0,     0,   431,   432,   433,   434,   435,
     865,     0,   436,   437,   438,   439,   440,   441,   866,     0,
     443,   444,   445,   446,   447,   448,     0,     0,   449,     0,
       0,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   867,     0,     0,     0,     0,     0,     0,   868,
     869,     0,     0,     0,     0,     0,   871,     0,   872,     0,
       0,     0,     0,   873,     0,   874,   875,    91,   808,   544,
     809,   810,   811,   812,   813,     0,     0,     0,     0,     0,
       0,     0,     0,    92,    93,    94,    95,    96,    97,    98,
      99, -1016,   100,   101,   102,     0,     0,     0, -1016,   814,
       0,     0,   103,   104,     0,   105,   106,   107,   108,   109,
     110,   111,   112,   815,   114,   816,   817,     0,   117,   118,
     119,   120,   121,   122,   818,   819,   123,   124,   820,   821,
     127,     0,   128,   129,   130,   131,   822,     0,   823,     0,
     134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,   150,   151,
     152,   153,   824,   825,   826,   827,   828,   829,   830,   155,
     156,   157,   158,   159,   160,   161,   831,   832,   164,   833,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,   174,   175,   176,     0,     0,   177,   178,   670,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,   191,   834,   193,   194,   195,   196,   835,
     836,   198,     0,   199,   200,   837,   202,     0,   203,     0,
     204,   205,     0,   206,   207,   208,   209,   210,   211,     0,
     212,     0,   838,   839,   215,     0,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,     0,   228,
     229,   230,   231,   232,   233,     0,   234,   235,   236,   237,
     238,   239,   240,   840,   841,     0,   842,     0,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,     0,     0,
     254,   255,   256,   257,     0,   258,   259,   260,   843,   844,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   845,   286,   846,   288,   289,   290,
     291,   847,   292,   293,   294,   295,   848,   849,   297,   850,
     299,   300,   301,     0,   302,   303,     0,     0,   851,   305,
     306,     0,     0,   307,   308,   309,   310,   311,   852,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,     0,
     323,   324,   853,   326,   327,   328,   329,   330,   331,     0,
     332,   333,   334,   335,   336,   337,     0,   338,   339,   340,
     854,   342,   343,   344,   345,     0,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,     0,
     359,   360,   361,   362,   363,   364,   855,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,     0,   377,
     378,   379,   380,   381,   856,   382,   383,   384,   385,   386,
     387,   388,   389,   857,   391, -1016,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   858,
     406,     0,   407,   408,     0,   409,   410,   411,   412,   413,
     414,   415,     0,   859,   860,     0,     0,   418,   419,   861,
     421,   862,   863,   423,   424,   864,   426,   427,   428,   429,
     430,     0,     0,   431,   432,   433,   434,   435,   865,     0,
     436,   437,   438,   439,   440,   441,   866,     0,   443,   444,
     445,   446,   447,   448,     0,     0,   449,     0,     0,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     867,     0,     0,     0,     0,     0,     0,   868,   869,     0,
       0,     0,     0,     0,   871,     0,   872,     0,     0,     0,
       0,   873,     0,   874,   875,    91,   808,   544,   809,   810,
     811,   812,   813,     0,     0,     0,     0,     0,     0,     0,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     100,   101,   102,     0,     0,     0,     0,   814,     0,     0,
     103,   104,     0,   105,   106,   107,   108,   109,   110,   111,
     112,   815,   114,   816,   817,     0,   117,   118,   119,   120,
     121,   122,   818,   819,   123,   124,   820,   821,   127,     0,
     128,   129,   130,   131,   822,     0,   823,     0,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,   150,   151,   152,   153,
     824,   825,   826,   827,   828,   829,   830,   155,   156,   157,
     158,   159,   160,   161,   831,   832,   164,   833,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   670,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   834,   193,   194,   195,   196,   835,   836,   198,
       0,   199,   200,   837,   202,     0,   203,     0,   204,   205,
       0,   206,   207,   208,   209,   210,   211,     0,   212,     0,
     838,   839,   215,     0,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,     0,   234,   235,   236,   237,   238,   239,
     240,   840,   841,     0,   842,     0,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,     0,     0,   254,   255,
     256,   257,     0,   258,   259,   260,   843,   844,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   845,   286,   846,   288,   289,   290,   291,   847,
     292,   293,   294,   295,   848,   849,   297,   850,   299,   300,
     301,     0,   302,   303,     0,     0,   851,   305,   306,     0,
       0,   307,   308,   309,   310,   311,   852,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,     0,   323,   324,
     853,   326,   327,   328,   329,   330,   331,     0,   332,   333,
     334,   335,   336,   337,     0,   338,   339,   340,   854,   342,
     343,   344,   345,     0,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,     0,   359,   360,
     361,   362,   363,   364,   855,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,     0,   377,   378,   379,
     380,   381,   856,   382,   383,   384,   385,   386,   387,   388,
     389,   857,   391,     0,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   858,   406,     0,
     407,   408,     0,   409,   410,   411,   412,   413,   414,   415,
       0,   859,   860,     0,     0,   418,   419,   861,   421,   862,
     863,   423,   424,   864,   426,   427,   428,   429,   430,     0,
       0,   431,   432,   433,   434,   435,   865,     0,   436,   437,
     438,   439,   440,   441,   866,     0,   443,   444,   445,   446,
     447,   448,     0,     0,   449,     0,     0,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   867,     0,
       0,     0,     0,     0,     0,   868,   869,   870,     0,     0,
       0,     0,   871,     0,   872,     0,     0,     0,     0,   873,
       0,   874,   875,    91,  1396,   544,   809,   810,   811,  1397,
     813,     0,     0,     0,     0,     0,     0,     0,     0,    92,
      93,    94,    95,    96,    97,    98,    99,  1398,   100,   101,
     102,     0,     0,     0,     0,   814,     0,     0,   103,   104,
       0,   105,   106,   107,   108,   109,   110,   111,   112,   815,
     114,   816,   817,     0,   117,   118,   119,   120,   121,   122,
     818,   819,   123,   124,   820,   821,   127,     0,   128,   129,
     130,   131,   822,     0,   823,     0,   134,   135,   136,   137,
     138,   139,   140,   141,   142,   143,     0,   144,   145,   146,
     147,   148,   149,     0,   150,   151,   152,   153,   824,   825,
     826,   827,   828,   829,   830,   155,   156,   157,   158,   159,
     160,   161,   831,   832,   164,   833,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,   174,   175,   176,
       0,     0,   177,   178,   670,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,   191,
     834,   193,   194,   195,   196,   835,   836,   198,     0,   199,
     200,   837,   202,     0,   203,     0,   204,   205,     0,   206,
     207,   208,   209,   210,   211,     0,   212,     0,   838,   839,
     215,     0,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,     0,   228,   229,   230,   231,   232,
     233,     0,   234,   235,   236,   237,   238,   239,   240,   840,
     841,     0,   842,     0,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,     0,     0,   254,   255,   256,   257,
       0,   258,   259,   260,   843,   844,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     845,   286,   846,   288,   289,   290,   291,   847,   292,   293,
     294,   295,   848,   849,   297,   850,   299,   300,   301,     0,
     302,   303,     0,     0,   851,   305,   306,     0,     0,   307,
     308,   309,   310,   311,   852,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,     0,   323,   324,   853,   326,
     327,   328,   329,   330,   331,     0,   332,   333,   334,   335,
     336,   337,     0,   338,   339,   340,   854,   342,   343,   344,
     345,     0,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,     0,   359,   360,   361,   362,
     363,   364,   855,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,     0,   377,   378,   379,   380,   381,
     856,   382,   383,   384,   385,   386,   387,   388,   389,   857,
     391,     0,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   858,   406,     0,   407,   408,
       0,   409,   410,   411,   412,   413,   414,   415,     0,   859,
     860,     0,     0,   418,   419,   861,   421,   862,   863,   423,
     424,   864,   426,   427,   428,   429,   430,     0,     0,   431,
     432,   433,   434,   435,   865,     0,   436,   437,   438,   439,
     440,   441,   866,     0,   443,   444,   445,   446,   447,   448,
       0,     0,   449,     0,     0,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   867,     0,     0,     0,
       0,     0,     0,   868,   869,     0,     0,     0,     0,     0,
     871,     0,   872,     0,     0,     0,     0,   873,     0,   874,
     875,  1003,   808,   544,   809,   810,   811,   812,   813,     0,
       0,     0,     0,     0,     0,     0,     0,    92,    93,    94,
      95,    96,    97,    98,    99,     0,   100,   101,   102,     0,
       0,     0,     0,   814,     0,     0,   103,   104,     0,   105,
     106,   107,  1005,   109,   110,   111,   112,   815,  1006,   816,
     817,     0,   117,   118,   119,   120,   121,   122,   818,   819,
     123,   124,   820,   821,   127,     0,   128,   129,   130,   131,
     822,     0,  1007,     0,   134,   135,   136,   137,   138,   139,
    1008,   141,   142,   143,     0,   144,   145,   146,   147,   148,
     149,     0,  1009,   151,   152,   153,   824,   825,   826,  1010,
     828,   829,   830,   155,   156,   157,   158,   159,   160,   161,
     831,   832,   164,   833,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,   174,   175,   176,     0,     0,
     177,   178,   670,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,   191,   834,   193,
     194,   195,   196,   835,   836,   198,     0,   199,   200,   837,
     202,     0,   203,     0,   204,  1012,     0,  1013,   207,   208,
     209,  1014,   211,     0,   212,     0,   838,   839,   215,     0,
     216,   217,   218,   219,   220,   221,   222,  1015,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,     0,
     234,  1016,   236,   237,   238,   239,   240,   840,   841,     0,
     842,     0,   244,  1017,  1018,   247,  1019,   249,   250,   251,
     252,   253,     0,     0,   254,  1020,   256,  1021,     0,   258,
     259,   260,   843,   844,   261,   262,   263,   264,   265,  1022,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   845,  1023,
     846,   288,   289,   290,   291,   847,   292,   293,  1024,   295,
     848,   849,   297,   850,   299,   300,   301,     0,   302,   303,
       0,     0,   851,   305,   306,     0,     0,   307,   308,  1025,
     310,  1026,   852,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,     0,   323,   324,   853,   326,   327,   328,
     329,   330,   331,     0,   332,   333,   334,   335,   336,   337,
       0,   338,   339,   340,   854,   342,   343,   344,   345,     0,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,     0,   359,   360,  1027,   362,   363,   364,
     855,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,     0,   377,   378,   379,   380,   381,   856,   382,
     383,   384,   385,   386,  1028,   388,   389,   857,   391,     0,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,  1029,   404,   858,   406,     0,   407,   408,     0,   409,
    1030,   411,   412,   413,   414,   415,     0,   859,   860,     0,
       0,   418,   419,   861,   421,   862,   863,   423,   424,  1031,
     426,   427,   428,   429,   430,     0,     0,   431,   432,   433,
     434,   435,   865,     0,   436,   437,   438,   439,   440,   441,
     866,     0,   443,  1033,   445,   446,   447,   448,     0,     0,
     449,     0,     0,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   867,     0,     0,     0,     0,     0,
       0,   868,   869,     0,     0,     0,     0,     0,   871,     0,
     872,  1517,     0,     0,     0,   873,     0,   874,   875,    91,
     808,   544,   809,   810,   811,   812,   813,     0,     0,     0,
       0,     0,     0,     0,     0,    92,    93,    94,    95,    96,
      97,    98,    99,     0,   100,   101,   102,     0,     0,     0,
       0,   814,     0,     0,   103,   104,     0,   105,   106,   107,
     108,   109,   110,   111,   112,   815,   114,   816,   817,     0,
     117,   118,   119,   120,   121,   122,   818,   819,   123,   124,
     820,   821,   127,     0,   128,   129,   130,   131,   822,     0,
     823,     0,   134,   135,   136,   137,   138,   139,   140,   141,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
     150,   151,   152,   153,   824,   825,   826,   827,   828,   829,
     830,   155,   156,   157,   158,   159,   160,   161,   831,   832,
     164,   833,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,   174,   175,   176,     0,     0,   177,   178,
     670,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,   191,   834,   193,   194,   195,
     196,   835,   836,   198,     0,   199,   200,   837,   202,     0,
     203,     0,   204,   205,     0,   206,   207,   208,   209,   210,
     211,     0,   212,     0,   838,   839,   215,     0,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,     0,   234,   235,
     236,   237,   238,   239,   240,   840,   841,     0,   842,     0,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
       0,     0,   254,   255,   256,   257,     0,   258,   259,   260,
     843,   844,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   845,   286,   846,   288,
     289,   290,   291,   847,   292,   293,   294,   295,   848,   849,
     297,   850,   299,   300,   301,     0,   302,   303,     0,     0,
     851,   305,   306,     0,     0,   307,   308,   309,   310,   311,
     852,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,     0,   323,   324,   853,   326,   327,   328,   329,   330,
     331,     0,   332,   333,   334,   335,   336,   337,     0,   338,
     339,   340,   854,   342,   343,   344,   345,     0,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,     0,   359,   360,   361,   362,   363,   364,   855,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
       0,   377,   378,   379,   380,   381,   856,   382,   383,   384,
     385,   386,   387,   388,   389,   857,   391,     0,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   858,   406,     0,   407,   408,     0,   409,   410,   411,
     412,   413,   414,   415,     0,   859,   860,     0,     0,   418,
     419,   861,   421,   862,   863,   423,   424,   864,   426,   427,
     428,   429,   430,     0,     0,   431,   432,   433,   434,   435,
     865,     0,   436,   437,   438,   439,   440,   441,   866,     0,
     443,   444,   445,   446,   447,   448,     0,     0,   449,     0,
       0,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   867,     0,     0,     0,     0,     0,     0,   868,
     869,     0,     0,     0,     0,     0,   871,     0,   872,  1633,
       0,     0,     0,   873,     0,   874,   875,  1003,   808,   544,
     809,   810,   811,   812,   813,     0,     0,     0,     0,     0,
       0,     0,     0,    92,    93,    94,    95,    96,    97,    98,
      99,     0,   100,   101,   102,     0,     0,     0,     0,   814,
       0,     0,   103,   104,     0,   105,   106,   107,  1005,   109,
     110,   111,   112,   815,  1006,   816,   817,     0,   117,   118,
     119,   120,   121,   122,   818,   819,   123,   124,   820,   821,
     127,     0,   128,   129,   130,   131,   822,     0,  1007,     0,
     134,   135,   136,   137,   138,   139,  1008,   141,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,  1009,   151,
     152,   153,   824,   825,   826,  1010,   828,   829,   830,   155,
     156,   157,   158,   159,   160,   161,   831,   832,   164,   833,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,   174,   175,   176,     0,     0,   177,   178,   670,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,   191,   834,   193,   194,   195,   196,   835,
     836,   198,     0,   199,   200,   837,   202,     0,   203,     0,
     204,  1012,     0,  1013,   207,   208,   209,  1014,   211,     0,
     212,     0,   838,   839,   215,     0,   216,   217,   218,   219,
     220,   221,   222,  1015,   224,   225,   226,   227,     0,   228,
     229,   230,   231,   232,   233,     0,   234,  1016,   236,   237,
     238,   239,   240,   840,   841,     0,   842,     0,   244,  1017,
    1018,   247,  1019,   249,   250,   251,   252,   253,     0,     0,
     254,  1020,   256,  1021,     0,   258,   259,   260,   843,   844,
     261,   262,   263,   264,   265,  1022,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   845,  1023,   846,   288,   289,   290,
     291,   847,   292,   293,  1024,   295,   848,   849,   297,   850,
     299,   300,   301,     0,   302,   303,     0,     0,   851,   305,
     306,     0,     0,   307,   308,  1025,   310,  1026,   852,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,     0,
     323,   324,   853,   326,   327,   328,   329,   330,   331,     0,
     332,   333,   334,   335,   336,   337,     0,   338,   339,   340,
     854,   342,   343,   344,   345,     0,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,     0,
     359,   360,  1027,   362,   363,   364,   855,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,     0,   377,
     378,   379,   380,   381,   856,   382,   383,   384,   385,   386,
    1028,   388,   389,   857,   391,     0,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,  1029,   404,   858,
     406,     0,   407,   408,     0,   409,  1030,   411,   412,   413,
     414,   415,     0,   859,   860,     0,     0,   418,   419,   861,
     421,   862,   863,   423,   424,  1031,   426,   427,   428,   429,
     430,     0,     0,   431,   432,   433,   434,   435,   865,     0,
     436,   437,   438,   439,   440,   441,   866,  1851,   443,  1033,
     445,   446,   447,   448,     0,     0,   449,     0,     0,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     867,     0,     0,     0,     0,     0,     0,   868,   869,     0,
       0,     0,     0,     0,   871,     0,   872,     0,     0,     0,
       0,   873,     0,   874,   875,    91,   808,   544,   809,   810,
     811,   812,   813,     0,     0,     0,     0,     0,     0,     0,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     100,   101,   102,     0,     0,     0,     0,   814,     0,     0,
     103,   104,     0,   105,   106,   107,   108,   109,   110,   111,
     112,   815,   114,   816,   817,     0,   117,   118,   119,   120,
     121,   122,   818,   819,   123,   124,   820,   821,   127,     0,
     128,   129,   130,   131,   822,     0,   823,     0,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,   150,   151,   152,   153,
     824,   825,   826,   827,   828,   829,   830,   155,   156,   157,
     158,   159,   160,   161,   831,   832,   164,   833,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   670,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   834,   193,   194,   195,   196,   835,   836,   198,
       0,   199,   200,   837,   202,     0,   203,     0,   204,   205,
    1640,   206,   207,   208,   209,   210,   211,     0,   212,     0,
     838,   839,   215,     0,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,     0,   234,   235,   236,   237,   238,   239,
     240,   840,   841,     0,   842,     0,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,     0,     0,   254,   255,
     256,   257,     0,   258,   259,   260,   843,   844,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   845,   286,   846,   288,   289,   290,   291,   847,
     292,   293,   294,   295,   848,   849,   297,   850,   299,   300,
     301,     0,   302,   303,     0,     0,   851,   305,   306,     0,
       0,   307,   308,   309,   310,   311,   852,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,     0,   323,   324,
     853,   326,   327,   328,   329,   330,   331,     0,   332,   333,
     334,   335,   336,   337,     0,   338,   339,   340,   854,   342,
     343,   344,   345,     0,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,     0,   359,   360,
     361,   362,   363,   364,   855,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,     0,   377,   378,   379,
     380,   381,   856,   382,   383,   384,   385,   386,   387,   388,
     389,   857,   391,     0,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   858,   406,     0,
     407,   408,     0,   409,   410,   411,   412,   413,   414,   415,
       0,   859,   860,     0,     0,   418,   419,   861,   421,   862,
     863,   423,   424,   864,   426,   427,   428,   429,   430,     0,
       0,   431,   432,   433,   434,   435,   865,     0,   436,   437,
     438,   439,   440,   441,   866,     0,   443,   444,   445,   446,
     447,   448,     0,     0,   449,     0,     0,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   867,     0,
       0,     0,     0,     0,     0,   868,   869,     0,     0,     0,
       0,     0,   871,     0,   872,     0,     0,     0,     0,   873,
       0,   874,   875,    91,   808,   544,   809,   810,   811,   812,
     813,     0,     0,     0,     0,     0,     0,     0,     0,    92,
      93,    94,    95,    96,    97,    98,    99,     0,   100,   101,
     102,     0,     0,     0,     0,   814,     0,     0,   103,   104,
       0,   105,   106,   107,   108,   109,   110,   111,   112,   815,
     114,   816,   817,     0,   117,   118,   119,   120,   121,   122,
     818,   819,   123,   124,   820,   821,   127,     0,   128,   129,
     130,   131,   822,     0,   823,     0,   134,   135,   136,   137,
     138,   139,   140,   141,   142,   143,     0,   144,   145,   146,
     147,   148,   149,     0,   150,   151,   152,   153,   824,   825,
     826,   827,   828,   829,   830,   155,   156,   157,   158,   159,
     160,   161,   831,   832,   164,   833,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,   174,   175,   176,
       0,     0,   177,   178,   670,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,   191,
     834,   193,   194,   195,   196,   835,   836,   198,     0,   199,
     200,   837,   202,     0,   203,     0,   204,   205,     0,   206,
     207,   208,   209,   210,   211,     0,   212,     0,   838,   839,
     215,     0,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,     0,   228,   229,   230,   231,   232,
     233,     0,   234,   235,   236,   237,   238,   239,   240,   840,
     841,     0,   842,     0,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,     0,     0,   254,   255,   256,   257,
       0,   258,   259,   260,   843,   844,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     845,   286,   846,   288,   289,   290,   291,   847,   292,   293,
     294,   295,   848,   849,   297,   850,   299,   300,   301,     0,
     302,   303,     0,     0,   851,   305,   306,     0,     0,   307,
     308,   309,   310,   311,   852,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,     0,   323,   324,   853,   326,
     327,   328,   329,   330,   331,     0,   332,   333,   334,   335,
     336,   337,     0,   338,   339,   340,   854,   342,   343,   344,
     345,     0,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,     0,   359,   360,   361,   362,
     363,   364,   855,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,     0,   377,   378,   379,   380,   381,
     856,   382,   383,   384,   385,   386,   387,   388,   389,   857,
     391,     0,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   858,   406,     0,   407,   408,
       0,   409,   410,   411,   412,   413,   414,   415,     0,   859,
     860,     0,     0,   418,   419,   861,   421,   862,   863,   423,
     424,   864,   426,   427,   428,   429,   430,     0,     0,   431,
     432,   433,   434,   435,   865,     0,   436,   437,   438,   439,
     440,   441,   866,     0,   443,   444,   445,   446,   447,   448,
       0,     0,   449,     0,     0,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   867,     0,     0,     0,
       0,     0,     0,   868,   869,     0,     0,     0,     0,     0,
     871,     0,   872,     0,     0,     0,     0,   873,     0,   874,
     875,  1003,   808,   544,   809,   810,   811,   812,   813,     0,
       0,     0,     0,     0,     0,     0,     0,    92,    93,    94,
      95,    96,    97,    98,    99,     0,   100,   101,   102,     0,
       0,     0,     0,   814,     0,     0,   103,   104,     0,   105,
     106,   107,  1005,   109,   110,   111,   112,   815,  1006,   816,
     817,     0,   117,   118,   119,   120,   121,   122,   818,   819,
     123,   124,   820,   821,   127,     0,   128,   129,   130,   131,
     822,     0,  1007,     0,   134,   135,   136,   137,   138,   139,
    1008,   141,   142,   143,     0,   144,   145,   146,   147,   148,
     149,     0,  1009,   151,   152,   153,   824,   825,   826,  1010,
     828,   829,   830,   155,   156,   157,   158,   159,   160,   161,
     831,   832,   164,   833,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,   174,   175,   176,     0,     0,
     177,   178,   670,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,   191,   834,   193,
     194,   195,   196,   835,   836,   198,     0,   199,   200,   837,
     202,     0,   203,     0,   204,  1012,     0,  1013,   207,   208,
     209,  1014,   211,     0,   212,     0,   838,   839,   215,     0,
     216,   217,   218,   219,   220,   221,   222,  1015,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,     0,
     234,  1016,   236,   237,   238,   239,   240,   840,   841,     0,
     842,     0,   244,  1017,  1018,   247,  1019,   249,   250,   251,
     252,   253,     0,     0,   254,  1020,   256,  1021,     0,   258,
     259,   260,   843,   844,   261,   262,   263,   264,   265,  1022,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   845,  1023,
     846,   288,   289,   290,   291,   847,   292,   293,  1024,   295,
     848,   849,   297,   850,   299,   300,   301,     0,   302,   303,
       0,     0,   851,   305,   306,     0,     0,   307,   308,  1025,
     310,  1026,   852,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,     0,   323,   324,   853,   326,   327,   328,
     329,   330,   331,     0,   332,   333,   334,   335,   336,   337,
       0,   338,   339,   340,   854,   342,   343,   344,   345,     0,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,     0,   359,   360,  1027,   362,   363,   364,
     855,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,     0,   377,   378,   379,   380,   381,   856,   382,
     383,   384,   385,   386,  1028,   388,   389,   857,   391,     0,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,  1029,   404,   858,   406,     0,   407,   408,     0,   409,
    1030,   411,   412,   413,   414,   415,     0,   859,   860,     0,
       0,   418,   419,   861,   421,   862,   863,   423,   424,  1031,
     426,   427,   428,   429,   430,     0,     0,   431,   432,   433,
     434,   435,   865,     0,   436,   437,   438,   439,   440,   441,
     866,     0,   443,  1033,   445,   446,   447,   448,     0,     0,
     449,     0,     0,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   867,     0,     0,     0,     0,     0,
       0,   868,   869,     0,     0,     0,     0,     0,   871,     0,
     872,     0,     0,     0,     0,   873,     0,   874,   875,    91,
     808,   544,   809,   810,   811,   812,   813,     0,     0,     0,
       0,     0,     0,     0,     0,    92,    93,    94,    95,    96,
      97,    98,    99,     0,   100,   101,   102,     0,     0,     0,
       0,   814,     0,     0,   103,   104,     0,   105,   106,   107,
     108,   109,   110,   111,   112,   815,   114,   816,   817,     0,
     117,   118,   119,   120,   121,   122,   818,   819,   123,   124,
     820,   821,   127,     0,   128,   129,   130,   131,   822,     0,
     823,     0,   134,   135,   136,   137,   138,   139,   140,   141,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
     150,   151,   152,   153,   824,   825,   826,   827,   828,   829,
     830,   155,   156,   157,   158,   159,   160,   161,   831,   832,
     164,   833,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,   174,   175,   176,     0,     0,   177,   178,
     670,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,   191,   834,   193,   194,   195,
     196,   835,   836,   198,     0,   199,   200,   837,   202,     0,
     203,     0,   204,   205,     0,   206,   207,   208,   209,   210,
     211,     0,   212,     0,   838,   839,   215,     0,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,     0,   234,   235,
     236,   237,   238,   239,   240,   840,   841,     0,   842,     0,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
       0,     0,   254,   255,   256,   257,     0,   258,   259,   260,
     843,   844,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   845,   286,   846,   288,
     289,   290,   291,   847,   292,   293,   294,   295,   848,   849,
     297,   850,   299,   300,   301,     0,   302,   303,     0,     0,
     851,   305,   306,     0,     0,   307,   308,   309,   310,   311,
     852,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,     0,   323,   324,   853,   326,   327,   328,   329,   330,
     331,     0,   332,   333,   334,   335,   336,   337,     0,   338,
     339,   340,   854,   342,   343,   344,   345,     0,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,     0,   359,   360,   361,   362,   363,   364,   855,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
       0,   377,   378,   379,   380,   381,   856,   382,   383,   384,
     385,   386,   387,   388,   389,   857,   391,     0,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   858,   406,     0,   407,   408,     0,   409,   410,   411,
     412,   413,   414,   415,     0,   859,   860,     0,     0,   418,
     419,   861,   421,   862,   863,   423,   424,   864,   426,   427,
     428,   429,   430,     0,     0,   431,   432,   433,   434,   435,
     865,     0,   436,   437,   438,   439,   440,   441,   866,     0,
     443,   444,   445,   446,   447,   448,     0,     0,   449,     0,
       0,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   867,     0,     0,     0,     0,     0,     0,  1401,
    1402,     0,     0,     0,     0,     0,   871,     0,   872,     0,
       0,     0,     0,   873,     0,   874,   875,    91,  1776,   544,
     809,   810,   811,   812,   813,     0,     0,     0,     0,     0,
       0,     0,     0,    92,    93,    94,    95,    96,    97,    98,
      99,     0,   100,   101,   102,     0,     0,     0,     0,   814,
       0,     0,   103,   104,     0,   105,   106,   107,   108,   109,
     110,   111,   112,   815,   114,   816,   817,     0,   117,   118,
     119,   120,   121,   122,   818,   819,   123,   124,   820,   821,
     127,     0,   128,   129,   130,   131,   822,     0,   823,     0,
     134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,   150,   151,
     152,   153,   824,   825,   826,   827,   828,   829,   830,   155,
     156,   157,   158,   159,   160,   161,   831,   832,   164,   833,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,   174,   175,   176,     0,     0,   177,   178,   670,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,   191,   834,   193,   194,   195,   196,   835,
     836,   198,     0,   199,   200,   837,   202,     0,   203,     0,
     204,   205,     0,   206,   207,   208,   209,   210,   211,     0,
     212,     0,   838,   839,   215,     0,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,     0,   228,
     229,   230,   231,   232,   233,     0,   234,   235,   236,   237,
     238,   239,   240,   840,   841,     0,   842,     0,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,     0,     0,
     254,   255,   256,   257,     0,   258,   259,   260,   843,   844,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   845,   286,   846,   288,   289,   290,
     291,   847,   292,   293,   294,   295,   848,   849,   297,   850,
     299,   300,   301,     0,   302,   303,     0,     0,   851,   305,
     306,     0,     0,   307,   308,   309,   310,   311,   852,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,     0,
     323,   324,   853,   326,   327,   328,   329,   330,   331,     0,
     332,   333,   334,   335,   336,   337,     0,   338,   339,   340,
     854,   342,   343,   344,   345,     0,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,     0,
     359,   360,   361,   362,   363,   364,   855,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,     0,   377,
     378,   379,   380,   381,   856,   382,   383,   384,   385,   386,
     387,   388,   389,   857,   391,     0,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   858,
     406,     0,   407,   408,     0,   409,   410,   411,   412,   413,
     414,   415,     0,   859,   860,     0,     0,   418,   419,   861,
     421,   862,   863,   423,   424,   864,   426,   427,   428,   429,
     430,     0,     0,   431,   432,   433,   434,   435,   865,     0,
     436,   437,   438,   439,   440,   441,   866,     0,   443,   444,
     445,   446,   447,   448,     0,     0,   449,     0,     0,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     867,     0,     0,     0,     0,     0,     0,   868,   869,     0,
       0,     0,     0,     0,   871,     0,   872,     0,     0,     0,
       0,   873,     0,   874,   875,    91,   808,   544,   809,   810,
     811,   812,   813,     0,     0,     0,     0,     0,     0,     0,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     100,   101,   102,     0,     0,     0,     0,   814,     0,     0,
     103,   104,     0,   105,   106,   107,   108,   109,   110,   111,
     112,   815,   114,   816,   817,     0,   117,   118,   119,   120,
     121,   122,   818,   819,   123,   124,   820,   821,   127,     0,
     128,   129,   130,   131,   822,     0,   823,     0,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,   150,   151,   152,   153,
     824,   825,   826,   827,   828,   829,   830,   155,   156,   157,
     158,   159,   160,   161,   831,   832,   164,   833,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   670,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   834,   193,   194,   195,   196,   835,   836,   198,
       0,   199,   200,   837,   202,     0,   203,     0,   204,   205,
       0,   206,   207,   208,   209,   210,   211,     0,   212,     0,
     838,   839,   215,     0,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,     0,   234,   235,   236,   237,   238,   239,
     240,   840,   841,     0,   842,     0,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,     0,     0,   254,   255,
     256,   257,     0,   258,   259,   260,   843,   844,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   845,   286,   846,   288,   289,   290,   291,   847,
     292,   293,   294,   295,   848,   849,   297,   850,   299,   300,
     301,     0,   302,   303,     0,     0,   851,   305,   306,     0,
       0,   307,   308,   309,   310,   311,   852,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,     0,   323,   324,
     853,   326,   327,   328,   329,   330,   331,     0,   332,   333,
     334,   335,   336,   337,     0,   338,   339,   340,   854,   342,
     343,   344,   345,     0,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,     0,   359,   360,
     361,   362,   363,   364,   855,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,     0,   377,   378,   379,
     380,   381,   856,   382,   383,   384,   385,   386,   387,   388,
     389,   857,   391,     0,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   858,   406,     0,
     407,   408,     0,   409,   410,   411,   412,   413,   414,   415,
       0,   859,   860,     0,     0,   418,   419,   861,   421,   862,
     863,   423,   424,   864,   426,   427,   428,   429,   430,     0,
       0,   431,   432,   433,   434,   435,   865,     0,   436,   437,
     438,   439,   440,   441,   866,     0,   443,   444,   445,   446,
     447,   448,     0,     0,   449,     0,     0,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   867,     0,
       0,     0,     0,     0,     0,   868,   869,     0,     0,     0,
       0,     0,   871,     0,  2004,     0,     0,     0,     0,   873,
       0,   874,   875,    91,   808,   544,   809,   810,   811,   812,
     813,     0,     0,     0,     0,     0,     0,     0,     0,    92,
      93,    94,    95,    96,    97,    98,    99,     0,   100,   101,
     102,     0,     0,     0,     0,   814,     0,     0,   103,   104,
       0,   105,   106,   107,   108,   109,   110,   111,   112,   815,
     114,   816,   817,     0,   117,   118,   119,   120,   121,   122,
     818,   819,   123,   124,   820,   821,   127,     0,   128,   129,
     130,   131,   822,     0,   823,     0,   134,   135,   136,   137,
     138,   139,   140,   141,   142,   143,     0,   144,   145,   146,
     147,   148,   149,     0,   150,   151,  2670,   153,   824,   825,
     826,   827,   828,   829,   830,   155,   156,   157,   158,   159,
     160,   161,   831,   832,   164,   833,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,   174,   175,   176,
       0,     0,   177,   178,   670,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,   191,
     834,   193,   194,   195,   196,   835,   836,   198,     0,   199,
     200,   837,   202,     0,   203,     0,   204,   205,     0,   206,
     207,   208,   209,   210,   211,     0,   212,     0,  2671,   839,
     215,     0,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,     0,   228,   229,   230,   231,   232,
     233,     0,   234,   235,   236,   237,   238,   239,   240,   840,
     841,     0,   842,     0,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,     0,     0,   254,   255,   256,   257,
       0,   258,   259,   260,   843,   844,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     845,   286,   846,   288,   289,   290,   291,   847,   292,   293,
     294,   295,   848,   849,   297,   850,   299,   300,   301,     0,
     302,   303,     0,     0,   851,   305,   306,     0,     0,   307,
     308,   309,   310,   311,   852,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,     0,   323,   324,   853,   326,
     327,   328,   329,   330,   331,     0,   332,   333,   334,   335,
     336,   337,     0,   338,   339,   340,   854,   342,   343,   344,
     345,     0,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,     0,   359,   360,   361,   362,
     363,  2672,   855,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,     0,   377,   378,   379,   380,   381,
     856,   382,   383,   384,   385,   386,   387,   388,   389,   857,
     391,     0,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   858,   406,     0,   407,   408,
       0,   409,   410,   411,   412,   413,   414,   415,     0,   859,
     860,     0,     0,   418,   419,   861,   421,   862,   863,   423,
     424,   864,   426,   427,   428,   429,   430,     0,     0,   431,
     432,   433,   434,   435,   865,     0,   436,   437,   438,   439,
     440,   441,   866,     0,   443,   444,   445,   446,   447,   448,
       0,     0,   449,     0,     0,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   867,     0,     0,     0,
       0,     0,     0,   868,   869,     0,     0,     0,     0,     0,
     871,     0,  2673,     0,     0,     0,     0,   873,     0,   874,
     875,    91,   808,   544,   809,   810,   811,   812,   813,     0,
       0,     0,     0,     0,     0,     0,     0,    92,    93,    94,
      95,    96,    97,    98,    99,     0,   100,   101,   102,     0,
       0,     0,     0,   814,     0,     0,   103,   104,     0,   105,
     106,   107,   108,   109,   110,   111,  2890,   815,   114,   816,
     817,     0,   117,   118,   119,   120,   121,   122,   818,   819,
     123,   124,   820,   821,   127,     0,   128,   129,   130,   131,
     822,     0,   823,     0,   134,   135,   136,   137,   138,   139,
     140,   141,   142,   143,     0,   144,   145,   146,   147,   148,
     149,     0,   150,   151,   152,  2891,   824,   825,   826,   827,
     828,   829,   830,   155,   156,   157,   158,   159,   160,   161,
     831,   832,   164,   833,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,   174,   175,   176,     0,     0,
     177,   178,   670,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,   191,   834,   193,
     194,   195,   196,   835,   836,   198,     0,   199,   200,   837,
     202,     0,   203,     0,   204,   205,     0,   206,   207,   208,
     209,   210,   211,     0,   212,     0,   838,   839,   215,     0,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,     0,
     234,   235,   236,   237,   238,   239,   240,   840,   841,     0,
     842,     0,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,     0,     0,   254,   255,   256,   257,     0,   258,
     259,   260,   843,   844,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   845,   286,
     846,   288,   289,   290,   291,   847,   292,   293,   294,   295,
     848,   849,   297,   850,   299,   300,   301,     0,   302,   303,
       0,     0,   851,   305,   306,     0,     0,   307,   308,   309,
     310,   311,   852,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,     0,   323,   324,   853,   326,   327,   328,
     329,   330,   331,     0,   332,   333,   334,   335,   336,   337,
       0,   338,   339,   340,   854,   342,   343,   344,   345,     0,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,     0,   359,   360,   361,   362,   363,   364,
     855,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,     0,   377,   378,   379,   380,   381,   856,   382,
     383,   384,   385,   386,   387,   388,   389,   857,   391,     0,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   858,   406,     0,   407,   408,     0,   409,
     410,   411,   412,   413,   414,   415,     0,   859,   860,     0,
       0,   418,   419,   861,   421,   862,   863,   423,   424,   864,
     426,   427,  2892,   429,   430,     0,     0,   431,   432,   433,
     434,   435,   865,     0,   436,   437,   438,   439,   440,   441,
     866,     0,   443,   444,   445,   446,   447,   448,     0,     0,
     449,     0,     0,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   867,     0,     0,     0,     0,     0,
       0,   868,   869,     0,     0,     0,     0,     0,   871,     0,
     872,     0,     0,     0,     0,   873,     0,   874,   875,    91,
     808,   544,   809,   810,   811,   812,   813,     0,     0,     0,
       0,     0,     0,     0,     0,    92,    93,    94,    95,    96,
      97,    98,    99,     0,   100,   101,   102,     0,     0,     0,
       0,   814,     0,     0,   103,   104,     0,   105,   106,   107,
     108,   109,   110,   111,   112,   815,   114,   816,   817,     0,
     117,   118,   119,   120,   121,   122,   818,   819,   123,   124,
     820,   821,   127,     0,   128,   129,   130,   131,   822,     0,
     823,     0,   134,   135,   136,   137,   138,   139,   140,   141,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
     150,   151,   152,  2891,   824,   825,   826,   827,   828,   829,
     830,   155,   156,   157,   158,   159,   160,   161,   831,   832,
     164,   833,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,   174,   175,   176,     0,     0,   177,   178,
     670,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,   191,   834,   193,   194,   195,
     196,   835,   836,   198,     0,   199,   200,   837,   202,     0,
     203,     0,   204,   205,     0,   206,   207,   208,   209,   210,
     211,     0,   212,     0,   838,   839,   215,     0,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,     0,   234,   235,
     236,   237,   238,   239,   240,   840,   841,     0,   842,     0,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
       0,     0,   254,   255,   256,   257,     0,   258,   259,   260,
     843,   844,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   845,   286,   846,   288,
     289,   290,   291,   847,   292,   293,   294,   295,   848,   849,
     297,   850,   299,   300,   301,     0,   302,   303,     0,     0,
     851,   305,   306,     0,     0,   307,   308,   309,   310,   311,
     852,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,     0,   323,   324,   853,   326,   327,   328,   329,   330,
     331,     0,   332,   333,   334,   335,   336,   337,     0,   338,
     339,   340,   854,   342,   343,   344,   345,     0,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,     0,   359,   360,   361,   362,   363,   364,   855,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
       0,   377,   378,   379,   380,   381,   856,   382,   383,   384,
     385,   386,   387,   388,   389,   857,   391,     0,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   858,   406,     0,   407,   408,     0,   409,   410,   411,
     412,   413,   414,   415,     0,   859,   860,     0,     0,   418,
     419,   861,   421,   862,   863,   423,   424,   864,   426,   427,
    2892,   429,   430,     0,     0,   431,   432,   433,   434,   435,
     865,     0,   436,   437,   438,   439,   440,   441,   866,     0,
     443,   444,   445,   446,   447,   448,     0,     0,   449,     0,
       0,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   867,     0,     0,     0,     0,     0,     0,   868,
     869,     0,     0,     0,     0,     0,   871,     0,   872,     0,
       0,     0,     0,   873,     0,   874,   875,    91,   808,   544,
     809,   810,   811,   812,   813,     0,     0,     0,     0,     0,
       0,     0,     0,    92,    93,    94,    95,    96,    97,    98,
      99,     0,   100,   101,   102,     0,     0,     0,     0,   814,
       0,     0,   103,   104,     0,   105,   106,   107,   108,   109,
     110,   111, -1723,   815,   114,   816,   817,     0,   117,   118,
     119,   120,   121,   122,   818,   819,   123,   124,   820,   821,
     127,     0,   128,   129,   130,   131,   822,     0,   823,     0,
     134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,   150,   151,
     152,  2891,   824,   825,   826,   827,   828,   829,   830,   155,
     156,   157,   158,   159,   160,   161,   831,   832,   164,   833,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,   174,   175,   176,     0,     0,   177,   178,   670,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,   191,   834,   193,   194,   195,   196,   835,
     836,   198,     0,   199,   200,   837,   202,     0,   203,     0,
     204,   205,     0,   206,   207,   208,   209, -1723,   211,     0,
     212,     0,   838,   839,   215,     0,   216,   217,   218,   219,
     220,   221,   222, -1723,   224,   225,   226,   227,     0,   228,
     229,   230,   231,   232,   233,     0,   234,   235,   236,   237,
     238,   239,   240,   840,   841,     0,   842,     0,   244,     0,
       0,   247,   248,   249,   250,   251,   252,   253,     0,     0,
     254,   255,   256, -1723,     0,   258,   259,   260,   843,   844,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   845,   286,   846,   288,   289,   290,
     291,     0,   292,   293,     0,   295,   848,   849,   297,   850,
     299,   300,   301,     0,   302,   303,     0,     0,   851,   305,
     306,     0,     0,   307,   308,   309,   310,   311,   852,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,     0,
     323,   324,   853,   326,   327,   328,   329,   330,   331,     0,
     332,   333,   334,   335,   336,   337,     0,   338,   339,   340,
     854,   342,   343,   344,   345,     0,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,     0,
     359,   360,   361,   362,   363,   364,   855,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,     0,   377,
     378,   379,   380,   381,   856,   382,   383,   384,   385,   386,
   -1723,   388,   389,   857,   391,     0,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   858,
     406,     0,   407,   408,     0,   409,   410,   411,   412,   413,
     414,   415,     0,   859,   860,     0,     0,   418,   419,   861,
     421,   862,   863,   423,   424,   864,   426,   427,  2892,   429,
     430,     0,     0,   431,   432,   433,   434,   435,   865,     0,
     436,   437,   438,   439,   440,   441,   866,     0,   443,   444,
     445,   446,   447,   448,     0,     0,   449,     0,     0,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
   -1723,     0,     0,     0,     0,     0,     0,   868,   869,     0,
       0,     0,     0,     0,   871,     0,   872,     0,     0,     0,
       0,   873,     0,   874,   875,    91,   808,   544,   809,   810,
     811,   812,   813,     0,     0,     0,     0,     0,     0,     0,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     100,   101,   102,     0,     0,     0,     0,     0,     0,     0,
     103,   104,     0,   105,   106,   107,   108,   109,   110,   111,
     112,   815,   114,   816,   817,     0,   117,   118,   119,   120,
     121,   122,   818,   819,   123,   124,   820,   821,   127,     0,
     128,   129,   130,   131,   822,     0,   823,     0,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,   150,   151,   152,   153,
     824,   825,   826,   827,   828,   829,   830,   155,   156,   157,
     158,   159,   160,   161,   831,   832,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   670,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   834,   193,   194,   195,   196,   835,   836,   198,
       0,   199,   200,   837,   202,     0,   203,     0,   204,   205,
       0,   206,   207,   208,   209,   210,   211,     0,   212,     0,
     838,   839,   215,     0,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,     0,   234,   235,   236,   237,   238,   239,
     240,   840,   841,     0,   842,     0,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,     0,     0,   254,   255,
     256,   257,     0,   258,   259,   260,   843,   844,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   845,   286,   846,   288,   289,   290,   291,     0,
     292,   293,   294,   295,   848,   849,   297,   850,   299,   300,
     301,     0,   302,   303,     0,     0,   851,   305,   306,     0,
       0,   307,   308,   309,   310,   311,   852,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,     0,   323,   324,
     853,   326,   327,   328,   329,   330,   331,     0,   332,   333,
     334,   335,   336,   337,     0,   338,   339,   340,   854,   342,
     343,   344,   345,     0,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,     0,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,     0,   377,   378,   379,
     380,   381,   856,   382,   383,   384,   385,   386,   387,   388,
     389,   857,   391,     0,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   858,   406,     0,
     407,   408,     0,   409,   410,   411,   412,   413,   414,   415,
       0,   859,   860,     0,     0,   418,   419,   861,   421,   862,
     863,   423,   424,   864,   426,   427,   428,   429,   430,     0,
       0,   431,   432,   433,   434,   435,   865,     0,   436,   437,
     438,   439,   440,   441,   866,     0,   443,   444,   445,   446,
     447,   448,     0,     0,   449,     0,     0,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     0,     0,
       0,     0,     0,     0,     0,  1625,  1626,     0,     0,    91,
     808,   544,   809,   810,  1627,   812,   813,     0,     0,     0,
       0,   874,   875,     0,     0,    92,    93,    94,    95,    96,
      97,    98,    99,     0,   100,   101,   102,     0,     0,     0,
       0,     0,     0,     0,   103,   104,     0,   105,   106,   107,
     108,   109,   110,   111,   112,   815,   114,   816,   817,     0,
     117,   118,   119,   120,   121,   122,   818,   819,   123,   124,
     820,   821,   127,     0,   128,   129,   130,   131,   822,     0,
     823,     0,   134,   135,   136,   137,   138,   139,   140,   141,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
     150,   151,   152,   153,   824,   825,   826,   827,   828,   829,
     830,   155,   156,   157,   158,   159,   160,   161,   831,   832,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,   174,   175,   176,     0,     0,   177,   178,
     670,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,   191,   834,   193,   194,   195,
     196,   835,   836,   198,     0,   199,   200,   837,   202,     0,
     203,     0,   204,   205,     0,   206,   207,   208,   209,   210,
     211,     0,   212,     0,   838,   839,   215,     0,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,     0,   234,   235,
     236,   237,   238,   239,   240,   840,   841,     0,   842,     0,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
       0,     0,   254,   255,   256,   257,     0,   258,   259,   260,
     843,   844,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   845,   286,   846,   288,
     289,   290,   291,     0,   292,   293,   294,   295,   848,   849,
     297,   850,   299,   300,   301,     0,   302,   303,     0,     0,
     304,   305,   306,     0,     0,   307,   308,   309,   310,   311,
     852,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,     0,   323,   324,   853,   326,   327,   328,   329,   330,
     331,     0,   332,   333,   334,   335,   336,   337,     0,   338,
     339,   340,   854,   342,   343,   344,   345,     0,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,     0,   359,   360,   361,   362,   363,   364,  1762,  1763,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
       0,   377,   378,   379,   380,   381,   856,   382,   383,   384,
     385,   386,   387,   388,   389,   857,   391,     0,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   858,   406,     0,   407,   408,     0,   409,   410,   411,
     412,   413,   414,   415,     0,   859,   860,     0,     0,   418,
     419,   861,   421,   862,   863,   423,   424,   864,   426,   427,
     428,   429,   430,     0,     0,   431,   432,   433,   434,   435,
     865,     0,   436,   437,   438,   439,   440,   441,   866,     0,
     443,   444,   445,   446,   447,   448,     0,     0,   449,     0,
       0,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,     0,     0,     0,     0,     0,     0,  1764,
    1765,     0,     0,     0,     0,     0,     0,     0,  1627,     0,
       0,     0,     0,     0,     0,   874,   875,    91,   808,   544,
     809,   810,   811,   812,   813,     0,     0,     0,     0,     0,
       0,     0,     0,    92,    93,    94,    95,    96,    97,    98,
      99,     0,   100,   101,   102,     0,     0,     0,     0,     0,
       0,     0,   103,   104,     0,   105,   106,   107,   108,   109,
     110,   111,   112,   815,   114,   816,   817,     0,   117,   118,
     119,   120,   121,   122,   818,   819,   123,   124,   820,   821,
     127,     0,   128,   129,   130,   131,   822,     0,   823,     0,
     134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,   150,   151,
     152,   153,   824,   825,   826,   827,   828,   829,   830,   155,
     156,   157,   158,   159,   160,   161,   831,   832,   164,     0,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,   174,   175,   176,     0,     0,   177,   178,   670,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,   191,   834,   193,   194,   195,   196,   835,
     836,   198,     0,   199,   200,   837,   202,     0,   203,     0,
     204,   205,     0,   206,   207,   208,   209,   210,   211,     0,
     212,     0,   838,   839,   215,     0,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,     0,   228,
     229,   230,   231,   232,   233,     0,   234,   235,   236,   237,
     238,   239,   240,   840,   841,     0,   842,     0,   244,     0,
     246,   247,   248,   249,   250,   251,   252,   253,     0,     0,
     254,   255,   256,   257,     0,   258,   259,   260,   843,   844,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   845,   286,   846,   288,   289,   290,
     291,     0,   292,   293,   294,   295,   848,   849,   297,   850,
     299,   300,   301,     0,   302,   303,     0,     0,   851,   305,
     306,     0,     0,   307,   308,   309,   310,   311,   852,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,     0,
     323,   324,   853,   326,   327,   328,   329,   330,   331,     0,
     332,   333,   334,   335,   336,   337,     0,   338,   339,   340,
     854,   342,   343,   344,   345,     0,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,     0,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,     0,   377,
     378,   379,   380,   381,   856,   382,   383,   384,   385,   386,
     387,   388,   389,   857,   391,     0,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   858,
     406,     0,   407,   408,     0,   409,   410,   411,   412,   413,
     414,   415,     0,   859,   860,     0,     0,   418,   419,   861,
     421,   862,   863,   423,   424,   864,   426,   427,   428,   429,
     430,     0,     0,   431,   432,   433,   434,   435,   865,     0,
     436,   437,   438,   439,   440,   441,   866,     0,   443,   444,
     445,   446,   447,   448,     0,     0,   449,     0,     0,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       0,     0,     0,     0,     0,     0,     0,  1625,  1626,     0,
       0,     0,     0,     0,     0,     0,  1627,     0,     0,     0,
       0,     0,     0,   874,   875,    91,   808,   544,   809,   810,
     811,   812,   813,     0,     0,     0,     0,     0,     0,     0,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     100,   101,   102,     0,     0,     0,     0,   814,     0,     0,
     103,   104,     0,   105,   106,   107,   108,   109,   110,   111,
       0,   815,   114,   816,   817,     0,   117,   118,   119,   120,
     121,   122,   818,   819,   123,   124,   820,   821,   127,     0,
     128,   129,   130,   131,   822,     0,   823,     0,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,   150,   151,   152,   153,
     824,   825,   826,   827,   828,   829,   830,   155,   156,   157,
     158,   159,   160,   161,   831,   832,   164,   833,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   670,   180,   181,     0,
     182,   183,   184,     0,   185,     0,   187,     0,   188,   189,
     190,   191,   834,   193,   194,   195,   196,   835,   836,   198,
       0,   199,   200,   837,   202,     0,   203,     0,   204,   205,
       0,   206,   207,   208,   209,     0,   211,     0,   212,     0,
     838,   839,   215,     0,   216,   217,   218,   219,   220,   221,
     222,     0,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,     0,   234,   235,   236,   237,   238,   239,
     240,   840,   841,     0,   842,     0,   244,     0,     0,   247,
     248,   249,   250,   251,   252,   253,     0,     0,   254,   255,
     256,     0,     0,   258,   259,   260,   843,   844,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   845,   286,   846,   288,   289,   290,   291,     0,
     292,   293,     0,   295,   848,   849,   297,   850,   299,   300,
     301,     0,   302,   303,     0,     0,   851,   305,   306,     0,
       0,   307,   308,   309,   310,   311,   852,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,     0,   323,   324,
     853,   326,   327,   328,   329,   330,   331,     0,   332,   333,
     334,   335,   336,   337,     0,   338,   339,   340,   854,   342,
     343,   344,   345,     0,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,     0,   359,   360,
     361,   362,   363,   364,   855,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,     0,   377,   378,   379,
     380,   381,   856,   382,   383,   384,   385,   386,     0,   388,
     389,   857,   391,     0,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   858,   406,     0,
     407,   408,     0,   409,   410,   411,   412,   413,   414,   415,
       0,   859,   860,     0,     0,   418,   419,   861,   421,   862,
     863,   423,   424,   864,   426,   427,   428,   429,   430,     0,
       0,   431,   432,   433,   434,   435,   865,     0,   436,   437,
     438,   439,   440,   441,   866,     0,   443,   444,   445,   446,
     447,   448,     0,     0,   449,     0,     0,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     0,     0,
       0,     0,     0,     0,     0,   868,   869,   496,     0,     0,
       0,     0,   871,     0,   872,     0,     0,     0,     0,   873,
       0,   874,   875,    92,    93,    94,    95,    96,    97,    98,
      99,     0,   100,   101,   102,     0,     0,     0,     0,     0,
    2299,     0,   103,   104,     0,   105,   106,   107,     0,   109,
     110,   111,   112,   113,     0,   115,   116,     0,   117,   118,
     119,   120,   121,   122,     0,     0,   123,   124,   125,   126,
     127,     0,   128,   129,   130,   131,   132,     0,     0,     0,
     134,   135,   136,   137,   138,   139,     0,   141,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,  -693,   151,
     152,   153,     0,     0,     0,     0,     0,     0,     0,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,     0,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,   174,   175,   176,     0,     0,   177,   178,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
       0,   198,     0,   199,   200,   201,   202,     0,   203,     0,
     204,     0,     0,  -693,   207,   208,   209,     0,   211,     0,
     212,     0,   213,   214,   215,     0,   216,   217,   218,   219,
     220,   221,   222,     0,   224,   225,   226,   227,     0,   228,
     229,   230,   231,   232,   233,     0,   234,  -693,   236,   237,
     238,   239,   240,   241,   242,     0,   243,     0,   244,     0,
       0,   247,  -693,   249,   250,   251,   252,   253,     0,     0,
     254,  -693,   256,     0,     0,   258,   259,   260,     0,     0,
     261,   262,   263,   264,   265,   498,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,  -693,   287,   288,   289,   290,
     291,     0,   292,   293,     0,   295,     0,   296,   297,   298,
     299,   300,   301,     0,   302,   303,     0,     0,   304,   305,
     306,     0,     0,   307,   308,     0,   310,     0,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,     0,
     323,   324,   325,   326,   327,   328,   329,   330,   331,     0,
     332,   333,   334,   335,   336,   337,     0,   338,   339,   340,
     341,   342,   343,   344,   345,     0,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,     0,
     359,   360,  -693,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,     0,   377,
     378,   379,   380,   381,     0,   382,   383,   384,   385,   386,
       0,   388,   389,   390,   391,     0,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   500,   404,   405,
     406,     0,   407,   408,     0,   409,  -693,   411,   412,   413,
     414,   415,     0,   416,   417,     0,     0,   418,   419,   420,
     421,   422,     0,   423,   424,   425,   426,   427,   428,   429,
     430,     0,     0,   431,   432,   433,   434,   435,     0,     0,
     436,   437,   438,   439,   440,   441,   442,     0,   443,     0,
     445,   446,   447,   448,     0,     0,   449,     0,     0,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       0,     0,    91,     0,   574,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   935,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
     819,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   822,     0,   823,     0,   134,   135,   136,   137,   138,
     139,   140,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,   150,   151,   152,   153,   824,   825,   826,
     827,   828,   829,   830,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   835,     0,   198,     0,   199,   200,
     201,   202,     0,   203,     0,   204,   205,     0,   206,   207,
     208,   209,   210,   211,     0,   212,     0,   213,   214,   215,
       0,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,     0,   228,   229,   230,   231,   232,   233,
       0,   234,   235,   236,   237,   238,   239,   240,   241,   242,
       0,   243,     0,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,  2050,     0,   254,   255,   256,   257,     0,
     258,   259,   260,   843,   844,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,     0,   292,   293,   294,
     295,     0,   849,   297,   298,   299,   300,   301,     0,   302,
     303,     0,   575,   304,   305,   306,     0,     0,   307,   308,
     309,   310,   311,   852,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,     0,   323,   324,   853,   326,   327,
     328,   329,   330,   331,     0,   332,   333,   334,   335,   336,
     337,     0,   338,   339,   340,   341,   342,   343,   344,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,     0,   359,   360,   361,   362,   363,
     364,   365,  2051,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,    25,   377,   378,   379,   380,   381,   856,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
       0,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   858,   406,     0,   407,   408,    30,
     409,   410,   411,   412,   413,   414,   415,     0,   416,   417,
       0,     0,   418,   419,   861,   421,   862,     0,   423,   424,
     864,   426,   427,   428,   429,   430,     0,     0,   431,   432,
     433,   434,   435,   865,     0,   436,   437,   438,   439,   440,
     570,   442,     0,   443,   444,   445,   446,   447,   448,     0,
       0,   449,     0,    33,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,     0,    91,    34,   574,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2052,    92,    93,    94,    95,    96,    97,    98,    99,
       0,   100,   101,   102,     0,     0,     0,     0,     0,     0,
       0,   103,   104,     0,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,     0,   117,   118,   119,
     120,   121,   122,     0,   819,   123,   124,   125,   126,   127,
       0,   128,   129,   130,   131,   822,     0,   823,     0,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,     0,
     144,   145,   146,   147,   148,   149,     0,   150,   151,   152,
     153,   824,   825,   826,   827,   828,   829,   830,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,     0,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
     174,   175,   176,     0,     0,   177,   178,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   835,     0,
     198,     0,   199,   200,   201,   202,     0,   203,     0,   204,
     205,     0,   206,   207,   208,   209,   210,   211,     0,   212,
       0,   213,   214,   215,     0,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,     0,   228,   229,
     230,   231,   232,   233,     0,   234,   235,   236,   237,   238,
     239,   240,   241,   242,     0,   243,     0,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,  2050,     0,   254,
     255,   256,   257,     0,   258,   259,   260,   843,   844,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
       0,   292,   293,   294,   295,     0,   849,   297,   298,   299,
     300,   301,     0,   302,   303,     0,   575,   304,   305,   306,
       0,     0,   307,   308,   309,   310,   311,   852,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,     0,   323,
     324,   853,   326,   327,   328,   329,   330,   331,     0,   332,
     333,   334,   335,   336,   337,     0,   338,   339,   340,   341,
     342,   343,   344,   345,     0,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,     0,   359,
     360,   361,   362,   363,   364,   365,  2051,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,     0,   377,   378,
     379,   380,   381,   856,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,     0,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   858,   406,
       0,   407,   408,     0,   409,   410,   411,   412,   413,   414,
     415,     0,   416,   417,     0,     0,   418,   419,   861,   421,
     862,     0,   423,   424,   864,   426,   427,   428,   429,   430,
       0,     0,   431,   432,   433,   434,   435,   865,     0,   436,
     437,   438,   439,   440,   441,   442,     0,   443,   444,   445,
     446,   447,   448,     0,     0,   449,     0,     0,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,     0,
      91,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2052,    92,    93,    94,    95,
      96,    97,    98,    99,     0,   100,   101,   102,     0,     0,
       0,     0,     0,     0,     0,   103,   104,     0,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
       0,   117,   118,   119,   120,   121,   122,     0,   819,   123,
     124,   125,   126,   127,     0,   128,   129,   130,   131,   822,
       0,   823,     0,   134,   135,   136,   137,   138,   139,   140,
     141,   142,   143,     0,   144,   145,   146,   147,   148,   149,
       0,   150,   151,   152,   153,   824,   825,   826,   827,   828,
     829,   830,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,     0,   165,     0,   166,   167,   168,   169,   170,
     171,     0,   172,   173,   174,   175,   176,     0,     0,   177,
     178,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,     0,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   835,     0,   198,     0,   199,   200,   201,   202,
       0,   203,     0,   204,   205,     0,   206,   207,   208,   209,
     210,   211,     0,   212,     0,   213,   214,   215,     0,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,     0,   228,   229,   230,   231,   232,   233,     0,   234,
     235,   236,   237,   238,   239,   240,   241,   242,     0,   243,
       0,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,     0,     0,   254,   255,   256,   257,     0,   258,   259,
     260,   843,   844,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,     0,   292,   293,   294,   295,     0,
     849,   297,   298,   299,   300,   301,     0,   302,   303,     0,
       0,   304,   305,   306,     0,     0,   307,   308,   309,   310,
     311,   852,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,     0,   323,   324,   853,   326,   327,   328,   329,
     330,   331,     0,   332,   333,   334,   335,   336,   337,     0,
     338,   339,   340,   341,   342,   343,   344,   345,     0,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,     0,   359,   360,   361,   362,   363,   364,   365,
    2051,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,     0,   377,   378,   379,   380,   381,   856,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,     0,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   858,   406,     0,   407,   408,     0,   409,   410,
     411,   412,   413,   414,   415,     0,   416,   417,     0,     0,
     418,   419,   861,   421,   862,     0,   423,   424,   864,   426,
     427,   428,   429,   430,     0,     0,   431,   432,   433,   434,
     435,   865,     0,   436,   437,   438,   439,   440,   441,   442,
       0,   443,   444,   445,   446,   447,   448,     0,     0,   449,
       0,     0,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,     0,    91,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    35,
      92,    93,    94,    95,    96,    97,    98,    99,     0,   100,
     101,   102,     0,     0,     0,     0,     0,     0,     0,   103,
     104,     0,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,     0,   117,   118,   119,   120,   121,
     122,     0,   819,   123,   124,   125,   126,   127,     0,   128,
     129,   130,   131,   822,     0,   823,     0,   134,   135,   136,
     137,   138,   139,   140,   141,   142,   143,     0,   144,   145,
     146,   147,   148,   149,     0,   150,   151,   152,   153,   824,
     825,   826,   827,   828,   829,   830,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,     0,   165,     0,   166,
     167,   168,   169,   170,   171,     0,   172,   173,   174,   175,
     176,     0,     0,   177,   178,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,     0,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   835,     0,   198,     0,
     199,   200,   201,   202,     0,   203,     0,   204,   205,     0,
     206,   207,   208,   209,   210,   211,     0,   212,     0,   213,
     214,   215,     0,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,     0,   228,   229,   230,   231,
     232,   233,     0,   234,   235,   236,   237,   238,   239,   240,
     241,   242,     0,   243,     0,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,     0,     0,   254,   255,   256,
     257,     0,   258,   259,   260,   843,   844,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,     0,   292,
     293,   294,   295,     0,   849,   297,   298,   299,   300,   301,
       0,   302,   303,     0,     0,   304,   305,   306,     0,     0,
     307,   308,   309,   310,   311,   852,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,     0,   323,   324,   853,
     326,   327,   328,   329,   330,   331,     0,   332,   333,   334,
     335,   336,   337,     0,   338,   339,   340,   341,   342,   343,
     344,   345,     0,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,     0,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,     0,   377,   378,   379,   380,
     381,   856,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,     0,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   858,   406,     0,   407,
     408,     0,   409,   410,   411,   412,   413,   414,   415,     0,
     416,   417,     0,     0,   418,   419,   861,   421,   862,     0,
     423,   424,   864,   426,   427,   428,   429,   430,     0,     0,
     431,   432,   433,   434,   435,   865,     0,   436,   437,   438,
     439,   440,   441,   442,     0,   443,   444,   445,   446,   447,
     448,     0,     0,   449,     0,     0,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,     0,   737,  1226,
     544,     0,     0,     0,   812,     0,     0,     0,     0,     0,
       0,     0,     0,  2688,    92,    93,    94,    95,    96,    97,
      98,    99,     0,   100,   101,   102,     0,     0,     0,     0,
       0,     0,     0,   103,   104,     0,   105,   106,   107,     0,
     109,   110,   111,   738,   739,     0,   740,   741,     0,   117,
     118,   119,   120,   121,   122,     0,     0,   123,   124,   742,
     743,   127,     0,   128,   129,   130,   131,   744,     0,     0,
       0,   134,   135,   136,   137,   138,   139,     0,   141,   142,
     143,     0,   144,   145,   146,   147,   148,   149,     0,     0,
     151,   152,   153,     0,     0,     0,     0,     0,     0,     0,
     155,   156,   157,   158,   159,   160,   161,   745,   746,   164,
       0,   165,     0,   166,   167,   168,   169,   170,   171,     0,
     172,   173,   174,   175,   176,     0,     0,   177,   178,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
       0,   188,   189,   190,   191,   747,   193,   194,   195,   196,
     748,  1227,   198,     0,   199,   200,   749,   202,     0,   203,
       0,   204,     0,     0,     0,   207,   208,   209,     0,   211,
       0,   212,     0,   750,   751,   215,     0,   216,   217,   218,
     219,   220,   221,   222,     0,   224,   225,   226,   227,     0,
     228,   229,   230,   231,   232,   233,     0,   234,     0,   752,
     237,   238,   239,   240,   753,   754,     0,   755,     0,   244,
       0,     0,   247,     0,   249,   250,   251,   252,   253,     0,
       0,   254,     0,   256,     0,     0,   258,   259,   260,     0,
       0,   261,   262,   263,   264,   265,   756,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   757,     0,   758,   288,   289,
     290,   759,     0,   292,   293,     0,   295,     0,   760,   297,
     761,   299,   300,   301,     0,   302,   303,  1228,     0,   304,
     305,   306,     0,     0,   307,   762,     0,   310,     0,   763,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
       0,   323,   324,   764,   326,   327,   765,   329,   330,   331,
       0,   332,   333,   334,   335,   336,   337,     0,   338,   339,
     340,   766,   342,   343,   344,   345,     0,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
       0,   359,   360,     0,   362,   363,   364,   767,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,     0,
     377,   378,   379,   380,   381,     0,   382,   768,   384,   385,
     386,     0,   388,   389,   769,   391,     0,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   770,   404,
     771,   406,     0,   407,   408,     0,   409,     0,   411,   412,
     413,   414,   415,     0,   772,   773,     0,     0,   418,   419,
     774,   421,   775,  1229,   423,   424,   776,   426,   427,   428,
     429,   430,     0,     0,   431,   432,   433,   434,   435,     0,
       0,   436,   437,   438,   439,   440,  1119,   778,     0,   443,
       0,   445,   446,   447,   448,     0,     0,   449,     0,     0,
     450,   451,   452,   453,   454,   455,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   467,   468,   469,
     470,     0,   737,     0,     0,     0,     0,     0,  1230,  1231,
    1930,     0,     0,     0,     0,     0,     0,  1931,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       3,     4,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   738,   739,     0,
     740,   741,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   742,   743,   127,     0,   128,   129,   130,
     131,   744,     0,     0,     0,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   151,   152,   153,     0,     0,     0,
       0,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   745,   746,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   747,
     193,   194,   195,   196,   748,     0,   198,     0,   199,   200,
     749,   202,     0,   203,     0,   204,     0,     0,     0,   207,
     208,   209,     0,   211,     0,   212,     0,   750,   751,   215,
       0,   216,   217,   218,   219,   220,   221,   222,     0,   224,
     225,   226,   227,     0,   228,   229,   230,   231,   232,   233,
       0,   234,     0,   752,   237,   238,   239,   240,   753,   754,
       0,   755,     0,   244,     0,     0,   247,     0,   249,   250,
     251,   252,   253,     0,     0,   254,     0,   256,     0,     0,
     258,   259,   260,     0,     0,   261,   262,   263,   264,   265,
     756,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   757,
       0,   758,   288,   289,   290,   759,     0,   292,   293,     0,
     295,     0,   760,   297,   761,   299,   300,   301,     0,   302,
     303,     0,     0,   304,   305,   306,     0,     0,   307,   762,
       0,   310,     0,   763,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,     0,   323,   324,   764,   326,   327,
     765,   329,   330,   331,     0,   332,   333,   334,   335,   336,
     337,     0,   338,   339,   340,   766,   342,   343,   344,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,     0,   359,   360,     0,   362,   363,
     364,   767,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,    25,   377,   378,   379,   380,   381,     0,
     382,   768,   384,   385,   386,     0,   388,   389,   769,   391,
       0,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   770,   404,   771,   406,     0,   407,   408,    30,
     409,     0,   411,   412,   413,   414,   415,     0,   772,   773,
       0,     0,   418,   419,   774,   421,   775,     0,   423,   424,
     776,   426,   427,   428,   429,   430,     0,     0,   431,   432,
     433,   434,   435,     0,     0,   436,   437,   438,   439,   440,
     777,   778,     0,   443,     0,   445,   446,   447,   448,     0,
       0,   449,     0,    33,   450,   451,   452,   453,   454,   455,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   467,   468,   469,   470,     0,   496,    34,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    35,    92,    93,    94,    95,    96,    97,    98,    99,
     598,   100,   101,   102,     0,     0,     0,     0,     0,     0,
       0,   103,   104,     0,   105,   106,   107,     0,   109,   110,
     111,   112,   113,     0,   115,   116,     0,   117,   118,   119,
     120,   121,   122,     0,     0,   123,   124,   125,   126,   127,
       0,   128,   129,   130,   131,   132,     0,     0,     0,   134,
     135,   136,   137,   138,   139,     0,   141,   142,   143,     0,
     144,   145,   146,   147,   148,   149,     0,     0,   151,   152,
     153,     0,     0,     0,     0,     0,     0,     0,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,     0,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
     174,   175,   176,     0,     0,   177,   178,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,     0,
     198,     0,   199,   200,   201,   202,     0,   203,     0,   204,
       0,     0,     0,   207,   208,   209,     0,   211,     0,   212,
       0,   213,   214,   215,     0,   216,   217,   218,   219,   220,
     221,   222,     0,   224,   225,   226,   227,     0,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   236,   237,   238,
     239,   240,   241,   242,     0,   243,     0,   244,     0,     0,
     247,     0,   249,   250,   251,   252,   253,     0,     0,   254,
       0,   256,     0,     0,   258,   259,   260,     0,     0,   261,
     262,   263,   264,   265,   498,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,     0,   287,   288,   289,   290,   291,
       0,   292,   293,     0,   295,     0,   296,   297,   298,   299,
     300,   301,     0,   302,   303,     0,     0,   304,   305,   306,
       0,     0,   307,   308,     0,   310,     0,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,     0,   323,
     324,   325,   326,   327,   328,   329,   330,   331,     0,   332,
     333,   334,   335,   336,   337,     0,   338,   339,   340,   341,
     342,   343,   344,   345,     0,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,     0,   359,
     360,     0,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,    25,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,   386,     0,
     388,   389,   390,   391,     0,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   500,   404,   405,   406,
       0,   407,   408,    30,   409,     0,   411,   412,   413,   414,
     415,     0,   599,   417,     0,     0,   600,   419,   420,   421,
     422,     0,   423,   424,   425,   426,   427,   428,   429,   430,
       0,     0,   431,   432,   433,   434,   435,     0,     0,   436,
     437,   438,   439,   440,   570,   442,     0,   443,     0,   445,
     446,   447,   448,     0,     0,   449,     0,    33,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,     0,
     496,    34,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    35,    92,    93,    94,    95,
      96,    97,    98,    99,     0,   100,   101,   102,     0,     0,
       0,     0,     0,     0,     0,   103,   104,     0,   105,   106,
     107,     0,   109,   110,   111,   112,   113,     0,   115,   116,
       0,   117,   118,   119,   120,   121,   122,     0,     0,   123,
     124,   125,   126,   127,     0,   128,   129,   130,   131,   132,
       0,     0,     0,   134,   135,   136,   137,   138,   139,     0,
     141,   142,   143,     0,   144,   145,   146,   147,   148,   149,
       0,     0,   151,   152,   153,     0,     0,     0,     0,     0,
       0,     0,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,     0,   165,     0,   166,   167,   168,   169,   170,
     171,     0,   172,   173,   174,   175,   176,     0,     0,   177,
     178,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,     0,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,     0,   198,     0,   199,   200,   201,   202,
       0,   203,     0,   204,     0,     0,     0,   207,   208,   209,
       0,   211,     0,   212,     0,   213,   214,   215,     0,   216,
     217,   218,   219,   220,   221,   222,     0,   224,   225,   226,
     227,     0,   228,   229,   230,   231,   232,   233,     0,   234,
       0,   236,   237,   238,   239,   240,   241,   242,     0,   243,
       0,   244,     0,     0,   247,     0,   249,   250,   251,   252,
     253,     0,     0,   254,     0,   256,     0,     0,   258,   259,
     260,     0,     0,   261,   262,   263,   264,   265,   498,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,     0,   287,
     288,   289,   290,   291,     0,   292,   293,     0,   295,     0,
     296,   297,   298,   299,   300,   301,     0,   302,   303,     0,
       0,   304,   305,   306,     0,     0,   307,   308,     0,   310,
       0,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,     0,   323,   324,   325,   326,   327,   328,   329,
     330,   331,     0,   332,   333,   334,   335,   336,   337,     0,
     338,   339,   340,   341,   342,   343,   344,   345,     0,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,     0,   359,   360,     0,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,    25,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,   386,     0,   388,   389,   390,   391,     0,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     500,   404,   405,   406,     0,   407,   408,    30,   409,     0,
     411,   412,   413,   414,   415,     0,   416,   417,     0,     0,
     418,   419,   420,   421,   422,     0,   423,   424,   425,   426,
     427,   428,   429,   430,     0,     0,   431,   432,   433,   434,
     435,     0,     0,   436,   437,   438,   439,   440,   570,   442,
       0,   443,     0,   445,   446,   447,   448,     0,     0,   449,
       0,    33,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,     0,   496,    34,   574,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    35,
      92,    93,    94,    95,    96,    97,    98,    99,     0,   100,
     101,   102,     0,     0,     0,     0,     0,     0,     0,   103,
     104,     0,   105,   106,   107,     0,   109,   110,   111,   112,
     113,     0,   115,   116,     0,   117,   118,   119,   120,   121,
     122,     0,     0,   123,   124,   125,   126,   127,     0,   128,
     129,   130,   131,   132,     0,     0,     0,   134,   135,   136,
     137,   138,   139,     0,   141,   142,   143,     0,   144,   145,
     146,   147,   148,   149,     0,     0,   151,   152,   153,     0,
       0,     0,     0,     0,     0,     0,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,     0,   165,     0,   166,
     167,   168,   169,   170,   171,     0,   172,   173,   174,   175,
     176,     0,     0,   177,   178,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,     0,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,     0,   198,     0,
     199,   200,   201,   202,     0,   203,     0,   204,     0,     0,
       0,   207,   208,   209,     0,   211,     0,   212,     0,   213,
     214,   215,     0,   216,   217,   218,   219,   220,   221,   222,
       0,   224,   225,   226,   227,     0,   228,   229,   230,   231,
     232,   233,     0,   234,     0,   236,   237,   238,   239,   240,
     241,   242,     0,   243,     0,   244,     0,     0,   247,     0,
     249,   250,   251,   252,   253,     0,     0,   254,     0,   256,
       0,     0,   258,   259,   260,     0,     0,   261,   262,   263,
     264,   265,   498,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,     0,   287,   288,   289,   290,   291,     0,   292,
     293,     0,   295,     0,   296,   297,   298,   299,   300,   301,
       0,   302,   303,     0,     0,   304,   305,   306,     0,     0,
     307,   308,     0,   310,     0,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,     0,   323,   324,   325,
     326,   327,   328,   329,   330,   331,     0,   332,   333,   334,
     335,   336,   337,     0,   338,   339,   340,   341,   342,   343,
     344,   345,     0,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,     0,   359,   360,     0,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,     0,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,   386,     0,   388,   389,
     390,   391,     0,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   500,   404,   405,   406,     0,   407,
     408,     0,   409,     0,   411,   412,   413,   414,   415,     0,
     416,   417,     0,     0,   418,   419,   420,   421,   422,     0,
     423,   424,   425,   426,   427,   428,   429,   430,     0,     0,
     431,   432,   433,   434,   435,     0,     0,   436,   437,   438,
     439,   440,   441,   442,     0,   443,     0,   445,   446,   447,
     448,     0,     0,   449,     0,     0,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,     0,   496,     0,
     574,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   915,    92,    93,    94,    95,    96,    97,
      98,    99,     0,   100,   101,   102,     0,     0,     0,     0,
       0,     0,     0,   103,   104,     0,   105,   106,   107,     0,
     109,   110,   111,   112,   113,     0,   115,   116,     0,   117,
     118,   119,   120,   121,   122,     0,     0,   123,   124,   125,
     126,   127,     0,   128,   129,   130,   131,   132,     0,     0,
       0,   134,   135,   136,   137,   138,   139,     0,   141,   142,
     143,     0,   144,   145,   146,   147,   148,   149,     0,     0,
     151,   152,   153,     0,     0,     0,     0,     0,     0,     0,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
       0,   165,     0,   166,   167,   168,   169,   170,   171,     0,
     172,   173,   174,   175,   176,     0,     0,   177,   178,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
       0,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,     0,   198,     0,   199,   200,   201,   202,     0,   203,
       0,   204,     0,     0,     0,   207,   208,   209,     0,   211,
       0,   212,     0,   213,   214,   215,     0,   216,   217,   218,
     219,   220,   221,   222,     0,   224,   225,   226,   227,     0,
     228,   229,   230,   231,   232,   233,     0,   234,     0,   236,
     237,   238,   239,   240,   241,   242,     0,   243,     0,   244,
       0,     0,   247,     0,   249,   250,   251,   252,   253,     0,
       0,   254,     0,   256,     0,     0,   258,   259,   260,     0,
       0,   261,   262,   263,   264,   265,   498,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,     0,   287,   288,   289,
     290,   291,     0,   292,   293,     0,   295,     0,   296,   297,
     298,   299,   300,   301,     0,   302,   303,     0,     0,   304,
     305,   306,     0,     0,   307,   308,     0,   310,     0,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
       0,   323,   324,   325,   326,   327,   328,   329,   330,   331,
       0,   332,   333,   334,   335,   336,   337,     0,   338,   339,
     340,   341,   342,   343,   344,   345,     0,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
       0,   359,   360,     0,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,     0,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
     386,     0,   388,   389,   390,   391,     0,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   500,   404,
     405,   406,     0,   407,   408,     0,   409,     0,   411,   412,
     413,   414,   415,     0,   416,   417,     0,     0,   418,   419,
     420,   421,   422,     0,   423,   424,   425,   426,   427,   428,
     429,   430,     0,     0,   431,   432,   433,   434,   435,     0,
       0,   436,   437,   438,   439,   440,   441,   442,     0,   443,
       0,   445,   446,   447,   448,     0,     0,   449,     0,     0,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,     0,   496,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2527,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   112,   113,     0,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   151,   152,   153,     0,     0,     0,
       0,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,     0,   198,     0,   199,   200,
     201,   202,     0,   203,     0,   204,     0,     0,     0,   207,
     208,   209,     0,   211,     0,   212,     0,   213,   214,   215,
       0,   216,   217,   218,   219,   220,   221,   222,     0,   224,
     225,   226,   227,     0,   228,   229,   230,   231,   232,   233,
       0,   234,     0,   236,   237,   238,   239,   240,   241,   242,
       0,   243,     0,   244,     0,     0,   247,     0,   249,   250,
     251,   252,   253,     0,     0,   254,     0,   256,     0,     0,
     258,   259,   260,     0,     0,   261,   262,   263,   264,   265,
     498,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
       0,   287,   288,   289,   290,   291,     0,   292,   293,     0,
     295,     0,   296,   297,   298,   299,   300,   301,     0,   302,
     303,     0,     0,   304,   305,   306,     0,     0,   307,   308,
       0,   310,     0,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,     0,   323,   324,   325,   326,   327,
     328,   329,   330,   331,     0,   332,   333,   334,   335,   336,
     337,     0,   338,   339,   340,   341,   342,   343,   344,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,     0,   359,   360,     0,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,     0,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,   386,     0,   388,   389,   390,   391,
       0,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   500,   404,   405,   406,     0,   407,   408,     0,
     409,     0,   411,   412,   413,   414,   415,     0,   416,   417,
       0,     0,   418,   419,   420,   421,   422,     0,   423,   424,
     425,   426,   427,   428,   429,   430,     0,     0,   431,   432,
     433,   434,   435,     0,     0,   436,   437,   438,   439,   440,
     441,   442,     0,   443,     0,   445,   446,   447,   448,     0,
       0,   449,     0,     0,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,     0,   496,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1647,    92,    93,    94,    95,    96,    97,    98,    99,
       0,   100,   101,   102,     0,     0,     0,     0,     0,     0,
       0,   103,   104,     0,   105,   106,   107,     0,   109,   110,
     111,   112,   113,     0,   115,   116,     0,   117,   118,   119,
     120,   121,   122,     0,     0,   123,   124,   125,   126,   127,
       0,   128,   129,   130,   131,   132,     0,     0,     0,   134,
     135,   136,   137,   138,   139,     0,   141,   142,   143,     0,
     144,   145,   146,   147,   148,   149,     0,     0,   151,   152,
     153,     0,     0,     0,     0,     0,     0,     0,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,     0,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
     174,   175,   176,     0,     0,   177,   178,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,     0,
     198,     0,   199,   200,   201,   202,     0,   203,     0,   204,
       0,     0,     0,   207,   208,   209,     0,   211,     0,   212,
       0,   213,   214,   215,     0,   216,   217,   218,   219,   220,
     221,   222,     0,   224,   225,   226,   227,     0,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   236,   237,   238,
     239,   240,   241,   242,     0,   243,     0,   244,     0,     0,
     247,     0,   249,   250,   251,   252,   253,     0,     0,   254,
       0,   256,     0,     0,   258,   259,   260,     0,     0,   261,
     262,   263,   264,   265,   498,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,     0,   287,   288,   289,   290,   291,
       0,   292,   293,     0,   295,     0,   296,   297,   298,   299,
     300,   301,     0,   302,   303,     0,     0,   304,   305,   306,
       0,     0,   307,   308,     0,   310,     0,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,     0,   323,
     324,   325,   326,   327,   328,   329,   330,   331,     0,   332,
     333,   334,   335,   336,   337,     0,   338,   339,   340,   341,
     342,   343,   344,   345,     0,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,     0,   359,
     360,     0,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,     0,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,   386,     0,
     388,   389,   390,   391,     0,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   500,   404,   405,   406,
       0,   407,   408,     0,   409,     0,   411,   412,   413,   414,
     415,     0,   416,   417,     0,     0,   418,   419,   420,   421,
     422,     0,   423,   424,   425,   426,   427,   428,   429,   430,
       0,     0,   431,   432,   433,   434,   435,     0,     0,   436,
     437,   438,   439,   440,   441,   442,     0,   443,     0,   445,
     446,   447,   448,     0,     0,   449,     0,     0,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,     0,
     496,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1752,    92,    93,    94,    95,
      96,    97,    98,    99,     0,   100,   101,   102,     0,     0,
       0,     0,     0,     0,     0,   103,   104,     0,   105,   106,
     107,     0,   109,   110,   111,   112,   113,     0,   115,   116,
       0,   117,   118,   119,   120,   121,   122,     0,     0,   123,
     124,   125,   126,   127,     0,   128,   129,   130,   131,   132,
       0,     0,     0,   134,   135,   136,   137,   138,   139,     0,
     141,   142,   143,     0,   144,   145,   146,   147,   148,   149,
       0,     0,   151,   152,   153,     0,     0,     0,     0,     0,
       0,     0,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,     0,   165,     0,   166,   167,   168,   169,   170,
     171,     0,   172,   173,   174,   175,   176,     0,     0,   177,
     178,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,     0,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,     0,   198,     0,   199,   200,   201,   202,
       0,   203,     0,   204,     0,     0,     0,   207,   208,   209,
       0,   211,     0,   212,     0,   213,   214,   215,     0,   216,
     217,   218,   219,   220,   221,   222,     0,   224,   225,   226,
     227,     0,   228,   229,   230,   231,   232,   233,     0,   234,
       0,   236,   237,   238,   239,   240,   241,   242,     0,   243,
       0,   244,     0,     0,   247,     0,   249,   250,   251,   252,
     253,     0,     0,   254,     0,   256,     0,     0,   258,   259,
     260,     0,     0,   261,   262,   263,   264,   265,   498,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,     0,   287,
     288,   289,   290,   291,     0,   292,   293,     0,   295,     0,
     296,   297,   298,   299,   300,   301,     0,   302,   303,     0,
       0,   304,   305,   306,     0,     0,   307,   308,     0,   310,
       0,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,     0,   323,   324,   325,   326,   327,   328,   329,
     330,   331,     0,   332,   333,   334,   335,   336,   337,     0,
     338,   339,   340,   341,   342,   343,   344,   345,     0,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,     0,   359,   360,     0,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,     0,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,   386,     0,   388,   389,   390,   391,     0,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     500,   404,   405,   406,     0,   407,   408,     0,   409,     0,
     411,   412,   413,   414,   415,     0,   416,   417,     0,     0,
     418,   419,   420,   421,   422,     0,   423,   424,   425,   426,
     427,   428,   429,   430,     0,     0,   431,   432,   433,   434,
     435,     0,     0,   436,   437,   438,   439,   440,   441,   442,
       0,   443,     0,   445,   446,   447,   448,     0,     0,   449,
       0,     0,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,     0,     0,     0,     0,  2385,  1226,   544,
       0,     0,  1607,   812,     0,     0,     0,     0,     0,  2283,
    1608,  1609,  1610,    92,    93,    94,    95,    96,    97,    98,
      99,  1046,   100,   101,   102,  1047,  1048,  1049,  1050,  1051,
    1052,  1053,   103,   104,  1054,   105,   106,   107,  2386,   109,
     110,   111,     0,   658,  2387,   660,   661,  1055,   117,   118,
     119,   120,   121,   122,  1056,  1057,   123,   124,   662,   663,
     127,  1058,   128,   129,   130,   131,     0,  1059,  2388,  1060,
     134,   135,   136,   137,   138,   139,  2389,   141,   142,   143,
    1061,   144,   145,   146,   147,   148,   149,  1062,  2390,   151,
     152,   153,  1063,  1064,  1065,  2391,  1066,  1067,  1068,   155,
     156,   157,   158,   159,   160,   161,   668,   669,   164,  1069,
     165,  1070,   166,   167,   168,   169,   170,   171,  1071,   172,
     173,   174,   175,   176,  1072,  1073,   177,   178,   670,   180,
     181,  1074,   182,   183,   184,  1075,   185,   186,   187,  1076,
     188,   189,   190,   191,     0,   193,   194,   195,   196,     0,
    1077,   198,  1078,   199,   200,   671,   202,  1079,   203,  1080,
     204,  2392,  1081,  2393,   207,   208,   209,  2394,   211,  1082,
     212,  1083,     0,     0,   215,  1084,   216,   217,   218,   219,
     220,   221,   222,  2395,   224,   225,   226,   227,  1085,   228,
     229,   230,   231,   232,   233,  1086,   234,  2396,     0,   237,
     238,   239,   240,   678,   679,  1087,   680,  1088,   244,  2397,
    2398,   247,  2399,   249,   250,   251,   252,   253,  1089,  1090,
     254,  2400,   256,  2401,  1091,   258,   259,   260,  1092,  1093,
     261,   262,   263,   264,   265,  2402,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   687,  2403,   689,   288,   289,   290,
    2404,  1094,   292,   293,  2405,   295,  1095,     0,   297,   691,
     299,   300,   301,  1096,   302,   303,  1097,  1098,  2406,   305,
     306,  1099,  1100,   307,     0,  2407,   310,  2408,     0,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,  1101,
     323,   324,     0,   326,   327,     0,   329,   330,   331,  1102,
     332,   333,   334,   335,   336,   337,  1103,   338,   339,   340,
     694,   342,   343,   344,   345,  1104,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,  1105,
     359,   360,  2409,   362,   363,   364,   696,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,  1106,   377,
     378,   379,   380,   381,  1107,   382,  2410,   384,   385,   386,
    2411,   388,   389,   699,   391,  1108,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,  2412,   404,     0,
     406,  1109,   407,   408,  1110,   409,  2413,   411,   412,   413,
     414,   415,  1111,   702,   703,  1112,  1113,   418,   419,     0,
     421,     0,  1114,   423,   424,  2414,   426,   427,   428,   429,
     430,  1115,  1116,   431,   432,   433,   434,   435,  1117,  1118,
     436,   437,   438,   439,   440,     0,   705,  1120,   443,  2415,
     445,   446,   447,   448,  1121,  1122,   449,  1123,  1124,   450,
     451,   452,   453,   454,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   467,   468,   469,   470,
       0,   496,     0,  1611,  1612,  1613,  1607,  2416,  2417,  1616,
    1617,  1618,  1619,     0,  1608,  1609,  1610,    92,    93,    94,
      95,    96,    97,    98,    99,     0,   100,   101,   102,     0,
       0,     0,     0,     0,     0,     0,   103,   104,     0,   105,
     106,   107,     0,   109,   110,   111,   112,   113,     0,   115,
     116,     0,   117,   118,   119,   120,   121,   122,     0,     0,
     123,   124,   125,   126,   127,     0,   128,   129,   130,   131,
     132,     0,     0,     0,   134,   135,   136,   137,   138,   139,
       0,   141,   142,   143,     0,   144,   145,   146,   147,   148,
     149,     0,     0,   151,   152,   153,     0,     0,     0,     0,
       0,     0,     0,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,   174,   175,   176,     0,     0,
     177,   178,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,     0,   198,     0,   199,   200,   201,
     202,     0,   203,     0,   204,     0,     0,     0,   207,   208,
     209,     0,   211,     0,   212,     0,   213,   214,   215,     0,
     216,   217,   218,   219,   220,   221,   222,     0,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,     0,
     234,     0,   236,   237,   238,   239,   240,   241,   242,     0,
     243,     0,   244,     0,     0,   247,     0,   249,   250,   251,
     252,   253,     0,     0,   254,     0,   256,     0,     0,   258,
     259,   260,     0,     0,   261,   262,   263,   264,   265,   498,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     287,   288,   289,   290,   291,     0,   292,   293,     0,   295,
       0,   296,   297,   298,   299,   300,   301,     0,   302,   303,
       0,     0,   304,   305,   306,     0,     0,   307,   308,     0,
     310,     0,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,     0,   323,   324,   325,   326,   327,   328,
     329,   330,   331,     0,   332,   333,   334,   335,   336,   337,
       0,   338,   339,   340,   341,   342,   343,   344,   345,     0,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,     0,   359,   360,     0,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,     0,   377,   378,   379,   380,   381,     0,   382,
     383,   384,   385,   386,     0,   388,   389,   390,   391,     0,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   500,   404,   405,   406,     0,   407,   408,     0,   409,
       0,   411,   412,   413,   414,   415,     0,   416,   417,     0,
       0,   418,   419,   420,   421,   422,     0,   423,   424,   425,
     426,   427,   428,   429,   430,     0,     0,   431,   432,   433,
     434,   435,     0,     0,   436,   437,   438,   439,   440,   441,
     442,     0,   443,     0,   445,   446,   447,   448,     0,     0,
     449,     0,     0,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     0,     0,     0,  1611,  1612,  1613,
       0,  1614,  1615,  1616,  1617,  1618,  1619,  1301,     0,     0,
       0,     0,  1302,     0,     0,  1303,     0,     0,     0,     0,
    1304,  1305,  1306,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1307,     0,     0,
    1308,  1302,     0,     0,  1303,  1309,     0,     0,     0,  1304,
    1305,  1306,  1310,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1307,     0,     0,  2260,
       0,     0,     0,     0,  1309,  1302,     0,  1311,  1303,     0,
       0,  1310,     0,  1304,  1305,  1306,     0,     0,     0,     0,
       0,     0,     0,     0,  1302,     0,     0,  1303,     0,     0,
    1307,     0,  1304,  1305,  1306,     0,  1311,     0,  1309,     0,
       0,     0,     0,     0,     0,  1310,     0,     0,     0,  1307,
       0,     0,     0,     0,     0,     0,     0,  1309,     0,     0,
       0,     0,     0,     0,  1310,     0,     0,     0,     0,     0,
    1311,     0,  1302,     0,     0,  1303,     0,     0,     0,     0,
    1304,  1305,  1306,     0,     0,     0,     0,     0,     0,  1311,
       0,  1302,     0,     0,  1303,     0,     0,  1307,     0,  1304,
    1305,  1306,     0,     0,     0,  1309,     0,  1312,     0,     0,
       0,     0,  1310,     0,     0,     0,  1307,     0,     0,     0,
       0,     0,     0,  1313,  1309,     0,     0,     0,  1314,     0,
       0,  1310,     0,     0,     0,     0,  1312,  1311,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1315,
    1316,     0,  1313,     0,     0,     0,  1311,  1314,     0,     0,
       0,     0,     0,  1317,     0,     0,     0,     0,     0,     0,
    1312,     0,     0,     0,     0,     0,     0,     0,  1315,  1316,
       0,     0,     0,     0,     0,     0,  1313,     0,     0,  1312,
       0,  1314,  1317,     0,     0,     0,     0,     0,     0,     0,
       0,  1318,     0,     0,  1319,  1313,     0,     0,     0,     0,
    1314,     0,  1315,  1316,     0,     0,     0,     0,  1320,     0,
       0,  1321,     0,     0,     0,     0,  1317,     0,     0,     0,
    1318,  1315,  1316,  1319,     0,     0,     0,  1312,     0,     0,
       0,     0,     0,     0,     0,  1317,     0,  1320,     0,     0,
    1321,     0,     0,  1313,     0,     0,  1312,     0,  1314,     0,
       0,     0,     0,     0,  1318,     0,     0,  1319,     0,     0,
       0,     0,  1313,     0,     0,     0,     0,  1314,     0,  1315,
    1316,  1320,     0,  1318,  1321,     0,  1319,     0,     0,     0,
       0,     0,     0,  1317,     0,     0,     0,     0,  1315,  1316,
    1320,     0,     0,  1321,     0,     0,     0,     0,     0,     0,
    1322,     0,  1317,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1318,     0,     0,  1319,     0,     0,     0,     0,  1322,
       0,     0,     0,     0,     0,     0,     0,     0,  1320,     0,
    1318,  1321,     0,  1319,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1320,     0,     0,
    1321,     0,  1302,  1322,     0,  1303,     0,     0,     0,     0,
    1304,  1305,  1306,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1322,     0,     0,     0,     0,  1307,     0,     0,
       0,     0,     0,     0,     0,  1309,     0,     0,     0,     0,
    1323,     0,  1310,  1324,  1325,  1326,     0,  1327,  1328,  1329,
    1330,  1331,  1332,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1311,     0,  1323,
    1322,     0,  1324,  1325,  1326,     0,  1327,  1328,  1329,  1330,
    1331,  1332,     0,     0,  1302,     0,  1652,  1303,     0,  1322,
       0,     0,  1304,  1305,  1306,     0,     0,     0,     0,     0,
       0,     0,     0,  1323,     0,     0,  1324,  1325,  1326,  1307,
    1327,  1328,  1329,  1330,  1331,  1332,     0,  1309,     0,     0,
    1652,     0,  1323,     0,  1310,  1324,  1325,  1326,     0,  1327,
    1328,  1329,  1330,  1331,  1332,     0,     0,     0,     0,  2012,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1311,
       0,  1302,     0,     0,  1303,     0,     0,     0,     0,  1304,
    1305,  1306,     0,     0,     0,     0,     0,  1312,     0,     0,
    1323,     0,     0,  1324,  1325,  1326,  1307,  1327,  1328,  1329,
    1330,  1331,  1332,  1313,  1309,     0,     0,  2222,  1314,  1323,
       0,  1310,  1324,  1325,  1326,     0,  1327,  1328,  1329,  1330,
    1331,  1332,     0,     0,     0,     0,  2261,     0,     0,  1315,
    1316,     0,     0,     0,     0,     0,  1311,     0,     0,     0,
       0,     0,     0,  1317,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1302,     0,     0,  1303,     0,     0,     0,
       0,  1304,  1305,  1306,     0,     0,     0,     0,     0,  1312,
       0,     0,     0,     0,     0,     0,     0,     0,  1307,     0,
       0,  1318,     0,     0,  1319,  1313,  1309,     0,     0,     0,
    1314,     0,     0,  1310,     0,     0,     0,     0,  1320,     0,
       0,  1321,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1315,  1316,     0,     0,     0,     0,     0,  1311,     0,
       0,     0,     0,     0,     0,  1317,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1312,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1313,     0,     0,     0,     0,  1314,     0,     0,
       0,     0,     0,  1318,     0,     0,  1319,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1315,  1316,
    1320,     0,     0,  1321,     0,     0,     0,     0,     0,     0,
    1322,     0,  1317,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1302,     0,     0,  1303,     0,     0,
       0,     0,  1304,  1305,  1306,     0,     0,     0,  1312,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1307,
    1318,     0,     0,  1319,  1313,     0,     0,  1309,     0,  1314,
       0,     0,     0,     0,  1310,     0,     0,  1320,     0,     0,
    1321,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1315,  1316,     0,     0,     0,     0,     0,     0,     0,  1311,
       0,     0,  1322,     0,  1317,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1323,     0,     0,  1324,  1325,  1326,     0,  1327,  1328,  1329,
    1330,  1331,  1332,     0,     0,     0,     0,  2349,     0,     0,
       0,     0,  1318,     0,     0,  1319,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1302,     0,  1320,
    1303,     0,  1321,     0,     0,  1304,  1305,  1306,     0,  1322,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1307,     0,     0,  1302,     0,     0,  1303,     0,
    1309,     0,     0,  1304,  1305,  1306,     0,  1310,     0,  1312,
       0,     0,  1323,     0,     0,  1324,  1325,  1326,     0,  1327,
    1328,  1329,  1330,  1331,  1332,  1313,     0,     0,  1309,  2475,
    1314,     0,  1311,     0,  1302,  1310,     0,  1303,     0,     0,
       0,     0,  1304,  1305,  1306,     0,     0,     0,     0,     0,
       0,  1315,  1316,     0,     0,     0,     0,     0,     0,  1307,
    1311,  1322,     0,     0,     0,  1317,     0,  1309,     0,     0,
       0,     0,     0,     0,  1310,     0,     0,     0,     0,  1323,
       0,     0,  1324,  1325,  1326,     0,  1327,  1328,  1329,  1330,
    1331,  1332,     0,     0,     0,     0,  2497,     0,     0,  1311,
       0,     0,     0,  1318,     0,     0,  1319,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1320,     0,     0,  1321,     0,     0,     0,     0,     0,     0,
       0,     0,  1312,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1313,     0,
       0,     0,     0,  1314,     0,     0,     0,     0,     0,     0,
    1312,  1323,     0,     0,  1324,  1325,  1326,     0,  1327,  1328,
    1329,  1330,  1331,  1332,  1315,  1316,  1313,     0,  2642,     0,
       0,  1314,     0,     0,     0,     0,     0,     0,  1317,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1312,
       0,     0, -1723, -1723,     0,     0,     0,     0,     0,     0,
       0,     0,  1322,     0,     0,  1313,  1317,     0,     0,     0,
    1314,     0,     0,     0,     0,     0,  1318,     0,     0,  1319,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1315,  1316,  1320,     0,     0,  1321,     0,     0,     0,
       0,     0,     0,     0,     0,  1317,     0, -1723,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1320,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1318,     0,     0,  1319,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1320,     0,  1323,  1321,     0,  1324,  1325,  1326,     0,  1327,
    1328,  1329,  1330,  1331,  1332,     0,     0,     0,     0,  2861,
       0,     0,     0,     0,     0,  1322,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1322,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1322,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1323,     0,     0,  1324,  1325,
    1326,     0,  1327,  1328,  1329,  1330,  1331,  1332,     0,     0,
       0,     0,  2873,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1323,     0,     0,  1324,  1325,  1326,     0,
    1327,  1328,  1329,  1330,  1331,  1332,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1323,  1045,     0,  1324,  1325,  1326,     0,  1327,
    1328,  1329,  1330,  1331,  1332,     0,     0,  1483,     0,    92,
      93,    94,    95,    96,    97,    98,    99,  1046,   100,   101,
     102,  1047,  1048,  1049,  1050,  1051,  1052,  1053,   103,   104,
    1054,   105,   106,   107,     0,   109,   110,   111,   738,   739,
       0,   740,   741,  1055,   117,   118,   119,   120,   121,   122,
    1056,  1057,   123,   124,   742,   743,   127,  1058,   128,   129,
     130,   131,   744,  1059,     0,  1060,   134,   135,   136,   137,
     138,   139,     0,   141,   142,   143,  1061,   144,   145,   146,
     147,   148,   149,  1062,     0,   151,   152,   153,  1063,  1064,
    1065,     0,  1066,  1067,  1068,   155,   156,   157,   158,   159,
     160,   161,   745,   746,   164,  1069,   165,  1070,   166,   167,
     168,   169,   170,   171,  1071,   172,   173,   174,   175,   176,
    1072,  1073,   177,   178,   179,   180,   181,  1074,   182,   183,
     184,  1075,   185,   186,   187,  1076,   188,   189,   190,   191,
     747,   193,   194,   195,   196,   748,  1077,   198,  1078,   199,
     200,   749,   202,  1079,   203,  1080,   204,     0,  1081,     0,
     207,   208,   209,     0,   211,  1082,   212,  1083,   750,   751,
     215,  1084,   216,   217,   218,   219,   220,   221,   222,     0,
     224,   225,   226,   227,  1085,   228,   229,   230,   231,   232,
     233,  1086,   234,     0,   752,   237,   238,   239,   240,   753,
     754,  1087,   755,  1088,   244,     0,     0,   247,     0,   249,
     250,   251,   252,   253,  1089,  1090,   254,     0,   256,     0,
    1091,   258,   259,   260,  1092,  1093,   261,   262,   263,   264,
     265,   756,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     757,     0,   758,   288,   289,   290,   759,  1094,   292,   293,
       0,   295,  1095,   760,   297,   761,   299,   300,   301,  1096,
     302,   303,  1097,  1098,   304,   305,   306,  1099,  1100,   307,
     762,     0,   310,     0,   763,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,  1101,   323,   324,   764,   326,
     327,   765,   329,   330,   331,  1102,   332,   333,   334,   335,
     336,   337,  1103,   338,   339,   340,   766,   342,   343,   344,
     345,  1104,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,  1105,   359,   360,     0,   362,
     363,   364,   767,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,  1106,   377,   378,   379,   380,   381,
    1107,   382,   768,   384,   385,   386,     0,   388,   389,   769,
     391,  1108,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   770,   404,   771,   406,  1109,   407,   408,
    1110,   409,     0,   411,   412,   413,   414,   415,  1111,   772,
     773,  1112,  1113,   418,   419,   774,   421,   775,  1114,   423,
     424,   776,   426,   427,   428,   429,   430,  1115,  1116,   431,
     432,   433,   434,   435,  1117,  1118,   436,   437,   438,   439,
     440,  1119,   778,  1120,   443,     0,   445,   446,   447,   448,
    1121,  1122,   449,  1123,  1124,   450,   451,   452,   453,   454,
     455,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   467,   468,   469,   470,   496,     0,     0,     0,
       0,     0,     0,     0,     0,  1731,     0,     0,     0,     0,
       0,     0,    92,    93,    94,    95,    96,    97,    98,    99,
       0,   100,   101,   102,     0,     0,     0,     0,     0,     0,
       0,   103,   104,     0,   105,   106,   107,     0,   109,   110,
     111,   112,   113,     0,   115,   116,     0,   117,   118,   119,
     120,   121,   122,     0,     0,   123,   124,   125,   126,   127,
       0,   128,   129,   130,   131,   132,     0,     0,     0,   134,
     135,   136,   137,   138,   139,     0,   141,   142,   143,     0,
     144,   145,   146,   147,   148,   149,     0,     0,   151,   152,
     153,     0,     0,     0,     0,     0,     0,     0,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,     0,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
     174,   175,   176,     0,     0,   177,   178,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,     0,
     198,     0,   199,   200,   201,   202,     0,   203,     0,   204,
       0,     0,     0,   207,   208,   209,     0,   211,     0,   212,
       0,   213,   214,   215,     0,   216,   217,   218,   219,   220,
     221,   222,     0,   224,   225,   226,   227,     0,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   236,   237,   238,
     239,   240,   241,   242,     0,   243,     0,   244,     0,     0,
     247,     0,   249,   250,   251,   252,   253,     0,     0,   254,
       0,   256,     0,     0,   258,   259,   260,     0,     0,   261,
     262,   263,   264,   265,   498,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,     0,   287,   288,   289,   290,   291,
       0,   292,   293,     0,   295,     0,   296,   297,   298,   299,
     300,   301,     0,   302,   303,     0,     0,   304,   305,   306,
       0,     0,   307,   308,     0,   310,     0,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,     0,   323,
     324,   325,   326,   327,   328,   329,   330,   331,     0,   332,
     333,   334,   335,   336,   337,     0,   338,   339,   340,   341,
     342,   343,   344,   345,     0,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,     0,   359,
     360,     0,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,     0,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,   386,     0,
     388,   389,   390,   391,     0,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   500,   404,   405,   406,
       0,   407,   408,     0,   409,     0,   411,   412,   413,   414,
     415,     0,   416,   417,     0,     0,   418,   419,   420,   421,
     422,     0,   423,   424,   425,   426,   427,   428,   429,   430,
       0,     0,   431,   432,   433,   434,   435,     0,     0,   436,
     437,   438,   439,   440,   441,   442,     0,   443,     0,   445,
     446,   447,   448,     0,     0,   449,     0,     0,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   737,
    1226,   544,     0,     0,     0,   812,     0,     0,  2214,     0,
       0,     0,     0,     0,     0,    92,    93,    94,    95,    96,
      97,    98,    99,     0,   100,   101,   102,     0,     0,     0,
       0,     0,     0,     0,   103,   104,     0,   105,   106,   107,
       0,   109,   110,   111,   738,   739,     0,   740,   741,     0,
     117,   118,   119,   120,   121,   122,     0,     0,   123,   124,
     742,   743,   127,     0,   128,   129,   130,   131,   744,     0,
       0,     0,   134,   135,   136,   137,   138,   139,     0,   141,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
       0,   151,   152,   153,     0,     0,     0,     0,     0,     0,
       0,   155,   156,   157,   158,   159,   160,   161,   745,   746,
     164,  1361,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,   174,   175,   176,     0,     0,   177,   178,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,   191,   747,   193,   194,   195,
     196,   748,  1227,   198,     0,   199,   200,   749,   202,     0,
     203,     0,   204,     0,     0,     0,   207,   208,   209,     0,
     211,     0,   212,     0,   750,   751,   215,     0,   216,   217,
     218,   219,   220,   221,   222,     0,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,     0,   234,     0,
     752,   237,   238,   239,   240,   753,   754,     0,   755,     0,
     244,     0,     0,   247,     0,   249,   250,   251,   252,   253,
       0,     0,   254,     0,   256,     0,     0,   258,   259,   260,
       0,     0,   261,   262,   263,   264,   265,   756,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   757,     0,   758,   288,
     289,   290,   759,     0,   292,   293,     0,   295,     0,   760,
     297,   761,   299,   300,   301,     0,   302,   303,  1228,     0,
     304,   305,   306,     0,     0,   307,   762,     0,   310,     0,
     763,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,     0,   323,   324,   764,   326,   327,   765,   329,   330,
     331,     0,   332,   333,   334,   335,   336,   337,     0,   338,
     339,   340,   766,   342,   343,   344,   345,     0,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,     0,   359,   360,     0,   362,   363,   364,   767,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
       0,   377,   378,   379,   380,   381,     0,   382,   768,   384,
     385,   386,     0,   388,   389,   769,   391,     0,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   770,
     404,   771,   406,     0,   407,   408,     0,   409,     0,   411,
     412,   413,   414,   415,     0,   772,   773,     0,     0,   418,
     419,   774,   421,   775,  1229,   423,   424,   776,   426,   427,
     428,   429,   430,     0,     0,   431,   432,   433,   434,   435,
       0,     0,   436,   437,   438,   439,   440,  1119,   778,     0,
     443,     0,   445,   446,   447,   448,     0,     0,   449,     0,
       0,   450,   451,   452,   453,   454,   455,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   467,   468,
     469,   470,   737,  1226,   544,     0,     0,     0,   812,  1230,
    1231,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   738,   739,     0,
     740,   741,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   742,   743,   127,     0,   128,   129,   130,
     131,   744,     0,     0,     0,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   151,   152,   153,     0,     0,     0,
       0,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   745,   746,   164,  1363,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   747,
     193,   194,   195,   196,   748,  1227,   198,     0,   199,   200,
     749,   202,     0,   203,     0,   204,     0,     0,     0,   207,
     208,   209,     0,   211,     0,   212,     0,   750,   751,   215,
       0,   216,   217,   218,   219,   220,   221,   222,     0,   224,
     225,   226,   227,     0,   228,   229,   230,   231,   232,   233,
       0,   234,     0,   752,   237,   238,   239,   240,   753,   754,
       0,   755,     0,   244,     0,     0,   247,     0,   249,   250,
     251,   252,   253,     0,     0,   254,     0,   256,     0,     0,
     258,   259,   260,     0,     0,   261,   262,   263,   264,   265,
     756,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   757,
       0,   758,   288,   289,   290,   759,     0,   292,   293,     0,
     295,     0,   760,   297,   761,   299,   300,   301,     0,   302,
     303,  1228,     0,   304,   305,   306,     0,     0,   307,   762,
       0,   310,     0,   763,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,     0,   323,   324,   764,   326,   327,
     765,   329,   330,   331,     0,   332,   333,   334,   335,   336,
     337,     0,   338,   339,   340,   766,   342,   343,   344,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,     0,   359,   360,     0,   362,   363,
     364,   767,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,     0,   377,   378,   379,   380,   381,     0,
     382,   768,   384,   385,   386,     0,   388,   389,   769,   391,
       0,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   770,   404,   771,   406,     0,   407,   408,     0,
     409,     0,   411,   412,   413,   414,   415,     0,   772,   773,
       0,     0,   418,   419,   774,   421,   775,  1229,   423,   424,
     776,   426,   427,   428,   429,   430,     0,     0,   431,   432,
     433,   434,   435,     0,     0,   436,   437,   438,   439,   440,
    1119,   778,     0,   443,     0,   445,   446,   447,   448,     0,
       0,   449,     0,     0,   450,   451,   452,   453,   454,   455,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   467,   468,   469,   470,   737,  1226,   544,     0,     0,
       0,   812,  1230,  1231,     0,     0,     0,     0,     0,     0,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     100,   101,   102,     0,     0,     0,     0,     0,     0,     0,
     103,   104,     0,   105,   106,   107,     0,   109,   110,   111,
     738,   739,     0,   740,   741,     0,   117,   118,   119,   120,
     121,   122,     0,     0,   123,   124,   742,   743,   127,     0,
     128,   129,   130,   131,   744,     0,     0,     0,   134,   135,
     136,   137,   138,   139,     0,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,     0,   151,   152,   153,
       0,     0,     0,     0,     0,     0,     0,   155,   156,   157,
     158,   159,   160,   161,   745,   746,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   747,   193,   194,   195,   196,   748,  1227,   198,
       0,   199,   200,   749,   202,     0,   203,     0,   204,     0,
       0,     0,   207,   208,   209,     0,   211,     0,   212,     0,
     750,   751,   215,     0,   216,   217,   218,   219,   220,   221,
     222,     0,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,     0,   234,     0,   752,   237,   238,   239,
     240,   753,   754,     0,   755,     0,   244,     0,     0,   247,
       0,   249,   250,   251,   252,   253,     0,     0,   254,     0,
     256,     0,     0,   258,   259,   260,     0,     0,   261,   262,
     263,   264,   265,   756,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   757,     0,   758,   288,   289,   290,   759,     0,
     292,   293,     0,   295,     0,   760,   297,   761,   299,   300,
     301,     0,   302,   303,  1228,     0,   304,   305,   306,     0,
       0,   307,   762,     0,   310,     0,   763,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,     0,   323,   324,
     764,   326,   327,   765,   329,   330,   331,     0,   332,   333,
     334,   335,   336,   337,     0,   338,   339,   340,   766,   342,
     343,   344,   345,     0,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,     0,   359,   360,
       0,   362,   363,   364,   767,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,     0,   377,   378,   379,
     380,   381,     0,   382,   768,   384,   385,   386,     0,   388,
     389,   769,   391,     0,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   770,   404,   771,   406,     0,
     407,   408,     0,   409,     0,   411,   412,   413,   414,   415,
       0,   772,   773,     0,     0,   418,   419,   774,   421,   775,
    1229,   423,   424,   776,   426,   427,   428,   429,   430,     0,
       0,   431,   432,   433,   434,   435,     0,     0,   436,   437,
     438,   439,   440,  1119,   778,     0,   443,     0,   445,   446,
     447,   448,     0,     0,   449,     0,     0,   450,   451,   452,
     453,   454,   455,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   467,   468,   469,   470,     0,  1302,
       0,     0,  1303,     0,     0,  1230,  1231,  1304,  1305,  1306,
       0,     0,     0,     0,     0,     0,     0,  1302,     0,     0,
    1303,     0,     0,     0,  1307,  1304,  1305,  1306,  1758,     0,
       0,     0,  1309,     0,     0,  1302,     0,     0,  1303,  1310,
       0,     0,  1307,  1304,  1305,  1306,     0,     0,     0,     0,
    1309,     0,     0,     0,     0,     0,     0,  1310,     0,     0,
    1307,     0,     0,  1302,  1311,     0,  1303,     0,  1309,     0,
       0,  1304,  1305,  1306,     0,  1310,     0,     0,     0,     0,
       0,     0,  1311,     0,     0,     0,     0,     0,  1307,     0,
       0,  1952,     0,     0,     0,     0,  1309,     0,     0,     0,
    1311,     0,     0,  1310,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1759,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1311,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1302,     0,
       0,  1303,     0,     0,     0,     0,  1304,  1305,  1306,     0,
       0,     0,     0,     0,  1312,     0,     0,     0,     0,     0,
       0,     0,  1990,  1307,     0,     0,     0,  1991,     0,     0,
    1313,  1309,  1312,     0,     0,  1314,     0,     0,  1310,  2934,
       0,     0,     0,     0,     0,     0,     0,     0,  1313,     0,
    1312,     0,     0,  1314,     0,     0,  1315,  1316,     0,     0,
       0,     0,     0,  1311,     0,     0,  1313,     0,     0,     0,
    1317,  1314,     0,     0,  1315,  1316,     0,     0,  1312,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1317,     0,
       0,     0,  1315,  1316,  1313,     0,     0,     0,     0,  1314,
       0,     0,     0,     0,     0,     0,  1317,     0,  1318,     0,
       0,  1319,     0,     0,     0,     0,     0,     0,     0,     0,
    1315,  1316,     0,     0,     0,  1320,  1318,     0,  1321,  1319,
       0,     0,     0,     0,  1317,     0,     0,     0,     0,     0,
       0,     0,     0,  1320,  1318,     0,  1321,  1319,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1320,     0,  1312,  1321,     0,     0,     0,     0,     0,
       0,     0,  1318,     0,     0,  1319,     0,     0,     0,  1313,
       0,     0,     0,     0,  1314,     0,     0,  2935,     0,  1320,
       0,     0,  1321,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1315,  1316,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1322,     0,  1317,
       0,     0,  1302,     0,     0,  1303,     0,     0,     0,     0,
    1304,  1305,  1306,     0,     0,  1322,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1307,     0,     0,
    1995,     0,     0,  1322,     0,  1309,     0,  1318,     0,     0,
    1319,     0,  1310,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1320,     0,  1760,  1321,     0,     0,
       0,  1322,     0,     0,     0,     0,     0,  1311,     0,     0,
       0,     0,     0,     0,     0,  1964,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1323,     0,     0,
    1324,  1325,  1326,     0,  1327,  1328,  1329,  1330,  1331,  1332,
       0,     0,     0,     0,     0,  1323,     0,     0,  1324,  1325,
    1326,     0,  1327,  1328,  1329,  1330,  1331,  1332,     0,     0,
       0,     0,     0,  1323,     0,     0,  1324,  1325,  1326,     0,
    1327,  1328,  1329,  1330,  1331,  1332,  1322,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1323,     0,     0,  1324,  1325,  1326,  1312,  1327,  1328,
    1329,  1330,  1331,  1332,     0,     0,     0,     0,     0,     0,
       0,     0,  1302,  1313,     0,  1303,     0,     0,  1314,     0,
    1304,  1305,  1306,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1307,     0,  1315,
    1316,     0,     0,     0,     0,  1309,     0,     0,     0,     0,
       0,     0,  1310,  1317,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1302,     0,     0,  1303,     0,
       0,     0,     0,  1304,  1305,  1306,  1323,  1311,     0,  1324,
    1325,  1326,     0,  1327,  1328,  1329,  1330,  1331,  1332,     0,
    1307,  1318,     0,  2002,  1319,     0,     0,     0,  1309,     0,
       0,     0,     0,     0,     0,  1310,     0,     0,  1320,     0,
       0,  1321,     0,  1302,     0,     0,  1303,     0,     0,     0,
       0,  1304,  1305,  1306,     0,     0,     0,     0,     0,     0,
    1311,     0,     0,     0,     0,     0,     0,     0,  1307,     0,
       0,     0,     0,     0,     0,     0,  1309,     0,     0,     0,
       0,     0,     0,  1310,     0,     0,     0,     0,     0,     0,
       0,  1302,     0,     0,  1303,     0,     0,     0,     0,  1304,
    1305,  1306,  2000,     0,     0,     0,     0,  1312,  1311,     0,
       0,     0,     0,     0,     0,     0,  1307,     0,     0,  2260,
       0,     0,     0,  1313,  1309,     0,     0,     0,  1314,     0,
    1322,  1310,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1315,
    1316,     0,     0,     0,     0,     0,  1311,     0,     0,     0,
    1312,     0,     0,  1317,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1313,     0,     0,     0,
       0,  1314,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1318,  1315,  1316,  1319,     0,     0,     0,  1312,     0,
       0,     0,     0,     0,     0,     0,  1317,     0,  1320,     0,
       0,  1321,     0,     0,  1313,     0,     0,     0,     0,  1314,
    1323,     0,     0,  1324,  1325,  1326,     0,  1327,  1328,  1329,
    1330,  1331,  1332,     0,     0,     0,     0,     0,     0,     0,
    1315,  1316,     0,     0,  1318,     0,  1312,  1319,     0,     0,
       0,     0,     0,     0,  1317,     0,     0,     0,     0,     0,
       0,  1320,  1313,     0,  1321,  1302,     0,  1314,  1303,     0,
       0,     0,     0,  1304,  1305,  1306,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1315,  1316,
    1307,     0,  1318,     0,     0,  1319,     0,     0,  1309,     0,
    1322,     0,  1317,     0,     0,  1310,     0,     0,     0,  1320,
       0,  1302,  1321,     0,  1303,     0,     0,     0,     0,  1304,
    1305,  1306,     0,     0,     0,     0,     0,     0,     0,     0,
    1311,     0,     0,     0,     0,     0,  1307,     0,     0,     0,
    1318,     0,     0,  1319,  1309,     0,     0,     0,     0,     0,
       0,  1310,     0,  1322,     0,     0,     0,  1320,     0,     0,
    1321,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1311,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1323,  1322,     0,  1324,  1325,  1326,     0,  1327,  1328,  1329,
    1330,  1331,  1332,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1312,     0,     0,  2218,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1313,     0,     0,  1322,
       0,  1314,     0,  1323,     0,     0,  1324,  1325,  1326,     0,
    1327,  1328,  1329,  1330,  1331,  1332,     0,     0,     0,     0,
       0,     0,  1315,  1316,     0,     0,  1312,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1317,     0,     0,     0,
       0,     0,  1313,     0,     0,     0,     0,  1314,     0,     0,
       0,  1323,     0,     0,  1324,  1325,  1326,     0,  1327,  1328,
    1329,  1330,  1331,  1332,     0,     0,     0,     0,  1315,  1316,
       0,     0,     0,     0,  1318,     0,     0,  1319,     0,     0,
       0,     0,  1317,     0,     0,     0,     0,     0,     0,     0,
       0,  1320,     0,     0,  1321,     0,     0,     0,     0,  1323,
       0,     0,  1324,  1325,  1326,     0,  1327,  1328,  1329,  1330,
    1331,  1332,     0,     0,     0,     0,     0,     0,     0,     0,
    1318,     0,     0,  1319,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1320,     0,     0,
    1321,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1322,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1322,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1323,     0,     0,  1324,  1325,  1326,     0,
    1327,  1328,  1329,  1330,  1331,  1332,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1045,     0,  1666,  1323,
       0,     0,  1324,  1325,  1326,     0,  1327,  1328,  1329,  1330,
    1775,  1332,    92,    93,    94,    95,    96,    97,    98,    99,
    1046,   100,   101,   102,  1047,  1048,  1049,  1050,  1051,  1052,
    1053,   103,   104,  1054,   105,   106,   107,     0,   109,   110,
     111,   738,   739,     0,   740,   741,  1055,   117,   118,   119,
     120,   121,   122,  1056,  1057,   123,   124,   742,   743,   127,
    1058,   128,   129,   130,   131,   744,  1059,     0,  1060,   134,
     135,   136,   137,   138,   139,     0,   141,   142,   143,  1061,
     144,   145,   146,   147,   148,   149,  1062,     0,   151,   152,
     153,  1063,  1064,  1065,     0,  1066,  1067,  1068,   155,   156,
     157,   158,   159,   160,   161,   745,   746,   164,  1069,   165,
    1070,   166,   167,   168,   169,   170,   171,  1071,   172,   173,
     174,   175,   176,  1072,  1073,   177,   178,   179,   180,   181,
    1074,   182,   183,   184,  1075,   185,   186,   187,  1076,   188,
     189,   190,   191,   747,   193,   194,   195,   196,   748,  1077,
     198,  1078,   199,   200,   749,   202,  1079,   203,  1080,   204,
       0,  1081,     0,   207,   208,   209,     0,   211,  1082,   212,
    1083,   750,   751,   215,  1084,   216,   217,   218,   219,   220,
     221,   222,     0,   224,   225,   226,   227,  1085,   228,   229,
     230,   231,   232,   233,  1086,   234,     0,   752,   237,   238,
     239,   240,   753,   754,  1087,   755,  1088,   244,     0,     0,
     247,     0,   249,   250,   251,   252,   253,  1089,  1090,   254,
       0,   256,     0,  1091,   258,   259,   260,  1092,  1093,   261,
     262,   263,   264,   265,   756,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   757,     0,   758,   288,   289,   290,   759,
    1094,   292,   293,     0,   295,  1095,   760,   297,   761,   299,
     300,   301,  1096,   302,   303,  1097,  1098,   304,   305,   306,
    1099,  1100,   307,   762,     0,   310,     0,   763,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,  1101,   323,
     324,   764,   326,   327,   765,   329,   330,   331,  1102,   332,
     333,   334,   335,   336,   337,  1103,   338,   339,   340,   766,
     342,   343,   344,   345,  1104,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,  1105,   359,
     360,     0,   362,   363,   364,   767,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,  1106,   377,   378,
     379,   380,   381,  1107,   382,   768,   384,   385,   386,     0,
     388,   389,   769,   391,  1108,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   770,   404,   771,   406,
    1109,   407,   408,  1110,   409,     0,   411,   412,   413,   414,
     415,  1111,   772,   773,  1112,  1113,   418,   419,   774,   421,
     775,  1114,   423,   424,   776,   426,   427,   428,   429,   430,
    1115,  1116,   431,   432,   433,   434,   435,  1117,  1118,   436,
     437,   438,   439,   440,  1119,   778,  1120,   443,     0,   445,
     446,   447,   448,  1121,  1122,   449,  1123,  1124,   450,   451,
     452,   453,   454,   455,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   467,   468,   469,   470,  1045,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    92,    93,    94,    95,    96,
      97,    98,    99,  1046,   100,   101,   102,  1047,  1048,  1049,
    1050,  1051,  1052,  1053,   103,   104,  1054,   105,   106,   107,
       0,   109,   110,   111,   738,   739,     0,   740,   741,  1055,
     117,   118,   119,   120,   121,   122,  1056,  1057,   123,   124,
     742,   743,   127,  1058,   128,   129,   130,   131,   744,  1059,
       0,  1060,   134,   135,   136,   137,   138,   139,     0,   141,
     142,   143,  1061,   144,   145,   146,   147,   148,   149,  1062,
       0,   151,   152,   153,  1063,  1064,  1065,     0,  1066,  1067,
    1068,   155,   156,   157,   158,   159,   160,   161,   745,   746,
     164,  1069,   165,  1070,   166,   167,   168,   169,   170,   171,
    1071,   172,   173,   174,   175,   176,  1072,  1073,   177,   178,
     179,   180,   181,  1074,   182,   183,   184,  1075,   185,   186,
     187,  1076,   188,   189,   190,   191,   747,   193,   194,   195,
     196,   748,  1077,   198,  1078,   199,   200,   749,   202,  1079,
     203,  1080,   204,     0,  1081,     0,   207,   208,   209,     0,
     211,  1082,   212,  1083,   750,   751,   215,  1084,   216,   217,
     218,   219,   220,   221,   222,     0,   224,   225,   226,   227,
    1085,   228,   229,   230,   231,   232,   233,  1086,   234,     0,
     752,   237,   238,   239,   240,   753,   754,  1087,   755,  1088,
     244,     0,     0,   247,     0,   249,   250,   251,   252,   253,
    1089,  1090,   254,     0,   256,     0,  1091,   258,   259,   260,
    1092,  1093,   261,   262,   263,   264,   265,   756,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   757,     0,   758,   288,
     289,   290,   759,  1094,   292,   293,     0,   295,  1095,   760,
     297,   761,   299,   300,   301,  1096,   302,   303,  1097,  1098,
     304,   305,   306,  1099,  1100,   307,   762,     0,   310,     0,
     763,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,  1101,   323,   324,   764,   326,   327,   765,   329,   330,
     331,  1102,   332,   333,   334,   335,   336,   337,  1103,   338,
     339,   340,   766,   342,   343,   344,   345,  1104,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,  1105,   359,   360,     0,   362,   363,   364,   767,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
    1106,   377,   378,   379,   380,   381,  1107,   382,   768,   384,
     385,   386,     0,   388,   389,   769,   391,  1108,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   770,
     404,   771,   406,  1109,   407,   408,  1110,   409,     0,   411,
     412,   413,   414,   415,  1111,   772,   773,  1112,  1113,   418,
     419,   774,   421,   775,  1114,   423,   424,   776,   426,   427,
     428,   429,   430,  1115,  1116,   431,   432,   433,   434,   435,
    1117,  1118,   436,   437,   438,   439,   440,  1119,   778,  1120,
     443,     0,   445,   446,   447,   448,  1121,  1122,   449,  1123,
    1124,   450,   451,   452,   453,   454,   455,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   467,   468,
     469,   470,  1045,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,  1810,    97,    98,    99,  1046,   100,   101,   102,
    1047,  1048,  1049,  1050,  1051,  1052,  1053,   103,   104,  1054,
     105,   106,   107,     0,   109,   110,   111,   738,   739,     0,
     740,   741,  1055,   117,   118,   119,   120,   121,   122,  1056,
    1057,   123,   124,   742,   743,   127,  1058,   128,   129,   130,
     131,   744,  1059,     0,  1060,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,  1061,   144,   145,   146,   147,
     148,   149,  1062,     0,   151,   152,   153,  1063,  1064,  1065,
       0,  1066,  1067,  1068,   155,   156,   157,   158,   159,   160,
     161,   745,   746,   164,  1069,   165,  1070,   166,   167,   168,
     169,   170,   171,  1071,   172,   173,   174,   175,   176,  1072,
    1073,   177,   178,   179,  1811,   181,  1074,   182,   183,   184,
    1075,   185,   186,   187,  1076,   188,   189,   190,   191,   747,
     193,   194,   195,   196,   748,  1077,   198,  1078,   199,   200,
     749,   202,  1079,   203,  1080,   204,     0,  1081,     0,   207,
     208,   209,     0,   211,  1082,   212,  1083,   750,   751,   215,
    1084,   216,   217,   218,   219,   220,   221,   222,     0,   224,
     225,   226,   227,  1085,   228,   229,   230,   231,   232,   233,
    1086,   234,     0,   752,   237,   238,   239,   240,   753,   754,
    1087,   755,  1088,   244,     0,     0,   247,     0,   249,   250,
     251,   252,   253,  1089,  1090,   254,     0,   256,     0,  1091,
     258,   259,   260,  1092,  1093,   261,   262,   263,   264,   265,
     756,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   757,
       0,   758,   288,   289,   290,   759,  1094,   292,   293,     0,
     295,  1095,   760,   297,   761,   299,   300,   301,  1096,   302,
     303,  1097,  1098,   304,   305,   306,  1099,  1100,   307,   762,
       0,   310,     0,   763,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,  1101,   323,   324,   764,   326,   327,
     765,   329,   330,   331,  1102,   332,   333,   334,   335,   336,
     337,  1103,   338,   339,   340,   766,   342,   343,   344,   345,
    1104,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,  1105,   359,   360,     0,   362,   363,
     364,   767,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,  1106,   377,   378,   379,   380,   381,  1107,
    1812,   768,   384,   385,   386,     0,   388,   389,   769,   391,
    1108,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   770,   404,   771,   406,  1109,   407,   408,  1110,
     409,     0,   411,   412,   413,   414,   415,  1111,   772,   773,
    1112,  1113,   418,   419,   774,   421,   775,  1114,   423,   424,
     776,   426,   427,   428,   429,   430,  1115,  1116,   431,   432,
     433,   434,   435,  1117,  1118,   436,   437,   438,   439,   440,
    1119,   778,  1120,   443,     0,   445,   446,   447,   448,  1121,
    1122,   449,  1123,  1124,   450,   451,   452,   453,   454,   455,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   467,   468,   469,   470,    91,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     100,   101,   102,     0,     0,     0,     0,     0,     0,     0,
     103,   104,     0,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,     0,   117,   118,   119,   120,
     121,   122,     0,   819,   123,   124,   125,   126,   127,     0,
     128,   129,   130,   131,   822,     0,   823,     0,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,   150,   151,   152,   153,
     824,   825,   826,   827,   828,   829,   830,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   835,     0,   198,
       0,   199,   200,   201,   202,     0,   203,     0,   204,   205,
       0,   206,   207,   208,   209,   210,   211,     0,   212,     0,
     213,   214,   215,     0,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,     0,   234,   235,   236,   237,   238,   239,
     240,   241,   242,     0,   243,     0,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,     0,     0,   254,   255,
     256,   257,     0,   258,   259,   260,   843,   844,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,     0,
     292,   293,   294,   295,     0,   849,   297,   298,   299,   300,
     301,     0,   302,   303,     0,     0,   304,   305,   306,     0,
       0,   307,   308,   309,   310,   311,   852,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,     0,   323,   324,
     853,   326,   327,   328,   329,   330,   331,     0,   332,   333,
     334,   335,   336,   337,     0,   338,   339,   340,   341,   342,
     343,   344,   345,     0,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,     0,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,     0,   377,   378,   379,
     380,   381,   856,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,     0,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   858,   406,     0,
     407,   408,     0,   409,   410,   411,   412,   413,   414,   415,
       0,   416,   417,     0,     0,   418,   419,   861,   421,   862,
       0,   423,   424,   864,   426,   427,   428,   429,   430,     0,
       0,   431,   432,   433,   434,   435,   865,     0,   436,   437,
     438,   439,   440,   441,   442,     0,   443,   444,   445,   446,
     447,   448,     0,     0,   449,     0,     0,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,    91,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    92,    93,    94,    95,    96,    97,
      98,    99,     0,   100,   101,   102,     0,     0,     0,     0,
       0,     0,     0,   103,   104,     0,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,     0,   117,
     118,   119,   120,   121,   122,     0,     0,   123,   124,   125,
     126,   127,     0,   128,   129,   130,   131,   132,     0,   133,
       0,   134,   135,   136,   137,   138,   139,   140,   141,   142,
     143,     0,   144,   145,   146,   147,   148,   149,     0,   150,
     151,   152,   153,     0,     0,     0,   154,     0,     0,     0,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
       0,   165,     0,   166,   167,   168,   169,   170,   171,     0,
     172,   173,   174,   175,   176,     0,     0,   177,   178,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
       0,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,     0,   198,     0,   199,   200,   201,   202,     0,   203,
       0,   204,   205,     0,   206,   207,   208,   209,   210,   211,
       0,   212,     0,   213,   214,   215,     0,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,     0,
     228,   229,   230,   231,   232,   233,     0,   234,   235,   236,
     237,   238,   239,   240,   241,   242,     0,   243,     0,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,     0,
       0,   254,   255,   256,   257,     0,   258,   259,   260,     0,
       0,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,     0,   292,   293,   294,   295,     0,   296,   297,
     298,   299,   300,   301,     0,   302,   303,     0,     0,   304,
     305,   306,     0,     0,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
       0,   323,   324,   325,   326,   327,   328,   329,   330,   331,
       0,   332,   333,   334,   335,   336,   337,     0,   338,   339,
     340,   341,   342,   343,   344,   345,     0,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
       0,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,     0,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,     0,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,     0,   407,   408,     0,   409,   410,   411,   412,
     413,   414,   415,     0,   416,   417,     0,     0,   418,   419,
     420,   421,   422,     0,   423,   424,   425,   426,   427,   428,
     429,   430,     0,     0,   431,   432,   433,   434,   435,     0,
       0,   436,   437,   438,   439,   440,   441,   442,     0,   443,
     444,   445,   446,   447,   448,     0,     0,   449,     0,     0,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   496,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    92,    93,    94,
      95,    96,    97,    98,    99,     0,   100,   101,   102,     0,
       0,     0,     0,     0,     0,     0,   103,   104,     0,   105,
     106,   107,     0,   109,   110,   111,   112,   113,     0,   115,
     116,     0,   117,   118,   119,   120,   121,   122,     0,     0,
     123,   124,   125,   126,   127,  1421,   128,   129,   130,   131,
     132,     0,     0,  1422,   134,   135,   136,   137,   138,   139,
       0,   141,   142,   143,  1423,   144,   145,   146,   147,   148,
     149,     0,     0,   151,   152,   153,     0,     0,     0,     0,
       0,     0,     0,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,   174,   175,   176,     0,     0,
     177,   178,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,     0,   198,     0,   199,   200,   201,
     202,     0,   203,  1424,   204,     0,     0,     0,   207,   208,
     209,     0,   211,     0,   212,     0,   213,   214,   215,     0,
     216,   217,   218,   219,   220,  1425,   222,     0,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,     0,
     234,     0,   236,   237,   238,   239,   240,   241,   242,     0,
     243,     0,   244,     0,     0,   247,     0,   249,   250,   251,
     252,   253,     0,     0,   254,     0,   256,     0,     0,   258,
     259,   260,     0,     0,   261,   262,   263,   264,   265,   498,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     287,   288,   289,   290,   291,     0,   292,   293,     0,   295,
       0,   296,   297,   298,   299,   300,   301,     0,   302,   303,
       0,     0,   304,   305,   306,     0,     0,   307,   308,     0,
     310,     0,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,     0,   323,   324,   325,   326,   327,   328,
     329,   330,   331,  1426,   332,   333,   334,   335,   336,   337,
       0,   338,   339,   340,   341,   342,   343,   344,   345,     0,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,     0,   359,   360,     0,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,     0,   377,   378,   379,   380,   381,     0,   382,
     383,   384,   385,   386,     0,   388,   389,   390,   391,     0,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   500,   404,   405,   406,     0,   407,   408,     0,   409,
       0,   411,   412,   413,   414,   415,     0,   416,   417,     0,
       0,   418,   419,   420,   421,   422,     0,   423,   424,   425,
     426,   427,   428,   429,   430,     0,  1427,   431,   432,   433,
     434,   435,     0,     0,   436,   437,   438,   439,   440,   441,
     442,     0,   443,     0,   445,   446,   447,   448,     0,     0,
     449,     0,     0,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   496,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      92,    93,    94,    95,    96,    97,    98,    99,     0,   100,
     101,   102,     0,     0,     0,     0,     0,     0,     0,   103,
     104,     0,   105,   106,   107,     0,   109,   110,   111,   112,
     113,     0,   115,   116,     0,   117,   118,   119,   120,   121,
     122,     0,     0,   123,   124,   125,   126,   127,  1421,   128,
     129,   130,   131,   132,     0,     0,     0,   134,   135,   136,
     137,   138,   139,     0,   141,   142,   143,  1423,   144,   145,
     146,   147,   148,   149,     0,     0,   151,   152,   153,     0,
       0,     0,     0,     0,     0,     0,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,     0,   165,     0,   166,
     167,   168,   169,   170,   171,     0,   172,   173,   174,   175,
     176,     0,     0,   177,   178,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,     0,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,     0,   198,     0,
     199,   200,   201,   202,     0,   203,  1424,   204,     0,     0,
       0,   207,   208,   209,     0,   211,     0,   212,     0,   213,
     214,   215,     0,   216,   217,   218,   219,   220,   221,   222,
       0,   224,   225,   226,   227,     0,   228,   229,   230,   231,
     232,   233,     0,   234,     0,   236,   237,   238,   239,   240,
     241,   242,     0,   243,     0,   244,     0,     0,   247,     0,
     249,   250,   251,   252,   253,     0,     0,   254,     0,   256,
    1880,     0,   258,   259,   260,     0,     0,   261,   262,   263,
     264,   265,   498,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,     0,   287,   288,   289,   290,   291,     0,   292,
     293,     0,   295,     0,   296,   297,   298,   299,   300,   301,
       0,   302,   303,     0,     0,   304,   305,   306,     0,     0,
     307,   308,     0,   310,     0,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,     0,   323,   324,   325,
     326,   327,   328,   329,   330,   331,  1426,   332,   333,   334,
     335,   336,   337,     0,   338,   339,   340,   341,   342,   343,
     344,   345,     0,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,     0,   359,   360,     0,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,     0,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,   386,     0,   388,   389,
     390,   391,     0,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   500,   404,   405,   406,     0,   407,
     408,     0,   409,     0,   411,   412,   413,   414,   415,     0,
     416,   417,     0,     0,   418,   419,   420,   421,   422,     0,
     423,   424,   425,   426,   427,   428,   429,   430,     0,  1427,
     431,   432,   433,   434,   435,     0,     0,   436,   437,   438,
     439,   440,   441,   442,     0,   443,     0,   445,   446,   447,
     448,     0,     0,   449,     0,     0,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   737,     0,   544,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    92,    93,    94,    95,    96,    97,    98,
      99,     0,   100,   101,   102,     0,     0,     0,     0,     0,
       0,     0,   103,   104,     0,   105,   106,   107,     0,   109,
     110,   111,   738,   739,     0,   740,   741,     0,   117,   118,
     119,   120,   121,   122,     0,     0,   123,   124,   742,   743,
     127,     0,   128,   129,   130,   131,   744,     0,     0,     0,
     134,   135,   136,   137,   138,   139,     0,   141,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,     0,   151,
     152,   153,     0,     0,     0,     0,     0,     0,     0,   155,
     156,   157,   158,   159,   160,   161,   745,   746,   164,     0,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,   174,   175,   176,     0,     0,   177,   178,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,   191,   747,   193,   194,   195,   196,   748,
    1227,   198,     0,   199,   200,   749,   202,     0,   203,     0,
     204,     0,     0,     0,   207,   208,   209,     0,   211,     0,
     212,     0,   750,   751,   215,     0,   216,   217,   218,   219,
     220,   221,   222,     0,   224,   225,   226,   227,     0,   228,
     229,   230,   231,   232,   233,     0,   234,     0,   752,   237,
     238,   239,   240,   753,   754,     0,   755,     0,   244,     0,
       0,   247,     0,   249,   250,   251,   252,   253,     0,     0,
     254,     0,   256,     0,     0,   258,   259,   260,     0,     0,
     261,   262,   263,   264,   265,   756,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   757,     0,   758,   288,   289,   290,
     759,     0,   292,   293,     0,   295,     0,   760,   297,   761,
     299,   300,   301,     0,   302,   303,  1228,     0,   304,   305,
     306,     0,     0,   307,   762,     0,   310,     0,   763,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,     0,
     323,   324,   764,   326,   327,   765,   329,   330,   331,     0,
     332,   333,   334,   335,   336,   337,     0,   338,   339,   340,
     766,   342,   343,   344,   345,     0,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,     0,
     359,   360,     0,   362,   363,   364,   767,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,     0,   377,
     378,   379,   380,   381,     0,   382,   768,   384,   385,   386,
       0,   388,   389,   769,   391,     0,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   770,   404,   771,
     406,     0,   407,   408,     0,   409,     0,   411,   412,   413,
     414,   415,     0,   772,   773,     0,     0,   418,   419,   774,
     421,   775,  1229,   423,   424,   776,   426,   427,   428,   429,
     430,     0,     0,   431,   432,   433,   434,   435,     0,     0,
     436,   437,   438,   439,   440,  1119,   778,     0,   443,     0,
     445,   446,   447,   448,     0,     0,   449,     0,     0,   450,
     451,   452,   453,   454,   455,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   467,   468,   469,   470,
     496,     0,   574,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    92,    93,    94,    95,
      96,    97,    98,    99,     0,   100,   101,   102,     3,     4,
       0,     0,     0,     0,     0,   103,   104,     0,   105,   106,
     107,     0,   109,   110,   111,   112,   113,     0,   115,   116,
       0,   117,   118,   119,   120,   121,   122,     0,     0,   123,
     124,   125,   126,   127,     0,   128,   129,   130,   131,   132,
       0,     0,     0,   134,   135,   136,   137,   138,   139,     0,
     141,   142,   143,     0,   144,   145,   146,   147,   148,   149,
       0,     0,   151,   152,   153,     0,     0,     0,     0,     0,
       0,     0,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,     0,   165,     0,   166,   167,   168,   169,   170,
     171,     0,   172,   173,   174,   175,   176,     0,     0,   177,
     178,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,     0,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,     0,   198,     0,   199,   200,   201,   202,
       0,   203,     0,   204,     0,     0,     0,   207,   208,   209,
       0,   211,     0,   212,     0,   213,   214,   215,     0,   216,
     217,   218,   219,   220,   221,   222,     0,   224,   225,   226,
     227,     0,   228,   229,   230,   231,   232,   233,     0,   234,
       0,   236,   237,   238,   239,   240,   241,   242,     0,   243,
       0,   244,     0,     0,   247,     0,   249,   250,   251,   252,
     253,     0,     0,   254,     0,   256,     0,     0,   258,   259,
     260,     0,     0,   261,   262,   263,   264,   265,   498,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,     0,   287,
     288,   289,   290,   291,     0,   292,   293,     0,   295,     0,
     296,   297,   298,   299,   300,   301,     0,   302,   303,     0,
       0,   304,   305,   306,     0,     0,   307,   308,     0,   310,
       0,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,     0,   323,   324,   325,   326,   327,   328,   329,
     330,   331,     0,   332,   333,   334,   335,   336,   337,     0,
     338,   339,   340,   341,   342,   343,   344,   345,     0,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,     0,   359,   360,     0,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,     0,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,   386,     0,   388,   389,   390,   391,     0,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     500,   404,   405,   406,     0,   407,   408,     0,   409,     0,
     411,   412,   413,   414,   415,     0,   416,   417,     0,     0,
     418,   419,   420,   421,   422,     0,   423,   424,   425,   426,
     427,   428,   429,   430,     0,     0,   431,   432,   433,   434,
     435,     0,     0,   436,   437,   438,   439,   440,   441,   442,
       0,   443,     0,   445,   446,   447,   448,     0,     0,   449,
       0,     0,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   496,     0,   574,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    92,
      93,    94,    95,    96,    97,    98,    99,     0,   100,   101,
     102,     0,     0,     0,     0,     0,     0,     0,   103,   104,
       0,   105,   106,   107,     0,   109,   110,   111,   112,   113,
       0,   115,   116,     0,   117,   118,   119,   120,   121,   122,
       0,     0,   123,   124,   125,   126,   127,     0,   128,   129,
     130,   131,   132,     0,     0,     0,   134,   135,   136,   137,
     138,   139,     0,   141,   142,   143,     0,   144,   145,   146,
     147,   148,   149,     0,     0,   151,   152,   153,     0,     0,
       0,     0,     0,     0,     0,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,     0,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,   174,   175,   176,
       0,     0,   177,   178,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,     0,   198,     0,   199,
     200,   201,   202,     0,   203,     0,   204,     0,     0,     0,
     207,   208,   209,     0,   211,     0,   212,     0,   213,   214,
     215,     0,   216,   217,   218,   219,   220,   221,   222,     0,
     224,   225,   226,   227,     0,   228,   229,   230,   231,   232,
     233,     0,   234,     0,   236,   237,   238,   239,   240,   241,
     242,     0,   243,     0,   244,     0,     0,   247,     0,   249,
     250,   251,   252,   253,     0,     0,   254,     0,   256,     0,
       0,   258,   259,   260,     0,     0,   261,   262,   263,   264,
     265,   498,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,     0,   287,   288,   289,   290,   291,     0,   292,   293,
       0,   295,     0,   296,   297,   298,   299,   300,   301,     0,
     302,   303,     0,   575,   304,   305,   306,     0,     0,   307,
     308,     0,   310,     0,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,     0,   323,   324,   325,   326,
     327,   328,   329,   330,   331,     0,   332,   333,   334,   335,
     336,   337,     0,   338,   339,   340,   341,   342,   343,   344,
     345,     0,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,     0,   359,   360,     0,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,     0,   377,   378,   379,   380,   381,
       0,   382,   383,   384,   385,   386,     0,   388,   389,   390,
     391,     0,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   500,   404,   405,   406,     0,   407,   408,
       0,   409,     0,   411,   412,   413,   414,   415,     0,   416,
     417,     0,     0,   418,   419,   420,   421,   422,     0,   423,
     424,   425,   426,   427,   428,   429,   430,     0,     0,   431,
     432,   433,   434,   435,     0,     0,   436,   437,   438,   439,
     440,   441,   442,     0,   443,     0,   445,   446,   447,   448,
       0,     0,   449,     0,     0,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   496,     0,   574,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    92,    93,    94,    95,    96,    97,    98,    99,
       0,   100,   101,   102,     0,     0,     0,     0,     0,     0,
       0,   103,   104,     0,   105,   106,   107,     0,   109,   110,
     111,   112,   113,     0,   115,   116,     0,   117,   118,   119,
     120,   121,   122,     0,     0,   123,   124,   125,   126,   127,
       0,   128,   129,   130,   131,   132,     0,     0,     0,   134,
     135,   136,   137,   138,   139,     0,   141,   142,   143,     0,
     144,   145,   146,   147,   148,   149,     0,     0,   151,   152,
     153,     0,     0,     0,     0,     0,     0,     0,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,     0,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
     174,   175,   176,     0,     0,   177,   178,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,     0,
     198,     0,   199,   200,   201,   202,     0,   203,     0,   204,
       0,     0,     0,   207,   208,   209,     0,   211,     0,   212,
       0,   213,   214,   215,     0,   216,   217,   218,   219,   220,
     618,   222,     0,   224,   225,   226,   227,     0,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   236,   237,   238,
     239,   240,   241,   242,     0,   243,     0,   244,     0,     0,
     247,     0,   249,   250,   251,   252,   253,     0,     0,   254,
       0,   256,     0,     0,   258,   259,   260,     0,     0,   261,
     262,   263,   264,   265,   498,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,     0,   287,   288,   289,   290,   291,
       0,   292,   293,     0,   295,     0,   296,   297,   298,   299,
     300,   301,     0,   302,   303,     0,   575,   304,   305,   306,
       0,     0,   307,   308,     0,   310,     0,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,     0,   323,
     324,   325,   326,   327,   328,   329,   330,   331,     0,   332,
     333,   334,   335,   336,   337,     0,   338,   339,   340,   341,
     342,   343,   344,   345,     0,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,     0,   359,
     360,     0,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,     0,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,   386,     0,
     388,   389,   390,   391,     0,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   500,   404,   405,   406,
       0,   407,   408,     0,   409,     0,   411,   412,   413,   414,
     415,     0,   416,   417,     0,     0,   418,   419,   420,   421,
     422,     0,   423,   424,   425,   426,   427,   428,   429,   430,
       0,     0,   431,   432,   433,   434,   435,     0,     0,   436,
     437,   438,   439,   440,   441,   442,     0,   443,     0,   445,
     446,   447,   448,     0,     0,   449,     0,     0,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   737,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    92,    93,    94,    95,    96,
      97,    98,    99,     0,   100,   101,   102,     3,     4,     0,
       0,     0,     0,     0,   103,   104,     0,   105,   106,   107,
       0,   109,   110,   111,   738,   739,     0,   740,   741,     0,
     117,   118,   119,   120,   121,   122,     0,     0,   123,   124,
     742,   743,   127,     0,   128,   129,   130,   131,   744,     0,
       0,     0,   134,   135,   136,   137,   138,   139,     0,   141,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
       0,   151,   152,   153,     0,     0,     0,     0,     0,     0,
       0,   155,   156,   157,   158,   159,   160,   161,   745,   746,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,   174,   175,   176,     0,     0,   177,   178,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,   191,   747,   193,   194,   195,
     196,   748,     0,   198,     0,   199,   200,   749,   202,     0,
     203,     0,   204,     0,     0,     0,   207,   208,   209,     0,
     211,     0,   212,     0,   750,   751,   215,     0,   216,   217,
     218,   219,   220,   221,   222,     0,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,     0,   234,     0,
     752,   237,   238,   239,   240,   753,   754,     0,   755,     0,
     244,     0,     0,   247,     0,   249,   250,   251,   252,   253,
       0,     0,   254,     0,   256,     0,     0,   258,   259,   260,
       0,     0,   261,   262,   263,   264,   265,   756,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   757,     0,   758,   288,
     289,   290,   759,     0,   292,   293,     0,   295,     0,   760,
     297,   761,   299,   300,   301,     0,   302,   303,     0,     0,
     304,   305,   306,     0,     0,   307,   762,     0,   310,     0,
     763,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,     0,   323,   324,   764,   326,   327,   765,   329,   330,
     331,     0,   332,   333,   334,   335,   336,   337,     0,   338,
     339,   340,   766,   342,   343,   344,   345,     0,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,     0,   359,   360,     0,   362,   363,   364,   767,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
       0,   377,   378,   379,   380,   381,     0,   382,   768,   384,
     385,   386,     0,   388,   389,   769,   391,     0,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   770,
     404,   771,   406,     0,   407,   408,     0,   409,     0,   411,
     412,   413,   414,   415,     0,   772,   773,     0,     0,   418,
     419,   774,   421,   775,     0,   423,   424,   776,   426,   427,
     428,   429,   430,     0,     0,   431,   432,   433,   434,   435,
       0,     0,   436,   437,   438,   439,   440,  1119,   778,     0,
     443,     0,   445,   446,   447,   448,     0,     0,   449,     0,
       0,   450,   451,   452,   453,   454,   455,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   467,   468,
     469,   470,   496,     0,   574,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   112,   113,     0,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   151,   152,   153,     0,     0,     0,
       0,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,     0,   198,     0,   199,   200,
     201,   202,     0,   203,     0,   204,     0,     0,     0,   207,
     208,   209,     0,  1719,     0,   212,     0,   213,   214,   215,
       0,   216,   217,   218,   219,   220,   221,   222,     0,   224,
     225,   226,   227,     0,   228,   229,   230,   231,   232,   233,
       0,   234,     0,   236,   237,   238,   239,   240,   241,   242,
       0,   243,     0,   244,     0,     0,   247,     0,   249,   250,
     251,   252,   253,     0,     0,   254,     0,   256,     0,     0,
     258,   259,  1720,     0,     0,   261,   262,   263,   264,   265,
     498,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
       0,   287,   288,   289,   290,   291,     0,   292,   293,     0,
     295,     0,   296,   297,   298,   299,   300,   301,     0,   302,
     303,     0,     0,   304,   305,   306,     0,     0,   307,   308,
       0,   310,     0,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,     0,   323,   324,   325,   326,   327,
     328,   329,   330,   331,     0,   332,   333,   334,   335,   336,
     337,     0,   338,   339,   340,   341,   342,   343,   344,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,     0,   359,   360,     0,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,     0,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,   386,     0,   388,   389,   390,   391,
       0,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   500,   404,   405,   406,     0,   407,   408,  1721,
     409,     0,   411,  1722,   413,  1723,   415,     0,   416,   417,
       0,     0,   418,   419,   420,   421,   422,     0,   423,   424,
     425,   426,   427,   428,   429,   430,     0,     0,   431,   432,
    1724,   434,   435,     0,     0,   436,   437,   438,   439,   440,
     441,   442,     0,   443,     0,   445,   446,   447,   448,     0,
       0,   449,     0,     0,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   496,  2650,     0,     0,     0,
       0,  2651,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     100,   101,   102,     0,     0,     0,     0,     0,     0,     0,
     103,   104,     0,   105,   106,   107,     0,   109,   110,   111,
     112,   113,     0,   115,   116,     0,   117,   118,   119,   120,
     121,   122,     0,     0,   123,   124,   125,   126,   127,     0,
     128,   129,   130,   131,   132,     0,     0,     0,   134,   135,
     136,   137,   138,   139,     0,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,     0,   151,   152,   153,
       0,     0,     0,     0,     0,     0,     0,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,     0,   198,
       0,   199,   200,   201,   202,     0,   203,     0,   204,     0,
       0,     0,   207,   208,   209,     0,   211,     0,   212,     0,
     213,   214,   215,     0,   216,   217,   218,   219,   220,   221,
     222,     0,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,     0,   234,     0,   236,   237,   238,   239,
     240,   241,   242,     0,   243,     0,   244,     0,     0,   247,
       0,   249,   250,   251,   252,   253,     0,     0,   254,     0,
     256,     0,     0,   258,   259,   260,     0,     0,   261,   262,
     263,   264,   265,   498,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,     0,   287,   288,   289,   290,   291,     0,
     292,   293,     0,   295,     0,   296,   297,   298,   299,   300,
     301,     0,   302,   303,     0,     0,   304,   305,   306,     0,
       0,   307,   308,     0,   310,     0,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,     0,   323,   324,
     325,   326,   327,   328,   329,   330,   331,     0,   332,   333,
     334,   335,   336,   337,     0,   338,   339,   340,   341,   342,
     343,   344,   345,     0,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,     0,   359,   360,
       0,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,     0,   377,   378,   379,
     380,   381,     0,   382,   383,   384,   385,   386,     0,   388,
     389,   390,   391,     0,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   500,   404,   405,   406,     0,
     407,   408,     0,   409,     0,   411,   412,   413,   414,   415,
       0,   416,   417,     0,     0,   418,   419,   420,   421,   422,
       0,   423,   424,   425,   426,   427,   428,   429,   430,     0,
       0,   431,   432,   433,   434,   435,     0,     0,   436,   437,
     438,   439,   440,   441,   442,     0,   443,     0,   445,   446,
     447,   448,     0,     0,   449,     0,     0,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   496,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    92,    93,    94,    95,    96,    97,
      98,    99,   497,   100,   101,   102,     0,     0,     0,     0,
       0,     0,     0,   103,   104,     0,   105,   106,   107,     0,
     109,   110,   111,   112,   113,     0,   115,   116,     0,   117,
     118,   119,   120,   121,   122,     0,     0,   123,   124,   125,
     126,   127,     0,   128,   129,   130,   131,   132,     0,     0,
       0,   134,   135,   136,   137,   138,   139,     0,   141,   142,
     143,     0,   144,   145,   146,   147,   148,   149,     0,     0,
     151,   152,   153,     0,     0,     0,     0,     0,     0,     0,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
       0,   165,     0,   166,   167,   168,   169,   170,   171,     0,
     172,   173,   174,   175,   176,     0,     0,   177,   178,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
       0,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,     0,   198,     0,   199,   200,   201,   202,     0,   203,
       0,   204,     0,     0,     0,   207,   208,   209,     0,   211,
       0,   212,     0,   213,   214,   215,     0,   216,   217,   218,
     219,   220,   221,   222,     0,   224,   225,   226,   227,     0,
     228,   229,   230,   231,   232,   233,     0,   234,     0,   236,
     237,   238,   239,   240,   241,   242,     0,   243,     0,   244,
       0,     0,   247,     0,   249,   250,   251,   252,   253,     0,
       0,   254,     0,   256,     0,     0,   258,   259,   260,     0,
       0,   261,   262,   263,   264,   265,   498,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,     0,   287,   288,   289,
     290,   291,     0,   292,   293,     0,   295,     0,   296,   297,
     298,   299,   300,   301,     0,   302,   303,     0,     0,   304,
     305,   306,     0,     0,   307,   308,     0,   310,     0,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
       0,   323,   324,   325,   326,   327,   328,   499,   330,   331,
       0,   332,   333,   334,   335,   336,   337,     0,   338,   339,
     340,   341,   342,   343,   344,   345,     0,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
       0,   359,   360,     0,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,     0,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
     386,     0,   388,   389,   390,   391,     0,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   500,   404,
     405,   406,     0,   407,   408,     0,   409,     0,   411,   412,
     413,   414,   415,     0,   416,   417,     0,     0,   418,   419,
     420,   421,   422,     0,   423,   424,   425,   426,   427,   428,
     429,   430,     0,     0,   431,   432,   433,   434,   435,     0,
       0,   436,   437,   438,   439,   440,   441,   442,     0,   443,
       0,   445,   446,   447,   448,     0,     0,   449,     0,     0,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   496,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    92,    93,    94,
      95,    96,    97,    98,    99,   549,   100,   101,   102,     0,
       0,     0,     0,     0,     0,     0,   103,   104,     0,   105,
     106,   107,     0,   109,   110,   111,   112,   113,     0,   115,
     116,     0,   117,   118,   119,   120,   121,   122,     0,     0,
     123,   124,   125,   126,   127,     0,   128,   129,   130,   131,
     132,     0,     0,     0,   134,   135,   136,   137,   138,   139,
       0,   141,   142,   143,     0,   144,   145,   146,   147,   148,
     149,     0,     0,   151,   152,   153,     0,     0,     0,     0,
       0,     0,     0,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,   174,   175,   176,     0,     0,
     177,   178,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,     0,   198,     0,   199,   200,   201,
     202,     0,   203,     0,   204,     0,     0,     0,   207,   208,
     209,     0,   211,     0,   212,     0,   213,   214,   215,     0,
     216,   217,   218,   219,   220,   221,   222,     0,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,     0,
     234,     0,   236,   237,   238,   239,   240,   241,   242,     0,
     243,     0,   244,     0,     0,   247,     0,   249,   250,   251,
     252,   253,     0,     0,   254,     0,   256,     0,     0,   258,
     259,   260,     0,     0,   261,   262,   263,   264,   265,   498,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     287,   288,   289,   290,   291,     0,   292,   293,     0,   295,
       0,   296,   297,   298,   299,   300,   301,     0,   302,   303,
       0,     0,   304,   305,   306,     0,     0,   307,   308,     0,
     310,     0,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,     0,   323,   324,   325,   326,   327,   328,
     329,   330,   331,     0,   332,   333,   334,   335,   336,   337,
       0,   338,   339,   340,   341,   342,   343,   344,   345,     0,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,     0,   359,   360,     0,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,     0,   377,   378,   379,   380,   381,     0,   382,
     383,   384,   385,   386,     0,   388,   389,   390,   391,     0,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   500,   404,   405,   406,     0,   407,   408,     0,   409,
       0,   411,   412,   413,   414,   415,     0,   550,   417,     0,
       0,   551,   419,   420,   421,   422,     0,   423,   424,   425,
     426,   427,   428,   429,   430,     0,     0,   431,   432,   433,
     434,   435,     0,     0,   436,   437,   438,   439,   440,   441,
     442,     0,   443,     0,   445,   446,   447,   448,     0,     0,
     449,     0,     0,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   496,     0,   574,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      92,    93,    94,    95,    96,    97,    98,    99,     0,   100,
     101,   102,     0,     0,     0,     0,     0,     0,     0,   103,
     104,     0,   105,   106,   107,     0,   109,   110,   111,   112,
     113,     0,   115,   116,     0,   117,   118,   119,   120,   121,
     122,     0,     0,   123,   124,   125,   126,   127,     0,   128,
     129,   130,   131,   132,     0,     0,     0,   134,   135,   136,
     137,   138,   139,     0,   141,   142,   143,     0,   144,   145,
     146,   147,   148,   149,     0,     0,   151,   152,   153,     0,
       0,     0,     0,     0,     0,     0,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,     0,   165,     0,   166,
     167,   168,   169,   170,   171,     0,   172,   173,   174,   175,
     176,     0,     0,   177,   178,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,     0,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,     0,   198,     0,
     199,   200,   201,   202,     0,   203,     0,   204,     0,     0,
       0,   207,   208,   209,     0,   211,     0,   212,     0,   213,
     214,   215,     0,   216,   217,   218,   219,   220,   613,   222,
       0,   224,   225,   226,   227,     0,   228,   229,   230,   231,
     232,   233,     0,   234,     0,   236,   237,   238,   239,   240,
     241,   242,     0,   243,     0,   244,     0,     0,   247,     0,
     249,   250,   251,   252,   253,     0,     0,   254,     0,   256,
       0,     0,   258,   259,   260,     0,     0,   261,   262,   263,
     264,   265,   498,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,     0,   287,   288,   289,   290,   291,     0,   292,
     293,     0,   295,     0,   296,   297,   298,   299,   300,   301,
       0,   302,   303,     0,     0,   304,   305,   306,     0,     0,
     307,   308,     0,   310,     0,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,     0,   323,   324,   325,
     326,   327,   328,   329,   330,   331,     0,   332,   333,   334,
     335,   336,   337,     0,   338,   339,   340,   341,   342,   343,
     344,   345,     0,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,     0,   359,   360,     0,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,     0,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,   386,     0,   388,   389,
     390,   391,     0,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   500,   404,   405,   406,     0,   407,
     408,     0,   409,     0,   411,   412,   413,   414,   415,     0,
     416,   417,     0,     0,   418,   419,   420,   421,   422,     0,
     423,   424,   425,   426,   427,   428,   429,   430,     0,     0,
     431,   432,   433,   434,   435,     0,     0,   436,   437,   438,
     439,   440,   441,   442,     0,   443,     0,   445,   446,   447,
     448,     0,     0,   449,     0,     0,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   496,     0,   574,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    92,    93,    94,    95,    96,    97,    98,
      99,     0,   100,   101,   102,     0,     0,     0,     0,     0,
       0,     0,   103,   104,     0,   105,   106,   107,     0,   109,
     110,   111,   112,   113,     0,   115,   116,     0,   117,   118,
     119,   120,   121,   122,     0,     0,   123,   124,   125,   126,
     127,     0,   128,   129,   130,   131,   132,     0,     0,     0,
     134,   135,   136,   137,   138,   139,     0,   141,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,     0,   151,
     152,   153,     0,     0,     0,     0,     0,     0,     0,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,     0,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,   174,   175,   176,     0,     0,   177,   178,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
       0,   198,     0,   199,   200,   201,   202,     0,   203,     0,
     204,     0,     0,     0,   207,   208,   209,     0,   211,     0,
     212,     0,   213,   214,   215,     0,   216,   217,   218,   219,
     220,   616,   222,     0,   224,   225,   226,   227,     0,   228,
     229,   230,   231,   232,   233,     0,   234,     0,   236,   237,
     238,   239,   240,   241,   242,     0,   243,     0,   244,     0,
       0,   247,     0,   249,   250,   251,   252,   253,     0,     0,
     254,     0,   256,     0,     0,   258,   259,   260,     0,     0,
     261,   262,   263,   264,   265,   498,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   287,   288,   289,   290,
     291,     0,   292,   293,     0,   295,     0,   296,   297,   298,
     299,   300,   301,     0,   302,   303,     0,     0,   304,   305,
     306,     0,     0,   307,   308,     0,   310,     0,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,     0,
     323,   324,   325,   326,   327,   328,   329,   330,   331,     0,
     332,   333,   334,   335,   336,   337,     0,   338,   339,   340,
     341,   342,   343,   344,   345,     0,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,     0,
     359,   360,     0,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,     0,   377,
     378,   379,   380,   381,     0,   382,   383,   384,   385,   386,
       0,   388,   389,   390,   391,     0,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   500,   404,   405,
     406,     0,   407,   408,     0,   409,     0,   411,   412,   413,
     414,   415,     0,   416,   417,     0,     0,   418,   419,   420,
     421,   422,     0,   423,   424,   425,   426,   427,   428,   429,
     430,     0,     0,   431,   432,   433,   434,   435,     0,     0,
     436,   437,   438,   439,   440,   441,   442,     0,   443,     0,
     445,   446,   447,   448,     0,     0,   449,     0,     0,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     496,     0,   574,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    92,    93,    94,    95,
      96,    97,    98,    99,     0,   100,   101,   102,     0,     0,
       0,     0,     0,     0,     0,   103,   104,     0,   105,   106,
     107,     0,   109,   110,   111,   112,   113,     0,   115,   116,
       0,   117,   118,   119,   120,   121,   122,     0,     0,   123,
     124,   125,   126,   127,     0,   128,   129,   130,   131,   132,
       0,     0,     0,   134,   135,   136,   137,   138,   139,     0,
     141,   142,   143,     0,   144,   145,   146,   147,   148,   149,
       0,     0,   151,   152,   153,     0,     0,     0,     0,     0,
       0,     0,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,     0,   165,     0,   166,   167,   168,   169,   170,
     171,     0,   172,   173,   174,   175,   176,     0,     0,   177,
     178,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,     0,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,     0,   198,     0,   199,   200,   201,   202,
       0,   203,     0,   204,     0,     0,     0,   207,   208,   209,
       0,   211,     0,   212,     0,   213,   214,   215,     0,   216,
     217,   218,   219,   220,   620,   222,     0,   224,   225,   226,
     227,     0,   228,   229,   230,   231,   232,   233,     0,   234,
       0,   236,   237,   238,   239,   240,   241,   242,     0,   243,
       0,   244,     0,     0,   247,     0,   249,   250,   251,   252,
     253,     0,     0,   254,     0,   256,     0,     0,   258,   259,
     260,     0,     0,   261,   262,   263,   264,   265,   498,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,     0,   287,
     288,   289,   290,   291,     0,   292,   293,     0,   295,     0,
     296,   297,   298,   299,   300,   301,     0,   302,   303,     0,
       0,   304,   305,   306,     0,     0,   307,   308,     0,   310,
       0,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,     0,   323,   324,   325,   326,   327,   328,   329,
     330,   331,     0,   332,   333,   334,   335,   336,   337,     0,
     338,   339,   340,   341,   342,   343,   344,   345,     0,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,     0,   359,   360,     0,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,     0,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,   386,     0,   388,   389,   390,   391,     0,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     500,   404,   405,   406,     0,   407,   408,     0,   409,     0,
     411,   412,   413,   414,   415,     0,   416,   417,     0,     0,
     418,   419,   420,   421,   422,     0,   423,   424,   425,   426,
     427,   428,   429,   430,     0,     0,   431,   432,   433,   434,
     435,     0,     0,   436,   437,   438,   439,   440,   441,   442,
       0,   443,     0,   445,   446,   447,   448,     0,     0,   449,
       0,     0,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   496,     0,   574,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    92,
      93,    94,    95,    96,    97,    98,    99,     0,   100,   101,
     102,     0,     0,     0,     0,     0,     0,     0,   103,   104,
       0,   105,   106,   107,     0,   109,   110,   111,   112,   113,
       0,   115,   116,     0,   117,   118,   119,   120,   121,   122,
       0,     0,   123,   124,   125,   126,   127,     0,   128,   129,
     130,   131,   132,     0,     0,     0,   134,   135,   136,   137,
     138,   139,     0,   141,   142,   143,     0,   144,   145,   146,
     147,   148,   149,     0,     0,   151,   152,   153,     0,     0,
       0,     0,     0,     0,     0,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,     0,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,   174,   175,   176,
       0,     0,   177,   178,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,     0,   198,     0,   199,
     200,   201,   202,     0,   203,     0,   204,     0,     0,     0,
     207,   208,   209,     0,   211,     0,   212,     0,   213,   214,
     215,     0,   216,   217,   218,   219,   220,   221,   222,     0,
     224,   225,   226,   227,     0,   228,   229,   230,   231,   232,
     233,     0,   234,     0,   236,   237,   238,   239,   240,   241,
     242,     0,   243,     0,   244,     0,     0,   247,     0,   249,
     250,   251,   252,   253,     0,     0,   254,     0,   256,     0,
       0,   258,   259,   260,     0,     0,   261,   262,   263,   264,
     265,   498,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,     0,   287,   288,   289,   290,   291,     0,   292,   293,
       0,   295,     0,   296,   297,   298,   299,   300,   301,     0,
     302,   303,     0,     0,   304,   305,   306,     0,     0,   307,
     308,     0,   310,     0,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,     0,   323,   324,   325,   326,
     327,   328,   329,   330,   331,     0,   332,   333,   334,   335,
     336,   337,     0,   338,   339,   340,   341,   342,   343,   344,
     345,     0,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,     0,   359,   360,     0,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,     0,   377,   378,   379,   380,   381,
       0,   382,   383,   384,   385,   386,     0,   388,   389,   390,
     391,     0,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   500,   404,   405,   406,     0,   407,   408,
       0,   409,     0,   411,   412,   413,   414,   415,     0,   416,
     417,     0,     0,   418,   419,   420,   421,   422,     0,   423,
     424,   425,   426,   427,   428,   429,   430,     0,     0,   431,
     432,   433,   434,   435,     0,     0,   436,   437,   438,   439,
     440,   441,   442,     0,   443,     0,   445,   446,   447,   448,
       0,     0,   449,     0,     0,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   496,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    92,    93,    94,    95,    96,    97,    98,    99,
     648,   100,   101,   102,     0,     0,     0,     0,     0,     0,
       0,   103,   104,     0,   105,   106,   107,     0,   109,   110,
     111,   112,   113,     0,   115,   116,     0,   117,   118,   119,
     120,   121,   122,     0,     0,   123,   124,   125,   126,   127,
       0,   128,   129,   130,   131,   132,     0,     0,     0,   134,
     135,   136,   137,   138,   139,     0,   141,   142,   143,     0,
     144,   145,   146,   147,   148,   149,     0,     0,   151,   152,
     153,     0,     0,     0,     0,     0,     0,     0,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,     0,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
     174,   175,   176,     0,     0,   177,   178,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,     0,
     198,     0,   199,   200,   201,   202,     0,   203,     0,   204,
       0,     0,     0,   207,   208,   209,     0,   211,     0,   212,
       0,   213,   214,   215,     0,   216,   217,   218,   219,   220,
     221,   222,     0,   224,   225,   226,   227,     0,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   236,   237,   238,
     239,   240,   241,   242,     0,   243,     0,   244,     0,     0,
     247,     0,   249,   250,   251,   252,   253,     0,     0,   254,
       0,   256,     0,     0,   258,   259,   260,     0,     0,   261,
     262,   263,   264,   265,   498,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,     0,   287,   288,   289,   290,   291,
       0,   292,   293,     0,   295,     0,   296,   297,   298,   299,
     300,   301,     0,   302,   303,     0,     0,   304,   305,   306,
       0,     0,   307,   308,     0,   310,     0,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,     0,   323,
     324,   325,   326,   327,   328,   329,   330,   331,     0,   332,
     333,   334,   335,   336,   337,     0,   338,   339,   340,   341,
     342,   343,   344,   345,     0,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,     0,   359,
     360,     0,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,     0,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,   386,     0,
     388,   389,   390,   391,     0,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   500,   404,   405,   406,
       0,   407,   408,     0,   409,     0,   411,   412,   413,   414,
     415,     0,   416,   417,     0,     0,   418,   419,   420,   421,
     422,     0,   423,   424,   425,   426,   427,   428,   429,   430,
       0,     0,   431,   432,   433,   434,   435,     0,     0,   436,
     437,   438,   439,   440,   441,   442,     0,   443,     0,   445,
     446,   447,   448,     0,     0,   449,     0,     0,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   496,
       0,   574,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    92,    93,    94,    95,    96,
      97,    98,    99,     0,   100,   101,   102,     0,     0,     0,
       0,     0,     0,     0,   103,   104,     0,   105,   106,   107,
       0,   109,   110,   111,   112,   113,     0,   115,   116,     0,
     117,   118,   119,   120,   121,   122,     0,     0,   123,   124,
     125,   126,   127,     0,   128,   129,   130,   131,   132,     0,
       0,     0,   134,   135,   136,   137,   138,   139,     0,   141,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
       0,   151,   152,   153,     0,     0,     0,     0,     0,     0,
       0,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,   174,   175,   176,     0,     0,   177,   178,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,     0,   198,     0,   199,   200,   201,   202,     0,
     203,     0,   204,     0,     0,     0,   207,   208,   209,     0,
     211,     0,   212,     0,   213,   214,   215,     0,   216,   217,
     218,   219,   220,  1141,   222,     0,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,     0,   234,     0,
     236,   237,   238,   239,   240,   241,   242,     0,   243,     0,
     244,     0,     0,   247,     0,   249,   250,   251,   252,   253,
       0,     0,   254,     0,   256,     0,     0,   258,   259,   260,
       0,     0,   261,   262,   263,   264,   265,   498,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   287,   288,
     289,   290,   291,     0,   292,   293,     0,   295,     0,   296,
     297,   298,   299,   300,   301,     0,   302,   303,     0,     0,
     304,   305,   306,     0,     0,   307,   308,     0,   310,     0,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,     0,   323,   324,   325,   326,   327,   328,   329,   330,
     331,     0,   332,   333,   334,   335,   336,   337,     0,   338,
     339,   340,   341,   342,   343,   344,   345,     0,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,     0,   359,   360,     0,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
       0,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   388,   389,   390,   391,     0,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   500,
     404,   405,   406,     0,   407,   408,     0,   409,     0,   411,
     412,   413,   414,   415,     0,   416,   417,     0,     0,   418,
     419,   420,   421,   422,     0,   423,   424,   425,   426,   427,
     428,   429,   430,     0,     0,   431,   432,   433,   434,   435,
       0,     0,   436,   437,   438,   439,   440,   441,   442,     0,
     443,     0,   445,   446,   447,   448,     0,     0,   449,     0,
       0,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   496,     0,   574,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   112,   113,     0,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   151,   152,   153,     0,     0,     0,
       0,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,     0,   198,     0,   199,   200,
     201,   202,     0,   203,     0,   204,     0,     0,     0,   207,
     208,   209,     0,   211,     0,   212,     0,   213,   214,   215,
       0,   216,   217,   218,   219,   220,  1143,   222,     0,   224,
     225,   226,   227,     0,   228,   229,   230,   231,   232,   233,
       0,   234,     0,   236,   237,   238,   239,   240,   241,   242,
       0,   243,     0,   244,     0,     0,   247,     0,   249,   250,
     251,   252,   253,     0,     0,   254,     0,   256,     0,     0,
     258,   259,   260,     0,     0,   261,   262,   263,   264,   265,
     498,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
       0,   287,   288,   289,   290,   291,     0,   292,   293,     0,
     295,     0,   296,   297,   298,   299,   300,   301,     0,   302,
     303,     0,     0,   304,   305,   306,     0,     0,   307,   308,
       0,   310,     0,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,     0,   323,   324,   325,   326,   327,
     328,   329,   330,   331,     0,   332,   333,   334,   335,   336,
     337,     0,   338,   339,   340,   341,   342,   343,   344,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,     0,   359,   360,     0,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,     0,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,   386,     0,   388,   389,   390,   391,
       0,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   500,   404,   405,   406,     0,   407,   408,     0,
     409,     0,   411,   412,   413,   414,   415,     0,   416,   417,
       0,     0,   418,   419,   420,   421,   422,     0,   423,   424,
     425,   426,   427,   428,   429,   430,     0,     0,   431,   432,
     433,   434,   435,     0,     0,   436,   437,   438,   439,   440,
     441,   442,     0,   443,     0,   445,   446,   447,   448,     0,
       0,   449,     0,     0,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   496,     0,   574,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     100,   101,   102,     0,     0,     0,     0,     0,     0,     0,
     103,   104,     0,   105,   106,   107,     0,   109,   110,   111,
     112,   113,     0,   115,   116,     0,   117,   118,   119,   120,
     121,   122,     0,     0,   123,   124,   125,   126,   127,     0,
     128,   129,   130,   131,   132,     0,     0,     0,   134,   135,
     136,   137,   138,   139,     0,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,     0,   151,   152,   153,
       0,     0,     0,     0,     0,     0,     0,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,     0,   198,
       0,   199,   200,   201,   202,     0,   203,     0,   204,     0,
       0,     0,   207,   208,   209,     0,   211,     0,   212,     0,
     213,   214,   215,     0,   216,   217,   218,   219,   220,  1551,
     222,     0,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,     0,   234,     0,   236,   237,   238,   239,
     240,   241,   242,     0,   243,     0,   244,     0,     0,   247,
       0,   249,   250,   251,   252,   253,     0,     0,   254,     0,
     256,     0,     0,   258,   259,   260,     0,     0,   261,   262,
     263,   264,   265,   498,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,     0,   287,   288,   289,   290,   291,     0,
     292,   293,     0,   295,     0,   296,   297,   298,   299,   300,
     301,     0,   302,   303,     0,     0,   304,   305,   306,     0,
       0,   307,   308,     0,   310,     0,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,     0,   323,   324,
     325,   326,   327,   328,   329,   330,   331,     0,   332,   333,
     334,   335,   336,   337,     0,   338,   339,   340,   341,   342,
     343,   344,   345,     0,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,     0,   359,   360,
       0,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,     0,   377,   378,   379,
     380,   381,     0,   382,   383,   384,   385,   386,     0,   388,
     389,   390,   391,     0,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   500,   404,   405,   406,     0,
     407,   408,     0,   409,     0,   411,   412,   413,   414,   415,
       0,   416,   417,     0,     0,   418,   419,   420,   421,   422,
       0,   423,   424,   425,   426,   427,   428,   429,   430,     0,
       0,   431,   432,   433,   434,   435,     0,     0,   436,   437,
     438,   439,   440,   441,   442,     0,   443,     0,   445,   446,
     447,   448,     0,     0,   449,     0,     0,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   496,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    92,    93,    94,    95,    96,    97,
      98,    99,     0,   100,   101,   102,     0,     0,     0,     0,
       0,  2299,     0,   103,   104,     0,   105,   106,   107,     0,
     109,   110,   111,   112,   113,     0,   115,   116,     0,   117,
     118,   119,   120,   121,   122,     0,     0,   123,   124,   125,
     126,   127,     0,   128,   129,   130,   131,   132,     0,     0,
       0,   134,   135,   136,   137,   138,   139,     0,   141,   142,
     143,     0,   144,   145,   146,   147,   148,   149,     0,     0,
     151,   152,   153,     0,     0,     0,     0,     0,     0,     0,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
       0,   165,     0,   166,   167,   168,   169,   170,   171,     0,
     172,   173,   174,   175,   176,     0,     0,   177,   178,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
       0,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,     0,   198,     0,   199,   200,   201,   202,     0,   203,
       0,   204,     0,     0,     0,   207,   208,   209,     0,   211,
       0,   212,     0,   213,   214,   215,     0,   216,   217,   218,
     219,   220,   221,   222,     0,   224,   225,   226,   227,     0,
     228,   229,   230,   231,   232,   233,     0,   234,     0,   236,
     237,   238,   239,   240,   241,   242,     0,   243,     0,   244,
       0,     0,   247,     0,   249,   250,   251,   252,   253,     0,
       0,   254,     0,   256,     0,     0,   258,   259,   260,     0,
       0,   261,   262,   263,   264,   265,   498,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,     0,   287,   288,   289,
     290,   291,     0,   292,   293,     0,   295,     0,   296,   297,
     298,   299,   300,   301,     0,   302,   303,     0,     0,   304,
     305,   306,     0,     0,   307,   308,     0,   310,     0,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
       0,   323,   324,   325,   326,   327,   328,   329,   330,   331,
       0,   332,   333,   334,   335,   336,   337,     0,   338,   339,
     340,   341,   342,   343,   344,   345,     0,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
       0,   359,   360,     0,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,     0,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
     386,     0,   388,   389,   390,   391,     0,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   500,   404,
     405,   406,     0,   407,   408,     0,   409,     0,   411,   412,
     413,   414,   415,     0,   416,   417,     0,     0,   418,   419,
     420,   421,   422,     0,   423,   424,   425,   426,   427,   428,
     429,   430,     0,     0,   431,   432,   433,   434,   435,     0,
       0,   436,   437,   438,   439,   440,   441,   442,     0,   443,
       0,   445,   446,   447,   448,     0,     0,   449,     0,     0,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   496,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    92,    93,    94,
      95,    96,    97,    98,    99,     0,   100,   101,   102,     0,
       0,     0,     0,     0,  2313,     0,   103,   104,     0,   105,
     106,   107,     0,   109,   110,   111,   112,   113,     0,   115,
     116,     0,   117,   118,   119,   120,   121,   122,     0,     0,
     123,   124,   125,   126,   127,     0,   128,   129,   130,   131,
     132,     0,     0,     0,   134,   135,   136,   137,   138,   139,
       0,   141,   142,   143,     0,   144,   145,   146,   147,   148,
     149,     0,     0,   151,   152,   153,     0,     0,     0,     0,
       0,     0,     0,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,   174,   175,   176,     0,     0,
     177,   178,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,     0,   198,     0,   199,   200,   201,
     202,     0,   203,     0,   204,     0,     0,     0,   207,   208,
     209,     0,   211,     0,   212,     0,   213,   214,   215,     0,
     216,   217,   218,   219,   220,   221,   222,     0,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,     0,
     234,     0,   236,   237,   238,   239,   240,   241,   242,     0,
     243,     0,   244,     0,     0,   247,     0,   249,   250,   251,
     252,   253,     0,     0,   254,     0,   256,     0,     0,   258,
     259,   260,     0,     0,   261,   262,   263,   264,   265,   498,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     287,   288,   289,   290,   291,     0,   292,   293,     0,   295,
       0,   296,   297,   298,   299,   300,   301,     0,   302,   303,
       0,     0,   304,   305,   306,     0,     0,   307,   308,     0,
     310,     0,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,     0,   323,   324,   325,   326,   327,   328,
     329,   330,   331,     0,   332,   333,   334,   335,   336,   337,
       0,   338,   339,   340,   341,   342,   343,   344,   345,     0,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,     0,   359,   360,     0,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,     0,   377,   378,   379,   380,   381,     0,   382,
     383,   384,   385,   386,     0,   388,   389,   390,   391,     0,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   500,   404,   405,   406,     0,   407,   408,     0,   409,
       0,   411,   412,   413,   414,   415,     0,   416,   417,     0,
       0,   418,   419,   420,   421,   422,     0,   423,   424,   425,
     426,   427,   428,   429,   430,     0,     0,   431,   432,   433,
     434,   435,     0,     0,   436,   437,   438,   439,   440,   441,
     442,     0,   443,     0,   445,   446,   447,   448,     0,     0,
     449,     0,     0,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   496,     0,   574,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      92,    93,    94,    95,    96,    97,    98,    99,     0,   100,
     101,   102,     0,     0,     0,     0,     0,     0,     0,   103,
     104,     0,   105,   106,   107,     0,   109,   110,   111,   112,
     113,     0,   115,   116,     0,   117,   118,   119,   120,   121,
     122,     0,     0,   123,   124,   125,   126,   127,     0,   128,
     129,   130,   131,   132,     0,     0,     0,   134,   135,   136,
     137,   138,   139,     0,   141,   142,   143,     0,   144,   145,
     146,   147,   148,   149,     0,     0,   151,   152,   153,     0,
       0,     0,     0,     0,     0,     0,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,     0,   165,     0,   166,
     167,   168,   169,   170,   171,     0,   172,   173,   174,   175,
     176,     0,     0,   177,   178,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,     0,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,     0,   198,     0,
     199,   200,   201,   202,     0,   203,     0,   204,     0,     0,
       0,   207,   208,   209,     0,   211,     0,   212,     0,   213,
     214,   215,     0,   216,   217,   218,   219,   220,  2447,   222,
       0,   224,   225,   226,   227,     0,   228,   229,   230,   231,
     232,   233,     0,   234,     0,   236,   237,   238,   239,   240,
     241,   242,     0,   243,     0,   244,     0,     0,   247,     0,
     249,   250,   251,   252,   253,     0,     0,   254,     0,   256,
       0,     0,   258,   259,   260,     0,     0,   261,   262,   263,
     264,   265,   498,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,     0,   287,   288,   289,   290,   291,     0,   292,
     293,     0,   295,     0,   296,   297,   298,   299,   300,   301,
       0,   302,   303,     0,     0,   304,   305,   306,     0,     0,
     307,   308,     0,   310,     0,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,     0,   323,   324,   325,
     326,   327,   328,   329,   330,   331,     0,   332,   333,   334,
     335,   336,   337,     0,   338,   339,   340,   341,   342,   343,
     344,   345,     0,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,     0,   359,   360,     0,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,     0,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,   386,     0,   388,   389,
     390,   391,     0,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   500,   404,   405,   406,     0,   407,
     408,     0,   409,     0,   411,   412,   413,   414,   415,     0,
     416,   417,     0,     0,   418,   419,   420,   421,   422,     0,
     423,   424,   425,   426,   427,   428,   429,   430,     0,     0,
     431,   432,   433,   434,   435,     0,     0,   436,   437,   438,
     439,   440,   441,   442,     0,   443,     0,   445,   446,   447,
     448,     0,     0,   449,     0,     0,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   496,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    92,    93,    94,    95,    96,    97,    98,
      99,     0,   100,   101,   102,     0,     0,     0,     0,     0,
       0,     0,   103,   104,     0,   105,   106,   107,     0,   109,
     110,   111,   112,   113,     0,   115,   116,     0,   117,   118,
     119,   120,   121,   122,     0,     0,   123,   124,   125,   126,
     127,     0,   128,   129,   130,   131,   132,     0,     0,     0,
     134,   135,   136,   137,   138,   139,     0,   141,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,     0,   151,
     152,   153,     0,     0,     0,     0,     0,     0,     0,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,     0,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,   174,   175,   176,     0,     0,   177,   178,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
       0,   198,     0,   199,   200,   201,   202,     0,   203,     0,
     204,     0,     0,     0,   207,   208,   209,     0,   211,     0,
     212,     0,   213,   214,   215,     0,   216,   217,   218,   219,
     220,   221,   222,     0,   224,   225,   226,   227,     0,   228,
     229,   230,   231,   232,   233,     0,   234,     0,   236,   237,
     238,   239,   240,   241,   242,     0,   243,     0,   244,     0,
       0,   247,     0,   249,   250,   251,   252,   253,     0,     0,
     254,     0,   256,     0,     0,   258,   259,   260,     0,     0,
     261,   262,   263,   264,   265,   498,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   287,   288,   289,   290,
     291,     0,   292,   293,     0,   295,     0,   296,   297,   298,
     299,   300,   301,     0,   302,   303,     0,     0,   304,   305,
     306,     0,     0,   307,   308,     0,   310,     0,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,     0,
     323,   324,   325,   326,   327,   328,   329,   330,   331,     0,
     332,   333,   334,   335,   336,   337,     0,   338,   339,   340,
     341,   342,   343,   344,   345,     0,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,     0,
     359,   360,     0,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,     0,   377,
     378,   379,   380,   381,     0,   382,   383,   384,   385,   386,
       0,   388,   389,   390,   391,     0,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   500,   404,   405,
     406,     0,   407,   408,     0,   409,     0,   411,   412,   413,
     414,   415,     0,   416,   417,     0,     0,   418,   419,   420,
     421,   422,     0,   423,   424,   425,   426,   427,   428,   429,
     430,     0,     0,   431,   432,   433,   434,   435,     0,     0,
     436,   437,   438,   439,   440,   441,   442,     0,   443,     0,
     445,   446,   447,   448,     0,     0,   449,     0,     0,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     496,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    92,    93,    94,    95,
      96,    97,    98,    99,     0,   100,   101,   102,     0,     0,
       0,     0,     0,     0,     0,   103,   104,     0,   105,   106,
     107,     0,   109,   110,   111,   112,   113,     0,   115,   116,
       0,   117,   118,   119,   120,   121,   122,     0,     0,   123,
     124,   125,   126,   127,     0,   128,   129,   130,   131,   132,
       0,     0,     0,   134,   135,   136,   137,   138,   139,     0,
     141,   142,   143,     0,   144,   145,   146,   147,   148,   149,
       0,     0,   151,   152,   153,     0,     0,     0,     0,     0,
       0,     0,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,     0,   165,     0,   166,   167,   168,   169,   170,
     171,     0,   172,   173,   174,   175,   176,     0,     0,   177,
     178,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,     0,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,     0,   198,     0,   199,   200,   201,   202,
       0,   203,     0,   204,     0,     0,     0,   207,   208,   209,
       0,   561,     0,   212,     0,   213,   214,   215,     0,   216,
     217,   218,   219,   220,   221,   222,     0,   224,   225,   226,
     227,     0,   228,   229,   230,   231,   232,   233,     0,   234,
       0,   236,   237,   238,   239,   240,   241,   242,     0,   243,
       0,   244,     0,     0,   247,     0,   249,   250,   251,   252,
     253,     0,     0,   254,     0,   256,     0,     0,   258,   259,
     562,     0,     0,   261,   262,   263,   264,   265,   498,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,     0,   287,
     288,   289,   290,   291,     0,   292,   293,     0,   295,     0,
     296,   297,   298,   299,   300,   301,     0,   302,   303,     0,
       0,   304,   305,   306,     0,     0,   307,   308,     0,   310,
       0,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,     0,   323,   324,   325,   326,   327,   328,   329,
     330,   331,     0,   332,   333,   334,   335,   336,   337,     0,
     338,   339,   340,   341,   342,   343,   344,   345,     0,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,     0,   359,   360,     0,   362,   363,   364,   365,
     366,   367,   368,   369,   563,   371,   372,   373,   374,   375,
     376,     0,   377,   378,   379,   380,   564,     0,   382,   383,
     384,   385,   386,     0,   388,   389,   390,   391,     0,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     500,   404,   405,   406,     0,   407,   408,     0,   409,     0,
     411,   412,   413,   414,   415,     0,   565,   417,     0,     0,
     418,   419,   420,   421,   422,     0,   423,   424,   425,   426,
     427,   428,   429,   430,     0,     0,   431,   432,   433,   434,
     435,     0,     0,   436,   437,   438,   439,   440,   441,   442,
       0,   443,     0,   445,   446,   447,   448,     0,     0,   449,
       0,     0,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   496,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    92,
      93,    94,    95,    96,    97,    98,    99,     0,   100,   101,
     102,     0,     0,     0,     0,     0,     0,     0,   103,   104,
       0,   105,   106,   107,     0,   109,   110,   111,   112,   113,
       0,   115,   116,     0,   117,   118,   119,   120,   121,   122,
       0,     0,   123,   124,   125,   126,   127,     0,   128,   129,
     130,   131,   132,     0,     0,     0,   134,   135,   136,   137,
     138,   139,     0,   141,   142,   143,     0,   144,   145,   146,
     147,   148,   149,     0,     0,   151,   152,   153,     0,     0,
       0,     0,     0,     0,     0,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,     0,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,   174,   175,   176,
       0,     0,   177,   178,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,     0,   198,     0,   199,
     200,   201,   202,     0,   203,     0,   204,     0,     0,     0,
     207,   208,   209,     0,   211,     0,   212,     0,   213,   214,
     215,     0,   216,   217,   218,   219,   220,   221,   222,     0,
     224,   225,   226,   227,     0,   228,   229,   230,   231,   232,
     233,     0,   234,     0,   236,   237,   238,   239,   240,   241,
     242,     0,   243,     0,   244,     0,     0,   247,     0,   249,
     250,   251,   252,   253,     0,     0,   254,     0,   256,     0,
       0,   258,   259,   260,     0,     0,   261,   262,   263,   264,
     265,   498,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,     0,   287,   288,   289,   290,   291,     0,   292,   293,
       0,   295,     0,   296,   297,   298,   299,   300,   301,     0,
     302,   303,     0,     0,   304,   305,   306,     0,     0,   307,
     308,     0,   310,     0,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,     0,   323,   324,   325,   326,
     327,   328,   329,   330,   331,     0,   332,   333,   334,   335,
     336,   337,     0,   338,   339,   340,   341,   342,   343,   584,
     345,     0,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,     0,   359,   360,     0,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,     0,   377,   378,   379,   380,   381,
       0,   382,   383,   384,   385,   386,     0,   388,   389,   390,
     391,     0,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   500,   404,   405,   406,     0,   407,   408,
       0,   409,     0,   411,   412,   413,   414,   415,     0,   416,
     417,     0,     0,   418,   419,   420,   421,   422,     0,   423,
     424,   425,   426,   427,   428,   429,   430,     0,     0,   431,
     432,   433,   434,   435,     0,     0,   436,   437,   438,   439,
     440,   441,   442,     0,   443,     0,   445,   446,   447,   448,
       0,     0,   449,     0,     0,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   496,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    92,    93,    94,    95,    96,    97,    98,    99,
       0,   100,   101,   102,     0,     0,     0,     0,     0,     0,
       0,   103,   104,     0,   105,   106,   107,     0,   109,   110,
     111,   112,   113,     0,   115,   116,     0,   117,   118,   119,
     120,   121,   122,     0,     0,   123,   124,   125,   126,   127,
       0,   128,   129,   130,   131,   132,     0,     0,     0,   134,
     135,   136,   137,   138,   139,     0,   141,   142,   143,     0,
     144,   145,   146,   147,   148,   149,     0,     0,   151,   152,
     153,     0,     0,     0,     0,     0,     0,     0,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,     0,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
     174,   175,   176,     0,     0,   177,   178,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,     0,
     198,     0,   199,   200,   201,   202,     0,   203,     0,   204,
       0,     0,     0,   207,   208,   209,     0,   211,     0,   212,
       0,   213,   214,   215,     0,   216,   217,   218,   219,   220,
     638,   222,     0,   224,   225,   226,   227,     0,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   236,   237,   238,
     239,   240,   241,   242,     0,   243,     0,   244,     0,     0,
     247,     0,   249,   250,   251,   252,   253,     0,     0,   254,
       0,   256,     0,     0,   258,   259,   260,     0,     0,   261,
     262,   263,   264,   265,   498,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,     0,   287,   288,   289,   290,   291,
       0,   292,   293,     0,   295,     0,   296,   297,   298,   299,
     300,   301,     0,   302,   303,     0,     0,   304,   305,   306,
       0,     0,   307,   308,     0,   310,     0,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,     0,   323,
     324,   325,   326,   327,   328,   329,   330,   331,     0,   332,
     333,   334,   335,   336,   337,     0,   338,   339,   340,   341,
     342,   343,   344,   345,     0,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,     0,   359,
     360,     0,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,     0,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,   386,     0,
     388,   389,   390,   391,     0,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   500,   404,   405,   406,
       0,   407,   408,     0,   409,     0,   411,   412,   413,   414,
     415,     0,   416,   417,     0,     0,   418,   419,   420,   421,
     422,     0,   423,   424,   425,   426,   427,   428,   429,   430,
       0,     0,   431,   432,   433,   434,   435,     0,     0,   436,
     437,   438,   439,   440,   441,   442,     0,   443,     0,   445,
     446,   447,   448,     0,     0,   449,     0,     0,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   496,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    92,    93,    94,    95,    96,
      97,    98,    99,     0,   100,   101,   102,     0,     0,     0,
       0,     0,     0,     0,   103,   104,     0,   105,   106,   107,
       0,   109,   110,   111,   112,   113,     0,   115,   116,     0,
     117,   118,   119,   120,   121,   122,     0,     0,   123,   124,
     125,   126,   127,     0,   128,   129,   130,   131,   132,     0,
       0,     0,   134,   135,   136,   137,   138,   139,     0,   141,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
       0,   151,   152,   153,     0,     0,     0,     0,     0,     0,
       0,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,   174,   175,   176,     0,     0,   177,   178,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,     0,   198,     0,   199,   200,   201,   202,     0,
     203,     0,   204,     0,     0,     0,   207,   208,   209,     0,
     211,     0,   212,     0,   213,   214,   215,     0,   216,   217,
     218,   219,   220,   725,   222,     0,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,     0,   234,     0,
     236,   237,   238,   239,   240,   241,   242,     0,   243,     0,
     244,     0,     0,   247,     0,   249,   250,   251,   252,   253,
       0,     0,   254,     0,   256,     0,     0,   258,   259,   260,
       0,     0,   261,   262,   263,   264,   265,   498,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   287,   288,
     289,   290,   291,     0,   292,   293,     0,   295,     0,   296,
     297,   298,   299,   300,   301,     0,   302,   303,     0,     0,
     304,   305,   306,     0,     0,   307,   308,     0,   310,     0,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,     0,   323,   324,   325,   326,   327,   328,   329,   330,
     331,     0,   332,   333,   334,   335,   336,   337,     0,   338,
     339,   340,   341,   342,   343,   344,   345,     0,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,     0,   359,   360,     0,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
       0,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   388,   389,   390,   391,     0,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   500,
     404,   405,   406,     0,   407,   408,     0,   409,     0,   411,
     412,   413,   414,   415,     0,   416,   417,     0,     0,   418,
     419,   420,   421,   422,     0,   423,   424,   425,   426,   427,
     428,   429,   430,     0,     0,   431,   432,   433,   434,   435,
       0,     0,   436,   437,   438,   439,   440,   441,   442,     0,
     443,     0,   445,   446,   447,   448,     0,     0,   449,     0,
       0,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   496,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   112,   113,     0,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   134,   135,   136,   137,   138,
     139,     0,   141,   142,   143,     0,   144,   145,   146,   147,
     148,   149,     0,     0,   151,   152,   153,     0,     0,     0,
       0,     0,     0,     0,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,     0,   198,     0,   199,   200,
     201,   202,     0,   203,     0,   204,     0,     0,     0,   207,
     208,   209,     0,   211,     0,   212,     0,   213,   214,   215,
       0,   216,   217,   218,   219,   220,   728,   222,     0,   224,
     225,   226,   227,     0,   228,   229,   230,   231,   232,   233,
       0,   234,     0,   236,   237,   238,   239,   240,   241,   242,
       0,   243,     0,   244,     0,     0,   247,     0,   249,   250,
     251,   252,   253,     0,     0,   254,     0,   256,     0,     0,
     258,   259,   260,     0,     0,   261,   262,   263,   264,   265,
     498,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
       0,   287,   288,   289,   290,   291,     0,   292,   293,     0,
     295,     0,   296,   297,   298,   299,   300,   301,     0,   302,
     303,     0,     0,   304,   305,   306,     0,     0,   307,   308,
       0,   310,     0,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,     0,   323,   324,   325,   326,   327,
     328,   329,   330,   331,     0,   332,   333,   334,   335,   336,
     337,     0,   338,   339,   340,   341,   342,   343,   344,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,     0,   359,   360,     0,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,     0,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,   386,     0,   388,   389,   390,   391,
       0,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   500,   404,   405,   406,     0,   407,   408,     0,
     409,     0,   411,   412,   413,   414,   415,     0,   416,   417,
       0,     0,   418,   419,   420,   421,   422,     0,   423,   424,
     425,   426,   427,   428,   429,   430,     0,     0,   431,   432,
     433,   434,   435,     0,     0,   436,   437,   438,   439,   440,
     441,   442,     0,   443,     0,   445,   446,   447,   448,     0,
       0,   449,     0,     0,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   496,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     100,   101,   102,     0,     0,     0,     0,     0,     0,     0,
     103,   104,     0,   105,   106,   107,     0,   109,   110,   111,
     112,   113,     0,   115,   116,     0,   117,   118,   119,   120,
     121,   122,     0,     0,   123,   124,   125,   126,   127,     0,
     128,   129,   130,   131,   132,     0,     0,     0,   134,   135,
     136,   137,   138,   139,     0,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,     0,   151,   152,   153,
       0,     0,     0,     0,     0,     0,     0,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,     0,   198,
       0,   199,   200,   201,   202,     0,   203,     0,   204,     0,
       0,     0,   207,   208,   209,     0,   211,     0,   212,     0,
     213,   214,   215,     0,   216,   217,   218,   219,   220,   731,
     222,     0,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,     0,   234,     0,   236,   237,   238,   239,
     240,   241,   242,     0,   243,     0,   244,     0,     0,   247,
       0,   249,   250,   251,   252,   253,     0,     0,   254,     0,
     256,     0,     0,   258,   259,   260,     0,     0,   261,   262,
     263,   264,   265,   498,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,     0,   287,   288,   289,   290,   291,     0,
     292,   293,     0,   295,     0,   296,   297,   298,   299,   300,
     301,     0,   302,   303,     0,     0,   304,   305,   306,     0,
       0,   307,   308,     0,   310,     0,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,     0,   323,   324,
     325,   326,   327,   328,   329,   330,   331,     0,   332,   333,
     334,   335,   336,   337,     0,   338,   339,   340,   341,   342,
     343,   344,   345,     0,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,     0,   359,   360,
       0,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,     0,   377,   378,   379,
     380,   381,     0,   382,   383,   384,   385,   386,     0,   388,
     389,   390,   391,     0,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   500,   404,   405,   406,     0,
     407,   408,     0,   409,     0,   411,   412,   413,   414,   415,
       0,   416,   417,     0,     0,   418,   419,   420,   421,   422,
       0,   423,   424,   425,   426,   427,   428,   429,   430,     0,
       0,   431,   432,   433,   434,   435,     0,     0,   436,   437,
     438,   439,   440,   441,   442,     0,   443,     0,   445,   446,
     447,   448,     0,     0,   449,     0,     0,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   496,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    92,    93,    94,    95,    96,    97,
      98,    99,     0,   100,   101,   102,     0,     0,     0,     0,
       0,     0,     0,   103,   104,     0,   105,   106,   107,     0,
     109,   110,   111,   112,   113,     0,   115,   116,     0,   117,
     118,   119,   120,   121,   122,     0,     0,   123,   124,   125,
     126,   127,     0,   128,   129,   130,   131,   132,     0,     0,
       0,   134,   135,   136,   137,   138,   139,     0,   141,   142,
     143,     0,   144,   145,   146,   147,   148,   149,     0,     0,
     151,   152,   153,     0,     0,     0,     0,     0,     0,     0,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
       0,   165,     0,   166,   167,   168,   169,   170,   171,     0,
     172,   173,   174,   175,   176,     0,     0,   177,   178,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
       0,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,     0,   198,     0,   199,   200,   201,   202,     0,   203,
       0,   204,     0,     0,     0,   207,   208,   209,     0,   211,
       0,   212,     0,   213,   214,   215,     0,   216,   217,   218,
     219,   220,   221,   222,     0,   224,   225,   226,   227,     0,
     228,   229,   230,   231,   232,   233,     0,   234,     0,   236,
     237,   238,   239,   240,   241,   242,     0,   243,     0,   244,
       0,     0,   247,     0,   249,   250,   251,   252,   253,     0,
       0,   254,     0,   256,     0,     0,   258,   259,   260,     0,
       0,   261,   262,   263,   264,   265,   498,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,     0,   287,   288,   289,
     290,   291,     0,   292,   293,     0,   295,     0,   296,   297,
     298,   299,   300,   301,     0,   302,   303,     0,     0,   304,
     305,   306,     0,     0,   307,   308,     0,   310,     0,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
       0,   323,   324,   325,   326,   327,   328,   329,   330,   331,
       0,   332,   333,   334,   335,   336,   337,     0,   338,   339,
     340,   341,   342,   343,   344,   345,     0,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
       0,   359,   360,     0,   362,   363,   364,   365,   366,   367,
     368,   369,   563,   371,   372,   373,   374,   375,   376,     0,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
     386,     0,   388,   389,   390,   391,     0,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   500,   404,
     405,   406,     0,   407,   408,     0,   409,     0,   411,   412,
     413,   414,   415,     0,   565,   417,     0,     0,   418,   419,
     420,   421,   422,     0,   423,   424,   425,   426,   427,   428,
     429,   430,     0,     0,   431,   432,   433,   434,   435,     0,
       0,   436,   437,   438,   439,   440,   441,   442,     0,   443,
       0,   445,   446,   447,   448,     0,     0,   449,     0,     0,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   496,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    92,    93,    94,
      95,    96,    97,    98,    99,     0,   100,   101,   102,     0,
       0,     0,     0,     0,  1378,     0,   103,   104,     0,   105,
     106,   107,     0,   109,   110,   111,   112,   113,     0,   115,
     116,     0,   117,   118,   119,   120,   121,   122,     0,     0,
     123,   124,   125,   126,   127,     0,   128,   129,   130,   131,
     132,     0,     0,     0,   134,   135,   136,   137,   138,   139,
       0,   141,   142,   143,     0,   144,   145,   146,   147,   148,
     149,     0,     0,   151,   152,   153,     0,     0,     0,     0,
       0,     0,     0,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,   174,   175,   176,     0,     0,
     177,   178,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,     0,   198,     0,   199,   200,   201,
     202,     0,   203,     0,   204,     0,     0,     0,   207,   208,
     209,     0,   211,     0,   212,     0,   213,   214,   215,     0,
     216,   217,   218,   219,   220,   221,   222,     0,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,     0,
     234,     0,   236,   237,   238,   239,   240,   241,   242,     0,
     243,     0,   244,     0,     0,   247,     0,   249,   250,   251,
     252,   253,     0,     0,   254,     0,   256,     0,     0,   258,
     259,   260,     0,     0,   261,   262,   263,   264,   265,   498,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     287,   288,   289,   290,   291,     0,   292,   293,     0,   295,
       0,   296,   297,   298,   299,   300,   301,     0,   302,   303,
       0,     0,   304,   305,   306,     0,     0,   307,   308,     0,
     310,     0,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,     0,   323,   324,   325,   326,   327,   328,
     329,   330,   331,     0,   332,   333,   334,   335,   336,   337,
       0,   338,   339,   340,   341,   342,   343,   344,   345,     0,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,     0,   359,   360,     0,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,     0,   377,   378,   379,   380,   381,     0,     0,
     383,   384,   385,   386,     0,   388,   389,   390,   391,     0,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   500,   404,   405,   406,     0,   407,   408,     0,   409,
       0,   411,   412,   413,   414,   415,     0,   416,   417,     0,
       0,   418,   419,   420,   421,   422,     0,   423,   424,   425,
     426,   427,   428,   429,   430,     0,     0,   431,   432,   433,
     434,   435,     0,     0,   436,   437,   438,   439,   440,   441,
     442,     0,   443,     0,   445,   446,   447,   448,     0,     0,
     449,     0,     0,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   496,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      92,    93,    94,    95,    96,    97,    98,    99,     0,   100,
     101,   102,     0,     0,     0,     0,     0,     0,     0,   103,
     104,     0,   105,   106,   107,     0,   109,   110,   111,   112,
     113,     0,   115,   116,     0,   117,   118,   119,   120,   121,
     122,     0,     0,   123,   124,   125,   126,   127,     0,   128,
     129,   130,   131,   132,     0,     0,     0,   134,   135,   136,
     137,   138,   139,     0,   141,   142,   143,     0,   144,   145,
     146,   147,   148,   149,     0,     0,   151,   152,   153,     0,
       0,     0,     0,     0,     0,     0,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,     0,   165,     0,   166,
     167,   168,   169,   170,   171,     0,   172,   173,   174,   175,
     176,     0,     0,   177,   178,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,     0,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,     0,   198,     0,
     199,   200,   201,   202,     0,   203,     0,   204,     0,     0,
       0,   207,   208,   209,     0,   211,     0,   212,     0,   213,
     214,   215,     0,   216,   217,   218,   219,   220,  1513,   222,
       0,   224,   225,   226,   227,     0,   228,   229,   230,   231,
     232,   233,     0,   234,     0,   236,   237,   238,   239,   240,
     241,   242,     0,   243,     0,   244,     0,     0,   247,     0,
     249,   250,   251,   252,   253,     0,     0,   254,     0,   256,
       0,     0,   258,   259,   260,     0,     0,   261,   262,   263,
     264,   265,   498,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,     0,   287,   288,   289,   290,   291,     0,   292,
     293,     0,   295,     0,   296,   297,   298,   299,   300,   301,
       0,   302,   303,     0,     0,   304,   305,   306,     0,     0,
     307,   308,     0,   310,     0,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,     0,   323,   324,   325,
     326,   327,   328,   329,   330,   331,     0,   332,   333,   334,
     335,   336,   337,     0,   338,   339,   340,   341,   342,   343,
     344,   345,     0,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,     0,   359,   360,     0,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,     0,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,   386,     0,   388,   389,
     390,   391,     0,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   500,   404,   405,   406,     0,   407,
     408,     0,   409,     0,   411,   412,   413,   414,   415,     0,
     416,   417,     0,     0,   418,   419,   420,   421,   422,     0,
     423,   424,   425,   426,   427,   428,   429,   430,     0,     0,
     431,   432,   433,   434,   435,     0,     0,   436,   437,   438,
     439,   440,   441,   442,     0,   443,     0,   445,   446,   447,
     448,     0,     0,   449,     0,     0,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   496,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    92,    93,    94,    95,    96,    97,    98,
      99,     0,   100,   101,   102,     0,     0,     0,     0,     0,
       0,     0,   103,   104,     0,   105,   106,   107,     0,   109,
     110,   111,   112,   113,     0,   115,   116,     0,   117,   118,
     119,   120,   121,   122,     0,     0,   123,   124,   125,   126,
     127,     0,   128,   129,   130,   131,   132,     0,     0,     0,
     134,   135,   136,   137,   138,   139,     0,   141,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,     0,   151,
     152,   153,     0,     0,     0,     0,     0,     0,     0,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,     0,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,   174,   175,   176,     0,     0,   177,   178,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
       0,   198,     0,   199,   200,   201,   202,     0,   203,     0,
     204,     0,     0,     0,   207,   208,   209,     0,   211,     0,
     212,     0,   213,   214,   215,     0,   216,   217,   218,   219,
     220,  1794,   222,     0,   224,   225,   226,   227,     0,   228,
     229,   230,   231,   232,   233,     0,   234,     0,   236,   237,
     238,   239,   240,   241,   242,     0,   243,     0,   244,     0,
       0,   247,     0,   249,   250,   251,   252,   253,     0,     0,
     254,     0,   256,     0,     0,   258,   259,   260,     0,     0,
     261,   262,   263,   264,   265,   498,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   287,   288,   289,   290,
     291,     0,   292,   293,     0,   295,     0,   296,   297,   298,
     299,   300,   301,     0,   302,   303,     0,     0,   304,   305,
     306,     0,     0,   307,   308,     0,   310,     0,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,     0,
     323,   324,   325,   326,   327,   328,   329,   330,   331,     0,
     332,   333,   334,   335,   336,   337,     0,   338,   339,   340,
     341,   342,   343,   344,   345,     0,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,     0,
     359,   360,     0,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,     0,   377,
     378,   379,   380,   381,     0,   382,   383,   384,   385,   386,
       0,   388,   389,   390,   391,     0,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   500,   404,   405,
     406,     0,   407,   408,     0,   409,     0,   411,   412,   413,
     414,   415,     0,   416,   417,     0,     0,   418,   419,   420,
     421,   422,     0,   423,   424,   425,   426,   427,   428,   429,
     430,     0,     0,   431,   432,   433,   434,   435,     0,     0,
     436,   437,   438,   439,   440,   441,   442,     0,   443,     0,
     445,   446,   447,   448,     0,     0,   449,     0,     0,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     496,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    92,    93,    94,    95,
      96,    97,    98,    99,     0,   100,   101,   102,     0,     0,
       0,     0,     0,     0,     0,   103,   104,     0,   105,   106,
     107,     0,   109,   110,   111,   112,   113,     0,   115,   116,
       0,   117,   118,   119,   120,   121,   122,     0,     0,   123,
     124,   125,   126,   127,     0,   128,   129,   130,   131,   132,
       0,     0,     0,   134,   135,   136,   137,   138,   139,     0,
     141,   142,   143,     0,   144,   145,   146,   147,   148,   149,
       0,     0,   151,   152,   153,     0,     0,     0,     0,     0,
       0,     0,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,     0,   165,     0,   166,   167,   168,   169,   170,
     171,     0,   172,   173,   174,   175,   176,     0,     0,   177,
     178,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,     0,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,     0,   198,     0,   199,   200,   201,   202,
       0,   203,     0,   204,     0,     0,     0,   207,   208,   209,
       0,   211,     0,   212,     0,   213,   214,   215,     0,   216,
     217,   218,   219,   220,  1806,   222,     0,   224,   225,   226,
     227,     0,   228,   229,   230,   231,   232,   233,     0,   234,
       0,   236,   237,   238,   239,   240,   241,   242,     0,   243,
       0,   244,     0,     0,   247,     0,   249,   250,   251,   252,
     253,     0,     0,   254,     0,   256,     0,     0,   258,   259,
     260,     0,     0,   261,   262,   263,   264,   265,   498,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,     0,   287,
     288,   289,   290,   291,     0,   292,   293,     0,   295,     0,
     296,   297,   298,   299,   300,   301,     0,   302,   303,     0,
       0,   304,   305,   306,     0,     0,   307,   308,     0,   310,
       0,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,     0,   323,   324,   325,   326,   327,   328,   329,
     330,   331,     0,   332,   333,   334,   335,   336,   337,     0,
     338,   339,   340,   341,   342,   343,   344,   345,     0,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,     0,   359,   360,     0,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,     0,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,   386,     0,   388,   389,   390,   391,     0,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     500,   404,   405,   406,     0,   407,   408,     0,   409,     0,
     411,   412,   413,   414,   415,     0,   416,   417,     0,     0,
     418,   419,   420,   421,   422,     0,   423,   424,   425,   426,
     427,   428,   429,   430,     0,     0,   431,   432,   433,   434,
     435,     0,     0,   436,   437,   438,   439,   440,   441,   442,
       0,   443,     0,   445,   446,   447,   448,     0,     0,   449,
       0,     0,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   496,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    92,
      93,    94,    95,    96,    97,    98,    99,     0,   100,   101,
     102,     0,     0,     0,     0,     0,     0,     0,   103,   104,
       0,   105,   106,   107,     0,   109,   110,   111,   112,   113,
       0,   115,   116,     0,   117,   118,   119,   120,   121,   122,
       0,     0,   123,   124,   125,   126,   127,     0,   128,   129,
     130,   131,   132,     0,     0,     0,   134,   135,   136,   137,
     138,   139,     0,   141,   142,   143,     0,   144,   145,   146,
     147,   148,   149,     0,     0,   151,   152,   153,     0,     0,
       0,     0,     0,     0,     0,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,     0,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,   174,   175,   176,
       0,     0,   177,   178,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,     0,   198,     0,   199,
     200,   201,   202,     0,   203,     0,   204,     0,     0,     0,
     207,   208,   209,     0,   211,     0,   212,     0,   213,   214,
     215,     0,   216,   217,   218,   219,   220,  1808,   222,     0,
     224,   225,   226,   227,     0,   228,   229,   230,   231,   232,
     233,     0,   234,     0,   236,   237,   238,   239,   240,   241,
     242,     0,   243,     0,   244,     0,     0,   247,     0,   249,
     250,   251,   252,   253,     0,     0,   254,     0,   256,     0,
       0,   258,   259,   260,     0,     0,   261,   262,   263,   264,
     265,   498,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,     0,   287,   288,   289,   290,   291,     0,   292,   293,
       0,   295,     0,   296,   297,   298,   299,   300,   301,     0,
     302,   303,     0,     0,   304,   305,   306,     0,     0,   307,
     308,     0,   310,     0,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,     0,   323,   324,   325,   326,
     327,   328,   329,   330,   331,     0,   332,   333,   334,   335,
     336,   337,     0,   338,   339,   340,   341,   342,   343,   344,
     345,     0,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,     0,   359,   360,     0,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,     0,   377,   378,   379,   380,   381,
       0,   382,   383,   384,   385,   386,     0,   388,   389,   390,
     391,     0,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   500,   404,   405,   406,     0,   407,   408,
       0,   409,     0,   411,   412,   413,   414,   415,     0,   416,
     417,     0,     0,   418,   419,   420,   421,   422,     0,   423,
     424,   425,   426,   427,   428,   429,   430,     0,     0,   431,
     432,   433,   434,   435,     0,     0,   436,   437,   438,   439,
     440,   441,   442,     0,   443,     0,   445,   446,   447,   448,
       0,     0,   449,     0,     0,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   496,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    92,    93,    94,    95,    96,    97,    98,    99,
       0,   100,   101,   102,     0,     0,     0,     0,     0,     0,
       0,   103,   104,     0,   105,   106,   107,     0,   109,   110,
     111,   112,   113,     0,   115,   116,     0,   117,   118,   119,
     120,   121,   122,     0,     0,   123,   124,   125,   126,   127,
       0,   128,   129,   130,   131,   132,     0,     0,     0,   134,
     135,   136,   137,   138,   139,     0,   141,   142,   143,     0,
     144,   145,   146,   147,   148,   149,     0,     0,   151,   152,
     153,     0,     0,     0,     0,     0,     0,     0,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,     0,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
     174,   175,   176,     0,     0,   177,   178,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,     0,
     198,     0,   199,   200,   201,   202,     0,   203,     0,   204,
       0,     0,     0,   207,   208,   209,     0,   211,     0,   212,
       0,   213,   214,   215,     0,   216,   217,   218,   219,   220,
     221,   222,     0,   224,   225,   226,   227,     0,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   236,   237,   238,
     239,   240,   241,   242,     0,   243,     0,   244,     0,     0,
     247,     0,   249,   250,   251,   252,   253,     0,     0,   254,
       0,   256,     0,     0,   258,   259,   260,     0,     0,   261,
     262,   263,   264,   265,   498,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,     0,   287,   288,   289,   290,   291,
       0,   292,   293,     0,   295,     0,   296,   297,   298,   299,
     300,   301,     0,   302,   303,     0,     0,   304,   305,   306,
       0,     0,   307,   308,     0,   310,     0,   312,   313,   314,
     315,   316,   317,   318,     0,   320,   321,   322,     0,   323,
     324,   325,   326,   327,   328,   329,   330,   331,     0,   332,
     333,   334,   335,   336,   337,     0,   338,     0,   340,   341,
     342,   343,   344,   345,     0,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,     0,   359,
     360,     0,   362,   363,   364,   365,     0,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,     0,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,   386,     0,
     388,   389,   390,   391,     0,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   500,   404,   405,   406,
       0,   407,   408,     0,   409,     0,   411,   412,   413,   414,
     415,     0,   416,   417,     0,     0,   418,   419,   420,   421,
     422,     0,   423,   424,   425,   426,   427,   428,   429,   430,
       0,     0,   431,   432,   433,   434,   435,     0,     0,   436,
     437,   438,   439,   440,   441,   442,     0,   443,     0,   445,
     446,   447,   448,     0,     0,   449,     0,     0,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   656,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    92,    93,    94,    95,    96,
      97,    98,    99,     0,   100,   101,   102,     0,     0,     0,
       0,     0,     0,     0,   103,   104,     0,   105,   106,   107,
     657,   109,   110,   111,     0,   658,   659,   660,   661,     0,
     117,   118,   119,   120,   121,   122,     0,     0,   123,   124,
     662,   663,   127,     0,   128,   129,   130,   131,     0,     0,
     664,     0,   134,   135,   136,   137,   138,   139,   665,   141,
     142,   143,     0,   144,   145,   146,   147,   148,   149,     0,
     666,   151,   152,   153,     0,     0,     0,   667,     0,     0,
       0,   155,   156,   157,   158,   159,   160,   161,   668,   669,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,   174,   175,   176,     0,     0,   177,   178,
     670,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,   191,     0,   193,   194,   195,
     196,     0,     0,   198,     0,   199,   200,   671,   202,     0,
     203,     0,   204,   672,     0,   673,   207,   208,   209,   674,
     211,     0,   212,     0,     0,     0,   215,     0,   216,   217,
     218,   219,   220,   675,   222,   676,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,     0,   234,   677,
       0,   237,   238,   239,   240,   678,   679,     0,   680,     0,
     244,   681,   682,   247,   683,   249,   250,   251,   252,   253,
       0,     0,   254,   684,   256,   685,     0,   258,   259,   260,
       0,     0,   261,   262,   263,   264,   265,   686,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   687,   688,   689,   288,
     289,   290,     0,     0,   292,   293,   690,   295,     0,     0,
     297,   691,   299,   300,   301,     0,   302,   303,     0,     0,
     304,   305,   306,     0,     0,   307,     0,   692,   310,   693,
       0,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,     0,   323,   324,     0,   326,   327,     0,   329,   330,
     331,     0,   332,   333,   334,   335,   336,   337,     0,   338,
     339,   340,   694,   342,   343,   344,   345,     0,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,     0,   359,   360,   695,   362,   363,   364,   696,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
       0,   377,   378,   379,   380,   381,     0,   382,   697,   384,
     385,   386,   698,   388,   389,   699,   391,     0,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   700,
     404,     0,   406,     0,   407,   408,     0,   409,   701,   411,
     412,   413,   414,   415,     0,   702,   703,     0,     0,   418,
     419,     0,   421,     0,     0,   423,   424,   704,   426,   427,
     428,   429,   430,     0,     0,   431,   432,   433,   434,   435,
       0,     0,   436,   437,   438,   439,   440,     0,   705,     0,
     443,   706,   445,   446,   447,   448,     0,     0,   449,     0,
       0,   450,   451,   452,   453,   454,   455,   656,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   467,   468,
     469,   470,     0,    92,    93,    94,    95,    96,    97,    98,
      99,     0,   100,   101,   102,     0,     0,     0,     0,     0,
       0,     0,   103,   104,     0,   105,   106,   107,   657,   109,
     110,   111,     0,   658,   659,   660,   661,     0,   117,   118,
     119,   120,   121,   122,     0,     0,   123,   124,   662,   663,
     127,     0,   128,   129,   130,   131,     0,     0,   664,     0,
     134,   135,   136,   137,   138,   139,   665,   141,   142,   143,
       0,   144,   145,   146,   147,   148,   149,     0,   666,   151,
     152,   153,     0,     0,     0,   667,     0,     0,     0,   155,
     156,   157,   158,   159,   160,   161,   668,   669,   164,     0,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,   174,   175,   176,     0,     0,   177,   178,   670,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,   191,     0,   193,   194,   195,   196,     0,
       0,   198,     0,   199,   200,   671,   202,     0,   203,     0,
     204,   672,     0,   673,   207,   208,   209,   674,   211,     0,
     212,     0,     0,     0,   215,     0,   216,   217,   218,   219,
     220,   221,   222,   676,   224,   225,   226,   227,     0,   228,
     229,   230,   231,   232,   233,     0,   234,   677,     0,   237,
     238,   239,   240,   678,   679,     0,   680,     0,   244,   681,
     682,   247,   683,   249,   250,   251,   252,   253,     0,     0,
     254,   684,   256,   685,     0,   258,   259,   260,     0,     0,
     261,   262,   263,   264,   265,   686,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   687,   688,   689,   288,   289,   290,
       0,     0,   292,   293,   690,   295,     0,     0,   297,   691,
     299,   300,   301,     0,   302,   303,     0,     0,   304,   305,
     306,     0,     0,   307,     0,   692,   310,   693,     0,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,     0,
     323,   324,     0,   326,   327,     0,   329,   330,   331,     0,
     332,   333,   334,   335,   336,   337,     0,   338,   339,   340,
     694,   342,   343,   344,   345,     0,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,     0,
     359,   360,   695,   362,   363,   364,   696,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,     0,   377,
     378,   379,   380,   381,     0,   382,   697,   384,   385,   386,
     698,   388,   389,   699,   391,     0,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   700,   404,     0,
     406,     0,   407,   408,     0,   409,   701,   411,   412,   413,
     414,   415,     0,   702,   703,     0,     0,   418,   419,     0,
     421,     0,     0,   423,   424,   704,   426,   427,   428,   429,
     430,     0,     0,   431,   432,   433,   434,   435,     0,     0,
     436,   437,   438,   439,   440,     0,   705,     0,   443,   706,
     445,   446,   447,   448,     0,     0,   449,     0,     0,   450,
     451,   452,   453,   454,   455,  2385,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   467,   468,   469,   470,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     100,   101,   102,     0,     0,     0,     0,     0,     0,     0,
     103,   104,     0,   105,   106,   107,  2386,   109,   110,   111,
       0,   658,  2387,   660,   661,     0,   117,   118,   119,   120,
     121,   122,     0,     0,   123,   124,   662,   663,   127,     0,
     128,   129,   130,   131,     0,     0,  2388,     0,   134,   135,
     136,   137,   138,   139,  2389,   141,   142,   143,     0,   144,
     145,   146,   147,   148,   149,     0,  2390,   151,   152,   153,
       0,     0,     0,  2391,     0,     0,     0,   155,   156,   157,
     158,   159,   160,   161,   668,   669,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   670,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,     0,   193,   194,   195,   196,     0,     0,   198,
       0,   199,   200,   671,   202,     0,   203,     0,   204,  2392,
       0,  2393,   207,   208,   209,  2394,   211,     0,   212,     0,
       0,     0,   215,     0,   216,   217,   218,   219,   220,   221,
     222,  2395,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,     0,   234,  2396,     0,   237,   238,   239,
     240,   678,   679,     0,   680,     0,   244,  2397,  2398,   247,
    2399,   249,   250,   251,   252,   253,     0,     0,   254,  2400,
     256,  2401,     0,   258,   259,   260,     0,     0,   261,   262,
     263,   264,   265,  2595,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   687,  2403,   689,   288,   289,   290,     0,     0,
     292,   293,  2405,   295,     0,     0,   297,   691,   299,   300,
     301,     0,   302,   303,     0,     0,   304,   305,   306,     0,
       0,   307,     0,  2407,   310,  2408,     0,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,     0,   323,   324,
       0,   326,   327,     0,   329,   330,   331,     0,   332,   333,
     334,   335,   336,   337,     0,   338,   339,   340,   694,   342,
     343,   344,   345,     0,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,     0,   359,   360,
    2409,   362,   363,   364,     0,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,     0,   377,   378,   379,
     380,   381,     0,   382,     0,   384,   385,   386,  2411,   388,
     389,   699,   391,     0,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,  2596,   404,     0,   406,     0,
     407,   408,     0,   409,  2413,   411,   412,   413,   414,   415,
       0,   702,   703,     0,     0,   418,   419,     0,   421,     0,
       0,   423,   424,  2414,   426,   427,   428,   429,   430,     0,
       0,   431,   432,   433,   434,   435,     0,     0,   436,   437,
     438,   439,   440,     0,   705,     0,   443,  2415,   445,   446,
     447,   448,     0,     0,   449,     0,     0,   450,   451,   452,
     453,   454,   455,   656,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   467,   468,   469,   470,     0,    92,
      93,    94,    95,    96,    97,    98,    99,     0,   100,   101,
     102,     0,     0,     0,     0,     0,     0,     0,   103,   104,
       0,   105,   106,   107,   657,   109,   110,   111,     0,   658,
     659,   660,   661,     0,   117,   118,   119,   120,   121,   122,
       0,     0,   123,   124,   662,   663,   127,     0,   128,   129,
     130,   131,     0,     0,   664,     0,   134,   135,   136,   137,
     138,   139,   665,   141,   142,   143,     0,   144,   145,   146,
     147,   148,   149,     0,   666,   151,   152,   153,     0,     0,
       0,   667,     0,     0,     0,   155,   156,   157,   158,   159,
     160,   161,   668,   669,   164,     0,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,   174,   175,   176,
       0,     0,   177,   178,   670,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,   191,
       0,   193,   194,   195,   196,     0,     0,   198,     0,   199,
     200,   671,   202,     0,   203,     0,   204,   672,     0,   673,
     207,   208,   209,   674,   211,     0,   212,     0,     0,     0,
     215,     0,   216,   217,   218,   219,   220,   221,   222,   676,
     224,   225,   226,   227,     0,   228,   229,   230,   231,   232,
     233,     0,   234,   677,     0,   237,   238,   239,   240,   678,
     679,     0,   680,     0,   244,   681,   682,   247,   683,   249,
     250,   251,   252,   253,     0,     0,   254,   684,   256,   685,
       0,   258,   259,   260,     0,     0,   261,   262,   263,   264,
     265,     0,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     687,   688,   689,   288,   289,   290,     0,     0,   292,   293,
     690,   295,     0,     0,   297,   691,   299,   300,   301,     0,
     302,   303,     0,     0,   304,   305,   306,     0,     0,   307,
       0,   692,   310,   693,     0,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,     0,   323,   324,     0,   326,
     327,     0,   329,   330,   331,     0,   332,   333,   334,   335,
     336,   337,     0,   338,   339,   340,   694,   342,   343,   344,
     345,     0,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,     0,   359,   360,   695,   362,
     363,   364,     0,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,     0,   377,   378,   379,   380,   381,
       0,   382,     0,   384,   385,   386,   698,   388,   389,   699,
     391,     0,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,     0,   404,     0,   406,     0,   407,   408,
       0,   409,   701,   411,   412,   413,   414,   415,     0,   702,
     703,     0,     0,   418,   419,     0,   421,     0,     0,   423,
     424,   704,   426,   427,   428,   429,   430,     0,     0,   431,
     432,   433,   434,   435,     0,     0,   436,   437,   438,   439,
     440,     0,   705,     0,   443,   706,   445,   446,   447,   448,
       0,     0,   449,     0,     0,   450,   451,   452,   453,   454,
     455,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   467,   468,   469,   470
};

static const yytype_int16 yycheck[] =
{
       6,    35,   527,   583,   490,   617,   632,   610,   560,   993,
       0,   533,     6,     0,   524,   697,   991,   578,    73,   626,
    1270,     0,     0,  1167,   873,   703,    16,   966,   624,   971,
      16,   875,   794,  1804,   968,     6,  1136,  1136,   794,  1136,
     526,  1136,    30,  1223,   531,    75,  1172,   891,   938,  1032,
      75,  1732,  1810,  2094,  1812,  2142,  2170,  2142,   533,   903,
    2169,  1688,   996,   532,  1801,  2052,  1848,  1849,  1850,  1299,
    1300,   727,     0,   729,  1752,  2180,  2184,     0,   662,   663,
     617,   954,   619,    34,   621,   801,     0,     5,     5,     9,
    2004,  1251,    11,  1625,  1626,  2058,     5,   535,  1630,     5,
      88,  1352,     5,     9,     5,   689,    29,    50,     0,     5,
      13,    14,     5,     0,     5,    73,     5,    13,    14,  2455,
      13,    14,    41,     5,    16,     5,    58,    40,    13,    14,
     607,  1137,    55,    13,    14,     5,   524,    29,  1875,  1671,
    1672,     4,    11,    35,  1728,     5,     9,     5,     5,     9,
     637,     5,     5,   733,    73,   911,    13,    14,  1402,  1743,
       5,  2459,     5,    55,     5,     5,   168,   120,   169,     3,
      75,   107,  1404,    75,     3,     4,     5,    58,   213,    93,
       9,    86,   860,    75,    86,    58,    58,     4,     9,    67,
     607,   117,     9,  1265,    40,   137,    11,    31,    32,    15,
    2599,  2442,  2630,  1940,  1941,    27,    93,  1265,    11,  1992,
     288,   219,    34,  2083,   168,    23,   280,   282,   288,  2057,
     304,    29,   169,   239,   980,  2372,    41,   983,   984,   268,
      48,  2692,  2424,  2731,   329,    59,   820,   821,    27,    27,
    2530,   304,    23,    67,   115,    34,    34,   352,    29,  2799,
      23,   373,   117,   160,   207,   145,    29,   265,    73,    11,
     122,    27,   846,    15,    11,   120,   130,   115,   158,   353,
      22,   271,   794,   163,    37,   399,    27,   107,   800,  2615,
     135,    33,    34,  2065,   120,  2113,   115,   165,  1004,   188,
       8,   871,   435,    11,    41,  1011,  2890,   979,    16,    17,
      18,   435,   343,    83,  2865,   400,  2867,    20,   158,   697,
     434,   918,    13,    14,   118,   876,  2303,   325,   118,   267,
    2307,   211,  1965,  2410,   272,   160,    73,   135,   797,  2827,
     371,  2294,   130,   167,    86,   169,  1963,  2451,   186,   108,
     230,  2112,    11,   904,   324,  2454,   364,   127,    11,   492,
    1993,   451,   447,   300,   135,   173,    68,   264,   492,  2909,
     108,   124,   135,  2957,   130,  2193,   374,   162,   282,   930,
     492,   189,  2109,   353,  2111,   323,   194,  2667,   378,   130,
     230,  2942,   400,   212,   964,  2553,   190,   492,   223,   279,
     190,   913,   914,   490,   433,   282,   496,   494,   288,  1272,
    2861,   272,  1265,   487,   233,  2597,  2574,   272,   933,   233,
      73,   229,   344,   277,   802,   431,    23,   147,   496,   267,
      58,  2568,    29,   441,   487,   433,   496,   492,   492,  2927,
     377,   345,  2730,  1149,  1037,   265,     5,   315,  1688,  1971,
    1972,  1973,  1974,   342,  2227,  1977,  1978,  1979,  1980,  1981,
    1982,  1983,  1984,  1985,  1986,  2293,   492,   411,   345,   314,
    2888,   496,   163,   344,   400,   195,  2050,  1539,  2052,   267,
    2340,   344,   344,  2872,   492,  2212,   492,   293,   286,   277,
     433,     0,  1540,  1422,   397,   962,  2727,   388,   389,   927,
     480,   492,  2828,   480,   496,  1478,  1502,  2029,  2030,   533,
    2608,   480,   480,  1754,  1734,   286,   411,   445,   450,   411,
    1760,   437,  2599,   286,  2599,   310,     8,  1390,   524,   299,
    1146,  1765,  1506,   911,    16,    17,    18,   533,   135,   337,
    2517,  2829,   490,   341,  1766,  2522,   494,   427,  2525,   456,
     454,  1137,   532,   573,  2712,   962,  2509,   533,   573,   492,
     428,   397,  2842,   559,   560,   610,   337,   480,   376,   381,
     341,   478,   444,   371,   496,   456,   284,   454,   341,   488,
    2484,   491,   490,   435,   492,   492,   494,   583,  2349,   493,
    1160,   495,  1742,   492,  1168,  1169,   492,   478,   480,   492,
     371,   979,   381,   381,  1577,   581,   492,   433,   371,   492,
     413,   492,   592,   492,  2362,   592,   493,   492,   495,   597,
     492,   445,   492,   592,   592,  2729,   622,   623,   624,   488,
     483,   484,   492,   496,   496,   405,   492,   265,  2736,  2734,
     438,  1347,   492,   584,   492,   492,    23,   454,   492,   492,
     532,   533,    29,   168,   457,  1241,   495,   492,  1255,   492,
     106,   492,   492,   197,   483,   484,  1166,   438,   496,  2441,
    2338,   478,   483,   484,   592,   438,   483,   484,   219,   592,
     485,   486,   487,   488,  1254,  2662,  1256,  1540,  1541,   286,
    1260,   573,   485,   486,   487,   488,   339,  1294,  1295,  1265,
     481,   697,  1217,  1273,  1274,  1451,  1276,  1877,   454,    23,
     592,   492,  1212,  1225,    93,  1461,   344,  2444,  1464,  1723,
    1724,   481,  1308,  1963,   265,  2342,  1296,   145,   197,  2303,
    2834,   456,   478,  2307,   494,  1286,   246,   733,  1214,  1215,
     337,   158,  1339,   371,   341,  1221,   483,   484,   485,   486,
     487,   488,  1349,   478,  1351,    23,   416,   499,   135,   487,
    1225,    29,  1625,  1626,  1350,  1224,   494,  1630,    64,    65,
      11,   479,   480,   481,   371,   483,   484,   485,   486,   487,
     488,   493,    67,  2882,   496,  1901,   528,    55,  1166,  1167,
     174,  1907,  2012,   211,  2555,  2872,   239,  2872,   794,   245,
      41,   239,   284,  1303,   800,   801,   802,   253,  1671,  1672,
    1562,   447,   487,   230,   456,  1654,  1562,   797,  1652,   494,
     239,   135,   818,   357,   483,   484,   485,   486,   487,   488,
     115,   365,    73,   374,  1212,  1311,   478,    30,   541,   360,
     543,   438,   584,    31,    32,  1447,    75,    75,   872,   233,
     492,   847,  2956,  1439,  1828,   492,  1736,    86,    86,  1567,
     563,    54,   279,  1571,     4,  1573,   400,    13,    14,     9,
     288,   867,   868,   869,   329,   871,   872,  1523,  1851,  2910,
    2911,  1474,  1475,  1476,    23,   456,   492,   172,   149,     4,
      29,  2025,   433,  1420,     9,   239,   411,   475,  1544,   895,
    1546,   239,  2142,  1549,   490,    93,  2508,   478,   494,   286,
     365,   217,  1836,   447,   357,   797,  1502,   913,   914,   357,
    1447,   492,  1756,   561,   562,  1303,   564,   947,   948,  2960,
     950,  1431,   947,   948,  2508,   950,  2697,   493,   357,  1466,
     496,     4,  2544,  2517,  1471,   400,     9,   130,  2522,   494,
    1520,  2525,   834,   949,  2702,  2477,  1888,   953,   954,  1891,
     337,   939,   493,   149,   341,   496,   481,   239,   964,   282,
    2544,    23,   286,   156,  1540,  1541,  1542,    29,   475,   494,
     117,  1457,   267,   979,   485,   364,  1462,   272,   431,   329,
     872,   167,   447,   431,   371,   493,   135,   479,   480,   481,
     496,   483,   484,   485,   486,   487,   488,   492,  1004,   427,
     184,   185,   431,   357,   404,  1011,   406,   995,  1495,   357,
     404,   400,   406,    13,    14,   365,     4,   341,  2630,   343,
     315,     9,    13,    14,  1534,  2205,  1032,  2041,  2042,  2043,
    2044,   490,   493,   492,  2566,   494,   331,   431,   493,   492,
    1562,   496,   493,  1431,   492,   496,  2630,   371,   168,    94,
     400,   438,   441,  1575,   201,   947,   948,   475,   950,  1639,
    1640,  1641,  1642,   492,   404,   454,   406,   251,   252,  1579,
     213,  2171,  2171,   135,  2171,   357,  2171,   431,  2662,   272,
     217,   794,   115,   431,   277,   493,    54,   800,   496,   478,
     158,   493,  2342,   364,   496,   163,  1676,   447,  1971,  1972,
    1973,  1974,  2634,   492,  1977,  1978,  1979,  1980,  1981,  1982,
    1983,  1984,  1985,  1986,  2795,   496,   493,   498,   265,   496,
     267,   454,  1647,   456,   169,   493,  2270,  1730,   496,   400,
     492,  1137,   493,   428,    27,   496,   174,   286,   492,  2123,
     435,   130,   493,  1149,   492,   496,  1534,  2122,  2760,   431,
     337,  1807,   493,  1809,  1160,   496,  2029,  2030,   203,   197,
    1166,  1167,   230,    13,    14,   878,   364,   156,   364,  1931,
     441,  2110,   150,   218,   887,  2946,  2760,   361,   362,  2121,
     932,  2123,   227,   454,  2796,    78,   150,   900,   337,  2164,
       5,  1579,   341,     8,    87,   233,    13,    14,   911,    14,
     913,   914,   400,   404,   400,   406,  1212,   478,  2889,    24,
     492,   279,  2796,    28,   493,  1639,   261,  1641,  1642,  1225,
     150,   492,   371,   116,   286,   418,   150,  1905,  1906,   669,
     492,  2912,   251,   252,  1224,  1241,   429,  2081,   493,  1225,
     404,   496,   406,   441,  1870,   441,   267,   445,  1254,   287,
    1256,   691,   493,  1259,  1260,   496,   454,   493,   454,   494,
     496,  1251,   295,  1269,  1251,  1271,  1272,  1273,  1274,  1275,
    1276,  1277,  1251,  1251,   493,   337,  2888,   496,   267,   341,
     478,   721,   478,   272,   295,    50,   158,  2968,   277,   438,
    1296,   163,  1298,   186,   492,    36,   492,  1303,  1304,  1305,
    1306,  1307,  1308,   348,  2888,   198,  1312,  1313,   447,   371,
     493,  1317,    82,   496,     8,  1321,   492,    11,  1324,  1325,
    1326,  1327,  1328,  1329,  1330,  1331,  1332,   458,  1251,  1335,
      95,   364,  1224,  1929,  1340,   444,  2480,  1343,    94,  1345,
     492,  1347,   361,   362,  1350,   311,    36,    41,   169,  2599,
      13,    14,     8,   364,    48,    11,   121,   492,   230,  1251,
      16,    17,    18,   150,  1370,    55,   404,   400,   406,   493,
     493,   492,   496,   496,   139,   492,   438,  1887,   143,    73,
     493,  1367,   203,   496,  1390,   493,  2142,    35,   496,   400,
     428,   492,   832,   431,  2378,  1401,  1402,   218,   493,   164,
    2007,   496,   167,  2308,   150,  2310,   227,   279,   441,  1931,
     850,  2350,   493,   169,   150,   496,   106,   182,    13,    14,
    2000,   454,  1314,   493,   493,  1431,   496,   496,   150,   418,
     441,  1437,   493,  1439,   493,   496,   493,   496,  1924,   496,
     429,   493,  1952,   454,   496,   478,   604,   203,   606,   143,
    2299,   493,   364,  1376,   496,    13,    14,   282,   493,   492,
    1970,   496,   218,   400,  2313,   492,  1218,   478,  1220,    36,
     493,   227,  1478,   496,   228,  1481,  1482,   493,  1484,   173,
     496,   492,   492,  2090,  1376,  1995,   493,   493,   400,   496,
     496,  2635,  2002,   490,   387,   189,  1502,   390,     5,  1887,
     194,  2062,    13,    14,     5,   261,   196,   272,   493,   493,
     492,   496,   496,  1519,  1520,   280,     6,   493,     5,   493,
     496,    11,   496,   352,   353,    15,   282,   348,  1534,   441,
     492,    21,    22,    23,   493,   229,    26,   496,   194,    29,
      30,   163,   454,    33,    34,  2141,   493,  2143,  2204,   496,
     493,   492,  1265,   496,  2157,   245,  1562,   493,   323,   215,
     496,    13,    14,   253,  1952,    55,   478,   493,     5,  1575,
     496,  1577,   492,  1579,   493,   265,   493,   496,  1584,   496,
     492,   492,  1970,  1589,   493,   493,  1509,   496,   496,   492,
     284,   493,   348,  1627,   496,    85,    86,    87,    88,    89,
    2312,     5,   493,  2315,  2477,   496,   296,  1995,   493,   493,
     492,   496,   496,  2369,  2002,   493,   492,  1509,   496,  1625,
    1626,  1627,  2872,   492,  1630,    13,    14,   492,   284,   492,
    2605,   492,  2142,  1639,  1640,  1641,  1642,  2025,    13,    14,
      13,    14,  1676,  1649,   492,  1358,   492,  1653,    13,    14,
    1656,    13,    14,   343,    36,    13,    14,   492,    13,    14,
      13,    14,    13,    14,     5,  1671,  1672,    13,    14,   492,
    1676,  1423,   492,    55,   492,   365,    13,    14,   492,   435,
     146,  1433,   376,  1435,  1690,     9,  1438,  1693,   492,  1695,
      15,  2201,  1444,  2566,  1446,   385,    13,    14,    13,    14,
     352,   353,   255,   256,   361,   362,  1458,   352,   353,  2471,
    1716,  1463,  2319,  1747,   213,  1467,  1468,  1469,  1470,   496,
    1472,  1473,  1728,   455,   106,  2381,  2382,  2334,  2410,    85,
      97,    87,    36,    89,  1728,  1627,   371,  1743,   352,   353,
     913,   914,   228,   163,   279,   163,   277,   492,   492,  1743,
     411,  1757,  1742,    86,  2142,  1742,   496,  1728,   411,    54,
      54,  2634,   411,  1742,  1742,   258,   493,   411,  1774,  1775,
     501,   411,  1743,   454,   150,    93,   494,  2329,   142,   267,
      36,   492,   476,   267,  1676,    36,   492,  1793,     9,   483,
     484,   485,   486,   487,   488,    35,   409,   409,   490,   490,
     411,   411,  1694,   493,  1810,  1811,  1812,   411,   411,   496,
     492,   450,    11,  2201,   196,   339,   496,   491,  1710,  1742,
     496,   409,   501,   479,   480,   481,   492,   483,   484,   485,
     486,   487,   488,   272,   492,   411,  1728,   177,   159,   168,
      36,   435,   493,  2599,   374,  1851,   492,   219,   211,  1562,
    1742,  1743,   283,  1566,   496,  1747,   304,   304,   496,   492,
     219,   267,  1575,   245,   288,   219,   320,   280,   447,     8,
    2380,   253,    11,   492,   492,   150,   150,    16,    17,    18,
     454,  1887,  2270,   265,   267,   282,   493,   493,   490,   475,
     475,   282,   493,   493,   493,    36,   267,   493,    36,   491,
     493,   168,    41,   493,   493,   475,   493,   168,   492,    48,
     493,   411,   494,   493,   296,   493,   493,   451,   493,   492,
     492,   492,   292,  1929,   451,  1931,   441,   481,   477,   433,
     282,   496,   238,   283,    73,   283,   170,   411,   283,   267,
     174,   492,  2926,  1949,   150,   197,  1952,   286,   150,  2471,
     150,   411,  1958,   411,   411,  1961,   411,   493,  1964,   491,
     274,   343,   274,   197,  1970,  1971,  1972,  1973,  1974,   492,
    2004,  1977,  1978,  1979,  1980,  1981,  1982,  1983,  1984,  1985,
    1986,   454,  2037,   365,  1990,  1991,   496,   493,   280,  1995,
      36,   481,  2380,   282,  2000,   150,  2002,   487,  2004,   233,
     490,  2035,   491,   385,  1927,   495,   240,  2013,   491,   499,
    2016,   141,  2018,   150,   272,   168,    11,   163,  2052,  2025,
    2026,   493,  2410,  2029,  2030,   493,   493,   492,  2034,  2035,
     145,   493,   168,   168,   173,  1927,   526,   527,   528,   451,
     400,  2644,   478,   158,  2050,   496,  2052,   493,   163,   177,
     189,   493,   345,   287,   440,   194,  2050,  2063,  2052,    84,
     492,   283,   150,   492,   172,   422,   493,  2073,   493,   559,
     560,   561,   562,   492,   564,   496,   493,   493,  2564,  2050,
      36,  2052,   492,  2089,   491,   575,    79,  2713,   435,  2599,
     229,   496,  2480,   493,   584,   168,   211,   492,   218,   493,
     493,   493,  2698,  1816,   594,   492,   402,   597,   493,   291,
       8,   492,  2004,    11,   218,   230,  2872,   289,    16,    17,
      18,    67,    54,   357,  2649,   481,  1878,    73,   181,   199,
     187,  2137,   493,   411,   454,  2141,  2142,  2143,   272,   495,
      86,   272,  2667,  2035,   493,   284,   481,   481,  1861,   492,
     494,   411,   494,   643,   644,   645,  2666,    36,  2050,  2669,
    2052,  1874,   494,   494,   279,   267,   107,   494,   494,   115,
     404,   117,   406,   288,    36,   494,  2802,  2757,   494,   282,
     168,   494,   454,   494,   494,   494,   494,   494,   422,   494,
     301,   494,   494,   494,   428,  2201,   494,   431,   218,   453,
      86,  2781,   131,  2783,   494,   331,   494,   494,   494,   494,
     494,  2599,  2218,   494,   494,   494,   492,   219,  1931,   575,
     493,   492,   492,  1936,   492,  1938,   172,   492,   492,  1942,
    1943,    81,   115,  2719,    36,   492,   150,   376,   594,    73,
     493,   122,   150,    36,   493,    54,   353,  2635,  2773,    36,
     492,   492,   353,   492,   492,   201,   492,   322,  2264,  2265,
     440,   496,    73,  2269,  2270,  2877,    36,   186,  2274,  2192,
     435,  2277,  2278,   422,   285,  2871,  2282,    67,  2666,    67,
     492,  2669,   492,   496,    36,   435,   371,   643,   644,   645,
     481,   272,   186,   243,   492,   422,    36,  2303,   492,   285,
    2192,  2307,   285,   492,   355,   493,   493,   492,   265,  2303,
     282,  2797,   427,  2307,   352,     9,   806,   215,   282,   338,
     282,   267,   199,  2329,    33,   493,   272,   433,   492,   120,
       9,    22,  2303,   493,  2124,  1445,  2307,   476,  2137,  1805,
     479,   480,   481,  1368,   483,   484,   485,   486,   487,   488,
    1225,  2333,  2796,  2105,  2087,   592,  2362,  2540,  2874,  2868,
    2374,  2949,  2872,  2705,  2913,  2371,  2925,  2620,   966,   315,
    1811,  2185,  2871,  1799,  2380,   490,  1863,  2129,   493,   494,
    2923,  2141,  1796,   873,  2869,   331,   284,  2752,  1367,  1867,
    2177,  1929,  2144,  2145,  2146,  2147,  2148,  2149,  2150,  2151,
    2152,  2153,  2471,  1575,  2410,  2167,   932,   905,  2331,  2332,
    1757,  2303,   957,  1418,   956,  2307,  2770,  2791,  2908,  1774,
    1390,  2851,  2067,  2785,  2685,   915,   959,  2325,  1743,  2142,
       8,  1417,  2052,    11,  2309,  2294,  2663,   524,  2050,  2331,
    2332,  2760,   932,   933,  2759,  2777,  1265,  2778,  2536,   939,
     940,   941,  1265,  1265,  2167,  1265,  2854,  2838,  2855,  1654,
    1341,  1760,  1256,    41,  1694,  2471,  1585,  1484,  1691,  2066,
      48,  2477,   524,  1731,  2480,   965,   966,  1345,  2484,  2088,
     939,  1871,   428,  1166,  2872,  1214,  2492,  2493,   978,   435,
    2496,    -1,    -1,    -1,    -1,    73,    -1,    -1,    -1,    -1,
      -1,    -1,  2508,    -1,    -1,   995,    -1,    -1,    -1,   999,
      -1,  2517,    -1,    -1,  2508,    -1,  2522,    -1,    -1,  2525,
      -1,    -1,    -1,  2517,    -1,    -1,  2532,  2533,  2522,    -1,
    2453,  2525,    -1,    -1,    -1,    -1,    -1,  2508,  2544,    -1,
    2546,    -1,    -1,    -1,    36,    -1,  2517,    -1,    -1,    -1,
    2544,  2522,    -1,    -1,  2525,    -1,    -1,    -1,    -1,   915,
    2566,  2453,    -1,    55,    -1,   143,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2544,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   479,   480,   481,   940,   483,   484,   485,   486,   487,
     488,    -1,    -1,  2599,     8,   173,    -1,    11,    -1,    -1,
      -1,    -1,    16,    17,    18,    -1,    -1,    -1,    -1,   965,
     697,   189,    -1,  2326,   106,    -1,   194,    -1,    -1,    33,
      -1,   524,   978,    -1,  2630,  2517,    -1,    -1,  2634,  2635,
    2522,    -1,    -1,  2525,    -1,    -1,  2630,    -1,    -1,  2673,
      -1,  1272,  1132,   999,    -1,   697,    -1,    -1,    -1,    -1,
    1140,   229,  2658,    -1,    -1,    -1,  2662,    -1,  1148,  2630,
    2666,    -1,    -1,  2669,    -1,    -1,    -1,  2673,  2662,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     172,    -1,  2688,    -1,   524,    -1,  2609,    -1,    -1,  1179,
      -1,  2662,  2698,    -1,    -1,    -1,  2702,  2703,    -1,    -1,
      -1,    -1,    -1,    -1,   196,    -1,   284,    -1,  2631,    -1,
      -1,    -1,    -1,    -1,    -1,   802,    -1,  2609,    -1,    -1,
      -1,    -1,    -1,    -1,  1214,  1215,    -1,  1217,  1218,    -1,
    1220,  1221,     8,  1223,    -1,    11,    -1,  2450,    -1,  2631,
      16,    17,    18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     802,  2757,    -1,   245,  2760,    -1,    -1,    33,  2471,  1390,
      -1,   253,    -1,    -1,    -1,   524,  2760,    -1,    -1,    -1,
    2662,    -1,    -1,   265,    -1,  2781,    -1,  2783,    -1,  2785,
    1270,  2673,    -1,  2789,  1140,    -1,    -1,    -1,    -1,  2760,
    2796,  1281,    -1,    -1,   697,    -1,    -1,    -1,   376,    -1,
      -1,   215,  2796,    -1,   296,    -1,     8,    -1,    -1,    11,
    2733,  2817,    -1,  2565,    16,    17,    18,    -1,    -1,    -1,
      -1,  1311,  2535,    -1,    -1,  2796,    -1,    -1,    -1,    -1,
      -1,  2837,  2838,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2733,    -1,    -1,    -1,  2851,    -1,    -1,  2600,  2601,
      -1,   343,    -1,    -1,  1344,  1345,    -1,   697,    -1,    -1,
      -1,    -1,  2614,    -1,    -1,  2871,  2872,  1223,    -1,  2792,
     284,    -1,    -1,   365,    -1,    -1,  1366,    -1,  1368,    -1,
      -1,    -1,  2888,    -1,  2890,    -1,  2599,    -1,  1378,    -1,
    1380,    -1,   979,   385,  2888,    -1,    -1,    -1,   476,   802,
    2792,    -1,    -1,    -1,    -1,   483,   484,   485,   486,   487,
     488,    -1,    -1,    -1,    -1,    -1,    -1,  2888,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1415,    -1,   979,    -1,    -1,
      -1,    -1,  1422,  1423,    -1,  2687,    -1,    -1,   697,   215,
      -1,    -1,    -1,  1433,  1434,  1435,  1436,    -1,  1438,    -1,
      -1,  2957,    -1,    -1,  1444,    -1,  1446,    -1,  2881,    -1,
      -1,    -1,   802,  2715,    -1,    -1,    -1,  1457,  1458,    -1,
      -1,    -1,  1462,  1463,    -1,    -1,    -1,  1467,  1468,  1469,
    1470,    -1,  1472,  1473,    -1,    -1,    -1,    -1,  1344,  2881,
      -1,    -1,    -1,    -1,  1625,  1626,    -1,    -1,    -1,  1630,
      -1,    -1,  1492,  1493,  1494,    -1,    -1,    -1,   284,    -1,
    1366,     0,  1368,   215,    -1,  2728,    -1,    -1,    -1,    -1,
    1510,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1671,  1672,    -1,   802,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,  1415,
      -1,    -1,    -1,    -1,    -1,   479,   480,   481,    -1,   483,
     484,   485,   486,   487,   488,    -1,   979,    -1,    -1,  1166,
    1167,    -1,   284,    -1,    -1,    -1,    -1,    41,    -1,    -1,
      -1,    -1,    -1,    -1,    48,    -1,    -1,    -1,   524,    -1,
      -1,    -1,    -1,    -1,    93,    -1,    -1,    -1,     8,    -1,
      -1,    11,    -1,    -1,  1166,  1167,    16,    17,    18,    73,
      -1,    -1,    -1,    -1,    -1,  1212,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    33,    -1,    -1,  1492,  1493,    -1,   979,
      -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,    48,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   145,  1647,    -1,  2872,
    1212,    -1,    -1,    -1,  1654,    -1,    -1,    -1,    -1,   158,
      -1,    -1,    -1,    73,   163,    -1,    -1,    -1,    -1,   168,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   177,   143,
      -1,    -1,   181,    -1,    -1,    -1,    -1,    -1,  1688,    -1,
      -1,    -1,    -1,   479,   480,   481,    -1,   483,   484,   485,
     486,   487,   488,    -1,    -1,    -1,  1303,    -1,    -1,   173,
     979,    -1,   211,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1721,    -1,    -1,     8,   189,    -1,    11,  1728,    -1,
     194,   230,    16,    17,    18,    -1,    -1,    -1,    -1,    -1,
      -1,  1303,    -1,  1743,    -1,    -1,    -1,  1747,    -1,    33,
    1750,    -1,  1752,  1166,  1167,    -1,    -1,    -1,    -1,    -1,
      -1,   697,    -1,   173,    -1,   229,    -1,   479,   480,   481,
      -1,   483,   484,   485,   486,   487,   488,    -1,    -1,   189,
     279,    -1,    -1,   282,   194,    -1,    -1,    -1,    -1,   288,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1212,
      -1,  1801,    -1,    -1,    -1,   215,   216,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1166,  1167,    -1,   229,
     284,    -1,    -1,   322,    -1,    -1,    -1,    -1,    -1,    -1,
    1971,  1972,  1973,  1974,  1431,    -1,  1977,  1978,  1979,  1980,
    1981,  1982,  1983,  1984,  1985,  1986,   345,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1721,    -1,   267,    -1,    -1,
     270,    -1,  1212,  1863,    -1,    -1,   802,    -1,  1868,  1431,
      -1,    -1,    -1,    -1,   284,  1875,  1876,  1877,  1878,    -1,
    1880,     8,    -1,    -1,    11,    -1,    -1,    -1,  2029,  2030,
    1303,    -1,    -1,    -1,  1894,    -1,    -1,  1166,  1167,    -1,
      -1,   400,    -1,    -1,    -1,    -1,    -1,    -1,  1908,    -1,
      -1,    -1,   376,    -1,    41,    -1,    -1,    -1,    -1,    -1,
      -1,    48,    -1,    -1,  1924,    -1,    -1,    -1,   427,    -1,
      -1,   215,    -1,    -1,    -1,    -1,   435,  1534,    -1,    -1,
    1940,  1941,    -1,  1212,    -1,    -1,    73,    -1,    -1,    -1,
      -1,    -1,   451,  1303,   453,   454,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1963,    -1,    -1,   376,    -1,    -1,    -1,
      -1,    -1,  1534,     3,    -1,     5,    -1,    -1,    -1,    -1,
       8,    -1,  1579,    11,    -1,    -1,    -1,    -1,    16,    17,
      18,   490,    -1,    -1,   493,   494,   495,    -1,    -1,    -1,
     284,    -1,  1868,    -1,    -1,    33,    -1,    -1,    -1,    -1,
    1876,  1877,   476,    -1,  1880,    -1,   143,  1579,  1431,   483,
     484,   485,   486,   487,   488,    -1,    -1,    -1,  1894,    -1,
      -1,    -1,    -1,    -1,  1303,    -1,    -1,    -1,    -1,  2039,
      -1,    -1,    -1,   979,    -1,    -1,   173,  2047,  2048,  2049,
    2050,    -1,  2052,  2053,    -1,    -1,    -1,  2057,  2058,    -1,
      -1,    -1,   189,    -1,    -1,    -1,   476,   194,    -1,   479,
     480,   481,    -1,   483,   484,   485,   486,   487,   488,   109,
     110,  1431,    -1,    -1,    -1,    -1,    -1,  2087,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   229,  2103,    -1,  2105,    -1,    -1,    -1,  2109,
    2110,  2111,    -1,  2113,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1534,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2129,
      -1,  2131,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2144,  2145,  2146,  2147,  2148,  2149,
    2150,  2151,  2152,  2153,   184,   185,    -1,   284,    -1,    -1,
      -1,    -1,  1431,    -1,    -1,    -1,  1579,    -1,    -1,  2169,
      -1,    -1,  2172,    -1,    -1,    -1,    -1,   559,   560,    -1,
      -1,  2047,  2048,  2049,  1534,  2185,    -1,   215,    -1,    -1,
      -1,    -1,    -1,  2193,    -1,   479,   480,   481,    -1,   483,
     484,   485,   486,   487,   488,  2205,    -1,    -1,    -1,    -1,
      -1,    -1,  2212,     8,    -1,    -1,    11,   247,   248,   249,
     250,   251,   252,    -1,    -1,   255,   256,    -1,    -1,  1579,
    1166,  1167,    -1,    -1,    -1,    -1,    -1,  2103,    -1,    -1,
     622,   623,    -1,    -1,    -1,    -1,    41,    -1,    -1,   376,
      -1,    -1,    -1,    48,    -1,    -1,   284,    -1,    -1,    -1,
    2260,    -1,    -1,    -1,    -1,  1534,    -1,    -1,    -1,    -1,
      -1,   109,   110,    -1,    -1,    -1,  1212,    -1,    73,    -1,
      -1,    -1,    -1,  2283,    -1,    -1,  2286,  2287,  2288,  2289,
    1887,    -1,    -1,  2293,  2294,    -1,  2296,    -1,    -1,  2299,
      -1,    -1,    -1,  2303,    -1,    -1,  2172,  2307,    -1,    36,
    1579,    -1,    -1,  2313,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1887,    -1,    -1,    55,  2329,
      -1,   361,   362,  2333,    -1,    -1,  2477,    -1,  2338,  2205,
      -1,    -1,  2342,    -1,    -1,    -1,   184,   185,   143,   476,
    2350,    -1,    -1,    -1,    -1,  1952,   483,   484,   485,   486,
     487,   488,    -1,    -1,    -1,    -1,    -1,  1303,    -1,    -1,
      -1,    -1,    -1,  1970,    -1,  2375,    -1,    -1,   173,   106,
     107,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   115,    -1,
    1952,    -1,    -1,    -1,   189,    -1,    -1,    -1,  1995,   194,
      -1,    -1,    -1,    -1,    -1,  2002,    -1,    -1,  1970,   247,
     248,   249,   250,   251,   252,    -1,    -1,   255,   256,   801,
    2286,  2287,  2288,  2289,    -1,  2566,    -1,    -1,  2025,    -1,
      -1,    -1,    -1,  1995,   229,    -1,   818,    -1,    -1,    -1,
    2002,    -1,   472,   473,  2444,   172,    -1,    -1,    -1,    -1,
      -1,   479,   480,   481,  2454,   483,   484,   485,   486,   487,
     488,    -1,    -1,  2025,  2464,   847,    -1,    -1,    -1,   196,
      -1,    -1,    -1,    -1,  1887,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   867,   868,   869,    -1,   284,
     872,    -1,    -1,  2634,    -1,  1431,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2508,  2509,
      -1,    -1,  2512,   895,    -1,  2515,    -1,  2517,   245,    -1,
      -1,    -1,  2522,   361,   362,  2525,   253,  2527,    -1,    -1,
    2530,    -1,    -1,    -1,    -1,    -1,    -1,  1887,   265,  1952,
     267,    -1,    -1,    -1,  2544,  2142,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1970,    -1,    -1,
      -1,    -1,    -1,    -1,  2564,  2565,    -1,   949,    -1,   296,
      -1,   953,   954,  2573,    -1,    -1,    -1,    -1,    -1,    -1,
    2142,   376,  1995,    -1,    -1,    -1,    -1,    -1,    -1,  2002,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1534,    -1,
    2600,  2601,  1952,    -1,  2201,    -1,    -1,    -1,    -1,    -1,
      -1,  2611,  2025,    -1,  2614,    -1,   343,    -1,  1887,    -1,
    1970,    -1,  1004,    -1,    -1,    -1,    -1,  2627,    -1,  1011,
    2630,    -1,    -1,    -1,   472,   473,    -1,    -1,   365,  2201,
      -1,    -1,    -1,  1579,    -1,  1995,    -1,    -1,    -1,  2649,
    1032,    -1,  2002,    -1,   492,    -1,    -1,    -1,   385,    -1,
     387,    -1,  2662,   390,    -1,    -1,    -1,  2667,    -1,    -1,
      -1,    -1,    -1,  2270,    -1,  2025,    -1,    -1,    -1,    -1,
      -1,   476,  2682,  1952,    -1,    -1,    -1,  2687,   483,   484,
     485,   486,   487,   488,    -1,    -1,  2696,    -1,    -1,    -1,
      -1,  1970,    -1,    -1,    -1,    -1,    -1,  2573,  2270,    -1,
      -1,    -1,    -1,    -1,    -1,  2715,    -1,    -1,    -1,  2719,
      -1,    -1,    -1,    -1,    -1,    -1,  1995,    -1,    -1,  2142,
      -1,    -1,  2732,  2002,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2025,    -1,    -1,    -1,
    2760,  2627,    -1,    -1,    -1,   492,    -1,  1149,    -1,  2769,
      -1,    -1,    -1,  2773,    -1,    -1,    -1,  2777,    -1,    -1,
      -1,    -1,    -1,  2380,    -1,    -1,    -1,    -1,  2201,    -1,
      -1,    -1,  2142,    -1,    -1,    -1,  2796,  2797,  2798,  2799,
      -1,    -1,    23,    -1,     8,    -1,    -1,    11,    29,    -1,
      -1,    -1,    -1,  2410,    -1,    36,    -1,    -1,  2380,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2696,    -1,    -1,    -1,    55,    -1,    -1,    41,    -1,    -1,
      -1,    -1,  2842,    -1,    48,    -1,    -1,    -1,  2410,    -1,
      -1,  2201,    -1,    -1,  2854,    -1,    -1,  2270,    -1,   794,
      -1,    -1,    -1,    -1,    -1,   800,  2732,    -1,  2868,    73,
      -1,     8,    -1,  2142,    11,    -1,    -1,  1259,    -1,    -1,
      -1,    -1,  2882,  2480,    -1,   106,    -1,  1269,  2888,  1271,
      -1,    -1,  1274,  1275,  1276,  1277,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,  2908,  2909,
      -1,    48,    -1,    -1,   135,    -1,  1298,    -1,  2480,    -1,
    2270,    -1,  1304,  1305,  1306,  1307,    -1,    -1,    -1,    -1,
    1312,  1313,  2201,    -1,    -1,  1317,    73,    -1,    -1,  1321,
      -1,    -1,  1324,  1325,  1326,  1327,  1328,  1329,  1330,  1331,
    1332,  1887,   887,  1335,    -1,    -1,    -1,    -1,  1340,    -1,
      -1,  1343,    -1,  1345,    -1,  1347,    -1,  2380,    -1,   173,
      -1,    -1,    -1,    -1,    -1,   196,   911,    -1,   913,   914,
      -1,    -1,    -1,    -1,    -1,   189,    -1,    -1,  1370,    -1,
     194,    -1,    -1,    -1,    -1,    -1,    -1,  2410,    -1,    -1,
      -1,  2270,  2599,    -1,    -1,    -1,   143,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1952,    -1,    -1,  1401,
    1402,    -1,    -1,    -1,   245,   229,    -1,    -1,    -1,    -1,
    2380,    -1,   253,    -1,  1970,    -1,   173,  2599,  2635,   888,
      -1,    -1,    -1,    -1,   265,   980,    -1,    -1,   983,   984,
     109,   110,   189,    -1,    -1,    -1,    -1,   194,    -1,  1995,
    2410,    -1,    -1,    -1,    -1,   286,  2002,  2480,    -1,  2666,
      -1,    -1,  2669,  2635,    -1,   296,    -1,    -1,    -1,   928,
     284,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2025,
      -1,    -1,   229,    -1,    -1,    -1,  1478,    -1,    -1,  1481,
    1482,    -1,  1484,    -1,  2666,    -1,    -1,  2669,    -1,    -1,
      -1,  2380,    -1,    -1,    -1,    -1,   337,    -1,    -1,    -1,
     341,    -1,   343,    -1,    -1,   184,   185,    -1,    -1,    -1,
    2480,    -1,    -1,    -1,    -1,    -1,    -1,  1519,    -1,    -1,
      -1,  2410,    -1,    -1,   365,    -1,    -1,   284,    -1,    -1,
     371,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   385,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   376,    -1,    -1,     0,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2599,  1036,   247,   248,
     249,   250,   251,   252,  1043,  1577,   255,   256,    -1,    -1,
      -1,    -1,  1584,    -1,    -1,    -1,  2142,  1589,    -1,    -1,
      -1,  2480,    -1,    -1,    -1,    -1,    -1,   438,    -1,    -1,
      -1,    -1,  2635,    -1,    -1,    -1,    -1,    -1,    -1,  1164,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   376,
    1175,    -1,  1177,    -1,    -1,  1627,    -1,  1182,    -1,  2599,
      -1,    -1,    -1,  2666,    -1,    -1,  2669,  1639,    -1,  1641,
    1642,    -1,    -1,    -1,  1199,  2201,    -1,  1649,    93,    -1,
      -1,  1653,   476,    -1,  1656,  2872,    -1,    -1,    -1,   483,
     484,   485,   486,   487,   488,  2635,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1230,  1231,    -1,    -1,    -1,
      -1,    -1,   361,   362,    -1,    -1,    -1,    -1,  1690,    -1,
    2872,  1693,    -1,  1695,    -1,    -1,  2666,     0,    -1,  2669,
     145,    -1,    -1,    -1,    -1,    -1,    -1,  1262,  1263,    -1,
    2599,  1266,  1267,   158,  2270,    -1,    -1,    -1,   163,   476,
      -1,    -1,    -1,   168,    -1,    -1,   483,   484,   485,   486,
     487,   488,   177,    -1,    -1,    -1,   181,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2635,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1757,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   211,    -1,    -1,    -1,
      -1,    -1,  1774,  1775,    -1,    -1,    -1,  2666,    -1,    -1,
    2669,    -1,    -1,    -1,    -1,   230,    -1,    -1,  1257,    -1,
      93,  1793,    -1,   472,   473,    -1,    -1,    -1,    -1,  1268,
      -1,    -1,    -1,  1272,    -1,    -1,    -1,    -1,    -1,  1278,
    1279,  1280,    -1,    -1,    -1,    -1,    -1,    -1,  1287,    -1,
      -1,    -1,    -1,    -1,  2380,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   279,    -1,    -1,   282,    -1,  2872,
      -1,    -1,   145,   288,    -1,    -1,  1401,  1402,    -1,  1851,
      -1,    -1,    -1,    -1,  2410,   158,    -1,    -1,    -1,    -1,
     163,    -1,    -1,    -1,    -1,   168,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1342,   177,    -1,    -1,   322,   181,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1451,    -1,    -1,    -1,
     345,    -1,  2872,    -1,    -1,    -1,  1461,    -1,   211,  1464,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1386,    -1,    -1,
      -1,    -1,    -1,    -1,  2480,    -1,    -1,   230,    -1,    -1,
      -1,  1400,    -1,    -1,    -1,    -1,  1405,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1949,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   400,  1958,    21,    -1,  1961,
      -1,    -1,  1964,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   279,    -1,    -1,   282,
    1535,  1536,   427,  2872,    -1,   288,    -1,    -1,  1990,  1991,
     435,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2004,    -1,    -1,    -1,   451,  1562,   453,   454,
      74,  2013,    -1,    -1,  2016,    -1,  2018,    -1,    -1,   322,
    1575,    -1,    -1,    -1,  2026,    -1,    90,    -1,    -1,    -1,
      -1,    -1,  2034,  2035,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   345,  2599,    -1,   490,    -1,    -1,   493,   494,
     495,    -1,    23,    -1,    -1,    -1,    -1,    -1,    29,    -1,
      -1,  2063,    -1,    -1,    -1,    36,    -1,    -1,    -1,    -1,
      -1,  2073,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2635,
     144,    -1,    -1,    -1,    55,    -1,    -1,  2089,    -1,   153,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   400,    -1,    -1,
      -1,   165,    -1,    -1,    -1,    -1,   170,    -1,    -1,    -1,
    2666,    -1,    -1,  2669,    -1,    -1,    -1,    -1,  1587,    -1,
      -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   435,   197,    -1,   106,    -1,  1606,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   451,    -1,
     453,   454,    -1,    -1,  1623,    -1,  1625,  1626,    -1,  1628,
      -1,  1630,    -1,    -1,   135,    -1,  1635,    -1,    -1,  1638,
      -1,    -1,    -1,    -1,  1643,    -1,   240,  1646,  1733,    -1,
     244,    -1,    -1,    -1,    -1,    -1,    -1,   490,    -1,  1658,
     493,   494,   495,  1662,  1663,  1664,  1665,    -1,    -1,    -1,
      -1,    -1,  1671,  1672,    -1,  1674,  1675,    -1,    -1,  1764,
    1765,    -1,    -1,    -1,    -1,    -1,  2218,  1686,    -1,    -1,
    1689,    -1,    -1,    -1,    -1,   196,    -1,    -1,  1697,  1698,
    1699,  1700,  1701,  1702,  1703,  1704,  1705,  1706,    -1,    -1,
      -1,    -1,    -1,   307,    -1,  1714,    -1,    -1,    -1,  1718,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   321,    -1,    -1,
      -1,    -1,  2264,  2265,    -1,    -1,    -1,  2269,    -1,    -1,
      -1,  1740,  2274,    -1,   245,  2277,  2278,    -1,    -1,    -1,
    2282,    -1,   253,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     354,    -1,    -1,   357,   265,    -1,    -1,    -1,    -1,    -1,
      -1,   365,    -1,    -1,   368,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   286,  2872,    -1,    -1,    -1,
      -1,    -1,    -1,   387,    -1,   296,    -1,  2329,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   400,    -1,    -1,    -1,
      -1,    -1,    -1,   407,    -1,    -1,    -1,  1902,    -1,    -1,
      -1,    -1,   416,    -1,    -1,    -1,    -1,    -1,   422,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   337,    -1,    -1,  2371,
     341,    -1,   343,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   447,    -1,    -1,    -1,  1856,  1857,  1858,
      -1,    -1,    -1,    -1,   365,    -1,    -1,    -1,    -1,    -1,
     371,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   385,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1896,     8,    -1,
      -1,    11,    -1,    -1,    -1,    -1,    16,    17,    18,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    41,    -1,    -1,    -1,    -1,    -1,   438,    48,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1948,
      -1,    -1,  2484,    -1,    -1,  1954,    -1,    -1,    -1,    -1,
    2492,  2493,    -1,    73,  2496,    -1,    -1,    -1,  1967,  1968,
    1969,    -1,  1971,  1972,  1973,  1974,    -1,    -1,  1977,  1978,
    1979,  1980,  1981,  1982,  1983,  1984,  1985,  1986,  1987,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2532,  2533,    -1,    -1,    -1,    -1,  2005,    -1,    -1,  2008,
      -1,  2010,    -1,    -1,  2546,  2014,  2015,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2028,
    2029,  2030,  2031,    -1,  2033,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,     0,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2142,    -1,    -1,
      -1,    -1,    19,   173,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    29,    -1,    31,    32,    -1,    -1,    -1,   189,
      -1,    -1,    -1,    -1,   194,    -1,    -1,    -1,    -1,    -1,
      47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    56,
      -1,    -1,    -1,    -1,    -1,   215,   216,  2106,    -1,    -1,
      -1,    68,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   229,
      -1,    -1,    79,    -1,    -1,    -1,  2658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    91,    -1,    93,    -1,    -1,     8,
      -1,  2673,    11,    -1,    -1,    -1,    -1,    16,    17,    18,
      -1,    -1,    -1,    -1,   111,    -1,  2688,   267,    -1,    -1,
     270,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   125,    -1,
      -1,  2703,    41,    -1,   284,    -1,    -1,   287,   135,    48,
      -1,    -1,    -1,    -1,   141,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   149,    -1,   151,   152,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    73,    -1,    -1,   164,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2219,    -1,    -1,    -1,  2223,  2224,    -1,  2226,    -1,    -1,
    2229,  2230,  2231,  2232,    -1,    -1,   193,  2236,  2237,  2238,
    2239,  2240,  2241,  2242,  2243,  2244,  2245,  2246,  2247,    -1,
      -1,    -1,    -1,  2785,    -1,    -1,    -1,  2789,  2257,    -1,
      -1,    -1,    -1,    -1,  2263,    -1,   376,  2266,    -1,  2268,
      -1,    -1,    -1,  2272,    -1,   232,  2275,  2276,    -1,    -1,
    2279,  2280,    -1,    -1,  2369,  2817,    -1,    -1,    -1,  2374,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   173,  2837,  2838,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2851,
     189,  2320,    -1,    -1,    -1,   194,    -1,    -1,    -1,  2328,
      -1,  2416,  2417,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2341,    -1,    -1,    -1,   215,   216,    -1,    -1,
      -1,    -1,   309,    -1,    -1,   312,    -1,    -1,  2890,    -1,
     229,    -1,    -1,    -1,    -1,    -1,   476,    -1,    -1,   479,
     480,   481,    -1,   483,   484,   485,   486,   487,   488,    -1,
      -1,    -1,    -1,    -1,   341,    -1,   496,    -1,    -1,    -1,
      -1,    -1,    -1,   350,    -1,    -1,    -1,    -1,   267,    -1,
      -1,   270,    -1,    -1,    -1,    -1,    -1,   364,    -1,    -1,
      -1,    -1,    -1,    -1,   371,   284,    -1,    -1,   375,    -1,
      -1,    -1,    -1,    -1,    -1,  2957,    -1,    -1,   385,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   396,
      -1,    -1,    -1,   400,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2473,    -1,    -1,    -1,  2477,   436,
      -1,    -1,    -1,    -1,   441,    -1,    -1,  2486,  2487,  2488,
      -1,    -1,  2491,    -1,    -1,  2494,  2495,   454,    -1,    -1,
    2499,    -1,    -1,  2588,  2589,    -1,    -1,   376,    -1,    -1,
      -1,    -1,    -1,    -1,  2599,    -1,    -1,    -1,    -1,    -1,
      -1,   478,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   492,    -1,    -1,   495,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2566,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2585,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   476,    -1,    -1,
     479,   480,   481,    -1,   483,   484,   485,   486,   487,   488,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2633,  2634,    -1,    -1,    -1,    -1,
    2639,  2640,  2641,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2680,  2681,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2694,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2706,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2754,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2772,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2872,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2794,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2808,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2856,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2879,    19,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    29,    30,    -1,  2893,    -1,    -1,    35,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,   130,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,   167,
      -1,   169,   170,   171,   172,   173,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,    -1,   202,   203,   204,   205,   206,   207,
     208,   209,   210,    -1,   212,    -1,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,    -1,    -1,   226,   227,
     228,   229,    -1,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,    -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,    -1,   323,   324,   325,   326,   327,
     328,   329,   330,    -1,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,    -1,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,    -1,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
      -1,   409,   410,    -1,    -1,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,    -1,
      -1,   429,   430,   431,   432,   433,   434,    -1,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,    -1,    -1,   452,    -1,    -1,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,    -1,
      -1,    -1,    -1,    -1,    -1,   483,   484,   485,    -1,    -1,
      -1,    -1,   490,    -1,   492,   493,    -1,    -1,    -1,   497,
      -1,   499,   500,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    35,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,    -1,   159,
     160,   161,   162,    -1,   164,    -1,   166,   167,    -1,   169,
     170,   171,   172,   173,   174,    -1,   176,    -1,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,    -1,   195,   196,   197,   198,   199,
     200,    -1,   202,   203,   204,   205,   206,   207,   208,   209,
     210,    -1,   212,    -1,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,    -1,    -1,   226,   227,   228,   229,
      -1,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,    -1,
     280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,    -1,   323,   324,   325,   326,   327,   328,   329,
     330,    -1,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,    -1,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,    -1,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,    -1,   409,
     410,    -1,    -1,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,    -1,    -1,   429,
     430,   431,   432,   433,   434,    -1,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
      -1,    -1,   452,    -1,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,    -1,   478,    -1,
      -1,    -1,    -1,   483,   484,    -1,    -1,    -1,    -1,    -1,
     490,    -1,   492,   493,    -1,    -1,    -1,   497,    -1,   499,
     500,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,    -1,   159,   160,   161,
     162,    -1,   164,    -1,   166,   167,    -1,   169,   170,   171,
     172,   173,   174,    -1,   176,    -1,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,    -1,   195,   196,   197,   198,   199,   200,    -1,
     202,   203,   204,   205,   206,   207,   208,   209,   210,    -1,
     212,    -1,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,    -1,    -1,   226,   227,   228,   229,    -1,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,    -1,   280,   281,
      -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
      -1,   323,   324,   325,   326,   327,   328,   329,   330,    -1,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,    -1,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,    -1,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,    -1,   409,   410,    -1,
      -1,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,    -1,    -1,   429,   430,   431,
     432,   433,   434,    -1,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,   445,   446,   447,   448,   449,    -1,    -1,
     452,    -1,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,    -1,   478,    -1,    -1,    -1,
      -1,   483,   484,    -1,    -1,    -1,    -1,    -1,   490,    -1,
     492,    -1,    -1,    -1,    -1,   497,    -1,   499,   500,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,   167,   168,   169,   170,   171,   172,   173,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
      -1,   195,   196,   197,   198,   199,   200,    -1,   202,   203,
     204,   205,   206,   207,   208,   209,   210,    -1,   212,    -1,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
      -1,   225,   226,   227,   228,   229,    -1,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,    -1,   280,   281,    -1,    -1,
     284,   285,   286,    -1,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,    -1,   323,
     324,   325,   326,   327,   328,   329,   330,    -1,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
      -1,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,    -1,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,    -1,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,    -1,   409,   410,    -1,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,    -1,    -1,   429,   430,   431,   432,   433,
     434,    -1,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,    -1,    -1,   452,    -1,
      -1,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,    -1,    -1,    -1,    -1,    -1,    -1,   483,
     484,    -1,    -1,    -1,    -1,    -1,   490,    -1,   492,    -1,
      -1,    -1,    -1,   497,    -1,   499,   500,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    -1,    -1,    -1,    34,    35,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,    -1,   159,   160,   161,   162,    -1,   164,    -1,
     166,   167,    -1,   169,   170,   171,   172,   173,   174,    -1,
     176,    -1,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,    -1,   195,
     196,   197,   198,   199,   200,    -1,   202,   203,   204,   205,
     206,   207,   208,   209,   210,    -1,   212,    -1,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,    -1,    -1,
     226,   227,   228,   229,    -1,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,    -1,   280,   281,    -1,    -1,   284,   285,
     286,    -1,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,    -1,   323,   324,   325,
     326,   327,   328,   329,   330,    -1,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,    -1,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,    -1,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,    -1,   409,   410,    -1,    -1,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,    -1,    -1,   429,   430,   431,   432,   433,   434,    -1,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,    -1,    -1,   452,    -1,    -1,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,    -1,    -1,    -1,    -1,    -1,    -1,   483,   484,    -1,
      -1,    -1,    -1,    -1,   490,    -1,   492,    -1,    -1,    -1,
      -1,   497,    -1,   499,   500,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,   167,
      -1,   169,   170,   171,   172,   173,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,    -1,   202,   203,   204,   205,   206,   207,
     208,   209,   210,    -1,   212,    -1,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,    -1,    -1,   226,   227,
     228,   229,    -1,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,    -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,    -1,   323,   324,   325,   326,   327,
     328,   329,   330,    -1,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,    -1,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,    -1,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
      -1,   409,   410,    -1,    -1,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,    -1,
      -1,   429,   430,   431,   432,   433,   434,    -1,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,    -1,    -1,   452,    -1,    -1,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,    -1,
      -1,    -1,    -1,    -1,    -1,   483,   484,   485,    -1,    -1,
      -1,    -1,   490,    -1,   492,    -1,    -1,    -1,    -1,   497,
      -1,   499,   500,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    -1,    -1,    -1,    -1,    35,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,    -1,   159,
     160,   161,   162,    -1,   164,    -1,   166,   167,    -1,   169,
     170,   171,   172,   173,   174,    -1,   176,    -1,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,    -1,   195,   196,   197,   198,   199,
     200,    -1,   202,   203,   204,   205,   206,   207,   208,   209,
     210,    -1,   212,    -1,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,    -1,    -1,   226,   227,   228,   229,
      -1,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,    -1,
     280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,    -1,   323,   324,   325,   326,   327,   328,   329,
     330,    -1,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,    -1,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,    -1,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,    -1,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,    -1,   409,
     410,    -1,    -1,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,    -1,    -1,   429,
     430,   431,   432,   433,   434,    -1,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
      -1,    -1,   452,    -1,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,    -1,    -1,    -1,
      -1,    -1,    -1,   483,   484,    -1,    -1,    -1,    -1,    -1,
     490,    -1,   492,    -1,    -1,    -1,    -1,   497,    -1,   499,
     500,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,    -1,   159,   160,   161,
     162,    -1,   164,    -1,   166,   167,    -1,   169,   170,   171,
     172,   173,   174,    -1,   176,    -1,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,    -1,   195,   196,   197,   198,   199,   200,    -1,
     202,   203,   204,   205,   206,   207,   208,   209,   210,    -1,
     212,    -1,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,    -1,    -1,   226,   227,   228,   229,    -1,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,    -1,   280,   281,
      -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
      -1,   323,   324,   325,   326,   327,   328,   329,   330,    -1,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,    -1,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,    -1,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,    -1,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,    -1,   409,   410,    -1,
      -1,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,    -1,    -1,   429,   430,   431,
     432,   433,   434,    -1,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,   445,   446,   447,   448,   449,    -1,    -1,
     452,    -1,    -1,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,    -1,    -1,    -1,    -1,    -1,
      -1,   483,   484,    -1,    -1,    -1,    -1,    -1,   490,    -1,
     492,   493,    -1,    -1,    -1,   497,    -1,   499,   500,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,   167,    -1,   169,   170,   171,   172,   173,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
      -1,   195,   196,   197,   198,   199,   200,    -1,   202,   203,
     204,   205,   206,   207,   208,   209,   210,    -1,   212,    -1,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
      -1,    -1,   226,   227,   228,   229,    -1,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,    -1,   280,   281,    -1,    -1,
     284,   285,   286,    -1,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,    -1,   323,
     324,   325,   326,   327,   328,   329,   330,    -1,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
      -1,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,    -1,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,    -1,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,    -1,   409,   410,    -1,    -1,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,    -1,    -1,   429,   430,   431,   432,   433,
     434,    -1,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,    -1,    -1,   452,    -1,
      -1,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,    -1,    -1,    -1,    -1,    -1,    -1,   483,
     484,    -1,    -1,    -1,    -1,    -1,   490,    -1,   492,   493,
      -1,    -1,    -1,   497,    -1,   499,   500,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,    -1,   159,   160,   161,   162,    -1,   164,    -1,
     166,   167,    -1,   169,   170,   171,   172,   173,   174,    -1,
     176,    -1,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,    -1,   195,
     196,   197,   198,   199,   200,    -1,   202,   203,   204,   205,
     206,   207,   208,   209,   210,    -1,   212,    -1,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,    -1,    -1,
     226,   227,   228,   229,    -1,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,    -1,   280,   281,    -1,    -1,   284,   285,
     286,    -1,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,    -1,   323,   324,   325,
     326,   327,   328,   329,   330,    -1,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,    -1,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,    -1,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,    -1,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,    -1,   409,   410,    -1,    -1,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,    -1,    -1,   429,   430,   431,   432,   433,   434,    -1,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,    -1,    -1,   452,    -1,    -1,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,    -1,    -1,    -1,    -1,    -1,    -1,   483,   484,    -1,
      -1,    -1,    -1,    -1,   490,    -1,   492,    -1,    -1,    -1,
      -1,   497,    -1,   499,   500,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,   167,
     168,   169,   170,   171,   172,   173,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,    -1,   202,   203,   204,   205,   206,   207,
     208,   209,   210,    -1,   212,    -1,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,    -1,    -1,   226,   227,
     228,   229,    -1,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,    -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,    -1,   323,   324,   325,   326,   327,
     328,   329,   330,    -1,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,    -1,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,    -1,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
      -1,   409,   410,    -1,    -1,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,    -1,
      -1,   429,   430,   431,   432,   433,   434,    -1,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,    -1,    -1,   452,    -1,    -1,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,    -1,
      -1,    -1,    -1,    -1,    -1,   483,   484,    -1,    -1,    -1,
      -1,    -1,   490,    -1,   492,    -1,    -1,    -1,    -1,   497,
      -1,   499,   500,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    35,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,    -1,   159,
     160,   161,   162,    -1,   164,    -1,   166,   167,    -1,   169,
     170,   171,   172,   173,   174,    -1,   176,    -1,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,    -1,   195,   196,   197,   198,   199,
     200,    -1,   202,   203,   204,   205,   206,   207,   208,   209,
     210,    -1,   212,    -1,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,    -1,    -1,   226,   227,   228,   229,
      -1,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,    -1,
     280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,    -1,   323,   324,   325,   326,   327,   328,   329,
     330,    -1,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,    -1,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,    -1,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,    -1,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,    -1,   409,
     410,    -1,    -1,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,    -1,    -1,   429,
     430,   431,   432,   433,   434,    -1,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
      -1,    -1,   452,    -1,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,    -1,    -1,    -1,
      -1,    -1,    -1,   483,   484,    -1,    -1,    -1,    -1,    -1,
     490,    -1,   492,    -1,    -1,    -1,    -1,   497,    -1,   499,
     500,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,    -1,   159,   160,   161,
     162,    -1,   164,    -1,   166,   167,    -1,   169,   170,   171,
     172,   173,   174,    -1,   176,    -1,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,    -1,   195,   196,   197,   198,   199,   200,    -1,
     202,   203,   204,   205,   206,   207,   208,   209,   210,    -1,
     212,    -1,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,    -1,    -1,   226,   227,   228,   229,    -1,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,    -1,   280,   281,
      -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
      -1,   323,   324,   325,   326,   327,   328,   329,   330,    -1,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,    -1,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,    -1,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,    -1,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,    -1,   409,   410,    -1,
      -1,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,    -1,    -1,   429,   430,   431,
     432,   433,   434,    -1,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,   445,   446,   447,   448,   449,    -1,    -1,
     452,    -1,    -1,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,    -1,    -1,    -1,    -1,    -1,
      -1,   483,   484,    -1,    -1,    -1,    -1,    -1,   490,    -1,
     492,    -1,    -1,    -1,    -1,   497,    -1,   499,   500,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,   167,    -1,   169,   170,   171,   172,   173,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
      -1,   195,   196,   197,   198,   199,   200,    -1,   202,   203,
     204,   205,   206,   207,   208,   209,   210,    -1,   212,    -1,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
      -1,    -1,   226,   227,   228,   229,    -1,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,    -1,   280,   281,    -1,    -1,
     284,   285,   286,    -1,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,    -1,   323,
     324,   325,   326,   327,   328,   329,   330,    -1,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
      -1,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,    -1,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,    -1,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,    -1,   409,   410,    -1,    -1,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,    -1,    -1,   429,   430,   431,   432,   433,
     434,    -1,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,    -1,    -1,   452,    -1,
      -1,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,    -1,    -1,    -1,    -1,    -1,    -1,   483,
     484,    -1,    -1,    -1,    -1,    -1,   490,    -1,   492,    -1,
      -1,    -1,    -1,   497,    -1,   499,   500,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,    -1,   159,   160,   161,   162,    -1,   164,    -1,
     166,   167,    -1,   169,   170,   171,   172,   173,   174,    -1,
     176,    -1,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,    -1,   195,
     196,   197,   198,   199,   200,    -1,   202,   203,   204,   205,
     206,   207,   208,   209,   210,    -1,   212,    -1,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,    -1,    -1,
     226,   227,   228,   229,    -1,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,    -1,   280,   281,    -1,    -1,   284,   285,
     286,    -1,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,    -1,   323,   324,   325,
     326,   327,   328,   329,   330,    -1,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,    -1,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,    -1,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,    -1,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,    -1,   409,   410,    -1,    -1,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,    -1,    -1,   429,   430,   431,   432,   433,   434,    -1,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,    -1,    -1,   452,    -1,    -1,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,    -1,    -1,    -1,    -1,    -1,    -1,   483,   484,    -1,
      -1,    -1,    -1,    -1,   490,    -1,   492,    -1,    -1,    -1,
      -1,   497,    -1,   499,   500,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,   167,
      -1,   169,   170,   171,   172,   173,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,    -1,   202,   203,   204,   205,   206,   207,
     208,   209,   210,    -1,   212,    -1,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,    -1,    -1,   226,   227,
     228,   229,    -1,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,    -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,    -1,   323,   324,   325,   326,   327,
     328,   329,   330,    -1,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,    -1,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,    -1,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
      -1,   409,   410,    -1,    -1,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,    -1,
      -1,   429,   430,   431,   432,   433,   434,    -1,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,    -1,    -1,   452,    -1,    -1,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,    -1,
      -1,    -1,    -1,    -1,    -1,   483,   484,    -1,    -1,    -1,
      -1,    -1,   490,    -1,   492,    -1,    -1,    -1,    -1,   497,
      -1,   499,   500,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    35,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,    -1,   159,
     160,   161,   162,    -1,   164,    -1,   166,   167,    -1,   169,
     170,   171,   172,   173,   174,    -1,   176,    -1,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,    -1,   195,   196,   197,   198,   199,
     200,    -1,   202,   203,   204,   205,   206,   207,   208,   209,
     210,    -1,   212,    -1,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,    -1,    -1,   226,   227,   228,   229,
      -1,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,    -1,
     280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,    -1,   323,   324,   325,   326,   327,   328,   329,
     330,    -1,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,    -1,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,    -1,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,    -1,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,    -1,   409,
     410,    -1,    -1,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,    -1,    -1,   429,
     430,   431,   432,   433,   434,    -1,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,   445,   446,   447,   448,   449,
      -1,    -1,   452,    -1,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,    -1,    -1,    -1,
      -1,    -1,    -1,   483,   484,    -1,    -1,    -1,    -1,    -1,
     490,    -1,   492,    -1,    -1,    -1,    -1,   497,    -1,   499,
     500,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,    -1,   159,   160,   161,
     162,    -1,   164,    -1,   166,   167,    -1,   169,   170,   171,
     172,   173,   174,    -1,   176,    -1,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,    -1,   195,   196,   197,   198,   199,   200,    -1,
     202,   203,   204,   205,   206,   207,   208,   209,   210,    -1,
     212,    -1,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,    -1,    -1,   226,   227,   228,   229,    -1,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,    -1,   280,   281,
      -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
      -1,   323,   324,   325,   326,   327,   328,   329,   330,    -1,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,    -1,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,    -1,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,    -1,   398,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,    -1,   409,   410,    -1,
      -1,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,    -1,    -1,   429,   430,   431,
     432,   433,   434,    -1,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,   445,   446,   447,   448,   449,    -1,    -1,
     452,    -1,    -1,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,    -1,    -1,    -1,    -1,    -1,
      -1,   483,   484,    -1,    -1,    -1,    -1,    -1,   490,    -1,
     492,    -1,    -1,    -1,    -1,   497,    -1,   499,   500,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,   167,    -1,   169,   170,   171,   172,   173,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
      -1,   195,   196,   197,   198,   199,   200,    -1,   202,   203,
     204,   205,   206,   207,   208,   209,   210,    -1,   212,    -1,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
      -1,    -1,   226,   227,   228,   229,    -1,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,    -1,   280,   281,    -1,    -1,
     284,   285,   286,    -1,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,    -1,   323,
     324,   325,   326,   327,   328,   329,   330,    -1,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
      -1,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,    -1,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,    -1,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,    -1,   409,   410,    -1,    -1,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,    -1,    -1,   429,   430,   431,   432,   433,
     434,    -1,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,    -1,    -1,   452,    -1,
      -1,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,    -1,    -1,    -1,    -1,    -1,    -1,   483,
     484,    -1,    -1,    -1,    -1,    -1,   490,    -1,   492,    -1,
      -1,    -1,    -1,   497,    -1,   499,   500,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,    -1,   159,   160,   161,   162,    -1,   164,    -1,
     166,   167,    -1,   169,   170,   171,   172,   173,   174,    -1,
     176,    -1,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,    -1,   195,
     196,   197,   198,   199,   200,    -1,   202,   203,   204,   205,
     206,   207,   208,   209,   210,    -1,   212,    -1,   214,    -1,
      -1,   217,   218,   219,   220,   221,   222,   223,    -1,    -1,
     226,   227,   228,   229,    -1,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,    -1,   268,   269,    -1,   271,   272,   273,   274,   275,
     276,   277,   278,    -1,   280,   281,    -1,    -1,   284,   285,
     286,    -1,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,    -1,   323,   324,   325,
     326,   327,   328,   329,   330,    -1,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,    -1,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,    -1,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,    -1,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,    -1,   409,   410,    -1,    -1,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,    -1,    -1,   429,   430,   431,   432,   433,   434,    -1,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,    -1,    -1,   452,    -1,    -1,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,    -1,    -1,    -1,    -1,    -1,    -1,   483,   484,    -1,
      -1,    -1,    -1,    -1,   490,    -1,   492,    -1,    -1,    -1,
      -1,   497,    -1,   499,   500,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,   167,
      -1,   169,   170,   171,   172,   173,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,    -1,   202,   203,   204,   205,   206,   207,
     208,   209,   210,    -1,   212,    -1,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,    -1,    -1,   226,   227,
     228,   229,    -1,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,    -1,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,    -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,    -1,   323,   324,   325,   326,   327,
     328,   329,   330,    -1,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,    -1,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,    -1,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
      -1,   409,   410,    -1,    -1,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,    -1,
      -1,   429,   430,   431,   432,   433,   434,    -1,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,    -1,    -1,   452,    -1,    -1,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   483,   484,    -1,    -1,     3,
       4,     5,     6,     7,   492,     9,    10,    -1,    -1,    -1,
      -1,   499,   500,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,   167,    -1,   169,   170,   171,   172,   173,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
      -1,   195,   196,   197,   198,   199,   200,    -1,   202,   203,
     204,   205,   206,   207,   208,   209,   210,    -1,   212,    -1,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
      -1,    -1,   226,   227,   228,   229,    -1,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,    -1,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,    -1,   280,   281,    -1,    -1,
     284,   285,   286,    -1,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,    -1,   323,
     324,   325,   326,   327,   328,   329,   330,    -1,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
      -1,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,    -1,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,    -1,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,    -1,   409,   410,    -1,    -1,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,    -1,    -1,   429,   430,   431,   432,   433,
     434,    -1,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,   445,   446,   447,   448,   449,    -1,    -1,   452,    -1,
      -1,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   483,
     484,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   492,    -1,
      -1,    -1,    -1,    -1,    -1,   499,   500,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,    -1,   159,   160,   161,   162,    -1,   164,    -1,
     166,   167,    -1,   169,   170,   171,   172,   173,   174,    -1,
     176,    -1,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,    -1,   195,
     196,   197,   198,   199,   200,    -1,   202,   203,   204,   205,
     206,   207,   208,   209,   210,    -1,   212,    -1,   214,    -1,
     216,   217,   218,   219,   220,   221,   222,   223,    -1,    -1,
     226,   227,   228,   229,    -1,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,    -1,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,    -1,   280,   281,    -1,    -1,   284,   285,
     286,    -1,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,    -1,   323,   324,   325,
     326,   327,   328,   329,   330,    -1,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,    -1,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,    -1,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,    -1,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,    -1,   409,   410,    -1,    -1,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,    -1,    -1,   429,   430,   431,   432,   433,   434,    -1,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,   445,
     446,   447,   448,   449,    -1,    -1,   452,    -1,    -1,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   483,   484,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   492,    -1,    -1,    -1,
      -1,    -1,    -1,   499,   500,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      -1,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,    -1,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,   167,
      -1,   169,   170,   171,   172,    -1,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,    -1,   202,   203,   204,   205,   206,   207,
     208,   209,   210,    -1,   212,    -1,   214,    -1,    -1,   217,
     218,   219,   220,   221,   222,   223,    -1,    -1,   226,   227,
     228,    -1,    -1,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,    -1,
     268,   269,    -1,   271,   272,   273,   274,   275,   276,   277,
     278,    -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,    -1,   323,   324,   325,   326,   327,
     328,   329,   330,    -1,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,    -1,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,    -1,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
      -1,   409,   410,    -1,    -1,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,    -1,
      -1,   429,   430,   431,   432,   433,   434,    -1,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,    -1,    -1,   452,    -1,    -1,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   483,   484,     3,    -1,    -1,
      -1,    -1,   490,    -1,   492,    -1,    -1,    -1,    -1,   497,
      -1,   499,   500,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      36,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
      -1,   157,    -1,   159,   160,   161,   162,    -1,   164,    -1,
     166,    -1,    -1,   169,   170,   171,   172,    -1,   174,    -1,
     176,    -1,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,   192,   193,    -1,   195,
     196,   197,   198,   199,   200,    -1,   202,   203,   204,   205,
     206,   207,   208,   209,   210,    -1,   212,    -1,   214,    -1,
      -1,   217,   218,   219,   220,   221,   222,   223,    -1,    -1,
     226,   227,   228,    -1,    -1,   231,   232,   233,    -1,    -1,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,    -1,   268,   269,    -1,   271,    -1,   273,   274,   275,
     276,   277,   278,    -1,   280,   281,    -1,    -1,   284,   285,
     286,    -1,    -1,   289,   290,    -1,   292,    -1,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,    -1,   323,   324,   325,
     326,   327,   328,   329,   330,    -1,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,    -1,   365,
     366,   367,   368,   369,    -1,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,    -1,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,    -1,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,    -1,   409,   410,    -1,    -1,   413,   414,   415,
     416,   417,    -1,   419,   420,   421,   422,   423,   424,   425,
     426,    -1,    -1,   429,   430,   431,   432,   433,    -1,    -1,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,    -1,
     446,   447,   448,   449,    -1,    -1,   452,    -1,    -1,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
      -1,    -1,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   493,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,   167,    -1,   169,   170,
     171,   172,   173,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,    -1,   195,   196,   197,   198,   199,   200,
      -1,   202,   203,   204,   205,   206,   207,   208,   209,   210,
      -1,   212,    -1,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,    -1,   226,   227,   228,   229,    -1,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,    -1,   268,   269,   270,
     271,    -1,   273,   274,   275,   276,   277,   278,    -1,   280,
     281,    -1,   283,   284,   285,   286,    -1,    -1,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,    -1,   323,   324,   325,   326,   327,   328,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
      -1,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,    -1,   409,   410,
      -1,    -1,   413,   414,   415,   416,   417,    -1,   419,   420,
     421,   422,   423,   424,   425,   426,    -1,    -1,   429,   430,
     431,   432,   433,   434,    -1,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,   445,   446,   447,   448,   449,    -1,
      -1,   452,    -1,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,     3,   478,     5,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   492,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,    -1,
     157,    -1,   159,   160,   161,   162,    -1,   164,    -1,   166,
     167,    -1,   169,   170,   171,   172,   173,   174,    -1,   176,
      -1,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,    -1,   195,   196,
     197,   198,   199,   200,    -1,   202,   203,   204,   205,   206,
     207,   208,   209,   210,    -1,   212,    -1,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,    -1,   226,
     227,   228,   229,    -1,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
      -1,   268,   269,   270,   271,    -1,   273,   274,   275,   276,
     277,   278,    -1,   280,   281,    -1,   283,   284,   285,   286,
      -1,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,    -1,   323,   324,   325,   326,
     327,   328,   329,   330,    -1,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,    -1,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,    -1,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
      -1,   398,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,    -1,   409,   410,    -1,    -1,   413,   414,   415,   416,
     417,    -1,   419,   420,   421,   422,   423,   424,   425,   426,
      -1,    -1,   429,   430,   431,   432,   433,   434,    -1,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,   445,   446,
     447,   448,   449,    -1,    -1,   452,    -1,    -1,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   492,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,    -1,   157,    -1,   159,   160,   161,   162,
      -1,   164,    -1,   166,   167,    -1,   169,   170,   171,   172,
     173,   174,    -1,   176,    -1,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,    -1,   195,   196,   197,   198,   199,   200,    -1,   202,
     203,   204,   205,   206,   207,   208,   209,   210,    -1,   212,
      -1,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,    -1,    -1,   226,   227,   228,   229,    -1,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,    -1,   268,   269,   270,   271,    -1,
     273,   274,   275,   276,   277,   278,    -1,   280,   281,    -1,
      -1,   284,   285,   286,    -1,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,   319,   320,   321,    -1,
     323,   324,   325,   326,   327,   328,   329,   330,    -1,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,    -1,   398,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,    -1,   409,   410,    -1,    -1,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,    -1,    -1,   429,   430,   431,   432,
     433,   434,    -1,   436,   437,   438,   439,   440,   441,   442,
      -1,   444,   445,   446,   447,   448,   449,    -1,    -1,   452,
      -1,    -1,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   492,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,    -1,   157,    -1,
     159,   160,   161,   162,    -1,   164,    -1,   166,   167,    -1,
     169,   170,   171,   172,   173,   174,    -1,   176,    -1,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,    -1,   195,   196,   197,   198,
     199,   200,    -1,   202,   203,   204,   205,   206,   207,   208,
     209,   210,    -1,   212,    -1,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,    -1,    -1,   226,   227,   228,
     229,    -1,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,    -1,   268,
     269,   270,   271,    -1,   273,   274,   275,   276,   277,   278,
      -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,    -1,   323,   324,   325,   326,   327,   328,
     329,   330,    -1,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,    -1,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,    -1,   398,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,    -1,
     409,   410,    -1,    -1,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,    -1,    -1,
     429,   430,   431,   432,   433,   434,    -1,   436,   437,   438,
     439,   440,   441,   442,    -1,   444,   445,   446,   447,   448,
     449,    -1,    -1,   452,    -1,    -1,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,     3,     4,
       5,    -1,    -1,    -1,     9,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   492,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    81,    -1,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    -1,
      95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,    -1,   159,   160,   161,   162,    -1,   164,
      -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,
      -1,   176,    -1,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,   192,   193,    -1,
     195,   196,   197,   198,   199,   200,    -1,   202,    -1,   204,
     205,   206,   207,   208,   209,   210,    -1,   212,    -1,   214,
      -1,    -1,   217,    -1,   219,   220,   221,   222,   223,    -1,
      -1,   226,    -1,   228,    -1,    -1,   231,   232,   233,    -1,
      -1,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,    -1,   262,   263,   264,
     265,   266,    -1,   268,   269,    -1,   271,    -1,   273,   274,
     275,   276,   277,   278,    -1,   280,   281,   282,    -1,   284,
     285,   286,    -1,    -1,   289,   290,    -1,   292,    -1,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,    -1,   323,   324,
     325,   326,   327,   328,   329,   330,    -1,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
      -1,   346,   347,    -1,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,    -1,
     365,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,    -1,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,    -1,   398,   399,    -1,   401,    -1,   403,   404,
     405,   406,   407,    -1,   409,   410,    -1,    -1,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,    -1,    -1,   429,   430,   431,   432,   433,    -1,
      -1,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
      -1,   446,   447,   448,   449,    -1,    -1,   452,    -1,    -1,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,     3,    -1,    -1,    -1,    -1,    -1,   483,   484,
     485,    -1,    -1,    -1,    -1,    -1,    -1,   492,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      31,    32,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,   188,    -1,   190,
     191,   192,   193,    -1,   195,   196,   197,   198,   199,   200,
      -1,   202,    -1,   204,   205,   206,   207,   208,   209,   210,
      -1,   212,    -1,   214,    -1,    -1,   217,    -1,   219,   220,
     221,   222,   223,    -1,    -1,   226,    -1,   228,    -1,    -1,
     231,   232,   233,    -1,    -1,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
      -1,   262,   263,   264,   265,   266,    -1,   268,   269,    -1,
     271,    -1,   273,   274,   275,   276,   277,   278,    -1,   280,
     281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,
      -1,   292,    -1,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,    -1,   323,   324,   325,   326,   327,   328,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,    -1,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
      -1,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
     401,    -1,   403,   404,   405,   406,   407,    -1,   409,   410,
      -1,    -1,   413,   414,   415,   416,   417,    -1,   419,   420,
     421,   422,   423,   424,   425,   426,    -1,    -1,   429,   430,
     431,   432,   433,    -1,    -1,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,    -1,   446,   447,   448,   449,    -1,
      -1,   452,    -1,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,     3,   478,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   492,    19,    20,    21,    22,    23,    24,    25,    26,
      27,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    -1,    95,    96,
      97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,    -1,
     157,    -1,   159,   160,   161,   162,    -1,   164,    -1,   166,
      -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,
      -1,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,   192,   193,    -1,   195,   196,
     197,   198,   199,   200,    -1,   202,    -1,   204,   205,   206,
     207,   208,   209,   210,    -1,   212,    -1,   214,    -1,    -1,
     217,    -1,   219,   220,   221,   222,   223,    -1,    -1,   226,
      -1,   228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,    -1,   262,   263,   264,   265,   266,
      -1,   268,   269,    -1,   271,    -1,   273,   274,   275,   276,
     277,   278,    -1,   280,   281,    -1,    -1,   284,   285,   286,
      -1,    -1,   289,   290,    -1,   292,    -1,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,    -1,   323,   324,   325,   326,
     327,   328,   329,   330,    -1,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,    -1,   346,
     347,    -1,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,    -1,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
      -1,   398,   399,   400,   401,    -1,   403,   404,   405,   406,
     407,    -1,   409,   410,    -1,    -1,   413,   414,   415,   416,
     417,    -1,   419,   420,   421,   422,   423,   424,   425,   426,
      -1,    -1,   429,   430,   431,   432,   433,    -1,    -1,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,    -1,   446,
     447,   448,   449,    -1,    -1,   452,    -1,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
       3,   478,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   492,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    81,    -1,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,    -1,   157,    -1,   159,   160,   161,   162,
      -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,
      -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,   192,
     193,    -1,   195,   196,   197,   198,   199,   200,    -1,   202,
      -1,   204,   205,   206,   207,   208,   209,   210,    -1,   212,
      -1,   214,    -1,    -1,   217,    -1,   219,   220,   221,   222,
     223,    -1,    -1,   226,    -1,   228,    -1,    -1,   231,   232,
     233,    -1,    -1,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,    -1,   262,
     263,   264,   265,   266,    -1,   268,   269,    -1,   271,    -1,
     273,   274,   275,   276,   277,   278,    -1,   280,   281,    -1,
      -1,   284,   285,   286,    -1,    -1,   289,   290,    -1,   292,
      -1,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,   319,   320,   321,    -1,
     323,   324,   325,   326,   327,   328,   329,   330,    -1,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,    -1,   346,   347,    -1,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,    -1,   398,   399,   400,   401,    -1,
     403,   404,   405,   406,   407,    -1,   409,   410,    -1,    -1,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,    -1,    -1,   429,   430,   431,   432,
     433,    -1,    -1,   436,   437,   438,   439,   440,   441,   442,
      -1,   444,    -1,   446,   447,   448,   449,    -1,    -1,   452,
      -1,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,     3,   478,     5,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   492,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    81,    -1,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    -1,    95,    96,    97,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,    -1,   157,    -1,
     159,   160,   161,   162,    -1,   164,    -1,   166,    -1,    -1,
      -1,   170,   171,   172,    -1,   174,    -1,   176,    -1,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,   192,   193,    -1,   195,   196,   197,   198,
     199,   200,    -1,   202,    -1,   204,   205,   206,   207,   208,
     209,   210,    -1,   212,    -1,   214,    -1,    -1,   217,    -1,
     219,   220,   221,   222,   223,    -1,    -1,   226,    -1,   228,
      -1,    -1,   231,   232,   233,    -1,    -1,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,    -1,   262,   263,   264,   265,   266,    -1,   268,
     269,    -1,   271,    -1,   273,   274,   275,   276,   277,   278,
      -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,
     289,   290,    -1,   292,    -1,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,    -1,   323,   324,   325,   326,   327,   328,
     329,   330,    -1,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,    -1,   346,   347,    -1,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,    -1,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,    -1,   398,
     399,    -1,   401,    -1,   403,   404,   405,   406,   407,    -1,
     409,   410,    -1,    -1,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,    -1,    -1,
     429,   430,   431,   432,   433,    -1,    -1,   436,   437,   438,
     439,   440,   441,   442,    -1,   444,    -1,   446,   447,   448,
     449,    -1,    -1,   452,    -1,    -1,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,    -1,     3,    -1,
       5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   492,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    81,    -1,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    -1,
      95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,    -1,   157,    -1,   159,   160,   161,   162,    -1,   164,
      -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,
      -1,   176,    -1,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,   192,   193,    -1,
     195,   196,   197,   198,   199,   200,    -1,   202,    -1,   204,
     205,   206,   207,   208,   209,   210,    -1,   212,    -1,   214,
      -1,    -1,   217,    -1,   219,   220,   221,   222,   223,    -1,
      -1,   226,    -1,   228,    -1,    -1,   231,   232,   233,    -1,
      -1,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,    -1,   262,   263,   264,
     265,   266,    -1,   268,   269,    -1,   271,    -1,   273,   274,
     275,   276,   277,   278,    -1,   280,   281,    -1,    -1,   284,
     285,   286,    -1,    -1,   289,   290,    -1,   292,    -1,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,    -1,   323,   324,
     325,   326,   327,   328,   329,   330,    -1,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
      -1,   346,   347,    -1,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,    -1,
     365,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,    -1,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,    -1,   398,   399,    -1,   401,    -1,   403,   404,
     405,   406,   407,    -1,   409,   410,    -1,    -1,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,   426,    -1,    -1,   429,   430,   431,   432,   433,    -1,
      -1,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
      -1,   446,   447,   448,   449,    -1,    -1,   452,    -1,    -1,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,    -1,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   492,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,   188,    -1,   190,
     191,   192,   193,    -1,   195,   196,   197,   198,   199,   200,
      -1,   202,    -1,   204,   205,   206,   207,   208,   209,   210,
      -1,   212,    -1,   214,    -1,    -1,   217,    -1,   219,   220,
     221,   222,   223,    -1,    -1,   226,    -1,   228,    -1,    -1,
     231,   232,   233,    -1,    -1,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
      -1,   262,   263,   264,   265,   266,    -1,   268,   269,    -1,
     271,    -1,   273,   274,   275,   276,   277,   278,    -1,   280,
     281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,
      -1,   292,    -1,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,    -1,   323,   324,   325,   326,   327,   328,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,    -1,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
      -1,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,    -1,   398,   399,    -1,
     401,    -1,   403,   404,   405,   406,   407,    -1,   409,   410,
      -1,    -1,   413,   414,   415,   416,   417,    -1,   419,   420,
     421,   422,   423,   424,   425,   426,    -1,    -1,   429,   430,
     431,   432,   433,    -1,    -1,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,    -1,   446,   447,   448,   449,    -1,
      -1,   452,    -1,    -1,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    -1,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   492,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    -1,    95,    96,
      97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,    -1,
     157,    -1,   159,   160,   161,   162,    -1,   164,    -1,   166,
      -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,
      -1,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,   192,   193,    -1,   195,   196,
     197,   198,   199,   200,    -1,   202,    -1,   204,   205,   206,
     207,   208,   209,   210,    -1,   212,    -1,   214,    -1,    -1,
     217,    -1,   219,   220,   221,   222,   223,    -1,    -1,   226,
      -1,   228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,    -1,   262,   263,   264,   265,   266,
      -1,   268,   269,    -1,   271,    -1,   273,   274,   275,   276,
     277,   278,    -1,   280,   281,    -1,    -1,   284,   285,   286,
      -1,    -1,   289,   290,    -1,   292,    -1,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,    -1,   323,   324,   325,   326,
     327,   328,   329,   330,    -1,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,    -1,   346,
     347,    -1,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,    -1,   365,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,    -1,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
      -1,   398,   399,    -1,   401,    -1,   403,   404,   405,   406,
     407,    -1,   409,   410,    -1,    -1,   413,   414,   415,   416,
     417,    -1,   419,   420,   421,   422,   423,   424,   425,   426,
      -1,    -1,   429,   430,   431,   432,   433,    -1,    -1,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,    -1,   446,
     447,   448,   449,    -1,    -1,   452,    -1,    -1,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,    -1,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   492,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    81,    -1,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,    -1,   157,    -1,   159,   160,   161,   162,
      -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,
      -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,   192,
     193,    -1,   195,   196,   197,   198,   199,   200,    -1,   202,
      -1,   204,   205,   206,   207,   208,   209,   210,    -1,   212,
      -1,   214,    -1,    -1,   217,    -1,   219,   220,   221,   222,
     223,    -1,    -1,   226,    -1,   228,    -1,    -1,   231,   232,
     233,    -1,    -1,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,    -1,   262,
     263,   264,   265,   266,    -1,   268,   269,    -1,   271,    -1,
     273,   274,   275,   276,   277,   278,    -1,   280,   281,    -1,
      -1,   284,   285,   286,    -1,    -1,   289,   290,    -1,   292,
      -1,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,   319,   320,   321,    -1,
     323,   324,   325,   326,   327,   328,   329,   330,    -1,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,    -1,   346,   347,    -1,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,    -1,   398,   399,    -1,   401,    -1,
     403,   404,   405,   406,   407,    -1,   409,   410,    -1,    -1,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,    -1,    -1,   429,   430,   431,   432,
     433,    -1,    -1,   436,   437,   438,   439,   440,   441,   442,
      -1,   444,    -1,   446,   447,   448,   449,    -1,    -1,   452,
      -1,    -1,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,    -1,    -1,    -1,    -1,     3,     4,     5,
      -1,    -1,     8,     9,    -1,    -1,    -1,    -1,    -1,   492,
      16,    17,    18,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    31,    32,    33,    34,    35,
      36,    37,    38,    39,    40,    41,    42,    43,    44,    45,
      46,    47,    -1,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    -1,    73,    74,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      86,    87,    88,    89,    90,    91,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
     146,   147,   148,   149,    -1,   151,   152,   153,   154,    -1,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,    -1,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,    -1,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,    -1,   291,   292,   293,    -1,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,    -1,   309,   310,    -1,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,    -1,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,    -1,
     416,    -1,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,    -1,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   472,   473,   474,   475,
      -1,     3,    -1,   479,   480,   481,     8,   483,   484,   485,
     486,   487,   488,    -1,    16,    17,    18,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,    -1,   157,    -1,   159,   160,   161,
     162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,
     172,    -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
     192,   193,    -1,   195,   196,   197,   198,   199,   200,    -1,
     202,    -1,   204,   205,   206,   207,   208,   209,   210,    -1,
     212,    -1,   214,    -1,    -1,   217,    -1,   219,   220,   221,
     222,   223,    -1,    -1,   226,    -1,   228,    -1,    -1,   231,
     232,   233,    -1,    -1,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,    -1,
     262,   263,   264,   265,   266,    -1,   268,   269,    -1,   271,
      -1,   273,   274,   275,   276,   277,   278,    -1,   280,   281,
      -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,    -1,
     292,    -1,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
      -1,   323,   324,   325,   326,   327,   328,   329,   330,    -1,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,    -1,   346,   347,    -1,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,    -1,   365,   366,   367,   368,   369,    -1,   371,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,    -1,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,    -1,   398,   399,    -1,   401,
      -1,   403,   404,   405,   406,   407,    -1,   409,   410,    -1,
      -1,   413,   414,   415,   416,   417,    -1,   419,   420,   421,
     422,   423,   424,   425,   426,    -1,    -1,   429,   430,   431,
     432,   433,    -1,    -1,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,    -1,   446,   447,   448,   449,    -1,    -1,
     452,    -1,    -1,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,    -1,    -1,    -1,   479,   480,   481,
      -1,   483,   484,   485,   486,   487,   488,     3,    -1,    -1,
      -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    -1,
      16,    17,    18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    -1,    -1,
      36,     8,    -1,    -1,    11,    41,    -1,    -1,    -1,    16,
      17,    18,    48,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    -1,    -1,    36,
      -1,    -1,    -1,    -1,    41,     8,    -1,    73,    11,    -1,
      -1,    48,    -1,    16,    17,    18,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,
      33,    -1,    16,    17,    18,    -1,    73,    -1,    41,    -1,
      -1,    -1,    -1,    -1,    -1,    48,    -1,    -1,    -1,    33,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    41,    -1,    -1,
      -1,    -1,    -1,    -1,    48,    -1,    -1,    -1,    -1,    -1,
      73,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    -1,
      16,    17,    18,    -1,    -1,    -1,    -1,    -1,    -1,    73,
      -1,     8,    -1,    -1,    11,    -1,    -1,    33,    -1,    16,
      17,    18,    -1,    -1,    -1,    41,    -1,   173,    -1,    -1,
      -1,    -1,    48,    -1,    -1,    -1,    33,    -1,    -1,    -1,
      -1,    -1,    -1,   189,    41,    -1,    -1,    -1,   194,    -1,
      -1,    48,    -1,    -1,    -1,    -1,   173,    73,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   215,
     216,    -1,   189,    -1,    -1,    -1,    73,   194,    -1,    -1,
      -1,    -1,    -1,   229,    -1,    -1,    -1,    -1,    -1,    -1,
     173,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   215,   216,
      -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,    -1,   173,
      -1,   194,   229,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   267,    -1,    -1,   270,   189,    -1,    -1,    -1,    -1,
     194,    -1,   215,   216,    -1,    -1,    -1,    -1,   284,    -1,
      -1,   287,    -1,    -1,    -1,    -1,   229,    -1,    -1,    -1,
     267,   215,   216,   270,    -1,    -1,    -1,   173,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   229,    -1,   284,    -1,    -1,
     287,    -1,    -1,   189,    -1,    -1,   173,    -1,   194,    -1,
      -1,    -1,    -1,    -1,   267,    -1,    -1,   270,    -1,    -1,
      -1,    -1,   189,    -1,    -1,    -1,    -1,   194,    -1,   215,
     216,   284,    -1,   267,   287,    -1,   270,    -1,    -1,    -1,
      -1,    -1,    -1,   229,    -1,    -1,    -1,    -1,   215,   216,
     284,    -1,    -1,   287,    -1,    -1,    -1,    -1,    -1,    -1,
     376,    -1,   229,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   267,    -1,    -1,   270,    -1,    -1,    -1,    -1,   376,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,    -1,
     267,   287,    -1,   270,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,    -1,    -1,
     287,    -1,     8,   376,    -1,    11,    -1,    -1,    -1,    -1,
      16,    17,    18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   376,    -1,    -1,    -1,    -1,    33,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,
     476,    -1,    48,   479,   480,   481,    -1,   483,   484,   485,
     486,   487,   488,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,   476,
     376,    -1,   479,   480,   481,    -1,   483,   484,   485,   486,
     487,   488,    -1,    -1,     8,    -1,   493,    11,    -1,   376,
      -1,    -1,    16,    17,    18,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   476,    -1,    -1,   479,   480,   481,    33,
     483,   484,   485,   486,   487,   488,    -1,    41,    -1,    -1,
     493,    -1,   476,    -1,    48,   479,   480,   481,    -1,   483,
     484,   485,   486,   487,   488,    -1,    -1,    -1,    -1,   493,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    73,
      -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    -1,    16,
      17,    18,    -1,    -1,    -1,    -1,    -1,   173,    -1,    -1,
     476,    -1,    -1,   479,   480,   481,    33,   483,   484,   485,
     486,   487,   488,   189,    41,    -1,    -1,   493,   194,   476,
      -1,    48,   479,   480,   481,    -1,   483,   484,   485,   486,
     487,   488,    -1,    -1,    -1,    -1,   493,    -1,    -1,   215,
     216,    -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,    -1,
      -1,    -1,    -1,   229,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,
      -1,    16,    17,    18,    -1,    -1,    -1,    -1,    -1,   173,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    -1,
      -1,   267,    -1,    -1,   270,   189,    41,    -1,    -1,    -1,
     194,    -1,    -1,    48,    -1,    -1,    -1,    -1,   284,    -1,
      -1,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   215,   216,    -1,    -1,    -1,    -1,    -1,    73,    -1,
      -1,    -1,    -1,    -1,    -1,   229,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   173,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   189,    -1,    -1,    -1,    -1,   194,    -1,    -1,
      -1,    -1,    -1,   267,    -1,    -1,   270,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   215,   216,
     284,    -1,    -1,   287,    -1,    -1,    -1,    -1,    -1,    -1,
     376,    -1,   229,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,
      -1,    -1,    16,    17,    18,    -1,    -1,    -1,   173,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,
     267,    -1,    -1,   270,   189,    -1,    -1,    41,    -1,   194,
      -1,    -1,    -1,    -1,    48,    -1,    -1,   284,    -1,    -1,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     215,   216,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    73,
      -1,    -1,   376,    -1,   229,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     476,    -1,    -1,   479,   480,   481,    -1,   483,   484,   485,
     486,   487,   488,    -1,    -1,    -1,    -1,   493,    -1,    -1,
      -1,    -1,   267,    -1,    -1,   270,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,   284,
      11,    -1,   287,    -1,    -1,    16,    17,    18,    -1,   376,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    -1,    -1,     8,    -1,    -1,    11,    -1,
      41,    -1,    -1,    16,    17,    18,    -1,    48,    -1,   173,
      -1,    -1,   476,    -1,    -1,   479,   480,   481,    -1,   483,
     484,   485,   486,   487,   488,   189,    -1,    -1,    41,   493,
     194,    -1,    73,    -1,     8,    48,    -1,    11,    -1,    -1,
      -1,    -1,    16,    17,    18,    -1,    -1,    -1,    -1,    -1,
      -1,   215,   216,    -1,    -1,    -1,    -1,    -1,    -1,    33,
      73,   376,    -1,    -1,    -1,   229,    -1,    41,    -1,    -1,
      -1,    -1,    -1,    -1,    48,    -1,    -1,    -1,    -1,   476,
      -1,    -1,   479,   480,   481,    -1,   483,   484,   485,   486,
     487,   488,    -1,    -1,    -1,    -1,   493,    -1,    -1,    73,
      -1,    -1,    -1,   267,    -1,    -1,   270,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     284,    -1,    -1,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   173,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,
      -1,    -1,    -1,   194,    -1,    -1,    -1,    -1,    -1,    -1,
     173,   476,    -1,    -1,   479,   480,   481,    -1,   483,   484,
     485,   486,   487,   488,   215,   216,   189,    -1,   493,    -1,
      -1,   194,    -1,    -1,    -1,    -1,    -1,    -1,   229,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   173,
      -1,    -1,   215,   216,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   376,    -1,    -1,   189,   229,    -1,    -1,    -1,
     194,    -1,    -1,    -1,    -1,    -1,   267,    -1,    -1,   270,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   215,   216,   284,    -1,    -1,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   229,    -1,   270,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   284,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   267,    -1,    -1,   270,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     284,    -1,   476,   287,    -1,   479,   480,   481,    -1,   483,
     484,   485,   486,   487,   488,    -1,    -1,    -1,    -1,   493,
      -1,    -1,    -1,    -1,    -1,   376,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   376,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   376,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   476,    -1,    -1,   479,   480,
     481,    -1,   483,   484,   485,   486,   487,   488,    -1,    -1,
      -1,    -1,   493,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   476,    -1,    -1,   479,   480,   481,    -1,
     483,   484,   485,   486,   487,   488,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   476,     3,    -1,   479,   480,   481,    -1,   483,
     484,   485,   486,   487,   488,    -1,    -1,   491,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    33,    34,    35,    36,    37,    38,    39,
      40,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    86,    87,    88,    89,
      90,    91,    92,    93,    -1,    95,    96,    97,    98,    99,
     100,    -1,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   129,
     130,   131,   132,   133,   134,   135,   136,   137,   138,   139,
     140,   141,   142,   143,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,    -1,   168,    -1,
     170,   171,   172,    -1,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,    -1,   204,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   214,    -1,    -1,   217,    -1,   219,
     220,   221,   222,   223,   224,   225,   226,    -1,   228,    -1,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,    -1,   262,   263,   264,   265,   266,   267,   268,   269,
      -1,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,    -1,   292,    -1,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,    -1,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,    -1,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,    -1,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   485,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    -1,    95,    96,
      97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,    -1,
     157,    -1,   159,   160,   161,   162,    -1,   164,    -1,   166,
      -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,
      -1,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,   192,   193,    -1,   195,   196,
     197,   198,   199,   200,    -1,   202,    -1,   204,   205,   206,
     207,   208,   209,   210,    -1,   212,    -1,   214,    -1,    -1,
     217,    -1,   219,   220,   221,   222,   223,    -1,    -1,   226,
      -1,   228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,    -1,   262,   263,   264,   265,   266,
      -1,   268,   269,    -1,   271,    -1,   273,   274,   275,   276,
     277,   278,    -1,   280,   281,    -1,    -1,   284,   285,   286,
      -1,    -1,   289,   290,    -1,   292,    -1,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,    -1,   323,   324,   325,   326,
     327,   328,   329,   330,    -1,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,    -1,   346,
     347,    -1,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,    -1,   365,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,    -1,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
      -1,   398,   399,    -1,   401,    -1,   403,   404,   405,   406,
     407,    -1,   409,   410,    -1,    -1,   413,   414,   415,   416,
     417,    -1,   419,   420,   421,   422,   423,   424,   425,   426,
      -1,    -1,   429,   430,   431,   432,   433,    -1,    -1,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,    -1,   446,
     447,   448,   449,    -1,    -1,   452,    -1,    -1,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,     3,
       4,     5,    -1,    -1,    -1,     9,    -1,    -1,   485,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,   192,   193,
      -1,   195,   196,   197,   198,   199,   200,    -1,   202,    -1,
     204,   205,   206,   207,   208,   209,   210,    -1,   212,    -1,
     214,    -1,    -1,   217,    -1,   219,   220,   221,   222,   223,
      -1,    -1,   226,    -1,   228,    -1,    -1,   231,   232,   233,
      -1,    -1,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,    -1,   262,   263,
     264,   265,   266,    -1,   268,   269,    -1,   271,    -1,   273,
     274,   275,   276,   277,   278,    -1,   280,   281,   282,    -1,
     284,   285,   286,    -1,    -1,   289,   290,    -1,   292,    -1,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,    -1,   323,
     324,   325,   326,   327,   328,   329,   330,    -1,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,    -1,   346,   347,    -1,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
      -1,   365,   366,   367,   368,   369,    -1,   371,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,    -1,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,    -1,   398,   399,    -1,   401,    -1,   403,
     404,   405,   406,   407,    -1,   409,   410,    -1,    -1,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,    -1,    -1,   429,   430,   431,   432,   433,
      -1,    -1,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,    -1,   446,   447,   448,   449,    -1,    -1,   452,    -1,
      -1,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,     3,     4,     5,    -1,    -1,    -1,     9,   483,
     484,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,   188,    -1,   190,
     191,   192,   193,    -1,   195,   196,   197,   198,   199,   200,
      -1,   202,    -1,   204,   205,   206,   207,   208,   209,   210,
      -1,   212,    -1,   214,    -1,    -1,   217,    -1,   219,   220,
     221,   222,   223,    -1,    -1,   226,    -1,   228,    -1,    -1,
     231,   232,   233,    -1,    -1,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
      -1,   262,   263,   264,   265,   266,    -1,   268,   269,    -1,
     271,    -1,   273,   274,   275,   276,   277,   278,    -1,   280,
     281,   282,    -1,   284,   285,   286,    -1,    -1,   289,   290,
      -1,   292,    -1,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,    -1,   323,   324,   325,   326,   327,   328,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,    -1,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
      -1,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,    -1,   398,   399,    -1,
     401,    -1,   403,   404,   405,   406,   407,    -1,   409,   410,
      -1,    -1,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,    -1,    -1,   429,   430,
     431,   432,   433,    -1,    -1,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,    -1,   446,   447,   448,   449,    -1,
      -1,   452,    -1,    -1,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,     3,     4,     5,    -1,    -1,
      -1,     9,   483,   484,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,    -1,
      -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,    -1,   202,    -1,   204,   205,   206,   207,
     208,   209,   210,    -1,   212,    -1,   214,    -1,    -1,   217,
      -1,   219,   220,   221,   222,   223,    -1,    -1,   226,    -1,
     228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,    -1,   262,   263,   264,   265,   266,    -1,
     268,   269,    -1,   271,    -1,   273,   274,   275,   276,   277,
     278,    -1,   280,   281,   282,    -1,   284,   285,   286,    -1,
      -1,   289,   290,    -1,   292,    -1,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,    -1,   323,   324,   325,   326,   327,
     328,   329,   330,    -1,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,    -1,   346,   347,
      -1,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,    -1,   371,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,    -1,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,    -1,
     398,   399,    -1,   401,    -1,   403,   404,   405,   406,   407,
      -1,   409,   410,    -1,    -1,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,    -1,
      -1,   429,   430,   431,   432,   433,    -1,    -1,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,    -1,   446,   447,
     448,   449,    -1,    -1,   452,    -1,    -1,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,    -1,     8,
      -1,    -1,    11,    -1,    -1,   483,   484,    16,    17,    18,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,
      11,    -1,    -1,    -1,    33,    16,    17,    18,    37,    -1,
      -1,    -1,    41,    -1,    -1,     8,    -1,    -1,    11,    48,
      -1,    -1,    33,    16,    17,    18,    -1,    -1,    -1,    -1,
      41,    -1,    -1,    -1,    -1,    -1,    -1,    48,    -1,    -1,
      33,    -1,    -1,     8,    73,    -1,    11,    -1,    41,    -1,
      -1,    16,    17,    18,    -1,    48,    -1,    -1,    -1,    -1,
      -1,    -1,    73,    -1,    -1,    -1,    -1,    -1,    33,    -1,
      -1,    36,    -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,
      73,    -1,    -1,    48,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   124,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,
      -1,    11,    -1,    -1,    -1,    -1,    16,    17,    18,    -1,
      -1,    -1,    -1,    -1,   173,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   163,    33,    -1,    -1,    -1,   168,    -1,    -1,
     189,    41,   173,    -1,    -1,   194,    -1,    -1,    48,   162,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,
     173,    -1,    -1,   194,    -1,    -1,   215,   216,    -1,    -1,
      -1,    -1,    -1,    73,    -1,    -1,   189,    -1,    -1,    -1,
     229,   194,    -1,    -1,   215,   216,    -1,    -1,   173,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   229,    -1,
      -1,    -1,   215,   216,   189,    -1,    -1,    -1,    -1,   194,
      -1,    -1,    -1,    -1,    -1,    -1,   229,    -1,   267,    -1,
      -1,   270,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     215,   216,    -1,    -1,    -1,   284,   267,    -1,   287,   270,
      -1,    -1,    -1,    -1,   229,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   284,   267,    -1,   287,   270,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   284,    -1,   173,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   267,    -1,    -1,   270,    -1,    -1,    -1,   189,
      -1,    -1,    -1,    -1,   194,    -1,    -1,   310,    -1,   284,
      -1,    -1,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   215,   216,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   376,    -1,   229,
      -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    -1,
      16,    17,    18,    -1,    -1,   376,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    -1,    -1,
      36,    -1,    -1,   376,    -1,    41,    -1,   267,    -1,    -1,
     270,    -1,    48,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   284,    -1,   435,   287,    -1,    -1,
      -1,   376,    -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   305,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   476,    -1,    -1,
     479,   480,   481,    -1,   483,   484,   485,   486,   487,   488,
      -1,    -1,    -1,    -1,    -1,   476,    -1,    -1,   479,   480,
     481,    -1,   483,   484,   485,   486,   487,   488,    -1,    -1,
      -1,    -1,    -1,   476,    -1,    -1,   479,   480,   481,    -1,
     483,   484,   485,   486,   487,   488,   376,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   476,    -1,    -1,   479,   480,   481,   173,   483,   484,
     485,   486,   487,   488,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,     8,   189,    -1,    11,    -1,    -1,   194,    -1,
      16,    17,    18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    -1,   215,
     216,    -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,
      -1,    -1,    48,   229,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,
      -1,    -1,    -1,    16,    17,    18,   476,    73,    -1,   479,
     480,   481,    -1,   483,   484,   485,   486,   487,   488,    -1,
      33,   267,    -1,    36,   270,    -1,    -1,    -1,    41,    -1,
      -1,    -1,    -1,    -1,    -1,    48,    -1,    -1,   284,    -1,
      -1,   287,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,
      -1,    16,    17,    18,    -1,    -1,    -1,    -1,    -1,    -1,
      73,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,
      -1,    -1,    -1,    48,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    -1,    16,
      17,    18,   168,    -1,    -1,    -1,    -1,   173,    73,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    -1,    -1,    36,
      -1,    -1,    -1,   189,    41,    -1,    -1,    -1,   194,    -1,
     376,    48,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   215,
     216,    -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,    -1,
     173,    -1,    -1,   229,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,    -1,    -1,
      -1,   194,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   267,   215,   216,   270,    -1,    -1,    -1,   173,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   229,    -1,   284,    -1,
      -1,   287,    -1,    -1,   189,    -1,    -1,    -1,    -1,   194,
     476,    -1,    -1,   479,   480,   481,    -1,   483,   484,   485,
     486,   487,   488,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     215,   216,    -1,    -1,   267,    -1,   173,   270,    -1,    -1,
      -1,    -1,    -1,    -1,   229,    -1,    -1,    -1,    -1,    -1,
      -1,   284,   189,    -1,   287,     8,    -1,   194,    11,    -1,
      -1,    -1,    -1,    16,    17,    18,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   215,   216,
      33,    -1,   267,    -1,    -1,   270,    -1,    -1,    41,    -1,
     376,    -1,   229,    -1,    -1,    48,    -1,    -1,    -1,   284,
      -1,     8,   287,    -1,    11,    -1,    -1,    -1,    -1,    16,
      17,    18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      73,    -1,    -1,    -1,    -1,    -1,    33,    -1,    -1,    -1,
     267,    -1,    -1,   270,    41,    -1,    -1,    -1,    -1,    -1,
      -1,    48,    -1,   376,    -1,    -1,    -1,   284,    -1,    -1,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     476,   376,    -1,   479,   480,   481,    -1,   483,   484,   485,
     486,   487,   488,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     173,    -1,    -1,   408,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,    -1,   376,
      -1,   194,    -1,   476,    -1,    -1,   479,   480,   481,    -1,
     483,   484,   485,   486,   487,   488,    -1,    -1,    -1,    -1,
      -1,    -1,   215,   216,    -1,    -1,   173,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   229,    -1,    -1,    -1,
      -1,    -1,   189,    -1,    -1,    -1,    -1,   194,    -1,    -1,
      -1,   476,    -1,    -1,   479,   480,   481,    -1,   483,   484,
     485,   486,   487,   488,    -1,    -1,    -1,    -1,   215,   216,
      -1,    -1,    -1,    -1,   267,    -1,    -1,   270,    -1,    -1,
      -1,    -1,   229,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   284,    -1,    -1,   287,    -1,    -1,    -1,    -1,   476,
      -1,    -1,   479,   480,   481,    -1,   483,   484,   485,   486,
     487,   488,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     267,    -1,    -1,   270,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,    -1,    -1,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   376,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   376,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   476,    -1,    -1,   479,   480,   481,    -1,
     483,   484,   485,   486,   487,   488,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,     3,    -1,     5,   476,
      -1,    -1,   479,   480,   481,    -1,   483,   484,   485,   486,
     487,   488,    19,    20,    21,    22,    23,    24,    25,    26,
      27,    28,    29,    30,    31,    32,    33,    34,    35,    36,
      37,    38,    39,    40,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    86,
      87,    88,    89,    90,    91,    92,    93,    -1,    95,    96,
      97,    98,    99,   100,    -1,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   129,   130,   131,   132,   133,   134,   135,   136,
     137,   138,   139,   140,   141,   142,   143,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
      -1,   168,    -1,   170,   171,   172,    -1,   174,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,    -1,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,    -1,    -1,
     217,    -1,   219,   220,   221,   222,   223,   224,   225,   226,
      -1,   228,    -1,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,    -1,   262,   263,   264,   265,   266,
     267,   268,   269,    -1,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,    -1,   292,    -1,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,    -1,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,    -1,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,    -1,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    33,
      34,    35,    36,    37,    38,    39,    40,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    86,    87,    88,    89,    90,    91,    92,    93,
      -1,    95,    96,    97,    98,    99,   100,    -1,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   129,   130,   131,   132,   133,
     134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,    -1,   168,    -1,   170,   171,   172,    -1,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,    -1,
     204,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     214,    -1,    -1,   217,    -1,   219,   220,   221,   222,   223,
     224,   225,   226,    -1,   228,    -1,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,    -1,   262,   263,
     264,   265,   266,   267,   268,   269,    -1,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,    -1,   292,    -1,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,    -1,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,    -1,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,    -1,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
      31,    32,    33,    34,    35,    36,    37,    38,    39,    40,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    86,    87,    88,    89,    90,
      91,    92,    93,    -1,    95,    96,    97,    98,    99,   100,
      -1,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,   132,   133,   134,   135,   136,   137,   138,   139,   140,
     141,   142,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,    -1,   168,    -1,   170,
     171,   172,    -1,   174,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,   188,    -1,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,    -1,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   214,    -1,    -1,   217,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,    -1,   228,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
      -1,   262,   263,   264,   265,   266,   267,   268,   269,    -1,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
      -1,   292,    -1,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,    -1,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,    -1,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,    -1,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,    -1,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,   167,
      -1,   169,   170,   171,   172,   173,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,    -1,   202,   203,   204,   205,   206,   207,
     208,   209,   210,    -1,   212,    -1,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,    -1,    -1,   226,   227,
     228,   229,    -1,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,    -1,
     268,   269,   270,   271,    -1,   273,   274,   275,   276,   277,
     278,    -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,    -1,   323,   324,   325,   326,   327,
     328,   329,   330,    -1,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,    -1,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,    -1,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
      -1,   409,   410,    -1,    -1,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,    -1,
      -1,   429,   430,   431,   432,   433,   434,    -1,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,   445,   446,   447,
     448,   449,    -1,    -1,   452,    -1,    -1,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    94,
      95,    96,    97,    -1,    -1,    -1,   101,    -1,    -1,    -1,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,    -1,   157,    -1,   159,   160,   161,   162,    -1,   164,
      -1,   166,   167,    -1,   169,   170,   171,   172,   173,   174,
      -1,   176,    -1,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,    -1,
     195,   196,   197,   198,   199,   200,    -1,   202,   203,   204,
     205,   206,   207,   208,   209,   210,    -1,   212,    -1,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,    -1,
      -1,   226,   227,   228,   229,    -1,   231,   232,   233,    -1,
      -1,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,    -1,   268,   269,   270,   271,    -1,   273,   274,
     275,   276,   277,   278,    -1,   280,   281,    -1,    -1,   284,
     285,   286,    -1,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,    -1,   323,   324,
     325,   326,   327,   328,   329,   330,    -1,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,    -1,
     365,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,    -1,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,    -1,   398,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,    -1,   409,   410,    -1,    -1,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,   426,    -1,    -1,   429,   430,   431,   432,   433,    -1,
      -1,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
     445,   446,   447,   448,   449,    -1,    -1,   452,    -1,    -1,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    -1,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,    -1,   157,    -1,   159,   160,   161,
     162,    -1,   164,   165,   166,    -1,    -1,    -1,   170,   171,
     172,    -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
     192,   193,    -1,   195,   196,   197,   198,   199,   200,    -1,
     202,    -1,   204,   205,   206,   207,   208,   209,   210,    -1,
     212,    -1,   214,    -1,    -1,   217,    -1,   219,   220,   221,
     222,   223,    -1,    -1,   226,    -1,   228,    -1,    -1,   231,
     232,   233,    -1,    -1,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,    -1,
     262,   263,   264,   265,   266,    -1,   268,   269,    -1,   271,
      -1,   273,   274,   275,   276,   277,   278,    -1,   280,   281,
      -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,    -1,
     292,    -1,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
      -1,   323,   324,   325,   326,   327,   328,   329,   330,    -1,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,    -1,   346,   347,    -1,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,    -1,   365,   366,   367,   368,   369,    -1,   371,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,    -1,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,    -1,   398,   399,    -1,   401,
      -1,   403,   404,   405,   406,   407,    -1,   409,   410,    -1,
      -1,   413,   414,   415,   416,   417,    -1,   419,   420,   421,
     422,   423,   424,   425,   426,    -1,   428,   429,   430,   431,
     432,   433,    -1,    -1,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,    -1,   446,   447,   448,   449,    -1,    -1,
     452,    -1,    -1,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    81,    -1,    83,    84,    85,    86,    87,    88,
      89,    90,    91,    92,    -1,    -1,    95,    96,    97,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,    -1,   157,    -1,
     159,   160,   161,   162,    -1,   164,   165,   166,    -1,    -1,
      -1,   170,   171,   172,    -1,   174,    -1,   176,    -1,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,   192,   193,    -1,   195,   196,   197,   198,
     199,   200,    -1,   202,    -1,   204,   205,   206,   207,   208,
     209,   210,    -1,   212,    -1,   214,    -1,    -1,   217,    -1,
     219,   220,   221,   222,   223,    -1,    -1,   226,    -1,   228,
     229,    -1,   231,   232,   233,    -1,    -1,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,    -1,   262,   263,   264,   265,   266,    -1,   268,
     269,    -1,   271,    -1,   273,   274,   275,   276,   277,   278,
      -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,
     289,   290,    -1,   292,    -1,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,    -1,   323,   324,   325,   326,   327,   328,
     329,   330,    -1,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,    -1,   346,   347,    -1,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,    -1,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,    -1,   398,
     399,    -1,   401,    -1,   403,   404,   405,   406,   407,    -1,
     409,   410,    -1,    -1,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,    -1,   428,
     429,   430,   431,   432,   433,    -1,    -1,   436,   437,   438,
     439,   440,   441,   442,    -1,   444,    -1,   446,   447,   448,
     449,    -1,    -1,   452,    -1,    -1,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,     3,    -1,     5,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,    -1,   159,   160,   161,   162,    -1,   164,    -1,
     166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,
     176,    -1,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,   192,   193,    -1,   195,
     196,   197,   198,   199,   200,    -1,   202,    -1,   204,   205,
     206,   207,   208,   209,   210,    -1,   212,    -1,   214,    -1,
      -1,   217,    -1,   219,   220,   221,   222,   223,    -1,    -1,
     226,    -1,   228,    -1,    -1,   231,   232,   233,    -1,    -1,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,    -1,   262,   263,   264,   265,
     266,    -1,   268,   269,    -1,   271,    -1,   273,   274,   275,
     276,   277,   278,    -1,   280,   281,   282,    -1,   284,   285,
     286,    -1,    -1,   289,   290,    -1,   292,    -1,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,    -1,   323,   324,   325,
     326,   327,   328,   329,   330,    -1,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,    -1,
     346,   347,    -1,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,    -1,   365,
     366,   367,   368,   369,    -1,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,    -1,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,    -1,   398,   399,    -1,   401,    -1,   403,   404,   405,
     406,   407,    -1,   409,   410,    -1,    -1,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,    -1,    -1,   429,   430,   431,   432,   433,    -1,    -1,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,    -1,
     446,   447,   448,   449,    -1,    -1,   452,    -1,    -1,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
       3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    31,    32,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    81,    -1,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,    -1,   157,    -1,   159,   160,   161,   162,
      -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,
      -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,   192,
     193,    -1,   195,   196,   197,   198,   199,   200,    -1,   202,
      -1,   204,   205,   206,   207,   208,   209,   210,    -1,   212,
      -1,   214,    -1,    -1,   217,    -1,   219,   220,   221,   222,
     223,    -1,    -1,   226,    -1,   228,    -1,    -1,   231,   232,
     233,    -1,    -1,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,    -1,   262,
     263,   264,   265,   266,    -1,   268,   269,    -1,   271,    -1,
     273,   274,   275,   276,   277,   278,    -1,   280,   281,    -1,
      -1,   284,   285,   286,    -1,    -1,   289,   290,    -1,   292,
      -1,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,   319,   320,   321,    -1,
     323,   324,   325,   326,   327,   328,   329,   330,    -1,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,    -1,   346,   347,    -1,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,    -1,   398,   399,    -1,   401,    -1,
     403,   404,   405,   406,   407,    -1,   409,   410,    -1,    -1,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,    -1,    -1,   429,   430,   431,   432,
     433,    -1,    -1,   436,   437,   438,   439,   440,   441,   442,
      -1,   444,    -1,   446,   447,   448,   449,    -1,    -1,   452,
      -1,    -1,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,     3,    -1,     5,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,    -1,   157,    -1,   159,
     160,   161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
     170,   171,   172,    -1,   174,    -1,   176,    -1,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,   192,   193,    -1,   195,   196,   197,   198,   199,
     200,    -1,   202,    -1,   204,   205,   206,   207,   208,   209,
     210,    -1,   212,    -1,   214,    -1,    -1,   217,    -1,   219,
     220,   221,   222,   223,    -1,    -1,   226,    -1,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,    -1,   262,   263,   264,   265,   266,    -1,   268,   269,
      -1,   271,    -1,   273,   274,   275,   276,   277,   278,    -1,
     280,   281,    -1,   283,   284,   285,   286,    -1,    -1,   289,
     290,    -1,   292,    -1,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,    -1,   323,   324,   325,   326,   327,   328,   329,
     330,    -1,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,    -1,   346,   347,    -1,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,    -1,   365,   366,   367,   368,   369,
      -1,   371,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,    -1,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,    -1,   398,   399,
      -1,   401,    -1,   403,   404,   405,   406,   407,    -1,   409,
     410,    -1,    -1,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,   425,   426,    -1,    -1,   429,
     430,   431,   432,   433,    -1,    -1,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,    -1,   446,   447,   448,   449,
      -1,    -1,   452,    -1,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,     3,    -1,     5,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    -1,    95,    96,
      97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,    -1,
     157,    -1,   159,   160,   161,   162,    -1,   164,    -1,   166,
      -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,
      -1,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,   192,   193,    -1,   195,   196,
     197,   198,   199,   200,    -1,   202,    -1,   204,   205,   206,
     207,   208,   209,   210,    -1,   212,    -1,   214,    -1,    -1,
     217,    -1,   219,   220,   221,   222,   223,    -1,    -1,   226,
      -1,   228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,    -1,   262,   263,   264,   265,   266,
      -1,   268,   269,    -1,   271,    -1,   273,   274,   275,   276,
     277,   278,    -1,   280,   281,    -1,   283,   284,   285,   286,
      -1,    -1,   289,   290,    -1,   292,    -1,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,    -1,   323,   324,   325,   326,
     327,   328,   329,   330,    -1,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,    -1,   346,
     347,    -1,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,    -1,   365,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,    -1,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
      -1,   398,   399,    -1,   401,    -1,   403,   404,   405,   406,
     407,    -1,   409,   410,    -1,    -1,   413,   414,   415,   416,
     417,    -1,   419,   420,   421,   422,   423,   424,   425,   426,
      -1,    -1,   429,   430,   431,   432,   433,    -1,    -1,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,    -1,   446,
     447,   448,   449,    -1,    -1,   452,    -1,    -1,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    31,    32,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,    -1,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,   192,   193,
      -1,   195,   196,   197,   198,   199,   200,    -1,   202,    -1,
     204,   205,   206,   207,   208,   209,   210,    -1,   212,    -1,
     214,    -1,    -1,   217,    -1,   219,   220,   221,   222,   223,
      -1,    -1,   226,    -1,   228,    -1,    -1,   231,   232,   233,
      -1,    -1,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,    -1,   262,   263,
     264,   265,   266,    -1,   268,   269,    -1,   271,    -1,   273,
     274,   275,   276,   277,   278,    -1,   280,   281,    -1,    -1,
     284,   285,   286,    -1,    -1,   289,   290,    -1,   292,    -1,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,    -1,   323,
     324,   325,   326,   327,   328,   329,   330,    -1,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,    -1,   346,   347,    -1,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
      -1,   365,   366,   367,   368,   369,    -1,   371,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,    -1,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,    -1,   398,   399,    -1,   401,    -1,   403,
     404,   405,   406,   407,    -1,   409,   410,    -1,    -1,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,    -1,    -1,   429,   430,   431,   432,   433,
      -1,    -1,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,    -1,   446,   447,   448,   449,    -1,    -1,   452,    -1,
      -1,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,   188,    -1,   190,
     191,   192,   193,    -1,   195,   196,   197,   198,   199,   200,
      -1,   202,    -1,   204,   205,   206,   207,   208,   209,   210,
      -1,   212,    -1,   214,    -1,    -1,   217,    -1,   219,   220,
     221,   222,   223,    -1,    -1,   226,    -1,   228,    -1,    -1,
     231,   232,   233,    -1,    -1,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
      -1,   262,   263,   264,   265,   266,    -1,   268,   269,    -1,
     271,    -1,   273,   274,   275,   276,   277,   278,    -1,   280,
     281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,
      -1,   292,    -1,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,    -1,   323,   324,   325,   326,   327,   328,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,    -1,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
      -1,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
     401,    -1,   403,   404,   405,   406,   407,    -1,   409,   410,
      -1,    -1,   413,   414,   415,   416,   417,    -1,   419,   420,
     421,   422,   423,   424,   425,   426,    -1,    -1,   429,   430,
     431,   432,   433,    -1,    -1,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,    -1,   446,   447,   448,   449,    -1,
      -1,   452,    -1,    -1,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,     3,     4,    -1,    -1,    -1,
      -1,     9,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,    -1,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,    -1,
      -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,    -1,   202,    -1,   204,   205,   206,   207,
     208,   209,   210,    -1,   212,    -1,   214,    -1,    -1,   217,
      -1,   219,   220,   221,   222,   223,    -1,    -1,   226,    -1,
     228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,    -1,   262,   263,   264,   265,   266,    -1,
     268,   269,    -1,   271,    -1,   273,   274,   275,   276,   277,
     278,    -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,
      -1,   289,   290,    -1,   292,    -1,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,    -1,   323,   324,   325,   326,   327,
     328,   329,   330,    -1,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,    -1,   346,   347,
      -1,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,    -1,   371,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,    -1,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,    -1,
     398,   399,    -1,   401,    -1,   403,   404,   405,   406,   407,
      -1,   409,   410,    -1,    -1,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,    -1,
      -1,   429,   430,   431,   432,   433,    -1,    -1,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,    -1,   446,   447,
     448,   449,    -1,    -1,   452,    -1,    -1,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    81,    -1,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    -1,
      95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,    -1,   157,    -1,   159,   160,   161,   162,    -1,   164,
      -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,
      -1,   176,    -1,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,   192,   193,    -1,
     195,   196,   197,   198,   199,   200,    -1,   202,    -1,   204,
     205,   206,   207,   208,   209,   210,    -1,   212,    -1,   214,
      -1,    -1,   217,    -1,   219,   220,   221,   222,   223,    -1,
      -1,   226,    -1,   228,    -1,    -1,   231,   232,   233,    -1,
      -1,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,    -1,   262,   263,   264,
     265,   266,    -1,   268,   269,    -1,   271,    -1,   273,   274,
     275,   276,   277,   278,    -1,   280,   281,    -1,    -1,   284,
     285,   286,    -1,    -1,   289,   290,    -1,   292,    -1,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,    -1,   323,   324,
     325,   326,   327,   328,   329,   330,    -1,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
      -1,   346,   347,    -1,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,    -1,
     365,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,    -1,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,    -1,   398,   399,    -1,   401,    -1,   403,   404,
     405,   406,   407,    -1,   409,   410,    -1,    -1,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,   426,    -1,    -1,   429,   430,   431,   432,   433,    -1,
      -1,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
      -1,   446,   447,   448,   449,    -1,    -1,   452,    -1,    -1,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,    -1,   157,    -1,   159,   160,   161,
     162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,
     172,    -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
     192,   193,    -1,   195,   196,   197,   198,   199,   200,    -1,
     202,    -1,   204,   205,   206,   207,   208,   209,   210,    -1,
     212,    -1,   214,    -1,    -1,   217,    -1,   219,   220,   221,
     222,   223,    -1,    -1,   226,    -1,   228,    -1,    -1,   231,
     232,   233,    -1,    -1,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,    -1,
     262,   263,   264,   265,   266,    -1,   268,   269,    -1,   271,
      -1,   273,   274,   275,   276,   277,   278,    -1,   280,   281,
      -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,    -1,
     292,    -1,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
      -1,   323,   324,   325,   326,   327,   328,   329,   330,    -1,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,    -1,   346,   347,    -1,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,    -1,   365,   366,   367,   368,   369,    -1,   371,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,    -1,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,    -1,   398,   399,    -1,   401,
      -1,   403,   404,   405,   406,   407,    -1,   409,   410,    -1,
      -1,   413,   414,   415,   416,   417,    -1,   419,   420,   421,
     422,   423,   424,   425,   426,    -1,    -1,   429,   430,   431,
     432,   433,    -1,    -1,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,    -1,   446,   447,   448,   449,    -1,    -1,
     452,    -1,    -1,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,     3,    -1,     5,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    81,    -1,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    -1,    95,    96,    97,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,    -1,   157,    -1,
     159,   160,   161,   162,    -1,   164,    -1,   166,    -1,    -1,
      -1,   170,   171,   172,    -1,   174,    -1,   176,    -1,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,   192,   193,    -1,   195,   196,   197,   198,
     199,   200,    -1,   202,    -1,   204,   205,   206,   207,   208,
     209,   210,    -1,   212,    -1,   214,    -1,    -1,   217,    -1,
     219,   220,   221,   222,   223,    -1,    -1,   226,    -1,   228,
      -1,    -1,   231,   232,   233,    -1,    -1,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,    -1,   262,   263,   264,   265,   266,    -1,   268,
     269,    -1,   271,    -1,   273,   274,   275,   276,   277,   278,
      -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,
     289,   290,    -1,   292,    -1,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,    -1,   323,   324,   325,   326,   327,   328,
     329,   330,    -1,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,    -1,   346,   347,    -1,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,    -1,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,    -1,   398,
     399,    -1,   401,    -1,   403,   404,   405,   406,   407,    -1,
     409,   410,    -1,    -1,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,    -1,    -1,
     429,   430,   431,   432,   433,    -1,    -1,   436,   437,   438,
     439,   440,   441,   442,    -1,   444,    -1,   446,   447,   448,
     449,    -1,    -1,   452,    -1,    -1,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,     3,    -1,     5,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
      -1,   157,    -1,   159,   160,   161,   162,    -1,   164,    -1,
     166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,
     176,    -1,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,   192,   193,    -1,   195,
     196,   197,   198,   199,   200,    -1,   202,    -1,   204,   205,
     206,   207,   208,   209,   210,    -1,   212,    -1,   214,    -1,
      -1,   217,    -1,   219,   220,   221,   222,   223,    -1,    -1,
     226,    -1,   228,    -1,    -1,   231,   232,   233,    -1,    -1,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,    -1,   262,   263,   264,   265,
     266,    -1,   268,   269,    -1,   271,    -1,   273,   274,   275,
     276,   277,   278,    -1,   280,   281,    -1,    -1,   284,   285,
     286,    -1,    -1,   289,   290,    -1,   292,    -1,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,    -1,   323,   324,   325,
     326,   327,   328,   329,   330,    -1,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,    -1,
     346,   347,    -1,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,    -1,   365,
     366,   367,   368,   369,    -1,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,    -1,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,    -1,   398,   399,    -1,   401,    -1,   403,   404,   405,
     406,   407,    -1,   409,   410,    -1,    -1,   413,   414,   415,
     416,   417,    -1,   419,   420,   421,   422,   423,   424,   425,
     426,    -1,    -1,   429,   430,   431,   432,   433,    -1,    -1,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,    -1,
     446,   447,   448,   449,    -1,    -1,   452,    -1,    -1,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
       3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    81,    -1,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,    -1,   157,    -1,   159,   160,   161,   162,
      -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,
      -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,   192,
     193,    -1,   195,   196,   197,   198,   199,   200,    -1,   202,
      -1,   204,   205,   206,   207,   208,   209,   210,    -1,   212,
      -1,   214,    -1,    -1,   217,    -1,   219,   220,   221,   222,
     223,    -1,    -1,   226,    -1,   228,    -1,    -1,   231,   232,
     233,    -1,    -1,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,    -1,   262,
     263,   264,   265,   266,    -1,   268,   269,    -1,   271,    -1,
     273,   274,   275,   276,   277,   278,    -1,   280,   281,    -1,
      -1,   284,   285,   286,    -1,    -1,   289,   290,    -1,   292,
      -1,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,   319,   320,   321,    -1,
     323,   324,   325,   326,   327,   328,   329,   330,    -1,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,    -1,   346,   347,    -1,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,    -1,   398,   399,    -1,   401,    -1,
     403,   404,   405,   406,   407,    -1,   409,   410,    -1,    -1,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,    -1,    -1,   429,   430,   431,   432,
     433,    -1,    -1,   436,   437,   438,   439,   440,   441,   442,
      -1,   444,    -1,   446,   447,   448,   449,    -1,    -1,   452,
      -1,    -1,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,     3,    -1,     5,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,    -1,   157,    -1,   159,
     160,   161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
     170,   171,   172,    -1,   174,    -1,   176,    -1,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,   192,   193,    -1,   195,   196,   197,   198,   199,
     200,    -1,   202,    -1,   204,   205,   206,   207,   208,   209,
     210,    -1,   212,    -1,   214,    -1,    -1,   217,    -1,   219,
     220,   221,   222,   223,    -1,    -1,   226,    -1,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,    -1,   262,   263,   264,   265,   266,    -1,   268,   269,
      -1,   271,    -1,   273,   274,   275,   276,   277,   278,    -1,
     280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,
     290,    -1,   292,    -1,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,    -1,   323,   324,   325,   326,   327,   328,   329,
     330,    -1,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,    -1,   346,   347,    -1,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,    -1,   365,   366,   367,   368,   369,
      -1,   371,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,    -1,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,    -1,   398,   399,
      -1,   401,    -1,   403,   404,   405,   406,   407,    -1,   409,
     410,    -1,    -1,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,   425,   426,    -1,    -1,   429,
     430,   431,   432,   433,    -1,    -1,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,    -1,   446,   447,   448,   449,
      -1,    -1,   452,    -1,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      27,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    -1,    95,    96,
      97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,    -1,
     157,    -1,   159,   160,   161,   162,    -1,   164,    -1,   166,
      -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,
      -1,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,   192,   193,    -1,   195,   196,
     197,   198,   199,   200,    -1,   202,    -1,   204,   205,   206,
     207,   208,   209,   210,    -1,   212,    -1,   214,    -1,    -1,
     217,    -1,   219,   220,   221,   222,   223,    -1,    -1,   226,
      -1,   228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,    -1,   262,   263,   264,   265,   266,
      -1,   268,   269,    -1,   271,    -1,   273,   274,   275,   276,
     277,   278,    -1,   280,   281,    -1,    -1,   284,   285,   286,
      -1,    -1,   289,   290,    -1,   292,    -1,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,    -1,   323,   324,   325,   326,
     327,   328,   329,   330,    -1,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,    -1,   346,
     347,    -1,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,    -1,   365,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,    -1,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
      -1,   398,   399,    -1,   401,    -1,   403,   404,   405,   406,
     407,    -1,   409,   410,    -1,    -1,   413,   414,   415,   416,
     417,    -1,   419,   420,   421,   422,   423,   424,   425,   426,
      -1,    -1,   429,   430,   431,   432,   433,    -1,    -1,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,    -1,   446,
     447,   448,   449,    -1,    -1,   452,    -1,    -1,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,     3,
      -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,    -1,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,   192,   193,
      -1,   195,   196,   197,   198,   199,   200,    -1,   202,    -1,
     204,   205,   206,   207,   208,   209,   210,    -1,   212,    -1,
     214,    -1,    -1,   217,    -1,   219,   220,   221,   222,   223,
      -1,    -1,   226,    -1,   228,    -1,    -1,   231,   232,   233,
      -1,    -1,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,    -1,   262,   263,
     264,   265,   266,    -1,   268,   269,    -1,   271,    -1,   273,
     274,   275,   276,   277,   278,    -1,   280,   281,    -1,    -1,
     284,   285,   286,    -1,    -1,   289,   290,    -1,   292,    -1,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,    -1,   323,
     324,   325,   326,   327,   328,   329,   330,    -1,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,    -1,   346,   347,    -1,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
      -1,   365,   366,   367,   368,   369,    -1,   371,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,    -1,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,    -1,   398,   399,    -1,   401,    -1,   403,
     404,   405,   406,   407,    -1,   409,   410,    -1,    -1,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,    -1,    -1,   429,   430,   431,   432,   433,
      -1,    -1,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,    -1,   446,   447,   448,   449,    -1,    -1,   452,    -1,
      -1,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,   188,    -1,   190,
     191,   192,   193,    -1,   195,   196,   197,   198,   199,   200,
      -1,   202,    -1,   204,   205,   206,   207,   208,   209,   210,
      -1,   212,    -1,   214,    -1,    -1,   217,    -1,   219,   220,
     221,   222,   223,    -1,    -1,   226,    -1,   228,    -1,    -1,
     231,   232,   233,    -1,    -1,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
      -1,   262,   263,   264,   265,   266,    -1,   268,   269,    -1,
     271,    -1,   273,   274,   275,   276,   277,   278,    -1,   280,
     281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,
      -1,   292,    -1,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,    -1,   323,   324,   325,   326,   327,   328,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,    -1,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
      -1,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,    -1,   398,   399,    -1,
     401,    -1,   403,   404,   405,   406,   407,    -1,   409,   410,
      -1,    -1,   413,   414,   415,   416,   417,    -1,   419,   420,
     421,   422,   423,   424,   425,   426,    -1,    -1,   429,   430,
     431,   432,   433,    -1,    -1,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,    -1,   446,   447,   448,   449,    -1,
      -1,   452,    -1,    -1,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,     3,    -1,     5,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,    -1,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,    -1,
      -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,    -1,   202,    -1,   204,   205,   206,   207,
     208,   209,   210,    -1,   212,    -1,   214,    -1,    -1,   217,
      -1,   219,   220,   221,   222,   223,    -1,    -1,   226,    -1,
     228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,    -1,   262,   263,   264,   265,   266,    -1,
     268,   269,    -1,   271,    -1,   273,   274,   275,   276,   277,
     278,    -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,
      -1,   289,   290,    -1,   292,    -1,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,    -1,   323,   324,   325,   326,   327,
     328,   329,   330,    -1,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,    -1,   346,   347,
      -1,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,    -1,   371,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,    -1,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,    -1,
     398,   399,    -1,   401,    -1,   403,   404,   405,   406,   407,
      -1,   409,   410,    -1,    -1,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,    -1,
      -1,   429,   430,   431,   432,   433,    -1,    -1,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,    -1,   446,   447,
     448,   449,    -1,    -1,   452,    -1,    -1,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    36,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    81,    -1,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    -1,
      95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,    -1,   157,    -1,   159,   160,   161,   162,    -1,   164,
      -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,
      -1,   176,    -1,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,   192,   193,    -1,
     195,   196,   197,   198,   199,   200,    -1,   202,    -1,   204,
     205,   206,   207,   208,   209,   210,    -1,   212,    -1,   214,
      -1,    -1,   217,    -1,   219,   220,   221,   222,   223,    -1,
      -1,   226,    -1,   228,    -1,    -1,   231,   232,   233,    -1,
      -1,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,    -1,   262,   263,   264,
     265,   266,    -1,   268,   269,    -1,   271,    -1,   273,   274,
     275,   276,   277,   278,    -1,   280,   281,    -1,    -1,   284,
     285,   286,    -1,    -1,   289,   290,    -1,   292,    -1,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,    -1,   323,   324,
     325,   326,   327,   328,   329,   330,    -1,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
      -1,   346,   347,    -1,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,    -1,
     365,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,    -1,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,    -1,   398,   399,    -1,   401,    -1,   403,   404,
     405,   406,   407,    -1,   409,   410,    -1,    -1,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,   426,    -1,    -1,   429,   430,   431,   432,   433,    -1,
      -1,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
      -1,   446,   447,   448,   449,    -1,    -1,   452,    -1,    -1,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    36,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,    -1,   157,    -1,   159,   160,   161,
     162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,
     172,    -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
     192,   193,    -1,   195,   196,   197,   198,   199,   200,    -1,
     202,    -1,   204,   205,   206,   207,   208,   209,   210,    -1,
     212,    -1,   214,    -1,    -1,   217,    -1,   219,   220,   221,
     222,   223,    -1,    -1,   226,    -1,   228,    -1,    -1,   231,
     232,   233,    -1,    -1,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,    -1,
     262,   263,   264,   265,   266,    -1,   268,   269,    -1,   271,
      -1,   273,   274,   275,   276,   277,   278,    -1,   280,   281,
      -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,    -1,
     292,    -1,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
      -1,   323,   324,   325,   326,   327,   328,   329,   330,    -1,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,    -1,   346,   347,    -1,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,    -1,   365,   366,   367,   368,   369,    -1,   371,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,    -1,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,    -1,   398,   399,    -1,   401,
      -1,   403,   404,   405,   406,   407,    -1,   409,   410,    -1,
      -1,   413,   414,   415,   416,   417,    -1,   419,   420,   421,
     422,   423,   424,   425,   426,    -1,    -1,   429,   430,   431,
     432,   433,    -1,    -1,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,    -1,   446,   447,   448,   449,    -1,    -1,
     452,    -1,    -1,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,     3,    -1,     5,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    81,    -1,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    -1,    95,    96,    97,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,    -1,   157,    -1,
     159,   160,   161,   162,    -1,   164,    -1,   166,    -1,    -1,
      -1,   170,   171,   172,    -1,   174,    -1,   176,    -1,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,   192,   193,    -1,   195,   196,   197,   198,
     199,   200,    -1,   202,    -1,   204,   205,   206,   207,   208,
     209,   210,    -1,   212,    -1,   214,    -1,    -1,   217,    -1,
     219,   220,   221,   222,   223,    -1,    -1,   226,    -1,   228,
      -1,    -1,   231,   232,   233,    -1,    -1,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,    -1,   262,   263,   264,   265,   266,    -1,   268,
     269,    -1,   271,    -1,   273,   274,   275,   276,   277,   278,
      -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,
     289,   290,    -1,   292,    -1,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,    -1,   323,   324,   325,   326,   327,   328,
     329,   330,    -1,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,    -1,   346,   347,    -1,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,    -1,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,    -1,   398,
     399,    -1,   401,    -1,   403,   404,   405,   406,   407,    -1,
     409,   410,    -1,    -1,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,    -1,    -1,
     429,   430,   431,   432,   433,    -1,    -1,   436,   437,   438,
     439,   440,   441,   442,    -1,   444,    -1,   446,   447,   448,
     449,    -1,    -1,   452,    -1,    -1,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
      -1,   157,    -1,   159,   160,   161,   162,    -1,   164,    -1,
     166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,
     176,    -1,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,   192,   193,    -1,   195,
     196,   197,   198,   199,   200,    -1,   202,    -1,   204,   205,
     206,   207,   208,   209,   210,    -1,   212,    -1,   214,    -1,
      -1,   217,    -1,   219,   220,   221,   222,   223,    -1,    -1,
     226,    -1,   228,    -1,    -1,   231,   232,   233,    -1,    -1,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,    -1,   262,   263,   264,   265,
     266,    -1,   268,   269,    -1,   271,    -1,   273,   274,   275,
     276,   277,   278,    -1,   280,   281,    -1,    -1,   284,   285,
     286,    -1,    -1,   289,   290,    -1,   292,    -1,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,    -1,   323,   324,   325,
     326,   327,   328,   329,   330,    -1,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,    -1,
     346,   347,    -1,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,    -1,   365,
     366,   367,   368,   369,    -1,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,    -1,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,    -1,   398,   399,    -1,   401,    -1,   403,   404,   405,
     406,   407,    -1,   409,   410,    -1,    -1,   413,   414,   415,
     416,   417,    -1,   419,   420,   421,   422,   423,   424,   425,
     426,    -1,    -1,   429,   430,   431,   432,   433,    -1,    -1,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,    -1,
     446,   447,   448,   449,    -1,    -1,   452,    -1,    -1,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    81,    -1,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,    -1,   157,    -1,   159,   160,   161,   162,
      -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,
      -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,   192,
     193,    -1,   195,   196,   197,   198,   199,   200,    -1,   202,
      -1,   204,   205,   206,   207,   208,   209,   210,    -1,   212,
      -1,   214,    -1,    -1,   217,    -1,   219,   220,   221,   222,
     223,    -1,    -1,   226,    -1,   228,    -1,    -1,   231,   232,
     233,    -1,    -1,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,    -1,   262,
     263,   264,   265,   266,    -1,   268,   269,    -1,   271,    -1,
     273,   274,   275,   276,   277,   278,    -1,   280,   281,    -1,
      -1,   284,   285,   286,    -1,    -1,   289,   290,    -1,   292,
      -1,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,   319,   320,   321,    -1,
     323,   324,   325,   326,   327,   328,   329,   330,    -1,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,    -1,   346,   347,    -1,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,    -1,   398,   399,    -1,   401,    -1,
     403,   404,   405,   406,   407,    -1,   409,   410,    -1,    -1,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,    -1,    -1,   429,   430,   431,   432,
     433,    -1,    -1,   436,   437,   438,   439,   440,   441,   442,
      -1,   444,    -1,   446,   447,   448,   449,    -1,    -1,   452,
      -1,    -1,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,    -1,   157,    -1,   159,
     160,   161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
     170,   171,   172,    -1,   174,    -1,   176,    -1,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,   192,   193,    -1,   195,   196,   197,   198,   199,
     200,    -1,   202,    -1,   204,   205,   206,   207,   208,   209,
     210,    -1,   212,    -1,   214,    -1,    -1,   217,    -1,   219,
     220,   221,   222,   223,    -1,    -1,   226,    -1,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,    -1,   262,   263,   264,   265,   266,    -1,   268,   269,
      -1,   271,    -1,   273,   274,   275,   276,   277,   278,    -1,
     280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,
     290,    -1,   292,    -1,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,    -1,   323,   324,   325,   326,   327,   328,   329,
     330,    -1,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,    -1,   346,   347,    -1,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,    -1,   365,   366,   367,   368,   369,
      -1,   371,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,    -1,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,    -1,   398,   399,
      -1,   401,    -1,   403,   404,   405,   406,   407,    -1,   409,
     410,    -1,    -1,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,   425,   426,    -1,    -1,   429,
     430,   431,   432,   433,    -1,    -1,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,    -1,   446,   447,   448,   449,
      -1,    -1,   452,    -1,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    -1,    95,    96,
      97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,    -1,
     157,    -1,   159,   160,   161,   162,    -1,   164,    -1,   166,
      -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,
      -1,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,   192,   193,    -1,   195,   196,
     197,   198,   199,   200,    -1,   202,    -1,   204,   205,   206,
     207,   208,   209,   210,    -1,   212,    -1,   214,    -1,    -1,
     217,    -1,   219,   220,   221,   222,   223,    -1,    -1,   226,
      -1,   228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,    -1,   262,   263,   264,   265,   266,
      -1,   268,   269,    -1,   271,    -1,   273,   274,   275,   276,
     277,   278,    -1,   280,   281,    -1,    -1,   284,   285,   286,
      -1,    -1,   289,   290,    -1,   292,    -1,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,    -1,   323,   324,   325,   326,
     327,   328,   329,   330,    -1,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,    -1,   346,
     347,    -1,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,    -1,   365,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,    -1,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
      -1,   398,   399,    -1,   401,    -1,   403,   404,   405,   406,
     407,    -1,   409,   410,    -1,    -1,   413,   414,   415,   416,
     417,    -1,   419,   420,   421,   422,   423,   424,   425,   426,
      -1,    -1,   429,   430,   431,   432,   433,    -1,    -1,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,    -1,   446,
     447,   448,   449,    -1,    -1,   452,    -1,    -1,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,    -1,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,
     174,    -1,   176,    -1,   178,   179,   180,    -1,   182,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,   192,   193,
      -1,   195,   196,   197,   198,   199,   200,    -1,   202,    -1,
     204,   205,   206,   207,   208,   209,   210,    -1,   212,    -1,
     214,    -1,    -1,   217,    -1,   219,   220,   221,   222,   223,
      -1,    -1,   226,    -1,   228,    -1,    -1,   231,   232,   233,
      -1,    -1,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,    -1,   262,   263,
     264,   265,   266,    -1,   268,   269,    -1,   271,    -1,   273,
     274,   275,   276,   277,   278,    -1,   280,   281,    -1,    -1,
     284,   285,   286,    -1,    -1,   289,   290,    -1,   292,    -1,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,    -1,   323,
     324,   325,   326,   327,   328,   329,   330,    -1,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,    -1,   346,   347,    -1,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
      -1,   365,   366,   367,   368,   369,    -1,   371,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,    -1,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,    -1,   398,   399,    -1,   401,    -1,   403,
     404,   405,   406,   407,    -1,   409,   410,    -1,    -1,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,    -1,    -1,   429,   430,   431,   432,   433,
      -1,    -1,   436,   437,   438,   439,   440,   441,   442,    -1,
     444,    -1,   446,   447,   448,   449,    -1,    -1,   452,    -1,
      -1,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,    -1,   159,   160,
     161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,
     171,   172,    -1,   174,    -1,   176,    -1,   178,   179,   180,
      -1,   182,   183,   184,   185,   186,   187,   188,    -1,   190,
     191,   192,   193,    -1,   195,   196,   197,   198,   199,   200,
      -1,   202,    -1,   204,   205,   206,   207,   208,   209,   210,
      -1,   212,    -1,   214,    -1,    -1,   217,    -1,   219,   220,
     221,   222,   223,    -1,    -1,   226,    -1,   228,    -1,    -1,
     231,   232,   233,    -1,    -1,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
      -1,   262,   263,   264,   265,   266,    -1,   268,   269,    -1,
     271,    -1,   273,   274,   275,   276,   277,   278,    -1,   280,
     281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,
      -1,   292,    -1,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,    -1,   323,   324,   325,   326,   327,   328,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,    -1,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
      -1,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,    -1,   398,   399,    -1,
     401,    -1,   403,   404,   405,   406,   407,    -1,   409,   410,
      -1,    -1,   413,   414,   415,   416,   417,    -1,   419,   420,
     421,   422,   423,   424,   425,   426,    -1,    -1,   429,   430,
     431,   432,   433,    -1,    -1,   436,   437,   438,   439,   440,
     441,   442,    -1,   444,    -1,   446,   447,   448,   449,    -1,
      -1,   452,    -1,    -1,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,    -1,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,    -1,
      -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,    -1,
     178,   179,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,    -1,   202,    -1,   204,   205,   206,   207,
     208,   209,   210,    -1,   212,    -1,   214,    -1,    -1,   217,
      -1,   219,   220,   221,   222,   223,    -1,    -1,   226,    -1,
     228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,    -1,   262,   263,   264,   265,   266,    -1,
     268,   269,    -1,   271,    -1,   273,   274,   275,   276,   277,
     278,    -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,
      -1,   289,   290,    -1,   292,    -1,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,    -1,   323,   324,   325,   326,   327,
     328,   329,   330,    -1,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,    -1,   346,   347,
      -1,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,    -1,   371,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,    -1,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,    -1,
     398,   399,    -1,   401,    -1,   403,   404,   405,   406,   407,
      -1,   409,   410,    -1,    -1,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,    -1,
      -1,   429,   430,   431,   432,   433,    -1,    -1,   436,   437,
     438,   439,   440,   441,   442,    -1,   444,    -1,   446,   447,
     448,   449,    -1,    -1,   452,    -1,    -1,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    81,    -1,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    -1,
      95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,    -1,   157,    -1,   159,   160,   161,   162,    -1,   164,
      -1,   166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,
      -1,   176,    -1,   178,   179,   180,    -1,   182,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,   192,   193,    -1,
     195,   196,   197,   198,   199,   200,    -1,   202,    -1,   204,
     205,   206,   207,   208,   209,   210,    -1,   212,    -1,   214,
      -1,    -1,   217,    -1,   219,   220,   221,   222,   223,    -1,
      -1,   226,    -1,   228,    -1,    -1,   231,   232,   233,    -1,
      -1,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,    -1,   262,   263,   264,
     265,   266,    -1,   268,   269,    -1,   271,    -1,   273,   274,
     275,   276,   277,   278,    -1,   280,   281,    -1,    -1,   284,
     285,   286,    -1,    -1,   289,   290,    -1,   292,    -1,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,    -1,   323,   324,
     325,   326,   327,   328,   329,   330,    -1,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
      -1,   346,   347,    -1,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,    -1,
     365,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,    -1,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,    -1,   398,   399,    -1,   401,    -1,   403,   404,
     405,   406,   407,    -1,   409,   410,    -1,    -1,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,   426,    -1,    -1,   429,   430,   431,   432,   433,    -1,
      -1,   436,   437,   438,   439,   440,   441,   442,    -1,   444,
      -1,   446,   447,   448,   449,    -1,    -1,   452,    -1,    -1,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    36,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,    -1,   157,    -1,   159,   160,   161,
     162,    -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,
     172,    -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,
     182,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
     192,   193,    -1,   195,   196,   197,   198,   199,   200,    -1,
     202,    -1,   204,   205,   206,   207,   208,   209,   210,    -1,
     212,    -1,   214,    -1,    -1,   217,    -1,   219,   220,   221,
     222,   223,    -1,    -1,   226,    -1,   228,    -1,    -1,   231,
     232,   233,    -1,    -1,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,    -1,
     262,   263,   264,   265,   266,    -1,   268,   269,    -1,   271,
      -1,   273,   274,   275,   276,   277,   278,    -1,   280,   281,
      -1,    -1,   284,   285,   286,    -1,    -1,   289,   290,    -1,
     292,    -1,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
      -1,   323,   324,   325,   326,   327,   328,   329,   330,    -1,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,    -1,   346,   347,    -1,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,    -1,   365,   366,   367,   368,   369,    -1,    -1,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,    -1,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,    -1,   398,   399,    -1,   401,
      -1,   403,   404,   405,   406,   407,    -1,   409,   410,    -1,
      -1,   413,   414,   415,   416,   417,    -1,   419,   420,   421,
     422,   423,   424,   425,   426,    -1,    -1,   429,   430,   431,
     432,   433,    -1,    -1,   436,   437,   438,   439,   440,   441,
     442,    -1,   444,    -1,   446,   447,   448,   449,    -1,    -1,
     452,    -1,    -1,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    81,    -1,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    -1,    95,    96,    97,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,    -1,   157,    -1,
     159,   160,   161,   162,    -1,   164,    -1,   166,    -1,    -1,
      -1,   170,   171,   172,    -1,   174,    -1,   176,    -1,   178,
     179,   180,    -1,   182,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,   192,   193,    -1,   195,   196,   197,   198,
     199,   200,    -1,   202,    -1,   204,   205,   206,   207,   208,
     209,   210,    -1,   212,    -1,   214,    -1,    -1,   217,    -1,
     219,   220,   221,   222,   223,    -1,    -1,   226,    -1,   228,
      -1,    -1,   231,   232,   233,    -1,    -1,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,    -1,   262,   263,   264,   265,   266,    -1,   268,
     269,    -1,   271,    -1,   273,   274,   275,   276,   277,   278,
      -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,
     289,   290,    -1,   292,    -1,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,    -1,   323,   324,   325,   326,   327,   328,
     329,   330,    -1,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,    -1,   346,   347,    -1,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,    -1,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,    -1,   398,
     399,    -1,   401,    -1,   403,   404,   405,   406,   407,    -1,
     409,   410,    -1,    -1,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,    -1,    -1,
     429,   430,   431,   432,   433,    -1,    -1,   436,   437,   438,
     439,   440,   441,   442,    -1,   444,    -1,   446,   447,   448,
     449,    -1,    -1,   452,    -1,    -1,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
      -1,   157,    -1,   159,   160,   161,   162,    -1,   164,    -1,
     166,    -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,
     176,    -1,   178,   179,   180,    -1,   182,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,   192,   193,    -1,   195,
     196,   197,   198,   199,   200,    -1,   202,    -1,   204,   205,
     206,   207,   208,   209,   210,    -1,   212,    -1,   214,    -1,
      -1,   217,    -1,   219,   220,   221,   222,   223,    -1,    -1,
     226,    -1,   228,    -1,    -1,   231,   232,   233,    -1,    -1,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,    -1,   262,   263,   264,   265,
     266,    -1,   268,   269,    -1,   271,    -1,   273,   274,   275,
     276,   277,   278,    -1,   280,   281,    -1,    -1,   284,   285,
     286,    -1,    -1,   289,   290,    -1,   292,    -1,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,    -1,   323,   324,   325,
     326,   327,   328,   329,   330,    -1,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,    -1,
     346,   347,    -1,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,    -1,   365,
     366,   367,   368,   369,    -1,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,    -1,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,    -1,   398,   399,    -1,   401,    -1,   403,   404,   405,
     406,   407,    -1,   409,   410,    -1,    -1,   413,   414,   415,
     416,   417,    -1,   419,   420,   421,   422,   423,   424,   425,
     426,    -1,    -1,   429,   430,   431,   432,   433,    -1,    -1,
     436,   437,   438,   439,   440,   441,   442,    -1,   444,    -1,
     446,   447,   448,   449,    -1,    -1,   452,    -1,    -1,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    81,    -1,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,    -1,   157,    -1,   159,   160,   161,   162,
      -1,   164,    -1,   166,    -1,    -1,    -1,   170,   171,   172,
      -1,   174,    -1,   176,    -1,   178,   179,   180,    -1,   182,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,   192,
     193,    -1,   195,   196,   197,   198,   199,   200,    -1,   202,
      -1,   204,   205,   206,   207,   208,   209,   210,    -1,   212,
      -1,   214,    -1,    -1,   217,    -1,   219,   220,   221,   222,
     223,    -1,    -1,   226,    -1,   228,    -1,    -1,   231,   232,
     233,    -1,    -1,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,    -1,   262,
     263,   264,   265,   266,    -1,   268,   269,    -1,   271,    -1,
     273,   274,   275,   276,   277,   278,    -1,   280,   281,    -1,
      -1,   284,   285,   286,    -1,    -1,   289,   290,    -1,   292,
      -1,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,   319,   320,   321,    -1,
     323,   324,   325,   326,   327,   328,   329,   330,    -1,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,    -1,   346,   347,    -1,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,    -1,   398,   399,    -1,   401,    -1,
     403,   404,   405,   406,   407,    -1,   409,   410,    -1,    -1,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,    -1,    -1,   429,   430,   431,   432,
     433,    -1,    -1,   436,   437,   438,   439,   440,   441,   442,
      -1,   444,    -1,   446,   447,   448,   449,    -1,    -1,   452,
      -1,    -1,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,    -1,   157,    -1,   159,
     160,   161,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
     170,   171,   172,    -1,   174,    -1,   176,    -1,   178,   179,
     180,    -1,   182,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,   192,   193,    -1,   195,   196,   197,   198,   199,
     200,    -1,   202,    -1,   204,   205,   206,   207,   208,   209,
     210,    -1,   212,    -1,   214,    -1,    -1,   217,    -1,   219,
     220,   221,   222,   223,    -1,    -1,   226,    -1,   228,    -1,
      -1,   231,   232,   233,    -1,    -1,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,    -1,   262,   263,   264,   265,   266,    -1,   268,   269,
      -1,   271,    -1,   273,   274,   275,   276,   277,   278,    -1,
     280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,
     290,    -1,   292,    -1,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,    -1,   323,   324,   325,   326,   327,   328,   329,
     330,    -1,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,    -1,   346,   347,    -1,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,    -1,   365,   366,   367,   368,   369,
      -1,   371,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,    -1,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,    -1,   398,   399,
      -1,   401,    -1,   403,   404,   405,   406,   407,    -1,   409,
     410,    -1,    -1,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,   425,   426,    -1,    -1,   429,
     430,   431,   432,   433,    -1,    -1,   436,   437,   438,   439,
     440,   441,   442,    -1,   444,    -1,   446,   447,   448,   449,
      -1,    -1,   452,    -1,    -1,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    -1,    95,    96,
      97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,    -1,
     157,    -1,   159,   160,   161,   162,    -1,   164,    -1,   166,
      -1,    -1,    -1,   170,   171,   172,    -1,   174,    -1,   176,
      -1,   178,   179,   180,    -1,   182,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,   192,   193,    -1,   195,   196,
     197,   198,   199,   200,    -1,   202,    -1,   204,   205,   206,
     207,   208,   209,   210,    -1,   212,    -1,   214,    -1,    -1,
     217,    -1,   219,   220,   221,   222,   223,    -1,    -1,   226,
      -1,   228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,    -1,   262,   263,   264,   265,   266,
      -1,   268,   269,    -1,   271,    -1,   273,   274,   275,   276,
     277,   278,    -1,   280,   281,    -1,    -1,   284,   285,   286,
      -1,    -1,   289,   290,    -1,   292,    -1,   294,   295,   296,
     297,   298,   299,   300,    -1,   302,   303,   304,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,    -1,   323,    -1,   325,   326,
     327,   328,   329,   330,    -1,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,    -1,   346,
     347,    -1,   349,   350,   351,   352,    -1,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,    -1,   365,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,    -1,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
      -1,   398,   399,    -1,   401,    -1,   403,   404,   405,   406,
     407,    -1,   409,   410,    -1,    -1,   413,   414,   415,   416,
     417,    -1,   419,   420,   421,   422,   423,   424,   425,   426,
      -1,    -1,   429,   430,   431,   432,   433,    -1,    -1,   436,
     437,   438,   439,   440,   441,   442,    -1,   444,    -1,   446,
     447,   448,   449,    -1,    -1,   452,    -1,    -1,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    -1,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    -1,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      94,    95,    96,    97,    -1,    -1,    -1,   101,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,    -1,   151,   152,   153,
     154,    -1,    -1,   157,    -1,   159,   160,   161,   162,    -1,
     164,    -1,   166,   167,    -1,   169,   170,   171,   172,   173,
     174,    -1,   176,    -1,    -1,    -1,   180,    -1,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
      -1,   195,   196,   197,   198,   199,   200,    -1,   202,   203,
      -1,   205,   206,   207,   208,   209,   210,    -1,   212,    -1,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
      -1,    -1,   226,   227,   228,   229,    -1,   231,   232,   233,
      -1,    -1,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,    -1,    -1,   268,   269,   270,   271,    -1,    -1,
     274,   275,   276,   277,   278,    -1,   280,   281,    -1,    -1,
     284,   285,   286,    -1,    -1,   289,    -1,   291,   292,   293,
      -1,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,    -1,   306,   307,    -1,   309,   310,    -1,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,    -1,   323,
     324,   325,   326,   327,   328,   329,   330,    -1,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
      -1,   365,   366,   367,   368,   369,    -1,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,    -1,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,    -1,   396,    -1,   398,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,    -1,   409,   410,    -1,    -1,   413,
     414,    -1,   416,    -1,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,    -1,    -1,   429,   430,   431,   432,   433,
      -1,    -1,   436,   437,   438,   439,   440,    -1,   442,    -1,
     444,   445,   446,   447,   448,   449,    -1,    -1,   452,    -1,
      -1,   455,   456,   457,   458,   459,   460,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   472,   473,
     474,   475,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    -1,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    -1,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
      96,    97,    -1,    -1,    -1,   101,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,    -1,   151,   152,   153,   154,    -1,
      -1,   157,    -1,   159,   160,   161,   162,    -1,   164,    -1,
     166,   167,    -1,   169,   170,   171,   172,   173,   174,    -1,
     176,    -1,    -1,    -1,   180,    -1,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,    -1,   195,
     196,   197,   198,   199,   200,    -1,   202,   203,    -1,   205,
     206,   207,   208,   209,   210,    -1,   212,    -1,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,    -1,    -1,
     226,   227,   228,   229,    -1,   231,   232,   233,    -1,    -1,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
      -1,    -1,   268,   269,   270,   271,    -1,    -1,   274,   275,
     276,   277,   278,    -1,   280,   281,    -1,    -1,   284,   285,
     286,    -1,    -1,   289,    -1,   291,   292,   293,    -1,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,    -1,
     306,   307,    -1,   309,   310,    -1,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,    -1,   323,   324,   325,
     326,   327,   328,   329,   330,    -1,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,    -1,   365,
     366,   367,   368,   369,    -1,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,    -1,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,    -1,
     396,    -1,   398,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,    -1,   409,   410,    -1,    -1,   413,   414,    -1,
     416,    -1,    -1,   419,   420,   421,   422,   423,   424,   425,
     426,    -1,    -1,   429,   430,   431,   432,   433,    -1,    -1,
     436,   437,   438,   439,   440,    -1,   442,    -1,   444,   445,
     446,   447,   448,   449,    -1,    -1,   452,    -1,    -1,   455,
     456,   457,   458,   459,   460,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   472,   473,   474,   475,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      -1,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    -1,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      -1,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,    -1,   151,   152,   153,   154,    -1,    -1,   157,
      -1,   159,   160,   161,   162,    -1,   164,    -1,   166,   167,
      -1,   169,   170,   171,   172,   173,   174,    -1,   176,    -1,
      -1,    -1,   180,    -1,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,    -1,   195,   196,   197,
     198,   199,   200,    -1,   202,   203,    -1,   205,   206,   207,
     208,   209,   210,    -1,   212,    -1,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,    -1,    -1,   226,   227,
     228,   229,    -1,   231,   232,   233,    -1,    -1,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,    -1,    -1,
     268,   269,   270,   271,    -1,    -1,   274,   275,   276,   277,
     278,    -1,   280,   281,    -1,    -1,   284,   285,   286,    -1,
      -1,   289,    -1,   291,   292,   293,    -1,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
      -1,   309,   310,    -1,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,    -1,   323,   324,   325,   326,   327,
     328,   329,   330,    -1,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,    -1,   346,   347,
     348,   349,   350,   351,    -1,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,    -1,   371,    -1,   373,   374,   375,   376,   377,
     378,   379,   380,    -1,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,    -1,   396,    -1,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
      -1,   409,   410,    -1,    -1,   413,   414,    -1,   416,    -1,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,    -1,
      -1,   429,   430,   431,   432,   433,    -1,    -1,   436,   437,
     438,   439,   440,    -1,   442,    -1,   444,   445,   446,   447,
     448,   449,    -1,    -1,   452,    -1,    -1,   455,   456,   457,
     458,   459,   460,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   472,   473,   474,   475,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    -1,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    -1,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    94,    95,    96,    97,    -1,    -1,
      -1,   101,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
      -1,   151,   152,   153,   154,    -1,    -1,   157,    -1,   159,
     160,   161,   162,    -1,   164,    -1,   166,   167,    -1,   169,
     170,   171,   172,   173,   174,    -1,   176,    -1,    -1,    -1,
     180,    -1,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,    -1,   195,   196,   197,   198,   199,
     200,    -1,   202,   203,    -1,   205,   206,   207,   208,   209,
     210,    -1,   212,    -1,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,    -1,    -1,   226,   227,   228,   229,
      -1,   231,   232,   233,    -1,    -1,   236,   237,   238,   239,
     240,    -1,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,    -1,    -1,   268,   269,
     270,   271,    -1,    -1,   274,   275,   276,   277,   278,    -1,
     280,   281,    -1,    -1,   284,   285,   286,    -1,    -1,   289,
      -1,   291,   292,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,    -1,   306,   307,    -1,   309,
     310,    -1,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,    -1,   323,   324,   325,   326,   327,   328,   329,
     330,    -1,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,    -1,   346,   347,   348,   349,
     350,   351,    -1,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,    -1,   365,   366,   367,   368,   369,
      -1,   371,    -1,   373,   374,   375,   376,   377,   378,   379,
     380,    -1,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,    -1,   394,    -1,   396,    -1,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,    -1,   409,
     410,    -1,    -1,   413,   414,    -1,   416,    -1,    -1,   419,
     420,   421,   422,   423,   424,   425,   426,    -1,    -1,   429,
     430,   431,   432,   433,    -1,    -1,   436,   437,   438,   439,
     440,    -1,   442,    -1,   444,   445,   446,   447,   448,   449,
      -1,    -1,   452,    -1,    -1,   455,   456,   457,   458,   459,
     460,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   472,   473,   474,   475
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    19,    29,    31,    32,    47,    56,    68,    79,    91,
      93,   111,   125,   135,   141,   149,   151,   152,   164,   193,
     232,   309,   312,   341,   350,   364,   371,   375,   385,   396,
     400,   436,   441,   454,   478,   492,   503,   504,   505,   506,
     517,   518,   519,   520,   521,   528,   532,   534,   535,   539,
     553,   555,   562,   608,   610,   611,   613,   616,   623,   626,
     627,   629,   631,   636,   637,   643,   660,   663,   664,   667,
     668,   669,   670,   671,   672,   673,   723,   860,   864,   867,
     874,   877,   413,   457,   628,   197,   357,   365,   400,   447,
     628,     3,    19,    20,    21,    22,    23,    24,    25,    26,
      28,    29,    30,    38,    39,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    54,    55,    56,
      57,    58,    59,    62,    63,    64,    65,    66,    68,    69,
      70,    71,    72,    74,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    87,    88,    89,    90,    91,    92,
      94,    95,    96,    97,   101,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   116,   118,   119,   120,   121,
     122,   123,   125,   126,   127,   128,   129,   132,   133,   134,
     135,   136,   138,   139,   140,   142,   143,   144,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   157,   159,
     160,   161,   162,   164,   166,   167,   169,   170,   171,   172,
     173,   174,   176,   178,   179,   180,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   195,   196,
     197,   198,   199,   200,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   212,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   226,   227,   228,   229,   231,   232,
     233,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   268,   269,   270,   271,   273,   274,   275,   276,
     277,   278,   280,   281,   284,   285,   286,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   316,   317,   318,   319,   320,   321,   323,   324,
     325,   326,   327,   328,   329,   330,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   365,   366,   367,
     368,   369,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   398,   399,   401,
     402,   403,   404,   405,   406,   407,   409,   410,   413,   414,
     415,   416,   417,   419,   420,   421,   422,   423,   424,   425,
     426,   429,   430,   431,   432,   433,   436,   437,   438,   439,
     440,   441,   442,   444,   445,   446,   447,   448,   449,   452,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   779,   845,   849,   852,   879,   880,   881,   628,    50,
     492,   655,   170,   174,   233,   240,   287,   357,   404,   406,
     422,   428,   431,   606,   622,   661,     3,    27,   241,   312,
     393,   843,   849,   879,    21,    74,    90,   144,   153,   165,
     170,   197,   240,   244,   307,   321,   354,   357,   365,   368,
     387,   400,   407,   416,   422,   447,   868,   869,   872,   628,
     843,    93,   445,   492,   524,   528,   535,   623,   667,   668,
     860,   108,    68,   108,     5,   533,   848,   849,   843,    27,
     409,   413,   612,   614,   615,   849,   628,    27,   130,   680,
     681,   174,   233,   357,   369,   409,   612,   638,   639,   628,
     441,   612,   668,   673,     5,   283,   734,   841,   849,   850,
     169,   492,   633,   492,   329,   674,   675,   843,   674,   669,
     670,     0,   495,   445,   522,   120,   207,   433,    27,   409,
     413,   612,   668,   145,   211,   288,   427,   683,   684,   669,
     671,   672,   496,   187,   841,   843,   187,   841,   187,   734,
     187,   841,   492,   490,   494,   827,   829,   535,   666,   667,
     668,   860,   841,   404,   406,   404,   406,   339,   187,   849,
     849,   854,   329,   365,   400,   447,   197,   841,    27,   843,
     246,   416,   107,   400,   447,   360,     3,    44,    49,    50,
      51,    52,    64,    65,    74,    82,    94,   101,   112,   113,
     134,   161,   167,   169,   173,   187,   189,   203,   209,   210,
     212,   215,   216,   218,   227,   229,   241,   260,   261,   262,
     270,   275,   291,   293,   326,   348,   352,   372,   376,   379,
     393,   402,   409,   410,   421,   442,   445,   745,   746,   748,
     750,   752,   754,   756,   757,   758,   760,   761,   762,   764,
     765,   853,   873,   879,   882,   187,   854,   870,   187,   842,
     843,   187,   843,   492,   878,   606,   524,     3,    48,    49,
      51,    52,    64,    65,    72,   112,   113,   150,   155,   161,
     178,   179,   204,   209,   210,   212,   241,   260,   262,   266,
     273,   275,   290,   294,   308,   311,   326,   352,   372,   379,
     393,   395,   409,   410,   415,   417,   421,   441,   442,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     525,   527,   528,   530,   531,   879,   883,   522,   848,   848,
     481,   492,   492,   665,   475,   217,   494,   282,     4,     6,
       7,     8,     9,    10,    35,    49,    51,    52,    60,    61,
      64,    65,    72,    74,    98,    99,   100,   101,   102,   103,
     104,   112,   113,   115,   150,   155,   156,   161,   178,   179,
     209,   210,   212,   234,   235,   260,   262,   267,   272,   273,
     275,   284,   294,   308,   326,   352,   370,   379,   395,   409,
     410,   415,   417,   418,   421,   434,   442,   476,   483,   484,
     485,   490,   492,   497,   499,   500,   669,   713,   749,   752,
     755,   756,   757,   759,   760,   761,   764,   765,   776,   778,
     779,   780,   782,   795,   796,   802,   821,   826,   833,   834,
     845,   846,   847,   848,   849,   832,   833,   638,   638,   848,
     638,   475,   168,   411,   481,   492,   841,   485,   829,     3,
     167,   169,   445,   528,   632,   634,   167,   635,   776,   806,
     849,   674,   496,   492,   856,   493,   493,   505,   841,   168,
     213,   734,   861,   475,   217,    27,   130,   679,   679,    54,
     679,   158,   163,   230,   279,   689,   691,   692,   716,   718,
     719,   720,   683,   684,   492,   150,    23,    29,   135,   286,
     337,   341,   371,   438,   511,   514,   515,   337,   150,    36,
      55,   106,   196,   245,   253,   265,   296,   337,   343,   365,
     371,   385,   514,   556,   559,   150,   337,   371,   514,   150,
     337,   371,   514,     3,    27,    44,    50,    74,    82,    94,
     101,   130,   167,   169,   173,   189,   203,   215,   216,   218,
     227,   229,   241,   261,   270,   291,   293,   348,   376,   393,
     402,   421,   443,   445,   485,   493,   776,   808,   809,   851,
     857,   879,   884,   776,   828,     3,    27,    31,    32,    33,
      34,    35,    36,    37,    40,    53,    60,    61,    67,    73,
      75,    86,    93,    98,    99,   100,   102,   103,   104,   115,
     117,   124,   130,   131,   137,   141,   145,   156,   158,   163,
     165,   168,   175,   177,   181,   194,   201,   211,   213,   224,
     225,   230,   234,   235,   267,   272,   279,   282,   283,   287,
     288,   305,   315,   322,   331,   345,   364,   370,   381,   397,
     400,   408,   411,   412,   418,   427,   428,   434,   435,   441,
     443,   450,   451,   453,   454,   844,   858,   879,   883,   885,
     827,   493,   492,   596,   606,   267,   865,   494,   855,    36,
     447,   187,   841,   187,   625,   841,   841,    82,   619,   492,
     662,   458,    83,   127,   299,   405,   444,   763,   763,   763,
     492,   751,   751,   311,   492,   753,   150,   492,    64,    65,
     763,   751,   748,   456,   478,   492,   766,   492,   766,   492,
      35,   747,   492,   109,   110,   184,   185,   247,   248,   249,
     250,   251,   252,   255,   256,   361,   362,   472,   473,   492,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   751,
      58,   344,   496,   871,   150,   496,   871,   150,   496,   871,
     150,   282,   806,   400,   493,   496,     4,   156,   282,   418,
     483,   484,   523,   525,   526,   529,   558,   561,   847,   848,
     524,   492,   650,   654,   529,   558,   640,   642,   808,   746,
     810,    36,   228,   849,   492,   830,   490,   776,   825,   492,
     492,   163,   492,   492,   669,   492,   492,   492,   776,   492,
     492,   492,   492,   492,   492,   492,   492,   492,   776,   776,
     776,   146,   835,   836,   806,   807,   669,   776,   806,   797,
     798,   849,   850,     9,   830,   829,   492,   848,   492,   847,
     848,     3,     8,    11,    16,    17,    18,    33,    36,    41,
      48,    73,   173,   189,   194,   215,   216,   229,   267,   270,
     284,   287,   376,   476,   479,   480,   481,   483,   484,   485,
     486,   487,   488,   800,   801,   802,   804,   455,   783,   830,
      15,   293,   776,    15,   213,   496,   676,   492,   848,   830,
     494,   829,   676,     3,   115,   233,   558,   641,   765,   848,
      97,   115,   642,   115,   642,   841,   493,   496,   522,   493,
     496,   675,   842,    36,   856,   861,   537,   841,    36,   849,
     371,   228,   671,   671,   685,   686,   776,   671,   160,   264,
     705,   219,   265,   325,   374,   433,     4,     9,    27,   700,
     776,   483,   484,   701,   702,   776,   778,   716,   717,   692,
     691,   689,   690,   163,   719,   277,   721,   689,   716,   806,
     841,    67,    75,    86,   165,   187,   315,   428,   577,   587,
     602,   849,    75,    86,   554,    86,   554,   492,   411,   492,
     575,   239,   431,   575,    86,   496,   411,   841,   748,   558,
      54,   560,   558,   558,   106,   245,   253,    54,   411,   454,
     478,   557,   258,   357,   557,   559,   734,    86,   411,   554,
     357,   841,   411,   357,   808,   808,   809,   493,   496,   683,
     684,    13,    14,   491,   501,   411,   595,   600,   849,   454,
     653,   329,   400,   447,   150,    93,   562,   608,   616,   629,
     866,   844,   494,   142,   841,   267,   556,   609,   267,    36,
     492,   596,   596,   187,   590,   620,   849,   493,   808,    36,
     492,   806,   847,   873,   810,   763,   763,    35,   747,   409,
     409,   847,   847,   744,   849,   490,   490,   847,   847,   411,
     411,   411,   411,   746,   870,   854,   842,   843,   843,   854,
     493,   187,   625,   841,   524,   530,     4,   847,     4,   847,
     652,   659,   858,    50,    95,   121,   139,   143,   164,   167,
     182,   272,   280,   323,   656,   496,   493,   496,   493,   496,
     666,   806,   827,   807,   450,   822,   823,   776,   806,   492,
     847,   847,     3,   767,   768,   769,   770,   771,   772,   773,
     774,   811,   812,   848,   847,   847,   776,     8,    16,    17,
      18,   479,   480,   481,   483,   484,   485,   486,   487,   488,
     800,   805,   849,   776,   813,   483,   484,   492,   777,   778,
     802,   815,   826,   493,   806,   776,   806,   816,   776,    53,
     168,   225,   412,   776,   806,   819,   776,   492,   849,   339,
     839,   491,   493,   496,   496,   498,   501,   806,   776,   775,
     775,   746,   776,   776,   776,   776,     5,   858,   859,   409,
      40,   397,   831,   854,   776,   776,   492,   669,   820,   130,
     156,   267,   272,   277,   418,   429,   776,   272,   492,   776,
     411,    48,   173,   189,   194,   229,   376,   776,   776,   776,
     776,   776,   776,   776,   776,   776,   776,    27,    34,   381,
     799,   177,   159,   784,   776,   352,   492,   796,   776,   174,
     233,   400,   404,   406,   431,   677,   841,   834,   168,   724,
     808,   485,   724,   492,   848,   493,   841,   632,   534,   841,
     776,   493,   492,   435,   863,   115,   295,   492,   536,   668,
      36,   849,   492,   541,   550,   552,   849,   496,    37,   124,
     435,   687,   352,   353,   483,   484,   702,   704,   778,   374,
     219,   283,   304,   304,   496,   487,     4,   703,   847,   703,
     352,   353,   704,   840,   841,   271,   378,   722,   717,   690,
     493,   337,   514,   492,   187,   587,   843,   219,   267,   219,
     435,   492,   580,   746,   843,   849,   187,   843,   187,   849,
      23,   135,   371,   510,   513,   570,   585,   858,   843,   579,
     599,   858,   843,   511,   843,   337,   371,   514,   556,   558,
     854,   843,   558,   854,   843,   558,   337,   371,   514,   843,
     843,   843,   843,   337,   371,   514,   843,   843,   683,   683,
     683,   443,   809,   188,   342,   682,   776,   776,   776,   828,
     320,   649,   493,   496,   280,   168,   411,   644,   447,   841,
     841,   849,   606,   844,   492,   492,   150,   150,   149,   668,
     229,   577,   587,   591,   594,   603,   605,   849,   454,   456,
     582,   454,   621,   267,   282,   493,   776,   806,   493,   493,
     871,   493,   490,   475,   475,   493,   493,   493,   496,   746,
     847,   491,   847,   493,   493,   768,   770,   771,   772,   771,
     772,   772,   871,   871,   282,   871,   267,    36,   493,   496,
     485,   492,   529,   558,   651,    36,   648,   848,   648,   267,
     272,   323,   648,   648,   640,   746,   493,   491,   776,   137,
     823,   824,    36,   493,   776,   493,   493,   493,   168,   493,
     493,   496,   493,   494,   305,   814,   493,   777,   777,   776,
      11,    16,    17,    18,   194,   215,   284,   479,   480,   481,
     483,   484,   485,   486,   487,   488,   802,   777,   493,   493,
     163,   168,   817,   818,   493,    36,   819,   806,   819,   819,
     168,   493,    36,   842,   492,   776,   837,   830,   776,   797,
     776,   493,   493,   475,   777,   777,   143,   806,   168,   130,
     156,   272,   277,   418,   429,   492,   143,   805,   776,   397,
     831,   776,   820,   776,   411,   492,   669,   492,   492,   292,
     788,   404,   406,   404,   406,   841,   400,   678,   678,   678,
     224,   353,   492,   669,   725,   726,   727,   734,   735,   779,
     781,   782,   849,   451,   740,   683,   836,   740,   847,   775,
     856,   666,   725,   451,   862,   441,   399,   434,   545,   540,
     549,   849,   282,   542,   849,   546,   552,   496,   724,   481,
     830,   686,   284,   800,   803,   477,   688,     4,   847,   704,
     283,   433,   701,   496,   238,   411,   776,   267,   602,   492,
     150,   492,   580,   197,   600,   563,   286,   573,   563,    23,
     135,   341,   343,   371,   507,   508,   509,   515,   516,   150,
     871,   150,   871,   570,   585,   570,   493,   496,   566,   848,
     493,   496,   481,   494,   411,   357,    86,   411,   554,   357,
     411,   411,   411,   357,   682,   682,   682,   809,   274,   274,
     493,   491,   388,   389,   658,   848,   595,   649,   841,   492,
     596,   865,   400,   848,   875,   876,   600,   841,   625,   841,
     843,   454,   624,   841,   493,   496,   280,   575,   280,   282,
     574,   575,    36,   150,   841,   493,   747,   847,   766,   766,
     747,   849,   491,   491,   854,   150,   652,   529,   646,   657,
     848,   848,   272,   600,   485,   600,   848,   848,   408,   776,
     141,   746,   493,   776,   776,   805,   776,   817,   746,   777,
     777,   777,   777,   130,   267,   277,   777,   777,   777,   777,
     777,   777,   777,   777,   777,   777,   776,   776,   818,   817,
     746,   493,   493,   493,   806,   746,   493,   776,   837,   838,
      36,   493,   775,   776,    33,    33,   776,   493,   776,   168,
     492,   810,   776,   493,   143,   777,   777,   143,   143,   776,
     776,   684,   451,   492,   789,   849,   678,   678,   678,   678,
     841,   841,   841,   669,   735,   168,   669,   726,   727,    36,
     728,   729,   849,   496,    94,   169,   203,   218,   227,   261,
     348,   731,   729,    36,   728,   730,   849,   478,   739,   829,
     776,   177,   706,   682,   839,   706,   493,   493,   776,   345,
     544,   440,   493,   496,   830,    84,   544,   493,   496,   541,
     862,   776,   492,   688,   160,   223,   283,   841,   843,   493,
     150,   600,   587,   600,   563,   590,   493,   117,   201,   265,
     267,   586,   492,   597,   172,   115,   186,   267,   575,   557,
     107,   115,   172,   267,   387,   390,   559,   575,   371,   509,
     422,   843,   849,   513,   599,     3,    44,    50,    74,    82,
      94,   101,   167,   169,   173,   189,   203,   215,   216,   218,
     227,   229,   241,   261,   266,   270,   284,   291,   293,   348,
     372,   376,   393,   402,   421,   445,   483,   484,   558,   564,
     601,   746,   803,   848,   851,   879,   885,   858,   843,   843,
     843,   843,   843,   843,   843,   843,   843,   843,   493,   493,
     493,   683,   557,   658,   492,   594,   621,   187,   841,   493,
     496,   493,   609,    36,   492,   878,   107,   265,   584,   582,
     591,    79,   668,   590,   435,   618,   491,   746,   871,   625,
     493,   496,   600,   776,   493,   493,   818,   168,   130,   277,
     492,   493,   493,   493,   496,   849,   776,   776,   776,   810,
     493,   776,    33,    33,   776,   776,   143,   493,   493,   776,
     790,   849,   841,   841,   841,   841,   729,   730,   492,   493,
     849,   850,   402,   697,   698,   492,   726,   218,   291,   732,
     726,   732,   218,   731,   732,   218,   698,   492,   849,   698,
     492,   289,    54,   181,   714,   493,   714,   848,   833,   668,
     295,   668,   540,   282,   492,   538,   481,   552,   544,   805,
     563,   587,   493,   493,   454,   593,   118,   190,   199,   117,
     437,   570,   588,    67,    73,    86,   115,   117,   172,   201,
     267,   272,   315,   331,   428,   435,   568,   569,   581,    30,
      54,   607,   187,   272,   558,   776,   607,   272,   483,   484,
     561,   849,   746,   871,   871,   241,   393,   851,   855,   481,
     411,   411,   682,   650,   435,   645,   647,   600,   493,    36,
     267,   492,   848,   621,   149,   668,   594,   624,   107,   147,
     195,   574,   120,   135,   314,   454,   630,   282,   617,   849,
     492,    36,   657,   777,   168,   492,   810,   837,   493,   776,
     776,   776,   493,   301,   791,   736,   737,   781,   728,   492,
       4,     9,   693,   695,   696,   849,   842,   726,   282,   435,
     733,   726,   218,   726,   741,   742,   849,   492,   741,   849,
      96,   178,   351,   492,   707,   708,   709,   710,   711,   712,
     776,   776,   453,   785,   848,   785,   545,    86,   492,   543,
     551,   781,   849,   131,   776,   493,   331,   593,   492,   583,
     563,   493,   496,   492,   854,   843,   777,   607,   118,   190,
     117,   272,   219,   841,   593,    81,   115,    36,   150,    73,
     743,   855,   487,   564,   843,   843,   493,   557,   122,   493,
     582,   668,   150,    36,   843,   624,   493,    27,    78,    87,
     116,   186,   198,   387,   390,   578,   578,   353,   353,    59,
      67,   233,   841,   551,   777,   810,   493,    54,   683,   493,
     496,    36,   738,   842,   304,   487,   304,   353,   487,   492,
     492,   493,   776,   492,   726,   733,   493,   496,   746,   741,
     493,   492,   373,   492,   493,   496,   786,   787,   849,   322,
     715,   715,   440,   843,   776,   493,   496,    73,   547,   547,
     268,   433,   841,   563,   589,   592,   858,   570,   776,   267,
     569,    36,   593,   596,   843,   186,   854,   435,   512,   487,
     422,   650,   848,   621,   574,   630,   841,   668,   878,   582,
      67,   285,    67,   618,   493,   493,   806,   324,   353,   792,
     739,   736,   492,   493,   849,   693,   842,   742,   743,   493,
     806,   492,   806,   708,   496,    36,   776,   435,   694,   694,
     668,   493,   740,   543,   854,   548,   854,   548,   371,   596,
     493,   496,   481,   493,   186,   243,   604,   492,   565,   776,
     422,    36,   492,   630,   624,   574,   285,   285,   492,   621,
      48,    97,   424,   776,   793,   794,   793,   493,   741,   493,
     496,   493,   493,   493,   707,   493,   787,   789,   355,   547,
     687,   687,   550,   604,   592,   564,   265,   576,   565,   169,
     300,   377,   282,   571,   572,   598,   556,   668,   551,   740,
     794,   352,   162,   310,   162,   310,   493,     9,   338,   699,
     493,   696,   548,   688,   688,   740,   572,   199,   120,   433,
     282,   598,   282,   571,   493,   630,   493,    33,   493,   492,
     687,   563,    58,   265,   344,   371,   567,   567,   621,   794,
       9,   688,    22,   115,   272,   740,   493
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */

#define YYFAIL		goto yyerrlab

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)					\
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    {								\
      yychar = (Token);						\
      yylval = (Value);						\
      yytoken = YYTRANSLATE (yychar);				\
      YYPOPSTACK (1);						\
      goto yybackup;						\
    }								\
  else								\
    {								\
      yyerror (&yylloc, yyscanner, YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (YYID (0))


#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#define YYRHSLOC(Rhs, K) ((Rhs)[K])
#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)				\
    do									\
      if (YYID (N))                                                    \
	{								\
	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
	}								\
      else								\
	{								\
	  (Current).first_line   = (Current).last_line   =		\
	    YYRHSLOC (Rhs, 0).last_line;				\
	  (Current).first_column = (Current).last_column =		\
	    YYRHSLOC (Rhs, 0).last_column;				\
	}								\
    while (YYID (0))
#endif


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if YYLTYPE_IS_TRIVIAL
#  define YY_LOCATION_PRINT(File, Loc)			\
     fprintf (File, "%d.%d-%d.%d",			\
	      (Loc).first_line, (Loc).first_column,	\
	      (Loc).last_line,  (Loc).last_column)
# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */

#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, &yylloc, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval, &yylloc, yyscanner)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (YYID (0))

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
do {									  \
  if (yydebug)								  \
    {									  \
      YYFPRINTF (stderr, "%s ", Title);					  \
      yy_symbol_print (stderr,						  \
		  Type, Value, Location, yyscanner); \
      YYFPRINTF (stderr, "\n");						  \
    }									  \
} while (YYID (0))


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (!yyvaluep)
    return;
  YYUSE (yylocationp);
  YYUSE (yyscanner);
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# else
  YYUSE (yyoutput);
# endif
  switch (yytype)
    {
      default:
	break;
    }
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
#else
static void
yy_stack_print (bottom, top)
    yytype_int16 *bottom;
    yytype_int16 *top;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (; bottom <= top; ++bottom)
    YYFPRINTF (stderr, " %d", *bottom);
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (YYID (0))


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_reduce_print (YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, core_yyscan_t yyscanner)
#else
static void
yy_reduce_print (yyvsp, yylsp, yyrule, yyscanner)
    YYSTYPE *yyvsp;
    YYLTYPE *yylsp;
    int yyrule;
    core_yyscan_t yyscanner;
#endif
{
  int yynrhs = yyr2[yyrule];
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
	     yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      fprintf (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
		       &(yyvsp[(yyi + 1) - (yynrhs)])
		       , &(yylsp[(yyi + 1) - (yynrhs)])		       , yyscanner);
      fprintf (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (yyvsp, yylsp, Rule, yyscanner); \
} while (YYID (0))

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif



#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static YYSIZE_T
yystrlen (const char *yystr)
#else
static YYSIZE_T
yystrlen (yystr)
    const char *yystr;
#endif
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static char *
yystpcpy (char *yydest, const char *yysrc)
#else
static char *
yystpcpy (yydest, yysrc)
    char *yydest;
    const char *yysrc;
#endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into YYRESULT an error message about the unexpected token
   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
   including the terminating null byte.  If YYRESULT is null, do not
   copy anything; just return the number of bytes that would be
   copied.  As a special case, return 0 if an ordinary "syntax error"
   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
   size calculation.  */
static YYSIZE_T
yysyntax_error (char *yyresult, int yystate, int yychar)
{
  int yyn = yypact[yystate];

  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
    return 0;
  else
    {
      int yytype = YYTRANSLATE (yychar);
      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
      YYSIZE_T yysize = yysize0;
      YYSIZE_T yysize1;
      int yysize_overflow = 0;
      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
      int yyx;

# if 0
      /* This is so xgettext sees the translatable formats that are
	 constructed on the fly.  */
      YY_("syntax error, unexpected %s");
      YY_("syntax error, unexpected %s, expecting %s");
      YY_("syntax error, unexpected %s, expecting %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
# endif
      char *yyfmt;
      char const *yyf;
      static char const yyunexpected[] = "syntax error, unexpected %s";
      static char const yyexpecting[] = ", expecting %s";
      static char const yyor[] = " or %s";
      char yyformat[sizeof yyunexpected
		    + sizeof yyexpecting - 1
		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
		       * (sizeof yyor - 1))];
      char const *yyprefix = yyexpecting;

      /* Start YYX at -YYN if negative to avoid negative indexes in
	 YYCHECK.  */
      int yyxbegin = yyn < 0 ? -yyn : 0;

      /* Stay within bounds of both yycheck and yytname.  */
      int yychecklim = YYLAST - yyn + 1;
      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
      int yycount = 1;

      yyarg[0] = yytname[yytype];
      yyfmt = yystpcpy (yyformat, yyunexpected);

      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
	  {
	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
	      {
		yycount = 1;
		yysize = yysize0;
		yyformat[sizeof yyunexpected - 1] = '\0';
		break;
	      }
	    yyarg[yycount++] = yytname[yyx];
	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
	    yysize_overflow |= (yysize1 < yysize);
	    yysize = yysize1;
	    yyfmt = yystpcpy (yyfmt, yyprefix);
	    yyprefix = yyor;
	  }

      yyf = YY_(yyformat);
      yysize1 = yysize + yystrlen (yyf);
      yysize_overflow |= (yysize1 < yysize);
      yysize = yysize1;

      if (yysize_overflow)
	return YYSIZE_MAXIMUM;

      if (yyresult)
	{
	  /* Avoid sprintf, as that infringes on the user's name space.
	     Don't have undefined behavior even if the translation
	     produced a string with the wrong number of "%s"s.  */
	  char *yyp = yyresult;
	  int yyi = 0;
	  while ((*yyp = *yyf) != '\0')
	    {
	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
		{
		  yyp += yytnamerr (yyp, yyarg[yyi++]);
		  yyf += 2;
		}
	      else
		{
		  yyp++;
		  yyf++;
		}
	    }
	}
      return yysize;
    }
}
#endif /* YYERROR_VERBOSE */


/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, core_yyscan_t yyscanner)
#else
static void
yydestruct (yymsg, yytype, yyvaluep, yylocationp, yyscanner)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
    YYLTYPE *yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (yyscanner);

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
	break;
    }
}


/* Prevent warnings from -Wmissing-prototypes.  */

#ifdef YYPARSE_PARAM
#if defined __STDC__ || defined __cplusplus
int yyparse (void *YYPARSE_PARAM);
#else
int yyparse ();
#endif
#else /* ! YYPARSE_PARAM */
#if defined __STDC__ || defined __cplusplus
int yyparse (core_yyscan_t yyscanner);
#else
int yyparse ();
#endif
#endif /* ! YYPARSE_PARAM */






/*----------.
| yyparse.  |
`----------*/

#ifdef YYPARSE_PARAM
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void *YYPARSE_PARAM)
#else
int
yyparse (YYPARSE_PARAM)
    void *YYPARSE_PARAM;
#endif
#else /* ! YYPARSE_PARAM */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (core_yyscan_t yyscanner)
#else
int
yyparse (yyscanner)
    core_yyscan_t yyscanner;
#endif
#endif
{
  /* The look-ahead symbol.  */
int yychar;

/* The semantic value of the look-ahead symbol.  */
YYSTYPE yylval;

/* Number of syntax errors so far.  */
int yynerrs;
/* Location data for the look-ahead symbol.  */
YYLTYPE yylloc;

  int yystate;
  int yyn;
  int yyresult;
  /* Number of tokens to shift before error messages enabled.  */
  int yyerrstatus;
  /* Look-ahead token as an internal (translated) token number.  */
  int yytoken = 0;
#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

  /* Three stacks and their tools:
     `yyss': related to states,
     `yyvs': related to semantic values,
     `yyls': related to locations.

     Refer to the stacks thru separate pointers, to allow yyoverflow
     to reallocate them elsewhere.  */

  /* The state stack.  */
  yytype_int16 yyssa[YYINITDEPTH];
  yytype_int16 *yyss = yyssa;
  yytype_int16 *yyssp;

  /* The semantic value stack.  */
  YYSTYPE yyvsa[YYINITDEPTH];
  YYSTYPE *yyvs = yyvsa;
  YYSTYPE *yyvsp;

  /* The location stack.  */
  YYLTYPE yylsa[YYINITDEPTH];
  YYLTYPE *yyls = yylsa;
  YYLTYPE *yylsp;
  /* The locations where the error started and ended.  */
  YYLTYPE yyerror_range[2];

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  YYSIZE_T yystacksize = YYINITDEPTH;

  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY;		/* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */

  yyssp = yyss;
  yyvsp = yyvs;
  yylsp = yyls;
#if YYLTYPE_IS_TRIVIAL
  /* Initialize the default location before parsing starts.  */
  yylloc.first_line   = yylloc.last_line   = 1;
  yylloc.first_column = yylloc.last_column = 0;
#endif

  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack.  Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	yytype_int16 *yyss1 = yyss;
	YYLTYPE *yyls1 = yyls;

	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),
		    &yyls1, yysize * sizeof (*yylsp),
		    &yystacksize);
	yyls = yyls1;
	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	yytype_int16 *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss);
	YYSTACK_RELOCATE (yyvs);
	YYSTACK_RELOCATE (yyls);
#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     look-ahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to look-ahead token.  */
  yyn = yypact[yystate];
  if (yyn == YYPACT_NINF)
    goto yydefault;

  /* Not known => get a look-ahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yyn == 0 || yyn == YYTABLE_NINF)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the look-ahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token unless it is eof.  */
  if (yychar != YYEOF)
    yychar = YYEMPTY;

  yystate = yyn;
  *++yyvsp = yylval;
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 466 "third_party/libpg_query/grammar/grammar.y"
    {
				pg_yyget_extra(yyscanner)->parsetree = (yyvsp[(1) - (1)].list);
			;}
    break;

  case 3:
#line 482 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (3)].list) != NIL)
					{
						/* update length of previous stmt */
						updateRawStmtEnd(llast_node(PGRawStmt, (yyvsp[(1) - (3)].list)), (yylsp[(2) - (3)]));
					}
					if ((yyvsp[(3) - (3)].node) != NULL)
						(yyval.list) = lappend((yyvsp[(1) - (3)].list), makeRawStmt((yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]) + 1));
					else
						(yyval.list) = (yyvsp[(1) - (3)].list);
				;}
    break;

  case 4:
#line 494 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (1)].node) != NULL)
						(yyval.list) = list_make1(makeRawStmt((yyvsp[(1) - (1)].node), 0));
					else
						(yyval.list) = NIL;
				;}
    break;

  case 39:
#line 537 "third_party/libpg_query/grammar/grammar.y"
    { (yyval.node) = NULL; ;}
    break;

  case 40:
#line 10 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 41:
#line 19 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 42:
#line 28 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 43:
#line 37 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 44:
#line 46 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 45:
#line 55 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 46:
#line 64 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 47:
#line 73 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 48:
#line 86 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 49:
#line 88 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 50:
#line 93 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(3) - (3)].node); ;}
    break;

  case 51:
#line 94 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 52:
#line 100 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 53:
#line 104 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 54:
#line 108 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					if (strcmp((yyvsp[(2) - (2)].defelt)->defname, "as") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "restart") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "owned_by") == 0)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("sequence option \"%s\" not supported here", (yyvsp[(2) - (2)].defelt)->defname),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
				;}
    break;

  case 55:
#line 119 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("generated", (PGNode *) makeInteger((yyvsp[(3) - (3)].ival)), (yylsp[(1) - (3)]));
				;}
    break;

  case 56:
#line 127 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 57:
#line 131 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 58:
#line 140 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(2) - (2)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 59:
#line 149 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(5) - (5)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 60:
#line 158 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(3) - (3)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 61:
#line 167 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(6) - (6)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 62:
#line 176 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ColumnDefault;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (yyvsp[(4) - (4)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 63:
#line 185 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 64:
#line 193 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 65:
#line 201 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStatistics;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeInteger((yyvsp[(6) - (6)].ival));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 66:
#line 210 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 67:
#line 219 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 68:
#line 228 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStorage;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeString((yyvsp[(6) - (6)].str));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 69:
#line 237 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);

					c->contype = PG_CONSTR_IDENTITY;
					c->generated_when = (yyvsp[(6) - (9)].ival);
					c->options = (yyvsp[(9) - (9)].list);
					c->location = (yylsp[(5) - (9)]);

					n->subtype = PG_AT_AddIdentity;
					n->name = (yyvsp[(3) - (9)].str);
					n->def = (PGNode *) c;

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 70:
#line 254 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetIdentity;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 71:
#line 263 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (5)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 72:
#line 272 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (7)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 73:
#line 281 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 74:
#line 291 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 75:
#line 304 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGColumnDef *def = makeNode(PGColumnDef);
					n->subtype = PG_AT_AlterColumnType;
					n->name = (yyvsp[(3) - (8)].str);
					n->def = (PGNode *) def;
					/* We only use these fields of the PGColumnDef node */
					def->typeName = (yyvsp[(6) - (8)].typnam);
					def->collClause = (PGCollateClause *) (yyvsp[(7) - (8)].node);
					def->raw_default = (yyvsp[(8) - (8)].node);
					def->location = (yylsp[(3) - (8)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 76:
#line 319 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AlterColumnGenericOptions;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 77:
#line 328 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddConstraint;
					n->def = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 78:
#line 336 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);
					n->subtype = PG_AT_AlterConstraint;
					n->def = (PGNode *) c;
					c->contype = PG_CONSTR_FOREIGN; /* others not supported, yet */
					c->conname = (yyvsp[(3) - (4)].str);
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "ALTER CONSTRAINT statement",
									&c->deferrable,
									&c->initdeferred,
									NULL, NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 79:
#line 351 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ValidateConstraint;
					n->name = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 80:
#line 359 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 81:
#line 369 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 82:
#line 379 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 83:
#line 386 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetUnLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 84:
#line 393 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 85:
#line 401 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 86:
#line 408 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_GenericOptions;
					n->def = (PGNode *)(yyvsp[(1) - (1)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 87:
#line 418 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 88:
#line 419 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 89:
#line 425 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(1) - (1)].defelt);
				;}
    break;

  case 90:
#line 429 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_SET;
				;}
    break;

  case 91:
#line 434 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_ADD;
				;}
    break;

  case 92:
#line 439 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElemExtended(NULL, (yyvsp[(2) - (2)].str), NULL, DEFELEM_DROP, (yylsp[(2) - (2)]));
				;}
    break;

  case 93:
#line 446 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 94:
#line 447 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 95:
#line 452 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 96:
#line 456 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 1; ;}
    break;

  case 97:
#line 457 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 0; ;}
    break;

  case 98:
#line 458 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 0; ;}
    break;

  case 99:
#line 8 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGExportStmt *n = makeNode(PGExportStmt);
					n->filename = (yyvsp[(3) - (4)].str);
					n->options = NIL;
					if ((yyvsp[(4) - (4)].list)) {
						n->options = list_concat(n->options, (yyvsp[(4) - (4)].list));
					}
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 100:
#line 21 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGImportStmt *n = makeNode(PGImportStmt);
					n->filename = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 101:
#line 8 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_NOTHING;
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 102:
#line 15 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_ASSIGNMENT;
					n->name = (yyvsp[(2) - (4)].str);
					n->args = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 103:
#line 23 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_CALL;
					n->name = (yyvsp[(2) - (5)].str);
					n->args = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 104:
#line 8 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 105:
#line 17 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 106:
#line 26 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 107:
#line 35 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 108:
#line 44 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 109:
#line 53 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 110:
#line 10 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(2) - (2)].node);
					n->options = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 111:
#line 17 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(4) - (4)].node);
					n->options = list_make1(makeDefElem("analyze", NULL, (yylsp[(2) - (4)])));
					if ((yyvsp[(3) - (4)].boolean))
						n->options = lappend(n->options,
											 makeDefElem("verbose", NULL, (yylsp[(3) - (4)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 112:
#line 27 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(3) - (3)].node);
					n->options = list_make1(makeDefElem("verbose", NULL, (yylsp[(2) - (3)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 113:
#line 34 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(5) - (5)].node);
					n->options = (yyvsp[(3) - (5)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 114:
#line 44 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = true; ;}
    break;

  case 115:
#line 45 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = false; ;}
    break;

  case 116:
#line 50 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 117:
#line 51 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 118:
#line 52 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = NULL; ;}
    break;

  case 124:
#line 65 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 125:
#line 66 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 126:
#line 67 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 127:
#line 72 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 128:
#line 73 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 129:
#line 79 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 130:
#line 83 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 131:
#line 90 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 132:
#line 91 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 133:
#line 96 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "true"; ;}
    break;

  case 134:
#line 97 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "false"; ;}
    break;

  case 135:
#line 98 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "on"; ;}
    break;

  case 136:
#line 104 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 137:
#line 110 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 138:
#line 117 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 139:
#line 118 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "analyze"; ;}
    break;

  case 140:
#line 8 "third_party/libpg_query/grammar/statements/load.y"
    {
					PGLoadStmt *n = makeNode(PGLoadStmt);
					n->filename = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 141:
#line 16 "third_party/libpg_query/grammar/statements/load.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 142:
#line 10 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (2)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 143:
#line 20 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(3) - (4)].range);
					n->va_cols = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 144:
#line 10 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(5) - (7)].istmt)->relation = (yyvsp[(4) - (7)].range);
					(yyvsp[(5) - (7)].istmt)->onConflictClause = (yyvsp[(6) - (7)].onconflict);
					(yyvsp[(5) - (7)].istmt)->returningList = (yyvsp[(7) - (7)].list);
					(yyvsp[(5) - (7)].istmt)->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *) (yyvsp[(5) - (7)].istmt);
				;}
    break;

  case 145:
#line 22 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 146:
#line 28 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->override = (yyvsp[(2) - (4)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 147:
#line 35 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (4)].list);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 148:
#line 41 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (7)].list);
					(yyval.istmt)->override = (yyvsp[(5) - (7)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(7) - (7)].node);
				;}
    break;

  case 149:
#line 48 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = NULL;
				;}
    break;

  case 150:
#line 58 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 151:
#line 62 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].range)->alias = makeAlias((yyvsp[(3) - (3)].str), NIL);
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 152:
#line 71 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = (yyvsp[(2) - (4)].list);
					(yyval.infer)->whereClause = (yyvsp[(4) - (4)].node);
					(yyval.infer)->conname = NULL;
					(yyval.infer)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 153:
#line 80 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = NIL;
					(yyval.infer)->whereClause = NULL;
					(yyval.infer)->conname = (yyvsp[(3) - (3)].str);
					(yyval.infer)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 154:
#line 88 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = NULL;
				;}
    break;

  case 155:
#line 95 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = (yyvsp[(1) - (1)].with); ;}
    break;

  case 156:
#line 96 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = NULL; ;}
    break;

  case 157:
#line 102 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 158:
#line 114 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].target)->val = (PGNode *) (yyvsp[(3) - (3)].node);
					(yyval.list) = list_make1((yyvsp[(1) - (3)].target));
				;}
    break;

  case 159:
#line 119 "third_party/libpg_query/grammar/statements/insert.y"
    {
					int ncolumns = list_length((yyvsp[(2) - (5)].list));
					int i = 1;
					PGListCell *col_cell;

					/* Create a PGMultiAssignRef source for each target */
					foreach(col_cell, (yyvsp[(2) - (5)].list))
					{
						PGResTarget *res_col = (PGResTarget *) lfirst(col_cell);
						PGMultiAssignRef *r = makeNode(PGMultiAssignRef);

						r->source = (PGNode *) (yyvsp[(5) - (5)].node);
						r->colno = i;
						r->ncolumns = ncolumns;
						res_col->val = (PGNode *) r;
						i++;
					}

					(yyval.list) = (yyvsp[(2) - (5)].list);
				;}
    break;

  case 160:
#line 144 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_UPDATE;
					(yyval.onconflict)->infer = (yyvsp[(3) - (8)].infer);
					(yyval.onconflict)->targetList = (yyvsp[(7) - (8)].list);
					(yyval.onconflict)->whereClause = (yyvsp[(8) - (8)].node);
					(yyval.onconflict)->location = (yylsp[(1) - (8)]);
				;}
    break;

  case 161:
#line 154 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_NOTHING;
					(yyval.onconflict)->infer = (yyvsp[(3) - (5)].infer);
					(yyval.onconflict)->targetList = NIL;
					(yyval.onconflict)->whereClause = NULL;
					(yyval.onconflict)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 162:
#line 163 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = NULL;
				;}
    break;

  case 163:
#line 170 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = (yyvsp[(1) - (5)].str);
					(yyval.ielem)->expr = NULL;
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 164:
#line 181 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(1) - (5)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 165:
#line 192 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(2) - (7)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(4) - (7)].list);
					(yyval.ielem)->opclass = (yyvsp[(5) - (7)].list);
					(yyval.ielem)->ordering = (yyvsp[(6) - (7)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(7) - (7)].nullorder);
				;}
    break;

  case 166:
#line 206 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 167:
#line 207 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 168:
#line 213 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = PG_OVERRIDING_USER_VALUE; ;}
    break;

  case 169:
#line 214 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = OVERRIDING_SYSTEM_VALUE; ;}
    break;

  case 170:
#line 219 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 171:
#line 220 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].target)); ;}
    break;

  case 172:
#line 226 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 173:
#line 227 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 174:
#line 231 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 175:
#line 232 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 176:
#line 238 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 177:
#line 240 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 178:
#line 245 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 179:
#line 246 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_concat((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].list)); ;}
    break;

  case 180:
#line 250 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].ielem)); ;}
    break;

  case 181:
#line 251 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].ielem)); ;}
    break;

  case 182:
#line 257 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;	/* upper production sets this */
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 183:
#line 7 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SCHEMA;
					n->subname = (yyvsp[(3) - (6)].str);
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 184:
#line 16 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 185:
#line 26 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 186:
#line 36 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 187:
#line 46 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 188:
#line 56 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 189:
#line 66 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 190:
#line 76 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 191:
#line 86 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 192:
#line 96 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 193:
#line 107 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 194:
#line 118 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 195:
#line 128 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 196:
#line 140 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = COLUMN; ;}
    break;

  case 197:
#line 141 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = 0; ;}
    break;

  case 198:
#line 10 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(3) - (4)].range);
					n->options = (yyvsp[(4) - (4)].list);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 199:
#line 18 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(5) - (6)].range);
					n->options = (yyvsp[(6) - (6)].list);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 200:
#line 29 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 201:
#line 30 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 202:
#line 34 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 203:
#line 35 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 204:
#line 36 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 205:
#line 41 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(1) - (1)].str)); ;}
    break;

  case 206:
#line 42 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(2) - (2)].str)); ;}
    break;

  case 207:
#line 44 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.value) = makeFloat((yyvsp[(2) - (2)].str));
					doNegateFloat((yyval.value));
				;}
    break;

  case 208:
#line 48 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeInteger((yyvsp[(1) - (1)].ival)); ;}
    break;

  case 209:
#line 53 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("as", (PGNode *)(yyvsp[(2) - (2)].typnam), (yylsp[(1) - (2)]));
				;}
    break;

  case 210:
#line 57 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cache", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 211:
#line 61 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 212:
#line 65 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(false), (yylsp[(1) - (2)]));
				;}
    break;

  case 213:
#line 69 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("increment", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 214:
#line 73 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 215:
#line 77 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 216:
#line 81 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 217:
#line 85 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 218:
#line 89 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("owned_by", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 219:
#line 93 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					/* not documented, only used by pg_dump */
					(yyval.defelt) = makeDefElem("sequence_name", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 220:
#line 98 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("start", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 221:
#line 102 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 222:
#line 106 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 223:
#line 112 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 224:
#line 113 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 225:
#line 117 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 226:
#line 118 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = + (yyvsp[(2) - (2)].ival); ;}
    break;

  case 227:
#line 119 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = - (yyvsp[(2) - (2)].ival); ;}
    break;

  case 228:
#line 9 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(4) - (9)].range)->relpersistence = (yyvsp[(2) - (9)].ival);
					n->relation = (yyvsp[(4) - (9)].range);
					n->tableElts = (yyvsp[(6) - (9)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(8) - (9)].list);
					n->oncommit = (yyvsp[(9) - (9)].oncommit);
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 229:
#line 24 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(7) - (12)].range)->relpersistence = (yyvsp[(2) - (12)].ival);
					n->relation = (yyvsp[(7) - (12)].range);
					n->tableElts = (yyvsp[(9) - (12)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(11) - (12)].list);
					n->oncommit = (yyvsp[(12) - (12)].oncommit);
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 230:
#line 39 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(6) - (11)].range)->relpersistence = (yyvsp[(4) - (11)].ival);
					n->relation = (yyvsp[(6) - (11)].range);
					n->tableElts = (yyvsp[(8) - (11)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(10) - (11)].list);
					n->oncommit = (yyvsp[(11) - (11)].oncommit);
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 231:
#line 56 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 232:
#line 58 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * We must complain about conflicting options.
					 * We could, but choose not to, complain about redundant
					 * options (ie, where $2's bit is already set in $1).
					 */
					int		newspec = (yyvsp[(1) - (2)].ival) | (yyvsp[(2) - (2)].ival);

					/* special message for this case */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED)) == (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("constraint declared INITIALLY DEFERRED must be DEFERRABLE"),
								 parser_errposition((yylsp[(2) - (2)]))));
					/* generic message for other conflicts */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE)) == (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE) ||
						(newspec & (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED)) == (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("conflicting constraint properties"),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.ival) = newspec;
				;}
    break;

  case 233:
#line 84 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].typnam); ;}
    break;

  case 234:
#line 85 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 235:
#line 86 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].list); ;}
    break;

  case 236:
#line 87 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].value); ;}
    break;

  case 237:
#line 88 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 238:
#line 89 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 239:
#line 93 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 240:
#line 94 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 241:
#line 99 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 242:
#line 104 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_NOACTION; ;}
    break;

  case 243:
#line 105 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_RESTRICT; ;}
    break;

  case 244:
#line 106 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_CASCADE; ;}
    break;

  case 245:
#line 107 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETNULL; ;}
    break;

  case 246:
#line 108 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETDEFAULT; ;}
    break;

  case 247:
#line 114 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 248:
#line 120 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 249:
#line 121 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 250:
#line 123 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * Note: the PGCollateClause is momentarily included in
					 * the list built by ColQualList, but we split it out
					 * again in SplitColQualList.
					 */
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 251:
#line 140 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NOTNULL;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 252:
#line 147 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NULL;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 253:
#line 154 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (2)]);
					n->keys = NULL;
					n->options = (yyvsp[(2) - (2)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 254:
#line 164 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NULL;
					n->options = (yyvsp[(3) - (3)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 255:
#line 174 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->is_no_inherit = (yyvsp[(5) - (5)].boolean);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					n->skip_validation = false;
					n->initially_valid = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 256:
#line 186 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_COMPRESSION;
					n->location = (yylsp[(1) - (3)]);
					n->compression_name = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 257:
#line 194 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_DEFAULT;
					n->location = (yylsp[(1) - (2)]);
					n->raw_expr = (yyvsp[(2) - (2)].node);
					n->cooked_expr = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 258:
#line 203 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_IDENTITY;
					n->generated_when = (yyvsp[(2) - (5)].ival);
					n->options = (yyvsp[(5) - (5)].list);
					n->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 259:
#line 212 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (5)]);
					n->pktable			= (yyvsp[(2) - (5)].range);
					n->fk_attrs			= NIL;
					n->pk_attrs			= (yyvsp[(3) - (5)].list);
					n->fk_matchtype		= (yyvsp[(4) - (5)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(5) - (5)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(5) - (5)].ival) & 0xFF);
					n->skip_validation  = false;
					n->initially_valid  = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 260:
#line 231 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 261:
#line 237 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 262:
#line 243 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (1)].ival) << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 263:
#line 245 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | ((yyvsp[(1) - (1)].ival) & 0xFF); ;}
    break;

  case 264:
#line 247 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (2)].ival) << 8) | ((yyvsp[(2) - (2)].ival) & 0xFF); ;}
    break;

  case 265:
#line 249 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(2) - (2)].ival) << 8) | ((yyvsp[(1) - (2)].ival) & 0xFF); ;}
    break;

  case 266:
#line 251 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 267:
#line 256 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 268:
#line 257 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 269:
#line 261 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = ONCOMMIT_DROP; ;}
    break;

  case 270:
#line 262 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_DELETE_ROWS; ;}
    break;

  case 271:
#line 263 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_PRESERVE_ROWS; ;}
    break;

  case 272:
#line 264 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_NOOP; ;}
    break;

  case 273:
#line 269 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 274:
#line 273 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = true; ;}
    break;

  case 275:
#line 274 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = false; ;}
    break;

  case 276:
#line 280 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 277:
#line 286 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 278:
#line 291 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_COMMENTS; ;}
    break;

  case 279:
#line 292 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_CONSTRAINTS; ;}
    break;

  case 280:
#line 293 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_DEFAULTS; ;}
    break;

  case 281:
#line 294 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_IDENTITY; ;}
    break;

  case 282:
#line 295 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_INDEXES; ;}
    break;

  case 283:
#line 296 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STATISTICS; ;}
    break;

  case 284:
#line 297 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STORAGE; ;}
    break;

  case 285:
#line 298 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_ALL; ;}
    break;

  case 286:
#line 304 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 287:
#line 305 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 288:
#line 309 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
    break;

  case 289:
#line 315 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRABLE;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 290:
#line 322 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_NOT_DEFERRABLE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 291:
#line 329 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRED;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 292:
#line 336 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_IMMEDIATE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 293:
#line 347 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 294:
#line 348 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(true), (yylsp[(1) - (2)]))); ;}
    break;

  case 295:
#line 349 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(false), (yylsp[(1) - (2)]))); ;}
    break;

  case 296:
#line 350 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 297:
#line 354 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 298:
#line 359 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 299:
#line 360 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) & ~(yyvsp[(3) - (3)].ival); ;}
    break;

  case 300:
#line 361 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 301:
#line 366 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 302:
#line 371 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_DEFERRABLE; ;}
    break;

  case 303:
#line 372 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_DEFERRABLE; ;}
    break;

  case 304:
#line 373 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_IMMEDIATE; ;}
    break;

  case 305:
#line 374 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_DEFERRED; ;}
    break;

  case 306:
#line 375 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_VALID; ;}
    break;

  case 307:
#line 376 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NO_INHERIT; ;}
    break;

  case 308:
#line 382 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (4)].str);
					n->typeName = (yyvsp[(2) - (4)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collOid = InvalidOid;
					n->fdwoptions = (yyvsp[(3) - (4)].list);
					SplitColQualList((yyvsp[(4) - (4)].list), &n->constraints, &n->collClause,
									 yyscanner);
					n->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 309:
#line 405 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 310:
#line 409 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 311:
#line 415 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 312:
#line 416 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 313:
#line 420 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 314:
#line 424 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 315:
#line 425 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 316:
#line 426 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 317:
#line 431 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 318:
#line 435 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 319:
#line 442 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 320:
#line 443 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 321:
#line 448 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 322:
#line 449 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 323:
#line 454 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str));
				;}
    break;

  case 324:
#line 461 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 325:
#line 462 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 326:
#line 467 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 327:
#line 468 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 328:
#line 472 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 329:
#line 478 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 330:
#line 482 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 331:
#line 486 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (5)].str), (yyvsp[(3) - (5)].str), (PGNode *) (yyvsp[(5) - (5)].node),
											 PG_DEFELEM_UNSPEC, (yylsp[(1) - (5)]));
				;}
    break;

  case 332:
#line 491 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str), NULL, PG_DEFELEM_UNSPEC, (yylsp[(1) - (3)]));
				;}
    break;

  case 333:
#line 498 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 334:
#line 499 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 335:
#line 503 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 336:
#line 505 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (4)].str)), (yyvsp[(2) - (4)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 337:
#line 511 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(2) - (5)].str)), (yyvsp[(3) - (5)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->setof = true;
					(yyval.typnam)->location = (yylsp[(2) - (5)]);
				;}
    break;

  case 338:
#line 522 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					processCASbits((yyvsp[(5) - (5)].ival), (yylsp[(5) - (5)]), "CHECK",
								   NULL, NULL, &n->skip_validation,
								   &n->is_no_inherit, yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 339:
#line 536 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (6)]);
					n->keys = (yyvsp[(3) - (6)].list);
					n->options = (yyvsp[(5) - (6)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(6) - (6)].ival), (yylsp[(6) - (6)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 340:
#line 549 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(2) - (3)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(3) - (3)].ival), (yylsp[(3) - (3)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 341:
#line 564 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (7)]);
					n->keys = (yyvsp[(4) - (7)].list);
					n->options = (yyvsp[(6) - (7)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(7) - (7)].ival), (yylsp[(7) - (7)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 342:
#line 577 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (4)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(3) - (4)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 343:
#line 592 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (11)]);
					n->pktable			= (yyvsp[(7) - (11)].range);
					n->fk_attrs			= (yyvsp[(4) - (11)].list);
					n->pk_attrs			= (yyvsp[(8) - (11)].list);
					n->fk_matchtype		= (yyvsp[(9) - (11)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(10) - (11)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(10) - (11)].ival) & 0xFF);
					processCASbits((yyvsp[(11) - (11)].ival), (yylsp[(11) - (11)]), "FOREIGN KEY",
								   &n->deferrable, &n->initdeferred,
								   &n->skip_validation, NULL,
								   yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 344:
#line 614 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 345:
#line 618 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 346:
#line 625 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_FULL;
			;}
    break;

  case 347:
#line 629 "third_party/libpg_query/grammar/statements/create.y"
    {
				ereport(ERROR,
						(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
						 errmsg("MATCH PARTIAL not yet implemented"),
						 parser_errposition((yylsp[(1) - (2)]))));
				(yyval.ival) = PG_FKCONSTR_MATCH_PARTIAL;
			;}
    break;

  case 348:
#line 637 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 349:
#line 641 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 350:
#line 649 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGTableLikeClause *n = makeNode(PGTableLikeClause);
					n->relation = (yyvsp[(2) - (3)].range);
					n->options = (yyvsp[(3) - (3)].ival);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 351:
#line 658 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 352:
#line 659 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 353:
#line 660 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 354:
#line 661 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 355:
#line 663 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 356:
#line 670 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 357:
#line 676 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_UNLOGGED; ;}
    break;

  case 358:
#line 677 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = RELPERSISTENCE_PERMANENT; ;}
    break;

  case 359:
#line 682 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_ATTRIBUTE_IDENTITY_ALWAYS; ;}
    break;

  case 360:
#line 683 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ATTRIBUTE_IDENTITY_BY_DEFAULT; ;}
    break;

  case 361:
#line 10 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(4) - (5)].range)->relpersistence = (yyvsp[(2) - (5)].ival);
					n->sequence = (yyvsp[(4) - (5)].range);
					n->options = (yyvsp[(5) - (5)].list);
					n->ownerId = InvalidOid;
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 362:
#line 20 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(7) - (8)].range)->relpersistence = (yyvsp[(2) - (8)].ival);
					n->sequence = (yyvsp[(7) - (8)].range);
					n->options = (yyvsp[(8) - (8)].list);
					n->ownerId = InvalidOid;
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 363:
#line 32 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 364:
#line 33 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = NIL; ;}
    break;

  case 365:
#line 3 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowSelectStmt *n = makeNode(PGVariableShowSelectStmt);
				n->stmt = (yyvsp[(2) - (2)].node);
				n->name = (char*) "select";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 366:
#line 10 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowSelectStmt *n = makeNode(PGVariableShowSelectStmt);
				n->stmt = (yyvsp[(2) - (2)].node);
				n->name = (char*) "select";
				n->is_summary = 1;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 367:
#line 18 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (yyvsp[(2) - (2)].str);
				n->is_summary = 1;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 368:
#line 25 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (yyvsp[(2) - (2)].str);
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 369:
#line 32 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "timezone";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 370:
#line 39 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "transaction_isolation";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 371:
#line 46 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "all";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 374:
#line 57 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 375:
#line 59 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = psprintf("%s.%s", (yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str)); ;}
    break;

  case 376:
#line 2 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (2)].vsetstmt); ;}
    break;

  case 377:
#line 8 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (yyvsp[(1) - (1)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 378:
#line 15 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET_ALL;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 379:
#line 24 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt); ;}
    break;

  case 380:
#line 26 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "timezone";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 381:
#line 33 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "transaction_isolation";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 382:
#line 11 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (13)].boolean);
					n->concurrent = (yyvsp[(4) - (13)].boolean);
					n->idxname = (yyvsp[(5) - (13)].str);
					n->relation = (yyvsp[(7) - (13)].range);
					n->accessMethod = (yyvsp[(8) - (13)].str);
					n->indexParams = (yyvsp[(10) - (13)].list);
					n->options = (yyvsp[(12) - (13)].list);
					n->whereClause = (yyvsp[(13) - (13)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 383:
#line 36 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (16)].boolean);
					n->concurrent = (yyvsp[(4) - (16)].boolean);
					n->idxname = (yyvsp[(8) - (16)].str);
					n->relation = (yyvsp[(10) - (16)].range);
					n->accessMethod = (yyvsp[(11) - (16)].str);
					n->indexParams = (yyvsp[(13) - (16)].list);
					n->options = (yyvsp[(15) - (16)].list);
					n->whereClause = (yyvsp[(16) - (16)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 384:
#line 62 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 385:
#line 66 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
    break;

  case 386:
#line 67 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (char*) DEFAULT_INDEX_TYPE; ;}
    break;

  case 387:
#line 72 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 388:
#line 73 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 389:
#line 78 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 390:
#line 79 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = NULL; ;}
    break;

  case 391:
#line 83 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 392:
#line 84 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = NIL; ;}
    break;

  case 393:
#line 89 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 394:
#line 90 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 395:
#line 12 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(6) - (7)].node);
					ctas->into = (yyvsp[(4) - (7)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_ERROR_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (7)].into)->rel->relpersistence = (yyvsp[(2) - (7)].ival);
					(yyvsp[(4) - (7)].into)->skipData = !((yyvsp[(7) - (7)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 396:
#line 25 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(9) - (10)].node);
					ctas->into = (yyvsp[(7) - (10)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_IGNORE_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (10)].into)->rel->relpersistence = (yyvsp[(2) - (10)].ival);
					(yyvsp[(7) - (10)].into)->skipData = !((yyvsp[(10) - (10)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 397:
#line 41 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 398:
#line 42 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = false; ;}
    break;

  case 399:
#line 43 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 400:
#line 49 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(1) - (4)].range);
					(yyval.into)->colNames = (yyvsp[(2) - (4)].list);
					(yyval.into)->options = (yyvsp[(3) - (4)].list);
					(yyval.into)->onCommit = (yyvsp[(4) - (4)].oncommit);
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;		/* might get changed later */
				;}
    break;

  case 401:
#line 8 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(2) - (2)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 402:
#line 14 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(3) - (3)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 403:
#line 20 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 404:
#line 26 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 405:
#line 3 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 406:
#line 10 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_BEGIN;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 407:
#line 16 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_START;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 408:
#line 22 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 409:
#line 29 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 410:
#line 36 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 411:
#line 45 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 412:
#line 46 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 413:
#line 47 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 414:
#line 10 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(4) - (9)].range);
					n->view->relpersistence = (yyvsp[(2) - (9)].ival);
					n->aliases = (yyvsp[(5) - (9)].list);
					n->query = (yyvsp[(8) - (9)].node);
					n->onconflict = PG_ERROR_ON_CONFLICT;
					n->options = (yyvsp[(6) - (9)].list);
					n->withCheckOption = (yyvsp[(9) - (9)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 415:
#line 23 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(6) - (11)].range);
					n->view->relpersistence = (yyvsp[(4) - (11)].ival);
					n->aliases = (yyvsp[(7) - (11)].list);
					n->query = (yyvsp[(10) - (11)].node);
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					n->options = (yyvsp[(8) - (11)].list);
					n->withCheckOption = (yyvsp[(11) - (11)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 416:
#line 36 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(5) - (12)].range);
					n->view->relpersistence = (yyvsp[(2) - (12)].ival);
					n->aliases = (yyvsp[(7) - (12)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(11) - (12)].node));
					n->onconflict = PG_ERROR_ON_CONFLICT;
					n->options = (yyvsp[(9) - (12)].list);
					n->withCheckOption = (yyvsp[(12) - (12)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(12) - (12)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 417:
#line 54 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(7) - (14)].range);
					n->view->relpersistence = (yyvsp[(4) - (14)].ival);
					n->aliases = (yyvsp[(9) - (14)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(13) - (14)].node));
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					n->options = (yyvsp[(11) - (14)].list);
					n->withCheckOption = (yyvsp[(14) - (14)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(14) - (14)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 418:
#line 74 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 419:
#line 75 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 420:
#line 76 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_LOCAL_CHECK_OPTION; ;}
    break;

  case 421:
#line 77 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_NO_CHECK_OPTION; ;}
    break;

  case 422:
#line 9 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (4)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 423:
#line 23 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(5) - (5)].range);
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 424:
#line 37 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = (PGVacuumStmt *) (yyvsp[(5) - (5)].node);
					n->options |= PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 425:
#line 49 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (4)].ival);
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 426:
#line 57 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (6)].ival);
					n->relation = (yyvsp[(5) - (6)].range);
					n->va_cols = (yyvsp[(6) - (6)].list);
					if (n->va_cols != NIL)	/* implies analyze */
						n->options |= PG_VACOPT_ANALYZE;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 427:
#line 70 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_ANALYZE; ;}
    break;

  case 428:
#line 71 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_VERBOSE; ;}
    break;

  case 429:
#line 72 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FREEZE; ;}
    break;

  case 430:
#line 73 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FULL; ;}
    break;

  case 431:
#line 75 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					if (strcmp((yyvsp[(1) - (1)].str), "disable_page_skipping") == 0)
						(yyval.ival) = PG_VACOPT_DISABLE_PAGE_SKIPPING;
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("unrecognized VACUUM option \"%s\"", (yyvsp[(1) - (1)].str)),
									 parser_errposition((yylsp[(1) - (1)]))));
				;}
    break;

  case 432:
#line 87 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 433:
#line 88 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 434:
#line 93 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 435:
#line 94 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 436:
#line 98 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 437:
#line 99 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 438:
#line 7 "third_party/libpg_query/grammar/statements/call.y"
    {
					PGCallStmt *n = makeNode(PGCallStmt);
					n->func = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 439:
#line 11 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(2) - (2)].vsetstmt);
					n->scope = VAR_SET_SCOPE_DEFAULT;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 440:
#line 17 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->scope = VAR_SET_SCOPE_LOCAL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 441:
#line 23 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->scope = VAR_SET_SCOPE_SESSION;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 442:
#line 29 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->scope = VAR_SET_SCOPE_GLOBAL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 443:
#line 38 "third_party/libpg_query/grammar/statements/variable_set.y"
    {(yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt);;}
    break;

  case 444:
#line 40 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_CURRENT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 445:
#line 48 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "timezone";
					if ((yyvsp[(3) - (3)].node) != NULL)
						n->args = list_make1((yyvsp[(3) - (3)].node));
					else
						n->kind = VAR_SET_DEFAULT;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 446:
#line 59 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "search_path";
					n->args = list_make1(makeStringConst((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)])));
					(yyval.vsetstmt) = n;
				;}
    break;

  case 447:
#line 71 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 448:
#line 79 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 449:
#line 87 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 450:
#line 94 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 451:
#line 104 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)])); ;}
    break;

  case 452:
#line 106 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 453:
#line 112 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 454:
#line 116 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 455:
#line 120 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (3)].typnam);
					if ((yyvsp[(3) - (3)].list) != NIL)
					{
						PGAConst *n = (PGAConst *) linitial((yyvsp[(3) - (3)].list));
						if ((n->val.val.ival & ~(INTERVAL_MASK(HOUR) | INTERVAL_MASK(MINUTE))) != 0)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("time zone interval must be HOUR or HOUR TO MINUTE"),
									 parser_errposition((yylsp[(3) - (3)]))));
					}
					t->typmods = (yyvsp[(3) - (3)].list);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
				;}
    break;

  case 456:
#line 135 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (5)].typnam);
					t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.node) = makeStringConstCast((yyvsp[(5) - (5)].str), (yylsp[(5) - (5)]), t);
				;}
    break;

  case 457:
#line 141 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 458:
#line 142 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 459:
#line 143 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 460:
#line 147 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 461:
#line 148 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 462:
#line 3 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = (yyvsp[(3) - (11)].range);
					n->query = NULL;
					n->attlist = (yyvsp[(4) - (11)].list);
					n->is_from = (yyvsp[(6) - (11)].boolean);
					n->is_program = (yyvsp[(7) - (11)].boolean);
					n->filename = (yyvsp[(8) - (11)].str);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(8) - (11)]))));

					n->options = NIL;
					/* Concatenate user-supplied flags */
					if ((yyvsp[(2) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(2) - (11)].defelt));
					if ((yyvsp[(5) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(5) - (11)].defelt));
					if ((yyvsp[(9) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(9) - (11)].defelt));
					if ((yyvsp[(11) - (11)].list))
						n->options = list_concat(n->options, (yyvsp[(11) - (11)].list));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 463:
#line 31 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = NULL;
					n->query = (yyvsp[(3) - (9)].node);
					n->attlist = NIL;
					n->is_from = false;
					n->is_program = (yyvsp[(6) - (9)].boolean);
					n->filename = (yyvsp[(7) - (9)].str);
					n->options = (yyvsp[(9) - (9)].list);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(5) - (9)]))));

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 464:
#line 53 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 465:
#line 54 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 466:
#line 60 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(2) - (3)]));
				;}
    break;

  case 467:
#line 63 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 468:
#line 69 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 469:
#line 73 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 470:
#line 80 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 471:
#line 81 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 472:
#line 85 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 473:
#line 86 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 474:
#line 91 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 475:
#line 92 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 476:
#line 96 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 477:
#line 97 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 478:
#line 102 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 479:
#line 103 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 480:
#line 104 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeNode(PGAStar); ;}
    break;

  case 481:
#line 105 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (3)].list); ;}
    break;

  case 482:
#line 106 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = NULL; ;}
    break;

  case 483:
#line 112 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 484:
#line 120 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (2)]));
				;}
    break;

  case 485:
#line 123 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 486:
#line 128 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 487:
#line 129 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = NIL; ;}
    break;

  case 488:
#line 135 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 489:
#line 138 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 490:
#line 144 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 491:
#line 148 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 492:
#line 152 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("freeze", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 493:
#line 156 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 494:
#line 160 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("null", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 495:
#line 164 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("csv"), (yylsp[(1) - (1)]));
				;}
    break;

  case 496:
#line 168 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("header", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 497:
#line 172 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("quote", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 498:
#line 176 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("escape", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 499:
#line 180 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 500:
#line 184 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)makeNode(PGAStar), (yylsp[(1) - (3)]));
				;}
    break;

  case 501:
#line 188 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_not_null", (PGNode *)(yyvsp[(4) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 502:
#line 192 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_null", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 503:
#line 196 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("encoding", (PGNode *)makeString((yyvsp[(2) - (2)].str)), (yylsp[(1) - (2)]));
				;}
    break;

  case 504:
#line 203 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 505:
#line 209 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 506:
#line 210 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 507:
#line 211 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 508:
#line 217 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 509:
#line 221 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 510:
#line 8 "third_party/libpg_query/grammar/statements/create_function.y"
    {
					PGCreateFunctionStmt *n = makeNode(PGCreateFunctionStmt);
					n->name = (yyvsp[(3) - (6)].range);
					n->params = (yyvsp[(4) - (6)].list);
					n->function = (yyvsp[(6) - (6)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 513:
#line 24 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = NIL;
			;}
    break;

  case 514:
#line 28 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = (yyvsp[(2) - (3)].list);
			;}
    break;

  case 515:
#line 6 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					n->force = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 516:
#line 12 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					n->force = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 517:
#line 8 "third_party/libpg_query/grammar/statements/prepare.y"
    {
					PGPrepareStmt *n = makeNode(PGPrepareStmt);
					n->name = (yyvsp[(2) - (5)].str);
					n->argtypes = (yyvsp[(3) - (5)].list);
					n->query = (yyvsp[(5) - (5)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 518:
#line 18 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 519:
#line 19 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = NIL; ;}
    break;

  case 524:
#line 12 "third_party/libpg_query/grammar/statements/update.y"
    {
					PGUpdateStmt *n = makeNode(PGUpdateStmt);
					n->relation = (yyvsp[(3) - (8)].range);
					n->targetList = (yyvsp[(5) - (8)].list);
					n->fromClause = (yyvsp[(6) - (8)].list);
					n->whereClause = (yyvsp[(7) - (8)].node);
					n->returningList = (yyvsp[(8) - (8)].list);
					n->withClause = (yyvsp[(1) - (8)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 527:
#line 52 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 528:
#line 53 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 529:
#line 68 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 530:
#line 70 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list), NIL,
										NULL, NULL, NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (2)].node);
				;}
    break;

  case 531:
#line 77 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(3) - (4)].list),
										(PGNode*) list_nth((yyvsp[(4) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 532:
#line 85 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(4) - (4)].list),
										(PGNode*) list_nth((yyvsp[(3) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(3) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 533:
#line 93 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (2)].node), NULL, NIL,
										NULL, NULL,
										(yyvsp[(1) - (2)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 534:
#line 101 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].list), NIL,
										NULL, NULL,
										(yyvsp[(1) - (3)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (3)].node);
				;}
    break;

  case 535:
#line 109 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(4) - (5)].list),
										(PGNode*) list_nth((yyvsp[(5) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(5) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 536:
#line 117 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(5) - (5)].list),
										(PGNode*) list_nth((yyvsp[(4) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 537:
#line 127 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 538:
#line 128 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 539:
#line 158 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->targetList = (yyvsp[(3) - (11)].list);
					n->intoClause = (yyvsp[(4) - (11)].into);
					n->fromClause = (yyvsp[(5) - (11)].list);
					n->whereClause = (yyvsp[(6) - (11)].node);
					n->groupClause = (yyvsp[(7) - (11)].list);
					n->havingClause = (yyvsp[(8) - (11)].node);
					n->windowClause = (yyvsp[(9) - (11)].list);
					n->qualifyClause = (yyvsp[(10) - (11)].node);
					n->sampleOptions = (yyvsp[(11) - (11)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 540:
#line 174 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->distinctClause = (yyvsp[(2) - (11)].list);
					n->targetList = (yyvsp[(3) - (11)].list);
					n->intoClause = (yyvsp[(4) - (11)].into);
					n->fromClause = (yyvsp[(5) - (11)].list);
					n->whereClause = (yyvsp[(6) - (11)].node);
					n->groupClause = (yyvsp[(7) - (11)].list);
					n->havingClause = (yyvsp[(8) - (11)].node);
					n->windowClause = (yyvsp[(9) - (11)].list);
					n->qualifyClause = (yyvsp[(10) - (11)].node);
					n->sampleOptions = (yyvsp[(11) - (11)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 541:
#line 188 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 542:
#line 190 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* same as SELECT * FROM relation_expr */
					PGColumnRef *cr = makeNode(PGColumnRef);
					PGResTarget *rt = makeNode(PGResTarget);
					PGSelectStmt *n = makeNode(PGSelectStmt);

					cr->fields = list_make1(makeNode(PGAStar));
					cr->location = -1;

					rt->name = NULL;
					rt->indirection = NIL;
					rt->val = (PGNode *)cr;
					rt->location = -1;

					n->targetList = list_make1(rt);
					n->fromClause = list_make1((yyvsp[(2) - (2)].range));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 543:
#line 209 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_UNION, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 544:
#line 213 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_INTERSECT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 545:
#line 217 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_EXCEPT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 546:
#line 234 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 547:
#line 241 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 548:
#line 248 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(3) - (3)].list);
				(yyval.with)->recursive = true;
				(yyval.with)->location = (yylsp[(1) - (3)]);
			;}
    break;

  case 549:
#line 257 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 550:
#line 258 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 551:
#line 262 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGCommonTableExpr *n = makeNode(PGCommonTableExpr);
				n->ctename = (yyvsp[(1) - (6)].str);
				n->aliascolnames = (yyvsp[(2) - (6)].list);
				n->ctequery = (yyvsp[(5) - (6)].node);
				n->location = (yylsp[(1) - (6)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 552:
#line 274 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(2) - (2)].range);
					(yyval.into)->colNames = NIL;
					(yyval.into)->options = NIL;
					(yyval.into)->onCommit = PG_ONCOMMIT_NOOP;
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;
				;}
    break;

  case 553:
#line 284 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.into) = NULL; ;}
    break;

  case 554:
#line 293 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 555:
#line 298 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 556:
#line 303 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 557:
#line 308 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 558:
#line 313 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 559:
#line 321 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 560:
#line 329 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_UNLOGGED;
				;}
    break;

  case 561:
#line 334 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 562:
#line 339 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 563:
#line 345 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 564:
#line 346 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 565:
#line 350 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 566:
#line 351 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 567:
#line 352 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 568:
#line 359 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(NIL); ;}
    break;

  case 569:
#line 360 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 570:
#line 364 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL;;}
    break;

  case 571:
#line 365 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 572:
#line 369 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true;;}
    break;

  case 573:
#line 370 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false;;}
    break;

  case 574:
#line 371 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 575:
#line 375 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 576:
#line 376 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 577:
#line 380 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 578:
#line 384 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].sortby)); ;}
    break;

  case 579:
#line 385 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].sortby)); ;}
    break;

  case 580:
#line 389 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (4)].node);
					(yyval.sortby)->sortby_dir = SORTBY_USING;
					(yyval.sortby)->sortby_nulls = (yyvsp[(4) - (4)].nullorder);
					(yyval.sortby)->useOp = (yyvsp[(3) - (4)].list);
					(yyval.sortby)->location = (yylsp[(3) - (4)]);
				;}
    break;

  case 581:
#line 398 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (3)].node);
					(yyval.sortby)->sortby_dir = (yyvsp[(2) - (3)].sortorder);
					(yyval.sortby)->sortby_nulls = (yyvsp[(3) - (3)].nullorder);
					(yyval.sortby)->useOp = NIL;
					(yyval.sortby)->location = -1;		/* no operator */
				;}
    break;

  case 582:
#line 408 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_ASC; ;}
    break;

  case 583:
#line 409 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DESC; ;}
    break;

  case 584:
#line 410 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DEFAULT; ;}
    break;

  case 585:
#line 413 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_FIRST; ;}
    break;

  case 586:
#line 414 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_LAST; ;}
    break;

  case 587:
#line 415 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_DEFAULT; ;}
    break;

  case 588:
#line 419 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(2) - (2)].node), (yyvsp[(1) - (2)].node)); ;}
    break;

  case 589:
#line 420 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 590:
#line 421 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL, (yyvsp[(1) - (1)].node)); ;}
    break;

  case 591:
#line 422 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (1)].node), NULL); ;}
    break;

  case 592:
#line 426 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 593:
#line 427 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL,NULL); ;}
    break;

  case 594:
#line 432 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 595:
#line 434 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Disabled because it was too confusing, bjm 2002-02-18 */
					ereport(ERROR,
							(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("LIMIT #,# syntax is not supported"),
							 errhint("Use separate LIMIT and OFFSET clauses."),
							 parser_errposition((yylsp[(1) - (4)]))));
				;}
    break;

  case 596:
#line 450 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(3) - (5)].node); ;}
    break;

  case 597:
#line 452 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst(1, -1); ;}
    break;

  case 598:
#line 457 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 599:
#line 460 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 600:
#line 468 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
		;}
    break;

  case 601:
#line 472 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
		;}
    break;

  case 602:
#line 476 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
		;}
    break;

  case 603:
#line 480 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
		;}
    break;

  case 604:
#line 484 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (1)].ival)), false);
		;}
    break;

  case 605:
#line 488 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), false);
		;}
    break;

  case 606:
#line 495 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(3) - (3)].node);
				;}
    break;

  case 607:
#line 499 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 608:
#line 506 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 609:
#line 507 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 610:
#line 512 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSampleOptions((yyvsp[(3) - (5)].node), (yyvsp[(1) - (5)].str), (yyvsp[(5) - (5)].ival), (yylsp[(1) - (5)]));
				;}
    break;

  case 611:
#line 516 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (1)].node), NULL, -1, (yylsp[(1) - (1)]));
		;}
    break;

  case 612:
#line 520 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (4)].node), (yyvsp[(3) - (4)].str), -1, (yylsp[(1) - (4)]));
		;}
    break;

  case 613:
#line 524 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (6)].node), (yyvsp[(3) - (6)].str), (yyvsp[(5) - (6)].ival), (yylsp[(1) - (6)]));
		;}
    break;

  case 614:
#line 531 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 615:
#line 537 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 616:
#line 538 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 617:
#line 543 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(3) - (4)].ival); ;}
    break;

  case 618:
#line 544 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = -1; ;}
    break;

  case 619:
#line 548 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 620:
#line 550 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* LIMIT ALL is represented as a NULL constant */
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 621:
#line 555 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeLimitPercent((yyvsp[(1) - (2)].node)); ;}
    break;

  case 622:
#line 557 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeLimitPercent(makeFloatConst((yyvsp[(1) - (2)].str),(yylsp[(1) - (2)]))); ;}
    break;

  case 623:
#line 559 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeLimitPercent(makeIntConst((yyvsp[(1) - (2)].ival),(yylsp[(1) - (2)]))); ;}
    break;

  case 624:
#line 563 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 625:
#line 583 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 626:
#line 585 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 627:
#line 587 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 628:
#line 591 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival),(yylsp[(1) - (1)])); ;}
    break;

  case 629:
#line 592 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str),(yylsp[(1) - (1)])); ;}
    break;

  case 630:
#line 596 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 631:
#line 597 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 632:
#line 600 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 633:
#line 601 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 634:
#line 626 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 635:
#line 627 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 636:
#line 631 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 637:
#line 632 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].node)); ;}
    break;

  case 638:
#line 636 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 639:
#line 637 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 640:
#line 638 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 641:
#line 639 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 642:
#line 640 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 643:
#line 645 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_EMPTY, NIL, (yylsp[(1) - (2)]));
				;}
    break;

  case 644:
#line 658 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_ROLLUP, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 645:
#line 665 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_CUBE, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 646:
#line 672 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_SETS, (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 647:
#line 678 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 648:
#line 679 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 649:
#line 683 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 650:
#line 684 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 651:
#line 688 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 652:
#line 689 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 653:
#line 693 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 654:
#line 694 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 655:
#line 698 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 656:
#line 699 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 657:
#line 703 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 658:
#line 704 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 659:
#line 709 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGLockingClause *n = makeNode(PGLockingClause);
					n->lockedRels = (yyvsp[(2) - (3)].list);
					n->strength = (yyvsp[(1) - (3)].lockstrength);
					n->waitPolicy = (yyvsp[(3) - (3)].lockwaitpolicy);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 660:
#line 719 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = LCS_FORUPDATE; ;}
    break;

  case 661:
#line 720 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORNOKEYUPDATE; ;}
    break;

  case 662:
#line 721 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORSHARE; ;}
    break;

  case 663:
#line 722 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORKEYSHARE; ;}
    break;

  case 664:
#line 726 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 665:
#line 727 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 666:
#line 732 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = LockWaitError; ;}
    break;

  case 667:
#line 733 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitSkip; ;}
    break;

  case 668:
#line 734 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitBlock; ;}
    break;

  case 669:
#line 744 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->valuesLists = list_make1((yyvsp[(3) - (4)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 670:
#line 750 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = (PGSelectStmt *) (yyvsp[(1) - (5)].node);
					n->valuesLists = lappend(n->valuesLists, (yyvsp[(4) - (5)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 671:
#line 767 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 672:
#line 768 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 673:
#line 772 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 674:
#line 773 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 675:
#line 780 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(1) - (3)].range)->alias = (yyvsp[(2) - (3)].alias);
					(yyvsp[(1) - (3)].range)->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) (yyvsp[(1) - (3)].range);
				;}
    break;

  case 676:
#line 786 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(1) - (3)].node);
					n->alias = (PGAlias*) linitial((yyvsp[(2) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(2) - (3)].list));
					n->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 677:
#line 794 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(2) - (3)].node);
					n->lateral = true;
					n->alias = (PGAlias*) linitial((yyvsp[(3) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(3) - (3)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 678:
#line 802 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = false;
					n->subquery = (yyvsp[(1) - (3)].node);
					n->alias = (yyvsp[(2) - (3)].alias);
					n->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 679:
#line 811 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = true;
					n->subquery = (yyvsp[(2) - (3)].node);
					n->alias = (yyvsp[(3) - (3)].alias);
					n->sample = NULL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 680:
#line 820 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) (yyvsp[(1) - (1)].jexpr);
				;}
    break;

  case 681:
#line 824 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(2) - (4)].jexpr)->alias = (yyvsp[(4) - (4)].alias);
					(yyval.node) = (PGNode *) (yyvsp[(2) - (4)].jexpr);
				;}
    break;

  case 682:
#line 850 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.jexpr) = (yyvsp[(2) - (3)].jexpr);
				;}
    break;

  case 683:
#line 854 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* CROSS JOIN is same as unqualified inner join */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL;
					n->quals = NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 684:
#line 867 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(2) - (5)].jtype);
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(4) - (5)].node);
					if ((yyvsp[(5) - (5)].node) != NULL && IsA((yyvsp[(5) - (5)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(5) - (5)].node); /* USING clause */
					else
						n->quals = (yyvsp[(5) - (5)].node); /* ON clause */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 685:
#line 881 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(3) - (4)].node);
					if ((yyvsp[(4) - (4)].node) != NULL && IsA((yyvsp[(4) - (4)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(4) - (4)].node); /* USING clause */
					else
						n->quals = (yyvsp[(4) - (4)].node); /* ON clause */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 686:
#line 896 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(3) - (5)].jtype);
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(5) - (5)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 687:
#line 908 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 688:
#line 924 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.alias)->colnames = (yyvsp[(4) - (5)].list);
				;}
    break;

  case 689:
#line 930 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (2)].str);
				;}
    break;

  case 690:
#line 935 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.alias)->colnames = (yyvsp[(3) - (4)].list);
				;}
    break;

  case 691:
#line 941 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (1)].str);
				;}
    break;

  case 692:
#line 947 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = (yyvsp[(1) - (1)].alias); ;}
    break;

  case 693:
#line 948 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = NULL; ;}
    break;

  case 694:
#line 957 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (1)].alias), NIL);
				;}
    break;

  case 695:
#line 961 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 696:
#line 965 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.list) = list_make2(a, (yyvsp[(4) - (5)].list));
				;}
    break;

  case 697:
#line 971 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.list) = list_make2(a, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 698:
#line 977 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, NIL);
				;}
    break;

  case 699:
#line 982 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_FULL; ;}
    break;

  case 700:
#line 983 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_LEFT; ;}
    break;

  case 701:
#line 984 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_RIGHT; ;}
    break;

  case 702:
#line 985 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_INNER; ;}
    break;

  case 703:
#line 989 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 704:
#line 990 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 705:
#line 1002 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) (yyvsp[(3) - (4)].list); ;}
    break;

  case 706:
#line 1003 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 707:
#line 1009 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, implicitly */
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 708:
#line 1016 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, explicitly */
					(yyval.range) = (yyvsp[(1) - (2)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 709:
#line 1023 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance */
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 710:
#line 1030 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance, SQL99-style syntax */
					(yyval.range) = (yyvsp[(3) - (4)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 711:
#line 1062 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(2) - (2)].boolean);
					n->is_rowsfrom = false;
					n->functions = list_make1(list_make2((yyvsp[(1) - (2)].node), NIL));
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 712:
#line 1073 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(6) - (6)].boolean);
					n->is_rowsfrom = true;
					n->functions = (yyvsp[(4) - (6)].list);
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 713:
#line 1086 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 714:
#line 1090 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 715:
#line 1091 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 716:
#line 1094 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 717:
#line 1095 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 718:
#line 1098 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 719:
#line 1099 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 720:
#line 1104 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 721:
#line 1105 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 722:
#line 1111 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 723:
#line 1115 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 724:
#line 1121 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (3)].str);
					n->typeName = (yyvsp[(2) - (3)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collClause = (PGCollateClause *) (yyvsp[(3) - (3)].node);
					n->collOid = InvalidOid;
					n->constraints = NIL;
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 725:
#line 1142 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 726:
#line 1149 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 727:
#line 1162 "third_party/libpg_query/grammar/statements/select.y"
    {
             (yyval.list) = list_make1(list_make2(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].typnam)));
            ;}
    break;

  case 728:
#line 1165 "third_party/libpg_query/grammar/statements/select.y"
    {
             (yyval.list) = lappend((yyvsp[(1) - (4)].list), list_make2(makeString((yyvsp[(3) - (4)].str)), (yyvsp[(4) - (4)].typnam)));
            ;}
    break;

  case 731:
#line 1172 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 732:
#line 1177 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->setof = true;
				;}
    break;

  case 733:
#line 1184 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (5)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(4) - (5)].ival)));
				;}
    break;

  case 734:
#line 1189 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (6)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(5) - (6)].ival)));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 735:
#line 1195 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
				;}
    break;

  case 736:
#line 1200 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 737:
#line 1205 "third_party/libpg_query/grammar/statements/select.y"
    {
               (yyval.typnam) = SystemTypeName("struct");
               (yyval.typnam)->arrayBounds = (yyvsp[(5) - (5)].list);
               (yyval.typnam)->typmods = (yyvsp[(3) - (5)].list);
               (yyval.typnam)->location = (yylsp[(1) - (5)]);
               ;}
    break;

  case 738:
#line 1211 "third_party/libpg_query/grammar/statements/select.y"
    {
               (yyval.typnam) = SystemTypeName("map");
               (yyval.typnam)->arrayBounds = (yyvsp[(5) - (5)].list);
               (yyval.typnam)->typmods = (yyvsp[(3) - (5)].list);
               (yyval.typnam)->location = (yylsp[(1) - (5)]);
			;}
    break;

  case 739:
#line 1221 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeInteger(-1)); ;}
    break;

  case 740:
#line 1223 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (4)].list), makeInteger((yyvsp[(3) - (4)].ival))); ;}
    break;

  case 741:
#line 1225 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = NIL; ;}
    break;

  case 742:
#line 1229 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 743:
#line 1230 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 744:
#line 1231 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 745:
#line 1232 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 746:
#line 1233 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 747:
#line 1235 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 748:
#line 1240 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (4)].typnam);
					(yyval.typnam)->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											 makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
				;}
    break;

  case 749:
#line 1259 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 750:
#line 1260 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 751:
#line 1261 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 752:
#line 1262 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 753:
#line 1274 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = makeTypeName((yyvsp[(1) - (2)].str));
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 754:
#line 1287 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 755:
#line 1288 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 756:
#line 1295 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 757:
#line 1300 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 758:
#line 1305 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int2");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 759:
#line 1310 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int8");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 760:
#line 1315 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 761:
#line 1320 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (2)].typnam);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 762:
#line 1325 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float8");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 763:
#line 1330 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 764:
#line 1336 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 765:
#line 1342 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 766:
#line 1348 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("bool");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 767:
#line 1355 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Check FLOAT() precision limits assuming IEEE floating
					 * types - thomas 1997-09-18
					 */
					if ((yyvsp[(2) - (3)].ival) < 1)
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be at least 1 bit"),
								 parser_errposition((yylsp[(2) - (3)]))));
					else if ((yyvsp[(2) - (3)].ival) <= 24)
						(yyval.typnam) = SystemTypeName("float4");
					else if ((yyvsp[(2) - (3)].ival) <= 53)
						(yyval.typnam) = SystemTypeName("float8");
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be less than 54 bits"),
								 parser_errposition((yylsp[(2) - (3)]))));
				;}
    break;

  case 768:
#line 1376 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
				;}
    break;

  case 769:
#line 1386 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 770:
#line 1390 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 771:
#line 1398 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 772:
#line 1402 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 773:
#line 1410 "third_party/libpg_query/grammar/statements/select.y"
    {
					const char *typname;

					typname = (yyvsp[(2) - (5)].boolean) ? "varbit" : "bit";
					(yyval.typnam) = SystemTypeName(typname);
					(yyval.typnam)->typmods = (yyvsp[(4) - (5)].list);
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 774:
#line 1422 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* bit defaults to bit(1), varbit to no limit */
					if ((yyvsp[(2) - (2)].boolean))
					{
						(yyval.typnam) = SystemTypeName("varbit");
					}
					else
					{
						(yyval.typnam) = SystemTypeName("bit");
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					}
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 775:
#line 1443 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 776:
#line 1447 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 777:
#line 1453 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 778:
#line 1457 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Length was not specified so allow to be unrestricted.
					 * This handles problems with fixed-length (bpchar) strings
					 * which in column definitions must default to a length
					 * of one, but should not be constrained if the length
					 * was not specified.
					 */
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 779:
#line 1470 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (4)].conststr));
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 780:
#line 1478 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (1)].conststr));
					/* char defaults to char(1), varchar to no limit */
					if (strcmp((yyvsp[(1) - (1)].conststr), "bpchar") == 0)
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 781:
#line 1488 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 782:
#line 1490 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 783:
#line 1492 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "varchar"; ;}
    break;

  case 784:
#line 1494 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 785:
#line 1496 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 786:
#line 1498 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 787:
#line 1502 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 788:
#line 1503 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 789:
#line 1511 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 790:
#line 1520 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 791:
#line 1528 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 792:
#line 1537 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 793:
#line 1548 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("interval");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 794:
#line 1555 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 795:
#line 1556 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 796:
#line 1557 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 813:
#line 1586 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR), (yylsp[(1) - (1)]))); ;}
    break;

  case 814:
#line 1588 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MONTH), (yylsp[(1) - (1)]))); ;}
    break;

  case 815:
#line 1590 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY), (yylsp[(1) - (1)]))); ;}
    break;

  case 816:
#line 1592 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR), (yylsp[(1) - (1)]))); ;}
    break;

  case 817:
#line 1594 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE), (yylsp[(1) - (1)]))); ;}
    break;

  case 818:
#line 1596 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 819:
#line 1598 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MILLISECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 820:
#line 1600 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MICROSECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 821:
#line 1602 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR) |
												 INTERVAL_MASK(MONTH), (yylsp[(1) - (3)])));
				;}
    break;

  case 822:
#line 1607 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR), (yylsp[(1) - (3)])));
				;}
    break;

  case 823:
#line 1612 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 824:
#line 1618 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 825:
#line 1625 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 826:
#line 1630 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 827:
#line 1636 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 828:
#line 1641 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 829:
#line 1672 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 830:
#line 1675 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), 0, (yylsp[(2) - (3)])); ;}
    break;

  case 831:
#line 1677 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = (yyvsp[(1) - (3)].node);
					n->collname = (yyvsp[(3) - (3)].list);
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 832:
#line 1685 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("timezone"),
											   list_make2((yyvsp[(5) - (5)].node), (yyvsp[(1) - (5)].node)),
											   (yylsp[(2) - (5)]));
				;}
    break;

  case 833:
#line 1700 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 834:
#line 1702 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 835:
#line 1704 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 836:
#line 1706 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 837:
#line 1708 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 838:
#line 1710 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 839:
#line 1712 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 840:
#line 1714 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 841:
#line 1716 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 842:
#line 1718 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 843:
#line 1720 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 844:
#line 1722 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 845:
#line 1724 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 846:
#line 1726 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 847:
#line 1729 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 848:
#line 1731 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 849:
#line 1733 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 850:
#line 1736 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeAndExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 851:
#line 1738 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeOrExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 852:
#line 1740 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 853:
#line 1742 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 854:
#line 1745 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_GLOB, "~~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 855:
#line 1750 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 856:
#line 1755 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make3((yyvsp[(1) - (5)].node), (yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 857:
#line 1762 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "!~~",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 858:
#line 1767 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make3((yyvsp[(1) - (6)].node), (yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 859:
#line 1774 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 860:
#line 1779 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make2((yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 861:
#line 1787 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 862:
#line 1792 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 863:
#line 1801 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (4)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (4)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (4)].node), (PGNode *) n, (yylsp[(2) - (4)]));
				;}
    break;

  case 864:
#line 1809 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 865:
#line 1817 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (5)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 866:
#line 1825 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
											   (yylsp[(2) - (7)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (7)].node), (PGNode *) n, (yylsp[(2) - (7)]));
				;}
    break;

  case 867:
#line 1843 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 868:
#line 1851 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 869:
#line 1859 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 870:
#line 1867 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 871:
#line 1875 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 872:
#line 1882 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("row"), (yyvsp[(1) - (1)].list), (yylsp[(1) - (1)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 873:
#line 1886 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("struct_pack"), (yyvsp[(2) - (3)].list), (yylsp[(2) - (3)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 874:
#line 1890 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("list_value"), (yyvsp[(2) - (3)].list), (yylsp[(2) - (3)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 875:
#line 1895 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGLambdaFunction *n = makeNode(PGLambdaFunction);
				n->parameters = (yyvsp[(1) - (3)].list);
				n->function = (yyvsp[(3) - (3)].node);
				n->location = (yylsp[(2) - (3)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 876:
#line 1903 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGLambdaFunction *n = makeNode(PGLambdaFunction);
				n->parameters = list_make1((yyvsp[(1) - (3)].node));
				n->function = (yyvsp[(3) - (3)].node);
				n->location = (yylsp[(2) - (3)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 877:
#line 1911 "third_party/libpg_query/grammar/statements/select.y"
    {
					if (list_length((yyvsp[(1) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on left side of OVERLAPS expression"),
								 parser_errposition((yylsp[(1) - (3)]))));
					if (list_length((yyvsp[(3) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on right side of OVERLAPS expression"),
								 parser_errposition((yylsp[(3) - (3)]))));
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlaps"),
											   list_concat((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)),
											   (yylsp[(2) - (3)]));
				;}
    break;

  case 878:
#line 1927 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = PG_IS_TRUE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 879:
#line 1935 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_TRUE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 880:
#line 1943 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_FALSE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 881:
#line 1951 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_FALSE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 882:
#line 1959 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_UNKNOWN;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 883:
#line 1967 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_UNKNOWN;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 884:
#line 1975 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 885:
#line 1979 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 886:
#line 1983 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 887:
#line 1987 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 888:
#line 1991 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN,
												   "BETWEEN",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 889:
#line 1999 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN,
												   "NOT BETWEEN",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 890:
#line 2007 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN_SYM,
												   "BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 891:
#line 2015 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN_SYM,
												   "NOT BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 892:
#line 2023 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(3) - (3)].node), PGSubLink))
					{
						/* generate foo = ANY (subquery) */
						PGSubLink *n = (PGSubLink *) (yyvsp[(3) - (3)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (3)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (3)]);
						(yyval.node) = (PGNode *)n;
					}
					else
					{
						/* generate scalar IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
					}
				;}
    break;

  case 893:
#line 2043 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(4) - (4)].node), PGSubLink))
					{
						/* generate NOT (foo = ANY (subquery)) */
						/* Make an = ANY node */
						PGSubLink *n = (PGSubLink *) (yyvsp[(4) - (4)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (4)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (4)]);
						/* Stick a NOT on top; must have same parse location */
						(yyval.node) = makeNotExpr((PGNode *) n, (yylsp[(2) - (4)]));
					}
					else
					{
						/* generate scalar NOT IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "<>", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
					}
				;}
    break;

  case 894:
#line 2065 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = (yyvsp[(3) - (4)].subquerytype);
					n->subLinkId = 0;
					n->testexpr = (yyvsp[(1) - (4)].node);
					n->operName = (yyvsp[(2) - (4)].list);
					n->subselect = (yyvsp[(4) - (4)].node);
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 895:
#line 2076 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(3) - (6)].subquerytype) == PG_ANY_SUBLINK)
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ANY, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
					else
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ALL, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 896:
#line 2083 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * The SQL spec only allows DEFAULT in "contextually typed
					 * expressions", but for us, it's easier to allow it in
					 * any a_expr and then throw error during parse analysis
					 * if it's in an inappropriate context.  This way also
					 * lets us say something smarter than "syntax error".
					 */
					PGSetToDefault *n = makeNode(PGSetToDefault);
					/* parse analysis will fill in the rest */
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 897:
#line 2096 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGList *func_name = list_make1(makeString("construct_array"));
				PGFuncCall *n = makeFuncCall(func_name, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 898:
#line 2113 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 899:
#line 2115 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), 0, (yylsp[(2) - (3)])); ;}
    break;

  case 900:
#line 2117 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 901:
#line 2119 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 902:
#line 2121 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 903:
#line 2123 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 904:
#line 2125 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 905:
#line 2127 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 906:
#line 2129 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 907:
#line 2131 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 908:
#line 2133 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 909:
#line 2135 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 910:
#line 2137 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 911:
#line 2139 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 912:
#line 2141 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 913:
#line 2143 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 914:
#line 2145 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 915:
#line 2147 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 916:
#line 2149 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 917:
#line 2151 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 918:
#line 2155 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 919:
#line 2159 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 920:
#line 2163 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 921:
#line 2176 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 922:
#line 2177 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 923:
#line 2179 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGPositionalReference *n = makeNode(PGPositionalReference);
					n->position = (yyvsp[(2) - (2)].ival);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 924:
#line 2186 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeParamRef(0, (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeParamRef(0, (yylsp[(1) - (2)]));
				;}
    break;

  case 925:
#line 2198 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGParamRef *p = makeNode(PGParamRef);
					p->number = (yyvsp[(1) - (2)].ival);
					p->location = (yylsp[(1) - (2)]);
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (PGNode *) p;
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = (PGNode *) p;
				;}
    break;

  case 926:
#line 2213 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(4) - (4)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(2) - (4)].node);
						n->indirection = check_indirection((yyvsp[(4) - (4)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else
						(yyval.node) = (yyvsp[(2) - (4)].node);
				;}
    break;

  case 927:
#line 2225 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 928:
#line 2227 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list)) {
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(1) - (2)].node);
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else {
						(yyval.node) = (yyvsp[(1) - (2)].node);
					}
				;}
    break;

  case 929:
#line 2239 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (1)].node);
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 930:
#line 2250 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Because the select_with_parens nonterminal is designed
					 * to "eat" as many levels of parens as possible, the
					 * '(' a_expr ')' opt_indirection production above will
					 * fail to match a sub-SELECT with indirection decoration;
					 * the sub-SELECT won't be regarded as an a_expr as long
					 * as there are parens around it.  To support applying
					 * subscripting or field selection to a sub-SELECT result,
					 * we need this redundant-looking production.
					 */
					PGSubLink *n = makeNode(PGSubLink);
					PGAIndirection *a = makeNode(PGAIndirection);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					a->arg = (PGNode *)n;
					a->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.node) = (PGNode *)a;
				;}
    break;

  case 931:
#line 2274 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXISTS_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(2) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 932:
#line 2285 "third_party/libpg_query/grammar/statements/select.y"
    {
				  PGGroupingFunc *g = makeNode(PGGroupingFunc);
				  g->args = (yyvsp[(3) - (4)].list);
				  g->location = (yylsp[(1) - (4)]);
				  (yyval.node) = (PGNode *)g;
			  ;}
    break;

  case 933:
#line 2294 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall((yyvsp[(1) - (3)].list), NIL, (yylsp[(1) - (3)]));
				;}
    break;

  case 934:
#line 2298 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(3) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(4) - (6)].list);
					n->agg_ignore_nulls = (yyvsp[(5) - (6)].boolean);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 935:
#line 2305 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (7)].list), list_make1((yyvsp[(4) - (7)].node)), (yylsp[(1) - (7)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(5) - (7)].list);
					n->agg_ignore_nulls = (yyvsp[(6) - (7)].boolean);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 936:
#line 2313 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (9)].list), lappend((yyvsp[(3) - (9)].list), (yyvsp[(6) - (9)].node)), (yylsp[(1) - (9)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(7) - (9)].list);
					n->agg_ignore_nulls = (yyvsp[(8) - (9)].boolean);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 937:
#line 2321 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (7)].list), (yyvsp[(4) - (7)].list), (yylsp[(1) - (7)]));
					n->agg_order = (yyvsp[(5) - (7)].list);
					n->agg_ignore_nulls = (yyvsp[(6) - (7)].boolean);
					/* Ideally we'd mark the PGFuncCall node to indicate
					 * "must be an aggregate", but there's no provision
					 * for that in PGFuncCall at the moment.
					 */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 938:
#line 2332 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (7)].list), (yyvsp[(4) - (7)].list), (yylsp[(1) - (7)]));
					n->agg_order = (yyvsp[(5) - (7)].list);
					n->agg_ignore_nulls = (yyvsp[(6) - (7)].boolean);
					n->agg_distinct = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 939:
#line 2340 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * We consider AGGREGATE(*) to invoke a parameterless
					 * aggregate.  This does the right thing for COUNT(*),
					 * and there are no other aggregates in SQL that accept
					 * '*' as parameter.
					 *
					 * The PGFuncCall node is also marked agg_star = true,
					 * so that later processing can detect what the argument
					 * really was.
					 */
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (4)].list), NIL, (yylsp[(1) - (4)]));
					n->agg_star = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 940:
#line 2368 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = (PGFuncCall *) (yyvsp[(1) - (4)].node);
					/*
					 * The order clause for WITHIN GROUP and the one for
					 * plain-aggregate ORDER BY share a field, so we have to
					 * check here that at most one is present.  We also check
					 * for DISTINCT and VARIADIC here to give a better error
					 * location.  Other consistency checks are deferred to
					 * parse analysis.
					 */
					if ((yyvsp[(2) - (4)].list) != NIL)
					{
						if (n->agg_order != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use multiple ORDER BY clauses with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->agg_distinct)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use DISTINCT with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->func_variadic)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use VARIADIC with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						n->agg_order = (yyvsp[(2) - (4)].list);
						n->agg_within_group = true;
					}
					n->agg_filter = (yyvsp[(3) - (4)].node);
					n->over = (yyvsp[(4) - (4)].windef);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 941:
#line 2403 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 942:
#line 2413 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 943:
#line 2414 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 944:
#line 2422 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("pg_collation_for"),
											   list_make1((yyvsp[(4) - (5)].node)),
											   (yylsp[(1) - (5)]));
				;}
    break;

  case 945:
#line 2428 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_DATE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 946:
#line 2432 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 947:
#line 2436 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 948:
#line 2440 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 949:
#line 2444 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 950:
#line 2448 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 951:
#line 2452 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 952:
#line 2456 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 953:
#line 2460 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 954:
#line 2464 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_ROLE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 955:
#line 2468 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 956:
#line 2472 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_SESSION_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 957:
#line 2476 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 958:
#line 2480 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_CATALOG, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 959:
#line 2484 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_SCHEMA, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 960:
#line 2488 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), 0, (yylsp[(1) - (6)])); ;}
    break;

  case 961:
#line 2490 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), 1, (yylsp[(1) - (6)])); ;}
    break;

  case 962:
#line 2492 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("date_part"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 963:
#line 2496 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* overlay(A PLACING B FROM C FOR D) is converted to
					 * overlay(A, B, C, D)
					 * overlay(A PLACING B FROM C) is converted to
					 * overlay(A, B, C)
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlay"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 964:
#line 2505 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* position(A in B) is converted to position(B, A) */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("position"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 965:
#line 2510 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* substring(A from B for C) is converted to
					 * substring(A, B, C) - thomas 2000-11-28
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("substring"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 966:
#line 2517 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* TREAT(expr AS target) converts expr of a particular type to target,
					 * which is defined to be a subtype of the original expression.
					 * In SQL99, this is intended for use with structured UDTs,
					 * but let's make this a generally useful form allowing stronger
					 * coercions than are handled by implicit casting.
					 *
					 * Convert SystemTypeName() to SystemFuncName() even though
					 * at the moment they result in the same thing.
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName(((PGValue *)llast((yyvsp[(5) - (6)].typnam)->names))->val.str),
												list_make1((yyvsp[(3) - (6)].node)),
												(yylsp[(1) - (6)]));
				;}
    break;

  case 967:
#line 2532 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* various trim expressions are defined in SQL
					 * - thomas 1997-07-19
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 968:
#line 2539 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("ltrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 969:
#line 2543 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("rtrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 970:
#line 2547 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 971:
#line 2551 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NULLIF, "=", (yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(1) - (6)]));
				;}
    break;

  case 972:
#line 2555 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCoalesceExpr *c = makeNode(PGCoalesceExpr);
					c->args = (yyvsp[(3) - (4)].list);
					c->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 973:
#line 2568 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 974:
#line 2569 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 975:
#line 2573 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(4) - (5)].node); ;}
    break;

  case 976:
#line 2574 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 977:
#line 2582 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 978:
#line 2583 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 979:
#line 2587 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].windef)); ;}
    break;

  case 980:
#line 2589 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].windef)); ;}
    break;

  case 981:
#line 2594 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(3) - (3)].windef);
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.windef) = n;
				;}
    break;

  case 982:
#line 2602 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = (yyvsp[(2) - (2)].windef); ;}
    break;

  case 983:
#line 2604 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = (yyvsp[(2) - (2)].str);
					n->refname = NULL;
					n->partitionClause = NIL;
					n->orderClause = NIL;
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.windef) = n;
				;}
    break;

  case 984:
#line 2617 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = NULL; ;}
    break;

  case 985:
#line 2622 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = NULL;
					n->refname = (yyvsp[(2) - (6)].str);
					n->partitionClause = (yyvsp[(3) - (6)].list);
					n->orderClause = (yyvsp[(4) - (6)].list);
					/* copy relevant fields of opt_frame_clause */
					n->frameOptions = (yyvsp[(5) - (6)].windef)->frameOptions;
					n->startOffset = (yyvsp[(5) - (6)].windef)->startOffset;
					n->endOffset = (yyvsp[(5) - (6)].windef)->endOffset;
					n->location = (yylsp[(1) - (6)]);
					(yyval.windef) = n;
				;}
    break;

  case 986:
#line 2647 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 987:
#line 2648 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 988:
#line 2651 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 989:
#line 2652 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 990:
#line 2664 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_RANGE;
					(yyval.windef) = n;
				;}
    break;

  case 991:
#line 2670 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_ROWS;
					(yyval.windef) = n;
				;}
    break;

  case 992:
#line 2676 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 993:
#line 2686 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(1) - (1)].windef);
					/* reject invalid cases */
					if (n->frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(1) - (1)]))));
					if (n->frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot end with current row"),
								 parser_errposition((yylsp[(1) - (1)]))));
					n->frameOptions |= FRAMEOPTION_END_CURRENT_ROW;
					(yyval.windef) = n;
				;}
    break;

  case 994:
#line 2703 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n1 = (yyvsp[(2) - (4)].windef);
					PGWindowDef *n2 = (yyvsp[(4) - (4)].windef);
					/* form merged options */
					int		frameOptions = n1->frameOptions;
					/* shift converts START_ options to END_ options */
					frameOptions |= n2->frameOptions << 1;
					frameOptions |= FRAMEOPTION_BETWEEN;
					/* reject invalid cases */
					if (frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(2) - (4)]))));
					if (frameOptions & FRAMEOPTION_END_UNBOUNDED_PRECEDING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame end cannot be UNBOUNDED PRECEDING"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_CURRENT_ROW) &&
						(frameOptions & FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from current row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING) &&
						(frameOptions & (FRAMEOPTION_END_VALUE_PRECEDING |
										 FRAMEOPTION_END_CURRENT_ROW)))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					n1->frameOptions = frameOptions;
					n1->endOffset = n2->startOffset;
					(yyval.windef) = n1;
				;}
    break;

  case 995:
#line 2748 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_PRECEDING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 996:
#line 2756 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_FOLLOWING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 997:
#line 2764 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_CURRENT_ROW;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 998:
#line 2772 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_PRECEDING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 999:
#line 2780 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_FOLLOWING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 1000:
#line 2800 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 1001:
#line 2801 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1002:
#line 2804 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 1003:
#line 2805 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(2) - (5)].list), (yyvsp[(4) - (5)].node)); ;}
    break;

  case 1004:
#line 2809 "third_party/libpg_query/grammar/statements/select.y"
    {
		PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
		na->name = (yyvsp[(1) - (3)].str);
		na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
		na->argnumber = -1;
		na->location = (yylsp[(1) - (3)]);
		(yyval.node) = (PGNode *) na;
	;}
    break;

  case 1005:
#line 2819 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1006:
#line 2820 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 1007:
#line 2822 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 1008:
#line 2823 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 1009:
#line 2824 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ALL_SUBLINK; ;}
    break;

  case 1010:
#line 2827 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1011:
#line 2828 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) (yyvsp[(1) - (1)].conststr); ;}
    break;

  case 1012:
#line 2831 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "+"; ;}
    break;

  case 1013:
#line 2832 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "-"; ;}
    break;

  case 1014:
#line 2833 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "*"; ;}
    break;

  case 1015:
#line 2834 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "/"; ;}
    break;

  case 1016:
#line 2835 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "%"; ;}
    break;

  case 1017:
#line 2836 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "^"; ;}
    break;

  case 1018:
#line 2837 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<"; ;}
    break;

  case 1019:
#line 2838 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">"; ;}
    break;

  case 1020:
#line 2839 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "="; ;}
    break;

  case 1021:
#line 2840 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<="; ;}
    break;

  case 1022:
#line 2841 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">="; ;}
    break;

  case 1023:
#line 2842 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<>"; ;}
    break;

  case 1024:
#line 2846 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1025:
#line 2848 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 1026:
#line 2853 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1027:
#line 2855 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 1028:
#line 2860 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1029:
#line 2862 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 1030:
#line 2864 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~")); ;}
    break;

  case 1031:
#line 2866 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~")); ;}
    break;

  case 1032:
#line 2868 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~~")); ;}
    break;

  case 1033:
#line 2870 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~~")); ;}
    break;

  case 1034:
#line 2872 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~*")); ;}
    break;

  case 1035:
#line 2874 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~*")); ;}
    break;

  case 1036:
#line 2888 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1037:
#line 2890 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 1038:
#line 2894 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 1039:
#line 2898 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 1040:
#line 2905 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 1041:
#line 2909 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = NULL;
				;}
    break;

  case 1042:
#line 2917 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 1043:
#line 2921 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 1044:
#line 2927 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 1045:
#line 2931 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 1046:
#line 2940 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 1047:
#line 2950 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 1048:
#line 2951 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 1049:
#line 2956 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(makeStringConst((yyvsp[(1) - (3)].str), (yylsp[(1) - (3)])), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 1050:
#line 2959 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1051:
#line 2966 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1052:
#line 2967 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "year"; ;}
    break;

  case 1053:
#line 2968 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "month"; ;}
    break;

  case 1054:
#line 2969 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "day"; ;}
    break;

  case 1055:
#line 2970 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "hour"; ;}
    break;

  case 1056:
#line 2971 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "minute"; ;}
    break;

  case 1057:
#line 2972 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "second"; ;}
    break;

  case 1058:
#line 2973 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "millisecond"; ;}
    break;

  case 1059:
#line 2974 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "microsecond"; ;}
    break;

  case 1060:
#line 2975 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1061:
#line 2986 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make4((yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].node), (yyvsp[(3) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 1062:
#line 2990 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 1063:
#line 2997 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1064:
#line 3003 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(3) - (3)].node), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 1065:
#line 3004 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1066:
#line 3021 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 1067:
#line 3025 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* not legal per SQL99, but might as well allow it */
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yyvsp[(2) - (3)].node));
				;}
    break;

  case 1068:
#line 3030 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 1069:
#line 3034 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Since there are no cases where this syntax allows
					 * a textual FOR value, we forcibly cast the argument
					 * to int4.  The possible matches in pg_proc are
					 * substring(text,int4) and substring(text,text),
					 * and we don't want the parser to choose the latter,
					 * which it is likely to do if the second argument
					 * is unknown or doesn't have an implicit cast to int4.
					 */
					(yyval.list) = list_make3((yyvsp[(1) - (2)].node), makeIntConst(1, -1),
									makeTypeCast((yyvsp[(2) - (2)].node),
												 SystemTypeName("int4"), 0, -1));
				;}
    break;

  case 1070:
#line 3049 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 1071:
#line 3053 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1072:
#line 3057 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1073:
#line 3060 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1074:
#line 3063 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(3) - (3)].list), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 1075:
#line 3064 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1076:
#line 3065 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1077:
#line 3069 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subselect = (yyvsp[(1) - (1)].node);
					/* other fields will be filled later */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1078:
#line 3075 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *)(yyvsp[(2) - (3)].list); ;}
    break;

  case 1079:
#line 3086 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseExpr *c = makeNode(PGCaseExpr);
					c->casetype = InvalidOid; /* not analyzed yet */
					c->arg = (PGExpr *) (yyvsp[(2) - (5)].node);
					c->args = (yyvsp[(3) - (5)].list);
					c->defresult = (PGExpr *) (yyvsp[(4) - (5)].node);
					c->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 1080:
#line 3099 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1081:
#line 3100 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 1082:
#line 3105 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseWhen *w = makeNode(PGCaseWhen);
					w->expr = (PGExpr *) (yyvsp[(2) - (4)].node);
					w->result = (PGExpr *) (yyvsp[(4) - (4)].node);
					w->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)w;
				;}
    break;

  case 1083:
#line 3115 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1084:
#line 3116 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1085:
#line 3119 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 1086:
#line 3120 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1087:
#line 3124 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (1)].str), NIL, (yylsp[(1) - (1)]), yyscanner);
				;}
    break;

  case 1088:
#line 3128 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].list), (yylsp[(1) - (2)]), yyscanner);
				;}
    break;

  case 1089:
#line 3135 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(2) - (2)].str));
				;}
    break;

  case 1090:
#line 3139 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = false;
					ai->lidx = NULL;
					ai->uidx = (yyvsp[(2) - (3)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 1091:
#line 3147 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = true;
					ai->lidx = (yyvsp[(2) - (5)].node);
					ai->uidx = (yyvsp[(4) - (5)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 1092:
#line 3157 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 1093:
#line 3158 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1094:
#line 3162 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1095:
#line 3163 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 1096:
#line 3167 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1097:
#line 3168 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 1100:
#line 3182 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1101:
#line 3183 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1102:
#line 3187 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 1103:
#line 3188 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 1104:
#line 3192 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(3) - (3)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (3)].node);
					(yyval.target)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 1105:
#line 3208 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(2) - (2)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (2)].node);
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 1106:
#line 3216 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (1)].node);
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 1107:
#line 3224 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnRef *n = makeNode(PGColumnRef);
					PGAStar *star = makeNode(PGAStar);
					n->fields = list_make1(star);
					n->location = (yylsp[(1) - (3)]);
					star->except_list = (yyvsp[(2) - (3)].list);
					star->replace_list = (yyvsp[(3) - (3)].list);

					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)n;
					(yyval.target)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 1108:
#line 3239 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnRef *n = makeNode(PGColumnRef);
					PGAStar *star = makeNode(PGAStar);
					n->fields = list_make1(star);
					n->location = (yylsp[(1) - (5)]);
					star->relation = (yyvsp[(1) - (5)].str);
					star->except_list = (yyvsp[(4) - (5)].list);
					star->replace_list = (yyvsp[(5) - (5)].list);

					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)n;
					(yyval.target)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 1109:
#line 3256 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 1110:
#line 3257 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
    break;

  case 1111:
#line 3260 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1112:
#line 3261 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NULL; ;}
    break;

  case 1113:
#line 3264 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (3)].node), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1114:
#line 3268 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 1115:
#line 3269 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 1116:
#line 3272 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 1117:
#line 3273 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(2) - (2)].list)); ;}
    break;

  case 1118:
#line 3274 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NULL; ;}
    break;

  case 1119:
#line 3284 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].range)); ;}
    break;

  case 1120:
#line 3285 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].range)); ;}
    break;

  case 1121:
#line 3297 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = makeRangeVar(NULL, (yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1122:
#line 3301 "third_party/libpg_query/grammar/statements/select.y"
    {
					check_qualified_name((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.range) = makeRangeVar(NULL, NULL, (yylsp[(1) - (2)]));
					switch (list_length((yyvsp[(2) - (2)].list)))
					{
						case 1:
							(yyval.range)->catalogname = NULL;
							(yyval.range)->schemaname = (yyvsp[(1) - (2)].str);
							(yyval.range)->relname = strVal(linitial((yyvsp[(2) - (2)].list)));
							break;
						case 2:
							(yyval.range)->catalogname = (yyvsp[(1) - (2)].str);
							(yyval.range)->schemaname = strVal(linitial((yyvsp[(2) - (2)].list)));
							(yyval.range)->relname = strVal(lsecond((yyvsp[(2) - (2)].list)));
							break;
						default:
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("improper qualified name (too many dotted names): %s",
											NameListToString(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)))),
									 parser_errposition((yylsp[(1) - (2)]))));
							break;
					}
				;}
    break;

  case 1123:
#line 3328 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1124:
#line 3330 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1125:
#line 3334 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1126:
#line 3336 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1127:
#line 3347 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1128:
#line 3350 "third_party/libpg_query/grammar/statements/select.y"
    {
						(yyval.list) = check_func_name(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)),
											 yyscanner);
					;}
    break;

  case 1129:
#line 3361 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival), (yylsp[(1) - (1)]));
				;}
    break;

  case 1130:
#line 3365 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1131:
#line 3369 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeStringConst((yyvsp[(1) - (2)].str), (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeStringConst((yyvsp[(1) - (2)].str), (yylsp[(1) - (2)]));
				;}
    break;

  case 1132:
#line 3381 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1133:
#line 3385 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* This is a bit constant per SQL99:
					 * Without Feature F511, "BIT data type",
					 * a <general literal> shall not be a
					 * <bit string literal> or a <hex string literal>.
					 */
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1134:
#line 3394 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic type 'literal' syntax */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (2)].list));
					t->location = (yylsp[(1) - (2)]);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), t);
				;}
    break;

  case 1135:
#line 3401 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic syntax with a type modifier */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (7)].list));
					PGListCell *lc;

					/*
					 * We must use func_arg_list and opt_sort_clause in the
					 * production to avoid reduce/reduce conflicts, but we
					 * don't actually wish to allow PGNamedArgExpr in this
					 * context, ORDER BY, nor IGNORE NULLS.
					 */
					foreach(lc, (yyvsp[(3) - (7)].list))
					{
						PGNamedArgExpr *arg = (PGNamedArgExpr *) lfirst(lc);

						if (IsA(arg, PGNamedArgExpr))
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have parameter name"),
									 parser_errposition(arg->location)));
					}
					if ((yyvsp[(4) - (7)].list) != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have ORDER BY"),
									 parser_errposition((yylsp[(4) - (7)]))));
					if ((yyvsp[(5) - (7)].boolean) != false)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have IGNORE NULLS"),
									 parser_errposition((yylsp[(5) - (7)]))));


					t->typmods = (yyvsp[(3) - (7)].list);
					t->location = (yylsp[(1) - (7)]);
					(yyval.node) = makeStringConstCast((yyvsp[(7) - (7)].str), (yylsp[(7) - (7)]), t);
				;}
    break;

  case 1136:
#line 3439 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), (yyvsp[(1) - (2)].typnam));
				;}
    break;

  case 1137:
#line 3443 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(3) - (5)].node), (yylsp[(3) - (5)]), (yyvsp[(5) - (5)].list));
				;}
    break;

  case 1138:
#line 3447 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].ival), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 1139:
#line 3451 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 1140:
#line 3455 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(true, (yylsp[(1) - (1)]));
				;}
    break;

  case 1141:
#line 3459 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(false, (yylsp[(1) - (1)]));
				;}
    break;

  case 1142:
#line 3463 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 1143:
#line 3468 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1144:
#line 3469 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1145:
#line 3485 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1146:
#line 3486 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1147:
#line 3487 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1148:
#line 3490 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1149:
#line 3491 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1150:
#line 3497 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1151:
#line 3498 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1152:
#line 3499 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1153:
#line 3502 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1154:
#line 3503 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1155:
#line 3504 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1156:
#line 3507 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1157:
#line 3508 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1158:
#line 3509 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1159:
#line 3512 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1160:
#line 3513 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 1161:
#line 3517 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
    break;

  case 1162:
#line 3519 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1163:
#line 3523 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1164:
#line 3524 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1166:
#line 3535 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1167:
#line 3536 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1168:
#line 3537 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1169:
#line 3538 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1170:
#line 3541 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1171:
#line 3542 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1172:
#line 9 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGDeleteStmt *n = makeNode(PGDeleteStmt);
					n->relation = (yyvsp[(4) - (7)].range);
					n->usingClause = (yyvsp[(5) - (7)].list);
					n->whereClause = (yyvsp[(6) - (7)].node);
					n->returningList = (yyvsp[(7) - (7)].list);
					n->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1173:
#line 22 "third_party/libpg_query/grammar/statements/delete.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 1174:
#line 26 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(2) - (2)].str);
					(yyvsp[(1) - (2)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (2)].range);
				;}
    break;

  case 1175:
#line 33 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(3) - (3)].str);
					(yyvsp[(1) - (3)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 1176:
#line 43 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1177:
#line 44 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1178:
#line 50 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1179:
#line 51 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1180:
#line 8 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not both */
					n->schemaname = (yyvsp[(3) - (4)].str);
					n->schemaElts = (yyvsp[(4) - (4)].list);
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1181:
#line 17 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not here */
					n->schemaname = (yyvsp[(6) - (7)].str);
					if ((yyvsp[(7) - (7)].list) != NIL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("CREATE SCHEMA IF NOT EXISTS cannot include schema elements"),
								 parser_errposition((yylsp[(7) - (7)]))));
					n->schemaElts = (yyvsp[(7) - (7)].list);
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1182:
#line 35 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					if ((yyloc) < 0)			/* see comments for YYLLOC_DEFAULT */
						(yyloc) = (yylsp[(2) - (2)]);
					(yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 1183:
#line 41 "third_party/libpg_query/grammar/statements/create_schema.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1188:
#line 10 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1189:
#line 20 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1190:
#line 30 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1191:
#line 40 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1192:
#line 50 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->objects = list_make1(lappend((yyvsp[(5) - (6)].list), makeString((yyvsp[(3) - (6)].str))));
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1193:
#line 60 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (8)].objtype);
					n->objects = list_make1(lappend((yyvsp[(7) - (8)].list), makeString((yyvsp[(5) - (8)].str))));
					n->behavior = (yyvsp[(8) - (8)].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1194:
#line 70 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = PG_OBJECT_TYPE;
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1195:
#line 80 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = PG_OBJECT_TYPE;
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1196:
#line 93 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TABLE; ;}
    break;

  case 1197:
#line 94 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SEQUENCE; ;}
    break;

  case 1198:
#line 95 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 1199:
#line 96 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 1200:
#line 97 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_VIEW; ;}
    break;

  case 1201:
#line 98 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_MATVIEW; ;}
    break;

  case 1202:
#line 99 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_INDEX; ;}
    break;

  case 1203:
#line 100 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_TABLE; ;}
    break;

  case 1204:
#line 101 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_COLLATION; ;}
    break;

  case 1205:
#line 102 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_CONVERSION; ;}
    break;

  case 1206:
#line 103 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_STATISTIC_EXT; ;}
    break;

  case 1207:
#line 104 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSPARSER; ;}
    break;

  case 1208:
#line 105 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSDICTIONARY; ;}
    break;

  case 1209:
#line 106 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSTEMPLATE; ;}
    break;

  case 1210:
#line 107 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSCONFIGURATION; ;}
    break;

  case 1211:
#line 112 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_ACCESS_METHOD; ;}
    break;

  case 1212:
#line 113 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EVENT_TRIGGER; ;}
    break;

  case 1213:
#line 114 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EXTENSION; ;}
    break;

  case 1214:
#line 115 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FDW; ;}
    break;

  case 1215:
#line 116 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_PUBLICATION; ;}
    break;

  case 1216:
#line 117 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SCHEMA; ;}
    break;

  case 1217:
#line 118 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_SERVER; ;}
    break;

  case 1218:
#line 123 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 1219:
#line 124 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 1220:
#line 129 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_CASCADE; ;}
    break;

  case 1221:
#line 130 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; ;}
    break;

  case 1222:
#line 131 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; /* default */ ;}
    break;

  case 1223:
#line 136 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_POLICY; ;}
    break;

  case 1224:
#line 137 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_RULE; ;}
    break;

  case 1225:
#line 138 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TRIGGER; ;}
    break;

  case 1226:
#line 141 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 1227:
#line 142 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 1228:
#line 8 "third_party/libpg_query/grammar/statements/create_enum.y"
    {
					PGCreateEnumStmt *n = makeNode(PGCreateEnumStmt);
					n->typeName = (yyvsp[(3) - (8)].list);
					n->vals = (yyvsp[(7) - (8)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1229:
#line 17 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1230:
#line 18 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1231:
#line 22 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1232:
#line 24 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1233:
#line 8 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(2) - (3)].str);
					n->params = (yyvsp[(3) - (3)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1234:
#line 16 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(7) - (9)].str);
					n->params = (yyvsp[(8) - (9)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(4) - (9)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_ERROR_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (9)].into)->rel->relpersistence = (yyvsp[(2) - (9)].ival);
					(yyvsp[(4) - (9)].into)->skipData = !((yyvsp[(9) - (9)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1235:
#line 33 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(10) - (12)].str);
					n->params = (yyvsp[(11) - (12)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(7) - (12)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_IGNORE_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (12)].into)->rel->relpersistence = (yyvsp[(2) - (12)].ival);
					(yyvsp[(7) - (12)].into)->skipData = !((yyvsp[(12) - (12)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1236:
#line 51 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1237:
#line 52 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = NIL; ;}
    break;


/* Line 1267 of yacc.c.  */
#line 24485 "third_party/libpg_query/grammar/grammar_out.cpp"
      default: break;
    }
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, yyscanner, YY_("syntax error"));
#else
      {
	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
	  {
	    YYSIZE_T yyalloc = 2 * yysize;
	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
	    if (yymsg != yymsgbuf)
	      YYSTACK_FREE (yymsg);
	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
	    if (yymsg)
	      yymsg_alloc = yyalloc;
	    else
	      {
		yymsg = yymsgbuf;
		yymsg_alloc = sizeof yymsgbuf;
	      }
	  }

	if (0 < yysize && yysize <= yymsg_alloc)
	  {
	    (void) yysyntax_error (yymsg, yystate, yychar);
	    yyerror (&yylloc, yyscanner, yymsg);
	  }
	else
	  {
	    yyerror (&yylloc, yyscanner, YY_("syntax error"));
	    if (yysize != 0)
	      goto yyexhaustedlab;
	  }
      }
#endif
    }

  yyerror_range[0] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse look-ahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
	{
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
	}
      else
	{
	  yydestruct ("Error: discarding",
		      yytoken, &yylval, &yylloc, yyscanner);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse look-ahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[0] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule which action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (yyn != YYPACT_NINF)
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;

      yyerror_range[0] = *yylsp;
      yydestruct ("Error: popping",
		  yystos[yystate], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  *++yyvsp = yylval;

  yyerror_range[1] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the look-ahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, (yyerror_range - 1), 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#ifndef yyoverflow
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, yyscanner, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEOF && yychar != YYEMPTY)
     yydestruct ("Cleanup: discarding lookahead",
		 yytoken, &yylval, &yylloc, yyscanner);
  /* Do not reclaim the symbols of the rule which action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  /* Make sure YYID is used.  */
  return YYID (yyresult);
}


#line 65 "third_party/libpg_query/grammar/statements/execute.y"


#line 1 "third_party/libpg_query/grammar/grammar.cpp"
/*
 * The signature of this function is required by bison.  However, we
 * ignore the passed yylloc and instead use the last token position
 * available from the scanner.
 */
static void
base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner, const char *msg)
{
	parser_yyerror(msg);
}

static PGRawStmt *
makeRawStmt(PGNode *stmt, int stmt_location)
{
	PGRawStmt    *rs = makeNode(PGRawStmt);

	rs->stmt = stmt;
	rs->stmt_location = stmt_location;
	rs->stmt_len = 0;			/* might get changed later */
	return rs;
}

/* Adjust a PGRawStmt to reflect that it doesn't run to the end of the string */
static void
updateRawStmtEnd(PGRawStmt *rs, int end_location)
{
	/*
	 * If we already set the length, don't change it.  This is for situations
	 * like "select foo ;; select bar" where the same statement will be last
	 * in the string for more than one semicolon.
	 */
	if (rs->stmt_len > 0)
		return;

	/* OK, update length of PGRawStmt */
	rs->stmt_len = end_location - rs->stmt_location;
}

static PGNode *
makeColumnRef(char *colname, PGList *indirection,
			  int location, core_yyscan_t yyscanner)
{
	/*
	 * Generate a PGColumnRef node, with an PGAIndirection node added if there
	 * is any subscripting in the specified indirection list.  However,
	 * any field selection at the start of the indirection list must be
	 * transposed into the "fields" part of the PGColumnRef node.
	 */
	PGColumnRef  *c = makeNode(PGColumnRef);
	int		nfields = 0;
	PGListCell *l;

	c->location = location;
	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAIndices))
		{
			PGAIndirection *i = makeNode(PGAIndirection);

			if (nfields == 0)
			{
				/* easy case - all indirection goes to PGAIndirection */
				c->fields = list_make1(makeString(colname));
				i->indirection = check_indirection(indirection, yyscanner);
			}
			else
			{
				/* got to split the list in two */
				i->indirection = check_indirection(list_copy_tail(indirection,
																  nfields),
												   yyscanner);
				indirection = list_truncate(indirection, nfields);
				c->fields = lcons(makeString(colname), indirection);
			}
			i->arg = (PGNode *) c;
			return (PGNode *) i;
		}
		else if (IsA(lfirst(l), PGAStar))
		{
			/* We only allow '*' at the end of a PGColumnRef */
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
		nfields++;
	}
	/* No subscripting, so all indirection gets added to field list */
	c->fields = lcons(makeString(colname), indirection);
	return (PGNode *) c;
}

static PGNode *
makeTypeCast(PGNode *arg, PGTypeName *tpname, int trycast, int location)
{
	PGTypeCast *n = makeNode(PGTypeCast);
	n->arg = arg;
	n->typeName = tpname;
	n->tryCast = trycast;
	n->location = location;
	return (PGNode *) n;
}

static PGNode *
makeStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeStringConstCast(char *str, int location, PGTypeName *tpname)
{
	PGNode *s = makeStringConst(str, location);

	return makeTypeCast(s, tpname, 0, -1);
}

static PGNode *
makeIntervalNode(char *str, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGString;
	n->sval = str;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;

}

static PGNode *
makeIntervalNode(int val, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGInteger;
	n->ival = val;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeIntervalNode(PGNode *arg, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGAExpr;
	n->eval = arg;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeSampleSize(PGValue *sample_size, bool is_percentage) {
	PGSampleSize *n = makeNode(PGSampleSize);

	n->sample_size = *sample_size;
	n->is_percentage = is_percentage;

	return (PGNode *)n;
}

static PGNode *
makeSampleOptions(PGNode *sample_size, char *method, int seed, int location) {
	PGSampleOptions *n = makeNode(PGSampleOptions);

	n->sample_size = sample_size;
	n->method = method;
	n->seed = seed;
	n->location = location;

	return (PGNode *)n;
}

/* makeLimitPercent()
 * Make limit percent node
 */
static PGNode *
makeLimitPercent(PGNode *limit_percent) {
	PGLimitPercent *n = makeNode(PGLimitPercent);

	n->limit_percent = limit_percent;

	return (PGNode *)n;
}

static PGNode *
makeIntConst(int val, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGInteger;
	n->val.val.ival = val;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeFloatConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGFloat;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeBitStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGBitString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeNullAConst(int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGNull;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeAConst(PGValue *v, int location)
{
	PGNode *n;

	switch (v->type)
	{
		case T_PGFloat:
			n = makeFloatConst(v->val.str, location);
			break;

		case T_PGInteger:
			n = makeIntConst(v->val.ival, location);
			break;

		case T_PGString:
		default:
			n = makeStringConst(v->val.str, location);
			break;
	}

	return n;
}

/* makeBoolAConst()
 * Create an PGAConst string node and put it inside a boolean cast.
 */
static PGNode *
makeBoolAConst(bool state, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = (state ? (char*) "t" : (char*) "f");
	n->location = location;

	return makeTypeCast((PGNode *)n, SystemTypeName("bool"), 0, -1);
}

/* check_qualified_name --- check the result of qualified_name production
 *
 * It's easiest to let the grammar production for qualified_name allow
 * subscripts and '*', which we then must reject here.
 */
static void
check_qualified_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
}

/* check_func_name --- check the result of func_name production
 *
 * It's easiest to let the grammar production for func_name allow subscripts
 * and '*', which we then must reject here.
 */
static PGList *
check_func_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
	return names;
}

/* check_indirection --- check the result of indirection production
 *
 * We only allow '*' at the end of the list, but it's hard to enforce that
 * in the grammar, so do it here.
 */
static PGList *
check_indirection(PGList *indirection, core_yyscan_t yyscanner)
{
	PGListCell *l;

	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAStar))
		{
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
	}
	return indirection;
}

/* makeParamRef
 * Creates a new PGParamRef node
 */
static PGNode* makeParamRef(int number, int location)
{
	PGParamRef *p = makeNode(PGParamRef);
	p->number = number;
	p->location = location;
	return (PGNode *) p;
}


/* insertSelectOptions()
 * Insert ORDER BY, etc into an already-constructed SelectStmt.
 *
 * This routine is just to avoid duplicating code in PGSelectStmt productions.
 */
static void
insertSelectOptions(PGSelectStmt *stmt,
					PGList *sortClause, PGList *lockingClause,
					PGNode *limitOffset, PGNode *limitCount,
					PGWithClause *withClause,
					core_yyscan_t yyscanner)
{
	Assert(IsA(stmt, PGSelectStmt));

	/*
	 * Tests here are to reject constructs like
	 *	(SELECT foo ORDER BY bar) ORDER BY baz
	 */
	if (sortClause)
	{
		if (stmt->sortClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple ORDER BY clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) sortClause))));
		stmt->sortClause = sortClause;
	}
	/* We can handle multiple locking clauses, though */
	stmt->lockingClause = list_concat(stmt->lockingClause, lockingClause);
	if (limitOffset)
	{
		if (stmt->limitOffset)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple OFFSET clauses not allowed"),
					 parser_errposition(exprLocation(limitOffset))));
		stmt->limitOffset = limitOffset;
	}
	if (limitCount)
	{
		if (stmt->limitCount)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple LIMIT clauses not allowed"),
					 parser_errposition(exprLocation(limitCount))));
		stmt->limitCount = limitCount;
	}
	if (withClause)
	{
		if (stmt->withClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple WITH clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) withClause))));
		stmt->withClause = withClause;
	}
}

static PGNode *
makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg)
{
	PGSelectStmt *n = makeNode(PGSelectStmt);

	n->op = op;
	n->all = all;
	n->larg = (PGSelectStmt *) larg;
	n->rarg = (PGSelectStmt *) rarg;
	return (PGNode *) n;
}

/* SystemFuncName()
 * Build a properly-qualified reference to a built-in function.
 */
PGList *
SystemFuncName(const char *name)
{
	return list_make2(makeString(DEFAULT_SCHEMA), makeString(name));
}

/* SystemTypeName()
 * Build a properly-qualified reference to a built-in type.
 *
 * typmod is defaulted, but may be changed afterwards by caller.
 * Likewise for the location.
 */
PGTypeName *
SystemTypeName(const char *name)
{
	return makeTypeNameFromNameList(list_make2(makeString(DEFAULT_SCHEMA),
											   makeString(name)));
}

/* doNegate()
 * Handle negation of a numeric constant.
 *
 * Formerly, we did this here because the optimizer couldn't cope with
 * indexquals that looked like "var = -4" --- it wants "var = const"
 * and a unary minus operator applied to a constant didn't qualify.
 * As of Postgres 7.0, that problem doesn't exist anymore because there
 * is a constant-subexpression simplifier in the optimizer.  However,
 * there's still a good reason for doing this here, which is that we can
 * postpone committing to a particular internal representation for simple
 * negative constants.	It's better to leave "-123.456" in string form
 * until we know what the desired type is.
 */
static PGNode *
doNegate(PGNode *n, int location)
{
	if (IsA(n, PGAConst))
	{
		PGAConst *con = (PGAConst *)n;

		/* report the constant's location as that of the '-' sign */
		con->location = location;

		if (con->val.type == T_PGInteger)
		{
			con->val.val.ival = -con->val.val.ival;
			return n;
		}
		if (con->val.type == T_PGFloat)
		{
			doNegateFloat(&con->val);
			return n;
		}
	}

	return (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", NULL, n, location);
}

static void
doNegateFloat(PGValue *v)
{
	char   *oldval = v->val.str;

	Assert(IsA(v, PGFloat));
	if (*oldval == '+')
		oldval++;
	if (*oldval == '-')
		v->val.str = oldval+1;	/* just strip the '-' */
	else
		v->val.str = psprintf("-%s", oldval);
}

static PGNode *
makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a AND b AND c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_AND_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_AND_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a OR b OR c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_OR_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_OR_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeNotExpr(PGNode *expr, int location)
{
	return (PGNode *) makeBoolExpr(PG_NOT_EXPR, list_make1(expr), location);
}

static PGNode *
makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod, int location)
{
	PGSQLValueFunction *svf = makeNode(PGSQLValueFunction);

	svf->op = op;
	/* svf->type will be filled during parse analysis */
	svf->typmod = typmod;
	svf->location = location;
	return (PGNode *) svf;
}

/* Separate PGConstraint nodes from COLLATE clauses in a */
static void
SplitColQualList(PGList *qualList,
				 PGList **constraintList, PGCollateClause **collClause,
				 core_yyscan_t yyscanner)
{
	PGListCell   *cell;
	PGListCell   *prev;
	PGListCell   *next;

	*collClause = NULL;
	prev = NULL;
	for (cell = list_head(qualList); cell; cell = next)
	{
		PGNode   *n = (PGNode *) lfirst(cell);

		next = lnext(cell);
		if (IsA(n, PGConstraint))
		{
			/* keep it in list */
			prev = cell;
			continue;
		}
		if (IsA(n, PGCollateClause))
		{
			PGCollateClause *c = (PGCollateClause *) n;

			if (*collClause)
				ereport(ERROR,
						(errcode(PG_ERRCODE_SYNTAX_ERROR),
						 errmsg("multiple COLLATE clauses not allowed"),
						 parser_errposition(c->location)));
			*collClause = c;
		}
		else
			elog(ERROR, "unexpected node type %d", (int) n->type);
		/* remove non-Constraint nodes from qualList */
		qualList = list_delete_cell(qualList, cell, prev);
	}
	*constraintList = qualList;
}

/*
 * Process result of ConstraintAttributeSpec, and set appropriate bool flags
 * in the output command node.  Pass NULL for any flags the particular
 * command doesn't support.
 */
static void
processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner)
{
	/* defaults */
	if (deferrable)
		*deferrable = false;
	if (initdeferred)
		*initdeferred = false;
	if (not_valid)
		*not_valid = false;

	if (cas_bits & (CAS_DEFERRABLE | CAS_INITIALLY_DEFERRED))
	{
		if (deferrable)
			*deferrable = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_INITIALLY_DEFERRED)
	{
		if (initdeferred)
			*initdeferred = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NOT_VALID)
	{
		if (not_valid)
			*not_valid = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NOT VALID",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NO_INHERIT)
	{
		if (no_inherit)
			*no_inherit = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NO INHERIT",
							constrType),
					 parser_errposition(location)));
	}
}

/*----------
 * Recursive view transformation
 *
 * Convert
 *
 *     CREATE RECURSIVE VIEW relname (aliases) AS query
 *
 * to
 *
 *     CREATE VIEW relname (aliases) AS
 *         WITH RECURSIVE relname (aliases) AS (query)
 *         SELECT aliases FROM relname
 *
 * Actually, just the WITH ... part, which is then inserted into the original
 * view as the query.
 * ----------
 */
static PGNode *
makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query)
{
	PGSelectStmt *s = makeNode(PGSelectStmt);
	PGWithClause *w = makeNode(PGWithClause);
	PGCommonTableExpr *cte = makeNode(PGCommonTableExpr);
	PGList	   *tl = NIL;
	PGListCell   *lc;

	/* create common table expression */
	cte->ctename = relname;
	cte->aliascolnames = aliases;
	cte->ctequery = query;
	cte->location = -1;

	/* create WITH clause and attach CTE */
	w->recursive = true;
	w->ctes = list_make1(cte);
	w->location = -1;

	/* create target list for the new SELECT from the alias list of the
	 * recursive view specification */
	foreach (lc, aliases)
	{
		PGResTarget *rt = makeNode(PGResTarget);

		rt->name = NULL;
		rt->indirection = NIL;
		rt->val = makeColumnRef(strVal(lfirst(lc)), NIL, -1, 0);
		rt->location = -1;

		tl = lappend(tl, rt);
	}

	/* create new SELECT combining WITH clause, target list, and fake FROM
	 * clause */
	s->withClause = w;
	s->targetList = tl;
	s->fromClause = list_make1(makeRangeVar(NULL, relname, -1));

	return (PGNode *) s;
}

/* parser_init()
 * Initialize to parse one query string
 */
void
parser_init(base_yy_extra_type *yyext)
{
	yyext->parsetree = NIL;		/* in case grammar forgets to set it */
}

#undef yyparse
#undef yylex
#undef yyerror
#undef yylval
#undef yychar
#undef yydebug
#undef yynerrs
#undef yylloc

} // namespace duckdb_libpgquery

