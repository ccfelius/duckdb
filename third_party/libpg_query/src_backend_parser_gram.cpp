/* A Bison parser, made by GNU Bison 2.3.  */

/* Skeleton implementation for Bison's Yacc-like parsers in C

   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.3"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Using locations.  */
#define YYLSP_NEEDED 1

/* Substitute the variable and function names.  */
#define yyparse base_yyparse
#define yylex   base_yylex
#define yyerror base_yyerror
#define yylval  base_yylval
#define yychar  base_yychar
#define yydebug base_yydebug
#define yynerrs base_yynerrs
#define yylloc base_yylloc

/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     IDENT = 258,
     FCONST = 259,
     SCONST = 260,
     BCONST = 261,
     XCONST = 262,
     Op = 263,
     ICONST = 264,
     PARAM = 265,
     TYPECAST = 266,
     DOT_DOT = 267,
     COLON_EQUALS = 268,
     EQUALS_GREATER = 269,
     LESS_EQUALS = 270,
     GREATER_EQUALS = 271,
     NOT_EQUALS = 272,
     ABORT_P = 273,
     ABSOLUTE_P = 274,
     ACCESS = 275,
     ACTION = 276,
     ADD_P = 277,
     ADMIN = 278,
     AFTER = 279,
     AGGREGATE = 280,
     ALL = 281,
     ALSO = 282,
     ALTER = 283,
     ALWAYS = 284,
     ANALYSE = 285,
     ANALYZE = 286,
     AND = 287,
     ANY = 288,
     ARRAY = 289,
     AS = 290,
     ASC_P = 291,
     ASSERTION = 292,
     ASSIGNMENT = 293,
     ASYMMETRIC = 294,
     AT = 295,
     ATTACH = 296,
     ATTRIBUTE = 297,
     AUTHORIZATION = 298,
     BACKWARD = 299,
     BEFORE = 300,
     BEGIN_P = 301,
     BETWEEN = 302,
     BIGINT = 303,
     BINARY = 304,
     BIT = 305,
     BOOLEAN_P = 306,
     BOTH = 307,
     BY = 308,
     CACHE = 309,
     CALLED = 310,
     CASCADE = 311,
     CASCADED = 312,
     CASE = 313,
     CAST = 314,
     CATALOG_P = 315,
     CHAIN = 316,
     CHAR_P = 317,
     CHARACTER = 318,
     CHARACTERISTICS = 319,
     CHECK_P = 320,
     CHECKPOINT = 321,
     CLASS = 322,
     CLOSE = 323,
     CLUSTER = 324,
     COALESCE = 325,
     COLLATE = 326,
     COLLATION = 327,
     COLUMN = 328,
     COLUMNS = 329,
     COMMENT = 330,
     COMMENTS = 331,
     COMMIT = 332,
     COMMITTED = 333,
     CONCURRENTLY = 334,
     CONFIGURATION = 335,
     CONFLICT = 336,
     CONNECTION = 337,
     CONSTRAINT = 338,
     CONSTRAINTS = 339,
     CONTENT_P = 340,
     CONTINUE_P = 341,
     CONVERSION_P = 342,
     COPY = 343,
     COST = 344,
     CREATE_P = 345,
     CROSS = 346,
     CSV = 347,
     CUBE = 348,
     CURRENT_P = 349,
     CURRENT_CATALOG = 350,
     CURRENT_DATE = 351,
     CURRENT_ROLE = 352,
     CURRENT_SCHEMA = 353,
     CURRENT_TIME = 354,
     CURRENT_TIMESTAMP = 355,
     CURRENT_USER = 356,
     CURSOR = 357,
     CYCLE = 358,
     DATA_P = 359,
     DATABASE = 360,
     DAY_P = 361,
     DEALLOCATE = 362,
     DEC = 363,
     DECIMAL_P = 364,
     DECLARE = 365,
     DEFAULT = 366,
     DEFAULTS = 367,
     DEFERRABLE = 368,
     DEFERRED = 369,
     DEFINER = 370,
     DELETE_P = 371,
     DELIMITER = 372,
     DELIMITERS = 373,
     DEPENDS = 374,
     DESC_P = 375,
     DESCRIBE = 376,
     DETACH = 377,
     DICTIONARY = 378,
     DISABLE_P = 379,
     DISCARD = 380,
     DISTINCT = 381,
     DO = 382,
     DOCUMENT_P = 383,
     DOMAIN_P = 384,
     DOUBLE_P = 385,
     DROP = 386,
     EACH = 387,
     ELSE = 388,
     ENABLE_P = 389,
     ENCODING = 390,
     ENCRYPTED = 391,
     END_P = 392,
     ENUM_P = 393,
     ESCAPE = 394,
     EVENT = 395,
     EXCEPT = 396,
     EXCLUDE = 397,
     EXCLUDING = 398,
     EXCLUSIVE = 399,
     EXECUTE = 400,
     EXISTS = 401,
     EXPLAIN = 402,
     EXPORT_P = 403,
     EXTENSION = 404,
     EXTERNAL = 405,
     EXTRACT = 406,
     FALSE_P = 407,
     FAMILY = 408,
     FETCH = 409,
     FILTER = 410,
     FIRST_P = 411,
     FLOAT_P = 412,
     FOLLOWING = 413,
     FOR = 414,
     FORCE = 415,
     FOREIGN = 416,
     FORWARD = 417,
     FREEZE = 418,
     FROM = 419,
     FULL = 420,
     FUNCTION = 421,
     FUNCTIONS = 422,
     GENERATED = 423,
     GLOBAL = 424,
     GRANT = 425,
     GRANTED = 426,
     GROUP_P = 427,
     GROUPING = 428,
     HANDLER = 429,
     HAVING = 430,
     HEADER_P = 431,
     HOLD = 432,
     HOUR_P = 433,
     IDENTITY_P = 434,
     IF_P = 435,
     ILIKE = 436,
     IMMEDIATE = 437,
     IMMUTABLE = 438,
     IMPLICIT_P = 439,
     IMPORT_P = 440,
     IN_P = 441,
     INCLUDING = 442,
     INCREMENT = 443,
     INDEX = 444,
     INDEXES = 445,
     INHERIT = 446,
     INHERITS = 447,
     INITIALLY = 448,
     INLINE_P = 449,
     INNER_P = 450,
     INOUT = 451,
     INPUT_P = 452,
     INSENSITIVE = 453,
     INSERT = 454,
     INSTEAD = 455,
     INT_P = 456,
     INTEGER = 457,
     INTERSECT = 458,
     INTERVAL = 459,
     INTO = 460,
     INVOKER = 461,
     IS = 462,
     ISNULL = 463,
     ISOLATION = 464,
     JOIN = 465,
     KEY = 466,
     LABEL = 467,
     LANGUAGE = 468,
     LARGE_P = 469,
     LAST_P = 470,
     LATERAL_P = 471,
     LEADING = 472,
     LEAKPROOF = 473,
     LEFT = 474,
     LEVEL = 475,
     LIKE = 476,
     LIMIT = 477,
     LISTEN = 478,
     LOAD = 479,
     LOCAL = 480,
     LOCALTIME = 481,
     LOCALTIMESTAMP = 482,
     LOCATION = 483,
     LOCK_P = 484,
     LOCKED = 485,
     LOGGED = 486,
     MAPPING = 487,
     MATCH = 488,
     MATERIALIZED = 489,
     MAXVALUE = 490,
     METHOD = 491,
     MINUTE_P = 492,
     MINVALUE = 493,
     MODE = 494,
     MONTH_P = 495,
     MOVE = 496,
     NAME_P = 497,
     NAMES = 498,
     NATIONAL = 499,
     NATURAL = 500,
     NCHAR = 501,
     NEW = 502,
     NEXT = 503,
     NO = 504,
     NONE = 505,
     NOT = 506,
     NOTHING = 507,
     NOTIFY = 508,
     NOTNULL = 509,
     NOWAIT = 510,
     NULL_P = 511,
     NULLIF = 512,
     NULLS_P = 513,
     NUMERIC = 514,
     OBJECT_P = 515,
     OF = 516,
     OFF = 517,
     OFFSET = 518,
     OIDS = 519,
     OLD = 520,
     ON = 521,
     ONLY = 522,
     OPERATOR = 523,
     OPTION = 524,
     OPTIONS = 525,
     OR = 526,
     ORDER = 527,
     ORDINALITY = 528,
     OUT_P = 529,
     OUTER_P = 530,
     OVER = 531,
     OVERLAPS = 532,
     OVERLAY = 533,
     OVERRIDING = 534,
     OWNED = 535,
     OWNER = 536,
     PARALLEL = 537,
     PARSER = 538,
     PARTIAL = 539,
     PARTITION = 540,
     PASSING = 541,
     PASSWORD = 542,
     PLACING = 543,
     PLANS = 544,
     POLICY = 545,
     POSITION = 546,
     PRAGMA_P = 547,
     PRECEDING = 548,
     PRECISION = 549,
     PREPARE = 550,
     PREPARED = 551,
     PRESERVE = 552,
     PRIMARY = 553,
     PRIOR = 554,
     PRIVILEGES = 555,
     PROCEDURAL = 556,
     PROCEDURE = 557,
     PROGRAM = 558,
     PUBLICATION = 559,
     QUOTE = 560,
     RANGE = 561,
     READ_P = 562,
     REAL = 563,
     REASSIGN = 564,
     RECHECK = 565,
     RECURSIVE = 566,
     REF = 567,
     REFERENCES = 568,
     REFERENCING = 569,
     REFRESH = 570,
     REINDEX = 571,
     RELATIVE_P = 572,
     RELEASE = 573,
     RENAME = 574,
     REPEATABLE = 575,
     REPLACE = 576,
     REPLICA = 577,
     RESET = 578,
     RESTART = 579,
     RESTRICT = 580,
     RETURNING = 581,
     RETURNS = 582,
     REVOKE = 583,
     RIGHT = 584,
     ROLE = 585,
     ROLLBACK = 586,
     ROLLUP = 587,
     ROW = 588,
     ROWS = 589,
     RULE = 590,
     SAVEPOINT = 591,
     SCHEMA = 592,
     SCHEMAS = 593,
     SCROLL = 594,
     SEARCH = 595,
     SECOND_P = 596,
     SECURITY = 597,
     SELECT = 598,
     SEQUENCE = 599,
     SEQUENCES = 600,
     SERIALIZABLE = 601,
     SERVER = 602,
     SESSION = 603,
     SESSION_USER = 604,
     SET = 605,
     SETOF = 606,
     SETS = 607,
     SHARE = 608,
     SHOW = 609,
     SIMILAR = 610,
     SIMPLE = 611,
     SKIP = 612,
     SMALLINT = 613,
     SNAPSHOT = 614,
     SOME = 615,
     SQL_P = 616,
     STABLE = 617,
     STANDALONE_P = 618,
     START = 619,
     STATEMENT = 620,
     STATISTICS = 621,
     STDIN = 622,
     STDOUT = 623,
     STORAGE = 624,
     STRICT_P = 625,
     STRIP_P = 626,
     SUBSCRIPTION = 627,
     SUBSTRING = 628,
     SYMMETRIC = 629,
     SYSID = 630,
     SYSTEM_P = 631,
     TABLE = 632,
     TABLES = 633,
     TABLESAMPLE = 634,
     TABLESPACE = 635,
     TEMP = 636,
     TEMPLATE = 637,
     TEMPORARY = 638,
     TEXT_P = 639,
     THEN = 640,
     TIME = 641,
     TIMESTAMP = 642,
     TO = 643,
     TRAILING = 644,
     TRANSACTION = 645,
     TRANSFORM = 646,
     TREAT = 647,
     TRIGGER = 648,
     TRIM = 649,
     TRUE_P = 650,
     TRUNCATE = 651,
     TRUSTED = 652,
     TYPE_P = 653,
     TYPES_P = 654,
     UNBOUNDED = 655,
     UNCOMMITTED = 656,
     UNENCRYPTED = 657,
     UNION = 658,
     UNIQUE = 659,
     UNKNOWN = 660,
     UNLISTEN = 661,
     UNLOGGED = 662,
     UNTIL = 663,
     UPDATE = 664,
     USER = 665,
     USING = 666,
     VACUUM = 667,
     VALID = 668,
     VALIDATE = 669,
     VALIDATOR = 670,
     VALUE_P = 671,
     VALUES = 672,
     VARCHAR = 673,
     VARIADIC = 674,
     VARYING = 675,
     VERBOSE = 676,
     VERSION_P = 677,
     VIEW = 678,
     VIEWS = 679,
     VOLATILE = 680,
     WHEN = 681,
     WHERE = 682,
     WHITESPACE_P = 683,
     WINDOW = 684,
     WITH = 685,
     WITHIN = 686,
     WITHOUT = 687,
     WORK = 688,
     WRAPPER = 689,
     WRITE_P = 690,
     XML_P = 691,
     XMLATTRIBUTES = 692,
     XMLCONCAT = 693,
     XMLELEMENT = 694,
     XMLEXISTS = 695,
     XMLFOREST = 696,
     XMLNAMESPACES = 697,
     XMLPARSE = 698,
     XMLPI = 699,
     XMLROOT = 700,
     XMLSERIALIZE = 701,
     XMLTABLE = 702,
     YEAR_P = 703,
     YES_P = 704,
     ZONE = 705,
     NOT_LA = 706,
     NULLS_LA = 707,
     WITH_LA = 708,
     POSTFIXOP = 709,
     UMINUS = 710
   };
#endif
/* Tokens.  */
#define IDENT 258
#define FCONST 259
#define SCONST 260
#define BCONST 261
#define XCONST 262
#define Op 263
#define ICONST 264
#define PARAM 265
#define TYPECAST 266
#define DOT_DOT 267
#define COLON_EQUALS 268
#define EQUALS_GREATER 269
#define LESS_EQUALS 270
#define GREATER_EQUALS 271
#define NOT_EQUALS 272
#define ABORT_P 273
#define ABSOLUTE_P 274
#define ACCESS 275
#define ACTION 276
#define ADD_P 277
#define ADMIN 278
#define AFTER 279
#define AGGREGATE 280
#define ALL 281
#define ALSO 282
#define ALTER 283
#define ALWAYS 284
#define ANALYSE 285
#define ANALYZE 286
#define AND 287
#define ANY 288
#define ARRAY 289
#define AS 290
#define ASC_P 291
#define ASSERTION 292
#define ASSIGNMENT 293
#define ASYMMETRIC 294
#define AT 295
#define ATTACH 296
#define ATTRIBUTE 297
#define AUTHORIZATION 298
#define BACKWARD 299
#define BEFORE 300
#define BEGIN_P 301
#define BETWEEN 302
#define BIGINT 303
#define BINARY 304
#define BIT 305
#define BOOLEAN_P 306
#define BOTH 307
#define BY 308
#define CACHE 309
#define CALLED 310
#define CASCADE 311
#define CASCADED 312
#define CASE 313
#define CAST 314
#define CATALOG_P 315
#define CHAIN 316
#define CHAR_P 317
#define CHARACTER 318
#define CHARACTERISTICS 319
#define CHECK_P 320
#define CHECKPOINT 321
#define CLASS 322
#define CLOSE 323
#define CLUSTER 324
#define COALESCE 325
#define COLLATE 326
#define COLLATION 327
#define COLUMN 328
#define COLUMNS 329
#define COMMENT 330
#define COMMENTS 331
#define COMMIT 332
#define COMMITTED 333
#define CONCURRENTLY 334
#define CONFIGURATION 335
#define CONFLICT 336
#define CONNECTION 337
#define CONSTRAINT 338
#define CONSTRAINTS 339
#define CONTENT_P 340
#define CONTINUE_P 341
#define CONVERSION_P 342
#define COPY 343
#define COST 344
#define CREATE_P 345
#define CROSS 346
#define CSV 347
#define CUBE 348
#define CURRENT_P 349
#define CURRENT_CATALOG 350
#define CURRENT_DATE 351
#define CURRENT_ROLE 352
#define CURRENT_SCHEMA 353
#define CURRENT_TIME 354
#define CURRENT_TIMESTAMP 355
#define CURRENT_USER 356
#define CURSOR 357
#define CYCLE 358
#define DATA_P 359
#define DATABASE 360
#define DAY_P 361
#define DEALLOCATE 362
#define DEC 363
#define DECIMAL_P 364
#define DECLARE 365
#define DEFAULT 366
#define DEFAULTS 367
#define DEFERRABLE 368
#define DEFERRED 369
#define DEFINER 370
#define DELETE_P 371
#define DELIMITER 372
#define DELIMITERS 373
#define DEPENDS 374
#define DESC_P 375
#define DESCRIBE 376
#define DETACH 377
#define DICTIONARY 378
#define DISABLE_P 379
#define DISCARD 380
#define DISTINCT 381
#define DO 382
#define DOCUMENT_P 383
#define DOMAIN_P 384
#define DOUBLE_P 385
#define DROP 386
#define EACH 387
#define ELSE 388
#define ENABLE_P 389
#define ENCODING 390
#define ENCRYPTED 391
#define END_P 392
#define ENUM_P 393
#define ESCAPE 394
#define EVENT 395
#define EXCEPT 396
#define EXCLUDE 397
#define EXCLUDING 398
#define EXCLUSIVE 399
#define EXECUTE 400
#define EXISTS 401
#define EXPLAIN 402
#define EXPORT_P 403
#define EXTENSION 404
#define EXTERNAL 405
#define EXTRACT 406
#define FALSE_P 407
#define FAMILY 408
#define FETCH 409
#define FILTER 410
#define FIRST_P 411
#define FLOAT_P 412
#define FOLLOWING 413
#define FOR 414
#define FORCE 415
#define FOREIGN 416
#define FORWARD 417
#define FREEZE 418
#define FROM 419
#define FULL 420
#define FUNCTION 421
#define FUNCTIONS 422
#define GENERATED 423
#define GLOBAL 424
#define GRANT 425
#define GRANTED 426
#define GROUP_P 427
#define GROUPING 428
#define HANDLER 429
#define HAVING 430
#define HEADER_P 431
#define HOLD 432
#define HOUR_P 433
#define IDENTITY_P 434
#define IF_P 435
#define ILIKE 436
#define IMMEDIATE 437
#define IMMUTABLE 438
#define IMPLICIT_P 439
#define IMPORT_P 440
#define IN_P 441
#define INCLUDING 442
#define INCREMENT 443
#define INDEX 444
#define INDEXES 445
#define INHERIT 446
#define INHERITS 447
#define INITIALLY 448
#define INLINE_P 449
#define INNER_P 450
#define INOUT 451
#define INPUT_P 452
#define INSENSITIVE 453
#define INSERT 454
#define INSTEAD 455
#define INT_P 456
#define INTEGER 457
#define INTERSECT 458
#define INTERVAL 459
#define INTO 460
#define INVOKER 461
#define IS 462
#define ISNULL 463
#define ISOLATION 464
#define JOIN 465
#define KEY 466
#define LABEL 467
#define LANGUAGE 468
#define LARGE_P 469
#define LAST_P 470
#define LATERAL_P 471
#define LEADING 472
#define LEAKPROOF 473
#define LEFT 474
#define LEVEL 475
#define LIKE 476
#define LIMIT 477
#define LISTEN 478
#define LOAD 479
#define LOCAL 480
#define LOCALTIME 481
#define LOCALTIMESTAMP 482
#define LOCATION 483
#define LOCK_P 484
#define LOCKED 485
#define LOGGED 486
#define MAPPING 487
#define MATCH 488
#define MATERIALIZED 489
#define MAXVALUE 490
#define METHOD 491
#define MINUTE_P 492
#define MINVALUE 493
#define MODE 494
#define MONTH_P 495
#define MOVE 496
#define NAME_P 497
#define NAMES 498
#define NATIONAL 499
#define NATURAL 500
#define NCHAR 501
#define NEW 502
#define NEXT 503
#define NO 504
#define NONE 505
#define NOT 506
#define NOTHING 507
#define NOTIFY 508
#define NOTNULL 509
#define NOWAIT 510
#define NULL_P 511
#define NULLIF 512
#define NULLS_P 513
#define NUMERIC 514
#define OBJECT_P 515
#define OF 516
#define OFF 517
#define OFFSET 518
#define OIDS 519
#define OLD 520
#define ON 521
#define ONLY 522
#define OPERATOR 523
#define OPTION 524
#define OPTIONS 525
#define OR 526
#define ORDER 527
#define ORDINALITY 528
#define OUT_P 529
#define OUTER_P 530
#define OVER 531
#define OVERLAPS 532
#define OVERLAY 533
#define OVERRIDING 534
#define OWNED 535
#define OWNER 536
#define PARALLEL 537
#define PARSER 538
#define PARTIAL 539
#define PARTITION 540
#define PASSING 541
#define PASSWORD 542
#define PLACING 543
#define PLANS 544
#define POLICY 545
#define POSITION 546
#define PRAGMA_P 547
#define PRECEDING 548
#define PRECISION 549
#define PREPARE 550
#define PREPARED 551
#define PRESERVE 552
#define PRIMARY 553
#define PRIOR 554
#define PRIVILEGES 555
#define PROCEDURAL 556
#define PROCEDURE 557
#define PROGRAM 558
#define PUBLICATION 559
#define QUOTE 560
#define RANGE 561
#define READ_P 562
#define REAL 563
#define REASSIGN 564
#define RECHECK 565
#define RECURSIVE 566
#define REF 567
#define REFERENCES 568
#define REFERENCING 569
#define REFRESH 570
#define REINDEX 571
#define RELATIVE_P 572
#define RELEASE 573
#define RENAME 574
#define REPEATABLE 575
#define REPLACE 576
#define REPLICA 577
#define RESET 578
#define RESTART 579
#define RESTRICT 580
#define RETURNING 581
#define RETURNS 582
#define REVOKE 583
#define RIGHT 584
#define ROLE 585
#define ROLLBACK 586
#define ROLLUP 587
#define ROW 588
#define ROWS 589
#define RULE 590
#define SAVEPOINT 591
#define SCHEMA 592
#define SCHEMAS 593
#define SCROLL 594
#define SEARCH 595
#define SECOND_P 596
#define SECURITY 597
#define SELECT 598
#define SEQUENCE 599
#define SEQUENCES 600
#define SERIALIZABLE 601
#define SERVER 602
#define SESSION 603
#define SESSION_USER 604
#define SET 605
#define SETOF 606
#define SETS 607
#define SHARE 608
#define SHOW 609
#define SIMILAR 610
#define SIMPLE 611
#define SKIP 612
#define SMALLINT 613
#define SNAPSHOT 614
#define SOME 615
#define SQL_P 616
#define STABLE 617
#define STANDALONE_P 618
#define START 619
#define STATEMENT 620
#define STATISTICS 621
#define STDIN 622
#define STDOUT 623
#define STORAGE 624
#define STRICT_P 625
#define STRIP_P 626
#define SUBSCRIPTION 627
#define SUBSTRING 628
#define SYMMETRIC 629
#define SYSID 630
#define SYSTEM_P 631
#define TABLE 632
#define TABLES 633
#define TABLESAMPLE 634
#define TABLESPACE 635
#define TEMP 636
#define TEMPLATE 637
#define TEMPORARY 638
#define TEXT_P 639
#define THEN 640
#define TIME 641
#define TIMESTAMP 642
#define TO 643
#define TRAILING 644
#define TRANSACTION 645
#define TRANSFORM 646
#define TREAT 647
#define TRIGGER 648
#define TRIM 649
#define TRUE_P 650
#define TRUNCATE 651
#define TRUSTED 652
#define TYPE_P 653
#define TYPES_P 654
#define UNBOUNDED 655
#define UNCOMMITTED 656
#define UNENCRYPTED 657
#define UNION 658
#define UNIQUE 659
#define UNKNOWN 660
#define UNLISTEN 661
#define UNLOGGED 662
#define UNTIL 663
#define UPDATE 664
#define USER 665
#define USING 666
#define VACUUM 667
#define VALID 668
#define VALIDATE 669
#define VALIDATOR 670
#define VALUE_P 671
#define VALUES 672
#define VARCHAR 673
#define VARIADIC 674
#define VARYING 675
#define VERBOSE 676
#define VERSION_P 677
#define VIEW 678
#define VIEWS 679
#define VOLATILE 680
#define WHEN 681
#define WHERE 682
#define WHITESPACE_P 683
#define WINDOW 684
#define WITH 685
#define WITHIN 686
#define WITHOUT 687
#define WORK 688
#define WRAPPER 689
#define WRITE_P 690
#define XML_P 691
#define XMLATTRIBUTES 692
#define XMLCONCAT 693
#define XMLELEMENT 694
#define XMLEXISTS 695
#define XMLFOREST 696
#define XMLNAMESPACES 697
#define XMLPARSE 698
#define XMLPI 699
#define XMLROOT 700
#define XMLSERIALIZE 701
#define XMLTABLE 702
#define YEAR_P 703
#define YES_P 704
#define ZONE 705
#define NOT_LA 706
#define NULLS_LA 707
#define WITH_LA 708
#define POSTFIXOP 709
#define UMINUS 710




/* Copy the first part of user declarations.  */
#line 1 "third_party/libpg_query/grammar/grammar.y.tmp"

#line 1 "third_party/libpg_query/grammar/grammar.hpp"
/*#define YYDEBUG 1*/
/*-------------------------------------------------------------------------
 *
 * gram.y
 *	  POSTGRESQL BISON rules/actions
 *
 * Portions Copyright (c) 1996-2017, PostgreSQL Global Development PGGroup
 * Portions Copyright (c) 1994, Regents of the University of California
 *
 *
 * IDENTIFICATION
 *	  src/backend/parser/gram.y
 *
 * HISTORY
 *	  AUTHOR			DATE			MAJOR EVENT
 *	  Andrew Yu			Sept, 1994		POSTQUEL to SQL conversion
 *	  Andrew Yu			Oct, 1994		lispy code conversion
 *
 * NOTES
 *	  CAPITALS are used to represent terminal symbols.
 *	  non-capitals are used to represent non-terminals.
 *
 *	  In general, nothing in this file should initiate database accesses
 *	  nor depend on changeable state (such as SET variables).  If you do
 *	  database accesses, your code will fail when we have aborted the
 *	  current transaction and are just parsing commands to find the next
 *	  ROLLBACK or COMMIT.  If you make use of SET variables, then you
 *	  will do the wrong thing in multi-query strings like this:
 *			SET constraint_exclusion TO off; SELECT * FROM foo;
 *	  because the entire string is parsed by gram.y before the SET gets
 *	  executed.  Anything that depends on the database or changeable state
 *	  should be handled during parse analysis so that it happens at the
 *	  right time not the wrong time.
 *
 * WARNINGS
 *	  If you use a list, make sure the datum is a node so that the printing
 *	  routines work.
 *
 *	  Sometimes we assign constants to makeStrings. Make sure we don't free
 *	  those.
 *
 *-------------------------------------------------------------------------
 */
#include "pg_functions.hpp"
#include <string.h>

#include <ctype.h>
#include <limits.h>

#include "nodes/makefuncs.hpp"
#include "nodes/nodeFuncs.hpp"
#include "parser/gramparse.hpp"
#include "parser/parser.hpp"
#include "utils/datetime.hpp"

namespace duckdb_libpgquery {
#define DEFAULT_SCHEMA "main"

/*
 * Location tracking support --- simpler than bison's default, since we only
 * want to track the start position not the end position of each nonterminal.
 */
#define YYLLOC_DEFAULT(Current, Rhs, N) \
	do { \
		if ((N) > 0) \
			(Current) = (Rhs)[1]; \
		else \
			(Current) = (-1); \
	} while (0)

/*
 * The above macro assigns -1 (unknown) as the parse location of any
 * nonterminal that was reduced from an empty rule, or whose leftmost
 * component was reduced from an empty rule.  This is problematic
 * for nonterminals defined like
 *		OptFooList: / * EMPTY * / { ... } | OptFooList Foo { ... } ;
 * because we'll set -1 as the location during the first reduction and then
 * copy it during each subsequent reduction, leaving us with -1 for the
 * location even when the list is not empty.  To fix that, do this in the
 * action for the nonempty rule(s):
 *		if (@$ < 0) @$ = @2;
 * (Although we have many nonterminals that follow this pattern, we only
 * bother with fixing @$ like this when the nonterminal's parse location
 * is actually referenced in some rule.)
 *
 * A cleaner answer would be to make YYLLOC_DEFAULT scan all the Rhs
 * locations until it's found one that's not -1.  Then we'd get a correct
 * location for any nonterminal that isn't entirely empty.  But this way
 * would add overhead to every rule reduction, and so far there's not been
 * a compelling reason to pay that overhead.
 */

/*
 * Bison doesn't allocate anything that needs to live across parser calls,
 * so we can easily have it use palloc instead of malloc.  This prevents
 * memory leaks if we error out during parsing.  Note this only works with
 * bison >= 2.0.  However, in bison 1.875 the default is to use alloca()
 * if possible, so there's not really much problem anyhow, at least if
 * you're building with gcc.
 */
#define YYMALLOC palloc
#define YYFREE   pfree
#define YYINITDEPTH 1000

/* yields an integer bitmask of these flags: */
#define CAS_NOT_DEFERRABLE			0x01
#define CAS_DEFERRABLE				0x02
#define CAS_INITIALLY_IMMEDIATE		0x04
#define CAS_INITIALLY_DEFERRED		0x08
#define CAS_NOT_VALID				0x10
#define CAS_NO_INHERIT				0x20


#define parser_yyerror(msg)  scanner_yyerror(msg, yyscanner)
#define parser_errposition(pos)  scanner_errposition(pos, yyscanner)

static void base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner,
						 const char *msg);
static PGRawStmt *makeRawStmt(PGNode *stmt, int stmt_location);
static void updateRawStmtEnd(PGRawStmt *rs, int end_location);
static PGNode *makeColumnRef(char *colname, PGList *indirection,
						   int location, core_yyscan_t yyscanner);
static PGNode *makeTypeCast(PGNode *arg, PGTypeName *tpname, int location);
static PGNode *makeStringConst(char *str, int location);
static PGNode *makeStringConstCast(char *str, int location, PGTypeName *tpname);
static PGNode *makeIntConst(int val, int location);
static PGNode *makeFloatConst(char *str, int location);
static PGNode *makeBitStringConst(char *str, int location);
static PGNode *makeNullAConst(int location);
static PGNode *makeAConst(PGValue *v, int location);
static PGNode *makeBoolAConst(bool state, int location);
static PGNode *makeParamRef(int number, int location);
static PGNode *makeParamRefCast(int number, int location, PGTypeName *tpname);
static void check_qualified_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_func_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_indirection(PGList *indirection, core_yyscan_t yyscanner);
static void insertSelectOptions(PGSelectStmt *stmt,
								PGList *sortClause, PGList *lockingClause,
								PGNode *limitOffset, PGNode *limitCount,
								PGWithClause *withClause,
								core_yyscan_t yyscanner);
static PGNode *makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg);
static PGNode *doNegate(PGNode *n, int location);
static void doNegateFloat(PGValue *v);
static PGNode *makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeNotExpr(PGNode *expr, int location);
static PGNode *makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod,
								  int location);
static void SplitColQualList(PGList *qualList,
							 PGList **constraintList, PGCollateClause **collClause,
							 core_yyscan_t yyscanner);
static void processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner);
static PGNode *makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query);



/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* Enabling the token table.  */
#ifndef YYTOKEN_TABLE
# define YYTOKEN_TABLE 0
#endif

#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE
#line 14 "third_party/libpg_query/grammar/grammar.y"
{
	core_YYSTYPE		core_yystype;
	/* these fields must match core_YYSTYPE: */
	int					ival;
	char				*str;
	const char			*keyword;
	const char          *conststr;

	char				chr;
	bool				boolean;
	PGJoinType			jtype;
	PGDropBehavior		dbehavior;
	PGOnCommitAction		oncommit;
	PGList				*list;
	PGNode				*node;
	PGValue				*value;
	PGObjectType			objtype;
	PGTypeName			*typnam;
	PGObjectWithArgs		*objwithargs;
	PGDefElem				*defelt;
	PGSortBy				*sortby;
	PGWindowDef			*windef;
	PGJoinExpr			*jexpr;
	PGIndexElem			*ielem;
	PGAlias				*alias;
	PGRangeVar			*range;
	PGIntoClause			*into;
	PGWithClause			*with;
	PGInferClause			*infer;
	PGOnConflictClause	*onconflict;
	PGAIndices			*aind;
	PGResTarget			*target;
	PGInsertStmt			*istmt;
	PGVariableSetStmt		*vsetstmt;
	PGOverridingKind       override;
	PGSortByDir            sortorder;
	PGSortByNulls          nullorder;
	PGLockClauseStrength lockstrength;
	PGLockWaitPolicy lockwaitpolicy;
	PGSubLinkType subquerytype;
	PGViewCheckOption viewcheckoption;
}
/* Line 193 of yacc.c.  */
#line 1218 "third_party/libpg_query/grammar/grammar_out.cpp"
	YYSTYPE;
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
# define YYSTYPE_IS_TRIVIAL 1
#endif

#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif


/* Copy the second part of user declarations.  */


/* Line 216 of yacc.c.  */
#line 1243 "third_party/libpg_query/grammar/grammar_out.cpp"

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#elif (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
typedef signed char yytype_int8;
#else
typedef short int yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(msgid) dgettext ("bison-runtime", msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(msgid) msgid
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(e) ((void) (e))
#else
# define YYUSE(e) /* empty */
#endif

/* Identity function, used to suppress warnings about constant conditions.  */
#ifndef lint
# define YYID(n) (n)
#else
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static int
YYID (int i)
#else
static int
YYID (i)
    int i;
#endif
{
  return i;
}
#endif

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#     ifndef _STDLIB_H
#      define _STDLIB_H 1
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined _STDLIB_H \
       && ! ((defined YYMALLOC || defined malloc) \
	     && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef _STDLIB_H
#    define _STDLIB_H 1
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
	 || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
	     && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss;
  YYSTYPE yyvs;
    YYLTYPE yyls;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(To, From, Count) \
      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
#  else
#   define YYCOPY(To, From, Count)		\
      do					\
	{					\
	  YYSIZE_T yyi;				\
	  for (yyi = 0; yyi < (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (YYID (0))
#  endif
# endif

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack)					\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack, Stack, yysize);				\
	Stack = &yyptr->Stack;						\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))

#endif

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  516
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   44970

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  474
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  342
/* YYNRULES -- Number of rules.  */
#define YYNRULES  1556
/* YYNRULES -- Number of states.  */
#define YYNSTATES  2600

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   710

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,   462,     2,     2,
     467,   468,   460,   458,   471,   459,   469,   461,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   473,   470,
     454,   456,   455,   472,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,   465,     2,   466,   463,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   457,
     464
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const yytype_uint16 yyprhs[] =
{
       0,     0,     3,     5,     9,    11,    13,    15,    17,    19,
      21,    23,    25,    27,    29,    31,    33,    35,    37,    39,
      41,    43,    45,    47,    49,    51,    53,    55,    57,    59,
      61,    63,    65,    67,    69,    71,    73,    74,    79,    86,
      91,    98,   103,   110,   115,   122,   124,   127,   131,   134,
     136,   140,   143,   147,   149,   153,   156,   162,   166,   173,
     178,   185,   192,   199,   205,   211,   218,   228,   233,   239,
     247,   254,   259,   268,   273,   276,   281,   285,   292,   297,
     300,   303,   306,   309,   311,   314,   315,   317,   320,   323,
     326,   328,   332,   337,   340,   341,   344,   348,   351,   355,
     362,   369,   378,   385,   394,   401,   410,   417,   426,   435,
     446,   455,   466,   468,   469,   477,   479,   484,   489,   497,
     500,   502,   506,   511,   515,   516,   518,   519,   522,   526,
     532,   541,   547,   548,   554,   560,   568,   571,   572,   574,
     576,   578,   582,   585,   586,   588,   589,   591,   595,   597,
     601,   603,   607,   610,   613,   618,   624,   630,   639,   641,
     642,   646,   656,   669,   673,   674,   679,   686,   688,   691,
     693,   695,   696,   698,   701,   704,   706,   709,   712,   714,
     717,   721,   724,   727,   730,   733,   737,   741,   745,   747,
     751,   753,   754,   756,   759,   762,   765,   768,   771,   774,
     777,   780,   782,   784,   785,   795,   808,   809,   812,   814,
     816,   818,   820,   822,   824,   828,   829,   831,   834,   836,
     838,   841,   844,   848,   850,   852,   855,   858,   860,   863,
     867,   873,   876,   882,   888,   891,   895,   897,   899,   902,
     905,   906,   911,   912,   916,   921,   926,   927,   931,   934,
     935,   939,   941,   943,   945,   947,   949,   951,   953,   955,
     957,   959,   963,   967,   969,   972,   975,   978,   981,   984,
     987,   988,   992,   996,  1000,  1001,  1003,  1006,  1008,  1011,
    1014,  1017,  1020,  1025,  1027,  1031,  1033,  1037,  1039,  1041,
    1043,  1045,  1049,  1051,  1054,  1055,  1057,  1058,  1060,  1064,
    1065,  1068,  1069,  1073,  1077,  1079,  1085,  1089,  1091,  1095,
    1097,  1102,  1108,  1114,  1121,  1125,  1133,  1138,  1150,  1152,
    1156,  1159,  1162,  1165,  1166,  1170,  1172,  1174,  1177,  1180,
    1183,  1186,  1188,  1189,  1191,  1194,  1201,  1206,  1213,  1218,
    1225,  1234,  1236,  1238,  1240,  1243,  1245,  1248,  1250,  1252,
    1254,  1258,  1262,  1266,  1270,  1273,  1276,  1278,  1282,  1284,
    1286,  1288,  1290,  1294,  1296,  1298,  1299,  1301,  1303,  1305,
    1314,  1326,  1336,  1338,  1340,  1344,  1345,  1347,  1351,  1353,
    1354,  1356,  1357,  1359,  1360,  1362,  1366,  1368,  1370,  1372,
    1376,  1377,  1380,  1383,  1384,  1387,  1388,  1390,  1391,  1393,
    1395,  1397,  1401,  1405,  1407,  1409,  1413,  1417,  1421,  1425,
    1430,  1434,  1437,  1439,  1441,  1443,  1445,  1447,  1451,  1453,
    1455,  1459,  1463,  1465,  1468,  1473,  1478,  1481,  1485,  1491,
    1497,  1499,  1501,  1511,  1521,  1523,  1526,  1531,  1536,  1541,
    1544,  1547,  1551,  1553,  1557,  1564,  1567,  1568,  1572,  1576,
    1581,  1586,  1591,  1596,  1600,  1603,  1605,  1607,  1608,  1610,
    1612,  1613,  1615,  1621,  1623,  1624,  1626,  1627,  1631,  1633,
    1637,  1642,  1646,  1648,  1650,  1651,  1654,  1657,  1658,  1661,
    1664,  1666,  1668,  1670,  1671,  1674,  1679,  1685,  1690,  1693,
    1697,  1699,  1701,  1703,  1705,  1708,  1711,  1713,  1715,  1717,
    1719,  1721,  1723,  1727,  1728,  1730,  1734,  1736,  1738,  1741,
    1744,  1745,  1747,  1751,  1753,  1754,  1756,  1759,  1763,  1766,
    1771,  1774,  1778,  1781,  1782,  1784,  1787,  1788,  1793,  1799,
    1802,  1803,  1805,  1809,  1812,  1816,  1819,  1823,  1826,  1830,
    1832,  1837,  1841,  1846,  1852,  1857,  1863,  1868,  1874,  1877,
    1882,  1884,  1886,  1887,  1889,  1894,  1900,  1905,  1906,  1909,
    1912,  1915,  1917,  1919,  1920,  1925,  1928,  1930,  1933,  1936,
    1941,  1948,  1953,  1954,  1957,  1964,  1967,  1969,  1973,  1978,
    1979,  1982,  1983,  1986,  1987,  1989,  1993,  1997,  2000,  2001,
    2004,  2008,  2014,  2021,  2024,  2028,  2032,  2037,  2038,  2040,
    2042,  2044,  2046,  2048,  2051,  2056,  2058,  2060,  2062,  2064,
    2067,  2071,  2075,  2076,  2078,  2080,  2082,  2084,  2086,  2089,
    2092,  2095,  2098,  2101,  2103,  2107,  2108,  2110,  2112,  2114,
    2116,  2122,  2125,  2127,  2129,  2131,  2133,  2138,  2140,  2143,
    2146,  2148,  2152,  2156,  2159,  2161,  2162,  2168,  2171,  2177,
    2180,  2182,  2186,  2190,  2191,  2193,  2195,  2197,  2199,  2201,
    2203,  2207,  2211,  2215,  2219,  2223,  2227,  2231,  2232,  2234,
    2239,  2241,  2245,  2249,  2255,  2258,  2261,  2265,  2269,  2273,
    2277,  2281,  2285,  2289,  2293,  2297,  2301,  2305,  2309,  2313,
    2316,  2319,  2323,  2327,  2330,  2333,  2337,  2343,  2348,  2355,
    2359,  2365,  2370,  2377,  2382,  2389,  2395,  2403,  2407,  2410,
    2415,  2419,  2422,  2426,  2430,  2435,  2439,  2444,  2448,  2453,
    2459,  2466,  2473,  2481,  2488,  2496,  2503,  2511,  2515,  2520,
    2525,  2532,  2534,  2536,  2540,  2543,  2546,  2550,  2554,  2558,
    2562,  2566,  2570,  2574,  2578,  2582,  2586,  2590,  2594,  2598,
    2601,  2604,  2610,  2617,  2624,  2632,  2634,  2636,  2639,  2642,
    2647,  2649,  2651,  2653,  2656,  2659,  2663,  2669,  2676,  2685,
    2692,  2699,  2704,  2709,  2711,  2713,  2715,  2721,  2723,  2725,
    2730,  2732,  2737,  2739,  2744,  2746,  2751,  2753,  2755,  2757,
    2759,  2761,  2763,  2770,  2775,  2780,  2785,  2790,  2797,  2803,
    2809,  2815,  2820,  2827,  2832,  2838,  2839,  2845,  2846,  2849,
    2850,  2852,  2856,  2860,  2863,  2866,  2867,  2874,  2876,  2877,
    2881,  2882,  2885,  2888,  2889,  2891,  2896,  2899,  2902,  2905,
    2908,  2911,  2916,  2920,  2926,  2928,  2930,  2932,  2934,  2936,
    2938,  2940,  2942,  2944,  2946,  2948,  2950,  2952,  2954,  2956,
    2958,  2960,  2962,  2967,  2969,  2974,  2976,  2981,  2983,  2986,
    2988,  2991,  2993,  2997,  2999,  3003,  3005,  3009,  3011,  3015,
    3019,  3021,  3025,  3029,  3030,  3032,  3034,  3036,  3038,  3040,
    3042,  3044,  3046,  3051,  3055,  3058,  3062,  3063,  3067,  3071,
    3074,  3077,  3079,  3080,  3083,  3086,  3090,  3093,  3095,  3097,
    3101,  3107,  3109,  3112,  3117,  3120,  3121,  3123,  3124,  3126,
    3129,  3132,  3135,  3139,  3145,  3147,  3148,  3150,  3153,  3154,
    3157,  3159,  3160,  3162,  3163,  3165,  3169,  3173,  3176,  3178,
    3180,  3182,  3186,  3188,  3191,  3193,  3197,  3199,  3201,  3203,
    3206,  3208,  3210,  3212,  3214,  3216,  3219,  3226,  3229,  3233,
    3239,  3246,  3248,  3250,  3252,  3254,  3256,  3258,  3260,  3262,
    3264,  3266,  3268,  3270,  3272,  3274,  3277,  3280,  3284,  3288,
    3289,  3291,  3293,  3295,  3297,  3299,  3301,  3303,  3305,  3311,
    3315,  3316,  3318,  3320,  3322,  3324,  3329,  3337,  3340,  3341,
    3343,  3345,  3347,  3349,  3363,  3380,  3382,  3385,  3386,  3388,
    3389,  3391,  3392,  3395,  3396,  3398,  3399,  3406,  3415,  3422,
    3431,  3438,  3447,  3449,  3454,  3458,  3461,  3466,  3470,  3476,
    3478,  3479,  3481,  3483,  3484,  3486,  3488,  3490,  3492,  3494,
    3496,  3498,  3500,  3502,  3504,  3506,  3508,  3512,  3514,  3516,
    3518,  3520,  3522,  3524,  3527,  3529,  3531,  3534,  3538,  3542,
    3544,  3548,  3552,  3555,  3559,  3563,  3567,  3571,  3573,  3575,
    3577,  3579,  3583,  3589,  3591,  3593,  3595,  3597,  3601,  3604,
    3606,  3611,  3617,  3623,  3628,  3635,  3637,  3639,  3641,  3643,
    3645,  3647,  3648,  3650,  3654,  3656,  3657,  3665,  3667,  3670,
    3674,  3677,  3678,  3681,  3682,  3685,  3690,  3693,  3695,  3697,
    3699,  3702,  3706,  3709,  3713,  3718,  3721,  3723,  3725,  3727,
    3731,  3741,  3753,  3766,  3781,  3785,  3790,  3795,  3796,  3804,
    3815,  3818,  3822,  3823,  3828,  3830,  3832,  3834,  3836,  3838,
    3840,  3842,  3844,  3846,  3848,  3850,  3852,  3854,  3856,  3858,
    3860,  3862,  3864,  3866,  3868,  3870,  3872,  3874,  3876,  3878,
    3880,  3882,  3884,  3886,  3888,  3890,  3892,  3894,  3896,  3898,
    3900,  3902,  3904,  3906,  3908,  3910,  3912,  3914,  3916,  3918,
    3920,  3922,  3924,  3926,  3928,  3930,  3932,  3934,  3936,  3938,
    3940,  3942,  3944,  3946,  3948,  3950,  3952,  3954,  3956,  3958,
    3960,  3962,  3964,  3966,  3968,  3970,  3972,  3974,  3976,  3978,
    3980,  3982,  3984,  3986,  3988,  3990,  3992,  3994,  3996,  3998,
    4000,  4002,  4004,  4006,  4008,  4010,  4012,  4014,  4016,  4018,
    4020,  4022,  4024,  4026,  4028,  4030,  4032,  4034,  4036,  4038,
    4040,  4042,  4044,  4046,  4048,  4050,  4052,  4054,  4056,  4058,
    4060,  4062,  4064,  4066,  4068,  4070,  4072,  4074,  4076,  4078,
    4080,  4082,  4084,  4086,  4088,  4090,  4092,  4094,  4096,  4098,
    4100,  4102,  4104,  4106,  4108,  4110,  4112,  4114,  4116,  4118,
    4120,  4122,  4124,  4126,  4128,  4130,  4132,  4134,  4136,  4138,
    4140,  4142,  4144,  4146,  4148,  4150,  4152,  4154,  4156,  4158,
    4160,  4162,  4164,  4166,  4168,  4170,  4172,  4174,  4176,  4178,
    4180,  4182,  4184,  4186,  4188,  4190,  4192,  4194,  4196,  4198,
    4200,  4202,  4204,  4206,  4208,  4210,  4212,  4214,  4216,  4218,
    4220,  4222,  4224,  4226,  4228,  4230,  4232,  4234,  4236,  4238,
    4240,  4242,  4244,  4246,  4248,  4250,  4252,  4254,  4256,  4258,
    4260,  4262,  4264,  4266,  4268,  4270,  4272,  4274,  4276,  4278,
    4280,  4282,  4284,  4286,  4288,  4290,  4292,  4294,  4296,  4298,
    4300,  4302,  4304,  4306,  4308,  4310,  4312,  4314,  4316,  4318,
    4320,  4322,  4324,  4326,  4328,  4330,  4332,  4334,  4336,  4338,
    4340,  4342,  4344,  4346,  4348,  4350,  4352,  4354,  4356,  4358,
    4360,  4362,  4364,  4366,  4368,  4370,  4372,  4374,  4376,  4378,
    4380,  4382,  4384,  4386,  4388,  4390,  4392,  4394,  4396,  4398,
    4400,  4402,  4404,  4406,  4408,  4410,  4412,  4414,  4416,  4418,
    4420,  4422,  4424,  4426,  4428,  4430,  4432,  4434,  4436,  4438,
    4440,  4442,  4444,  4446,  4448,  4450,  4452,  4454,  4456,  4458,
    4460,  4462,  4464,  4466,  4468,  4470,  4472,  4474,  4476,  4478,
    4480,  4482,  4484,  4486,  4488,  4490,  4492,  4494,  4496,  4498,
    4500,  4502,  4504,  4506,  4508,  4510,  4512,  4514,  4516,  4518,
    4520,  4522,  4524,  4526,  4528,  4530,  4532,  4534,  4536,  4538,
    4540,  4542,  4544,  4546,  4548,  4550,  4552,  4554,  4556,  4558,
    4560,  4562,  4564,  4566,  4568,  4570,  4572,  4574,  4576,  4578,
    4580,  4582,  4584,  4586,  4588,  4590,  4592,  4594,  4596,  4598,
    4600,  4602,  4604,  4606,  4608,  4610,  4612,  4614,  4616,  4618,
    4620,  4622,  4624,  4626,  4628,  4630,  4632,  4634,  4636,  4638,
    4640,  4642,  4644,  4646,  4648,  4650,  4652,  4654,  4656,  4658,
    4660,  4662,  4664,  4666,  4668,  4670,  4672,  4674,  4676,  4678,
    4680,  4682,  4684,  4686,  4688,  4690,  4692
};

/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
static const yytype_int16 yyrhs[] =
{
     475,     0,    -1,   476,    -1,   476,   470,   477,    -1,   477,
      -1,   768,    -1,   515,    -1,   478,    -1,   800,    -1,   769,
      -1,   577,    -1,   809,    -1,   758,    -1,   511,    -1,   524,
      -1,   489,    -1,   796,    -1,   570,    -1,   513,    -1,   772,
      -1,   770,    -1,   771,    -1,   761,    -1,   492,    -1,   789,
      -1,   510,    -1,   755,    -1,   490,    -1,   594,    -1,   522,
      -1,   576,    -1,   791,    -1,   801,    -1,   783,    -1,   804,
      -1,   807,    -1,    -1,    28,   377,   647,   486,    -1,    28,
     377,   180,   146,   647,   486,    -1,    28,   189,   738,   486,
      -1,    28,   189,   180,   146,   738,   486,    -1,    28,   344,
     738,   486,    -1,    28,   344,   180,   146,   738,   486,    -1,
      28,   423,   738,   486,    -1,    28,   423,   180,   146,   738,
     486,    -1,   481,    -1,   479,   481,    -1,   350,   111,   682,
      -1,   131,   111,    -1,   324,    -1,   324,   517,   518,    -1,
     350,   519,    -1,   350,   168,   569,    -1,   485,    -1,   482,
     471,   485,    -1,    22,   549,    -1,    22,   180,   251,   146,
     549,    -1,    22,    73,   549,    -1,    22,    73,   180,   251,
     146,   549,    -1,    28,   491,   746,   480,    -1,    28,   491,
     746,   131,   251,   256,    -1,    28,   491,   746,   350,   251,
     256,    -1,    28,   491,   746,   350,   366,   521,    -1,    28,
     491,   746,   350,   537,    -1,    28,   491,   746,   323,   537,
      -1,    28,   491,   746,   350,   369,   746,    -1,    28,   491,
     746,    22,   168,   569,    35,   179,   527,    -1,    28,   491,
     746,   479,    -1,    28,   491,   746,   131,   179,    -1,    28,
     491,   746,   131,   179,   180,   146,    -1,   131,   491,   180,
     146,   746,   574,    -1,   131,   491,   746,   574,    -1,    28,
     491,   746,   488,   398,   659,   658,   484,    -1,    28,   491,
     746,   487,    -1,    22,   539,    -1,    28,    83,   740,   525,
      -1,   414,    83,   740,    -1,   131,    83,   180,   146,   740,
     574,    -1,   131,    83,   740,   574,    -1,   350,   231,    -1,
     350,   407,    -1,   350,   537,    -1,   323,   537,    -1,   487,
      -1,   411,   682,    -1,    -1,   532,    -1,   350,   532,    -1,
      22,   532,    -1,   131,   547,    -1,   483,    -1,   486,   471,
     483,    -1,   270,   467,   482,   468,    -1,   350,   104,    -1,
      -1,   107,   740,    -1,   107,   295,   740,    -1,   107,    26,
      -1,   107,   295,    26,    -1,    28,   337,   740,   319,   388,
     740,    -1,    28,   377,   647,   319,   388,   740,    -1,    28,
     377,   180,   146,   647,   319,   388,   740,    -1,    28,   344,
     738,   319,   388,   740,    -1,    28,   344,   180,   146,   738,
     319,   388,   740,    -1,    28,   423,   738,   319,   388,   740,
      -1,    28,   423,   180,   146,   738,   319,   388,   740,    -1,
      28,   189,   738,   319,   388,   740,    -1,    28,   189,   180,
     146,   738,   319,   388,   740,    -1,    28,   377,   647,   319,
     491,   740,   388,   740,    -1,    28,   377,   180,   146,   647,
     319,   491,   740,   388,   740,    -1,    28,   377,   647,   319,
      83,   740,   388,   740,    -1,    28,   377,   180,   146,   647,
     319,    83,   740,   388,   740,    -1,    73,    -1,    -1,   496,
     199,   205,   494,   493,   499,   501,    -1,   594,    -1,   279,
     502,   416,   594,    -1,   467,   506,   468,   594,    -1,   467,
     506,   468,   279,   502,   416,   594,    -1,   111,   417,    -1,
     738,    -1,   738,    35,   746,    -1,   467,   508,   468,   655,
      -1,   266,    83,   740,    -1,    -1,   599,    -1,    -1,   746,
     732,    -1,   509,   456,   682,    -1,   467,   503,   468,   456,
     682,    -1,   266,    81,   495,   127,   409,   350,   507,   655,
      -1,   266,    81,   495,   127,   252,    -1,    -1,   746,   504,
     505,   612,   613,    -1,   687,   504,   505,   612,   613,    -1,
     467,   682,   468,   504,   505,   612,   613,    -1,   326,   735,
      -1,    -1,   410,    -1,   376,    -1,   509,    -1,   503,   471,
     509,    -1,    71,   749,    -1,    -1,   749,    -1,    -1,   497,
      -1,   506,   471,   497,    -1,   498,    -1,   507,   471,   498,
      -1,   500,    -1,   508,   471,   500,    -1,   746,   732,    -1,
     292,   746,    -1,   292,   746,   456,   788,    -1,   292,   746,
     467,   710,   468,    -1,    90,   568,   344,   738,   512,    -1,
      90,   568,   344,   180,   251,   146,   738,   512,    -1,   516,
      -1,    -1,   145,   740,   514,    -1,    90,   568,   377,   811,
      35,   145,   740,   514,   810,    -1,    90,   568,   377,   180,
     251,   146,   811,    35,   145,   740,   514,   810,    -1,   467,
     709,   468,    -1,    -1,    28,   344,   738,   516,    -1,    28,
     344,   180,   146,   738,   516,    -1,   519,    -1,   516,   519,
      -1,   430,    -1,   453,    -1,    -1,     4,    -1,   458,     4,
      -1,   459,     4,    -1,   521,    -1,    35,   661,    -1,    54,
     518,    -1,   103,    -1,   249,   103,    -1,   188,   520,   518,
      -1,   235,   518,    -1,   238,   518,    -1,   249,   235,    -1,
     249,   238,    -1,   280,    53,   749,    -1,   344,   242,   749,
      -1,   364,   517,   518,    -1,   324,    -1,   324,   517,   518,
      -1,    53,    -1,    -1,   744,    -1,   458,   744,    -1,   459,
     744,    -1,    18,   523,    -1,    46,   523,    -1,   364,   523,
      -1,    77,   523,    -1,   137,   523,    -1,   331,   523,    -1,
     433,    -1,   390,    -1,    -1,    90,   568,   377,   738,   467,
     556,   468,   544,   536,    -1,    90,   568,   377,   180,   251,
     146,   738,   467,   556,   468,   544,   536,    -1,    -1,   525,
     548,    -1,   563,    -1,   815,    -1,   706,    -1,   518,    -1,
     745,    -1,   250,    -1,   467,   516,   468,    -1,    -1,   745,
      -1,   249,    21,    -1,   325,    -1,    56,    -1,   350,   256,
      -1,   350,   111,    -1,    83,   740,   531,    -1,   531,    -1,
     543,    -1,    71,   749,    -1,   251,   256,    -1,   256,    -1,
     404,   555,    -1,   298,   211,   555,    -1,    65,   467,   682,
     468,   538,    -1,   111,   683,    -1,   168,   569,    35,   179,
     527,    -1,   313,   738,   558,   566,   534,    -1,   547,   528,
      -1,   266,   409,   529,    -1,   533,    -1,   560,    -1,   533,
     560,    -1,   560,   533,    -1,    -1,   270,   467,   550,   468,
      -1,    -1,   266,    77,   131,    -1,   266,    77,   116,   334,
      -1,   266,    77,   297,   334,    -1,    -1,   467,   541,   468,
      -1,   249,   191,    -1,    -1,    83,   740,   564,    -1,   564,
      -1,    76,    -1,    84,    -1,   112,    -1,   179,    -1,   190,
      -1,   366,    -1,   369,    -1,    26,    -1,   561,    -1,   541,
     471,   561,    -1,   411,   189,   552,    -1,   113,    -1,   251,
     113,    -1,   193,   114,    -1,   193,   182,    -1,   430,   537,
      -1,   430,   264,    -1,   432,   264,    -1,    -1,   467,   551,
     468,    -1,   546,   187,   540,    -1,   546,   143,   540,    -1,
      -1,   753,    -1,   251,   113,    -1,   113,    -1,   193,   182,
      -1,   193,   114,    -1,   251,   413,    -1,   249,   191,    -1,
     746,   659,   535,   559,    -1,   532,    -1,   550,   471,   532,
      -1,   554,    -1,   551,   471,   554,    -1,   746,    -1,   549,
      -1,   567,    -1,   539,    -1,   753,   456,   526,    -1,   753,
      -1,   430,   545,    -1,    -1,   565,    -1,    -1,   746,    -1,
     467,   562,   468,    -1,    -1,   559,   530,    -1,    -1,   266,
     116,   529,    -1,   753,   456,   526,    -1,   753,    -1,   753,
     469,   753,   456,   526,    -1,   753,   469,   753,    -1,   557,
      -1,   562,   471,   557,    -1,   659,    -1,   748,   750,   462,
     398,    -1,   351,   748,   750,   462,   398,    -1,    65,   467,
     682,   468,   525,    -1,   404,   467,   562,   468,   555,   525,
      -1,   404,   542,   525,    -1,   298,   211,   467,   562,   468,
     555,   525,    -1,   298,   211,   542,   525,    -1,   161,   211,
     467,   562,   468,   313,   738,   558,   566,   534,   525,    -1,
     553,    -1,   565,   471,   553,    -1,   233,   165,    -1,   233,
     284,    -1,   233,   356,    -1,    -1,   221,   738,   546,    -1,
     383,    -1,   381,    -1,   225,   383,    -1,   225,   381,    -1,
     169,   383,    -1,   169,   381,    -1,   407,    -1,    -1,    29,
      -1,    53,   111,    -1,   131,   571,   180,   146,   573,   574,
      -1,   131,   571,   573,   574,    -1,   131,   572,   180,   146,
     739,   574,    -1,   131,   572,   739,   574,    -1,   131,   575,
     740,   266,   749,   574,    -1,   131,   575,   180,   146,   740,
     266,   749,   574,    -1,   377,    -1,   344,    -1,   423,    -1,
     234,   423,    -1,   189,    -1,   161,   377,    -1,    72,    -1,
      87,    -1,   366,    -1,   384,   340,   283,    -1,   384,   340,
     123,    -1,   384,   340,   382,    -1,   384,   340,    80,    -1,
      20,   236,    -1,   140,   393,    -1,   149,    -1,   161,   104,
     434,    -1,   304,    -1,   337,    -1,   347,    -1,   749,    -1,
     573,   471,   749,    -1,    56,    -1,   325,    -1,    -1,   290,
      -1,   335,    -1,   393,    -1,   496,   409,   797,   350,   507,
     637,   798,   501,    -1,    88,   589,   738,   558,   587,   578,
     583,   592,   579,   517,   584,    -1,    88,   467,   757,   468,
     388,   583,   592,   517,   584,    -1,   164,    -1,   388,    -1,
     581,   118,   745,    -1,    -1,   591,    -1,   580,   471,   591,
      -1,   411,    -1,    -1,    35,    -1,    -1,   303,    -1,    -1,
     588,    -1,   467,   593,   468,    -1,   780,    -1,   518,    -1,
     460,    -1,   467,   580,   468,    -1,    -1,   753,   585,    -1,
     430,   264,    -1,    -1,   588,   590,    -1,    -1,    49,    -1,
      -1,    49,    -1,   264,    -1,   163,    -1,   117,   582,   745,
      -1,   256,   582,   745,    -1,    92,    -1,   176,    -1,   305,
     582,   745,    -1,   139,   582,   745,    -1,   160,   305,   562,
      -1,   160,   305,   460,    -1,   160,   251,   256,   562,    -1,
     160,   256,   562,    -1,   135,   745,    -1,   780,    -1,   745,
      -1,   367,    -1,   368,    -1,   586,    -1,   593,   471,   586,
      -1,   596,    -1,   595,    -1,   467,   596,   468,    -1,   467,
     595,   468,    -1,   598,    -1,   597,   609,    -1,   597,   608,
     629,   615,    -1,   597,   608,   614,   630,    -1,   599,   597,
      -1,   599,   597,   609,    -1,   599,   597,   608,   629,   615,
      -1,   599,   597,   608,   614,   630,    -1,   598,    -1,   595,
      -1,   343,   607,   734,   602,   637,   655,   624,   628,   691,
      -1,   343,   606,   735,   602,   637,   655,   624,   628,   691,
      -1,   636,    -1,   377,   647,    -1,   597,   403,   605,   597,
      -1,   597,   203,   605,   597,    -1,   597,   141,   605,   597,
      -1,   430,   600,    -1,   453,   600,    -1,   430,   311,   600,
      -1,   601,    -1,   600,   471,   601,    -1,   740,   751,    35,
     467,   757,   468,    -1,   205,   603,    -1,    -1,   383,   604,
     738,    -1,   381,   604,   738,    -1,   225,   383,   604,   738,
      -1,   225,   381,   604,   738,    -1,   169,   383,   604,   738,
      -1,   169,   381,   604,   738,    -1,   407,   604,   738,    -1,
     377,   738,    -1,   738,    -1,   377,    -1,    -1,    26,    -1,
     126,    -1,    -1,   126,    -1,   126,   266,   467,   709,   468,
      -1,    26,    -1,    -1,   609,    -1,    -1,   272,    53,   610,
      -1,   611,    -1,   610,   471,   611,    -1,   682,   411,   706,
     613,    -1,   682,   612,   613,    -1,    36,    -1,   120,    -1,
      -1,   452,   156,    -1,   452,   215,    -1,    -1,   616,   617,
      -1,   617,   616,    -1,   616,    -1,   617,    -1,   614,    -1,
      -1,   222,   618,    -1,   222,   618,   471,   619,    -1,   154,
     623,   620,   622,   267,    -1,   154,   623,   622,   267,    -1,
     263,   619,    -1,   263,   620,   622,    -1,   682,    -1,    26,
      -1,   682,    -1,   684,    -1,   458,   621,    -1,   459,   621,
      -1,   744,    -1,     4,    -1,   333,    -1,   334,    -1,   156,
      -1,   248,    -1,   172,    53,   625,    -1,    -1,   626,    -1,
     625,   471,   626,    -1,   682,    -1,   627,    -1,   467,   468,
      -1,   175,   682,    -1,    -1,   631,    -1,   159,   307,   267,
      -1,   629,    -1,    -1,   632,    -1,   631,   632,    -1,   633,
     634,   635,    -1,   159,   409,    -1,   159,   249,   211,   409,
      -1,   159,   353,    -1,   159,   211,   353,    -1,   261,   737,
      -1,    -1,   255,    -1,   357,   230,    -1,    -1,   417,   467,
     709,   468,    -1,   636,   471,   467,   709,   468,    -1,   164,
     638,    -1,    -1,   639,    -1,   638,   471,   639,    -1,   647,
     642,    -1,   647,   642,   648,    -1,   650,   643,    -1,   216,
     650,   643,    -1,   595,   642,    -1,   216,   595,   642,    -1,
     640,    -1,   467,   640,   468,   641,    -1,   467,   640,   468,
      -1,   639,    91,   210,   639,    -1,   639,   644,   210,   639,
     646,    -1,   639,   210,   639,   646,    -1,   639,   245,   644,
     210,   639,    -1,   639,   245,   210,   639,    -1,    35,   746,
     467,   739,   468,    -1,    35,   747,    -1,   746,   467,   739,
     468,    -1,   746,    -1,   641,    -1,    -1,   641,    -1,    35,
     467,   656,   468,    -1,    35,   746,   467,   656,   468,    -1,
     746,   467,   656,   468,    -1,    -1,   165,   645,    -1,   219,
     645,    -1,   329,   645,    -1,   195,    -1,   275,    -1,    -1,
     411,   467,   739,   468,    -1,   266,   682,    -1,   738,    -1,
     738,   460,    -1,   267,   738,    -1,   267,   467,   738,   468,
      -1,   379,   742,   467,   709,   468,   649,    -1,   320,   467,
     682,   468,    -1,    -1,   687,   654,    -1,   334,   164,   467,
     652,   468,   654,    -1,   687,   653,    -1,   651,    -1,   652,
     471,   651,    -1,    35,   467,   656,   468,    -1,    -1,   453,
     273,    -1,    -1,   427,   682,    -1,    -1,   657,    -1,   656,
     471,   657,    -1,   746,   659,   658,    -1,    71,   749,    -1,
      -1,   661,   660,    -1,   351,   661,   660,    -1,   661,    34,
     465,   744,   466,    -1,   351,   661,    34,   465,   744,   466,
      -1,   661,    34,    -1,   351,   661,    34,    -1,   660,   465,
     466,    -1,   660,   465,   744,   466,    -1,    -1,   663,    -1,
     665,    -1,   667,    -1,   671,    -1,   677,    -1,   678,   680,
      -1,   678,   467,   744,   468,    -1,   665,    -1,   668,    -1,
     672,    -1,   677,    -1,   748,   664,    -1,   748,   750,   664,
      -1,   467,   709,   468,    -1,    -1,   201,    -1,   202,    -1,
     358,    -1,    48,    -1,   308,    -1,   157,   666,    -1,   130,
     294,    -1,   109,   664,    -1,   108,   664,    -1,   259,   664,
      -1,    51,    -1,   467,   744,   468,    -1,    -1,   669,    -1,
     670,    -1,   669,    -1,   670,    -1,    50,   676,   467,   709,
     468,    -1,    50,   676,    -1,   673,    -1,   674,    -1,   673,
      -1,   674,    -1,   675,   467,   744,   468,    -1,   675,    -1,
      63,   676,    -1,    62,   676,    -1,   418,    -1,   244,    63,
     676,    -1,   244,    62,   676,    -1,   246,   676,    -1,   420,
      -1,    -1,   387,   467,   744,   468,   679,    -1,   387,   679,
      -1,   386,   467,   744,   468,   679,    -1,   386,   679,    -1,
     204,    -1,   453,   386,   450,    -1,   432,   386,   450,    -1,
      -1,   448,    -1,   240,    -1,   106,    -1,   178,    -1,   237,
      -1,   681,    -1,   448,   388,   240,    -1,   106,   388,   178,
      -1,   106,   388,   237,    -1,   106,   388,   681,    -1,   178,
     388,   237,    -1,   178,   388,   681,    -1,   237,   388,   681,
      -1,    -1,   341,    -1,   341,   467,   744,   468,    -1,   684,
      -1,   682,    11,   659,    -1,   682,    71,   749,    -1,   682,
      40,   386,   450,   682,    -1,   458,   682,    -1,   459,   682,
      -1,   682,   458,   682,    -1,   682,   459,   682,    -1,   682,
     460,   682,    -1,   682,   461,   682,    -1,   682,   462,   682,
      -1,   682,   463,   682,    -1,   682,   454,   682,    -1,   682,
     455,   682,    -1,   682,   456,   682,    -1,   682,    15,   682,
      -1,   682,    16,   682,    -1,   682,    17,   682,    -1,   682,
     705,   682,    -1,   705,   682,    -1,   682,   705,    -1,   682,
      32,   682,    -1,   682,   271,   682,    -1,   251,   682,    -1,
     451,   682,    -1,   682,   221,   682,    -1,   682,   221,   682,
     139,   682,    -1,   682,   451,   221,   682,    -1,   682,   451,
     221,   682,   139,   682,    -1,   682,   181,   682,    -1,   682,
     181,   682,   139,   682,    -1,   682,   451,   181,   682,    -1,
     682,   451,   181,   682,   139,   682,    -1,   682,   355,   388,
     682,    -1,   682,   355,   388,   682,   139,   682,    -1,   682,
     451,   355,   388,   682,    -1,   682,   451,   355,   388,   682,
     139,   682,    -1,   682,   207,   256,    -1,   682,   208,    -1,
     682,   207,   251,   256,    -1,   682,   251,   256,    -1,   682,
     254,    -1,   701,   277,   701,    -1,   682,   207,   395,    -1,
     682,   207,   251,   395,    -1,   682,   207,   152,    -1,   682,
     207,   251,   152,    -1,   682,   207,   405,    -1,   682,   207,
     251,   405,    -1,   682,   207,   126,   164,   682,    -1,   682,
     207,   251,   126,   164,   682,    -1,   682,   207,   261,   467,
     712,   468,    -1,   682,   207,   251,   261,   467,   712,   468,
      -1,   682,    47,   733,   683,    32,   682,    -1,   682,   451,
      47,   733,   683,    32,   682,    -1,   682,    47,   374,   683,
      32,   682,    -1,   682,   451,    47,   374,   683,    32,   682,
      -1,   682,   186,   722,    -1,   682,   451,   186,   722,    -1,
     682,   707,   702,   595,    -1,   682,   707,   702,   467,   682,
     468,    -1,   111,    -1,   684,    -1,   683,    11,   659,    -1,
     458,   683,    -1,   459,   683,    -1,   683,   458,   683,    -1,
     683,   459,   683,    -1,   683,   460,   683,    -1,   683,   461,
     683,    -1,   683,   462,   683,    -1,   683,   463,   683,    -1,
     683,   454,   683,    -1,   683,   455,   683,    -1,   683,   456,
     683,    -1,   683,    15,   683,    -1,   683,    16,   683,    -1,
     683,    17,   683,    -1,   683,   705,   683,    -1,   705,   683,
      -1,   683,   705,    -1,   683,   207,   126,   164,   683,    -1,
     683,   207,   251,   126,   164,   683,    -1,   683,   207,   261,
     467,   712,   468,    -1,   683,   207,   251,   261,   467,   712,
     468,    -1,   728,    -1,   743,    -1,   472,   732,    -1,    10,
     732,    -1,   467,   682,   468,   732,    -1,   723,    -1,   686,
      -1,   595,    -1,   595,   731,    -1,   146,   595,    -1,   742,
     467,   468,    -1,   742,   467,   710,   608,   468,    -1,   742,
     467,   419,   711,   608,   468,    -1,   742,   467,   710,   471,
     419,   711,   608,   468,    -1,   742,   467,    26,   710,   608,
     468,    -1,   742,   467,   126,   710,   608,   468,    -1,   742,
     467,   460,   468,    -1,   685,   689,   690,   694,    -1,   688,
      -1,   685,    -1,   688,    -1,    72,   159,   467,   682,   468,
      -1,    96,    -1,    99,    -1,    99,   467,   744,   468,    -1,
     100,    -1,   100,   467,   744,   468,    -1,   226,    -1,   226,
     467,   744,   468,    -1,   227,    -1,   227,   467,   744,   468,
      -1,    97,    -1,   101,    -1,   349,    -1,   410,    -1,    95,
      -1,    98,    -1,    59,   467,   682,    35,   659,   468,    -1,
     151,   467,   713,   468,    -1,   278,   467,   715,   468,    -1,
     291,   467,   717,   468,    -1,   373,   467,   718,   468,    -1,
     392,   467,   682,    35,   659,   468,    -1,   394,   467,    52,
     721,   468,    -1,   394,   467,   217,   721,   468,    -1,   394,
     467,   389,   721,   468,    -1,   394,   467,   721,   468,    -1,
     257,   467,   682,   471,   682,   468,    -1,    70,   467,   709,
     468,    -1,   431,   172,   467,   609,   468,    -1,    -1,   155,
     467,   427,   682,   468,    -1,    -1,   429,   692,    -1,    -1,
     693,    -1,   692,   471,   693,    -1,   746,    35,   695,    -1,
     276,   695,    -1,   276,   746,    -1,    -1,   467,   696,   697,
     608,   698,   468,    -1,   746,    -1,    -1,   285,    53,   709,
      -1,    -1,   306,   699,    -1,   334,   699,    -1,    -1,   700,
      -1,    47,   700,    32,   700,    -1,   400,   293,    -1,   400,
     158,    -1,    94,   333,    -1,   682,   293,    -1,   682,   158,
      -1,   333,   467,   709,   468,    -1,   333,   467,   468,    -1,
     467,   709,   471,   682,   468,    -1,    33,    -1,   360,    -1,
      26,    -1,     8,    -1,   704,    -1,   458,    -1,   459,    -1,
     460,    -1,   461,    -1,   462,    -1,   463,    -1,   454,    -1,
     455,    -1,   456,    -1,    15,    -1,    16,    -1,    17,    -1,
       8,    -1,   268,   467,   708,   468,    -1,   703,    -1,   268,
     467,   708,   468,    -1,   703,    -1,   268,   467,   708,   468,
      -1,   221,    -1,   451,   221,    -1,   181,    -1,   451,   181,
      -1,   703,    -1,   746,   469,   708,    -1,   682,    -1,   709,
     471,   682,    -1,   711,    -1,   710,   471,   711,    -1,   682,
      -1,   752,    13,   682,    -1,   752,    14,   682,    -1,   659,
      -1,   712,   471,   659,    -1,   714,   164,   682,    -1,    -1,
       3,    -1,   448,    -1,   240,    -1,   106,    -1,   178,    -1,
     237,    -1,   341,    -1,   745,    -1,   682,   716,   719,   720,
      -1,   682,   716,   719,    -1,   288,   682,    -1,   683,   186,
     683,    -1,    -1,   682,   719,   720,    -1,   682,   720,   719,
      -1,   682,   719,    -1,   682,   720,    -1,   709,    -1,    -1,
     164,   682,    -1,   159,   682,    -1,   682,   164,   709,    -1,
     164,   709,    -1,   709,    -1,   595,    -1,   467,   709,   468,
      -1,    58,   727,   724,   726,   137,    -1,   725,    -1,   724,
     725,    -1,   426,   682,   385,   682,    -1,   133,   682,    -1,
      -1,   682,    -1,    -1,   746,    -1,   746,   731,    -1,   469,
     741,    -1,   469,   460,    -1,   465,   682,   466,    -1,   465,
     730,   473,   730,   466,    -1,   682,    -1,    -1,   729,    -1,
     731,   729,    -1,    -1,   732,   729,    -1,    39,    -1,    -1,
     735,    -1,    -1,   736,    -1,   735,   471,   736,    -1,   682,
      35,   754,    -1,   682,     3,    -1,   682,    -1,   460,    -1,
     738,    -1,   737,   471,   738,    -1,   746,    -1,   746,   731,
      -1,   740,    -1,   739,   471,   740,    -1,   746,    -1,   753,
      -1,   748,    -1,   746,   731,    -1,   744,    -1,     4,    -1,
     745,    -1,     6,    -1,     7,    -1,   742,   745,    -1,   742,
     467,   710,   608,   468,   745,    -1,   662,   745,    -1,   678,
     745,   680,    -1,   678,   467,   744,   468,   745,    -1,   678,
     467,   472,   468,   472,   680,    -1,   395,    -1,   152,    -1,
     256,    -1,     9,    -1,     5,    -1,     3,    -1,   812,    -1,
     813,    -1,   746,    -1,     5,    -1,     3,    -1,   812,    -1,
     814,    -1,   746,    -1,   746,   750,    -1,   469,   741,    -1,
     750,   469,   741,    -1,   467,   739,   468,    -1,    -1,   748,
      -1,     3,    -1,   812,    -1,   813,    -1,   814,    -1,   815,
      -1,   753,    -1,     5,    -1,   295,   740,   756,    35,   757,
      -1,   467,   712,   468,    -1,    -1,   594,    -1,   492,    -1,
     576,    -1,   796,    -1,    90,   337,   746,   759,    -1,    90,
     337,   180,   251,   146,   746,   759,    -1,   759,   760,    -1,
      -1,   524,    -1,   761,    -1,   511,    -1,   807,    -1,    90,
     767,   189,   764,   765,   266,   738,   763,   467,   508,   468,
     766,   655,    -1,    90,   767,   189,   764,   180,   251,   146,
     552,   266,   738,   763,   467,   508,   468,   766,   655,    -1,
     746,    -1,   411,   762,    -1,    -1,    79,    -1,    -1,   552,
      -1,    -1,   430,   537,    -1,    -1,   404,    -1,    -1,    28,
     377,   647,   350,   337,   740,    -1,    28,   377,   180,   146,
     647,   350,   337,   740,    -1,    28,   344,   738,   350,   337,
     740,    -1,    28,   344,   180,   146,   738,   350,   337,   740,
      -1,    28,   423,   738,   350,   337,   740,    -1,    28,   423,
     180,   146,   738,   350,   337,   740,    -1,    66,    -1,   148,
     105,   745,   584,    -1,   185,   105,   745,    -1,   147,   775,
      -1,   147,   779,   773,   775,    -1,   147,   421,   775,    -1,
     147,   467,   778,   468,   775,    -1,   421,    -1,    -1,   780,
      -1,   518,    -1,    -1,   594,    -1,   492,    -1,   576,    -1,
     796,    -1,   809,    -1,     3,    -1,   812,    -1,   813,    -1,
     814,    -1,   776,    -1,   745,    -1,   781,    -1,   778,   471,
     781,    -1,    31,    -1,    30,    -1,   395,    -1,   152,    -1,
     266,    -1,   777,    -1,   782,   774,    -1,   776,    -1,   779,
      -1,   350,   784,    -1,   350,   225,   784,    -1,   350,   348,
     784,    -1,   785,    -1,   806,   164,    94,    -1,   386,   450,
     787,    -1,   337,   745,    -1,   806,   388,   788,    -1,   806,
     456,   788,    -1,   806,   388,   111,    -1,   806,   456,   111,
      -1,   780,    -1,   518,    -1,   745,    -1,     3,    -1,   678,
     745,   680,    -1,   678,   467,   744,   468,   745,    -1,   518,
      -1,   111,    -1,   225,    -1,   786,    -1,   788,   471,   786,
      -1,   224,   790,    -1,   745,    -1,   412,   793,   795,   773,
      -1,   412,   793,   795,   773,   738,    -1,   412,   793,   795,
     773,   800,    -1,   412,   467,   794,   468,    -1,   412,   467,
     794,   468,   738,   751,    -1,   779,    -1,   421,    -1,   163,
      -1,   165,    -1,     3,    -1,   165,    -1,    -1,   792,    -1,
     794,   471,   792,    -1,   163,    -1,    -1,   496,   116,   164,
     797,   799,   798,   501,    -1,   647,    -1,   647,   746,    -1,
     647,    35,   746,    -1,   427,   682,    -1,    -1,   411,   638,
      -1,    -1,   779,   773,    -1,   779,   773,   738,   751,    -1,
     323,   803,    -1,   806,    -1,    26,    -1,   802,    -1,   386,
     450,    -1,   390,   209,   220,    -1,   805,   806,    -1,   805,
     386,   450,    -1,   805,   390,   209,   220,    -1,   805,    26,
      -1,   354,    -1,   121,    -1,   746,    -1,   806,   469,   746,
      -1,    90,   568,   423,   738,   558,   766,    35,   594,   808,
      -1,    90,   271,   321,   568,   423,   738,   558,   766,    35,
     594,   808,    -1,    90,   568,   311,   423,   738,   467,   562,
     468,   766,    35,   594,   808,    -1,    90,   271,   321,   568,
     311,   423,   738,   467,   562,   468,   766,    35,   594,   808,
      -1,   430,    65,   269,    -1,   430,    57,    65,   269,    -1,
     430,   225,    65,   269,    -1,    -1,    90,   568,   377,   811,
      35,   594,   810,    -1,    90,   568,   377,   180,   251,   146,
     811,    35,   594,   810,    -1,   430,   104,    -1,   430,   249,
     104,    -1,    -1,   738,   558,   544,   536,    -1,    18,    -1,
      19,    -1,    20,    -1,    21,    -1,    22,    -1,    23,    -1,
      24,    -1,    25,    -1,    27,    -1,    28,    -1,    29,    -1,
      37,    -1,    38,    -1,    40,    -1,    41,    -1,    42,    -1,
      44,    -1,    45,    -1,    46,    -1,    53,    -1,    54,    -1,
      55,    -1,    56,    -1,    57,    -1,    60,    -1,    61,    -1,
      64,    -1,    66,    -1,    67,    -1,    68,    -1,    69,    -1,
      74,    -1,    75,    -1,    76,    -1,    77,    -1,    78,    -1,
      80,    -1,    81,    -1,    82,    -1,    84,    -1,    85,    -1,
      86,    -1,    87,    -1,    88,    -1,    89,    -1,    92,    -1,
      93,    -1,    94,    -1,   102,    -1,   103,    -1,   104,    -1,
     105,    -1,   106,    -1,   107,    -1,   110,    -1,   112,    -1,
     114,    -1,   115,    -1,   116,    -1,   117,    -1,   118,    -1,
     119,    -1,   121,    -1,   122,    -1,   123,    -1,   124,    -1,
     125,    -1,   128,    -1,   129,    -1,   130,    -1,   131,    -1,
     132,    -1,   134,    -1,   135,    -1,   136,    -1,   138,    -1,
     139,    -1,   140,    -1,   142,    -1,   143,    -1,   144,    -1,
     145,    -1,   147,    -1,   148,    -1,   149,    -1,   150,    -1,
     153,    -1,   155,    -1,   156,    -1,   158,    -1,   160,    -1,
     162,    -1,   166,    -1,   167,    -1,   168,    -1,   169,    -1,
     171,    -1,   174,    -1,   176,    -1,   177,    -1,   178,    -1,
     179,    -1,   180,    -1,   182,    -1,   183,    -1,   184,    -1,
     185,    -1,   187,    -1,   188,    -1,   189,    -1,   190,    -1,
     191,    -1,   192,    -1,   194,    -1,   197,    -1,   198,    -1,
     199,    -1,   200,    -1,   206,    -1,   209,    -1,   211,    -1,
     212,    -1,   213,    -1,   214,    -1,   215,    -1,   218,    -1,
     220,    -1,   223,    -1,   224,    -1,   225,    -1,   228,    -1,
     229,    -1,   230,    -1,   231,    -1,   232,    -1,   233,    -1,
     234,    -1,   235,    -1,   236,    -1,   237,    -1,   238,    -1,
     239,    -1,   240,    -1,   241,    -1,   242,    -1,   243,    -1,
     247,    -1,   248,    -1,   249,    -1,   252,    -1,   253,    -1,
     255,    -1,   258,    -1,   260,    -1,   261,    -1,   262,    -1,
     264,    -1,   265,    -1,   268,    -1,   269,    -1,   270,    -1,
     273,    -1,   276,    -1,   279,    -1,   280,    -1,   281,    -1,
     282,    -1,   283,    -1,   284,    -1,   285,    -1,   286,    -1,
     287,    -1,   289,    -1,   290,    -1,   292,    -1,   293,    -1,
     295,    -1,   296,    -1,   297,    -1,   299,    -1,   300,    -1,
     301,    -1,   302,    -1,   303,    -1,   304,    -1,   305,    -1,
     306,    -1,   307,    -1,   309,    -1,   310,    -1,   311,    -1,
     312,    -1,   314,    -1,   315,    -1,   316,    -1,   317,    -1,
     318,    -1,   319,    -1,   320,    -1,   321,    -1,   322,    -1,
     323,    -1,   324,    -1,   325,    -1,   327,    -1,   328,    -1,
     330,    -1,   331,    -1,   332,    -1,   334,    -1,   335,    -1,
     336,    -1,   337,    -1,   338,    -1,   339,    -1,   340,    -1,
     341,    -1,   342,    -1,   344,    -1,   345,    -1,   346,    -1,
     347,    -1,   348,    -1,   350,    -1,   352,    -1,   353,    -1,
     354,    -1,   356,    -1,   357,    -1,   359,    -1,   361,    -1,
     362,    -1,   363,    -1,   364,    -1,   365,    -1,   366,    -1,
     367,    -1,   368,    -1,   369,    -1,   370,    -1,   371,    -1,
     372,    -1,   375,    -1,   376,    -1,   378,    -1,   380,    -1,
     381,    -1,   382,    -1,   383,    -1,   384,    -1,   390,    -1,
     391,    -1,   393,    -1,   396,    -1,   397,    -1,   398,    -1,
     399,    -1,   400,    -1,   401,    -1,   402,    -1,   405,    -1,
     406,    -1,   407,    -1,   408,    -1,   409,    -1,   412,    -1,
     413,    -1,   414,    -1,   415,    -1,   416,    -1,   420,    -1,
     422,    -1,   423,    -1,   424,    -1,   425,    -1,   428,    -1,
     431,    -1,   432,    -1,   433,    -1,   434,    -1,   435,    -1,
     436,    -1,   448,    -1,   449,    -1,   450,    -1,    47,    -1,
      48,    -1,    50,    -1,    51,    -1,    62,    -1,    63,    -1,
      70,    -1,   108,    -1,   109,    -1,   146,    -1,   151,    -1,
     157,    -1,   173,    -1,   196,    -1,   201,    -1,   202,    -1,
     204,    -1,   244,    -1,   246,    -1,   250,    -1,   257,    -1,
     259,    -1,   274,    -1,   278,    -1,   291,    -1,   294,    -1,
     308,    -1,   333,    -1,   351,    -1,   358,    -1,   373,    -1,
     386,    -1,   387,    -1,   392,    -1,   394,    -1,   417,    -1,
     418,    -1,   437,    -1,   438,    -1,   439,    -1,   440,    -1,
     441,    -1,   442,    -1,   443,    -1,   444,    -1,   445,    -1,
     446,    -1,   447,    -1,    43,    -1,    49,    -1,    72,    -1,
      79,    -1,    91,    -1,    98,    -1,   163,    -1,   165,    -1,
     181,    -1,   195,    -1,   207,    -1,   208,    -1,   210,    -1,
     219,    -1,   221,    -1,   245,    -1,   254,    -1,   275,    -1,
     277,    -1,   329,    -1,   355,    -1,   379,    -1,   421,    -1,
      26,    -1,    30,    -1,    31,    -1,    32,    -1,    33,    -1,
      34,    -1,    35,    -1,    36,    -1,    39,    -1,    52,    -1,
      58,    -1,    59,    -1,    65,    -1,    71,    -1,    73,    -1,
      83,    -1,    90,    -1,    95,    -1,    96,    -1,    97,    -1,
      99,    -1,   100,    -1,   101,    -1,   111,    -1,   113,    -1,
     120,    -1,   126,    -1,   127,    -1,   133,    -1,   137,    -1,
     141,    -1,   152,    -1,   154,    -1,   159,    -1,   161,    -1,
     164,    -1,   170,    -1,   172,    -1,   175,    -1,   186,    -1,
     193,    -1,   203,    -1,   205,    -1,   216,    -1,   217,    -1,
     222,    -1,   226,    -1,   227,    -1,   251,    -1,   256,    -1,
     263,    -1,   266,    -1,   267,    -1,   271,    -1,   272,    -1,
     288,    -1,   298,    -1,   313,    -1,   326,    -1,   343,    -1,
     349,    -1,   360,    -1,   374,    -1,   377,    -1,   385,    -1,
     388,    -1,   389,    -1,   395,    -1,   403,    -1,   404,    -1,
     410,    -1,   411,    -1,   419,    -1,   426,    -1,   427,    -1,
     429,    -1,   430,    -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,   451,   451,   467,   479,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   520,     9,    18,    27,
      36,    45,    54,    63,    72,    85,    87,    93,    94,    99,
     103,   107,   118,   126,   130,   139,   148,   157,   166,   175,
     184,   192,   200,   209,   218,   227,   236,   253,   262,   271,
     280,   290,   303,   318,   327,   335,   350,   358,   368,   378,
     385,   392,   400,   407,   418,   419,   424,   428,   433,   438,
     446,   447,   452,   456,   457,     7,    13,    19,    25,     6,
      15,    25,    35,    45,    55,    65,    75,    85,    95,   106,
     117,   127,   140,   141,     8,    21,    27,    34,    40,    47,
      57,    61,    70,    79,    88,    95,    96,   101,   113,   118,
     143,   153,   163,   169,   180,   191,   206,   207,   213,   214,
     219,   220,   226,   227,   231,   232,   237,   239,   245,   246,
     250,   251,   256,     7,    14,    22,     9,    19,    32,    33,
       7,    14,    31,    51,    52,     9,    17,    29,    30,    34,
      35,    36,    41,    42,    43,    48,    52,    56,    60,    64,
      68,    72,    76,    80,    84,    88,    92,    97,   101,   105,
     112,   113,   117,   118,   119,     2,     9,    15,    21,    28,
      35,    45,    46,    47,     7,    21,    41,    42,    69,    70,
      71,    72,    73,    74,    78,    79,    84,    89,    90,    91,
      92,    93,    98,   105,   106,   107,   124,   131,   138,   148,
     158,   170,   179,   188,   207,   214,   219,   221,   223,   225,
     228,   233,   234,   238,   239,   240,   241,   246,   250,   251,
     256,   263,   268,   269,   270,   271,   272,   273,   274,   275,
     281,   282,   286,   291,   298,   305,   312,   324,   325,   326,
     327,   331,   336,   337,   338,   343,   348,   349,   350,   351,
     352,   353,   358,   381,   385,   392,   393,   397,   401,   402,
     403,   407,   411,   419,   420,   425,   426,   430,   438,   439,
     444,   445,   449,   454,   458,   462,   467,   475,   476,   480,
     481,   487,   498,   511,   525,   539,   553,   567,   590,   594,
     601,   605,   613,   618,   625,   635,   636,   637,   638,   639,
     646,   653,   654,   659,   660,     9,    19,    29,    39,    49,
      59,    73,    74,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    90,    91,    92,    93,    94,    95,
      96,   101,   102,   107,   108,   109,   114,   115,   116,     7,
       1,    30,    53,    54,    59,    63,    68,    72,    80,    81,
      85,    86,    91,    92,    96,    97,   102,   103,   104,   105,
     106,   111,   119,   123,   128,   129,   134,   138,   143,   147,
     151,   155,   159,   163,   167,   171,   175,   179,   183,   187,
     191,   195,   203,   209,   210,   211,   216,   220,    47,    48,
      52,    53,    68,    69,    76,    84,    92,   100,   108,   116,
     127,   128,   155,   169,   184,   185,   204,   208,   212,   229,
     236,   243,   253,   254,   257,   269,   280,   288,   293,   298,
     303,   308,   316,   324,   329,   334,   341,   342,   346,   347,
     348,   355,   356,   360,   361,   365,   366,   370,   374,   375,
     378,   387,   398,   399,   400,   403,   404,   405,   409,   410,
     411,   412,   416,   417,   421,   423,   439,   441,   446,   449,
     454,   455,   463,   483,   484,   486,   491,   492,   496,   497,
     500,   501,   526,   527,   531,   532,   536,   537,   541,   554,
     555,   559,   560,   564,   565,   569,   570,   574,   585,   586,
     587,   588,   592,   593,   598,   599,   600,   609,   615,   633,
     634,   638,   639,   645,   650,   658,   665,   673,   708,   733,
     737,   763,   767,   779,   792,   806,   817,   832,   838,   843,
     849,   856,   857,   865,   869,   873,   879,   886,   891,   892,
     893,   894,   898,   899,   911,   912,   917,   924,   931,   938,
     961,   974,   975,   990,  1000,  1012,  1017,  1018,  1021,  1022,
    1025,  1026,  1031,  1032,  1037,  1041,  1047,  1068,  1076,  1088,
    1093,  1100,  1105,  1111,  1116,  1125,  1127,  1130,  1134,  1135,
    1136,  1137,  1138,  1139,  1144,  1164,  1165,  1166,  1167,  1178,
    1184,  1192,  1193,  1199,  1204,  1209,  1214,  1219,  1224,  1229,
    1234,  1240,  1246,  1252,  1259,  1281,  1290,  1294,  1302,  1306,
    1314,  1326,  1347,  1351,  1357,  1361,  1374,  1382,  1392,  1394,
    1396,  1398,  1400,  1402,  1407,  1408,  1415,  1424,  1432,  1441,
    1452,  1460,  1461,  1462,  1466,  1468,  1470,  1472,  1474,  1476,
    1478,  1483,  1488,  1494,  1502,  1507,  1514,  1521,  1525,  1529,
    1565,  1566,  1568,  1576,  1591,  1593,  1595,  1597,  1599,  1601,
    1603,  1605,  1607,  1609,  1611,  1613,  1615,  1617,  1620,  1622,
    1624,  1627,  1629,  1631,  1633,  1636,  1641,  1648,  1653,  1660,
    1665,  1673,  1678,  1687,  1695,  1703,  1711,  1729,  1737,  1745,
    1753,  1761,  1769,  1785,  1793,  1801,  1809,  1817,  1825,  1833,
    1837,  1841,  1845,  1849,  1857,  1865,  1873,  1881,  1901,  1923,
    1934,  1941,  1966,  1968,  1970,  1972,  1974,  1976,  1978,  1980,
    1982,  1984,  1986,  1988,  1990,  1992,  1994,  1996,  1998,  2000,
    2002,  2004,  2008,  2012,  2016,  2030,  2031,  2032,  2044,  2059,
    2071,  2073,  2075,  2086,  2110,  2123,  2127,  2133,  2140,  2147,
    2157,  2164,  2192,  2227,  2238,  2239,  2246,  2252,  2256,  2260,
    2264,  2268,  2272,  2276,  2280,  2284,  2288,  2292,  2296,  2300,
    2304,  2308,  2312,  2314,  2318,  2327,  2332,  2339,  2354,  2361,
    2365,  2369,  2373,  2377,  2391,  2392,  2396,  2397,  2405,  2406,
    2410,  2411,  2416,  2424,  2426,  2440,  2443,  2470,  2471,  2474,
    2475,  2486,  2504,  2511,  2520,  2537,  2582,  2590,  2598,  2606,
    2614,  2635,  2636,  2637,  2640,  2641,  2642,  2645,  2646,  2649,
    2650,  2651,  2652,  2653,  2654,  2655,  2656,  2657,  2658,  2659,
    2660,  2663,  2665,  2670,  2672,  2677,  2679,  2681,  2683,  2685,
    2687,  2701,  2703,  2707,  2711,  2718,  2722,  2728,  2732,  2741,
    2752,  2753,  2757,  2761,  2768,  2769,  2770,  2771,  2772,  2773,
    2774,  2775,  2785,  2789,  2796,  2803,  2804,  2820,  2824,  2829,
    2833,  2848,  2853,  2857,  2860,  2863,  2864,  2865,  2868,  2875,
    2885,  2899,  2900,  2904,  2915,  2916,  2919,  2920,  2923,  2927,
    2934,  2938,  2942,  2950,  2961,  2962,  2966,  2967,  2971,  2972,
    2975,  2976,  2986,  2987,  2991,  2992,  2995,  3011,  3019,  3027,
    3049,  3050,  3061,  3065,  3092,  3094,  3099,  3101,  3111,  3113,
    3124,  3128,  3132,  3136,  3140,  3149,  3156,  3188,  3192,  3198,
    3206,  3218,  3222,  3226,  3232,  3233,  3249,  3250,  3251,  3254,
    3255,  3260,  3261,  3262,  3265,  3266,  3269,  3271,  3276,  3277,
    3280,  3288,  3289,  3290,  3291,  3292,  3295,  3296,     7,    18,
      19,    23,    24,    25,    26,     7,    16,    34,    41,    46,
      47,    48,    49,     8,    33,    62,    66,    67,    72,    73,
      78,    79,    83,    84,    89,    90,     7,    16,    25,    34,
      43,    52,     5,     7,    20,     9,    16,    26,    33,    44,
      45,    50,    51,    52,    57,    58,    59,    60,    61,    65,
      66,    67,    68,    73,    74,    79,    83,    91,    92,    97,
      98,    99,   105,   110,   118,   119,    10,    16,    22,    32,
      33,    41,    52,    64,    72,    80,    87,    97,    99,   105,
     109,   113,   128,   135,   136,   137,   141,   142,     7,    16,
       8,    22,    36,    48,    56,    70,    71,    72,    73,    74,
      87,    88,    93,    94,    98,    99,     7,    21,    25,    32,
      43,    44,    50,    51,     9,    19,     2,     7,    14,    24,
      25,    32,     3,     9,    15,    21,    29,    29,    31,    32,
       8,    21,    34,    52,    74,    75,    76,    77,    11,    24,
      41,    42,    43,    48,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    63,    63,    63,
      63,    63,    63,    63,    63,    63,    63,    63,    63,    63,
      63,    63,    63,    63,    63,    63,    63,    63,    63,    63,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "IDENT", "FCONST", "SCONST", "BCONST",
  "XCONST", "Op", "ICONST", "PARAM", "TYPECAST", "DOT_DOT", "COLON_EQUALS",
  "EQUALS_GREATER", "LESS_EQUALS", "GREATER_EQUALS", "NOT_EQUALS",
  "ABORT_P", "ABSOLUTE_P", "ACCESS", "ACTION", "ADD_P", "ADMIN", "AFTER",
  "AGGREGATE", "ALL", "ALSO", "ALTER", "ALWAYS", "ANALYSE", "ANALYZE",
  "AND", "ANY", "ARRAY", "AS", "ASC_P", "ASSERTION", "ASSIGNMENT",
  "ASYMMETRIC", "AT", "ATTACH", "ATTRIBUTE", "AUTHORIZATION", "BACKWARD",
  "BEFORE", "BEGIN_P", "BETWEEN", "BIGINT", "BINARY", "BIT", "BOOLEAN_P",
  "BOTH", "BY", "CACHE", "CALLED", "CASCADE", "CASCADED", "CASE", "CAST",
  "CATALOG_P", "CHAIN", "CHAR_P", "CHARACTER", "CHARACTERISTICS",
  "CHECK_P", "CHECKPOINT", "CLASS", "CLOSE", "CLUSTER", "COALESCE",
  "COLLATE", "COLLATION", "COLUMN", "COLUMNS", "COMMENT", "COMMENTS",
  "COMMIT", "COMMITTED", "CONCURRENTLY", "CONFIGURATION", "CONFLICT",
  "CONNECTION", "CONSTRAINT", "CONSTRAINTS", "CONTENT_P", "CONTINUE_P",
  "CONVERSION_P", "COPY", "COST", "CREATE_P", "CROSS", "CSV", "CUBE",
  "CURRENT_P", "CURRENT_CATALOG", "CURRENT_DATE", "CURRENT_ROLE",
  "CURRENT_SCHEMA", "CURRENT_TIME", "CURRENT_TIMESTAMP", "CURRENT_USER",
  "CURSOR", "CYCLE", "DATA_P", "DATABASE", "DAY_P", "DEALLOCATE", "DEC",
  "DECIMAL_P", "DECLARE", "DEFAULT", "DEFAULTS", "DEFERRABLE", "DEFERRED",
  "DEFINER", "DELETE_P", "DELIMITER", "DELIMITERS", "DEPENDS", "DESC_P",
  "DESCRIBE", "DETACH", "DICTIONARY", "DISABLE_P", "DISCARD", "DISTINCT",
  "DO", "DOCUMENT_P", "DOMAIN_P", "DOUBLE_P", "DROP", "EACH", "ELSE",
  "ENABLE_P", "ENCODING", "ENCRYPTED", "END_P", "ENUM_P", "ESCAPE",
  "EVENT", "EXCEPT", "EXCLUDE", "EXCLUDING", "EXCLUSIVE", "EXECUTE",
  "EXISTS", "EXPLAIN", "EXPORT_P", "EXTENSION", "EXTERNAL", "EXTRACT",
  "FALSE_P", "FAMILY", "FETCH", "FILTER", "FIRST_P", "FLOAT_P",
  "FOLLOWING", "FOR", "FORCE", "FOREIGN", "FORWARD", "FREEZE", "FROM",
  "FULL", "FUNCTION", "FUNCTIONS", "GENERATED", "GLOBAL", "GRANT",
  "GRANTED", "GROUP_P", "GROUPING", "HANDLER", "HAVING", "HEADER_P",
  "HOLD", "HOUR_P", "IDENTITY_P", "IF_P", "ILIKE", "IMMEDIATE",
  "IMMUTABLE", "IMPLICIT_P", "IMPORT_P", "IN_P", "INCLUDING", "INCREMENT",
  "INDEX", "INDEXES", "INHERIT", "INHERITS", "INITIALLY", "INLINE_P",
  "INNER_P", "INOUT", "INPUT_P", "INSENSITIVE", "INSERT", "INSTEAD",
  "INT_P", "INTEGER", "INTERSECT", "INTERVAL", "INTO", "INVOKER", "IS",
  "ISNULL", "ISOLATION", "JOIN", "KEY", "LABEL", "LANGUAGE", "LARGE_P",
  "LAST_P", "LATERAL_P", "LEADING", "LEAKPROOF", "LEFT", "LEVEL", "LIKE",
  "LIMIT", "LISTEN", "LOAD", "LOCAL", "LOCALTIME", "LOCALTIMESTAMP",
  "LOCATION", "LOCK_P", "LOCKED", "LOGGED", "MAPPING", "MATCH",
  "MATERIALIZED", "MAXVALUE", "METHOD", "MINUTE_P", "MINVALUE", "MODE",
  "MONTH_P", "MOVE", "NAME_P", "NAMES", "NATIONAL", "NATURAL", "NCHAR",
  "NEW", "NEXT", "NO", "NONE", "NOT", "NOTHING", "NOTIFY", "NOTNULL",
  "NOWAIT", "NULL_P", "NULLIF", "NULLS_P", "NUMERIC", "OBJECT_P", "OF",
  "OFF", "OFFSET", "OIDS", "OLD", "ON", "ONLY", "OPERATOR", "OPTION",
  "OPTIONS", "OR", "ORDER", "ORDINALITY", "OUT_P", "OUTER_P", "OVER",
  "OVERLAPS", "OVERLAY", "OVERRIDING", "OWNED", "OWNER", "PARALLEL",
  "PARSER", "PARTIAL", "PARTITION", "PASSING", "PASSWORD", "PLACING",
  "PLANS", "POLICY", "POSITION", "PRAGMA_P", "PRECEDING", "PRECISION",
  "PREPARE", "PREPARED", "PRESERVE", "PRIMARY", "PRIOR", "PRIVILEGES",
  "PROCEDURAL", "PROCEDURE", "PROGRAM", "PUBLICATION", "QUOTE", "RANGE",
  "READ_P", "REAL", "REASSIGN", "RECHECK", "RECURSIVE", "REF",
  "REFERENCES", "REFERENCING", "REFRESH", "REINDEX", "RELATIVE_P",
  "RELEASE", "RENAME", "REPEATABLE", "REPLACE", "REPLICA", "RESET",
  "RESTART", "RESTRICT", "RETURNING", "RETURNS", "REVOKE", "RIGHT", "ROLE",
  "ROLLBACK", "ROLLUP", "ROW", "ROWS", "RULE", "SAVEPOINT", "SCHEMA",
  "SCHEMAS", "SCROLL", "SEARCH", "SECOND_P", "SECURITY", "SELECT",
  "SEQUENCE", "SEQUENCES", "SERIALIZABLE", "SERVER", "SESSION",
  "SESSION_USER", "SET", "SETOF", "SETS", "SHARE", "SHOW", "SIMILAR",
  "SIMPLE", "SKIP", "SMALLINT", "SNAPSHOT", "SOME", "SQL_P", "STABLE",
  "STANDALONE_P", "START", "STATEMENT", "STATISTICS", "STDIN", "STDOUT",
  "STORAGE", "STRICT_P", "STRIP_P", "SUBSCRIPTION", "SUBSTRING",
  "SYMMETRIC", "SYSID", "SYSTEM_P", "TABLE", "TABLES", "TABLESAMPLE",
  "TABLESPACE", "TEMP", "TEMPLATE", "TEMPORARY", "TEXT_P", "THEN", "TIME",
  "TIMESTAMP", "TO", "TRAILING", "TRANSACTION", "TRANSFORM", "TREAT",
  "TRIGGER", "TRIM", "TRUE_P", "TRUNCATE", "TRUSTED", "TYPE_P", "TYPES_P",
  "UNBOUNDED", "UNCOMMITTED", "UNENCRYPTED", "UNION", "UNIQUE", "UNKNOWN",
  "UNLISTEN", "UNLOGGED", "UNTIL", "UPDATE", "USER", "USING", "VACUUM",
  "VALID", "VALIDATE", "VALIDATOR", "VALUE_P", "VALUES", "VARCHAR",
  "VARIADIC", "VARYING", "VERBOSE", "VERSION_P", "VIEW", "VIEWS",
  "VOLATILE", "WHEN", "WHERE", "WHITESPACE_P", "WINDOW", "WITH", "WITHIN",
  "WITHOUT", "WORK", "WRAPPER", "WRITE_P", "XML_P", "XMLATTRIBUTES",
  "XMLCONCAT", "XMLELEMENT", "XMLEXISTS", "XMLFOREST", "XMLNAMESPACES",
  "XMLPARSE", "XMLPI", "XMLROOT", "XMLSERIALIZE", "XMLTABLE", "YEAR_P",
  "YES_P", "ZONE", "NOT_LA", "NULLS_LA", "WITH_LA", "'<'", "'>'", "'='",
  "POSTFIXOP", "'+'", "'-'", "'*'", "'/'", "'%'", "'^'", "UMINUS", "'['",
  "']'", "'('", "')'", "'.'", "';'", "','", "'?'", "':'", "$accept",
  "stmtblock", "stmtmulti", "stmt", "AlterTableStmt",
  "alter_identity_column_option_list", "alter_column_default",
  "alter_identity_column_option", "alter_generic_option_list",
  "alter_table_cmd", "alter_using", "alter_generic_option_elem",
  "alter_table_cmds", "alter_generic_options", "opt_set_data",
  "DeallocateStmt", "RenameStmt", "opt_column", "InsertStmt",
  "insert_rest", "insert_target", "opt_conf_expr", "opt_with_clause",
  "insert_column_item", "set_clause", "opt_on_conflict", "index_elem",
  "returning_clause", "override_kind", "set_target_list", "opt_collate",
  "opt_class", "insert_column_list", "set_clause_list", "index_params",
  "set_target", "PragmaStmt", "CreateSeqStmt", "OptSeqOptList",
  "ExecuteStmt", "execute_param_clause", "AlterSeqStmt", "SeqOptList",
  "opt_with", "NumericOnly", "SeqOptElem", "opt_by", "SignedIconst",
  "TransactionStmt", "opt_transaction", "CreateStmt",
  "ConstraintAttributeSpec", "def_arg", "OptParenthesizedSeqOptList",
  "generic_option_arg", "key_action", "ColConstraint", "ColConstraintElem",
  "generic_option_elem", "key_update", "key_actions",
  "create_generic_options", "OnCommitOption", "reloptions",
  "opt_no_inherit", "TableConstraint", "TableLikeOption", "reloption_list",
  "ExistingIndex", "ConstraintAttr", "OptWith", "definition",
  "TableLikeOptionList", "generic_option_name", "ConstraintAttributeElem",
  "columnDef", "generic_option_list", "def_list", "index_name",
  "TableElement", "def_elem", "opt_definition", "OptTableElementList",
  "columnElem", "opt_column_list", "ColQualList", "key_delete",
  "reloption_elem", "columnList", "func_type", "ConstraintElem",
  "TableElementList", "key_match", "TableLikeClause", "OptTemp",
  "generated_when", "DropStmt", "drop_type_any_name", "drop_type_name",
  "any_name_list", "opt_drop_behavior", "drop_type_name_on_any_name",
  "UpdateStmt", "CopyStmt", "copy_from", "copy_delimiter",
  "copy_generic_opt_arg_list", "opt_using", "opt_as", "opt_program",
  "copy_options", "copy_generic_opt_arg", "copy_generic_opt_elem",
  "opt_oids", "copy_opt_list", "opt_binary", "copy_opt_item",
  "copy_generic_opt_arg_list_item", "copy_file_name",
  "copy_generic_opt_list", "SelectStmt", "select_with_parens",
  "select_no_parens", "select_clause", "simple_select", "with_clause",
  "cte_list", "common_table_expr", "into_clause", "OptTempTableName",
  "opt_table", "all_or_distinct", "distinct_clause", "opt_all_clause",
  "opt_sort_clause", "sort_clause", "sortby_list", "sortby",
  "opt_asc_desc", "opt_nulls_order", "select_limit", "opt_select_limit",
  "limit_clause", "offset_clause", "select_limit_value",
  "select_offset_value", "select_fetch_first_value", "I_or_F_const",
  "row_or_rows", "first_or_next", "group_clause", "group_by_list",
  "group_by_item", "empty_grouping_set", "having_clause",
  "for_locking_clause", "opt_for_locking_clause", "for_locking_items",
  "for_locking_item", "for_locking_strength", "locked_rels_list",
  "opt_nowait_or_skip", "values_clause", "from_clause", "from_list",
  "table_ref", "joined_table", "alias_clause", "opt_alias_clause",
  "func_alias_clause", "join_type", "join_outer", "join_qual",
  "relation_expr", "tablesample_clause", "opt_repeatable_clause",
  "func_table", "rowsfrom_item", "rowsfrom_list", "opt_col_def_list",
  "opt_ordinality", "where_clause", "TableFuncElementList",
  "TableFuncElement", "opt_collate_clause", "Typename", "opt_array_bounds",
  "SimpleTypename", "ConstTypename", "GenericType", "opt_type_modifiers",
  "Numeric", "opt_float", "Bit", "ConstBit", "BitWithLength",
  "BitWithoutLength", "Character", "ConstCharacter", "CharacterWithLength",
  "CharacterWithoutLength", "character", "opt_varying", "ConstDatetime",
  "ConstInterval", "opt_timezone", "opt_interval", "interval_second",
  "a_expr", "b_expr", "c_expr", "func_application", "func_expr",
  "func_expr_windowless", "func_expr_common_subexpr",
  "within_group_clause", "filter_clause", "window_clause",
  "window_definition_list", "window_definition", "over_clause",
  "window_specification", "opt_existing_window_name",
  "opt_partition_clause", "opt_frame_clause", "frame_extent",
  "frame_bound", "row", "sub_type", "all_Op", "MathOp", "qual_Op",
  "qual_all_Op", "subquery_Op", "any_operator", "expr_list",
  "func_arg_list", "func_arg_expr", "type_list", "extract_list",
  "extract_arg", "overlay_list", "overlay_placing", "position_list",
  "substr_list", "substr_from", "substr_for", "trim_list", "in_expr",
  "case_expr", "when_clause_list", "when_clause", "case_default",
  "case_arg", "columnref", "indirection_el", "opt_slice_bound",
  "indirection", "opt_indirection", "opt_asymmetric", "opt_target_list",
  "target_list", "target_el", "qualified_name_list", "qualified_name",
  "name_list", "name", "attr_name", "func_name", "AexprConst", "Iconst",
  "Sconst", "ColId", "ColIdOrString", "type_function_name", "any_name",
  "attrs", "opt_name_list", "param_name", "ColLabel", "ColLabelOrString",
  "PrepareStmt", "prep_type_clause", "PreparableStmt", "CreateSchemaStmt",
  "OptSchemaEltList", "schema_stmt", "IndexStmt", "access_method",
  "access_method_clause", "opt_concurrently", "opt_index_name",
  "opt_reloptions", "opt_unique", "AlterObjectSchemaStmt",
  "CheckPointStmt", "ExportStmt", "ImportStmt", "ExplainStmt",
  "opt_verbose", "explain_option_arg", "ExplainableStmt",
  "NonReservedWord", "NonReservedWord_or_Sconst", "explain_option_list",
  "analyze_keyword", "opt_boolean_or_string", "explain_option_elem",
  "explain_option_name", "VariableSetStmt", "set_rest", "generic_set",
  "var_value", "zone_value", "var_list", "LoadStmt", "file_name",
  "VacuumStmt", "vacuum_option_elem", "opt_full", "vacuum_option_list",
  "opt_freeze", "DeleteStmt", "relation_expr_opt_alias",
  "where_or_current_clause", "using_clause", "AnalyzeStmt",
  "VariableResetStmt", "generic_reset", "reset_rest", "VariableShowStmt",
  "show_or_describe", "var_name", "ViewStmt", "opt_check_option",
  "CreateAsStmt", "opt_with_data", "create_as_target",
  "unreserved_keyword", "col_name_keyword", "type_func_name_keyword",
  "reserved_keyword", 0
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,    60,    62,    61,   709,    43,    45,
      42,    47,    37,    94,   710,    91,    93,    40,    41,    46,
      59,    44,    63,    58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   474,   475,   476,   476,   477,   477,   477,   477,   477,
     477,   477,   477,   477,   477,   477,   477,   477,   477,   477,
     477,   477,   477,   477,   477,   477,   477,   477,   477,   477,
     477,   477,   477,   477,   477,   477,   477,   478,   478,   478,
     478,   478,   478,   478,   478,   479,   479,   480,   480,   481,
     481,   481,   481,   482,   482,   483,   483,   483,   483,   483,
     483,   483,   483,   483,   483,   483,   483,   483,   483,   483,
     483,   483,   483,   483,   483,   483,   483,   483,   483,   483,
     483,   483,   483,   483,   484,   484,   485,   485,   485,   485,
     486,   486,   487,   488,   488,   489,   489,   489,   489,   490,
     490,   490,   490,   490,   490,   490,   490,   490,   490,   490,
     490,   490,   491,   491,   492,   493,   493,   493,   493,   493,
     494,   494,   495,   495,   495,   496,   496,   497,   498,   498,
     499,   499,   499,   500,   500,   500,   501,   501,   502,   502,
     503,   503,   504,   504,   505,   505,   506,   506,   507,   507,
     508,   508,   509,   510,   510,   510,   511,   511,   512,   512,
     513,   513,   513,   514,   514,   515,   515,   516,   516,   517,
     517,   517,   518,   518,   518,   518,   519,   519,   519,   519,
     519,   519,   519,   519,   519,   519,   519,   519,   519,   519,
     520,   520,   521,   521,   521,   522,   522,   522,   522,   522,
     522,   523,   523,   523,   524,   524,   525,   525,   526,   526,
     526,   526,   526,   526,   527,   527,   528,   529,   529,   529,
     529,   529,   530,   530,   530,   530,   531,   531,   531,   531,
     531,   531,   531,   531,   532,   533,   534,   534,   534,   534,
     534,   535,   535,   536,   536,   536,   536,   537,   538,   538,
     539,   539,   540,   540,   540,   540,   540,   540,   540,   540,
     541,   541,   542,   543,   543,   543,   543,   544,   544,   544,
     544,   545,   546,   546,   546,   547,   548,   548,   548,   548,
     548,   548,   549,   550,   550,   551,   551,   552,   553,   553,
     553,   554,   554,   555,   555,   556,   556,   557,   558,   558,
     559,   559,   560,   561,   561,   561,   561,   562,   562,   563,
     563,   563,   564,   564,   564,   564,   564,   564,   565,   565,
     566,   566,   566,   566,   567,   568,   568,   568,   568,   568,
     568,   568,   568,   569,   569,   570,   570,   570,   570,   570,
     570,   571,   571,   571,   571,   571,   571,   571,   571,   571,
     571,   571,   571,   571,   572,   572,   572,   572,   572,   572,
     572,   573,   573,   574,   574,   574,   575,   575,   575,   576,
     577,   577,   578,   578,   579,   579,   580,   580,   581,   581,
     582,   582,   583,   583,   584,   584,   585,   585,   585,   585,
     585,   586,   587,   587,   588,   588,   589,   589,   590,   590,
     590,   590,   590,   590,   590,   590,   590,   590,   590,   590,
     590,   590,   591,   592,   592,   592,   593,   593,   594,   594,
     595,   595,   596,   596,   596,   596,   596,   596,   596,   596,
     597,   597,   598,   598,   598,   598,   598,   598,   598,   599,
     599,   599,   600,   600,   601,   602,   602,   603,   603,   603,
     603,   603,   603,   603,   603,   603,   604,   604,   605,   605,
     605,   606,   606,   607,   607,   608,   608,   609,   610,   610,
     611,   611,   612,   612,   612,   613,   613,   613,   614,   614,
     614,   614,   615,   615,   616,   616,   616,   616,   617,   617,
     618,   618,   619,   620,   620,   620,   621,   621,   622,   622,
     623,   623,   624,   624,   625,   625,   626,   626,   627,   628,
     628,   629,   629,   630,   630,   631,   631,   632,   633,   633,
     633,   633,   634,   634,   635,   635,   635,   636,   636,   637,
     637,   638,   638,   639,   639,   639,   639,   639,   639,   639,
     639,   640,   640,   640,   640,   640,   640,   641,   641,   641,
     641,   642,   642,   643,   643,   643,   643,   643,   644,   644,
     644,   644,   645,   645,   646,   646,   647,   647,   647,   647,
     648,   649,   649,   650,   650,   651,   652,   652,   653,   653,
     654,   654,   655,   655,   656,   656,   657,   658,   658,   659,
     659,   659,   659,   659,   659,   660,   660,   660,   661,   661,
     661,   661,   661,   661,   661,   662,   662,   662,   662,   663,
     663,   664,   664,   665,   665,   665,   665,   665,   665,   665,
     665,   665,   665,   665,   666,   666,   667,   667,   668,   668,
     669,   670,   671,   671,   672,   672,   673,   674,   675,   675,
     675,   675,   675,   675,   676,   676,   677,   677,   677,   677,
     678,   679,   679,   679,   680,   680,   680,   680,   680,   680,
     680,   680,   680,   680,   680,   680,   680,   680,   681,   681,
     682,   682,   682,   682,   682,   682,   682,   682,   682,   682,
     682,   682,   682,   682,   682,   682,   682,   682,   682,   682,
     682,   682,   682,   682,   682,   682,   682,   682,   682,   682,
     682,   682,   682,   682,   682,   682,   682,   682,   682,   682,
     682,   682,   682,   682,   682,   682,   682,   682,   682,   682,
     682,   682,   682,   682,   682,   682,   682,   682,   682,   682,
     682,   682,   683,   683,   683,   683,   683,   683,   683,   683,
     683,   683,   683,   683,   683,   683,   683,   683,   683,   683,
     683,   683,   683,   683,   683,   684,   684,   684,   684,   684,
     684,   684,   684,   684,   684,   685,   685,   685,   685,   685,
     685,   685,   686,   686,   687,   687,   688,   688,   688,   688,
     688,   688,   688,   688,   688,   688,   688,   688,   688,   688,
     688,   688,   688,   688,   688,   688,   688,   688,   688,   688,
     688,   688,   688,   688,   689,   689,   690,   690,   691,   691,
     692,   692,   693,   694,   694,   694,   695,   696,   696,   697,
     697,   698,   698,   698,   699,   699,   700,   700,   700,   700,
     700,   701,   701,   701,   702,   702,   702,   703,   703,   704,
     704,   704,   704,   704,   704,   704,   704,   704,   704,   704,
     704,   705,   705,   706,   706,   707,   707,   707,   707,   707,
     707,   708,   708,   709,   709,   710,   710,   711,   711,   711,
     712,   712,   713,   713,   714,   714,   714,   714,   714,   714,
     714,   714,   715,   715,   716,   717,   717,   718,   718,   718,
     718,   718,   718,   719,   720,   721,   721,   721,   722,   722,
     723,   724,   724,   725,   726,   726,   727,   727,   728,   728,
     729,   729,   729,   729,   730,   730,   731,   731,   732,   732,
     733,   733,   734,   734,   735,   735,   736,   736,   736,   736,
     737,   737,   738,   738,   739,   739,   740,   741,   742,   742,
     743,   743,   743,   743,   743,   743,   743,   743,   743,   743,
     743,   743,   743,   743,   744,   745,   746,   746,   746,   747,
     747,   748,   748,   748,   749,   749,   750,   750,   751,   751,
     752,   753,   753,   753,   753,   753,   754,   754,   755,   756,
     756,   757,   757,   757,   757,   758,   758,   759,   759,   760,
     760,   760,   760,   761,   761,   762,   763,   763,   764,   764,
     765,   765,   766,   766,   767,   767,   768,   768,   768,   768,
     768,   768,   769,   770,   771,   772,   772,   772,   772,   773,
     773,   774,   774,   774,   775,   775,   775,   775,   775,   776,
     776,   776,   776,   777,   777,   778,   778,   779,   779,   780,
     780,   780,   780,   781,   782,   782,   783,   783,   783,   784,
     784,   784,   784,   785,   785,   785,   785,   786,   786,   787,
     787,   787,   787,   787,   787,   787,   788,   788,   789,   790,
     791,   791,   791,   791,   791,   792,   792,   792,   792,   792,
     793,   793,   794,   794,   795,   795,   796,   797,   797,   797,
     798,   798,   799,   799,   800,   800,   801,   802,   802,   803,
     803,   803,   804,   804,   804,   804,   805,   805,   806,   806,
     807,   807,   807,   807,   808,   808,   808,   808,   809,   809,
     810,   810,   810,   811,   812,   812,   812,   812,   812,   812,
     812,   812,   812,   812,   812,   812,   812,   812,   812,   812,
     812,   812,   812,   812,   812,   812,   812,   812,   812,   812,
     812,   812,   812,   812,   812,   812,   812,   812,   812,   812,
     812,   812,   812,   812,   812,   812,   812,   812,   812,   812,
     812,   812,   812,   812,   812,   812,   812,   812,   812,   812,
     812,   812,   812,   812,   812,   812,   812,   812,   812,   812,
     812,   812,   812,   812,   812,   812,   812,   812,   812,   812,
     812,   812,   812,   812,   812,   812,   812,   812,   812,   812,
     812,   812,   812,   812,   812,   812,   812,   812,   812,   812,
     812,   812,   812,   812,   812,   812,   812,   812,   812,   812,
     812,   812,   812,   812,   812,   812,   812,   812,   812,   812,
     812,   812,   812,   812,   812,   812,   812,   812,   812,   812,
     812,   812,   812,   812,   812,   812,   812,   812,   812,   812,
     812,   812,   812,   812,   812,   812,   812,   812,   812,   812,
     812,   812,   812,   812,   812,   812,   812,   812,   812,   812,
     812,   812,   812,   812,   812,   812,   812,   812,   812,   812,
     812,   812,   812,   812,   812,   812,   812,   812,   812,   812,
     812,   812,   812,   812,   812,   812,   812,   812,   812,   812,
     812,   812,   812,   812,   812,   812,   812,   812,   812,   812,
     812,   812,   812,   812,   812,   812,   812,   812,   812,   812,
     812,   812,   812,   812,   812,   812,   812,   812,   812,   812,
     812,   812,   812,   812,   812,   812,   812,   812,   812,   812,
     812,   812,   812,   812,   812,   812,   812,   812,   812,   812,
     812,   812,   812,   812,   812,   812,   812,   812,   812,   812,
     812,   812,   812,   812,   812,   812,   812,   812,   812,   812,
     812,   812,   812,   812,   812,   812,   812,   812,   812,   812,
     812,   812,   812,   812,   812,   812,   812,   812,   812,   812,
     812,   812,   812,   812,   812,   812,   812,   812,   812,   813,
     813,   813,   813,   813,   813,   813,   813,   813,   813,   813,
     813,   813,   813,   813,   813,   813,   813,   813,   813,   813,
     813,   813,   813,   813,   813,   813,   813,   813,   813,   813,
     813,   813,   813,   813,   813,   813,   813,   813,   813,   813,
     813,   813,   813,   813,   813,   813,   813,   814,   814,   814,
     814,   814,   814,   814,   814,   814,   814,   814,   814,   814,
     814,   814,   814,   814,   814,   814,   814,   814,   814,   814,
     815,   815,   815,   815,   815,   815,   815,   815,   815,   815,
     815,   815,   815,   815,   815,   815,   815,   815,   815,   815,
     815,   815,   815,   815,   815,   815,   815,   815,   815,   815,
     815,   815,   815,   815,   815,   815,   815,   815,   815,   815,
     815,   815,   815,   815,   815,   815,   815,   815,   815,   815,
     815,   815,   815,   815,   815,   815,   815,   815,   815,   815,
     815,   815,   815,   815,   815,   815,   815,   815,   815,   815,
     815,   815,   815,   815,   815,   815,   815
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     0,     4,     6,     4,
       6,     4,     6,     4,     6,     1,     2,     3,     2,     1,
       3,     2,     3,     1,     3,     2,     5,     3,     6,     4,
       6,     6,     6,     5,     5,     6,     9,     4,     5,     7,
       6,     4,     8,     4,     2,     4,     3,     6,     4,     2,
       2,     2,     2,     1,     2,     0,     1,     2,     2,     2,
       1,     3,     4,     2,     0,     2,     3,     2,     3,     6,
       6,     8,     6,     8,     6,     8,     6,     8,     8,    10,
       8,    10,     1,     0,     7,     1,     4,     4,     7,     2,
       1,     3,     4,     3,     0,     1,     0,     2,     3,     5,
       8,     5,     0,     5,     5,     7,     2,     0,     1,     1,
       1,     3,     2,     0,     1,     0,     1,     3,     1,     3,
       1,     3,     2,     2,     4,     5,     5,     8,     1,     0,
       3,     9,    12,     3,     0,     4,     6,     1,     2,     1,
       1,     0,     1,     2,     2,     1,     2,     2,     1,     2,
       3,     2,     2,     2,     2,     3,     3,     3,     1,     3,
       1,     0,     1,     2,     2,     2,     2,     2,     2,     2,
       2,     1,     1,     0,     9,    12,     0,     2,     1,     1,
       1,     1,     1,     1,     3,     0,     1,     2,     1,     1,
       2,     2,     3,     1,     1,     2,     2,     1,     2,     3,
       5,     2,     5,     5,     2,     3,     1,     1,     2,     2,
       0,     4,     0,     3,     4,     4,     0,     3,     2,     0,
       3,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     3,     3,     1,     2,     2,     2,     2,     2,     2,
       0,     3,     3,     3,     0,     1,     2,     1,     2,     2,
       2,     2,     4,     1,     3,     1,     3,     1,     1,     1,
       1,     3,     1,     2,     0,     1,     0,     1,     3,     0,
       2,     0,     3,     3,     1,     5,     3,     1,     3,     1,
       4,     5,     5,     6,     3,     7,     4,    11,     1,     3,
       2,     2,     2,     0,     3,     1,     1,     2,     2,     2,
       2,     1,     0,     1,     2,     6,     4,     6,     4,     6,
       8,     1,     1,     1,     2,     1,     2,     1,     1,     1,
       3,     3,     3,     3,     2,     2,     1,     3,     1,     1,
       1,     1,     3,     1,     1,     0,     1,     1,     1,     8,
      11,     9,     1,     1,     3,     0,     1,     3,     1,     0,
       1,     0,     1,     0,     1,     3,     1,     1,     1,     3,
       0,     2,     2,     0,     2,     0,     1,     0,     1,     1,
       1,     3,     3,     1,     1,     3,     3,     3,     3,     4,
       3,     2,     1,     1,     1,     1,     1,     3,     1,     1,
       3,     3,     1,     2,     4,     4,     2,     3,     5,     5,
       1,     1,     9,     9,     1,     2,     4,     4,     4,     2,
       2,     3,     1,     3,     6,     2,     0,     3,     3,     4,
       4,     4,     4,     3,     2,     1,     1,     0,     1,     1,
       0,     1,     5,     1,     0,     1,     0,     3,     1,     3,
       4,     3,     1,     1,     0,     2,     2,     0,     2,     2,
       1,     1,     1,     0,     2,     4,     5,     4,     2,     3,
       1,     1,     1,     1,     2,     2,     1,     1,     1,     1,
       1,     1,     3,     0,     1,     3,     1,     1,     2,     2,
       0,     1,     3,     1,     0,     1,     2,     3,     2,     4,
       2,     3,     2,     0,     1,     2,     0,     4,     5,     2,
       0,     1,     3,     2,     3,     2,     3,     2,     3,     1,
       4,     3,     4,     5,     4,     5,     4,     5,     2,     4,
       1,     1,     0,     1,     4,     5,     4,     0,     2,     2,
       2,     1,     1,     0,     4,     2,     1,     2,     2,     4,
       6,     4,     0,     2,     6,     2,     1,     3,     4,     0,
       2,     0,     2,     0,     1,     3,     3,     2,     0,     2,
       3,     5,     6,     2,     3,     3,     4,     0,     1,     1,
       1,     1,     1,     2,     4,     1,     1,     1,     1,     2,
       3,     3,     0,     1,     1,     1,     1,     1,     2,     2,
       2,     2,     2,     1,     3,     0,     1,     1,     1,     1,
       5,     2,     1,     1,     1,     1,     4,     1,     2,     2,
       1,     3,     3,     2,     1,     0,     5,     2,     5,     2,
       1,     3,     3,     0,     1,     1,     1,     1,     1,     1,
       3,     3,     3,     3,     3,     3,     3,     0,     1,     4,
       1,     3,     3,     5,     2,     2,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     2,
       2,     3,     3,     2,     2,     3,     5,     4,     6,     3,
       5,     4,     6,     4,     6,     5,     7,     3,     2,     4,
       3,     2,     3,     3,     4,     3,     4,     3,     4,     5,
       6,     6,     7,     6,     7,     6,     7,     3,     4,     4,
       6,     1,     1,     3,     2,     2,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     2,
       2,     5,     6,     6,     7,     1,     1,     2,     2,     4,
       1,     1,     1,     2,     2,     3,     5,     6,     8,     6,
       6,     4,     4,     1,     1,     1,     5,     1,     1,     4,
       1,     4,     1,     4,     1,     4,     1,     1,     1,     1,
       1,     1,     6,     4,     4,     4,     4,     6,     5,     5,
       5,     4,     6,     4,     5,     0,     5,     0,     2,     0,
       1,     3,     3,     2,     2,     0,     6,     1,     0,     3,
       0,     2,     2,     0,     1,     4,     2,     2,     2,     2,
       2,     4,     3,     5,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     4,     1,     4,     1,     4,     1,     2,     1,
       2,     1,     3,     1,     3,     1,     3,     1,     3,     3,
       1,     3,     3,     0,     1,     1,     1,     1,     1,     1,
       1,     1,     4,     3,     2,     3,     0,     3,     3,     2,
       2,     1,     0,     2,     2,     3,     2,     1,     1,     3,
       5,     1,     2,     4,     2,     0,     1,     0,     1,     2,
       2,     2,     3,     5,     1,     0,     1,     2,     0,     2,
       1,     0,     1,     0,     1,     3,     3,     2,     1,     1,
       1,     3,     1,     2,     1,     3,     1,     1,     1,     2,
       1,     1,     1,     1,     1,     2,     6,     2,     3,     5,
       6,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     2,     2,     3,     3,     0,
       1,     1,     1,     1,     1,     1,     1,     1,     5,     3,
       0,     1,     1,     1,     1,     4,     7,     2,     0,     1,
       1,     1,     1,    13,    16,     1,     2,     0,     1,     0,
       1,     0,     2,     0,     1,     0,     6,     8,     6,     8,
       6,     8,     1,     4,     3,     2,     4,     3,     5,     1,
       0,     1,     1,     0,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     3,     1,     1,     1,
       1,     1,     1,     2,     1,     1,     2,     3,     3,     1,
       3,     3,     2,     3,     3,     3,     3,     1,     1,     1,
       1,     3,     5,     1,     1,     1,     1,     3,     2,     1,
       4,     5,     5,     4,     6,     1,     1,     1,     1,     1,
       1,     0,     1,     3,     1,     0,     7,     1,     2,     3,
       2,     0,     2,     0,     2,     4,     2,     1,     1,     1,
       2,     3,     2,     3,     4,     2,     1,     1,     1,     3,
       9,    11,    12,    14,     3,     4,     4,     0,     7,    10,
       2,     3,     0,     4,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1
};

/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
     126,   203,     0,  1038,  1037,   203,  1012,   203,   397,   332,
       0,  1107,     0,   203,     0,   126,     0,     0,     0,     0,
       0,     0,   203,   464,     0,  1106,   203,     0,  1081,     0,
       0,     0,     0,     0,     2,     4,     7,    15,    27,    23,
       0,    25,    13,    18,     6,    29,    14,    17,    30,    10,
      28,   431,   418,   466,   430,   125,   434,    26,    12,    22,
       5,     9,    20,    21,    19,  1020,    33,    24,    31,    16,
       8,    32,    34,     0,    35,    11,   202,   201,   195,     0,
       0,     0,     0,     0,   196,   198,   396,   126,     0,     0,
       0,     0,     0,   326,   325,  1004,   331,     0,     0,   956,
    1124,  1125,  1126,  1127,  1128,  1129,  1130,  1131,    97,  1132,
    1133,  1134,  1135,  1136,  1137,  1138,  1139,  1140,  1141,  1142,
    1409,  1410,  1411,  1412,  1143,  1144,  1145,  1146,  1147,  1148,
    1149,  1413,  1414,  1150,  1151,  1152,  1153,  1154,  1415,  1155,
    1156,  1157,  1158,  1159,  1160,  1161,  1162,  1163,  1164,  1165,
    1166,  1167,  1168,  1169,  1170,  1171,  1172,  1173,  1174,  1175,
    1176,  1177,  1416,  1417,  1178,  1179,  1180,  1181,  1182,  1183,
    1184,  1185,  1186,  1187,  1188,  1189,  1190,  1191,  1192,  1193,
    1194,  1195,  1196,  1197,  1198,  1199,  1200,  1201,  1202,  1203,
    1204,  1205,  1418,  1206,  1207,  1208,  1209,  1419,  1210,  1211,
    1212,  1420,  1213,  1214,  1215,  1216,  1217,  1218,  1219,  1220,
    1421,  1221,  1222,  1223,  1224,  1225,  1226,  1227,  1228,  1229,
    1230,  1231,  1232,  1233,  1234,  1235,  1236,  1237,  1422,  1238,
    1239,  1240,  1241,  1423,  1424,  1425,  1242,  1243,  1244,  1245,
    1246,  1247,  1248,  1249,  1250,  1251,  1252,  1253,  1254,  1255,
    1256,  1257,  1258,  1259,  1260,  1261,  1262,  1263,  1264,  1265,
    1266,  1267,  1268,  1269,  1426,  1427,  1270,  1271,  1272,  1428,
    1273,  1274,  1275,  1429,  1276,  1430,  1277,  1278,  1279,  1280,
    1281,  1282,  1283,  1284,  1285,  1431,  1286,  1432,  1287,  1288,
    1289,  1290,  1291,  1292,  1293,  1294,  1295,  1296,  1297,  1433,
    1298,  1299,  1434,  1300,  1301,  1302,  1303,  1304,  1305,  1306,
    1307,  1308,  1309,  1310,  1311,  1435,  1312,  1313,  1314,  1315,
    1316,  1317,  1318,  1319,  1320,  1321,  1322,  1323,  1324,  1325,
    1326,  1327,  1328,  1329,  1330,  1331,  1332,  1436,  1333,  1334,
    1335,  1336,  1337,  1338,  1339,  1340,  1341,  1342,  1343,  1344,
    1345,  1346,  1347,  1437,  1348,  1349,  1350,  1351,  1352,  1438,
    1353,  1354,  1355,  1356,  1357,  1358,  1359,  1360,  1361,  1362,
    1363,  1364,  1365,  1439,  1366,  1367,  1368,  1369,  1370,  1371,
    1372,  1373,  1440,  1441,  1374,  1375,  1442,  1376,  1443,  1377,
    1378,  1379,  1380,  1381,  1382,  1383,  1384,  1385,  1386,  1387,
    1388,  1389,  1390,  1391,  1392,  1393,  1444,  1445,  1394,  1395,
    1396,  1397,  1398,  1399,  1400,  1401,  1402,  1403,  1404,  1405,
    1446,  1447,  1448,  1449,  1450,  1451,  1452,  1453,  1454,  1455,
    1456,  1406,  1407,  1408,    95,   936,   957,   958,     0,   347,
     348,     0,   356,     0,   345,     0,   366,   358,   367,   359,
     342,   360,   349,   341,     0,   368,   343,     0,     0,     0,
     199,  1300,   164,   332,   126,     0,  1025,  1026,  1024,  1015,
    1020,  1027,  1028,     0,     0,   955,  1069,  1068,   153,   980,
    1098,  1440,  1374,  1108,  1099,  1096,  1097,   200,   463,   461,
       0,   923,  1253,  1336,  1346,  1440,  1046,  1049,     0,   197,
       0,   435,   566,   932,  1080,     0,  1085,     0,  1314,   439,
     442,   969,   440,   431,     0,     0,     1,   126,     0,     0,
       0,   460,   460,     0,   460,     0,   423,   431,   426,   430,
       0,  1019,  1094,  1105,  1440,  1374,  1102,  1226,     0,     0,
    1226,     0,  1226,     0,  1226,     0,   982,   983,   981,     0,
     984,   299,   330,   329,   328,   327,   332,  1226,   988,     0,
       0,     0,     0,   999,    98,    96,   354,   355,     0,   346,
     344,     0,  1226,   365,   964,   361,  1226,   365,   934,  1226,
       0,     0,   160,     0,  1017,  1029,  1457,  1458,  1459,  1460,
    1461,  1462,  1463,  1464,  1465,  1466,  1467,  1468,  1469,  1470,
    1471,  1472,  1473,  1474,  1475,  1476,  1477,  1478,  1444,  1479,
    1044,     0,  1045,  1035,  1023,  1030,  1031,  1032,   126,   395,
    1014,     0,     0,     0,     0,  1100,     0,     0,     0,   956,
     941,   943,   944,   851,   954,   918,  1410,  1411,  1412,   907,
       0,  1413,  1414,  1415,  1459,   790,   777,   786,   791,   778,
     780,   787,  1416,  1417,   731,  1193,  1418,  1419,   952,  1420,
    1423,  1424,  1425,   782,   784,  1426,  1427,     0,   953,  1429,
    1430,  1282,  1432,  1433,  1435,  1436,   788,  1438,  1439,  1440,
    1441,  1442,  1443,   951,   789,  1445,     0,     0,     0,   929,
       0,   918,   762,     0,   605,   606,   628,   629,   607,   634,
     635,   637,   608,     0,   928,   670,   805,   761,   773,     0,
       0,   760,   755,   446,   924,     0,   756,   940,   942,   908,
     938,   957,   963,   446,   922,  1047,  1052,  1048,     0,     0,
       0,     0,     0,   568,   567,   915,     0,   916,   933,  1079,
    1077,  1078,  1076,  1075,  1082,     0,  1084,  1020,   863,     0,
     441,     0,     0,     0,   421,   420,     3,     0,     0,  1087,
       0,   458,   459,     0,     0,     0,     0,     0,     0,     0,
       0,   514,   480,   481,   483,   511,   515,   523,     0,   427,
       0,   969,  1103,     0,     0,     0,   113,   113,     0,     0,
       0,     0,     0,    90,    39,    83,     0,     0,     0,     0,
     178,   191,     0,     0,     0,     0,     0,   188,     0,     0,
     171,    41,   165,   167,     0,   113,     0,    37,     0,     0,
       0,    43,     0,     0,   393,     0,     0,   985,     0,  1226,
     159,  1226,   299,     0,   299,   998,  1001,   357,   353,   351,
     350,   352,     0,   363,   364,     0,   336,     0,   965,     0,
       0,   338,     0,     0,     0,     0,   126,     0,   172,  1040,
    1041,  1039,     0,     0,  1022,   175,   192,  1034,  1043,  1033,
    1042,  1021,  1016,     0,  1013,   384,  1058,  1057,  1066,   154,
     867,     0,   865,   938,     0,   961,   616,   645,   623,   645,
     645,   612,   612,   625,   613,   614,   650,     0,   645,   612,
     617,     0,   615,   653,   653,   640,   870,   597,   598,   599,
     600,   626,   627,   601,   632,   633,   602,   667,     0,   612,
     962,   126,  1101,  1109,     0,   758,   644,   631,   906,     0,
       0,   639,   638,     0,     0,     0,     0,     0,   621,   620,
     619,   764,   873,     0,   618,     0,     0,   645,   645,   643,
     693,     0,   622,     0,     0,   886,     0,   892,     0,     0,
       0,   649,     0,   647,     0,     0,   694,   674,   675,   762,
     863,     0,   757,   763,   947,     0,     0,   667,   927,   851,
       0,   848,   849,   850,     0,     0,     0,   921,     0,   859,
       0,     0,   708,   857,     0,   711,     0,     0,     0,     0,
     845,   846,   847,   839,   840,   841,   842,   843,   844,   855,
     838,   690,     0,     0,   807,     0,   689,     0,     0,   530,
       0,   945,   909,   530,  1060,  1064,  1065,  1063,     0,  1059,
    1051,  1050,  1055,  1053,  1056,  1054,     0,   914,     0,   971,
    1480,  1481,  1482,  1483,  1484,  1485,  1486,  1487,  1488,  1489,
    1490,  1491,  1492,  1493,  1494,  1495,  1496,  1497,  1498,  1499,
    1500,  1501,  1502,  1503,  1504,  1505,  1506,  1507,  1508,  1509,
    1510,  1511,  1512,  1513,  1514,  1515,  1516,  1517,  1518,  1519,
    1520,  1521,  1522,  1523,  1524,  1525,  1526,  1527,  1528,  1529,
    1530,  1531,  1532,  1533,  1534,  1535,  1536,  1537,  1538,  1539,
    1540,  1541,  1542,  1543,  1544,  1545,  1546,  1547,  1548,  1549,
    1550,  1551,  1552,  1553,  1554,  1555,  1556,   911,   910,   937,
     972,   973,   974,   975,   917,  1073,     0,  1070,   527,     0,
     443,     0,     0,  1093,     0,   120,     0,  1088,     0,   438,
     437,   467,   468,   474,   436,   500,   501,     0,     0,     0,
       0,   520,   518,   491,   484,   490,     0,     0,   488,     0,
     492,   670,   513,   425,   478,   479,   482,   424,     0,   516,
       0,   526,   514,   483,     0,  1095,  1104,     0,     0,     0,
       0,     0,  1226,     0,     0,    74,    55,   251,     0,   112,
       0,     0,     0,     0,     0,     0,     0,    82,    79,    80,
      81,     0,     0,     0,     0,   176,   177,   190,     0,   181,
     182,   179,   183,   184,     0,     0,   169,   170,     0,     0,
       0,     0,   168,     0,     0,     0,     0,     0,     0,     0,
       0,   383,   307,     0,   297,     0,     0,     0,     0,     0,
     332,   991,   989,   987,   990,   992,     0,     0,   156,   158,
       0,   296,   270,     0,  1003,  1226,  1000,   287,     0,   365,
     362,   966,     0,   365,   935,     0,   365,   163,  1226,   299,
       0,  1018,  1036,   173,   193,   174,   194,   416,     0,   390,
     398,   403,   381,     0,   381,     0,   400,   404,   381,   399,
     381,   394,     0,   155,     0,     0,     0,   597,   593,   589,
     656,   657,   658,   655,   668,   654,     0,   603,   659,   979,
       0,   609,   612,   978,     0,   919,     0,     0,   905,   901,
       0,     0,     0,     0,     0,     0,   874,   877,   878,   879,
     876,   880,   875,     0,     0,   881,     0,     0,     0,   642,
     641,     0,   837,   848,   849,   850,   845,   846,   847,   839,
     840,   841,   842,   843,   844,   861,     0,     0,     0,     0,
       0,     0,     0,     0,   732,     0,     0,   832,     0,   863,
     891,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   863,   897,     0,   918,     0,     0,     0,     0,   948,
     671,   685,   686,   687,   691,   977,   976,   926,     0,   920,
       0,     0,   672,   699,     0,   898,   727,     0,   715,     0,
     707,     0,   713,   717,   695,   710,     0,   692,     0,   921,
     860,     0,   858,     0,   682,   683,   684,   676,   677,   678,
     679,   680,   681,   688,   836,   834,   835,     0,     0,     0,
     815,     0,     0,   712,  1219,  1253,     0,   457,   457,   457,
     445,   455,   925,     0,   583,     0,     0,     0,     0,   765,
     466,   583,     0,   667,   569,   912,   915,   969,  1083,  1071,
    1072,   864,   968,   126,     0,  1091,     0,     0,     0,   132,
     115,     0,  1089,     0,   148,   530,     0,   918,     0,   472,
     473,     0,   477,  1436,  1333,     0,     0,     0,     0,   493,
     521,     0,   512,     0,   941,   494,   940,   495,   498,   499,
     489,   522,   930,   524,     0,   517,   429,   428,   528,     0,
      40,     0,  1226,    57,     0,     0,     0,     0,     0,     0,
     206,   242,   206,    94,  1226,   365,  1226,   365,  1128,  1194,
    1347,     0,    53,    86,     0,   275,   106,     0,   260,   304,
      76,    91,    99,     0,     0,    42,   166,   180,   185,   102,
     189,   186,  1008,   187,   113,     0,    38,     0,   100,     0,
    1006,     0,     0,    44,   104,  1010,   382,     0,   298,     0,
     392,   372,   373,   383,     0,   299,   988,     0,     0,     0,
       0,     0,   290,   288,   318,     0,   295,   289,   297,     0,
       0,   246,     0,  1122,     0,     0,     0,     0,   335,   967,
     337,     0,   339,     0,     0,   385,     0,   388,     0,   387,
     391,   386,   380,     0,   411,     0,     0,     0,     0,     0,
       0,  1067,   866,   868,   869,   594,   590,     0,     0,     0,
       0,     0,     0,     0,     0,   871,   610,   462,     0,     0,
       0,   902,     0,     0,   803,     0,   779,   781,   611,   793,
       0,   624,   783,   785,     0,   852,     0,     0,     0,   794,
     734,   735,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   750,
     749,   795,   831,     0,     0,   889,   890,   796,   652,   651,
     653,   653,     0,     0,   896,     0,     0,     0,   801,   759,
     864,   636,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   716,   709,     0,   714,   718,     0,     0,     0,   703,
       0,     0,   701,   728,   697,     0,     0,   729,     0,     0,
       0,   772,   457,   457,   457,   457,   454,   456,     0,     0,
       0,     0,  1333,     0,   552,   529,   531,   539,   552,   557,
     774,   581,   775,     0,   932,     0,   503,   466,   466,   466,
     771,     0,     0,   465,   503,     0,  1061,   914,     0,  1074,
       0,  1092,     0,   137,   119,   139,   138,     0,   146,     0,
     918,     0,   137,   121,     0,   140,     0,  1091,     0,   152,
     469,     0,   853,   477,     0,   471,   497,   496,     0,   487,
     519,   485,     0,   525,     0,     0,     0,   250,     0,     0,
       0,   206,     0,     0,   314,     0,   301,    75,     0,     0,
       0,    49,     0,    67,    59,    45,    73,     0,     0,    78,
       0,    71,    88,    89,    87,    92,     0,   234,   216,   247,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   414,   415,   171,   413,   308,     0,     0,
    1003,   986,     0,     0,   159,   299,     0,   274,   270,     0,
     268,   267,   269,     0,  1123,   164,     0,  1118,  1002,     0,
       0,   997,   365,     0,   417,     0,   376,   412,   401,   406,
       0,   410,   408,   407,   402,   405,     0,     0,   595,     0,
     661,   662,   663,   664,   665,   666,     0,   660,   604,   630,
       0,   904,   900,     0,   776,   872,     0,   862,   884,   883,
     733,   745,   746,   747,   885,     0,     0,     0,   742,   743,
     744,   736,   737,   738,   739,   740,   741,   748,   894,   893,
     887,   888,   648,   646,     0,   798,   799,   800,   895,   833,
     667,   949,   673,     0,     0,   700,   899,   719,     0,     0,
       0,   696,   852,     0,     0,     0,     0,     0,   705,     0,
       0,     0,   818,   813,   814,     0,     0,     0,     0,   448,
     447,   453,   552,   557,     0,     0,   431,     0,   539,     0,
     551,   537,   550,     0,     0,   563,   561,     0,   563,     0,
     563,     0,   533,     0,   553,   535,   550,     0,   573,     0,
     933,   582,     0,   510,     0,     0,     0,     0,   766,   510,
       0,   913,   444,  1090,     0,  1086,     0,     0,     0,   127,
     124,   114,     0,     0,   149,   137,   128,     0,   470,   475,
     476,   486,   931,   107,   206,     0,     0,    56,     0,   316,
     262,   294,   277,     0,     0,     0,   207,     0,   282,     0,
      48,    68,     0,    64,     0,    93,     0,     0,     0,     0,
       0,    51,    63,     0,    46,     0,   365,   365,    54,   261,
     213,  1282,     0,   839,   840,   211,   303,   208,   309,   210,
     212,   612,   209,   306,   103,  1009,     0,   101,     0,  1007,
     110,   108,   105,  1011,   395,   375,     0,     0,  1226,     0,
    1003,   157,   296,     0,   324,   246,   319,     0,  1122,  1120,
       0,  1117,     0,     0,     0,   340,     0,   389,     0,   409,
       0,   591,   596,   669,   903,   792,   802,   882,     0,     0,
       0,     0,   797,   950,   725,   723,   720,     0,   721,   704,
       0,     0,   702,   698,     0,   730,   804,     0,   820,   817,
     452,   451,   450,   449,   538,   536,   939,     0,   541,   960,
     959,   548,     0,   532,     0,   562,   558,     0,   559,     0,
       0,   560,     0,     0,   534,     0,   959,     0,   580,   466,
       0,     0,   809,   769,   770,   767,   466,   946,   809,  1062,
     136,   116,     0,   117,   147,     0,     0,     0,     0,   141,
     369,     0,   312,    58,     0,   294,     0,   206,   279,   278,
     281,   276,   280,   283,     0,     0,     0,     0,     0,   263,
       0,     0,     0,   227,     0,     0,   294,   300,   223,   224,
     333,     0,     0,     0,    60,    50,    47,    52,    61,     0,
       0,    62,    65,   588,    77,    70,   612,   612,     0,     0,
       0,   371,   378,   171,     0,     0,     0,     0,   296,     0,
       0,     0,  1122,     0,     0,   204,     0,   243,     0,   161,
    1121,     0,  1110,     0,   995,   996,     0,     0,   377,   592,
     751,     0,     0,     0,   722,   726,   724,   706,   806,     0,
     466,   576,     0,   579,   540,     0,     0,   542,     0,     0,
     544,   546,     0,     0,     0,     0,   584,     0,     0,     0,
     936,     0,     0,   502,   504,   507,   506,   509,     0,   433,
       0,   432,     0,     0,     0,   150,     0,   143,   143,     0,
     129,   854,     0,   206,     0,   293,   313,   241,     0,     0,
     225,     0,   231,     0,   265,   266,   264,   226,   294,   299,
     228,   334,     0,    69,     0,    85,   612,     0,   305,   111,
     109,   395,     0,  1003,  1117,     0,     0,   270,   164,  1119,
     259,   252,   253,   254,   255,   256,   257,   258,   273,   272,
     244,   245,     0,     0,     0,   997,     0,   752,     0,   753,
       0,   823,   581,     0,     0,   575,     0,   549,   565,     0,
     545,   543,     0,   554,     0,   588,     0,   556,   766,   508,
       0,   808,   810,     0,   768,     0,   123,     0,   583,     0,
       0,   145,   145,   131,     0,   299,   315,     0,   285,   292,
     284,     0,     0,   222,     0,   229,   323,   215,   587,     0,
      72,     0,   310,   370,   374,     0,  1111,     0,  1117,   246,
    1122,     0,  1114,     0,     0,  1003,   754,   819,     0,     0,
       0,   574,   577,     0,   547,     0,     0,   585,   586,   555,
     505,     0,     0,   118,   143,   122,   151,   142,   474,   144,
     474,     0,   323,   271,     0,     0,   249,   215,     0,   240,
       0,    66,    84,   311,     0,   296,  1112,   205,   162,  1115,
    1116,     0,   583,  1409,  1171,  1381,     0,   821,   824,   822,
     816,     0,   564,   572,   811,   812,   145,   477,   477,   583,
     240,   286,   291,     0,   230,   232,   320,   321,   322,     0,
     236,   233,   237,     0,  1117,     0,   993,     0,   828,   827,
     826,   830,   829,   578,     0,   570,   474,   134,   133,   130,
     206,   248,     0,     0,     0,   238,     0,   239,   214,  1113,
    1003,     0,     0,   477,   317,   219,     0,   218,     0,   302,
     235,   583,   825,     0,   135,   217,   221,   220,   994,   571
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    33,    34,    35,    36,  1833,  1834,  1835,  1541,   793,
    2460,  1542,   794,   795,  1837,    37,    38,  1191,   466,  1479,
    1134,  2217,    40,  1788,  1484,  1792,  2345,  2035,  1787,  1794,
    2441,  2498,  1789,  1485,  2346,  1486,    41,    42,  1248,    43,
     582,    44,  1249,  1218,   876,   813,  1208,   865,    45,    78,
      46,  1824,  2096,  2511,  1847,  2589,  2247,  2248,  1543,  2550,
    2551,  1826,  1884,  1200,  2544,  1592,  2398,  1547,  1530,  2249,
    1601,  2355,  2124,  1544,  2066,  1593,  2234,  2447,  1256,  1594,
    2448,  2227,  1595,  1232,  1252,  2068,  2552,  1548,  1233,  2097,
    1187,  1596,  2509,  1597,    97,  2252,    47,   457,   458,   573,
     846,   459,   467,    49,  1583,  2273,  1895,  2274,  1623,  1577,
     874,  1620,  1277,  1236,   875,    88,  1291,  1896,  1865,  1278,
     468,   692,    52,    53,    54,   515,   509,   510,  1019,  1450,
    1748,   763,   490,   491,   525,  1773,  1141,  1142,  1492,  1805,
    1166,  1167,   772,   773,  1154,  1158,  1159,  1505,  1498,  1147,
    2023,  2333,  2334,  2335,  2202,  1162,  1163,   775,   776,   777,
    1171,  1515,    56,  1454,  1755,  1756,  1757,  2000,  2001,  2015,
    2011,  2186,  2320,  1758,  2194,  2565,  1759,  2311,  2312,  2415,
    2018,  1766,  2325,  2326,  2375,   906,  1299,   907,   693,   908,
    1311,   694,   944,   910,   695,   696,   697,   913,   698,   699,
     700,   701,   927,   702,   703,   961,  1307,  1308,   748,  1363,
     705,   706,   707,  1761,   708,  1014,  1440,  2339,  2431,  2432,
    1741,  1983,  2168,  2310,  2480,  2527,  2528,   709,  1437,  1009,
    1010,   710,  2099,  1012,  1356,  1382,   881,   882,   918,  1333,
    1334,  1359,  1668,  1366,  1371,  1695,  1696,  1383,  1406,   711,
    1318,  1319,  1652,   929,   712,   737,  1038,   973,   925,  1401,
     723,   713,   714,  1511,   502,  2316,   578,  1118,   715,   716,
     717,   718,   719,  2181,   720,  2499,   848,   753,   884,  1545,
    1397,    57,   624,   549,    58,   827,  1243,    59,  2295,  2134,
     836,  1258,  1605,    98,    60,    61,    62,    63,    64,   532,
     868,   469,   869,   870,   611,    65,   877,   613,   614,    66,
     496,   497,   878,  1030,   879,    67,   477,    68,   744,   506,
     745,   747,   471,   760,  1783,  1475,    70,    71,   484,   485,
      72,    73,   498,    74,  2292,   472,  1887,   833,   436,   437,
     722,  1123
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -2188
static const int yypact[] =
{
    3472,   292,   798, -2188, -2188,   292, -2188,   292,    54,  1816,
   29818, -2188,  4714,   292, 34298,   970,   216,   312,   483, 34298,
   34298, 30266,   292,   224, 34746, -2188,   292, 30714,   -24,   -21,
   35194, 34298,   781,   527,   174, -2188, -2188, -2188, -2188, -2188,
      85, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188,
   -2188,   140, -2188,   576,   175,   453,    64, -2188, -2188, -2188,
   -2188, -2188, -2188, -2188, -2188,   160, -2188, -2188, -2188, -2188,
   -2188, -2188, -2188, 31162, -2188, -2188, -2188, -2188, -2188, 35642,
   34298, 36090, 31610, 36538, -2188, -2188, -2188,   781, 34298,   638,
     774,   279, 36986, -2188, -2188, -2188, -2188,   626,   443, -2188,
   -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188,
   -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188,
   -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188,
   -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188,
   -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188,
   -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188,
   -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188,
   -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188,
   -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188,
   -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188,
   -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188,
   -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188,
   -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188,
   -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188,
   -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188,
   -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188,
   -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188,
   -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188,
   -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188,
   -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188,
   -2188, -2188, -2188, 32058, -2188, -2188, -2188, -2188, -2188, -2188,
   -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188,
   -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188,
   -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188,
   -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188,
   -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188,
   -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188,
   -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188,
   -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188,
   -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188,
   -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188,
   -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188,
   -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188,
   -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188,   501, -2188,
   -2188,   314, -2188,    77, -2188,   363, -2188, -2188, -2188, -2188,
   -2188, -2188, -2188, -2188,   459, -2188, -2188, 37434, 37882, 38330,
   -2188, -2188,   345,   159,   972, 17825, -2188, -2188, -2188, -2188,
     160, -2188, -2188,   483,   483, -2188, -2188, -2188,    53,   350,
   -2188,   391,   643, -2188, -2188, -2188,   411, -2188, -2188,   629,
    7627,  7627, 38778,   483, 38778,   492, -2188, -2188,    30, -2188,
   19177, -2188,   448,  -147, -2188,   237,   795,  9977, 34298,   475,
   -2188,   516,   475,   522,   534,   453, -2188,  3472,   889,   852,
   30714,   269,   269,  1011,   269,    95,   706, -2188,  1390, -2188,
     655, -2188, 34298, -2188,   684,   929,   411,   999,   690,   834,
    1003, 24847,  1020,   916,  1038,   919, -2188, -2188, -2188,   722,
   -2188,   741, -2188, -2188, -2188, -2188,   159,   967, -2188,   779,
   39226, 39674, 34298,  1134, -2188, -2188, -2188, -2188,   792, -2188,
   -2188,   115,  1090,    34,   776, -2188,  1103,    52, -2188,  1106,
     990,  9977, -2188,   894, -2188, -2188, -2188, -2188, -2188, -2188,
   -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188,
   -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188,   -21, -2188,
   -2188,   265, -2188, -2188, 23806, -2188, -2188, -2188,   972,   817,
   -2188, 23806,  9977, 43706,  1253, -2188,  1074, 34298,   833,    86,
   -2188, -2188, -2188, -2188, -2188, -2188,  1299,   106,  1305,  9977,
     861,   106,   106,   872,  1157, -2188, -2188, -2188,   117,   886,
     903, -2188,   102,   102, -2188,  1084,   921,   945, -2188,   105,
    1413,  1429,   112,  1005,  1021,   273,   106,  9977, -2188,  1027,
     102,  1029,  1030,  1037,  1446,  1041, -2188,  1452,  1046,   101,
     154,  1047,  1049, -2188, -2188,   130,  9977,  9977,  9977, -2188,
    6687, -2188,  -147,   483, -2188, -2188, -2188, -2188, -2188, -2188,
   -2188,  1050, -2188,   144,  3959, -2188,  1089, -2188, -2188,  1248,
    9977, -2188, -2188,    -8, -2188,   146, -2188, -2188, -2188,  -147,
   -2188,   142, -2188,  1321,  1058, -2188, -2188, -2188,   164,  1434,
   22910, 23358, 34298, -2188, -2188,  9977, 22014, -2188,  -147, -2188,
   -2188, -2188, -2188, -2188, -2188,   405, -2188,   160, 24857,   421,
     475, 34298, 34298,  1495, -2188, -2188, -2188, 30714, 34298, 40122,
    1182, -2188, -2188,   453,   453,  9977,   453,   145,    -1,  8097,
   10447,  1374,  1271,   531,    97,  1378, -2188,  1281,    95,   706,
    9977,   516, -2188,  1325, 34298, 28474,   808,   857,  1083,  1164,
    1094,   213,  1479, -2188,  1093, -2188,  1175, 34298, 44140,   167,
   -2188,  1514,   167,   167,   441,  1515,  1183,   182,  1334,   468,
    -110,  1093,  1711, -2188, 30714,   120,   472,  1093, 34298,  1189,
     478,  1093,  1194, 34298,  1156,   -69,  1441,  1501, 34298,  1344,
    1711,  1348,  1133,  1571,   741, -2188, 40570, -2188, -2188, -2188,
   -2188, -2188, 34298, -2188, -2188, 34298, -2188, 25786,  1142, 34298,
   34298, -2188, 34298, 34298,   436, 41018,   972, 27578, -2188, -2188,
   -2188, -2188,   702,   711, -2188, -2188, -2188, -2188, -2188, -2188,
   -2188, -2188, -2188, 25786, -2188,  2547, -2188, -2188, -2188,  1137,
   24857,   486, -2188,  1016,  1096, -2188, -2188,  1193, -2188,  1193,
    1193,  1148,  1148,  1152, -2188, -2188, -2188,   273,  1193,  1148,
   -2188, 44140, -2188,   458,   462, -2188, -2188,  1586, -2188, -2188,
   -2188, -2188, -2188, -2188, -2188, -2188, -2188,   777,   496,   755,
   -2188,   781, -2188, -2188,  9977,  -147, -2188,  1154, 24857,  1196,
    9977, -2188, -2188,  9977,  1159,  1614,  1614,  9977, -2188, -2188,
   -2188, -2188,   866,  1614, -2188,  1614,  1614,  1193,  1193, -2188,
    4265,  9977, -2188, 20979,  9977, 12797,  8567,  9977,  1243,  1244,
    1614, -2188,  1614, -2188,  9977,  7157,  4265,  1616,  1616,  1858,
    4316,  1162,  -147,  -147, -2188,  1614,    76,   126, -2188,   111,
   43706,  9977,  9977,  9977,  9977, 25338,  1249,   121, 34298,  9977,
    1169,  1462, -2188,  9977,  1386, -2188,  1176,  9977,  1256,   110,
    9977,  9977,  9977,  9977,  9977,  9977,  9977,  9977,  9977, -2188,
   -2188, 14666,   151,  1475,  1494,   -75,   189, 32506,  7627,  1486,
    5747, -2188,   137,  1486, -2188, -2188, -2188, -2188,   148, -2188,
   -2188, -2188, -2188,  1137, -2188,  1137,  1186, 21565,  1178, -2188,
   -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188,
   -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188,
   -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188,
   -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188,
   -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188,
   -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188,
   -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188,
   -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188,
   -2188, -2188, -2188, -2188, -2188, 34298,   237, 29370, -2188,  9977,
   -2188,   513,  1188,  1246,  1294,  1623, 34298, -2188, 19627,  1456,
   -2188,  1190, -2188, 24251,  1456, -2188, -2188, 13256,  1307,  1453,
    1398, -2188, -2188, -2188,  1197, 24857, 10917, 10917, -2188,   844,
   24857,   897, -2188, -2188, -2188, -2188, -2188, -2188,   381, -2188,
   34298,   -11,  1374,    97,   523, -2188, -2188,  1092,  1200, 41466,
   34298,  1458,  1419,  1461,  -106, -2188, -2188, -2188, 43706, -2188,
   34298, 34298, 41914, 42362, 26234, 34298, 25786, -2188, -2188, -2188,
   -2188, 34298,   877, 34298, 44556, -2188, -2188, -2188,   167, -2188,
   -2188, -2188, -2188, -2188, 34298, 34298, -2188, -2188,   167, 34298,
   34298,   167, -2188,  1139, 34298, 34298, 34298, 34298,  1364, 34298,
   34298,  1372, -2188,   547, -2188,  1412,    26,  1254, 34298, 34298,
    1865, -2188, -2188, -2188, -2188, -2188,  1213,  1536, -2188,  1711,
    1539, 28922,   913,   820,  1260,  1443, -2188, -2188,  1431,    34,
   -2188, -2188, 25786,    52, -2188,  1433,   155, -2188,  1449,   741,
    1671, -2188, -2188, -2188, -2188, -2188, -2188, -2188,   577, 17375,
   -2188, -2188,  1672,   483,  1672,   607, -2188, -2188,  1672, -2188,
    1672, -2188, 23806, -2188,  9977,  9977,  9977,  1676,  1250,  1251,
    1329,  1332,  1333, -2188,  1258,  1338,  1614, -2188, -2188, -2188,
   43706, -2188,   934, -2188,   590, -2188,  9977,  9977,    12, -2188,
   24322,   602,  9977,  1259,  1261,   648, -2188, -2188, -2188, -2188,
   -2188, -2188, -2188,  1263,  1568, -2188,  1266,  1267,  1269, -2188,
   -2188,  3840, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188,
   -2188, -2188, -2188, -2188, -2188, -2188,  1274,  1276, 24364,  1282,
   12797, 12797,  6687,  3209, -2188, 12797,  1284, -2188,   691, 24269,
    1286,  1287,  1308,  1309,  1292,  1295, 24593,  9037,  9977,  9037,
    9037, 24820,  1286,  1306, -2188,  9977,  1311,  1312,  1314, -2188,
   -2188,  3261,  3261,  3261,  4265, -2188, -2188, -2188,  1327, -2188,
   12797, 12797, -2188,  1373,  6687, -2188, -2188,  1611, -2188,   508,
   -2188,  1316, -2188, -2188,  2277, -2188, 20979, 24891,  9977,   122,
    9977,  1169,  9977,  1396,  3261,  3261,  3261,   212,   212,   176,
     176,   176,   268,   189, -2188, -2188, -2188,  1322,  1323,  1324,
    1516,  1041,  9977, -2188,  1043,  1057, 34298,  2377,  2593,  2830,
   -2188, -2188, -2188, 16025,  1367,  9977,  9977,  9977,  1328, -2188,
     -41,  1367,  1614,   126, -2188, -2188,  9977,   516, -2188, -2188,
   -2188, 24857, -2188,   781, 16025,  1368,  1381,   321, 18276,  1533,
   -2188, 34298, -2188, 34298, -2188,    16,  1347, -2188,  9977, -2188,
   -2188,  1756,  1353,  1540,  1546,   764,   764,   844,  1548, -2188,
   -2188,  1391, -2188,  9977,  1127, -2188,  1132, -2188, -2188, -2188,
   -2188,  1346, -2188, -2188,  1590, -2188, -2188, -2188, -2188,  1439,
    1093,  9977,  1570, -2188,    74,  1355,  1683,   400,  1648, 34298,
   -2188,  1569, -2188,   728,  1692,   155,  1694,   155, 25786, 25786,
   25786,   697, -2188, -2188,   483, -2188, -2188,   735, -2188,  -140,
   -2188, -2188, -2188,  1454,   549,  1093,  1711, -2188, -2188, -2188,
   -2188, -2188, -2188, -2188,   199,   564,  1093,  1465, -2188,  1466,
   -2188,  1468,   656,  1093, -2188, -2188, -2188,    93, -2188, 34298,
   -2188, -2188, -2188,  1372, 34298,   741, -2188,   810, 34298, 34298,
   34298, 34298, -2188, -2188, -2188,  1393,  1370, -2188, 43706,   -57,
    1595,  1598, 34298,  1435,  1094,  1831,  1722, 34298, -2188, -2188,
   -2188, 34298, -2188,  1724,   781, -2188, 25786, -2188, 27130, -2188,
   -2188, -2188, -2188,   483, -2188,   483,  1618, 34298, 22462,   483,
     483, -2188, -2188, 24857, 24857,  1407,  1251,  1614,    92,    78,
      88,  1534,  1614,  1636,  1409, -2188, -2188, -2188,   772, 24838,
    9977, -2188,  1744, 43706, -2188,  4575, -2188, -2188, -2188, -2188,
    9977, -2188, -2188, -2188,  9977, -2188, 20979,  9977,  1720, -2188,
    1874,  1874,  4316, 43706, 12797, 12797, 12797, 12797,   658,  1029,
   12797, 12797, 12797, 12797, 12797, 12797, 12797, 12797, 12797, 13726,
     203, -2188, -2188,  9977,  9977,  1728,  1720, -2188, -2188, -2188,
    -100,  -100, 43706,  1424,  1286,  1427,  1430,  9977, -2188,  -147,
    4834, -2188,  1425,   483,  9977,  3168,  3493,  9977,   783,  9977,
    1736, -2188, -2188,  1436, -2188, -2188, 43706,  9977,  1437,  2658,
   12797, 12797,  2701, -2188,  2920,  9977,  6687, -2188,  1630,  1477,
   20077, -2188,  1530,  1530,  1530,  1530, -2188, -2188, 34298, 34298,
   34298, 16475,  1745, 15574, 32954,  1442,   827, -2188, 32954, 33402,
   -2188,  1455, -2188,  1450,  -147,  9977,  1738,   -39,   -39,  1630,
   -2188,  9507,  1457, -2188,  1738,  1464, -2188, 24857,  1481, -2188,
    1482,  1442,  9977,  1592, -2188, -2188, -2188,  1506, -2188,   796,
   -2188,  1842,  1592, -2188,   797, -2188, 19627,  1368,  9977,  -147,
   -2188,  1463, -2188,  1353,   471, -2188, -2188, -2188,  1657, -2188,
   -2188, -2188, 34298, -2188, 34298,  5052,  1788, -2188, 34298, 34298,
   34298, -2188, 34298,   807,   787,  1484, -2188,   787,  1785,   613,
    1094,   182,  5222,   377, -2188, -2188, -2188,  1560, 34298, -2188,
   34298, -2188, -2188, -2188, -2188, -2188, 26234, -2188, -2188, -2188,
   25786, 20530, 25786, 34298, 34298, 34298, 34298, 34298, 34298, 34298,
   34298, 34298, 34298, -2188, -2188,  -110, -2188, -2188,    93,  1492,
    1260,  1501, 42810,   822,  1711,  1496,  1926, -2188,   913, 28922,
   -2188, -2188, -2188,  1888, -2188,   345,   133, -2188, -2188,   781,
   34298,  1555,   155, 34298, -2188,   828, -2188, -2188, -2188, -2188,
   34298,  1498, -2188,  1498, -2188, -2188,  1614,  1504, -2188,  1505,
   -2188, -2188, -2188, -2188, -2188, -2188,  1499, -2188, -2188, -2188,
    9977, 24857, -2188,  1511, -2188, 24857,  5101, -2188, 24857,  1728,
   -2188,  2099,  2099,  2099,  1687,  1809,   152,  1513,  2099,  2099,
    2099,   194,   194,    83,    83,    83,  1874,   203, 24857, 24857,
   -2188, -2188, -2188, -2188,  1520, -2188, -2188, -2188,  1286, -2188,
     126, -2188,   326,  9977,  9977,  3857, -2188,  5180,  9977, 43706,
     830,  3857,   254,  9977,  3883,  4001,  9977,  9977,  3223, 21435,
    1527,  9977, 43258, -2188, -2188, 34298, 34298, 34298, 34298, -2188,
   -2188, -2188, 32954, 33402,  -147,  1517, 15123,   827,  1528, 33850,
   -2188, -2188,  1531, 16025,  1771,  1725, -2188, 16025,  1725,   548,
    1725,  1791,  1627, 18727, -2188, -2188,  1535,  1735, -2188,  5747,
     674, 24857,  1957,  1836,  1545,  1547,  1550,  9977,   483,  1836,
     483, -2188, -2188, 24857,  7627, -2188,   781,  1666, 34298,  -147,
     -64, -2188,  1558, 34298, -2188,  1592, 24857, 20979, -2188, -2188,
   -2188, -2188, -2188, -2188, -2188, 34298,   849, -2188,   864,   787,
   -2188,  1589, -2188,   162,  1829,    45, -2188, 25786,  1285,   285,
   -2188,  1841,  1769, -2188,   167, -2188,  9977,   285,  1770,   211,
   34298, -2188, -2188,  2240, -2188, 43706,   155,   155, -2188, -2188,
   -2188,  1463, 44140,   702,   711, -2188, -2188, -2188, -2188, -2188,
   -2188,   755, -2188,  1574, -2188, -2188,  1639, -2188,  1643, -2188,
   -2188, -2188, -2188, -2188,   817,    46, 34298,  1997,  1789,  1577,
    1260, -2188, 28922,  1179,   170,  1598, -2188,   217,  1435, -2188,
    1932,  1617,  1780, 34298,  1581, -2188,  2014, -2188, 27130,  1498,
    1585, -2188, -2188, -2188, 24857, -2188, -2188, -2188, 12797,  1892,
    1591, 43706, -2188, -2188,  3857,  3857,  5180,   883, -2188,  3857,
    9977,  9977,  3857,  3857,  9977, -2188, -2188, 21453,  1767, -2188,
   -2188, -2188, -2188, -2188, -2188, -2188,  -147, 26682, 32954, -2188,
    1593, -2188, 34298,   827, 16025, -2188, -2188,  1797, -2188, 16025,
    1847, -2188, 16025, 28026, -2188, 34298,  1597, 34298, -2188,   -41,
   11387,  9977,  1637, -2188, -2188, -2188,  1630, -2188,  1637, -2188,
    1058, -2188,   321, -2188, -2188,  1976, 16925,  1940,  9977, -2188,
   -2188,  1605,   787, -2188,  1763,  1589,  1610, -2188, -2188, -2188,
   -2188, -2188, -2188, -2188,   892,  1612, 34298, 34298, 12797, -2188,
     285,   185,   132, -2188,  1870, 34298,  1589, -2188, -2188, -2188,
   -2188,  1971,  2049,  1939, -2188, -2188, 24857, -2188, -2188,  1614,
    1614, -2188, -2188,  2015, -2188, -2188,   755,   387, 20530, 34298,
   34298, -2188, -2188,  -110,  1974,   896,   781,  1943, 28922,  2059,
    1629, 34298,  1435,   325,   325, -2188,  1761, -2188,  1764, -2188,
   -2188,   339, -2188, 34298, -2188, -2188, 16925,   781, -2188, -2188,
    4228, 12797, 43706,   901, -2188,  3857,  3857,  3857, -2188,  2047,
    1630, -2188,   906,  2069, -2188, 34298,   908, -2188,  9977,  1638,
   -2188, -2188, 16025,  1797,  1641,   912, -2188, 43706, 34298,   922,
   43706,  1645,  6217,  1640, -2188, -2188, 24857, 24857, 34298, -2188,
    1649, -2188,  1693, 34298,  9977, -2188,   926,  2058,    24,   -30,
   24857, -2188, 34298, -2188, 25786, -2188,   787, -2188, 25786,  9977,
   -2188,   113,  1687,  2083, -2188, -2188, -2188, -2188,  1589,   741,
   -2188, -2188,  1941, -2188, 34298,  1721,   499,  1739, -2188, -2188,
   -2188,   817,   483,  1260,  1617, 34298,   781,   913,   345, -2188,
   -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188, -2188,
   -2188, -2188,  2073,  1871,  2074,  1555,   946,  4228,   951, -2188,
    9977,   500,  1455, 26682,  1667, -2188,   960, -2188, 24857, 34298,
   -2188, -2188,  9977, -2188, 34298,  2015,   962, -2188, -2188, -2188,
   11387,  1673, -2188,  2116, -2188,   781, -2188, 21472,  1367, 16925,
   34298, 34298, 34298, -2188,  1802,   741,   787,   964, -2188,  1698,
   -2188, 21506,  1899, -2188,  1977, -2188,  1924,  1691, -2188,  9977,
   -2188,  1773, -2188, -2188, -2188,  2124, -2188,  1695,  1617,  1598,
    1435,  1900, -2188,  1904,  1708,  1260, -2188,  1286, 11857, 11857,
    1710, -2188, -2188, 34298, -2188,   977,   978, -2188, -2188, -2188,
   -2188, 34298,  1709, -2188,  2058, -2188, -2188, -2188,   227, -2188,
     227, 19627,  1924, -2188, 25786, 20530,  1931,  1691,    56,  1915,
    1711, -2188, 24857, -2188,   781, 28922, -2188, -2188, -2188, -2188,
   -2188, 16925,  1367, 14196,  1851,    81, 24288, -2188, -2188, -2188,
   -2188,   984, -2188,  1866, -2188, -2188, 34298,  1353,  1353,  -129,
    1915, -2188, -2188,  1998, -2188, -2188, -2188, -2188, -2188,   109,
    1925, -2188,  1927,  1241,  1617,   988, -2188,  2158, -2188, -2188,
   -2188, -2188, -2188, -2188,  1727, -2188,   227, -2188, -2188, -2188,
   -2188, -2188,   150,   150,  2076, -2188,  1786, -2188, -2188, -2188,
    1260, 12327,  9977,  1353,   787, -2188,  2175, -2188,   135, -2188,
   -2188,  1367, -2188, 21524, -2188, -2188, -2188, -2188, -2188, -2188
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -2188, -2188, -2188,  1681, -2188, -2188, -2188,   367, -2188,  1000,
   -2188,   357,  -326,   676, -2188, -2188, -2188,  -728,    32, -2188,
   -2188, -2188, -2188,   184,   417, -2188,  -214, -1618,    18, -2188,
   -2107, -2187, -2188,  -273, -2100, -1419, -2188,  -800,   359, -2188,
   -1797, -2188,  -536,  -766,  -590,  -797, -2188,   157, -2188,  1166,
    -778, -1465, -2070,  -276, -2188,  -339, -2188,  -124, -1484,  -312,
    -299, -2188, -2007,  -738, -2188,  1459,   -42, -2188,   716, -2188,
   -1802, -2188, -2188,   708, -2188,  -763, -2188, -2188, -1520,   371,
    -252, -1961, -2008,   677,  -544, -2188,  -297,   408, -1445, -2188,
     731, -2188,  -239, -2188,  -451, -1850, -2188, -2188, -2188,  1423,
    -540, -2188,    38, -2188, -2188, -2188, -2188, -2188,  -357,   683,
   -1948, -2188,   654, -2188, -2188, -2188, -2188,   136,   409, -2188,
       2,    65,   -31,    19,    61,    28,    55,  1522,  1556, -2188,
    -719,   958, -2188, -2188,  -487,   -47, -2188,   793, -1862, -1767,
    -333,  1107,  1524,  1518, -2188,   784,  1151, -1024, -1038, -2188,
     515, -2188,  -135, -2188,   271,  -272,  1131, -2188,  1532, -2188,
   -2188, -2188, -2188,  -869,   836, -1627,   555, -1666, -1570,   320,
     305,  -527,    -7,    41, -2188, -2188,   569,   -92, -2188, -2188,
     -97, -1427, -1998,  -102,   -96,  -945,  1033,  -773, -2188, -2188,
    -622,  -203, -2188, -2188, -2188,  -199,   -63, -2188, -2188,   153,
     609, -2188,  -202,   623,  -594,  -633,  -932,  -314,  2776,  1101,
    -600, -1150, -2188, -2068,  -855, -2188, -2188,   124, -2188,  -157,
   -2188,  -156, -2188, -2188, -2188,  -141, -1830,  1330, -2188,  -903,
   -2188,  3237,   848, -2188, -1355,  -454,  -987, -1239, -1660, -2188,
   -2188, -2188, -2188, -2188, -2188,  -824, -1506,  -403,   923, -2188,
   -2188,  1022, -2188, -2188, -2188,  -699,   880,  -485,  -640,   928,
   -2188,  -483,  1335, -2188,   178,  -455,    82,  -684, -1370, -2188,
    2276,    63,   -10, -2188,   -98,  -417,  -900,  -735, -2188,  -723,
   -2188, -2188, -2188,  -844, -2188,   768, -2188,  -770, -2188,   -55,
   -2188, -2188, -1808, -2188, -2188, -2188, -2188, -2188, -2188,  -305,
   -2188,  -318,  -329, -2188, -2188,    11,  -598,  1502, -2188, -2188,
     993, -2188,  1063, -2188,   762, -2188, -2188, -2188,  1235, -2188,
   -2188, -2188,    42,  1608,   571, -2188,  1239, -2188, -2188, -2188,
   -2188, -2188,   289,  -769, -2176,    79, -1996,  -780,  1670,  -442,
    -280, -1791
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If zero, do what YYDEFACT says.
   If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -1463
static const yytype_int16 yytable[] =
{
     435,   514,    50,   577,   435,   812,   526,   824,   724,   478,
     435,   483,   583,  1119,   483,  1222,   871,   503,   738,  1312,
     435,   435,  1186,   616,   864,  1205,   470,  1241,    55,   917,
     938,   939,    39,  1460,  1774,  1390,  2048,   851,    48,  1124,
     575,   778,    69,    55,  1221,  1389,  1175,   963,   952,  1242,
    1355,   972,  1197,   749,  1842,  1632,  1844,  1244,  1245,  1193,
    2102,  1728,  2117,   483,  1795,    51,  1970,  1827,   501,   503,
     435,   503,   503,   503,   528,  1270,  2125,  1313,   503,    75,
      51,   476,   558,  1763,  1823,   634,   512,  1226,  2128,   548,
     843,  -961,   434,  2014,  1673,  2440,   462,   513,   475,  -961,
    -961,   634,   479,    86,  1763,   825,  -653,  -612,   843,  2313,
    -625,  -645,   511,   511,  2280,    55,   529,  -650,  2285,   546,
     527,  1510, -1462,   543,  1119,   547,  1997,   854,  1297,   550,
   -1462, -1462,  2289,  1507,  1028,  -640,   610,  -837,  1027,  1178,
    -419,   504,  -939,  1873,  -837,  1650,   584,  -962,  2347,   475,
    1279,   475,    51,   475,  1461,  -962,  -962,  1419,  2231,  -653,
    1399,  1399,   539,  1261,  -379,   618,  2271,  1024,   858,   475,
    1161,   858,   616,   634,  2041,  -422,   634,  1434,  2235,   616,
    1453,   568,  1901,  1903,  1435,   617,  -171,   980,  2012,  1950,
    1581,  -171,   771,  1189,   729,   838,  2406,  1017,  2378,  2329,
     980,   518,  2215,  1224,   917,  1673,  2585,  1880,  2466,  1206,
    1148,   843,  1209,  1210,  1673,   811,   986,   817,  1769,   821,
     634,  2546,  2443,   980,  2238,  2572,  1315,  2257,  2347,   986,
    -419,   523,  1300,   523,  1022,  1181,   971,  2129,   839,  2559,
     739,  2442,  1237,  1531,  1513,  2366,  2596,   988,  1149,   767,
     488,   767,   986,   774,   768,  2500,  1910,   538,  1441,   541,
     988,   545,  1396,  1489,  2353,  -422,   551,     3,     4,   938,
     939,   963,  1189,  1315,  1124,  1025,  2228,   952,  2149,   980,
    -856,  2240,  1855,   988,   519,  2370,  2389,  -856,   616,   616,
    1254,  1420,  2516,   435,  1121,   761,  1421,  1131,  1765,  2364,
     872,  1145,  2060,  1760,  1301,  1528,  1150,   917,   986,  2157,
     486,  1927,  2279,  2283,  2250,  1911,  1851,   769,   735,   769,
    1216,   473,   736,  1124,  1760,  1913,  1174,  2014,    89,  1852,
    2426,  1422,   958,  2286,   617,   947,   948,   980,  2251,   988,
    2547,   617,  1796,  1217,  2229,  2313,  1514,  1490,  2287,  2566,
     489,  2390,  1151,   959,  1238,  1364,  2059,  2284,   770,   844,
     770,  1529,   536,  1302,  2452,  1645,  1303,  2365,   896,  2243,
    2132,  2347,  1183,  2056,  2560,  2058,  2183,   844,  2579,  2444,
    2187,  1763,  2130,  1763,    90,   565,   917,  2536,  2367,  1026,
    2363,  2597,  1442,  1146,  1263,   762,  2402,   988,   840,  2586,
     740,  2391,   741,  2216,  2403,  1121,  -419,  2455,  1152,  2392,
    1196,  2244,  2548,  2150,  1582,   616,  1523,   474,   730,  1304,
     909,  2555,  2174,  2147,   911,   575,  2245,  2220,  1260,  1304,
    1771,  1121,  1294,  2463,   514,  2542,  1266,  2393,  1317,   931,
     932,  -422,  1127,   505,  1198,  1172,   507,   574,   435,   435,
     617,   617,  1222,  2347,   569,  2139,  1122,  2272,  2232,  1808,
    1863,  1864,  2517,  1018,   949,  1423,  -419,  1304,  1767,  1768,
    1314,  -837,  1507,  1549,  2518,  2587,   612,  2102,  1184,  1321,
     844,   779,   483,  1325,   483,  2531,   731,  1796,   475,   735,
     503,  2303,    55,   736,   520,  1400,  1730,   841,   435,   627,
    2588,  -422,  1368,  1370,  2394,   845,  1173,  2280,  1225,   621,
     503,  1436,  2314,  1355,  2288,  2395,   743,  2246,  2573,    50,
     622,    87,   503,   850,   883,   919,   926,   516,   610,    51,
     513,  1776,  1632,   958,   528,   530,   619,   620,  1271,  1119,
      93,   580,    94,  1121,  1211,    55,  1688,  1499,  1387,    39,
     503,   503,   503,  -961,   959,    48,   726,  2317,  1908,    69,
     912,   759,  2321,   750,  2404,  2323,    96,  1122,   960,   937,
    -419,  1402,   943,  -645,  1305,  2465,   529,   617,  1609,  -650,
     527,   531,    51,  2233, -1462,  2469,   958,  1856,  1802,  2222,
     511,  2470,  1148,  1122,   917,   909,    75,  -640,  1762,   911,
     556,  1760,   735,  1760,  -939,  -422,   736,   959,  -419,  -962,
    -419,   976,  1216,  1020,  -856,  1462,  1797,   923,  1557,  1762,
    1199,   962,   862,   863,  2219,   862,   863,  2049,  1560,  1780,
    1149,  1563,   563,  1763,  1720,  1217,  2537,  1763,  2538,  1008,
    -171,  -171,  2408,  -422,   517,  -422,    55,  1003,  1004,  1005,
    1006,  1007,  1008,  1531,  1685,  1686,  1687,  1688,   742,   514,
    1721,  1683,  1684,  1685,  1686,  1687,  1688,  2522,  1556,  2259,
    2260,  2275,  1005,  1006,  1007,  1008,  1212,   867,   733,  1213,
    1196,  1621,    76,    51,   867,   767,  2050,   931,   932,  1619,
    1646,  2396,  2221,  2557,  2397,  2420,   949,  1785,   909,  1198,
     919,  1831,   911,  1198,  2583,  1122,  1273,   567,  1923,  1198,
     781,   634,   785,  2005,  2102,  1275,   917,   521,   786,  1608,
     634,   941,   503,  1610,  2070,    77,  1612,  2083,  1930,  1749,
    1750,  1786,  1779,   856,  1151,   912,   857,   566,   830,   832,
     834,   435,   435,  2006,  1709,  1339,  1340,   503,   503,  1137,
    1828,  2592,  1121,   769,  1121,   969,   974,  1954,  2189,  1222,
    1364,  1364,  2356,  1355,  1722,  1364,   977,  2008,  1806,  1723,
    2567,  2568,  2591,   634,   503,  1188,   914,   909,  1021,   522,
    1198,   911,  1139,  1140,  1935,  1144,   570,   503,  2206,  1587,
    1152,  1029,  2071,   867,   867,  1198,    23,  1558,   759,   571,
    1364,  1364,  1561,   919,   503,  1220,  2478,  1763,   503,  1227,
    1876,  1528,   581,  1234,  1763,  1230,  2594,   623,   503,  1763,
    1121,   787,  1763,  2324,   529,   529,  1257,   529,   527,   527,
      27,   527,   574,   511,  2479,   574,  1857,   616,   912,   435,
     435,   625,   435,   574,  1929,   503,  1763,  1799,   523,  2377,
     616,  1520,   626,  1760,   937,  1223,  1262,  1760,  1626,  1829,
    -465,  1881,  1648,  1627,  2072,  -465,  1888,  1820,   612,  1326,
      29,   475,  1951,  1125,  2450,  1199,  1126,  2010,  1555,  1199,
     627,  1189,   919,  1300,    55,  1199,  1854,  1198,  2446,  1128,
     958,  1190,  1129,  1279,   958,   628,  1762,  1566,  1762,   785,
    2062,  1858,  1573,  1724,  1267,   786,  2098,  1129,   734,  1936,
    1036,   959,  1628,  1725,  1122,   959,  1122,   912,  2004,  1937,
      32,    51,   883,   548,  1704,   960,  1763,  1625,  -465,   962,
    1189,  1629,  1264,  1630,  1265,  1196,  1135,   559,   785,  1196,
    1192,   785,   728,  1357,   786,  1196,   751,   786,  1802,    55,
    1718,   914,  1763,   546,  1293,  1301,  1199,  1294,   746,   547,
     788,  2461,  1177,   550,  1309,  1602,   937,  1310,  1262,  -465,
     560,  1199,  1327,  1772,  1703,  1204,  1705,  1706,   574,   524,
    2063,  1472,  1122,   752,   850,   909,    51,    79,   971,   911,
     754,  1518,  2005,  1862,  1129,  1839,  1228,  1841,   788,   617,
       3,     4,   755,   561,   917,  1335,  1246,   503,   787,   789,
    1315,  2495,   617,   790,  1302,  1578,  1196,  1303,  1579,   552,
    1897,   553,  2006,  1985,  1986,  1987,  1988,  1760,  2153,  -970,
    -970,  1196,  2199,  1269,  1760,  2081,  2064,  2007,  2065,  1760,
     791,  1870,  1760,  1763,  1328,  1615,  2008,   787,  1616,   562,
     787,  1830,  1831,   757,   914,  1405,  2057,   758,  1647,   917,
     463,  1129,   463,  1199,   765,  2074,  1760,  1952,  1953,  1763,
    1654,  1241,  2009,  1129,  1364,  1364,  1364,  1364,  1832,   917,
    1364,  1364,  1364,  1364,  1364,  1364,  1364,  1364,  1364,  1364,
     919,  1463,  2073,  1242,  2082,  2556,  1121,  1121,  1121,  2114,
    1315,  1244,  1245,  1329,   792,  2584,  1330,   909,   917,  1295,
    1296,   911,  2569,  2136,   785,   503,  1658,   503,  1304,  1129,
     786,   559,   780,  1196,    23,   912,  1482,  1549,  1487,  2103,
    1364,  1364,   917,   914,   782,    80,  1480,   743,   783,   735,
    2263,  -939,    81,   736,  1355,   784,  1760,   788,  1762,   797,
    2039,  1763,  1762,   796,   560,   554,  2010,   555,    27,  1692,
     503,   785,  1129,    23,  2598,  1845,   814,   786,  1846,  1188,
     435,    84,  1760,    85,  1121,    82,   616,  1508,  1509,   460,
     435,  1533,   435,  1537,   818,   435,   788,  1872,   487,   788,
     822,   435,   499,   435,  1892,  1451,   883,    27,    29,    51,
     790,  2267,   828,  1849,   574,   435,  1850,  1331,   823,   574,
     435,    30,   919,   835,   435,   435,   435,   435,   826,   435,
     435,    83,   937,   787,   847,  1305,   837,   791,   503,  1586,
    -493,  -493,   915,   562,    31,   815,   842,    29,   819,   790,
    1919,  1598,   790,  1129,  1306,   847,   916,   912,    32,   849,
      30,  1966,   852,  1958,  1129,  1603,   853,   917,  1122,  1122,
    1122,  2095,  1524,  1760,  2037,  2042,   816,  2038,  2043,   820,
     787,   855,  1532,    31,  1535,  2061,   798,  1546,  1579,  2020,
    2024,  2025,  2026,  1550,   873,  1552,  2081,    32,   921,  1760,
    2120,   792,  2223,  1579,   922,   799,  2137,  1559,  2158,  2138,
     924,  1310,  1562,  1467,  -616,  1469,  1567,  1568,  1569,  1570,
    -623,  1574,  1575,    23,  1332,    23,   934,  2224,    51,  1297,
    1579,  1124,  1762,  2098,  2281,  1912,  1914,  1915,   930,  1762,
     792,   514,  2225,   792,  1762,  1579,  1122,  1762,   617,   933,
    1315,   914,   867,  1599,   800,  1600,  1624,    27,  1512,    27,
    2235,  2304,  2135,   935,  1310,   867,  2236,   883,   883,   883,
    2357,  1762,   788,  2358,  2383,  1802,  2376,  1579,  2237,  2409,
     936,  1760,  1310,   514,  2412,   917,  2417,  2413,   940,   850,
    2423,   979,  2425,  2424,   980,  2425,   785,    29,    32,    29,
    2427,   464,   786,  2424,  2438,   909,  2238,  2439,  2239,   911,
      30,   937,    30,  1262,  1121,  1476,  1357,   915,  1121,   788,
    1121,  1519,   942,   986,  2475,   790,  1585,  2439,  -613,  2476,
   -1463,   916,  1310,    31,  1742,    31,  1743,   969,  2484,   801,
    2489,   850,  2503,  2424,  -614,  2504,   503,   465,  1744,    32,
    1745,  1762,   791,  1764,   988,  2532,  2533,   514,   850,  1129,
     909,  -617,  2563,  2240,   911,  2424,  2580,  -615,  1564,  2439,
    -497,  -497,   790,   914,  1764,  -496,  -496,  1762,  1790,   969,
     909,  1793,   945,  1487,   911,   548,   802,  1124,  2241,   803,
     764,  2188,   766,  2191,  2255,   725,  1405,   727,   946,  1565,
     804,   917,  1033,  1035,   951,   787,   953,   954,   917,   909,
     919,    55,  1737,   911,   955,   546,   792,  2381,   956,  2176,
     915,   547,  1717,   957,   964,   550,   965,   975,  1754,  1234,
    1013,   805,    23,   909,   916,  1015,  1017,   911,  1031,  1018,
    1132,   521,  1138,   768,   770,   912,  2242,  1168,    51,  1754,
    1897,  2243,  1170,   513,  -466,  1176,  2264,  2265,  1364,  -466,
    1194,  2210,  1195,   792, -1463,   919,    27,   917,  1762, -1463,
    2098,  1196,  1201,  1203,  1202,   807,  1122,  1207,  1214,  1234,
    1122,  1215,  1122,  1477,   503,   919,  1219,  1229,  1234,   503,
     503,   503,  1231,  2244,  1762,   808,  1235,  1239,  1407,   915,
     912,  1240,   435,   522, -1463,  1247,    29,   503,  2245,  1250,
    1251,   574,  1802,   916,   919,   810,  1253,  1848,  1292,    30,
     912,  1262,  -466,   926,  1408,   937,  1603,  1234,  1234,   943,
    1298,  1316,  1317,   634,  1746,  1121,  1322,   980,   919,  1372,
    1373,  2449,    31,  1385,   788,  1398,  1404,    23,  1364,   912,
    1866,   996,  1415,  1416,  1418,  1646,    32,  1438,   909,  1439,
    1453,  1466,   911,  -466,  1464,  1473,  1357,  1474,  1481,   522,
    1500,  1488,   523,   912,  1501,  1502,  1762,  1521,  1503,  1525,
    1526,    27,  1527,   883,   917,  1576,  1580,  1584,  2095,    51,
    1588,   867,  1589,  1571,  1885,  1590,  1898,   790,  1899,  2246,
    1604,  1980,  1904,  1905,  1606,   633,   616,  1607,  1673,  1611,
    1613,  1364,  1674,  1675,  1676,   514,  1614,  1622,   917,  2578,
    1635,    29,  2331,  1409,  1572,  1637,  1638,  1639,  1410,  2340,
    1640,  1641,   514,  1411,    30,  1642,  1643,  1656, -1463,  1657,
    1984,  1659,  1660,   917,  1661,  1662,   917,  1663,   503,   503,
     503,  1994,  1665,  1764,  2002,  1666,   798,    31,  2002,  2016,
    1669,   914,  1691,  2101,  1646,  1697,  1222,  1129,  1698,  1699,
    1700,  1478,  1869,  1701,  1342,   799,   909,  1874,  1875,  1877,
     911,  1343,  1344,  1345,  1708,  1719,  1961,  1714,   792,  1711,
    1712,  2449,  1713,  1726,  1735,  1891,  1487,  1122,   912,  1736,
    1738,  1739,  1740,   524,  1765,  1782,  1770,   915,  1784,  1791,
    1810,   969,   503,  1798,   435,  1804,   914,  -498,  1234,  1188,
    1234,   916,  1257,  -499,   800,  1809,  1992,  1812,  1996,  2360,
    1813,  1816,  1818,  2411, -1463,  2456,   914,  1814,   435,  1819,
    2087,  1003,  1004,  1005,  1006,  1007,  1008,  1822,  1838,  1825,
    1840,  1879,  1853,   435,   435,   435,   435,   435,   435,   435,
     435,   435,   435,  1859,  1860,   914,  1861,  1412,   617,  1882,
    2416,  1878,   503,  2176,  1883,  1886,  1889,  1413,  1890,  1188,
    1893,   919,  1906,  2416,  1900,  1304,  1917,  1918,   971,   914,
    1257,  1922,   909,   503,  1694,  1673,   911,  1693,  2004,   909,
    1234,  2131,  1955,   911,  1678,  1956,  2053,  1960,  1957,   801,
    1968,  2502,   523,  1969,  1981,  1972,   912,  1747,  2017,  1995,
    2022,   917,  1121,  2003,  2100,  2095,  1121,  2019,  2034,   915,
    2086,   883,  2036,  2040,  2051,  2028,  1989,  1990,  1991,   883,
    2047,  1866,  2030,   916,  2055,  2104,  2105,  2106,  2107,  2108,
    2109,  2110,  2111,  2112,  2113,  2212,   802,  2031,   909,   803,
    2032,  2067,   911,  2069,    51,  1679,  2477,  2458,  2085,  2116,
     804,  2123,  2005,  2122,  2485,  2127,  2133,  2143,  2486,  1579,
    2141,  2142,  2169,  2148,  2553,   503,   503,   503,   503,  2145,
    2151,  2184,  2002,  2016,  2177,    89,  2002,   919,  2152,  2180,
    2052,   805,  2006,  1764,  2266,  2166,  2178,  1764,  2182,  -431,
    2185,  2192,  2197,  2196,   914, -1005,  2193,  2007,  2198,    23,
    2200,  2201,  -431,  2203,  2218,  2204,  2008,  -431,  2205,  2226,
    2230,  2253,   912,  2497,  1801,  2254,  2258,  2269,  1790,   912,
    2268,  2270,  2276,  1487,    89,   807,  2290,  1357,  2211,  2213,
    2277,    90,  2009,    27,  2278,  1188,  2293,  2291,  2296,  2297,
    2119,  2299,  2309,   919, -1005,   808,  2301,  2322,  2302,  2343,
    2315,  -431,  1121,  2318,  2328,   909,  2338,  2349,  1754,   911,
    2262,  1269,  1754,  2351,  1122,   810,  2352,  2354,  1122,  2359,
    -431,  2368,  2371,    29,  2372,  2373,  2374,    91,   912,  2385,
      90,  2207,  2382,  2209,  2386,  2400,    30,  2387,  2401,   909,
    2410,    51,    51,   911,  2414,  2419,  1234,   633,  2422,  2435,
    1673,  2430,  1598,  2428, -1463, -1463, -1463,  2434,  2454,    31,
    2457,  -431,   914,  2294,   909,  2282,  2010,   909,   911,  2440,
    -431,   911,  2459,    32,  2483,   615,    91,  2462,  2471,  2473,
    2472,  1680,  1681,  1682,  2491,  1683,  1684,  1685,  1686,  1687,
    1688,  2492,  2501,    92,  2505,  2367,  2507,  2508,  2510,  2514,
     721,   721,  2515,  2170,  2171,  2172,  2173,  1994,  2002,  2519,
    2101,  2513,   435,  2520,  1764,  2521,  1982,   721,  2530,  1764,
    2543,  2549,  1764,  1994,  2558,  2327,  2564,  2330,    51,  2571,
    2581,  2574,  2572,  2576,  2582,  2573,  2595,    93,   756,    94,
    2084,   867,  1551,  2088,   919,   912,  2348,   915,  2319,  1836,
    1346,  1347,  1348,  2044,  1349,  1350,  1351,  1352,  1353,  1354,
      95,   916,  2214,    96,  1122,  2496,   574,   435,  2539,   919,
    2342,  2545,   919,  2121,  2590,   503,  2261,  2453,   914,   912,
    2577,  2570,  2399,  1821,  1185,   914,    93,  1843,    94,  1754,
    2126,   721,  2541,  2575,  1754,  1817,  1867,  1754,  2089,   435,
     435,  -431,   915,  2540,   912,  1259,  1868,   912,  1188,    95,
    1894,   435,    96,  1130,  2298,   798,   916,  2115,  2384,  1023,
    1517,  1800,   915,   503,   615,   979,  2348,  1811,   980,  2029,
    1164,   615,   721,   920,   799,  2490,   916,  1165,  1497,  2282,
    2208,   514,   909,  1516,   914,   435,   911,  1169,  1998,   721,
    1781,   915,  1764,  2175,  2190,  2481,  2421,   986,  2330,  2361,
    1993,  2482,  2487,   735, -1463,   916,   754,   736,  2433,  2488,
    1636,  2100,  2341,   435,  2534,   915,  2535,   721,  2529,  1803,
    1651,    51,   503,   800,  1733,  1443,  1778,  1731,   988,   916,
    2474,  2379,  2380,  1452,  1871,  1631,   721,   721,   721,  1272,
     721,  1468,    51,  2388,   574,  1133,  1470,  1679,  2045,     0,
       0,     0,     0,     0,     0,   503,     0, -1370,     0,     0,
     721,     0,     0,     0,     0,     0,     0,  1754,  2468,     0,
       0,     0,     0,     0,     0,     0,     0,   969,     0,     0,
     615,   615,     0,  1994,     0,   721,  1120,  2101,  2077,   435,
       0,     0,     0,     0,  2327,     0,  1727,     0,     0,     0,
       0,   914,     0,  2369,     0,  2436,     0,     0,   801,  2348,
     574,   574,   574,     0,     0,   721,     0,  2493,     0,   721,
     721,     0,   912,     0,     0,  2464,     0,     0,     0,     0,
     721,    51,     0,     0,     0,   914,     0,     0, -1463,     0,
     915,  1670,  1671, -1463,     0,     0,  1690, -1370,   920,     0,
       0,  2405,     0,  2327,   916,   802,     0,     0,   803,     0,
     914,  2433,     0,   914,     0,     0,     0,     0,     0,   804,
       0,  1487,     0,     0,     0,     0,     0,     0, -1463,     0,
      51,  1715,  1716,     0,     0,  1188,     0,     0,     0,     0,
       0,  2348,     0,     0,     0,     0,  2554,  1120, -1370,     0,
     805,     0,     0,     0,     0,     0,   574,   615,     0,     0,
    2445, -1370,     0,     0,     0,     0, -1370,     0,     0,     0,
       0, -1370,     0,  1120,     0,   996,     0,     0,     0, -1370,
       0,     0, -1370, -1463, -1463, -1463,     0,  1683,  1684,  1685,
    1686,  1687,  1688,  2467,   807,     0,     0,     0,  2100,     0,
       0,   920,     0,     0,     0,     0,     0,     0,   915,    51,
   -1370,     0,     0,     0,   808,     0,     0,     0,     0,     0,
       0,     0,   916, -1372,   721,     0,  1280,     0,     0, -1370,
     721,     0,     0,   721,   810,     0,     0,   721,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   721,     0,     0,   721,   721,   721,   721,     0,     0,
       0,     0, -1463,     0,   721,   721,     0,     0,     0,  1281,
   -1370,     0,     0, -1370,     0,     0,     0,     0,     0, -1370,
     920,   721,   721,   721,   721,  1120,     0,     0,   914,   721,
       0,     0,     0,   721,  1282,     0,   979,   721,     0,   980,
     721,   721,   721,   721,   721,   721,   721,   721,   721,     0,
       0,   721,  1283, -1372,     0,     0,  1284,     0,   721,     0,
     721,     0,     0,     0,   915,     0,     0,     0,   986,     0,
       0,   915,     0, -1370,     0, -1463,     0,  1285,   916,   979,
    1286,     0,   980,     0,     0,   916,     0,     0,     0,     0,
       0,     0,     0,  1287,     0,     0,     0,     0, -1463,   988,
       0,     0,     0,     0, -1372,  1003,  1004,  1005,  1006,  1007,
    1008,   986,     0,     0,     0,     0,     0, -1372, -1463,     0,
       0,     0, -1372,     0,  1747,     0,     0, -1372,     0,     0,
     915,     0,     0,     0,     0, -1372,     0,     0, -1372,     0,
       0,     0,   988,     0,   916,  1931,  1932,  1933,  1934,     0,
   -1370,  1938,  1939,  1940,  1941,  1942,  1943,  1944,  1945,  1946,
    1947,     0,     0,     0,     0,     0, -1372,  1973,     0,   721,
       0,     0,     0,  1288, -1370,     0, -1370, -1370,     0,     0,
       0,  1289,     0,     0,     0, -1372,     0,   721,     0,     0,
       0,     0,     0,     0,     0,     0,   721,   721,     0,     0,
   -1386,  1974,  1975,     0,     0,     0,     0,     0,     0, -1463,
    1976,     0, -1370,     0, -1463, -1370, -1370, -1370,     0,     0,
       0,     0,  1290,     0,     0,     0, -1372,     0,   920, -1372,
       0,     0,     0,     0,  1120, -1372,  1120,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   915,     0, -1463,
       0,     0, -1463,     0,     0,     0,     0, -1463,     0,     0,
     866,   916,     0,     0,     0,     0,     0,   866,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   915,     0,     0,     0,     0,     0,     0,     0, -1372,
   -1386,     0, -1463,     0,     0,   916,   996,     0,   979,     0,
       0,   980,  1120,     0,     0,     0,   915,     0,     0,   915,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   615,
     916,     0,     0,   916,     0,     0,     0,     0,     0,     0,
     986,     0,   615,     0,   721,   721,   721, -1463,     0,   996,
    1747, -1386,     0,     0,     0,     0,     0,     0,     0,     0,
     920,     0,     0,     0, -1386,     0,   721,   721,     0, -1386,
       0,   988,   721,     0, -1386,     0, -1372,     0,     0,     0,
       0,     0, -1386,     0,   866, -1386,   866,   866,     0,     0,
       0,     0,     0, -1463,     0,     0,     0,     0,     0,     0,
   -1372,     0, -1372, -1372,     0,     0,     0,     0,     0,     0,
     721,   721,   721, -1386,     0,   721,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   721,   721,   721,
     721,     0, -1386,     0,     0,   721, -1463,     0, -1372,  1977,
       0, -1372, -1372, -1372,     0,     0,     0,     0,     0,     0,
     721,   721,     0,     0,   721,   866,     0,     0,   866,   866,
       0,     0,     0,     0,     0,     0,     0,     0,   721,     0,
     721,     0,   721, -1386,     0,     0, -1386,     0,     0,     0,
       0, -1463, -1386,     0,     0,     0, -1463,     0,     0, -1463,
       0,     0,   721,     0,   915,     0,  1003,  1004,  1005,  1006,
    1007,  1008,     0,   721,     0,   721,   721,   721,   916,     0,
       0,     0,     0,     0,     0,     0,   721,     0,  1274,  1276,
       0, -1463,     0,     0,   721,     0,     0,     0,     0,     0,
       0,     0, -1463,     0,     0,     0, -1386,     0,   721,  1003,
    1004,  1005,  1006,  1007,  1008,     0,     0,     0,     0,     0,
       0,     0,     0,   721,     0,     0,   633,     0,     0,  1673,
       0,     0,     0,  1674,  1675,  1676,     0,     0,   996,     0,
       0,   721,     0,     0,     0,     0,     0,     0,     0,     0,
    1963,     0,     0,     0,     0,     0,     0,  1747,  1120,  1120,
    1120,  1323,  1324,     0,     0,     0,     0,   633,     0,  1336,
    1673,  1337,  1338,     0,  1674,  1675,  1676,     0,     0,     0,
       0,   979,     0, -1386,   980,     0,  1374,     0,  1375,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2300,
       0,  1386,  1388,     0,     0,     0,     0, -1386,     0, -1386,
   -1386,     0,     0,   986,     0,     0,   704,   704,   920,   979,
   -1463,     0,   980,     0,     0, -1463, -1463, -1463, -1463,     0,
       0,     0,     0,     0,     0,     0,  1120,     0,   615,     0,
       0,     0,     0,     0,   988, -1386,     0,     0, -1386, -1386,
   -1386,   986,     0,     0,     0,     0,     0,     0,   987,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     721,     0,     0,   920,     0,     0,     0,     0,     0,     0,
     721,     0,   988,     0,   721,     0,     0,   721,     0,  2362,
       0,     0,     0,   920,   721,   721,   721,   721,     0,     0,
     721,   721,   721,   721,   721,   721,   721,   721,   721,   721,
       0,     0,  2164,   721,   721,     0,     0,     0,     0,     0,
       0, -1463,   920,     0,     0,  1678,     0,   721,  1003,  1004,
    1005,  1006,  1007,  1008,   721,     0,     0,   721,     0,   721,
       0,     0,     0,     0,     0,  1677,   920,   721,   880,     0,
     721,   721,  2407,     0, -1463,   721,   721,     0,     0, -1463,
       0,     0,     0,     0,     0,   928,  1678,     0,     0,     0,
       0,   721,     0,   721,     0,     0,     0,     0,     0,     0,
       0,     0,  1506,  1506,     0,   721,  1679,     0,     0,     0,
       0,   721,   989,   950, -1463,     0,     0,   990,     0,     0,
       0,     0,   721,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   966,   967,   968,     0,   970,     0,   721,     0,
       0,     0,   -36,     0,     0,     0,     0,  1679,     0,     0,
       0,     0,   993,     0,   866,     0,  1016,     0,     0,     0,
       1,   996,     0,     0,   866,     0,     0,   866,     0,     0,
       2,   633,     3,     4,  1673,     0,     0,     0,  1674,  1675,
    1676,  1037,     0,     0,     0,     0,  1120,     0,     5,     0,
    1120,   920,  1120,     0,     0,  1964,     0,     0,     0,   996,
       0,     0,     0,     0,     0,     0,     0,     0,     6,     0,
       0,  1143,     0,     0,     0,  1155,  1160,     0,     0,     7,
       0,     0,     0,     0,     0,   866,     0,     0,     0,     0,
       8,     0,     9,     0,     0,     0,     0,     0,   866,     0,
       0,     0,     0,     0,     0,     0,     0,     0, -1463,    10,
       0,     0,  1644,     0,     0,     0,     0,     0,     0,     0,
     721,     0,     0,    11,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    12,     0,     0,     0,     0,     0,    13,
       0,     0,     0,     0,     0,     0,   998,    14,     0,    15,
      16,     0,  1680,  1681,  1682,     0,  1683,  1684,  1685,  1686,
    1687,  1688,     0,   721,   721,     0,     0,     0,   721,   920,
       0,     0,     0,   721,     0,     0,   721,   721,     0,     0,
       0,   721,     0,     0,     0,     0,     0,    17,     0,     0,
       0,     0,     0,  1680,  1681,  1682,     0,  1683,  1684,  1685,
    1686,  1687,  1688,   721, -1463,     0,     0,   721,     0,     0,
       0,  1003,  1004,  1005,  1006,  1007,  1008,     0,     0,   721,
       0,     0,     0,     0,     0,     0,    18,   721,     0,     0,
    1678,     0,     0,     0,   721,     0,  1320,     0,     0,     0,
       0,     0,   999,     0,     0, -1463, -1463, -1463,     0,  1003,
    1004,  1005,  1006,  1007,  1008,     0,     0,  1341,     0,     0,
    1358,     0,     0,  1369,     0,     0,     0,  1120,  1775,     0,
    1376,  1381,     0,     0,     0,     0,   721,     0,     0,     0,
       0,     0,     0,     0,     0,   920,     0,  1391,  1392,  1393,
    1394,  1679,   920,     0,    19,  1403,     0,    20,     0,  1414,
       0,  1807,  1807,  1417,     0,     0,  1424,  1425,  1426,  1427,
    1428,  1429,  1430,  1431,  1432,     0,     0,  1433,     0,     0,
       0,     0,     0,     0,   704,    21,   880,     0,     0,     0,
       0,     0,     0,    22,     0,     0,     0,     0,   615,     0,
       0,     0,     0,     0,     0,    23,     0,     0,   721,     0,
       0,   920,    24,     0,     0,     0,    25,     0,     0,     0,
     721,   721,     0,     0,   721,     0,    26,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   721,   979,    27,
       0,   980,     0,     0,   721,   981,   982,   983,     0,   721,
       0,     0,   721,   721,     0,   979,     0,     0,   980,     0,
     721,   721,   984,     0,     0,     0,     0,     0,     0,     0,
     986,     0,     0,     0,    28,     0,   721,   987,   721,    29,
       0,   633,     0,     0,  1673,     0,     0,   986,  1674,  1675,
    1676,     0,    30,     0, -1463,  1471,     0,     0,   721,     0,
       0,   988,     0,  1907,  1909,  2160,     0,     0,  1916,     0,
       0,     0,     0,     0,     0,    31,     0,     0,   988,     0,
       0,     0,   967,   968,     0,     0,     0,     0,   920,    32,
       0,  1011,   -36,     0,     0,     0,     0,  1680,  1681,  1682,
       0,  1683,  1684,  1685,  1686,  1687,  1688,     0,     0,     0,
       0,     0,   978,     0,     0,     0,   721,   979,     0,     0,
     980,   721,   920,     0,   981,   982,   983,     0,     0,     0,
       0,     0,     0,     0,     0,  1011,     0,     0,   721,     0,
       0,   984,   721,     0,   985,     0,     0,   920,     0,   986,
     920,     0,   721,     0,     0,     0,   987,     0,     0,   633,
       0,     0,  1673,     0,   721,     0,  1674,  1675,  1676,     0,
       0,   989,     0,     0,  1120,     0,   990,     0,  1120,   721,
     988,     0,     0,  2161,     0,     0,     0,     0, -1463,     0,
       0,     0,     0, -1463,     0,     0,     0,   991,   992,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   993,     0,     0,     0,     0,     0,     0,     0,     0,
     880,  1633,  1634,     0,     0,     0,     0,     0, -1463,     0,
     721,     0,     0,   721,     0,     0,     0,     0,     0,     0,
    1678,   994,   721,  1649,   995,     0,     0,     0,  1655,     0,
     721,     0,     0,     0,     0,     0,     0,     0,   996,   721,
       0,   997,     0,     0,     0,     0,     0,  1011,     0,     0,
       0,     0,     0,     0,     0,   996,     0,   866,     0,   721,
       0,     0,     0,     0,     0,     0,     0,     0,  1672,     0,
     989,     0,     0,     0,     0,   990,     0,     0,   721,   721,
       0,  1679,     0,  1381,     0,  1381,  1381,     0,     0,     0,
       0,  1710,     0,     0,     0,  1011,   991,   992,     0,     0,
       0,     0,     0,     0,  1120,   920,     0,     0,     0,     0,
     993,     0,  2140,     0,     0,     0,     0,  1011,     0,     0,
       0,   721,  1365,   721,  1729,   998,  1732,     0,  1734,     0,
       0,     0,     0,  1011,  1011,  1011,     0,  1011,  1678,     0,
     994,     0, -1463,   995,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   996,     0,     0,
     997,   880,   880,   880,     0,     0,   633,     0,     0,  1673,
       0,     0,  1777,  1674,  1675,  1676,     0,     0,     0,     0,
       0,   721,   721,  1011,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1143,     0,     0,     0,     0,  1679,
       0,     0,     0,   979,  1011,     0,   980,     0,     0,  1160,
     981,   982,   983,     0,     0,     0,     0,     0,     0,     0,
       0,   999,     0,     0,  1000,  1001,  1002,  1815,  1003,  1004,
    1005,  1006,  1007,  1008,     0,   986,     0,     0, -1463,     0,
       0,  1664,   987,     0,   998,  1003,  1004,  1005,  1006,  1007,
    1008,     0,     0,     0,   979,     0,     0,   980,     0,     0,
       0,   981,   982,   983,     0,     0,   988,  1680,  1681,  1682,
       0,  1683,  1684,  1685,  1686,  1687,  1688,     0,   984,     0,
     866,     0,     0,     0,     0,   866,   986,     0,     0,     0,
       0,     0,     0,   987,     0,     0,     0,     0,     0,  1274,
    1276,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1011,     0,     0,     0,     0,     0,     0,   988,     0,     0,
       0,     0,  1011,     0,     0,     0,     0,  1011,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     999,     0,     0,  1000,  1001,  1002,     0,  1003,  1004,  1005,
    1006,  1007,  1008,     0,     0,     0,  1921,     0,     0,     0,
       0,     0,     0,     0,     0, -1463,  1925,     0,     0,     0,
    1926,     0,     0,  1928,     0,     0,   989,     0,     0,     0,
       0,   990,     0,     0,     0,  1680,  1681,  1682,     0,  1683,
    1684,  1685,  1686,  1687,  1688,     0,     0,     0,     0,  1948,
    1949,     0,   991,   992,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   993,     0,     0,     0,
    1962,     0,     0,  1965,     0,  1967,  1679,   989,     0,     0,
       0,     0,   990,  1971,     0,     0,     0,     0,     0,     0,
       0,  1978,  1979,     0,     0,     0,   994,     0,     0,   995,
       0,     0,     0,   991,   992,     0,     0,     0,     0,     0,
       0,     0,     0,   996,     0,  1274,  1276,   993,     0,     0,
       0,  2021,     0,     0,   866,     0,     0,   880,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1011,  2033,     0,
       0,     0,     0,     0,     0,     0,     0,   994,     0,     0,
     995,     0,     0,     0,  2046,     0,     0,     0,  1011,     0,
       0,     0,     0,   979,   996,     0,   980,   997,     0,     0,
     981,   982,   983,     0,     0,  1011,     0,  1365,  1365,     0,
    1689,     0,  1365,     0,     0,     0,  1011,   984,     0,     0,
       0,     0,     0,  1011,     0,   986,     0,     0,  1011,     0,
     998,     0,   987,     0,     0,     0,     0,     0,  1011,  1011,
    1011,  1011,     0,     0,     0,     0,     0,  1365,  1365,     0,
    1011,     0,     0,     0,     0,     0,   988,     0,     0,     0,
       0,  1011,     0,     0,  1011,     0,     0,     0,     0,     0,
       0,  1011,  1011,  1011,  1011,  1011,  1011,  1011,  1011,  1011,
    1011,   998,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1680,  1681,  1682,     0,  1683,  1684,  1685,  1686,
    1687,  1688,     0,     0,     0,     0,  2144,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1011,     0,
       0,     0,     0,     0,     0,     0,   999,     0,     0,  1000,
    1001,  1002,     0,  1003,  1004,  1005,  1006,  1007,  1008,     0,
       0,     0,     0,     0,   438,     0,     0,     0,     0,  2154,
    2155,     0,     0,     0,  2156,     0,     0,     0,     0,  2159,
       0,     0,  2162,  2163,     0,     0,   989,  2167,     0,     0,
       0,   990,     0,     0,     0,     0,     0,   999,     0,     0,
    1000,  1001,  1002,     0,  1003,  1004,  1005,  1006,  1007,  1008,
       0,   866,   991,   992,  1384,     0,   439,     0,     0,     0,
       0,     0,     0,     0,     0,   880,   993,     0,     0,     0,
       0,   440,     0,   880,     0,     0,     0,     0,     0,     0,
     704,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   994,     0,     0,   995,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   979,   996,     0,   980,   997,     0,     0,   981,
     982,   983,  2256,     0,   441,     0,     0,     0,     0,     0,
       0,     0,     0,   442,     0,     0,   984,     0,     0,     0,
    1011,  1011,     0,     0,   986,   443,     0,     0,     0,     0,
       0,   987,     0,     0,     0,     0,  1011,     0,     0,     0,
       0,     0,  1011,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   444,     0,   988,     0,  1689,  1689,  1011,
       0,  1365,  1365,  1365,  1365,     0,     0,  1365,  1365,  1365,
    1365,  1365,  1365,  1365,  1365,  1365,  1365,  1689,     0,     0,
     998,     0,     0,     0,     0,     0,  2305,  2306,     0,     0,
    2307,     0,     0,     0,     0,     0,     0,  1011,   445,     0,
       0,     0,  1689,  1689,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1011,  1365,  1365,  1011,
       0,  1011,     0,     0,     0,     0,  2336,  2337,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2350,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   446,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1011,   989,     0,     0,   447,     0,
     990,     0,     0,     0,     0,     0,   999,     0,     0,  1000,
    1001,  1002,     0,  1003,  1004,  1005,  1006,  1007,  1008,     0,
       0,   991,   992,  1924,     0,     0,     0,     0,     0,   448,
       0,   449,  1011,     0,     0,   993,     0,     0,   450,     0,
     979,   451,     0,   980,     0,     0,     0,   981,   982,   983,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     452,     0,     0,     0,   984,   994,     0,     0,   995,     0,
       0,   453,   986,     0,  2418,     0,     0,     0,   454,   987,
       0,     0,   996,     0,     0,   997,     0,   455,   970,   979,
       0,     0,   980,     0,     0,     0,   981,   982,   983,     0,
    2437,     0,     0,   988,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   984,     0,  2451,     0,   456,     0,     0,
       0,   986,     0,     0,     0,     0,     0,     0,   987,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1011,     0,
       0,     0,  1011,  1011,     0,  1011,     0,     0,  1689,  1689,
    1689,  1689,   988,     0,     0,  1689,  1689,  1689,  1689,  1689,
    1689,  1689,  1689,  1689,  1689,  1011,  1011,     0,   979,   998,
       0,   980,     0,     0,     0,   981,   982,   983,     0,  1011,
       0,     0,  1011,     0,  1011,     0,  2336,     0,  1011,     0,
       0,  1689,  1689,     0,     0,  1011,  1011,     0,     0,     0,
     986,     0,     0,     0,     0,     0,     0,   987,     0,     0,
       0,     0,     0,   989,     0,  2512,     0,     0,   990,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   988,     0,     0,  2526,  2526,     0,   798,  1011,   991,
     992,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1011,     0,     0,   993,     0,     0,   799,     0,     0,     0,
       0,     0,   989,  1011,     0,   999,     0,   990,  1000,  1001,
    1002,     0,  1003,  1004,  1005,  1006,  1007,  1008,     0,  2526,
       0,     0,  1959,   994,     0,     0,   995,     0,   991,   992,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     996,     0,   993,   997,     0,   800,  2075,     0,     0,     0,
       0,     0,     0,  2076,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   994,     0,     0,   995,     0,  2526,  2593,     0,
       0,   989,     0,     0,     0,     0,   990,     0,     0,   996,
       0,     0,   997,     0,     0,     0,     0,     0,     0,     0,
       0,  1011,     0,     0,     0,  1365,     0, -1463, -1463,     0,
    2077,  1011,  1011,  1011,     0,     0,  1011,     0,     0,  1011,
    1011,   993,     0,     0,  1011,     0,     0,   998,     0,     0,
     801,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0, -1463,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   996,     0,
       0,     0,     0,     0,     0,     0,   998,   802,     0,     0,
     803,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   804,     0,  2078,     0,  1365,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1011,     0,     0,     0,     0,     0,     0,
       0,     0,   805,   999,     0,     0,  1000,  1001,  1002,     0,
    1003,  1004,  1005,  1006,  1007,  1008,     0,     0,     0,     0,
    2054,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   998,     0,  1689,  1365,     0,
       0,     0,  1011,  1011,  1011,     0,   807,     0,     0,     0,
       0,     0,   999,     0,     0,  1000,  1001,  1002,     0,  1003,
    1004,  1005,  1006,  1007,  1008,     0,   808,     0,     0,  2146,
       0,     0,     0,  1011,  1011,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   810,  1011,  2079,     0,
       0,  2080,     0,     0,     0,     0,     0,     0,     0,  1689,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   999,     0,     0,  1000,  1001,  1002,     0,  1003,  1004,
    1005,  1006,  1007,  1008,  1689,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1011,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1011,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1011,  1196,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1011,
     629,   630,   475,   631,   632,   633,   634,   635,     0,     0,
       0,     0,     0,  1011,     0,   100,   101,   102,   103,   104,
     105,   106,   107,  1455,   109,   110,   111,     0,     0,     0,
       0,     0,     0,     0,   112,   113,     0,   114,   115,   116,
     586,   117,   118,   119,   120,   636,   587,   637,   638,     0,
     124,   125,   126,   127,   128,   639,   640,   129,   130,   641,
     642,   133,     0,   134,   135,   136,   137,   643,     0,   644,
       0,   139,   140,   141,   142,   143,   589,   144,   145,   146,
    1011,   147,   148,   149,   150,   151,   152,     0,   590,   153,
     154,   155,   645,   646,   647,   648,   649,   650,   651,   156,
     157,   158,   159,   160,   161,   652,   653,   164,   654,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
     174,   175,   176,  1456,     0,   177,   178,   655,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,     0,   188,
     189,   190,   191,   656,   193,   194,   195,   196,   657,   658,
     198,     0,   199,   200,   659,   202,     0,   203,     0,   204,
     592,     0,   593,   205,   206,   207,   208,     0,   209,     0,
     210,   211,     0,   212,   213,   214,   215,   216,   594,   217,
     218,   219,   220,     0,   221,   222,   223,   224,   225,   226,
       0,   227,   595,   228,   229,   230,   231,   232,   660,   661,
       0,   662,     0,   236,   596,   597,   237,   598,   238,   239,
     240,   241,   242,     0,     0,   243,   599,   244,   600,     0,
     245,   246,   247,   663,   664,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   665,   601,   666,   266,   267,   268,   269,   667,   270,
     271,   602,   272,   668,   669,   274,   670,   276,   277,   278,
       0,   279,   280,     0,     0,   671,   282,   283,     0,     0,
     284,   285,   603,   286,   604,   672,   288,   289,   290,   291,
     292,   293,   294,   295,   296,     0,   297,   298,   673,   300,
     301,   302,   461,   304,   305,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   674,   316,   317,   318,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,     0,   332,   333,   605,   334,   335,   336,
     675,   338,   339,   340,   341,   342,   343,   344,   345,   346,
       0,   347,   348,   349,   350,   351,   676,   352,   353,   354,
     355,   356,   606,   357,   358,   677,   360,     0,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     678,     0,   374,   375,     0,   376,   607,   377,   378,   379,
     380,   381,     0,   679,   680,     0,     0,   384,   385,   681,
     387,   682,   683,   389,   390,   391,   392,   393,   394,   395,
       0,     0,   396,   397,   398,   399,   400,   684,     0,   401,
     402,   403,   404,   405,   406,   685,  1457,   408,   609,   409,
     410,   411,   412,     0,     0,   413,     0,     0,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   686,     0,
       0,     0,     0,     0,     0,   687,   688,  1458,     0,     0,
       0,     0,     0,     0,   690,  1459,     0,     0,     0,   691,
     629,   630,   475,   631,   632,   633,   634,   635,     0,     0,
       0,     0,     0,     0,     0,   100,   101,   102,   103,   104,
     105,   106,   107,     0,   109,   110,   111,     0,     0,     0,
       0,     0,     0,     0,   112,   113,     0,   114,   115,   116,
     586,   117,   118,   119,   120,   636,   587,   637,   638,     0,
     124,   125,   126,   127,   128,   639,   640,   129,   130,   641,
     642,   133,     0,   134,   135,   136,   137,   643,     0,   644,
       0,   139,   140,   141,   142,   143,   589,   144,   145,   146,
       0,   147,   148,   149,   150,   151,   152,     0,   590,   153,
     154,   155,   645,   646,   647,   648,   649,   650,   651,   156,
     157,   158,   159,   160,   161,   652,   653,   164,   654,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
     174,   175,   176,     0,     0,   177,   178,   655,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,     0,   188,
     189,   190,   191,   656,   193,   194,   195,   196,   657,   658,
     198,     0,   199,   200,   659,   202,     0,   203,     0,   204,
     592,     0,   593,   205,   206,   207,   208,     0,   209,     0,
     210,   211,     0,   212,   213,   214,   215,   216,   594,   217,
     218,   219,   220,     0,   221,   222,   223,   224,   225,   226,
       0,   227,   595,   228,   229,   230,   231,   232,   660,   661,
       0,   662,     0,   236,   596,   597,   237,   598,   238,   239,
     240,   241,   242,     0,     0,   243,   599,   244,   600,     0,
     245,   246,   247,   663,   664,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   665,   601,   666,   266,   267,   268,   269,   667,   270,
     271,   602,   272,   668,   669,   274,   670,   276,   277,   278,
       0,   279,   280,     0,     0,   671,   282,   283,     0,     0,
     284,   285,   603,   286,   604,   672,   288,   289,   290,   291,
     292,   293,   294,   295,   296,     0,   297,   298,   673,   300,
     301,   302,   461,   304,   305,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   674,   316,   317,   318,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,     0,   332,   333,   605,   334,   335,   336,
     675,   338,   339,   340,   341,   342,   343,   344,   345,   346,
      23,   347,   348,   349,   350,   351,   676,   352,   353,   354,
     355,   356,   606,   357,   358,   677,   360,     0,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     678,     0,   374,   375,    27,   376,   607,   377,   378,   379,
     380,   381,     0,   679,   680,     0,     0,   384,   385,   681,
     387,   682,   683,   389,   390,   391,   392,   393,   394,   395,
       0,     0,   396,   397,   398,   399,   400,   684,     0,   401,
     402,   403,   404,   405,   608,   685,     0,   408,   609,   409,
     410,   411,   412,     0,     0,   413,     0,    30,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   686,     0,
      31,     0,     0,     0,     0,   687,   688,     0,     0,     0,
       0,     0,     0,     0,   690,  2429,     0,     0,     0,   691,
     629,   630,   475,   631,   632,   633,   634,   635,     0,     0,
       0,     0,     0,     0,     0,   100,   101,   102,   103,   104,
     105,   106,   107,     0,   109,   110,   111,     0,     0,     0,
       0,     0,     0,     0,   112,   113,     0,   114,   115,   116,
     586,   117,   118,   119,   120,   636,   587,   637,   638,     0,
     124,   125,   126,   127,   128,   639,   640,   129,   130,   641,
     642,   133,     0,   134,   135,   136,   137,   643,     0,   644,
       0,   139,   140,   141,   142,   143,   589,   144,   145,   146,
       0,   147,   148,   149,   150,   151,   152,     0,   590,   153,
     154,   155,   645,   646,   647,   648,   649,   650,   651,   156,
     157,   158,   159,   160,   161,   652,   653,   164,   654,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
     174,   175,   176,     0,     0,   177,   178,   655,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,     0,   188,
     189,   190,   191,   656,   193,   194,   195,   196,   657,   658,
     198,     0,   199,   200,   659,   202,     0,   203,     0,   204,
     592,     0,   593,   205,   206,   207,   208,     0,   209,     0,
     210,   211,     0,   212,   213,   214,   215,   216,   594,   217,
     218,   219,   220,     0,   221,   222,   223,   224,   225,   226,
       0,   227,   595,   228,   229,   230,   231,   232,   660,   661,
       0,   662,     0,   236,   596,   597,   237,   598,   238,   239,
     240,   241,   242,     0,     0,   243,   599,   244,   600,     0,
     245,   246,   247,   663,   664,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   665,   601,   666,   266,   267,   268,   269,   667,   270,
     271,   602,   272,   668,   669,   274,   670,   276,   277,   278,
       0,   279,   280,     0,     0,   671,   282,   283,     0,     0,
     284,   285,   603,   286,   604,   672,   288,   289,   290,   291,
     292,   293,   294,   295,   296,     0,   297,   298,   673,   300,
     301,   302,   461,   304,   305,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   674,   316,   317,   318,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,     0,   332,   333,   605,   334,   335,   336,
     675,   338,   339,   340,   341,   342,   343,   344,   345,   346,
      23,   347,   348,   349,   350,   351,   676,   352,   353,   354,
     355,   356,   606,   357,   358,   677,   360,     0,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     678,     0,   374,   375,    27,   376,   607,   377,   378,   379,
     380,   381,     0,   679,   680,     0,     0,   384,   385,   681,
     387,   682,   683,   389,   390,   391,   392,   393,   394,   395,
       0,     0,   396,   397,   398,   399,   400,   684,     0,   401,
     402,   403,   404,   405,   608,   685,     0,   408,   609,   409,
     410,   411,   412,     0,     0,   413,     0,    30,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   686,     0,
      31,     0,     0,     0,     0,   687,   688,     0,     0,     0,
       0,     0,     0,     0,   690,     0,     0,     0,     0,   691,
     629,   630,   475,   631,   632,   633,   634,   635,     0,     0,
       0,     0,     0,     0,     0,   100,   101,   102,   103,   104,
     105,   106,   107,     0,   109,   110,   111,     0,     0,     0,
       0,     0,     0,     0,   112,   113,     0,   114,   115,   116,
     586,   117,   118,   119,   120,   636,   587,   637,   638,  1377,
     124,   125,   126,   127,   128,   639,   640,   129,   130,   641,
     642,   133,     0,   134,   135,   136,   137,   643,     0,   644,
       0,   139,   140,   141,   142,   143,   589,   144,   145,   146,
       0,   147,   148,   149,   150,   151,   152,     0,   590,   153,
     154,   155,   645,   646,   647,   648,   649,   650,   651,   156,
     157,   158,   159,   160,   161,   652,   653,   164,   654,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
     174,   175,   176,     0,     0,   177,   178,   655,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,     0,   188,
     189,   190,   191,   656,   193,   194,   195,   196,   657,   658,
     198,     0,   199,   200,   659,   202,     0,   203,     0,   204,
     592,  1378,   593,   205,   206,   207,   208,     0,   209,     0,
     210,   211,     0,   212,   213,   214,   215,   216,   594,   217,
     218,   219,   220,     0,   221,   222,   223,   224,   225,   226,
       0,   227,   595,   228,   229,   230,   231,   232,   660,   661,
       0,   662,     0,   236,   596,   597,   237,   598,   238,   239,
     240,   241,   242,     0,  1379,   243,   599,   244,   600,     0,
     245,   246,   247,   663,   664,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   665,   601,   666,   266,   267,   268,   269,   667,   270,
     271,   602,   272,   668,   669,   274,   670,   276,   277,   278,
       0,   279,   280,     0,     0,   671,   282,   283,     0,     0,
     284,   285,   603,   286,   604,   672,   288,   289,   290,   291,
     292,   293,   294,   295,   296,     0,   297,   298,   673,   300,
     301,   302,   461,   304,   305,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   674,   316,   317,   318,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,     0,   332,   333,   605,   334,   335,   336,
     675,   338,   339,   340,   341,   342,   343,   344,   345,   346,
       0,   347,   348,   349,   350,   351,   676,   352,   353,   354,
     355,   356,   606,   357,   358,   677,   360,     0,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     678,     0,   374,   375,     0,   376,   607,   377,   378,   379,
     380,   381,     0,   679,   680,     0,  1380,   384,   385,   681,
     387,   682,   683,   389,   390,   391,   392,   393,   394,   395,
       0,     0,   396,   397,   398,   399,   400,   684,     0,   401,
     402,   403,   404,   405,   406,   685,     0,   408,   609,   409,
     410,   411,   412,     0,     0,   413,     0,     0,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   686,     0,
       0,     0,     0,     0,     0,   687,   688,     0,     0,     0,
       0,     0,     0,     0,   690,     0,     0,     0,     0,   691,
     629,   630,   475,   631,   632,   633,   634,   635,     0,     0,
       0,     0,     0,     0,     0,   100,   101,   102,   103,   104,
     105,   106,   107,     0,   109,   110,   111,     0,     0,     0,
       0,     0,     0,     0,   112,   113,     0,   114,   115,   116,
     586,   117,   118,   119,   120,   636,   587,   637,   638,     0,
     124,   125,   126,   127,   128,   639,   640,   129,   130,   641,
     642,   133,     0,   134,   135,   136,   137,   643,     0,   644,
       0,   139,   140,   141,   142,   143,   589,   144,   145,   146,
       0,   147,   148,   149,   150,   151,   152,     0,   590,   153,
     154,   155,   645,   646,   647,   648,   649,   650,   651,   156,
     157,   158,   159,   160,   161,   652,   653,   164,   654,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
     174,   175,   176,     0,     0,   177,   178,   655,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,     0,   188,
     189,   190,   191,   656,   193,   194,   195,   196,   657,   658,
     198,     0,   199,   200,   659,   202,     0,   203,     0,   204,
     592,     0,   593,   205,   206,   207,   208,     0,   209,     0,
     210,   211,     0,   212,   213,   214,   215,   216,   594,   217,
     218,   219,   220,     0,   221,   222,   223,   224,   225,   226,
       0,   227,   595,   228,   229,   230,   231,   232,   660,   661,
       0,   662,     0,   236,   596,   597,   237,   598,   238,   239,
     240,   241,   242,     0,     0,   243,   599,   244,   600,     0,
     245,   246,   247,   663,   664,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   665,   601,   666,   266,   267,   268,   269,   667,   270,
     271,   602,   272,   668,   669,   274,   670,   276,   277,   278,
       0,   279,   280,     0,     0,   671,   282,   283,     0,     0,
     284,   285,   603,   286,   604,   672,   288,   289,   290,   291,
     292,   293,   294,   295,   296,     0,   297,   298,   673,   300,
     301,   302,   461,   304,   305,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   674,   316,   317,   318,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,     0,   332,   333,   605,   334,   335,   336,
     675,   338,   339,   340,   341,   342,   343,   344,   345,   346,
       0,   347,   348,   349,   350,   351,   676,   352,   353,   354,
     355,   356,   606,   357,   358,   677,   360,     0,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     678,     0,   374,   375,     0,   376,   607,   377,   378,   379,
     380,   381,     0,   679,   680,     0,     0,   384,   385,   681,
     387,   682,   683,   389,   390,   391,   392,   393,   394,   395,
       0,     0,   396,   397,   398,   399,   400,   684,     0,   401,
     402,   403,   404,   405,   406,   685,     0,   408,   609,   409,
     410,   411,   412,     0,     0,   413,     0,     0,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   686,     0,
       0,     0,     0,     0,     0,   687,   688,   689,     0,     0,
       0,     0,     0,     0,   690,     0,     0,     0,     0,   691,
     629,   630,   475,   631,   632,   633,   634,   635,     0,     0,
       0,     0,     0,     0,     0,   100,   101,   102,   103,   104,
     105,   106,   107,  1153,   109,   110,   111,     0,     0,     0,
       0,     0,     0,     0,   112,   113,     0,   114,   115,   116,
     586,   117,   118,   119,   120,   636,   587,   637,   638,     0,
     124,   125,   126,   127,   128,   639,   640,   129,   130,   641,
     642,   133,     0,   134,   135,   136,   137,   643,     0,   644,
       0,   139,   140,   141,   142,   143,   589,   144,   145,   146,
       0,   147,   148,   149,   150,   151,   152,     0,   590,   153,
     154,   155,   645,   646,   647,   648,   649,   650,   651,   156,
     157,   158,   159,   160,   161,   652,   653,   164,   654,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
     174,   175,   176,     0,     0,   177,   178,   655,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,     0,   188,
     189,   190,   191,   656,   193,   194,   195,   196,   657,   658,
     198,     0,   199,   200,   659,   202,     0,   203,     0,   204,
     592,     0,   593,   205,   206,   207,   208,     0,   209,     0,
     210,   211,     0,   212,   213,   214,   215,   216,   594,   217,
     218,   219,   220,     0,   221,   222,   223,   224,   225,   226,
       0,   227,   595,   228,   229,   230,   231,   232,   660,   661,
       0,   662,     0,   236,   596,   597,   237,   598,   238,   239,
     240,   241,   242,     0,     0,   243,   599,   244,   600,     0,
     245,   246,   247,   663,   664,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   665,   601,   666,   266,   267,   268,   269,   667,   270,
     271,   602,   272,   668,   669,   274,   670,   276,   277,   278,
       0,   279,   280,     0,     0,   671,   282,   283,     0,     0,
     284,   285,   603,   286,   604,   672,   288,   289,   290,   291,
     292,   293,   294,   295,   296,     0,   297,   298,   673,   300,
     301,   302,   461,   304,   305,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   674,   316,   317,   318,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,     0,   332,   333,   605,   334,   335,   336,
     675,   338,   339,   340,   341,   342,   343,   344,   345,   346,
       0,   347,   348,   349,   350,   351,   676,   352,   353,   354,
     355,   356,   606,   357,   358,   677,   360,     0,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     678,     0,   374,   375,     0,   376,   607,   377,   378,   379,
     380,   381,     0,   679,   680,     0,     0,   384,   385,   681,
     387,   682,   683,   389,   390,   391,   392,   393,   394,   395,
       0,     0,   396,   397,   398,   399,   400,   684,     0,   401,
     402,   403,   404,   405,   406,   685,     0,   408,   609,   409,
     410,   411,   412,     0,     0,   413,     0,     0,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   686,     0,
       0,     0,     0,     0,     0,   687,   688,     0,     0,     0,
       0,     0,     0,     0,   690,     0,     0,     0,     0,   691,
     629,   630,   475,   631,   632,   633,   634,   635,     0,     0,
       0,     0,     0,     0,     0,   100,   101,   102,   103,   104,
     105,   106,   107,     0,   109,   110,   111,     0,     0,     0,
       0,     0,     0,     0,   112,   113,     0,   114,   115,   116,
     586,   117,   118,   119,   120,   636,   587,   637,   638,     0,
     124,   125,   126,   127,   128,   639,   640,   129,   130,   641,
     642,   133,     0,   134,   135,   136,   137,   643,     0,   644,
       0,   139,   140,   141,   142,   143,   589,   144,   145,   146,
       0,   147,   148,   149,   150,   151,   152,     0,   590,   153,
     154,   155,   645,   646,   647,   648,   649,   650,   651,   156,
     157,   158,   159,   160,   161,   652,   653,   164,   654,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
     174,   175,   176,     0,     0,   177,   178,   655,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,     0,   188,
     189,   190,   191,   656,   193,   194,   195,   196,   657,   658,
     198,     0,   199,   200,   659,   202,     0,   203,     0,   204,
     592,     0,   593,   205,   206,   207,   208,     0,   209,     0,
     210,   211,     0,   212,   213,   214,   215,   216,   594,   217,
     218,   219,   220,     0,   221,   222,   223,   224,   225,   226,
       0,   227,   595,   228,   229,   230,   231,   232,   660,   661,
       0,   662,     0,   236,   596,   597,   237,   598,   238,   239,
     240,   241,   242,     0,     0,   243,   599,   244,   600,     0,
     245,   246,   247,   663,   664,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   665,   601,   666,   266,   267,   268,   269,   667,   270,
     271,   602,   272,   668,   669,   274,   670,   276,   277,   278,
       0,   279,   280,     0,     0,   671,   282,   283,     0,     0,
     284,   285,   603,   286,   604,   672,   288,   289,   290,   291,
     292,   293,   294,   295,   296,     0,   297,   298,   673,   300,
     301,   302,   461,   304,   305,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   674,   316,   317,   318,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,     0,   332,   333,   605,   334,   335,   336,
     675,   338,   339,   340,   341,   342,   343,   344,   345,   346,
       0,   347,   348,   349,   350,   351,   676,   352,   353,   354,
     355,   356,   606,   357,   358,   677,   360,     0,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     678,     0,   374,   375,     0,   376,   607,   377,   378,   379,
     380,   381,     0,   679,   680,     0,     0,   384,   385,   681,
     387,   682,   683,   389,   390,   391,   392,   393,   394,   395,
       0,     0,   396,   397,   398,   399,   400,   684,     0,   401,
     402,   403,   404,   405,   406,   685,     0,   408,   609,   409,
     410,   411,   412,     0,     0,   413,     0,     0,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   686,     0,
       0,     0,     0,     0,     0,   687,   688,     0,     0,     0,
       0,     0,     0,     0,   690,  1367,     0,     0,     0,   691,
     629,   630,   475,   631,   632,   633,   634,   635,     0,     0,
       0,     0,     0,     0,     0,   100,   101,   102,   103,   104,
     105,   106,   107,     0,   109,   110,   111,     0,     0,     0,
       0,     0,     0,     0,   112,   113,     0,   114,   115,   116,
     586,   117,   118,   119,   120,   636,   587,   637,   638,     0,
     124,   125,   126,   127,   128,   639,   640,   129,   130,   641,
     642,   133,     0,   134,   135,   136,   137,   643,     0,   644,
       0,   139,   140,   141,   142,   143,   589,   144,   145,   146,
       0,   147,   148,   149,   150,   151,   152,     0,   590,   153,
     154,   155,   645,   646,   647,   648,   649,   650,   651,   156,
     157,   158,   159,   160,   161,   652,   653,   164,   654,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
     174,   175,   176,     0,     0,   177,   178,   655,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,     0,   188,
     189,   190,   191,   656,   193,   194,   195,   196,   657,   658,
     198,     0,   199,   200,   659,   202,     0,   203,     0,   204,
     592,  1378,   593,   205,   206,   207,   208,     0,   209,     0,
     210,   211,     0,   212,   213,   214,   215,   216,   594,   217,
     218,   219,   220,     0,   221,   222,   223,   224,   225,   226,
       0,   227,   595,   228,   229,   230,   231,   232,   660,   661,
       0,   662,     0,   236,   596,   597,   237,   598,   238,   239,
     240,   241,   242,     0,     0,   243,   599,   244,   600,     0,
     245,   246,   247,   663,   664,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   665,   601,   666,   266,   267,   268,   269,   667,   270,
     271,   602,   272,   668,   669,   274,   670,   276,   277,   278,
       0,   279,   280,     0,     0,   671,   282,   283,     0,     0,
     284,   285,   603,   286,   604,   672,   288,   289,   290,   291,
     292,   293,   294,   295,   296,     0,   297,   298,   673,   300,
     301,   302,   461,   304,   305,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   674,   316,   317,   318,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,     0,   332,   333,   605,   334,   335,   336,
     675,   338,   339,   340,   341,   342,   343,   344,   345,   346,
       0,   347,   348,   349,   350,   351,   676,   352,   353,   354,
     355,   356,   606,   357,   358,   677,   360,     0,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     678,     0,   374,   375,     0,   376,   607,   377,   378,   379,
     380,   381,     0,   679,   680,     0,     0,   384,   385,   681,
     387,   682,   683,   389,   390,   391,   392,   393,   394,   395,
       0,     0,   396,   397,   398,   399,   400,   684,     0,   401,
     402,   403,   404,   405,   406,   685,     0,   408,   609,   409,
     410,   411,   412,     0,     0,   413,     0,     0,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   686,     0,
       0,     0,     0,     0,     0,   687,   688,     0,     0,     0,
       0,     0,     0,     0,   690,     0,     0,     0,     0,   691,
     629,   630,   475,   631,   632,   633,   634,   635,     0,     0,
       0,     0,     0,     0,     0,   100,   101,   102,   103,   104,
     105,   106,   107,     0,   109,   110,   111,     0,     0,     0,
       0,     0,     0,     0,   112,   113,     0,   114,   115,   116,
     586,   117,   118,   119,   120,   636,   587,   637,   638,     0,
     124,   125,   126,   127,   128,   639,   640,   129,   130,   641,
     642,   133,     0,   134,   135,   136,   137,   643,     0,   644,
       0,   139,   140,   141,   142,   143,   589,   144,   145,   146,
       0,   147,   148,   149,   150,   151,   152,     0,   590,   153,
     154,   155,   645,   646,   647,   648,   649,   650,   651,   156,
     157,   158,   159,   160,   161,   652,   653,   164,   654,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
     174,   175,   176,     0,     0,   177,   178,   655,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,     0,   188,
     189,   190,   191,   656,   193,   194,   195,   196,   657,   658,
     198,     0,   199,   200,   659,   202,     0,   203,     0,   204,
     592,     0,   593,   205,   206,   207,   208,     0,   209,     0,
     210,   211,     0,   212,   213,   214,   215,   216,   594,   217,
     218,   219,   220,     0,   221,   222,   223,   224,   225,   226,
       0,   227,   595,   228,   229,   230,   231,   232,   660,   661,
       0,   662,     0,   236,   596,   597,   237,   598,   238,   239,
     240,   241,   242,     0,     0,   243,   599,   244,   600,     0,
     245,   246,   247,   663,   664,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   665,   601,   666,   266,   267,   268,   269,   667,   270,
     271,   602,   272,   668,   669,   274,   670,   276,   277,   278,
       0,   279,   280,     0,     0,   671,   282,   283,     0,     0,
     284,   285,   603,   286,   604,   672,   288,   289,   290,   291,
     292,   293,   294,   295,   296,     0,   297,   298,   673,   300,
     301,   302,   461,   304,   305,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   674,   316,   317,   318,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,     0,   332,   333,   605,   334,   335,   336,
     675,   338,   339,   340,   341,   342,   343,   344,   345,   346,
       0,   347,   348,   349,   350,   351,   676,   352,   353,   354,
     355,   356,   606,   357,   358,   677,   360,     0,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     678,     0,   374,   375,     0,   376,   607,   377,   378,   379,
     380,   381,     0,   679,   680,     0,     0,   384,   385,   681,
     387,   682,   683,   389,   390,   391,   392,   393,   394,   395,
       0,     0,   396,   397,   398,   399,   400,   684,     0,   401,
     402,   403,   404,   405,   406,   685,  2027,   408,   609,   409,
     410,   411,   412,     0,     0,   413,     0,     0,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   686,     0,
       0,     0,     0,     0,     0,   687,   688,     0,     0,     0,
       0,     0,     0,     0,   690,     0,     0,     0,     0,   691,
     629,   630,   475,   631,   632,   633,   634,   635,     0,     0,
       0,     0,     0,     0,     0,   100,   101,   102,   103,   104,
     105,   106,   107,     0,   109,   110,   111,     0,     0,     0,
       0,     0,     0,     0,   112,   113,     0,   114,   115,   116,
     586,   117,   118,   119,   120,   636,   587,   637,   638,     0,
     124,   125,   126,   127,   128,   639,   640,   129,   130,   641,
     642,   133,     0,   134,   135,   136,   137,   643,     0,   644,
       0,   139,   140,   141,   142,   143,   589,   144,   145,   146,
       0,   147,   148,   149,   150,   151,   152,     0,   590,   153,
     154,   155,   645,   646,   647,   648,   649,   650,   651,   156,
     157,   158,   159,   160,   161,   652,   653,   164,   654,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
     174,   175,   176,     0,     0,   177,   178,   655,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,     0,   188,
     189,   190,   191,   656,   193,   194,   195,   196,   657,   658,
     198,     0,   199,   200,   659,   202,     0,   203,     0,   204,
     592,     0,   593,   205,   206,   207,   208,     0,   209,     0,
     210,   211,     0,   212,   213,   214,   215,   216,   594,   217,
     218,   219,   220,     0,   221,   222,   223,   224,   225,   226,
       0,   227,   595,   228,   229,   230,   231,   232,   660,   661,
       0,   662,     0,   236,   596,   597,   237,   598,   238,   239,
     240,   241,   242,     0,     0,   243,   599,   244,   600,     0,
     245,   246,   247,   663,   664,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   665,   601,   666,   266,   267,   268,   269,   667,   270,
     271,   602,   272,   668,   669,   274,   670,   276,   277,   278,
       0,   279,   280,     0,     0,   671,   282,   283,     0,     0,
     284,   285,   603,   286,   604,   672,   288,   289,   290,   291,
     292,   293,   294,   295,   296,     0,   297,   298,   673,   300,
     301,   302,   461,   304,   305,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   674,   316,   317,   318,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,     0,   332,   333,   605,   334,   335,   336,
     675,   338,   339,   340,   341,   342,   343,   344,   345,   346,
       0,   347,   348,   349,   350,   351,   676,   352,   353,   354,
     355,   356,   606,   357,   358,   677,   360,     0,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     678,     0,   374,   375,     0,   376,   607,   377,   378,   379,
     380,   381,     0,   679,   680,     0,     0,   384,   385,   681,
     387,   682,   683,   389,   390,   391,   392,   393,   394,   395,
       0,     0,   396,   397,   398,   399,   400,   684,     0,   401,
     402,   403,   404,   405,   406,   685,     0,   408,   609,   409,
     410,   411,   412,     0,     0,   413,     0,     0,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   686,     0,
       0,     0,     0,     0,     0,   687,   688,     0,     0,     0,
       0,     0,     0,     0,   690,     0,     0,     0,     0,   691,
     629,   630,   475,   631,   632,   633,   634,   635,     0,     0,
       0,     0,     0,     0,     0,   100,   101,   102,   103,   104,
     105,   106,   107,     0,   109,   110,   111,     0,     0,     0,
       0,     0,     0,     0,   112,   113,     0,   114,   115,   116,
     586,   117,   118,   119,   120,   636,   587,   637,   638,     0,
     124,   125,   126,   127,   128,   639,   640,   129,   130,   641,
     642,   133,     0,   134,   135,   136,   137,   643,     0,   644,
       0,   139,   140,   141,   142,   143,   589,   144,   145,   146,
       0,   147,   148,   149,   150,   151,   152,     0,   590,   153,
     154,   155,   645,   646,   647,   648,   649,   650,   651,   156,
     157,   158,   159,   160,   161,   652,   653,   164,   654,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
     174,   175,   176,     0,     0,   177,   178,   655,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,     0,   188,
     189,   190,   191,   656,   193,   194,   195,   196,   657,   658,
     198,     0,   199,   200,   659,   202,     0,   203,     0,   204,
     592,     0,   593,   205,   206,   207,   208,     0,   209,     0,
     210,   211,     0,   212,   213,   214,   215,   216,   594,   217,
     218,   219,   220,     0,   221,   222,   223,   224,   225,   226,
       0,   227,   595,   228,   229,   230,   231,   232,   660,   661,
       0,   662,     0,   236,   596,   597,   237,   598,   238,   239,
     240,   241,   242,     0,     0,   243,   599,   244,   600,     0,
     245,   246,   247,   663,   664,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   665,   601,   666,   266,   267,   268,   269,   667,   270,
     271,   602,   272,   668,   669,   274,   670,   276,   277,   278,
       0,   279,   280,     0,     0,   671,   282,   283,     0,     0,
     284,   285,   603,   286,   604,   672,   288,   289,   290,   291,
     292,   293,   294,   295,   296,     0,   297,   298,   673,   300,
     301,   302,   461,   304,   305,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   674,   316,   317,   318,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,     0,   332,   333,   605,   334,   335,   336,
     675,   338,   339,   340,   341,   342,   343,   344,   345,   346,
       0,   347,   348,   349,   350,   351,   676,   352,   353,   354,
     355,   356,   606,   357,   358,   677,   360,     0,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     678,     0,   374,   375,     0,   376,   607,   377,   378,   379,
     380,   381,     0,   679,   680,     0,     0,   384,   385,   681,
     387,   682,   683,   389,   390,   391,   392,   393,   394,   395,
       0,     0,   396,   397,   398,   399,   400,   684,     0,   401,
     402,   403,   404,   405,   406,   685,     0,   408,   609,   409,
     410,   411,   412,     0,     0,   413,     0,     0,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   686,     0,
       0,     0,     0,     0,     0,  1156,  1157,     0,     0,     0,
       0,     0,     0,     0,   690,     0,     0,     0,     0,   691,
     629,  1504,   475,   631,   632,   633,   634,   635,     0,     0,
       0,     0,     0,     0,     0,   100,   101,   102,   103,   104,
     105,   106,   107,     0,   109,   110,   111,     0,     0,     0,
       0,     0,     0,     0,   112,   113,     0,   114,   115,   116,
     586,   117,   118,   119,   120,   636,   587,   637,   638,     0,
     124,   125,   126,   127,   128,   639,   640,   129,   130,   641,
     642,   133,     0,   134,   135,   136,   137,   643,     0,   644,
       0,   139,   140,   141,   142,   143,   589,   144,   145,   146,
       0,   147,   148,   149,   150,   151,   152,     0,   590,   153,
     154,   155,   645,   646,   647,   648,   649,   650,   651,   156,
     157,   158,   159,   160,   161,   652,   653,   164,   654,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
     174,   175,   176,     0,     0,   177,   178,   655,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,     0,   188,
     189,   190,   191,   656,   193,   194,   195,   196,   657,   658,
     198,     0,   199,   200,   659,   202,     0,   203,     0,   204,
     592,     0,   593,   205,   206,   207,   208,     0,   209,     0,
     210,   211,     0,   212,   213,   214,   215,   216,   594,   217,
     218,   219,   220,     0,   221,   222,   223,   224,   225,   226,
       0,   227,   595,   228,   229,   230,   231,   232,   660,   661,
       0,   662,     0,   236,   596,   597,   237,   598,   238,   239,
     240,   241,   242,     0,     0,   243,   599,   244,   600,     0,
     245,   246,   247,   663,   664,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   665,   601,   666,   266,   267,   268,   269,   667,   270,
     271,   602,   272,   668,   669,   274,   670,   276,   277,   278,
       0,   279,   280,     0,     0,   671,   282,   283,     0,     0,
     284,   285,   603,   286,   604,   672,   288,   289,   290,   291,
     292,   293,   294,   295,   296,     0,   297,   298,   673,   300,
     301,   302,   461,   304,   305,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   674,   316,   317,   318,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,     0,   332,   333,   605,   334,   335,   336,
     675,   338,   339,   340,   341,   342,   343,   344,   345,   346,
       0,   347,   348,   349,   350,   351,   676,   352,   353,   354,
     355,   356,   606,   357,   358,   677,   360,     0,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     678,     0,   374,   375,     0,   376,   607,   377,   378,   379,
     380,   381,     0,   679,   680,     0,     0,   384,   385,   681,
     387,   682,   683,   389,   390,   391,   392,   393,   394,   395,
       0,     0,   396,   397,   398,   399,   400,   684,     0,   401,
     402,   403,   404,   405,   406,   685,     0,   408,   609,   409,
     410,   411,   412,     0,     0,   413,     0,     0,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   686,     0,
       0,     0,     0,     0,     0,   687,   688,     0,     0,     0,
       0,     0,     0,     0,   690,     0,     0,     0,     0,   691,
     629,   630,   475,   631,   632,   633,   634,   635,     0,     0,
       0,     0,     0,     0,     0,   100,   101,   102,   103,   104,
     105,   106,   107,     0,   109,   110,   111,     0,     0,     0,
       0,     0,     0,     0,   112,   113,     0,   114,   115,   116,
     586,   117,   118,   119,   120,   636,   587,   637,   638,     0,
     124,   125,   126,   127,   128,   639,   640,   129,   130,   641,
     642,   133,     0,   134,   135,   136,   137,   643,     0,   644,
       0,   139,   140,   141,   142,   143,   589,   144,   145,   146,
       0,   147,   148,   149,   150,   151,   152,     0,   590,   153,
     154,   155,   645,   646,   647,   648,   649,   650,   651,   156,
     157,   158,   159,   160,   161,   652,   653,   164,   654,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
     174,   175,   176,     0,     0,   177,   178,   655,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,     0,   188,
     189,   190,   191,   656,   193,   194,   195,   196,   657,   658,
     198,     0,   199,   200,   659,   202,     0,   203,     0,   204,
     592,     0,   593,   205,   206,   207,   208,     0,   209,     0,
     210,   211,     0,   212,   213,   214,   215,   216,   594,   217,
     218,   219,   220,     0,   221,   222,   223,   224,   225,   226,
       0,   227,   595,   228,   229,   230,   231,   232,   660,   661,
       0,   662,     0,   236,   596,   597,   237,   598,   238,   239,
     240,   241,   242,     0,     0,   243,   599,   244,   600,     0,
     245,   246,   247,   663,   664,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   665,   601,   666,   266,   267,   268,   269,   667,   270,
     271,   602,   272,   668,   669,   274,   670,   276,   277,   278,
       0,   279,   280,     0,     0,   671,   282,   283,     0,     0,
     284,   285,   603,   286,   604,   672,   288,   289,   290,   291,
     292,   293,   294,   295,   296,     0,   297,   298,   673,   300,
     301,   302,   461,   304,   305,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   674,   316,   317,   318,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,     0,   332,   333,   605,   334,   335,   336,
     675,   338,   339,   340,   341,   342,   343,   344,   345,   346,
       0,   347,   348,   349,   350,   351,   676,   352,   353,   354,
     355,   356,   606,   357,   358,   677,   360,     0,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     678,     0,   374,   375,     0,   376,   607,   377,   378,   379,
     380,   381,     0,   679,   680,     0,     0,   384,   385,   681,
     387,   682,   683,   389,   390,   391,   392,   393,   394,   395,
       0,     0,   396,   397,   398,   399,   400,   684,     0,   401,
     402,   403,   404,   405,   406,   685,     0,   408,   609,   409,
     410,   411,   412,     0,     0,   413,     0,     0,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   686,     0,
       0,     0,     0,     0,     0,   687,   688,     0,     0,     0,
       0,     0,     0,     0,  2332,     0,     0,     0,     0,   691,
     629,   630,   475,   631,   632,   633,   634,   635,     0,     0,
       0,     0,     0,     0,     0,   100,   101,   102,   103,   104,
     105,   106,   107,     0,   109,   110,   111,     0,     0,     0,
       0,     0,     0,     0,   112,   113,     0,   114,   115,   116,
     586,   117,   118,   119,  2523,   636,   587,   637,   638,     0,
     124,   125,   126,   127,   128,   639,   640,   129,   130,   641,
     642,   133,     0,   134,   135,   136,   137,   643,     0,   644,
       0,   139,   140,   141,   142,   143,   589,   144,   145,   146,
       0,   147,   148,   149,   150,   151,   152,     0,   590,   153,
     154,  2524,   645,   646,   647,   648,   649,   650,   651,   156,
     157,   158,   159,   160,   161,   652,   653,   164,   654,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
     174,   175,   176,     0,     0,   177,   178,   655,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,     0,   188,
     189,   190,   191,   656,   193,   194,   195,   196,   657,   658,
     198,     0,   199,   200,   659,   202,     0,   203,     0,   204,
     592,     0,   593,   205,   206,   207,   208,     0,   209,     0,
     210,   211,     0,   212,   213,   214,   215,   216,   594,   217,
     218,   219,   220,     0,   221,   222,   223,   224,   225,   226,
       0,   227,   595,   228,   229,   230,   231,   232,   660,   661,
       0,   662,     0,   236,   596,   597,   237,   598,   238,   239,
     240,   241,   242,     0,     0,   243,   599,   244,   600,     0,
     245,   246,   247,   663,   664,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   665,   601,   666,   266,   267,   268,   269,   667,   270,
     271,   602,   272,   668,   669,   274,   670,   276,   277,   278,
       0,   279,   280,     0,     0,   671,   282,   283,     0,     0,
     284,   285,   603,   286,   604,   672,   288,   289,   290,   291,
     292,   293,   294,   295,   296,     0,   297,   298,   673,   300,
     301,   302,   461,   304,   305,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   674,   316,   317,   318,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,     0,   332,   333,   605,   334,   335,   336,
     675,   338,   339,   340,   341,   342,   343,   344,   345,   346,
       0,   347,   348,   349,   350,   351,   676,   352,   353,   354,
     355,   356,   606,   357,   358,   677,   360,     0,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     678,     0,   374,   375,     0,   376,   607,   377,   378,   379,
     380,   381,     0,   679,   680,     0,     0,   384,   385,   681,
     387,   682,   683,   389,   390,   391,   392,  2525,   394,   395,
       0,     0,   396,   397,   398,   399,   400,   684,     0,   401,
     402,   403,   404,   405,   406,   685,     0,   408,   609,   409,
     410,   411,   412,     0,     0,   413,     0,     0,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   686,     0,
       0,     0,     0,     0,     0,   687,   688,     0,     0,     0,
       0,     0,     0,     0,   690,     0,     0,     0,     0,   691,
     629,   630,   475,   631,   632,   633,   634,   635,     0,     0,
       0,     0,     0,     0,     0,   100,   101,   102,   103,   104,
     105,   106,   107,     0,   109,   110,   111,     0,     0,     0,
       0,     0,     0,     0,   112,   113,     0,   114,   115,   116,
     586,   117,   118,   119,   120,   636,   587,   637,   638,     0,
     124,   125,   126,   127,   128,   639,   640,   129,   130,   641,
     642,   133,     0,   134,   135,   136,   137,   643,     0,   644,
       0,   139,   140,   141,   142,   143,   589,   144,   145,   146,
       0,   147,   148,   149,   150,   151,   152,     0,   590,   153,
     154,  2524,   645,   646,   647,   648,   649,   650,   651,   156,
     157,   158,   159,   160,   161,   652,   653,   164,   654,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
     174,   175,   176,     0,     0,   177,   178,   655,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,     0,   188,
     189,   190,   191,   656,   193,   194,   195,   196,   657,   658,
     198,     0,   199,   200,   659,   202,     0,   203,     0,   204,
     592,     0,   593,   205,   206,   207,   208,     0,   209,     0,
     210,   211,     0,   212,   213,   214,   215,   216,   594,   217,
     218,   219,   220,     0,   221,   222,   223,   224,   225,   226,
       0,   227,   595,   228,   229,   230,   231,   232,   660,   661,
       0,   662,     0,   236,   596,   597,   237,   598,   238,   239,
     240,   241,   242,     0,     0,   243,   599,   244,   600,     0,
     245,   246,   247,   663,   664,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   665,   601,   666,   266,   267,   268,   269,   667,   270,
     271,   602,   272,   668,   669,   274,   670,   276,   277,   278,
       0,   279,   280,     0,     0,   671,   282,   283,     0,     0,
     284,   285,   603,   286,   604,   672,   288,   289,   290,   291,
     292,   293,   294,   295,   296,     0,   297,   298,   673,   300,
     301,   302,   461,   304,   305,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   674,   316,   317,   318,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,     0,   332,   333,   605,   334,   335,   336,
     675,   338,   339,   340,   341,   342,   343,   344,   345,   346,
       0,   347,   348,   349,   350,   351,   676,   352,   353,   354,
     355,   356,   606,   357,   358,   677,   360,     0,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     678,     0,   374,   375,     0,   376,   607,   377,   378,   379,
     380,   381,     0,   679,   680,     0,     0,   384,   385,   681,
     387,   682,   683,   389,   390,   391,   392,  2525,   394,   395,
       0,     0,   396,   397,   398,   399,   400,   684,     0,   401,
     402,   403,   404,   405,   406,   685,     0,   408,   609,   409,
     410,   411,   412,     0,     0,   413,     0,     0,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   686,     0,
       0,     0,     0,     0,     0,   687,   688,     0,     0,     0,
       0,     0,     0,     0,   690,     0,     0,     0,     0,   691,
     629,   630,   475,   631,   632,   633,   634,   635,     0,     0,
       0,     0,     0,     0,     0,   100,   101,   102,   103,   104,
     105,   106,   107,     0,   109,   110,   111,     0,     0,     0,
       0,     0,     0,     0,   112,   113,     0,   114,   115,   116,
     586,   117,   118,   119,   120,   636,   587,   637,   638,     0,
     124,   125,   126,   127,   128,   639,   640,   129,   130,   641,
     642,   133,     0,   134,   135,   136,   137,   643,     0,   644,
       0,   139,   140,   141,   142,   143,   589,   144,   145,   146,
       0,   147,   148,   149,   150,   151,   152,     0,   590,   153,
     154,   155,   645,   646,   647,   648,   649,   650,   651,   156,
     157,   158,   159,   160,   161,   652,   653,   164,     0,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
     174,   175,   176,     0,     0,   177,   178,   655,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,     0,   188,
     189,   190,   191,   656,   193,   194,   195,   196,   657,   658,
     198,     0,   199,   200,   659,   202,     0,   203,     0,   204,
     592,     0,   593,   205,   206,   207,   208,     0,   209,     0,
     210,   211,     0,   212,   213,   214,   215,   216,   594,   217,
     218,   219,   220,     0,   221,   222,   223,   224,   225,   226,
       0,   227,   595,   228,   229,   230,   231,   232,   660,   661,
       0,   662,     0,   236,   596,   597,   237,   598,   238,   239,
     240,   241,   242,     0,     0,   243,   599,   244,   600,     0,
     245,   246,   247,   663,   664,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   665,   601,   666,   266,   267,   268,   269,     0,   270,
     271,   602,   272,   668,   669,   274,   670,   276,   277,   278,
       0,   279,   280,     0,     0,   671,   282,   283,     0,     0,
     284,   285,   603,   286,   604,   672,   288,   289,   290,   291,
     292,   293,   294,   295,   296,     0,   297,   298,   673,   300,
     301,   302,   461,   304,   305,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   674,   316,   317,   318,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,     0,   332,   333,   605,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
       0,   347,   348,   349,   350,   351,   676,   352,   353,   354,
     355,   356,   606,   357,   358,   677,   360,     0,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     678,     0,   374,   375,     0,   376,   607,   377,   378,   379,
     380,   381,     0,   679,   680,     0,     0,   384,   385,   681,
     387,   682,   683,   389,   390,   391,   392,   393,   394,   395,
       0,     0,   396,   397,   398,   399,   400,   684,     0,   401,
     402,   403,   404,   405,   406,   685,     0,   408,   609,   409,
     410,   411,   412,     0,     0,   413,     0,     0,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,     0,     0,
       0,     0,     0,     0,     0,  1360,  1361,     0,     0,   629,
     630,   475,   631,   632,  1362,   634,   635,     0,     0,   691,
       0,     0,     0,     0,   100,   101,   102,   103,   104,   105,
     106,   107,     0,   109,   110,   111,     0,     0,     0,     0,
       0,     0,     0,   112,   113,     0,   114,   115,   116,   586,
     117,   118,   119,   120,   636,   587,   637,   638,     0,   124,
     125,   126,   127,   128,   639,   640,   129,   130,   641,   642,
     133,     0,   134,   135,   136,   137,   643,     0,   644,     0,
     139,   140,   141,   142,   143,   589,   144,   145,   146,     0,
     147,   148,   149,   150,   151,   152,     0,   590,   153,   154,
     155,   645,   646,   647,   648,   649,   650,   651,   156,   157,
     158,   159,   160,   161,   652,   653,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   655,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   656,   193,   194,   195,   196,   657,   658,   198,
       0,   199,   200,   659,   202,     0,   203,     0,   204,   592,
       0,   593,   205,   206,   207,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216,   594,   217,   218,
     219,   220,     0,   221,   222,   223,   224,   225,   226,     0,
     227,   595,   228,   229,   230,   231,   232,   660,   661,     0,
     662,     0,   236,   596,   597,   237,   598,   238,   239,   240,
     241,   242,     0,     0,   243,   599,   244,   600,     0,   245,
     246,   247,   663,   664,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     665,   601,   666,   266,   267,   268,   269,     0,   270,   271,
     602,   272,   668,   669,   274,   670,   276,   277,   278,     0,
     279,   280,     0,     0,   281,   282,   283,     0,     0,   284,
     285,   603,   286,   604,   672,   288,   289,   290,   291,   292,
     293,   294,   295,   296,     0,   297,   298,   673,   300,   301,
     302,   461,   304,   305,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   674,   316,   317,   318,   319,     0,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,     0,   332,   333,   605,   334,   335,   336,  1493,
    1494,   339,   340,   341,   342,   343,   344,   345,   346,     0,
     347,   348,   349,   350,   351,   676,   352,   353,   354,   355,
     356,   606,   357,   358,   677,   360,     0,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   678,
       0,   374,   375,     0,   376,   607,   377,   378,   379,   380,
     381,     0,   679,   680,     0,     0,   384,   385,   681,   387,
     682,   683,   389,   390,   391,   392,   393,   394,   395,     0,
       0,   396,   397,   398,   399,   400,   684,     0,   401,   402,
     403,   404,   405,   406,   685,     0,   408,   609,   409,   410,
     411,   412,     0,     0,   413,     0,     0,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,     0,     0,     0,
       0,     0,     0,     0,  1495,  1496,     0,     0,     0,     0,
       0,     0,     0,  1362,     0,     0,     0,     0,   691,   629,
     630,   475,   631,   632,   633,   634,   635,     0,     0,     0,
       0,     0,     0,     0,   100,   101,   102,   103,   104,   105,
     106,   107,     0,   109,   110,   111,     0,     0,     0,     0,
       0,     0,     0,   112,   113,     0,   114,   115,   116,   586,
     117,   118,   119,   120,   636,   587,   637,   638,     0,   124,
     125,   126,   127,   128,   639,   640,   129,   130,   641,   642,
     133,     0,   134,   135,   136,   137,   643,     0,   644,     0,
     139,   140,   141,   142,   143,   589,   144,   145,   146,     0,
     147,   148,   149,   150,   151,   152,     0,   590,   153,   154,
     155,   645,   646,   647,   648,   649,   650,   651,   156,   157,
     158,   159,   160,   161,   652,   653,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   655,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   656,   193,   194,   195,   196,   657,   658,   198,
       0,   199,   200,   659,   202,     0,   203,     0,   204,   592,
       0,   593,   205,   206,   207,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216,   594,   217,   218,
     219,   220,     0,   221,   222,   223,   224,   225,   226,     0,
     227,   595,   228,   229,   230,   231,   232,   660,   661,     0,
     662,     0,   236,     0,   597,   237,   598,   238,   239,   240,
     241,   242,     0,     0,   243,   599,   244,   600,     0,   245,
     246,   247,   663,   664,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     665,   601,   666,   266,   267,   268,   269,     0,   270,   271,
     602,   272,   668,   669,   274,   670,   276,   277,   278,     0,
     279,   280,     0,     0,   671,   282,   283,     0,     0,   284,
     285,   603,   286,   604,   672,   288,   289,   290,   291,   292,
     293,   294,   295,   296,     0,   297,   298,   673,   300,   301,
     302,   461,   304,   305,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   674,   316,   317,   318,   319,     0,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,     0,   332,   333,   605,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,     0,
     347,   348,   349,   350,   351,   676,   352,   353,   354,   355,
     356,   606,   357,   358,   677,   360,     0,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   678,
       0,   374,   375,     0,   376,   607,   377,   378,   379,   380,
     381,     0,   679,   680,     0,     0,   384,   385,   681,   387,
     682,   683,   389,   390,   391,   392,   393,   394,   395,     0,
       0,   396,   397,   398,   399,   400,   684,     0,   401,   402,
     403,   404,   405,   406,   685,     0,   408,   609,   409,   410,
     411,   412,     0,     0,   413,     0,     0,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,     0,     0,     0,
       0,     0,     0,     0,  1360,  1361,     0,     0,     0,     0,
       0,     0,     0,  1362,     0,     0,     0,     0,   691,   629,
     630,   475,   631,   632,   633,   634,   635,     0,     0,     0,
       0,     0,     0,     0,   100,   101,   102,   103,   104,   105,
     106,   107,     0,   109,   110,   111,     0,     0,     0,     0,
       0,     0,     0,   112,   113,     0,   114,   115,   116,   586,
     117,   118,   119, -1463,   636,   587,   637,   638,     0,   124,
     125,   126,   127,   128,   639,   640,   129,   130,   641,   642,
     133,     0,   134,   135,   136,   137,   643,     0,   644,     0,
     139,   140,   141,   142,   143,   589,   144,   145,   146,     0,
     147,   148,   149,   150,   151,   152,     0,   590,   153,   154,
    2524,   645,   646,   647,   648,   649,   650,   651,   156,   157,
     158,   159,   160,   161,   652,   653,   164,   654,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   655,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   656,   193,   194,   195,   196,   657,   658,   198,
       0,   199,   200,   659,   202,     0,   203,     0,   204,   592,
       0,   593,   205,   206,   207,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216, -1463,   217,   218,
     219,   220,     0,   221,   222,   223,   224,   225,   226,     0,
     227,   595,   228,   229,   230,   231,   232,   660,   661,     0,
     662,     0,   236,     0,     0,   237,   598,   238,   239,   240,
     241,   242,     0,     0,   243,   599,   244, -1463,     0,   245,
     246,   247,   663,   664,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     665,   601,   666,   266,   267,   268,   269,     0,   270,   271,
       0,   272,   668,   669,   274,   670,   276,   277,   278,     0,
     279,   280,     0,     0,   671,   282,   283,     0,     0,   284,
     285,   603,   286,   604,   672,   288,   289,   290,   291,   292,
     293,   294,   295,   296,     0,   297,   298,   673,   300,   301,
     302,   461,   304,   305,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   674,   316,   317,   318,   319,     0,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,     0,   332,   333,   605,   334,   335,   336,   675,
     338,   339,   340,   341,   342,   343,   344,   345,   346,     0,
     347,   348,   349,   350,   351,   676,   352,   353,   354,   355,
     356, -1463,   357,   358,   677,   360,     0,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   678,
       0,   374,   375,     0,   376,   607,   377,   378,   379,   380,
     381,     0,   679,   680,     0,     0,   384,   385,   681,   387,
     682,   683,   389,   390,   391,   392,  2525,   394,   395,     0,
       0,   396,   397,   398,   399,   400,   684,     0,   401,   402,
     403,   404,   405,   406,   685,     0,   408,   609,   409,   410,
     411,   412,     0,     0,   413,     0,     0,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433, -1463,     0,     0,
       0,     0,     0,     0,   687,   688,     0,     0,     0,     0,
       0,     0,     0,   690,     0,     0,     0,     0,   691,   629,
     630,   475,   631,   632,   633,   634,   635,     0,     0,     0,
       0,     0,     0,     0,   100,   101,   102,   103,   104,   105,
     106,   107,     0,   109,   110,   111,     0,     0,     0,     0,
       0,     0,     0,   112,   113,     0,   114,   115,   116,   586,
     117,   118,   119,     0,   636,   587,   637,   638,     0,   124,
     125,   126,   127,   128,   639,   640,   129,   130,   641,   642,
     133,     0,   134,   135,   136,   137,   643,     0,   644,     0,
     139,   140,   141,   142,   143,   589,   144,   145,   146,     0,
     147,   148,   149,   150,   151,   152,     0,   590,   153,   154,
     155,   645,   646,   647,   648,   649,   650,   651,   156,   157,
     158,   159,   160,   161,   652,   653,   164,   654,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   655,   180,   181,     0,
     182,   183,   184,     0,   185,     0,   187,     0,   188,   189,
     190,   191,   656,   193,   194,   195,   196,   657,   658,   198,
       0,   199,   200,   659,   202,     0,   203,     0,   204,   592,
       0,   593,   205,   206,   207,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216,     0,   217,   218,
     219,   220,     0,   221,   222,   223,   224,   225,   226,     0,
     227,   595,   228,   229,   230,   231,   232,   660,   661,     0,
     662,     0,   236,     0,     0,   237,   598,   238,   239,   240,
     241,   242,     0,     0,   243,   599,   244,     0,     0,   245,
     246,   247,   663,   664,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     665,   601,   666,   266,   267,   268,   269,     0,   270,   271,
       0,   272,   668,   669,   274,   670,   276,   277,   278,     0,
     279,   280,     0,     0,   671,   282,   283,     0,     0,   284,
     285,   603,   286,   604,   672,   288,   289,   290,   291,   292,
     293,   294,   295,   296,     0,   297,   298,   673,   300,   301,
     302,   461,   304,   305,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   674,   316,   317,   318,   319,     0,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,     0,   332,   333,   605,   334,   335,   336,   675,
     338,   339,   340,   341,   342,   343,   344,   345,   346,     0,
     347,   348,   349,   350,   351,   676,   352,   353,   354,   355,
     356,     0,   357,   358,   677,   360,     0,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   678,
       0,   374,   375,     0,   376,   607,   377,   378,   379,   380,
     381,     0,   679,   680,     0,     0,   384,   385,   681,   387,
     682,   683,   389,   390,   391,   392,   393,   394,   395,     0,
       0,   396,   397,   398,   399,   400,   684,     0,   401,   402,
     403,   404,   405,   406,   685,     0,   408,   609,   409,   410,
     411,   412,     0,     0,   413,     0,     0,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,     0,     0,     0,
       0,     0,     0,     0,   687,   688,    99,     0,     0,     0,
       0,     0,     0,   690,     0,     0,     0,     0,   691,     0,
       0,   100,   101,   102,   103,   104,   105,   106,   107,     0,
     109,   110,   111,     0,     0,     0,     0,     0,  1999,     0,
     112,   113,     0,   114,   115,   116,     0,   117,   118,   119,
     120,   121,     0,   122,   123,     0,   124,   125,   126,   127,
     128,     0,     0,   129,   130,   131,   132,   133,     0,   134,
     135,   136,   137,   138,     0,     0,     0,   139,   140,   141,
     142,   143,     0,   144,   145,   146,     0,   147,   148,   149,
     150,   151,   152,     0,  -552,   153,   154,   155,     0,     0,
       0,     0,     0,     0,     0,   156,   157,   158,   159,   160,
     161,   162,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,   174,   175,   176,     0,
       0,   177,   178,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,     0,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,     0,   198,     0,   199,   200,
     201,   202,     0,   203,     0,   204,     0,     0,  -552,   205,
     206,   207,   208,     0,   209,     0,   210,   211,     0,   212,
     213,   214,   215,   216,     0,   217,   218,   219,   220,     0,
     221,   222,   223,   224,   225,   226,     0,   227,  -552,   228,
     229,   230,   231,   232,   233,   234,     0,   235,     0,   236,
       0,     0,   237,  -552,   238,   239,   240,   241,   242,     0,
       0,   243,  -552,   244,     0,     0,   245,   246,   247,     0,
       0,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,  -552,   265,
     266,   267,   268,   269,     0,   270,   271,     0,   272,     0,
     273,   274,   275,   276,   277,   278,     0,   279,   280,     0,
       0,   281,   282,   283,     0,     0,   284,   285,     0,   286,
       0,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,     0,   297,   298,   299,   300,   301,   302,   461,   304,
     305,     0,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,     0,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,     0,
     332,   333,  -552,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,     0,   347,   348,   349,
     350,   351,     0,   352,   353,   354,   355,   356,     0,   357,
     358,   359,   360,     0,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,     0,   374,   375,
       0,   376,     0,   377,   378,   379,   380,   381,     0,   382,
     383,     0,     0,   384,   385,   386,   387,   388,     0,   389,
     390,   391,   392,   393,   394,   395,     0,     0,   396,   397,
     398,   399,   400,     0,     0,   401,   402,   403,   404,   405,
     406,   407,     0,   408,     0,   409,   410,   411,   412,     0,
       0,   413,     0,     0,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,     0,     0,     0,   629,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   754,   100,   101,   102,   103,   104,   105,   106,   107,
       0,   109,   110,   111,     0,     0,     0,     0,     0,     0,
       0,   112,   113,     0,   114,   115,   116,   586,   117,   118,
     119,   120,   121,   587,   122,   123,     0,   124,   125,   126,
     127,   128,     0,   640,   129,   130,   131,   132,   133,     0,
     134,   135,   136,   137,   643,     0,   644,     0,   139,   140,
     141,   142,   143,   589,   144,   145,   146,     0,   147,   148,
     149,   150,   151,   152,     0,   590,   153,   154,   155,   645,
     646,   647,   648,   649,   650,   651,   156,   157,   158,   159,
     160,   161,   162,   163,   164,     0,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,   174,   175,   176,
       0,     0,   177,   178,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   657,     0,   198,     0,   199,
     200,   201,   202,     0,   203,     0,   204,   592,     0,   593,
     205,   206,   207,   208,     0,   209,     0,   210,   211,     0,
     212,   213,   214,   215,   216,   594,   217,   218,   219,   220,
       0,   221,   222,   223,   224,   225,   226,     0,   227,   595,
     228,   229,   230,   231,   232,   233,   234,     0,   235,     0,
     236,   596,   597,   237,   598,   238,   239,   240,   241,   242,
    1751,     0,   243,   599,   244,   600,     0,   245,   246,   247,
     663,   664,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   601,
     265,   266,   267,   268,   269,     0,   270,   271,   602,   272,
       0,   669,   274,   275,   276,   277,   278,     0,   279,   280,
       0,   500,   281,   282,   283,     0,     0,   284,   285,   603,
     286,   604,   672,   288,   289,   290,   291,   292,   293,   294,
     295,   296,     0,   297,   298,   673,   300,   301,   302,   461,
     304,   305,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,     0,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
       0,   332,   333,   605,   334,   335,   336,   337,  1752,   339,
     340,   341,   342,   343,   344,   345,   346,    23,   347,   348,
     349,   350,   351,   676,   352,   353,   354,   355,   356,   606,
     357,   358,   359,   360,     0,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   678,     0,   374,
     375,    27,   376,   607,   377,   378,   379,   380,   381,     0,
     382,   383,     0,     0,   384,   385,   681,   387,   682,     0,
     389,   390,   391,   392,   393,   394,   395,     0,     0,   396,
     397,   398,   399,   400,   684,     0,   401,   402,   403,   404,
     405,   608,   407,     0,   408,   609,   409,   410,   411,   412,
       0,     0,   413,     0,    30,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,     0,     0,    31,   629,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1753,     0,   100,   101,   102,   103,   104,   105,   106,
     107,     0,   109,   110,   111,     0,     0,     0,     0,     0,
       0,     0,   112,   113,     0,   114,   115,   116,   586,   117,
     118,   119,   120,   121,   587,   122,   123,     0,   124,   125,
     126,   127,   128,     0,   640,   129,   130,   131,   132,   133,
       0,   134,   135,   136,   137,   643,     0,   644,     0,   139,
     140,   141,   142,   143,   589,   144,   145,   146,     0,   147,
     148,   149,   150,   151,   152,     0,   590,   153,   154,   155,
     645,   646,   647,   648,   649,   650,   651,   156,   157,   158,
     159,   160,   161,   162,   163,   164,     0,   165,     0,   166,
     167,   168,   169,   170,   171,     0,   172,   173,   174,   175,
     176,     0,     0,   177,   178,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,     0,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   657,     0,   198,     0,
     199,   200,   201,   202,     0,   203,     0,   204,   592,     0,
     593,   205,   206,   207,   208,     0,   209,     0,   210,   211,
       0,   212,   213,   214,   215,   216,   594,   217,   218,   219,
     220,     0,   221,   222,   223,   224,   225,   226,     0,   227,
     595,   228,   229,   230,   231,   232,   233,   234,     0,   235,
       0,   236,   596,   597,   237,   598,   238,   239,   240,   241,
     242,  1751,     0,   243,   599,   244,   600,     0,   245,   246,
     247,   663,   664,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     601,   265,   266,   267,   268,   269,     0,   270,   271,   602,
     272,     0,   669,   274,   275,   276,   277,   278,     0,   279,
     280,     0,   500,   281,   282,   283,     0,     0,   284,   285,
     603,   286,   604,   672,   288,   289,   290,   291,   292,   293,
     294,   295,   296,     0,   297,   298,   673,   300,   301,   302,
     461,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,     0,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,     0,   332,   333,   605,   334,   335,   336,   337,  1752,
     339,   340,   341,   342,   343,   344,   345,   346,     0,   347,
     348,   349,   350,   351,   676,   352,   353,   354,   355,   356,
     606,   357,   358,   359,   360,     0,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   678,     0,
     374,   375,     0,   376,   607,   377,   378,   379,   380,   381,
       0,   382,   383,     0,     0,   384,   385,   681,   387,   682,
       0,   389,   390,   391,   392,   393,   394,   395,     0,     0,
     396,   397,   398,   399,   400,   684,     0,   401,   402,   403,
     404,   405,   406,   407,     0,   408,   609,   409,   410,   411,
     412,     0,     0,   413,     0,     0,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,     0,     0,   629,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1753,   100,   101,   102,   103,   104,   105,   106,
     107,     0,   109,   110,   111,     0,     0,     0,     0,     0,
       0,     0,   112,   113,     0,   114,   115,   116,   586,   117,
     118,   119,   120,   121,   587,   122,   123,     0,   124,   125,
     126,   127,   128,     0,   640,   129,   130,   131,   132,   133,
       0,   134,   135,   136,   137,   643,     0,   644,     0,   139,
     140,   141,   142,   143,   589,   144,   145,   146,     0,   147,
     148,   149,   150,   151,   152,     0,   590,   153,   154,   155,
     645,   646,   647,   648,   649,   650,   651,   156,   157,   158,
     159,   160,   161,   162,   163,   164,     0,   165,     0,   166,
     167,   168,   169,   170,   171,     0,   172,   173,   174,   175,
     176,     0,     0,   177,   178,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,     0,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   657,     0,   198,     0,
     199,   200,   201,   202,     0,   203,     0,   204,   592,     0,
     593,   205,   206,   207,   208,     0,   209,     0,   210,   211,
       0,   212,   213,   214,   215,   216,   594,   217,   218,   219,
     220,     0,   221,   222,   223,   224,   225,   226,     0,   227,
     595,   228,   229,   230,   231,   232,   233,   234,     0,   235,
       0,   236,   596,   597,   237,   598,   238,   239,   240,   241,
     242,     0,     0,   243,   599,   244,   600,     0,   245,   246,
     247,   663,   664,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     601,   265,   266,   267,   268,   269,     0,   270,   271,   602,
     272,     0,   669,   274,   275,   276,   277,   278,     0,   279,
     280,     0,     0,   281,   282,   283,     0,     0,   284,   285,
     603,   286,   604,   672,   288,   289,   290,   291,   292,   293,
     294,   295,   296,     0,   297,   298,   673,   300,   301,   302,
     461,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,     0,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,     0,   332,   333,   605,   334,   335,   336,   337,  1752,
     339,   340,   341,   342,   343,   344,   345,   346,     0,   347,
     348,   349,   350,   351,   676,   352,   353,   354,   355,   356,
     606,   357,   358,   359,   360,     0,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   678,     0,
     374,   375,     0,   376,   607,   377,   378,   379,   380,   381,
       0,   382,   383,     0,     0,   384,   385,   681,   387,   682,
       0,   389,   390,   391,   392,   393,   394,   395,     0,     0,
     396,   397,   398,   399,   400,   684,     0,   401,   402,   403,
     404,   405,   406,   407,     0,   408,   609,   409,   410,   411,
     412,     0,     0,   413,     0,     0,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,     0,     0,   629,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    32,   100,   101,   102,   103,   104,   105,   106,
     107,     0,   109,   110,   111,     0,     0,     0,     0,     0,
       0,     0,   112,   113,     0,   114,   115,   116,   586,   117,
     118,   119,   120,   121,   587,   122,   123,     0,   124,   125,
     126,   127,   128,     0,   640,   129,   130,   131,   132,   133,
       0,   134,   135,   136,   137,   643,     0,   644,     0,   139,
     140,   141,   142,   143,   589,   144,   145,   146,     0,   147,
     148,   149,   150,   151,   152,     0,   590,   153,   154,   155,
     645,   646,   647,   648,   649,   650,   651,   156,   157,   158,
     159,   160,   161,   162,   163,   164,     0,   165,     0,   166,
     167,   168,   169,   170,   171,     0,   172,   173,   174,   175,
     176,     0,     0,   177,   178,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,     0,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   657,     0,   198,     0,
     199,   200,   201,   202,     0,   203,     0,   204,   592,     0,
     593,   205,   206,   207,   208,     0,   209,     0,   210,   211,
       0,   212,   213,   214,   215,   216,   594,   217,   218,   219,
     220,     0,   221,   222,   223,   224,   225,   226,     0,   227,
     595,   228,   229,   230,   231,   232,   233,   234,     0,   235,
       0,   236,   596,   597,   237,   598,   238,   239,   240,   241,
     242,     0,     0,   243,   599,   244,   600,     0,   245,   246,
     247,   663,   664,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     601,   265,   266,   267,   268,   269,     0,   270,   271,   602,
     272,     0,   669,   274,   275,   276,   277,   278,     0,   279,
     280,     0,     0,   281,   282,   283,     0,     0,   284,   285,
     603,   286,   604,   672,   288,   289,   290,   291,   292,   293,
     294,   295,   296,     0,   297,   298,   673,   300,   301,   302,
     461,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,     0,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,     0,   332,   333,   605,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,     0,   347,
     348,   349,   350,   351,   676,   352,   353,   354,   355,   356,
     606,   357,   358,   359,   360,     0,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   678,     0,
     374,   375,     0,   376,   607,   377,   378,   379,   380,   381,
       0,   382,   383,     0,     0,   384,   385,   681,   387,   682,
       0,   389,   390,   391,   392,   393,   394,   395,     0,     0,
     396,   397,   398,   399,   400,   684,     0,   401,   402,   403,
     404,   405,   406,   407,     0,   408,   609,   409,   410,   411,
     412,     0,     0,   413,     0,     0,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,     0,     0,   585,   858,
     475,     0,     0,     0,   634,     0,     0,     0,     0,     0,
       0,     0,  2344,   100,   101,   102,   103,   104,   105,   106,
     107,     0,   109,   110,   111,     0,     0,     0,     0,     0,
       0,     0,   112,   113,     0,   114,   115,   116,   586,   117,
     118,   119,   120,   121,   587,   122,   123,     0,   124,   125,
     126,   127,   128,     0,     0,   129,   130,   131,   132,   133,
       0,   134,   135,   136,   137,   138,     0,   588,     0,   139,
     140,   141,   142,   143,   589,   144,   145,   146,     0,   147,
     148,   149,   150,   151,   152,     0,   590,   153,   154,   155,
       0,     0,     0,   591,     0,     0,     0,   156,   157,   158,
     159,   160,   161,   162,   163,   164,     0,   165,     0,   166,
     167,   168,   169,   170,   171,     0,   172,   173,   174,   175,
     176,     0,     0,   177,   178,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,     0,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   859,   198,     0,
     199,   200,   201,   202,     0,   203,     0,   204,   592,     0,
     593,   205,   206,   207,   208,     0,   209,     0,   210,   211,
       0,   212,   213,   214,   215,   216,   594,   217,   218,   219,
     220,     0,   221,   222,   223,   224,   225,   226,     0,   227,
     595,   228,   229,   230,   231,   232,   233,   234,     0,   235,
       0,   236,   596,   597,   237,   598,   238,   239,   240,   241,
     242,     0,     0,   243,   599,   244,   600,     0,   245,   246,
     247,     0,     0,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     601,   265,   266,   267,   268,   269,     0,   270,   271,   602,
     272,     0,   273,   274,   275,   276,   277,   278,     0,   279,
     280,   860,     0,   281,   282,   283,     0,     0,   284,   285,
     603,   286,   604,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,     0,   297,   298,   299,   300,   301,   302,
     461,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,     0,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,     0,   332,   333,   605,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,     0,   347,
     348,   349,   350,   351,     0,   352,   353,   354,   355,   356,
     606,   357,   358,   359,   360,     0,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,     0,
     374,   375,     0,   376,   607,   377,   378,   379,   380,   381,
       0,   382,   383,     0,     0,   384,   385,   386,   387,   388,
     861,   389,   390,   391,   392,   393,   394,   395,     0,     0,
     396,   397,   398,   399,   400,     0,     0,   401,   402,   403,
     404,   405,   406,   407,     0,   408,   609,   409,   410,   411,
     412,     0,     0,   413,     0,     0,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,     0,     0,   585,     0,
       0,     0,     0,   862,   863,  1617,     0,     0,     0,     0,
       0,     0,  1618,   100,   101,   102,   103,   104,   105,   106,
     107,     0,   109,   110,   111,     3,     4,     0,     0,     0,
       0,     0,   112,   113,     0,   114,   115,   116,   586,   117,
     118,   119,   120,   121,   587,   122,   123,     0,   124,   125,
     126,   127,   128,     0,     0,   129,   130,   131,   132,   133,
       0,   134,   135,   136,   137,   138,     0,   588,     0,   139,
     140,   141,   142,   143,   589,   144,   145,   146,     0,   147,
     148,   149,   150,   151,   152,     0,   590,   153,   154,   155,
       0,     0,     0,   591,     0,     0,     0,   156,   157,   158,
     159,   160,   161,   162,   163,   164,     0,   165,     0,   166,
     167,   168,   169,   170,   171,     0,   172,   173,   174,   175,
     176,     0,     0,   177,   178,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,     0,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,     0,   198,     0,
     199,   200,   201,   202,     0,   203,     0,   204,   592,     0,
     593,   205,   206,   207,   208,     0,   209,     0,   210,   211,
       0,   212,   213,   214,   215,   216,   594,   217,   218,   219,
     220,     0,   221,   222,   223,   224,   225,   226,     0,   227,
     595,   228,   229,   230,   231,   232,   233,   234,     0,   235,
       0,   236,   596,   597,   237,   598,   238,   239,   240,   241,
     242,     0,     0,   243,   599,   244,   600,     0,   245,   246,
     247,     0,     0,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     601,   265,   266,   267,   268,   269,     0,   270,   271,   602,
     272,     0,   273,   274,   275,   276,   277,   278,     0,   279,
     280,     0,     0,   281,   282,   283,     0,     0,   284,   285,
     603,   286,   604,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,     0,   297,   298,   299,   300,   301,   302,
     461,   304,   305,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,     0,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,     0,   332,   333,   605,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,    23,   347,
     348,   349,   350,   351,     0,   352,   353,   354,   355,   356,
     606,   357,   358,   359,   360,     0,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,     0,
     374,   375,    27,   376,   607,   377,   378,   379,   380,   381,
       0,   382,   383,     0,     0,   384,   385,   386,   387,   388,
       0,   389,   390,   391,   392,   393,   394,   395,     0,     0,
     396,   397,   398,   399,   400,     0,     0,   401,   402,   403,
     404,   405,   608,   407,     0,   408,   609,   409,   410,   411,
     412,     0,     0,   413,     0,    30,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,     0,     0,    31,    99,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    32,     0,   100,   101,   102,   103,   104,   105,
     106,   107,     0,   109,   110,   111,     0,     0,     0,     0,
       0,     0,     0,   112,   113,     0,   114,   115,   116,     0,
     117,   118,   119,   120,   121,     0,   122,   123,     0,   124,
     125,   126,   127,   128,     0,     0,   129,   130,   131,   132,
     133,     0,   134,   135,   136,   137,   138,     0,     0,     0,
     139,   140,   141,   142,   143,     0,   144,   145,   146,     0,
     147,   148,   149,   150,   151,   152,     0,     0,   153,   154,
     155,     0,     0,     0,     0,     0,     0,     0,   156,   157,
     158,   159,   160,   161,   162,   163,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,     0,   198,
       0,   199,   200,   201,   202,     0,   203,     0,   204,     0,
       0,     0,   205,   206,   207,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216,     0,   217,   218,
     219,   220,     0,   221,   222,   223,   224,   225,   226,     0,
     227,     0,   228,   229,   230,   231,   232,   233,   234,     0,
     235,     0,   236,     0,     0,   237,     0,   238,   239,   240,
     241,   242,     0,     0,   243,     0,   244,     0,     0,   245,
     246,   247,     0,     0,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,     0,   265,   266,   267,   268,   269,     0,   270,   271,
       0,   272,     0,   273,   274,   275,   276,   277,   278,     0,
     279,   280,     0,     0,   281,   282,   283,     0,     0,   284,
     285,     0,   286,     0,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,     0,   297,   298,   299,   300,   301,
     302,   461,   304,   305,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,     0,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,     0,   332,   333,     0,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,    23,
     347,   348,   349,   350,   351,     0,   352,   353,   354,   355,
     356,     0,   357,   358,   359,   360,     0,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
       0,   374,   375,    27,   376,     0,   377,   378,   379,   380,
     381,     0,   382,   383,     0,     0,   384,   385,   386,   387,
     388,     0,   389,   390,   391,   392,   393,   394,   395,     0,
       0,   396,   397,   398,   399,   400,     0,     0,   401,   402,
     403,   404,   405,   608,   407,     0,   408,     0,   409,   410,
     411,   412,     0,     0,   413,     0,    30,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,     0,     0,    31,
      99,     0,  2179,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    32,     0,   100,   101,   102,   103,   104,
     105,   106,   107,     0,   109,   110,   111,     0,     0,     0,
       0,     0,     0,     0,   112,   113,     0,   114,   115,   116,
       0,   117,   118,   119,   120,   121,     0,   122,   123,     0,
     124,   125,   126,   127,   128,     0,     0,   129,   130,   131,
     132,   133,     0,   134,   135,   136,   137,   138,     0,     0,
       0,   139,   140,   141,   142,   143,     0,   144,   145,   146,
       0,   147,   148,   149,   150,   151,   152,     0,     0,   153,
     154,   155,     0,     0,     0,     0,     0,     0,     0,   156,
     157,   158,   159,   160,   161,   162,   163,   164,     0,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
     174,   175,   176,     0,     0,   177,   178,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,     0,
     198,     0,   199,   200,   201,   202,     0,   203,     0,   204,
       0,     0,     0,   205,   206,   207,   208,     0,   209,     0,
     210,   211,     0,   212,   213,   214,   215,   216,     0,   217,
     218,   219,   220,     0,   221,   222,   223,   224,   225,   226,
       0,   227,     0,   228,   229,   230,   231,   232,   233,   234,
       0,   235,     0,   236,     0,     0,   237,     0,   238,   239,
     240,   241,   242,     0,     0,   243,     0,   244,     0,     0,
     245,   246,   247,     0,     0,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,     0,   265,   266,   267,   268,   269,     0,   270,
     271,     0,   272,     0,   273,   274,   275,   276,   277,   278,
       0,   279,   280,     0,     0,   281,   282,   283,     0,     0,
     284,   285,     0,   286,     0,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,     0,   297,   298,   299,   300,
     301,   302,   461,   304,   305,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,     0,   332,   333,     0,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
       0,   347,   348,   349,   350,   351,     0,   352,   353,   354,
     355,   356,     0,   357,   358,   359,   360,     0,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,     0,   374,   375,     0,   376,     0,   377,   378,   379,
     380,   381,     0,   382,   383,     0,     0,   384,   385,   386,
     387,   388,     0,   389,   390,   391,   392,   393,   394,   395,
       0,     0,   396,   397,   398,   399,   400,     0,     0,   401,
     402,   403,   404,   405,   406,   407,     0,   408,     0,   409,
     410,   411,   412,     0,     0,   413,     0,     0,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,     0,     0,
      99,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2195,   100,   101,   102,   103,   104,
     105,   106,   107,     0,   109,   110,   111,     0,     0,     0,
       0,     0,     0,     0,   112,   113,     0,   114,   115,   116,
       0,   117,   118,   119,   120,   121,     0,   122,   123,     0,
     124,   125,   126,   127,   128,     0,     0,   129,   130,   131,
     132,   133,     0,   134,   135,   136,   137,   138,     0,     0,
       0,   139,   140,   141,   142,   143,     0,   144,   145,   146,
       0,   147,   148,   149,   150,   151,   152,     0,     0,   153,
     154,   155,     0,     0,     0,     0,     0,     0,     0,   156,
     157,   158,   159,   160,   161,   162,   163,   164,     0,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
     174,   175,   176,     0,     0,   177,   178,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,     0,
     198,     0,   199,   200,   201,   202,     0,   203,     0,   204,
       0,     0,     0,   205,   206,   207,   208,     0,   209,     0,
     210,   211,     0,   212,   213,   214,   215,   216,     0,   217,
     218,   219,   220,     0,   221,   222,   223,   224,   225,   226,
       0,   227,     0,   228,   229,   230,   231,   232,   233,   234,
       0,   235,     0,   236,     0,     0,   237,     0,   238,   239,
     240,   241,   242,     0,     0,   243,     0,   244,     0,     0,
     245,   246,   247,     0,     0,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,     0,   265,   266,   267,   268,   269,     0,   270,
     271,     0,   272,     0,   273,   274,   275,   276,   277,   278,
       0,   279,   280,     0,     0,   281,   282,   283,     0,     0,
     284,   285,     0,   286,     0,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,     0,   297,   298,   299,   300,
     301,   302,   461,   304,   305,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,     0,   332,   333,     0,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
       0,   347,   348,   349,   350,   351,     0,   352,   353,   354,
     355,   356,     0,   357,   358,   359,   360,     0,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,     0,   374,   375,     0,   376,     0,   377,   378,   379,
     380,   381,     0,   382,   383,     0,     0,   384,   385,   386,
     387,   388,     0,   389,   390,   391,   392,   393,   394,   395,
       0,     0,   396,   397,   398,   399,   400,     0,     0,   401,
     402,   403,   404,   405,   406,   407,     0,   408,     0,   409,
     410,   411,   412,     0,     0,   413,     0,     0,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,     0,     0,
      99,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   732,   100,   101,   102,   103,   104,
     105,   106,   107,     0,   109,   110,   111,     0,     0,     0,
       0,     0,     0,     0,   112,   113,     0,   114,   115,   116,
       0,   117,   118,   119,   120,   121,     0,   122,   123,     0,
     124,   125,   126,   127,   128,     0,     0,   129,   130,   131,
     132,   133,     0,   134,   135,   136,   137,   138,     0,     0,
       0,   139,   140,   141,   142,   143,     0,   144,   145,   146,
       0,   147,   148,   149,   150,   151,   152,     0,     0,   153,
     154,   155,     0,     0,     0,     0,     0,     0,     0,   156,
     157,   158,   159,   160,   161,   162,   163,   164,     0,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
     174,   175,   176,     0,     0,   177,   178,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,     0,
     198,     0,   199,   200,   201,   202,     0,   203,     0,   204,
       0,     0,     0,   205,   206,   207,   208,     0,   209,     0,
     210,   211,     0,   212,   213,   214,   215,   216,     0,   217,
     218,   219,   220,     0,   221,   222,   223,   224,   225,   226,
       0,   227,     0,   228,   229,   230,   231,   232,   233,   234,
       0,   235,     0,   236,     0,     0,   237,     0,   238,   239,
     240,   241,   242,     0,     0,   243,     0,   244,     0,     0,
     245,   246,   247,     0,     0,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,     0,   265,   266,   267,   268,   269,     0,   270,
     271,     0,   272,     0,   273,   274,   275,   276,   277,   278,
       0,   279,   280,     0,     0,   281,   282,   283,     0,     0,
     284,   285,     0,   286,     0,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,     0,   297,   298,   299,   300,
     301,   302,   461,   304,   305,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,     0,   332,   333,     0,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
       0,   347,   348,   349,   350,   351,     0,   352,   353,   354,
     355,   356,     0,   357,   358,   359,   360,     0,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,     0,   374,   375,     0,   376,     0,   377,   378,   379,
     380,   381,     0,   382,   383,     0,     0,   384,   385,   386,
     387,   388,     0,   389,   390,   391,   392,   393,   394,   395,
       0,     0,   396,   397,   398,   399,   400,     0,     0,   401,
     402,   403,   404,   405,   406,   407,     0,   408,     0,   409,
     410,   411,   412,     0,     0,   413,     0,     0,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,     0,     0,
      99,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1483,   100,   101,   102,   103,   104,
     105,   106,   107,     0,   109,   110,   111,     0,     0,     0,
       0,     0,     0,     0,   112,   113,     0,   114,   115,   116,
       0,   117,   118,   119,   120,   121,     0,   122,   123,     0,
     124,   125,   126,   127,   128,     0,     0,   129,   130,   131,
     132,   133,     0,   134,   135,   136,   137,   138,     0,     0,
       0,   139,   140,   141,   142,   143,     0,   144,   145,   146,
       0,   147,   148,   149,   150,   151,   152,     0,     0,   153,
     154,   155,     0,     0,     0,     0,     0,     0,     0,   156,
     157,   158,   159,   160,   161,   162,   163,   164,     0,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
     174,   175,   176,     0,     0,   177,   178,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,     0,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,     0,
     198,     0,   199,   200,   201,   202,     0,   203,     0,   204,
       0,     0,     0,   205,   206,   207,   208,     0,   209,     0,
     210,   211,     0,   212,   213,   214,   215,   216,     0,   217,
     218,   219,   220,     0,   221,   222,   223,   224,   225,   226,
       0,   227,     0,   228,   229,   230,   231,   232,   233,   234,
       0,   235,     0,   236,     0,     0,   237,     0,   238,   239,
     240,   241,   242,     0,     0,   243,     0,   244,     0,     0,
     245,   246,   247,     0,     0,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,     0,   265,   266,   267,   268,   269,     0,   270,
     271,     0,   272,     0,   273,   274,   275,   276,   277,   278,
       0,   279,   280,     0,     0,   281,   282,   283,     0,     0,
     284,   285,     0,   286,     0,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,     0,   297,   298,   299,   300,
     301,   302,   461,   304,   305,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,     0,   332,   333,     0,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
       0,   347,   348,   349,   350,   351,     0,   352,   353,   354,
     355,   356,     0,   357,   358,   359,   360,     0,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,     0,   374,   375,     0,   376,     0,   377,   378,   379,
     380,   381,     0,   382,   383,     0,     0,   384,   385,   386,
     387,   388,     0,   389,   390,   391,   392,   393,   394,   395,
       0,     0,   396,   397,   398,   399,   400,     0,     0,   401,
     402,   403,   404,   405,   406,   407,     0,   408,     0,   409,
     410,   411,   412,     0,     0,   413,     0,     0,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,     0,     0,
       0,     0,     0,   885,   858,   475,     0,     0,  1342,   634,
       0,     0,     0,     0,  1982,  1343,  1344,  1345,   100,   101,
     102,   103,   104,   105,   106,   107,  1040,   109,   110,   111,
    1041,  1042,  1043,  1044,  1045,  1046,  1047,   112,   113,  1048,
     114,   115,   116,   586,   117,   118,   119,     0,   886,   587,
     887,   888,  1049,   124,   125,   126,   127,   128,  1050,  1051,
     129,   130,   889,   890,   133,  1052,   134,   135,   136,   137,
       0,  1053,   588,  1054,   139,   140,   141,   142,   143,   589,
     144,   145,   146,  1055,   147,   148,   149,   150,   151,   152,
    1056,   590,   153,   154,   155,  1057,  1058,  1059,   591,  1060,
    1061,  1062,   156,   157,   158,   159,   160,   161,   891,   892,
     164,  1063,   165,  1064,   166,   167,   168,   169,   170,   171,
    1065,   172,   173,   174,   175,   176,  1066,  1067,   177,   178,
     655,   180,   181,  1068,   182,   183,   184,  1069,   185,   186,
     187,  1070,   188,   189,   190,   191,     0,   193,   194,   195,
     196,     0,  1071,   198,  1072,   199,   200,   893,   202,  1073,
     203,  1074,   204,   592,  1075,   593,   205,   206,   207,   208,
    1076,   209,  1077,     0,   211,  1078,   212,   213,   214,   215,
     216,   594,   217,   218,   219,   220,  1079,   221,   222,   223,
     224,   225,   226,  1080,   227,   595,     0,   229,   230,   231,
     232,   894,   895,  1081,   896,  1082,   236,   596,   597,   237,
     598,   238,   239,   240,   241,   242,  1083,  1084,   243,   599,
     244,   600,  1085,   245,   246,   247,  1086,  1087,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   897,   601,   898,   266,   267,   268,
    2090,  1088,   270,   271,   602,   272,  1089,     0,   274,   899,
     276,   277,   278,  1090,   279,   280,  1091,  1092,  2091,   282,
     283,  1093,  1094,   284,     0,   603,   286,   604,     0,   288,
     289,   290,   291,   292,   293,   294,   295,   296,  1095,   297,
     298,     0,   300,   301,     0,   461,   304,   305,  1096,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   900,   316,
     317,   318,   319,  1097,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,  1098,   332,   333,   605,
     334,   335,   336,     0,   338,   339,   340,   341,   342,   343,
     344,   345,   346,  1099,   347,   348,   349,   350,   351,  1100,
     352,  2092,   354,   355,   356,   606,   357,   358,   902,   360,
    1101,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,     0,  1102,   374,   375,  1103,   376,   607,
     377,   378,   379,   380,   381,  1104,   903,   904,  1105,  1106,
     384,   385,     0,   387,     0,  1107,   389,   390,   391,   392,
     393,   394,   395,  1108,  1109,   396,   397,   398,   399,   400,
    1110,  1111,   401,   402,   403,   404,   405,     0,   905,  1112,
     408,   609,   409,   410,   411,   412,  1113,  1114,   413,  1115,
    1116,   414,   415,   416,   417,   418,   419,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   431,   432,
     433,     0,    99,     0,  1346,  1347,  1348,  1342,  2093,  2094,
    1351,  1352,  1353,  1354,  1343,  1344,  1345,   100,   101,   102,
     103,   104,   105,   106,   107,     0,   109,   110,   111,     0,
       0,     0,     0,     0,     0,     0,   112,   113,     0,   114,
     115,   116,     0,   117,   118,   119,   120,   121,     0,   122,
     123,     0,   124,   125,   126,   127,   128,     0,     0,   129,
     130,   131,   132,   133,     0,   134,   135,   136,   137,   138,
       0,     0,     0,   139,   140,   141,   142,   143,     0,   144,
     145,   146,     0,   147,   148,   149,   150,   151,   152,     0,
       0,   153,   154,   155,     0,     0,     0,     0,     0,     0,
       0,   156,   157,   158,   159,   160,   161,   162,   163,   164,
       0,   165,     0,   166,   167,   168,   169,   170,   171,     0,
     172,   173,   174,   175,   176,     0,     0,   177,   178,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
       0,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,     0,   198,     0,   199,   200,   201,   202,     0,   203,
       0,   204,     0,     0,     0,   205,   206,   207,   208,     0,
     209,     0,   210,   211,     0,   212,   213,   214,   215,   216,
       0,   217,   218,   219,   220,     0,   221,   222,   223,   224,
     225,   226,     0,   227,     0,   228,   229,   230,   231,   232,
     233,   234,     0,   235,     0,   236,     0,     0,   237,     0,
     238,   239,   240,   241,   242,     0,     0,   243,     0,   244,
       0,     0,   245,   246,   247,     0,     0,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,     0,   265,   266,   267,   268,   269,
       0,   270,   271,     0,   272,     0,   273,   274,   275,   276,
     277,   278,     0,   279,   280,     0,     0,   281,   282,   283,
       0,     0,   284,   285,     0,   286,     0,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,     0,   297,   298,
     299,   300,   301,   302,   461,   304,   305,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,     0,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,     0,   332,   333,     0,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,     0,   347,   348,   349,   350,   351,     0,   352,
     353,   354,   355,   356,     0,   357,   358,   359,   360,     0,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,     0,   374,   375,     0,   376,     0,   377,
     378,   379,   380,   381,     0,   382,   383,     0,     0,   384,
     385,   386,   387,   388,     0,   389,   390,   391,   392,   393,
     394,   395,     0,     0,   396,   397,   398,   399,   400,     0,
       0,   401,   402,   403,   404,   405,   406,   407,     0,   408,
       0,   409,   410,   411,   412,     0,     0,   413,     0,     0,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
       0,     0,     0,  1346,  1347,  1348,     0,  1349,  1350,  1351,
    1352,  1353,  1354,   979,     0,     0,   980,     0,     0,     0,
     981,   982,   983,     0,     0,     0,     0,     0,     0,     0,
       0,   979,     0,     0,   980,     0,     0,   984,   981,   982,
     983,     0,     0,     0,     0,   986,     0,     0,     0,     0,
     979,     0,   987,   980,     0,   984,     0,   981,   982,   983,
       0,     0,     0,   986,     0,     0,     0,     0,     0,     0,
     987,     0,     0,     0,   984,     0,   988,     0,     0,     0,
       0,     0,   986,     0,   979,     0,     0,   980,     0,   987,
       0,   981,   982,   983,   988,     0,     0,     0,     0,     0,
       0,     0,   979,     0,     0,   980,     0,     0,   984,   981,
     982,   983,     0,   988,     0,     0,   986,     0,     0,     0,
       0,     0,     0,   987,     0,     0,   984,     0,     0,     0,
       0,     0,     0,     0,   986,     0,     0,     0,     0,     0,
       0,   987,     0,   979,     0,     0,   980,   988,     0,     0,
     981,   982,   983,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   988,     0,   984,     0,     0,
       0,     0,     0,     0,     0,   986,     0,     0,     0,     0,
       0,     0,   987,     0,     0,     0,   989,     0,     0,     0,
       0,   990,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   989,     0,   988,     0,     0,   990,
       0,     0,   991,   992,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   989,     0,     0,   993,     0,   990,     0,
     991,   992,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   993,     0,     0,     0,     0,   991,
     992,     0,     0,     0,     0,     0,   994,   989,     0,   995,
       0,     0,   990,   993,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   996,   994,   989,   997,   995,     0,     0,
     990,     0,     0,   991,   992,     0,     0,     0,     0,     0,
       0,   996,     0,   994,   997,     0,   995,   993,     0,     0,
       0,   991,   992,     0,     0,     0,     0,     0,     0,     0,
     996,     0,     0,   997,     0,   993,   989,     0,     0,     0,
       0,   990,     0,     0,     0,     0,     0,   994,     0,     0,
     995,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   991,   992,   996,   994,     0,   997,   995,     0,
       0,     0,     0,     0,     0,     0,   993,     0,     0,     0,
     998,     0,   996,     0,     0,   997,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   998,     0,
       0,     0,     0,     0,     0,     0,   994,     0,     0,   995,
       0,     0,     0,     0,     0,     0,     0,   998,     0,     0,
       0,     0,     0,   996,     0,     0,   997,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   998,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   998,
       0,     0,     0,     0,     0,     0,   999,     0,     0,  1000,
    1001,  1002,     0,  1003,  1004,  1005,  1006,  1007,  1008,     0,
       0,     0,     0,  2165,   999,     0,     0,  1000,  1001,  1002,
       0,  1003,  1004,  1005,  1006,  1007,  1008,     0,     0,     0,
     998,  2308,     0,   999,     0,     0,  1000,  1001,  1002,     0,
    1003,  1004,  1005,  1006,  1007,  1008,     0,     0,     0,     0,
    2494,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   999,     0,     0,
    1000,  1001,  1002,     0,  1003,  1004,  1005,  1006,  1007,  1008,
       0,     0,     0,     0,  2506,   999,     0,     0,  1000,  1001,
    1002,     0,  1003,  1004,  1005,  1006,  1007,  1008,     0,     0,
       0,     0,  2599,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   999,  1039,     0,  1000,
    1001,  1002,     0,  1003,  1004,  1005,  1006,  1007,  1008,     0,
       0,  1465,   100,   101,   102,   103,   104,   105,   106,   107,
    1040,   109,   110,   111,  1041,  1042,  1043,  1044,  1045,  1046,
    1047,   112,   113,  1048,   114,   115,   116,   586,   117,   118,
     119,   120,   121,   587,   122,   123,  1049,   124,   125,   126,
     127,   128,  1050,  1051,   129,   130,   131,   132,   133,  1052,
     134,   135,   136,   137,   138,  1053,   588,  1054,   139,   140,
     141,   142,   143,   589,   144,   145,   146,  1055,   147,   148,
     149,   150,   151,   152,  1056,   590,   153,   154,   155,  1057,
    1058,  1059,   591,  1060,  1061,  1062,   156,   157,   158,   159,
     160,   161,   162,   163,   164,  1063,   165,  1064,   166,   167,
     168,   169,   170,   171,  1065,   172,   173,   174,   175,   176,
    1066,  1067,   177,   178,   179,   180,   181,  1068,   182,   183,
     184,  1069,   185,   186,   187,  1070,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,  1071,   198,  1072,   199,
     200,   201,   202,  1073,   203,  1074,   204,   592,  1075,   593,
     205,   206,   207,   208,  1076,   209,  1077,   210,   211,  1078,
     212,   213,   214,   215,   216,   594,   217,   218,   219,   220,
    1079,   221,   222,   223,   224,   225,   226,  1080,   227,   595,
     228,   229,   230,   231,   232,   233,   234,  1081,   235,  1082,
     236,   596,   597,   237,   598,   238,   239,   240,   241,   242,
    1083,  1084,   243,   599,   244,   600,  1085,   245,   246,   247,
    1086,  1087,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   601,
     265,   266,   267,   268,   269,  1088,   270,   271,   602,   272,
    1089,   273,   274,   275,   276,   277,   278,  1090,   279,   280,
    1091,  1092,   281,   282,   283,  1093,  1094,   284,   285,   603,
     286,   604,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,  1095,   297,   298,   299,   300,   301,   302,   461,
     304,   305,  1096,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,  1097,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
    1098,   332,   333,   605,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,  1099,   347,   348,
     349,   350,   351,  1100,   352,   353,   354,   355,   356,   606,
     357,   358,   359,   360,  1101,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,  1102,   374,
     375,  1103,   376,   607,   377,   378,   379,   380,   381,  1104,
     382,   383,  1105,  1106,   384,   385,   386,   387,   388,  1107,
     389,   390,   391,   392,   393,   394,   395,  1108,  1109,   396,
     397,   398,   399,   400,  1110,  1111,   401,   402,   403,   404,
     405,   406,   407,  1112,   408,   609,   409,   410,   411,   412,
    1113,  1114,   413,  1115,  1116,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,    99,     0,     0,     0,     0,
       0,     0,     0,     0,  1117,     0,     0,     0,     0,     0,
     100,   101,   102,   103,   104,   105,   106,   107,     0,   109,
     110,   111,     0,     0,     0,     0,     0,     0,     0,   112,
     113,     0,   114,   115,   116,     0,   117,   118,   119,   120,
     121,     0,   122,   123,     0,   124,   125,   126,   127,   128,
       0,     0,   129,   130,   131,   132,   133,     0,   134,   135,
     136,   137,   138,     0,     0,     0,   139,   140,   141,   142,
     143,     0,   144,   145,   146,     0,   147,   148,   149,   150,
     151,   152,     0,     0,   153,   154,   155,     0,     0,     0,
       0,     0,     0,     0,   156,   157,   158,   159,   160,   161,
     162,   163,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,   174,   175,   176,     0,     0,
     177,   178,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,     0,   198,     0,   199,   200,   201,
     202,     0,   203,     0,   204,     0,     0,     0,   205,   206,
     207,   208,     0,   209,     0,   210,   211,     0,   212,   213,
     214,   215,   216,     0,   217,   218,   219,   220,     0,   221,
     222,   223,   224,   225,   226,     0,   227,     0,   228,   229,
     230,   231,   232,   233,   234,     0,   235,     0,   236,     0,
       0,   237,     0,   238,   239,   240,   241,   242,     0,     0,
     243,     0,   244,     0,     0,   245,   246,   247,     0,     0,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,     0,   265,   266,
     267,   268,   269,     0,   270,   271,     0,   272,     0,   273,
     274,   275,   276,   277,   278,     0,   279,   280,     0,     0,
     281,   282,   283,     0,     0,   284,   285,     0,   286,     0,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
       0,   297,   298,   299,   300,   301,   302,   461,   304,   305,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,     0,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,     0,   332,
     333,     0,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,     0,   347,   348,   349,   350,
     351,     0,   352,   353,   354,   355,   356,     0,   357,   358,
     359,   360,     0,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,     0,   374,   375,     0,
     376,     0,   377,   378,   379,   380,   381,     0,   382,   383,
       0,     0,   384,   385,   386,   387,   388,     0,   389,   390,
     391,   392,   393,   394,   395,     0,     0,   396,   397,   398,
     399,   400,     0,     0,   401,   402,   403,   404,   405,   406,
     407,     0,   408,     0,   409,   410,   411,   412,     0,     0,
     413,     0,     0,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   585,   858,   475,     0,     0,     0,   634,
       0,     0,  1902,     0,     0,     0,     0,     0,   100,   101,
     102,   103,   104,   105,   106,   107,     0,   109,   110,   111,
       0,     0,     0,     0,     0,     0,     0,   112,   113,     0,
     114,   115,   116,   586,   117,   118,   119,   120,   121,   587,
     122,   123,     0,   124,   125,   126,   127,   128,     0,     0,
     129,   130,   131,   132,   133,     0,   134,   135,   136,   137,
     138,     0,   588,     0,   139,   140,   141,   142,   143,   589,
     144,   145,   146,     0,   147,   148,   149,   150,   151,   152,
       0,   590,   153,   154,   155,     0,     0,     0,   591,     0,
       0,     0,   156,   157,   158,   159,   160,   161,   162,   163,
     164,  1032,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,   174,   175,   176,     0,     0,   177,   178,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   859,   198,     0,   199,   200,   201,   202,     0,
     203,     0,   204,   592,     0,   593,   205,   206,   207,   208,
       0,   209,     0,   210,   211,     0,   212,   213,   214,   215,
     216,   594,   217,   218,   219,   220,     0,   221,   222,   223,
     224,   225,   226,     0,   227,   595,   228,   229,   230,   231,
     232,   233,   234,     0,   235,     0,   236,   596,   597,   237,
     598,   238,   239,   240,   241,   242,     0,     0,   243,   599,
     244,   600,     0,   245,   246,   247,     0,     0,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   601,   265,   266,   267,   268,
     269,     0,   270,   271,   602,   272,     0,   273,   274,   275,
     276,   277,   278,     0,   279,   280,   860,     0,   281,   282,
     283,     0,     0,   284,   285,   603,   286,   604,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,     0,   297,
     298,   299,   300,   301,   302,   461,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,     0,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,     0,   332,   333,   605,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,     0,   347,   348,   349,   350,   351,     0,
     352,   353,   354,   355,   356,   606,   357,   358,   359,   360,
       0,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,     0,   374,   375,     0,   376,   607,
     377,   378,   379,   380,   381,     0,   382,   383,     0,     0,
     384,   385,   386,   387,   388,   861,   389,   390,   391,   392,
     393,   394,   395,     0,     0,   396,   397,   398,   399,   400,
       0,     0,   401,   402,   403,   404,   405,   406,   407,     0,
     408,   609,   409,   410,   411,   412,     0,     0,   413,     0,
       0,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   585,   858,   475,     0,     0,     0,   634,   862,   863,
       0,     0,     0,     0,     0,     0,   100,   101,   102,   103,
     104,   105,   106,   107,     0,   109,   110,   111,     0,     0,
       0,     0,     0,     0,     0,   112,   113,     0,   114,   115,
     116,   586,   117,   118,   119,   120,   121,   587,   122,   123,
       0,   124,   125,   126,   127,   128,     0,     0,   129,   130,
     131,   132,   133,     0,   134,   135,   136,   137,   138,     0,
     588,     0,   139,   140,   141,   142,   143,   589,   144,   145,
     146,     0,   147,   148,   149,   150,   151,   152,     0,   590,
     153,   154,   155,     0,     0,     0,   591,     0,     0,     0,
     156,   157,   158,   159,   160,   161,   162,   163,   164,  1034,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,   174,   175,   176,     0,     0,   177,   178,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     859,   198,     0,   199,   200,   201,   202,     0,   203,     0,
     204,   592,     0,   593,   205,   206,   207,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   594,
     217,   218,   219,   220,     0,   221,   222,   223,   224,   225,
     226,     0,   227,   595,   228,   229,   230,   231,   232,   233,
     234,     0,   235,     0,   236,   596,   597,   237,   598,   238,
     239,   240,   241,   242,     0,     0,   243,   599,   244,   600,
       0,   245,   246,   247,     0,     0,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   601,   265,   266,   267,   268,   269,     0,
     270,   271,   602,   272,     0,   273,   274,   275,   276,   277,
     278,     0,   279,   280,   860,     0,   281,   282,   283,     0,
       0,   284,   285,   603,   286,   604,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,     0,   297,   298,   299,
     300,   301,   302,   461,   304,   305,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,     0,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,     0,   332,   333,   605,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,     0,   347,   348,   349,   350,   351,     0,   352,   353,
     354,   355,   356,   606,   357,   358,   359,   360,     0,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,     0,   374,   375,     0,   376,   607,   377,   378,
     379,   380,   381,     0,   382,   383,     0,     0,   384,   385,
     386,   387,   388,   861,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,   398,   399,   400,     0,     0,
     401,   402,   403,   404,   405,   406,   407,     0,   408,   609,
     409,   410,   411,   412,     0,     0,   413,     0,     0,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   585,
     858,   475,     0,     0,     0,   634,   862,   863,     0,     0,
       0,     0,     0,     0,   100,   101,   102,   103,   104,   105,
     106,   107,     0,   109,   110,   111,     0,     0,     0,     0,
       0,     0,     0,   112,   113,     0,   114,   115,   116,   586,
     117,   118,   119,   120,   121,   587,   122,   123,     0,   124,
     125,   126,   127,   128,     0,     0,   129,   130,   131,   132,
     133,     0,   134,   135,   136,   137,   138,     0,   588,     0,
     139,   140,   141,   142,   143,   589,   144,   145,   146,     0,
     147,   148,   149,   150,   151,   152,     0,   590,   153,   154,
     155,     0,     0,     0,   591,     0,     0,     0,   156,   157,
     158,   159,   160,   161,   162,   163,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   859,   198,
       0,   199,   200,   201,   202,     0,   203,     0,   204,   592,
       0,   593,   205,   206,   207,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216,   594,   217,   218,
     219,   220,     0,   221,   222,   223,   224,   225,   226,     0,
     227,   595,   228,   229,   230,   231,   232,   233,   234,     0,
     235,     0,   236,   596,   597,   237,   598,   238,   239,   240,
     241,   242,     0,     0,   243,   599,   244,   600,     0,   245,
     246,   247,     0,     0,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   601,   265,   266,   267,   268,   269,     0,   270,   271,
     602,   272,     0,   273,   274,   275,   276,   277,   278,     0,
     279,   280,   860,     0,   281,   282,   283,     0,     0,   284,
     285,   603,   286,   604,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,     0,   297,   298,   299,   300,   301,
     302,   461,   304,   305,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,     0,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,     0,   332,   333,   605,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,     0,
     347,   348,   349,   350,   351,     0,   352,   353,   354,   355,
     356,   606,   357,   358,   359,   360,     0,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
       0,   374,   375,     0,   376,   607,   377,   378,   379,   380,
     381,     0,   382,   383,     0,     0,   384,   385,   386,   387,
     388,   861,   389,   390,   391,   392,   393,   394,   395,     0,
       0,   396,   397,   398,   399,   400,     0,     0,   401,   402,
     403,   404,   405,   406,   407,     0,   408,   609,   409,   410,
     411,   412,     0,     0,   413,     0,     0,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,     0,     0,   979,
       0,     0,   980,     0,   862,   863,   981,   982,   983,     0,
       0,     0,     0,     0,     0,     0,     0,   979,     0,     0,
     980,     0,     0,   984,   981,   982,   983,  1489,     0,     0,
       0,   986,     0,     0,     0,     0,   979,     0,   987,   980,
       0,   984,     0,   981,   982,   983,     0,     0,     0,   986,
       0,     0,     0,     0,     0,     0,   987,     0,     0,     0,
     984,     0,   988,     0,     0,     0,     0,     0,   986,     0,
     979,     0,     0,   980,     0,   987,     0,   981,   982,   983,
     988,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   984,     0,     0,  1653,     0,   988,
       0,     0,   986,     0,     0,     0,     0,     0,     0,   987,
       0,  1490,   979,     0,     0,   980,     0,     0,     0,   981,
     982,   983,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   988,     0,     0,   984,     0,     0,     0,
       0,     0,     0,     0,   986,     0,     0,     0,     0,     0,
       0,   987,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1693,     0,
       0,     0,   989,  1694,     0,   988,     0,   990,     0,     0,
       0,     0,     0,     0,     0,     0,  2561,     0,     0,     0,
     989,     0,     0,     0,     0,   990,     0,     0,   991,   992,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   989,
       0,     0,   993,     0,   990,     0,   991,   992,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     993,     0,     0,     0,     0,   991,   992,     0,     0,     0,
       0,     0,   994,   989,     0,   995,     0,     0,   990,   993,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   996,
     994,     0,   997,   995,     0,     0,     0,     0,     0,   991,
     992,     0,     0,     0,     0,     0,     0,   996,     0,   994,
     997,     0,   995,   993,     0,   989,     0,     0,     0,     0,
     990,     0,     0,     0,     0,     0,   996,     0,     0,   997,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   991,   992,   994,     0,     0,   995,     0,     0,     0,
       0,  2562,     0,     0,     0,   993,     0,     0,     0,     0,
     996,     0,     0,   997,     0,     0,     0,     0,     0,     0,
       0,   979,     0,     0,   980,     0,   998,     0,   981,   982,
     983,     0,     0,     0,     0,   994,     0,     0,   995,     0,
       0,     0,     0,     0,   998,   984,     0,     0,  1702,     0,
       0,     0,   996,   986,     0,   997,     0,     0,     0,     0,
     987,     0,     0,   998,     0,     0,     0,     0,     0,     0,
       0,     0,  1667,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1491,     0,   988,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   998,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   999,     0,     0,  1000,  1001,  1002,     0,  1003,
    1004,  1005,  1006,  1007,  1008,     0,     0,     0,     0,   998,
     999,     0,     0,  1000,  1001,  1002,     0,  1003,  1004,  1005,
    1006,  1007,  1008,     0,     0,     0,     0,     0,     0,   999,
       0,     0,  1000,  1001,  1002,     0,  1003,  1004,  1005,  1006,
    1007,  1008,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   999,   989,     0,  1000,  1001,  1002,   990,
    1003,  1004,  1005,  1006,  1007,  1008,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     991,   992,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   993,   999,     0,     0,  1000,  1001,
    1002,     0,  1003,  1004,  1005,  1006,  1007,  1008,   979,     0,
       0,   980,     0,     0,     0,   981,   982,   983,     0,     0,
       0,     0,     0,     0,   994,     0,   979,   995,     0,   980,
       0,     0,   984,   981,   982,   983,     0,     0,     0,     0,
     986,   996,     0,     0,   997,   979,     0,   987,   980,   785,
     984,     0,   981,   982,   983,   786,     0,     0,   986,     0,
       0,     0,   798,     0,     0,   987,     0,     0,     0,   984,
       0,   988,     0,     0,     0,     0,     0,   986,     0,   979,
       0,   799,   980,     0,   987,     0,   981,   982,   983,   988,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   984,     0,     0,     0,     0,   988,     0,
       0,   986,     0,     0,     0,     0,     0,     0,   987,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   998,     0,
     800,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   988,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   787,     0,
       0,     0,     0,     0,  1707,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   989,     0,     0,     0,     0,   990,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   989,
       0,     0,     0,     0,   990,     0,     0,   991,   992,     0,
       0,     0,     0,     0,     0,   801,     0,     0,   989,     0,
       0,   993,     0,   990,   999,   991,   992,  1000,  1001,  1002,
       0,  1003,  1004,  1005,  1006,  1007,  1008,     0,     0,   993,
       0,     0,     0,     0,   991,   992,     0,     0,     0,     0,
       0,   994,   989,     0,   995,     0,     0,   990,   993,     0,
       0,     0,   802,     0,     0,   803,     0,     0,   996,   994,
       0,   997,   995,     0,     0,     0,   804,     0,   991,   992,
       0,     0,     0,     0,     0,     0,   996,     0,   994,   997,
       0,   995,   993,     0,     0,     0,     0,   788,     0,     0,
       0,     0,     0,     0,     0,   996,     0,   805,   997,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   994,     0,     0,   995,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   996,
       0,     0,     0,     0,     0,     0,   806,     0,     0,     0,
     790,   807,     0,     0,     0,   998,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   808,     0,   998,     0,     0,     0,   809,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   810,   998,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1920,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   998,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   792,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   999,     0,     0,  1000,  1001,  1002,     0,  1003,  1004,
    1005,  1006,  1007,  1008,     0,     0,     0,     0,     0,   999,
       0,     0,  1000,  1001,  1002,     0,  1003,  1004,  1005,  1006,
    1007,  1008,     0,     0,     0,     0,     0,     0,   999,     0,
       0,  1000,  1001,  1002,     0,  1003,  1004,  1005,  1006,  1007,
    1008,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1039,   999,  1395,     0,  1000,  1001,  1002,     0,  1003,
    1004,  1005,  1006,  1007,  1008,     0,   100,   101,   102,   103,
     104,   105,   106,   107,  1040,   109,   110,   111,  1041,  1042,
    1043,  1044,  1045,  1046,  1047,   112,   113,  1048,   114,   115,
     116,   586,   117,   118,   119,   120,   121,   587,   122,   123,
    1049,   124,   125,   126,   127,   128,  1050,  1051,   129,   130,
     131,   132,   133,  1052,   134,   135,   136,   137,   138,  1053,
     588,  1054,   139,   140,   141,   142,   143,   589,   144,   145,
     146,  1055,   147,   148,   149,   150,   151,   152,  1056,   590,
     153,   154,   155,  1057,  1058,  1059,   591,  1060,  1061,  1062,
     156,   157,   158,   159,   160,   161,   162,   163,   164,  1063,
     165,  1064,   166,   167,   168,   169,   170,   171,  1065,   172,
     173,   174,   175,   176,  1066,  1067,   177,   178,   179,   180,
     181,  1068,   182,   183,   184,  1069,   185,   186,   187,  1070,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
    1071,   198,  1072,   199,   200,   201,   202,  1073,   203,  1074,
     204,   592,  1075,   593,   205,   206,   207,   208,  1076,   209,
    1077,   210,   211,  1078,   212,   213,   214,   215,   216,   594,
     217,   218,   219,   220,  1079,   221,   222,   223,   224,   225,
     226,  1080,   227,   595,   228,   229,   230,   231,   232,   233,
     234,  1081,   235,  1082,   236,   596,   597,   237,   598,   238,
     239,   240,   241,   242,  1083,  1084,   243,   599,   244,   600,
    1085,   245,   246,   247,  1086,  1087,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   601,   265,   266,   267,   268,   269,  1088,
     270,   271,   602,   272,  1089,   273,   274,   275,   276,   277,
     278,  1090,   279,   280,  1091,  1092,   281,   282,   283,  1093,
    1094,   284,   285,   603,   286,   604,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,  1095,   297,   298,   299,
     300,   301,   302,   461,   304,   305,  1096,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,  1097,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,  1098,   332,   333,   605,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,  1099,   347,   348,   349,   350,   351,  1100,   352,   353,
     354,   355,   356,   606,   357,   358,   359,   360,  1101,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,  1102,   374,   375,  1103,   376,   607,   377,   378,
     379,   380,   381,  1104,   382,   383,  1105,  1106,   384,   385,
     386,   387,   388,  1107,   389,   390,   391,   392,   393,   394,
     395,  1108,  1109,   396,   397,   398,   399,   400,  1110,  1111,
     401,   402,   403,   404,   405,   406,   407,  1112,   408,   609,
     409,   410,   411,   412,  1113,  1114,   413,  1115,  1116,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,  1039,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   100,   101,   102,   103,   104,   105,
     106,   107,  1040,   109,   110,   111,  1041,  1042,  1043,  1044,
    1045,  1046,  1047,   112,   113,  1048,   114,   115,   116,   586,
     117,   118,   119,   120,   121,   587,   122,   123,  1049,   124,
     125,   126,   127,   128,  1050,  1051,   129,   130,   131,   132,
     133,  1052,   134,   135,   136,   137,   138,  1053,   588,  1054,
     139,   140,   141,   142,   143,   589,   144,   145,   146,  1055,
     147,   148,   149,   150,   151,   152,  1056,   590,   153,   154,
     155,  1057,  1058,  1059,   591,  1060,  1061,  1062,   156,   157,
     158,   159,   160,   161,   162,   163,   164,  1063,   165,  1064,
     166,   167,   168,   169,   170,   171,  1065,   172,   173,   174,
     175,   176,  1066,  1067,   177,   178,   179,   180,   181,  1068,
     182,   183,   184,  1069,   185,   186,   187,  1070,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,  1071,   198,
    1072,   199,   200,   201,   202,  1073,   203,  1074,   204,   592,
    1075,   593,   205,   206,   207,   208,  1076,   209,  1077,   210,
     211,  1078,   212,   213,   214,   215,   216,   594,   217,   218,
     219,   220,  1079,   221,   222,   223,   224,   225,   226,  1080,
     227,   595,   228,   229,   230,   231,   232,   233,   234,  1081,
     235,  1082,   236,   596,   597,   237,   598,   238,   239,   240,
     241,   242,  1083,  1084,   243,   599,   244,   600,  1085,   245,
     246,   247,  1086,  1087,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   601,   265,   266,   267,   268,   269,  1088,   270,   271,
     602,   272,  1089,   273,   274,   275,   276,   277,   278,  1090,
     279,   280,  1091,  1092,   281,   282,   283,  1093,  1094,   284,
     285,   603,   286,   604,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,  1095,   297,   298,   299,   300,   301,
     302,   461,   304,   305,  1096,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,  1097,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,  1098,   332,   333,   605,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,  1099,
     347,   348,   349,   350,   351,  1100,   352,   353,   354,   355,
     356,   606,   357,   358,   359,   360,  1101,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
    1102,   374,   375,  1103,   376,   607,   377,   378,   379,   380,
     381,  1104,   382,   383,  1105,  1106,   384,   385,   386,   387,
     388,  1107,   389,   390,   391,   392,   393,   394,   395,  1108,
    1109,   396,   397,   398,   399,   400,  1110,  1111,   401,   402,
     403,   404,   405,   406,   407,  1112,   408,   609,   409,   410,
     411,   412,  1113,  1114,   413,  1115,  1116,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,  1039,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   100,   101,   102,   103,  1538,   105,   106,   107,
    1040,   109,   110,   111,  1041,  1042,  1043,  1044,  1045,  1046,
    1047,   112,   113,  1048,   114,   115,   116,   586,   117,   118,
     119,   120,   121,   587,   122,   123,  1049,   124,   125,   126,
     127,   128,  1050,  1051,   129,   130,   131,   132,   133,  1052,
     134,   135,   136,   137,   138,  1053,   588,  1054,   139,   140,
     141,   142,   143,   589,   144,   145,   146,  1055,   147,   148,
     149,   150,   151,   152,  1056,   590,   153,   154,   155,  1057,
    1058,  1059,   591,  1060,  1061,  1062,   156,   157,   158,   159,
     160,   161,   162,   163,   164,  1063,   165,  1064,   166,   167,
     168,   169,   170,   171,  1065,   172,   173,   174,   175,   176,
    1066,  1067,   177,   178,   179,  1539,   181,  1068,   182,   183,
     184,  1069,   185,   186,   187,  1070,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,  1071,   198,  1072,   199,
     200,   201,   202,  1073,   203,  1074,   204,   592,  1075,   593,
     205,   206,   207,   208,  1076,   209,  1077,   210,   211,  1078,
     212,   213,   214,   215,   216,   594,   217,   218,   219,   220,
    1079,   221,   222,   223,   224,   225,   226,  1080,   227,   595,
     228,   229,   230,   231,   232,   233,   234,  1081,   235,  1082,
     236,   596,   597,   237,   598,   238,   239,   240,   241,   242,
    1083,  1084,   243,   599,   244,   600,  1085,   245,   246,   247,
    1086,  1087,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   601,
     265,   266,   267,   268,   269,  1088,   270,   271,   602,   272,
    1089,   273,   274,   275,   276,   277,   278,  1090,   279,   280,
    1091,  1092,   281,   282,   283,  1093,  1094,   284,   285,   603,
     286,   604,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,  1095,   297,   298,   299,   300,   301,   302,   461,
     304,   305,  1096,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,  1097,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
    1098,   332,   333,   605,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,  1099,   347,   348,
     349,   350,   351,  1100,  1540,   353,   354,   355,   356,   606,
     357,   358,   359,   360,  1101,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,  1102,   374,
     375,  1103,   376,   607,   377,   378,   379,   380,   381,  1104,
     382,   383,  1105,  1106,   384,   385,   386,   387,   388,  1107,
     389,   390,   391,   392,   393,   394,   395,  1108,  1109,   396,
     397,   398,   399,   400,  1110,  1111,   401,   402,   403,   404,
     405,   406,   407,  1112,   408,   609,   409,   410,   411,   412,
    1113,  1114,   413,  1115,  1116,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   629,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     100,   101,   102,   103,   104,   105,   106,   107,     0,   109,
     110,   111,     0,     0,     0,     0,     0,     0,     0,   112,
     113,     0,   114,   115,   116,   586,   117,   118,   119,   120,
     121,   587,   122,   123,     0,   124,   125,   126,   127,   128,
       0,   640,   129,   130,   131,   132,   133,     0,   134,   135,
     136,   137,   643,     0,   644,     0,   139,   140,   141,   142,
     143,   589,   144,   145,   146,     0,   147,   148,   149,   150,
     151,   152,     0,   590,   153,   154,   155,   645,   646,   647,
     648,   649,   650,   651,   156,   157,   158,   159,   160,   161,
     162,   163,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,   174,   175,   176,     0,     0,
     177,   178,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   657,     0,   198,     0,   199,   200,   201,
     202,     0,   203,     0,   204,   592,     0,   593,   205,   206,
     207,   208,     0,   209,     0,   210,   211,     0,   212,   213,
     214,   215,   216,   594,   217,   218,   219,   220,     0,   221,
     222,   223,   224,   225,   226,     0,   227,   595,   228,   229,
     230,   231,   232,   233,   234,     0,   235,     0,   236,   596,
     597,   237,   598,   238,   239,   240,   241,   242,     0,     0,
     243,   599,   244,   600,     0,   245,   246,   247,   663,   664,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   601,   265,   266,
     267,   268,   269,     0,   270,   271,   602,   272,     0,   669,
     274,   275,   276,   277,   278,     0,   279,   280,     0,     0,
     281,   282,   283,     0,     0,   284,   285,   603,   286,   604,
     672,   288,   289,   290,   291,   292,   293,   294,   295,   296,
       0,   297,   298,   673,   300,   301,   302,   461,   304,   305,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,     0,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,     0,   332,
     333,   605,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,     0,   347,   348,   349,   350,
     351,   676,   352,   353,   354,   355,   356,   606,   357,   358,
     359,   360,     0,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   678,     0,   374,   375,     0,
     376,   607,   377,   378,   379,   380,   381,     0,   382,   383,
       0,     0,   384,   385,   681,   387,   682,     0,   389,   390,
     391,   392,   393,   394,   395,     0,     0,   396,   397,   398,
     399,   400,   684,     0,   401,   402,   403,   404,   405,   406,
     407,     0,   408,   609,   409,   410,   411,   412,     0,     0,
     413,     0,     0,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   585,     0,   475,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   100,   101,
     102,   103,   104,   105,   106,   107,     0,   109,   110,   111,
       0,     0,     0,     0,     0,     0,     0,   112,   113,     0,
     114,   115,   116,   586,   117,   118,   119,   120,   121,   587,
     122,   123,     0,   124,   125,   126,   127,   128,     0,     0,
     129,   130,   131,   132,   133,     0,   134,   135,   136,   137,
     138,     0,   588,     0,   139,   140,   141,   142,   143,   589,
     144,   145,   146,     0,   147,   148,   149,   150,   151,   152,
       0,   590,   153,   154,   155,     0,     0,     0,   591,     0,
       0,     0,   156,   157,   158,   159,   160,   161,   162,   163,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,   174,   175,   176,     0,     0,   177,   178,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   859,   198,     0,   199,   200,   201,   202,     0,
     203,     0,   204,   592,     0,   593,   205,   206,   207,   208,
       0,   209,     0,   210,   211,     0,   212,   213,   214,   215,
     216,   594,   217,   218,   219,   220,     0,   221,   222,   223,
     224,   225,   226,     0,   227,   595,   228,   229,   230,   231,
     232,   233,   234,     0,   235,     0,   236,   596,   597,   237,
     598,   238,   239,   240,   241,   242,     0,     0,   243,   599,
     244,   600,     0,   245,   246,   247,     0,     0,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   601,   265,   266,   267,   268,
     269,     0,   270,   271,   602,   272,     0,   273,   274,   275,
     276,   277,   278,     0,   279,   280,   860,     0,   281,   282,
     283,     0,     0,   284,   285,   603,   286,   604,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,     0,   297,
     298,   299,   300,   301,   302,   461,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,     0,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,     0,   332,   333,   605,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,     0,   347,   348,   349,   350,   351,     0,
     352,   353,   354,   355,   356,   606,   357,   358,   359,   360,
       0,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,     0,   374,   375,     0,   376,   607,
     377,   378,   379,   380,   381,     0,   382,   383,     0,     0,
     384,   385,   386,   387,   388,   861,   389,   390,   391,   392,
     393,   394,   395,     0,     0,   396,   397,   398,   399,   400,
       0,     0,   401,   402,   403,   404,   405,   406,   407,     0,
     408,   609,   409,   410,   411,   412,     0,     0,   413,     0,
       0,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   585,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   100,   101,   102,   103,
     104,   105,   106,   107,     0,   109,   110,   111,     3,     4,
       0,     0,     0,     0,     0,   112,   113,     0,   114,   115,
     116,   586,   117,   118,   119,   120,   121,   587,   122,   123,
       0,   124,   125,   126,   127,   128,     0,     0,   129,   130,
     131,   132,   133,     0,   134,   135,   136,   137,   138,     0,
     588,     0,   139,   140,   141,   142,   143,   589,   144,   145,
     146,     0,   147,   148,   149,   150,   151,   152,     0,   590,
     153,   154,   155,     0,     0,     0,   591,     0,     0,     0,
     156,   157,   158,   159,   160,   161,   162,   163,   164,     0,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,   174,   175,   176,     0,     0,   177,   178,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
       0,   198,     0,   199,   200,   201,   202,     0,   203,     0,
     204,   592,     0,   593,   205,   206,   207,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   594,
     217,   218,   219,   220,     0,   221,   222,   223,   224,   225,
     226,     0,   227,   595,   228,   229,   230,   231,   232,   233,
     234,     0,   235,     0,   236,   596,   597,   237,   598,   238,
     239,   240,   241,   242,     0,     0,   243,   599,   244,   600,
       0,   245,   246,   247,     0,     0,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   601,   265,   266,   267,   268,   269,     0,
     270,   271,   602,   272,     0,   273,   274,   275,   276,   277,
     278,     0,   279,   280,     0,     0,   281,   282,   283,     0,
       0,   284,   285,   603,   286,   604,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,     0,   297,   298,   299,
     300,   301,   302,   461,   304,   305,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,     0,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,     0,   332,   333,   605,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,     0,   347,   348,   349,   350,   351,     0,   352,   353,
     354,   355,   356,   606,   357,   358,   359,   360,     0,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,     0,   374,   375,     0,   376,   607,   377,   378,
     379,   380,   381,     0,   382,   383,     0,     0,   384,   385,
     386,   387,   388,     0,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,   398,   399,   400,     0,     0,
     401,   402,   403,   404,   405,   406,   407,     0,   408,   609,
     409,   410,   411,   412,     0,     0,   413,     0,     0,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   629,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   100,   101,   102,   103,   104,   105,
     106,   107,     0,   109,   110,   111,     0,     0,     0,     0,
       0,     0,     0,   112,   113,     0,   114,   115,   116,   586,
     117,   118,   119,   120,   121,   587,   122,   123,     0,   124,
     125,   126,   127,   128,     0,     0,   129,   130,   131,   132,
     133,     0,   134,   135,   136,   137,   138,     0,   588,     0,
     139,   140,   141,   142,   143,   589,   144,   145,   146,     0,
     147,   148,   149,   150,   151,   152,     0,   590,   153,   154,
     155,     0,     0,     0,   591,     0,     0,     0,   156,   157,
     158,   159,   160,   161,   162,   163,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,     0,   198,
       0,   199,   200,   201,   202,     0,   203,     0,   204,   592,
       0,   593,   205,   206,   207,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216,   594,   217,   218,
     219,   220,     0,   221,   222,   223,   224,   225,   226,     0,
     227,   595,   228,   229,   230,   231,   232,   233,   234,     0,
     235,     0,   236,   596,   597,   237,   598,   238,   239,   240,
     241,   242,     0,     0,   243,   599,   244,   600,     0,   245,
     246,   247,     0,     0,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   601,   265,   266,   267,   268,   269,     0,   270,   271,
     602,   272,     0,   273,   274,   275,   276,   277,   278,     0,
     279,   280,     0,     0,   281,   282,   283,     0,     0,   284,
     285,   603,   286,   604,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,     0,   297,   298,   299,   300,   301,
     302,   461,   304,   305,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,     0,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,     0,   332,   333,   605,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,     0,
     347,   348,   349,   350,   351,     0,   352,   353,   354,   355,
     356,   606,   357,   358,   359,   360,     0,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
       0,   374,   375,     0,   376,   607,   377,   378,   379,   380,
     381,     0,   382,   383,     0,     0,   384,   385,   386,   387,
     388,     0,   389,   390,   391,   392,   393,   394,   395,     0,
       0,   396,   397,   398,   399,   400,     0,     0,   401,   402,
     403,   404,   405,   406,   407,     0,   408,   609,   409,   410,
     411,   412,     0,     0,   413,     0,     0,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,    99,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   100,   101,   102,   103,   104,   105,   106,   107,
       0,   109,   110,   111,     0,     0,     0,     0,     0,     0,
       0,   112,   113,     0,   114,   115,   116,     0,   117,   118,
     119,   120,   121,     0,   122,   123,     0,   124,   125,   126,
     127,   128,     0,     0,   129,   130,   131,   132,   133,  1178,
     134,   135,   136,   137,   138,     0,     0,  1179,   139,   140,
     141,   142,   143,     0,   144,   145,   146,  1180,   147,   148,
     149,   150,   151,   152,     0,     0,   153,   154,   155,     0,
       0,     0,     0,     0,     0,     0,   156,   157,   158,   159,
     160,   161,   162,   163,   164,     0,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,   174,   175,   176,
       0,     0,   177,   178,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,     0,   198,     0,   199,
     200,   201,   202,     0,   203,  1181,   204,     0,     0,     0,
     205,   206,   207,   208,     0,   209,     0,   210,   211,     0,
     212,   213,   214,   215,  1182,     0,   217,   218,   219,   220,
       0,   221,   222,   223,   224,   225,   226,     0,   227,     0,
     228,   229,   230,   231,   232,   233,   234,     0,   235,     0,
     236,     0,     0,   237,     0,   238,   239,   240,   241,   242,
       0,     0,   243,     0,   244,     0,     0,   245,   246,   247,
       0,     0,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,     0,
     265,   266,   267,   268,   269,     0,   270,   271,     0,   272,
       0,   273,   274,   275,   276,   277,   278,     0,   279,   280,
       0,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,     0,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,     0,   297,   298,   299,   300,   301,   302,   461,
     304,   305,  1183,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,     0,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
       0,   332,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,     0,   347,   348,
     349,   350,   351,     0,   352,   353,   354,   355,   356,     0,
     357,   358,   359,   360,     0,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,     0,   374,
     375,     0,   376,     0,   377,   378,   379,   380,   381,     0,
     382,   383,     0,     0,   384,   385,   386,   387,   388,     0,
     389,   390,   391,   392,   393,   394,   395,     0,  1184,   396,
     397,   398,   399,   400,     0,     0,   401,   402,   403,   404,
     405,   406,   407,     0,   408,     0,   409,   410,   411,   412,
       0,     0,   413,     0,     0,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,    99,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     100,   101,   102,   103,   104,   105,   106,   107,     0,   109,
     110,   111,     0,     0,     0,     0,     0,     0,     0,   112,
     113,     0,   114,   115,   116,     0,   117,   118,   119,   120,
     121,     0,   122,   123,     0,   124,   125,   126,   127,   128,
       0,     0,   129,   130,   131,   132,   133,  1178,   134,   135,
     136,   137,   138,     0,     0,     0,   139,   140,   141,   142,
     143,     0,   144,   145,   146,  1180,   147,   148,   149,   150,
     151,   152,     0,     0,   153,   154,   155,     0,     0,     0,
       0,     0,     0,     0,   156,   157,   158,   159,   160,   161,
     162,   163,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,   174,   175,   176,     0,     0,
     177,   178,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,     0,   198,     0,   199,   200,   201,
     202,     0,   203,  1181,   204,     0,     0,     0,   205,   206,
     207,   208,     0,   209,     0,   210,   211,     0,   212,   213,
     214,   215,   216,     0,   217,   218,   219,   220,     0,   221,
     222,   223,   224,   225,   226,     0,   227,     0,   228,   229,
     230,   231,   232,   233,   234,     0,   235,     0,   236,     0,
       0,   237,     0,   238,   239,   240,   241,   242,     0,     0,
     243,     0,   244,  1591,     0,   245,   246,   247,     0,     0,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,     0,   265,   266,
     267,   268,   269,     0,   270,   271,     0,   272,     0,   273,
     274,   275,   276,   277,   278,     0,   279,   280,     0,     0,
     281,   282,   283,     0,     0,   284,   285,     0,   286,     0,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
       0,   297,   298,   299,   300,   301,   302,   461,   304,   305,
    1183,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,     0,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,     0,   332,
     333,     0,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,     0,   347,   348,   349,   350,
     351,     0,   352,   353,   354,   355,   356,     0,   357,   358,
     359,   360,     0,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,     0,   374,   375,     0,
     376,     0,   377,   378,   379,   380,   381,     0,   382,   383,
       0,     0,   384,   385,   386,   387,   388,     0,   389,   390,
     391,   392,   393,   394,   395,     0,  1184,   396,   397,   398,
     399,   400,     0,     0,   401,   402,   403,   404,   405,   406,
     407,     0,   408,     0,   409,   410,   411,   412,     0,     0,
     413,     0,     0,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,    99,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   100,   101,
     102,   103,   104,   105,   106,   107,     0,   109,   110,   111,
       3,     4,     0,     0,     0,     0,     0,   112,   113,     0,
     114,   115,   116,     0,   117,   118,   119,   120,   121,     0,
     122,   123,     0,   124,   125,   126,   127,   128,     0,     0,
     129,   130,   131,   132,   133,     0,   134,   135,   136,   137,
     138,     0,     0,     0,   139,   140,   141,   142,   143,     0,
     144,   145,   146,     0,   147,   148,   149,   150,   151,   152,
       0,     0,   153,   154,   155,     0,     0,     0,     0,     0,
       0,     0,   156,   157,   158,   159,   160,   161,   162,   163,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,   174,   175,   176,     0,     0,   177,   178,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,     0,   198,     0,   199,   200,   201,   202,     0,
     203,     0,   204,     0,     0,     0,   205,   206,   207,   208,
       0,   209,     0,   210,   211,     0,   212,   213,   214,   215,
     216,     0,   217,   218,   219,   220,     0,   221,   222,   223,
     224,   225,   226,     0,   227,     0,   228,   229,   230,   231,
     232,   233,   234,     0,   235,     0,   236,     0,     0,   237,
       0,   238,   239,   240,   241,   242,     0,     0,   243,     0,
     244,     0,     0,   245,   246,   247,     0,     0,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,     0,   265,   266,   267,   268,
     269,     0,   270,   271,     0,   272,     0,   273,   274,   275,
     276,   277,   278,     0,   279,   280,     0,     0,   281,   282,
     283,     0,     0,   284,   285,     0,   286,     0,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,     0,   297,
     298,   299,   300,   301,   302,   461,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,     0,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,     0,   332,   333,     0,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,     0,   347,   348,   349,   350,   351,     0,
     352,   353,   354,   355,   356,     0,   357,   358,   359,   360,
       0,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,     0,   374,   375,     0,   376,     0,
     377,   378,   379,   380,   381,     0,   382,   383,     0,     0,
     384,   385,   386,   387,   388,     0,   389,   390,   391,   392,
     393,   394,   395,     0,     0,   396,   397,   398,   399,   400,
       0,     0,   401,   402,   403,   404,   405,   406,   407,     0,
     408,     0,   409,   410,   411,   412,     0,     0,   413,     0,
       0,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,    99,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,     0,     0,
       0,     0,     0,     0,     0,   112,   113,     0,   114,   115,
     116,     0,   117,   118,   119,   120,   121,     0,   122,   123,
       0,   124,   125,   126,   127,   128,     0,     0,   129,   130,
     131,   132,   133,     0,   134,   135,   136,   137,   138,     0,
       0,     0,   139,   140,   141,   142,   143,     0,   144,   145,
     146,     0,   147,   148,   149,   150,   151,   152,     0,     0,
     153,   154,   155,     0,     0,     0,     0,     0,     0,     0,
     156,   157,   158,   159,   160,   161,   162,   163,   164,     0,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,   174,   175,   176,     0,     0,   177,   178,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
       0,   198,     0,   199,   200,   201,   202,     0,   203,     0,
     204,     0,     0,     0,   205,   206,   207,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,     0,
     217,   218,   219,   220,     0,   221,   222,   223,   224,   225,
     226,     0,   227,     0,   228,   229,   230,   231,   232,   233,
     234,     0,   235,     0,   236,     0,     0,   237,     0,   238,
     239,   240,   241,   242,     0,     0,   243,     0,   244,     0,
       0,   245,   246,   247,     0,     0,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,     0,   265,   266,   267,   268,   269,     0,
     270,   271,     0,   272,     0,   273,   274,   275,   276,   277,
     278,     0,   279,   280,     0,     0,   281,   282,   283,     0,
       0,   284,   285,     0,   286,     0,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,     0,   297,   298,   299,
     300,   301,   302,   303,   304,   305,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,     0,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,     0,   332,   333,     0,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,     0,   347,   348,   349,   350,   351,     0,   352,   353,
     354,   355,   356,     0,   357,   358,   359,   360,     0,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,     0,   374,   375,     0,   376,     0,   377,   378,
     379,   380,   381,     0,   382,   383,     0,     0,   384,   385,
     386,   387,   388,     0,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,   398,   399,   400,     0,     0,
     401,   402,   403,   404,   405,   406,   407,     0,   408,     0,
     409,   410,   411,   412,     0,     0,   413,     0,     0,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,    99,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   100,   101,   102,   103,   104,   105,
     106,   107,   480,   109,   110,   111,     0,     0,     0,     0,
       0,     0,     0,   112,   113,     0,   114,   115,   116,     0,
     117,   118,   119,   120,   121,     0,   122,   123,     0,   124,
     125,   126,   127,   128,     0,     0,   129,   130,   131,   132,
     133,     0,   134,   135,   136,   137,   138,     0,     0,     0,
     139,   140,   141,   142,   143,     0,   144,   145,   146,     0,
     147,   148,   149,   150,   151,   152,     0,     0,   153,   154,
     155,     0,     0,     0,     0,     0,     0,     0,   156,   157,
     158,   159,   160,   161,   162,   163,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,     0,   198,
       0,   199,   200,   201,   202,     0,   203,     0,   204,     0,
       0,     0,   205,   206,   207,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216,     0,   217,   218,
     219,   220,     0,   221,   222,   223,   224,   225,   226,     0,
     227,     0,   228,   229,   230,   231,   232,   233,   234,     0,
     235,     0,   236,     0,     0,   237,     0,   238,   239,   240,
     241,   242,     0,     0,   243,     0,   244,     0,     0,   245,
     246,   247,     0,     0,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,     0,   265,   266,   267,   268,   269,     0,   270,   271,
       0,   272,     0,   273,   274,   275,   276,   277,   278,     0,
     279,   280,     0,     0,   281,   282,   283,     0,     0,   284,
     285,     0,   286,     0,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,     0,   297,   298,   299,   300,   301,
     302,   461,   304,   305,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,     0,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,     0,   332,   333,     0,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,     0,
     347,   348,   349,   350,   351,     0,   352,   353,   354,   355,
     356,     0,   357,   358,   359,   360,     0,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
       0,   374,   375,     0,   376,     0,   377,   378,   379,   380,
     381,     0,   481,   383,     0,     0,   482,   385,   386,   387,
     388,     0,   389,   390,   391,   392,   393,   394,   395,     0,
       0,   396,   397,   398,   399,   400,     0,     0,   401,   402,
     403,   404,   405,   406,   407,     0,   408,     0,   409,   410,
     411,   412,     0,     0,   413,     0,     0,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,    99,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   100,   101,   102,   103,   104,   105,   106,   107,
       0,   109,   110,   111,     0,     0,     0,     0,     0,     0,
       0,   112,   113,     0,   114,   115,   116,     0,   117,   118,
     119,   120,   121,     0,   122,   123,     0,   124,   125,   126,
     127,   128,     0,     0,   129,   130,   131,   132,   133,     0,
     134,   135,   136,   137,   138,     0,     0,     0,   139,   140,
     141,   142,   143,     0,   144,   145,   146,     0,   147,   148,
     149,   150,   151,   152,     0,     0,   153,   154,   155,     0,
       0,     0,     0,     0,     0,     0,   156,   157,   158,   159,
     160,   161,   162,   163,   164,     0,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,   174,   175,   176,
       0,     0,   177,   178,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,     0,   198,     0,   199,
     200,   201,   202,     0,   203,     0,   204,     0,     0,     0,
     205,   206,   207,   208,     0,   209,     0,   210,   211,     0,
     212,   213,   214,   215,   216,     0,   217,   218,   219,   220,
       0,   221,   222,   223,   224,   225,   226,     0,   227,     0,
     228,   229,   230,   231,   232,   233,   234,     0,   235,     0,
     236,     0,     0,   237,     0,   238,   239,   240,   241,   242,
       0,     0,   243,     0,   244,     0,     0,   245,   246,   247,
       0,     0,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,     0,
     265,   266,   267,   268,   269,     0,   270,   271,     0,   272,
       0,   273,   274,   275,   276,   277,   278,     0,   279,   280,
       0,   500,   281,   282,   283,     0,     0,   284,   285,     0,
     286,     0,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,     0,   297,   298,   299,   300,   301,   302,   461,
     304,   305,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,     0,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
       0,   332,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,     0,   347,   348,
     349,   350,   351,     0,   352,   353,   354,   355,   356,     0,
     357,   358,   359,   360,     0,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,     0,   374,
     375,     0,   376,     0,   377,   378,   379,   380,   381,     0,
     382,   383,     0,     0,   384,   385,   386,   387,   388,     0,
     389,   390,   391,   392,   393,   394,   395,     0,     0,   396,
     397,   398,   399,   400,     0,     0,   401,   402,   403,   404,
     405,   406,   407,     0,   408,     0,   409,   410,   411,   412,
       0,     0,   413,     0,     0,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,    99,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     100,   101,   102,   103,   104,   105,   106,   107,   533,   109,
     110,   111,     0,     0,     0,     0,     0,     0,     0,   112,
     113,     0,   114,   115,   116,     0,   117,   118,   119,   120,
     121,     0,   122,   123,     0,   124,   125,   126,   127,   128,
       0,     0,   129,   130,   131,   132,   133,     0,   134,   135,
     136,   137,   138,     0,     0,     0,   139,   140,   141,   142,
     143,     0,   144,   145,   146,     0,   147,   148,   149,   150,
     151,   152,     0,     0,   153,   154,   155,     0,     0,     0,
       0,     0,     0,     0,   156,   157,   158,   159,   160,   161,
     162,   163,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,   174,   175,   176,     0,     0,
     177,   178,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,     0,   198,     0,   199,   200,   201,
     202,     0,   203,     0,   204,     0,     0,     0,   205,   206,
     207,   208,     0,   209,     0,   210,   211,     0,   212,   213,
     214,   215,   216,     0,   217,   218,   219,   220,     0,   221,
     222,   223,   224,   225,   226,     0,   227,     0,   228,   229,
     230,   231,   232,   233,   234,     0,   235,     0,   236,     0,
       0,   237,     0,   238,   239,   240,   241,   242,     0,     0,
     243,     0,   244,     0,     0,   245,   246,   247,     0,     0,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,     0,   265,   266,
     267,   268,   269,     0,   270,   271,     0,   272,     0,   273,
     274,   275,   276,   277,   278,     0,   279,   280,     0,     0,
     281,   282,   283,     0,     0,   284,   285,     0,   286,     0,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
       0,   297,   298,   299,   300,   301,   302,   461,   304,   305,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,     0,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,     0,   332,
     333,     0,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,     0,   347,   348,   349,   350,
     351,     0,   352,   353,   354,   355,   356,     0,   357,   358,
     359,   360,     0,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,     0,   374,   375,     0,
     376,     0,   377,   378,   379,   380,   381,     0,   534,   383,
       0,     0,   535,   385,   386,   387,   388,     0,   389,   390,
     391,   392,   393,   394,   395,     0,     0,   396,   397,   398,
     399,   400,     0,     0,   401,   402,   403,   404,   405,   406,
     407,     0,   408,     0,   409,   410,   411,   412,     0,     0,
     413,     0,     0,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,    99,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   100,   101,
     102,   103,   104,   105,   106,   107,     0,   109,   110,   111,
       0,     0,     0,     0,     0,     0,     0,   112,   113,     0,
     114,   115,   116,     0,   117,   118,   119,   120,   121,     0,
     122,   123,     0,   124,   125,   126,   127,   128,     0,     0,
     129,   130,   131,   132,   133,     0,   134,   135,   136,   137,
     138,     0,     0,     0,   139,   140,   141,   142,   143,     0,
     144,   145,   146,     0,   147,   148,   149,   150,   151,   152,
       0,     0,   153,   154,   155,     0,     0,     0,     0,     0,
       0,     0,   156,   157,   158,   159,   160,   161,   162,   163,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,   174,   175,   176,     0,     0,   177,   178,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,     0,   198,     0,   199,   200,   201,   202,     0,
     203,     0,   204,     0,     0,     0,   205,   206,   207,   208,
       0,   209,     0,   210,   211,     0,   212,   213,   214,   215,
     542,     0,   217,   218,   219,   220,     0,   221,   222,   223,
     224,   225,   226,     0,   227,     0,   228,   229,   230,   231,
     232,   233,   234,     0,   235,     0,   236,     0,     0,   237,
       0,   238,   239,   240,   241,   242,     0,     0,   243,     0,
     244,     0,     0,   245,   246,   247,     0,     0,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,     0,   265,   266,   267,   268,
     269,     0,   270,   271,     0,   272,     0,   273,   274,   275,
     276,   277,   278,     0,   279,   280,     0,   500,   281,   282,
     283,     0,     0,   284,   285,     0,   286,     0,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,     0,   297,
     298,   299,   300,   301,   302,   461,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,     0,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,     0,   332,   333,     0,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,     0,   347,   348,   349,   350,   351,     0,
     352,   353,   354,   355,   356,     0,   357,   358,   359,   360,
       0,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,     0,   374,   375,     0,   376,     0,
     377,   378,   379,   380,   381,     0,   382,   383,     0,     0,
     384,   385,   386,   387,   388,     0,   389,   390,   391,   392,
     393,   394,   395,     0,     0,   396,   397,   398,   399,   400,
       0,     0,   401,   402,   403,   404,   405,   406,   407,     0,
     408,     0,   409,   410,   411,   412,     0,     0,   413,     0,
       0,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,    99,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   100,   101,   102,   103,
     104,   105,   106,   107,   564,   109,   110,   111,     0,     0,
       0,     0,     0,     0,     0,   112,   113,     0,   114,   115,
     116,     0,   117,   118,   119,   120,   121,     0,   122,   123,
       0,   124,   125,   126,   127,   128,     0,     0,   129,   130,
     131,   132,   133,     0,   134,   135,   136,   137,   138,     0,
       0,     0,   139,   140,   141,   142,   143,     0,   144,   145,
     146,     0,   147,   148,   149,   150,   151,   152,     0,     0,
     153,   154,   155,     0,     0,     0,     0,     0,     0,     0,
     156,   157,   158,   159,   160,   161,   162,   163,   164,     0,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,   174,   175,   176,     0,     0,   177,   178,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
       0,   198,     0,   199,   200,   201,   202,     0,   203,     0,
     204,     0,     0,     0,   205,   206,   207,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,     0,
     217,   218,   219,   220,     0,   221,   222,   223,   224,   225,
     226,     0,   227,     0,   228,   229,   230,   231,   232,   233,
     234,     0,   235,     0,   236,     0,     0,   237,     0,   238,
     239,   240,   241,   242,     0,     0,   243,     0,   244,     0,
       0,   245,   246,   247,     0,     0,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,     0,   265,   266,   267,   268,   269,     0,
     270,   271,     0,   272,     0,   273,   274,   275,   276,   277,
     278,     0,   279,   280,     0,     0,   281,   282,   283,     0,
       0,   284,   285,     0,   286,     0,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,     0,   297,   298,   299,
     300,   301,   302,   461,   304,   305,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,     0,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,     0,   332,   333,     0,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,     0,   347,   348,   349,   350,   351,     0,   352,   353,
     354,   355,   356,     0,   357,   358,   359,   360,     0,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,     0,   374,   375,     0,   376,     0,   377,   378,
     379,   380,   381,     0,   382,   383,     0,     0,   384,   385,
     386,   387,   388,     0,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,   398,   399,   400,     0,     0,
     401,   402,   403,   404,   405,   406,   407,     0,   408,     0,
     409,   410,   411,   412,     0,     0,   413,     0,     0,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,    99,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   100,   101,   102,   103,   104,   105,
     106,   107,     0,   109,   110,   111,     0,     0,     0,     0,
       0,     0,     0,   112,   113,     0,   114,   115,   116,     0,
     117,   118,   119,   120,   121,     0,   122,   123,     0,   124,
     125,   126,   127,   128,     0,     0,   129,   130,   131,   132,
     133,     0,   134,   135,   136,   137,   138,     0,     0,     0,
     139,   140,   141,   142,   143,     0,   144,   145,   146,     0,
     147,   148,   149,   150,   151,   152,     0,     0,   153,   154,
     155,     0,     0,     0,     0,     0,     0,     0,   156,   157,
     158,   159,   160,   161,   162,   163,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,     0,   198,
       0,   199,   200,   201,   202,     0,   203,     0,   204,     0,
       0,     0,   205,   206,   207,  1444,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216,     0,   217,   218,
     219,   220,     0,   221,   222,   223,   224,   225,   226,     0,
     227,     0,   228,   229,   230,   231,   232,   233,   234,     0,
     235,     0,   236,     0,     0,   237,     0,   238,   239,   240,
     241,   242,     0,     0,   243,     0,   244,     0,     0,   245,
     246,  1445,     0,     0,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,     0,   265,   266,   267,   268,   269,     0,   270,   271,
       0,   272,     0,   273,   274,   275,   276,   277,   278,     0,
     279,   280,     0,     0,   281,   282,   283,     0,     0,   284,
     285,     0,   286,     0,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,     0,   297,   298,   299,   300,   301,
     302,   461,   304,   305,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,     0,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,     0,   332,   333,     0,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,     0,
     347,   348,   349,   350,   351,     0,   352,   353,   354,   355,
     356,     0,   357,   358,   359,   360,     0,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
       0,   374,   375,  1446,   376,     0,   377,  1447,   379,  1448,
     381,     0,   382,   383,     0,     0,   384,   385,   386,   387,
     388,     0,   389,   390,   391,   392,   393,   394,   395,     0,
       0,   396,   397,  1449,   399,   400,     0,     0,   401,   402,
     403,   404,   405,   406,   407,     0,   408,     0,   409,   410,
     411,   412,     0,     0,   413,     0,     0,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,    99,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   100,   101,   102,   103,   104,   105,   106,   107,
       0,   109,   110,   111,     0,     0,     0,     0,     0,  1999,
       0,   112,   113,     0,   114,   115,   116,     0,   117,   118,
     119,   120,   121,     0,   122,   123,     0,   124,   125,   126,
     127,   128,     0,     0,   129,   130,   131,   132,   133,     0,
     134,   135,   136,   137,   138,     0,     0,     0,   139,   140,
     141,   142,   143,     0,   144,   145,   146,     0,   147,   148,
     149,   150,   151,   152,     0,     0,   153,   154,   155,     0,
       0,     0,     0,     0,     0,     0,   156,   157,   158,   159,
     160,   161,   162,   163,   164,     0,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,   174,   175,   176,
       0,     0,   177,   178,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,     0,   198,     0,   199,
     200,   201,   202,     0,   203,     0,   204,     0,     0,     0,
     205,   206,   207,   208,     0,   209,     0,   210,   211,     0,
     212,   213,   214,   215,   216,     0,   217,   218,   219,   220,
       0,   221,   222,   223,   224,   225,   226,     0,   227,     0,
     228,   229,   230,   231,   232,   233,   234,     0,   235,     0,
     236,     0,     0,   237,     0,   238,   239,   240,   241,   242,
       0,     0,   243,     0,   244,     0,     0,   245,   246,   247,
       0,     0,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,     0,
     265,   266,   267,   268,   269,     0,   270,   271,     0,   272,
       0,   273,   274,   275,   276,   277,   278,     0,   279,   280,
       0,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,     0,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,     0,   297,   298,   299,   300,   301,   302,   461,
     304,   305,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,     0,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
       0,   332,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,     0,   347,   348,
     349,   350,   351,     0,   352,   353,   354,   355,   356,     0,
     357,   358,   359,   360,     0,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,     0,   374,
     375,     0,   376,     0,   377,   378,   379,   380,   381,     0,
     382,   383,     0,     0,   384,   385,   386,   387,   388,     0,
     389,   390,   391,   392,   393,   394,   395,     0,     0,   396,
     397,   398,   399,   400,     0,     0,   401,   402,   403,   404,
     405,   406,   407,     0,   408,     0,   409,   410,   411,   412,
       0,     0,   413,     0,     0,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,    99,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     100,   101,   102,   103,   104,   105,   106,   107,     0,   109,
     110,   111,     0,     0,     0,     0,     0,  2013,     0,   112,
     113,     0,   114,   115,   116,     0,   117,   118,   119,   120,
     121,     0,   122,   123,     0,   124,   125,   126,   127,   128,
       0,     0,   129,   130,   131,   132,   133,     0,   134,   135,
     136,   137,   138,     0,     0,     0,   139,   140,   141,   142,
     143,     0,   144,   145,   146,     0,   147,   148,   149,   150,
     151,   152,     0,     0,   153,   154,   155,     0,     0,     0,
       0,     0,     0,     0,   156,   157,   158,   159,   160,   161,
     162,   163,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,   174,   175,   176,     0,     0,
     177,   178,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,     0,   198,     0,   199,   200,   201,
     202,     0,   203,     0,   204,     0,     0,     0,   205,   206,
     207,   208,     0,   209,     0,   210,   211,     0,   212,   213,
     214,   215,   216,     0,   217,   218,   219,   220,     0,   221,
     222,   223,   224,   225,   226,     0,   227,     0,   228,   229,
     230,   231,   232,   233,   234,     0,   235,     0,   236,     0,
       0,   237,     0,   238,   239,   240,   241,   242,     0,     0,
     243,     0,   244,     0,     0,   245,   246,   247,     0,     0,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,     0,   265,   266,
     267,   268,   269,     0,   270,   271,     0,   272,     0,   273,
     274,   275,   276,   277,   278,     0,   279,   280,     0,     0,
     281,   282,   283,     0,     0,   284,   285,     0,   286,     0,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
       0,   297,   298,   299,   300,   301,   302,   461,   304,   305,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,     0,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,     0,   332,
     333,     0,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,     0,   347,   348,   349,   350,
     351,     0,   352,   353,   354,   355,   356,     0,   357,   358,
     359,   360,     0,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,     0,   374,   375,     0,
     376,     0,   377,   378,   379,   380,   381,     0,   382,   383,
       0,     0,   384,   385,   386,   387,   388,     0,   389,   390,
     391,   392,   393,   394,   395,     0,     0,   396,   397,   398,
     399,   400,     0,     0,   401,   402,   403,   404,   405,   406,
     407,     0,   408,     0,   409,   410,   411,   412,     0,     0,
     413,     0,     0,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,    99,     0,  2179,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   100,   101,
     102,   103,   104,   105,   106,   107,     0,   109,   110,   111,
       0,     0,     0,     0,     0,     0,     0,   112,   113,     0,
     114,   115,   116,     0,   117,   118,   119,   120,   121,     0,
     122,   123,     0,   124,   125,   126,   127,   128,     0,     0,
     129,   130,   131,   132,   133,     0,   134,   135,   136,   137,
     138,     0,     0,     0,   139,   140,   141,   142,   143,     0,
     144,   145,   146,     0,   147,   148,   149,   150,   151,   152,
       0,     0,   153,   154,   155,     0,     0,     0,     0,     0,
       0,     0,   156,   157,   158,   159,   160,   161,   162,   163,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,   174,   175,   176,     0,     0,   177,   178,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,     0,   198,     0,   199,   200,   201,   202,     0,
     203,     0,   204,     0,     0,     0,   205,   206,   207,   208,
       0,   209,     0,   210,   211,     0,   212,   213,   214,   215,
     216,     0,   217,   218,   219,   220,     0,   221,   222,   223,
     224,   225,   226,     0,   227,     0,   228,   229,   230,   231,
     232,   233,   234,     0,   235,     0,   236,     0,     0,   237,
       0,   238,   239,   240,   241,   242,     0,     0,   243,     0,
     244,     0,     0,   245,   246,   247,     0,     0,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,     0,   265,   266,   267,   268,
     269,     0,   270,   271,     0,   272,     0,   273,   274,   275,
     276,   277,   278,     0,   279,   280,     0,     0,   281,   282,
     283,     0,     0,   284,   285,     0,   286,     0,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,     0,   297,
     298,   299,   300,   301,   302,   461,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,     0,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,     0,   332,   333,     0,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,     0,   347,   348,   349,   350,   351,     0,
     352,   353,   354,   355,   356,     0,   357,   358,   359,   360,
       0,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,     0,   374,   375,     0,   376,     0,
     377,   378,   379,   380,   381,     0,   382,   383,     0,     0,
     384,   385,   386,   387,   388,     0,   389,   390,   391,   392,
     393,   394,   395,     0,     0,   396,   397,   398,   399,   400,
       0,     0,   401,   402,   403,   404,   405,   406,   407,     0,
     408,     0,   409,   410,   411,   412,     0,     0,   413,     0,
       0,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,    99,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   100,   101,   102,   103,
     104,   105,   106,   107,     0,   109,   110,   111,     0,     0,
       0,     0,     0,     0,     0,   112,   113,     0,   114,   115,
     116,     0,   117,   118,   119,   120,   121,     0,   122,   123,
       0,   124,   125,   126,   127,   128,     0,     0,   129,   130,
     131,   132,   133,     0,   134,   135,   136,   137,   138,     0,
       0,     0,   139,   140,   141,   142,   143,     0,   144,   145,
     146,     0,   147,   148,   149,   150,   151,   152,     0,     0,
     153,   154,   155,     0,     0,     0,     0,     0,     0,     0,
     156,   157,   158,   159,   160,   161,   162,   163,   164,     0,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,   174,   175,   176,     0,     0,   177,   178,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
       0,   198,     0,   199,   200,   201,   202,     0,   203,     0,
     204,     0,     0,     0,   205,   206,   207,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,     0,
     217,   218,   219,   220,     0,   221,   222,   223,   224,   225,
     226,     0,   227,     0,   228,   229,   230,   231,   232,   233,
     234,     0,   235,     0,   236,     0,     0,   237,     0,   238,
     239,   240,   241,   242,     0,     0,   243,     0,   244,     0,
       0,   245,   246,   247,     0,     0,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,     0,   265,   266,   267,   268,   269,     0,
     270,   271,     0,   272,     0,   273,   274,   275,   276,   277,
     278,     0,   279,   280,     0,     0,   281,   282,   283,     0,
       0,   284,   285,     0,   286,     0,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,     0,   297,   298,   299,
     300,   301,   302,   461,   304,   305,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,     0,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,     0,   332,   333,     0,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,     0,   347,   348,   349,   350,   351,     0,   352,   353,
     354,   355,   356,     0,   357,   358,   359,   360,     0,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,     0,   374,   375,     0,   376,     0,   377,   378,
     379,   380,   381,     0,   382,   383,     0,     0,   384,   385,
     386,   387,   388,     0,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,   398,   399,   400,     0,     0,
     401,   402,   403,   404,   405,   406,   407,     0,   408,     0,
     409,   410,   411,   412,     0,     0,   413,     0,     0,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,    99,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   100,   101,   102,   103,   104,   105,
     106,   107,     0,   109,   110,   111,     0,     0,     0,     0,
       0,     0,     0,   112,   113,     0,   114,   115,   116,     0,
     117,   118,   119,   120,   121,     0,   122,   123,     0,   124,
     125,   126,   127,   128,     0,     0,   129,   130,   131,   132,
     133,     0,   134,   135,   136,   137,   138,     0,     0,     0,
     139,   140,   141,   142,   143,     0,   144,   145,   146,     0,
     147,   148,   149,   150,   151,   152,     0,     0,   153,   154,
     155,     0,     0,     0,     0,     0,     0,     0,   156,   157,
     158,   159,   160,   161,   162,   163,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,     0,   198,
       0,   199,   200,   201,   202,     0,   203,     0,   204,     0,
       0,     0,   205,   206,   207,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216,     0,   217,   218,
     219,   220,     0,   221,   222,   223,   224,   225,   226,     0,
     227,     0,   228,   229,   230,   231,   232,   233,   234,     0,
     235,     0,   236,     0,     0,   237,     0,   238,   239,   240,
     241,   242,     0,     0,   243,     0,   244,     0,     0,   245,
     246,   492,     0,     0,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,     0,   265,   266,   267,   268,   269,     0,   270,   271,
       0,   272,     0,   273,   274,   275,   276,   277,   278,     0,
     279,   280,     0,     0,   281,   282,   283,     0,     0,   284,
     285,     0,   286,     0,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,     0,   297,   298,   299,   300,   301,
     302,   461,   304,   305,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,     0,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,     0,   332,   333,     0,   334,   335,   336,   337,
     338,   339,   340,   493,   342,   343,   344,   345,   346,     0,
     347,   348,   349,   350,   494,     0,   352,   353,   354,   355,
     356,     0,   357,   358,   359,   360,     0,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
       0,   374,   375,     0,   376,     0,   377,   378,   379,   380,
     381,     0,   495,   383,     0,     0,   384,   385,   386,   387,
     388,     0,   389,   390,   391,   392,   393,   394,   395,     0,
       0,   396,   397,   398,   399,   400,     0,     0,   401,   402,
     403,   404,   405,   406,   407,     0,   408,     0,   409,   410,
     411,   412,     0,     0,   413,     0,     0,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,    99,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   100,   101,   102,   103,   104,   105,   106,   107,
       0,   109,   110,   111,     0,     0,     0,     0,     0,     0,
       0,   112,   113,     0,   114,   115,   116,     0,   117,   118,
     119,   120,   121,     0,   122,   123,     0,   124,   125,   126,
     127,   128,     0,     0,   129,   130,   131,   132,   133,     0,
     134,   135,   136,   137,   138,     0,     0,     0,   139,   140,
     141,   142,   143,     0,   144,   145,   146,     0,   147,   148,
     149,   150,   151,   152,     0,     0,   153,   154,   155,     0,
       0,     0,     0,     0,     0,     0,   156,   157,   158,   159,
     160,   161,   162,   163,   164,     0,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,   174,   175,   176,
       0,     0,   177,   178,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,     0,   198,     0,   199,
     200,   201,   202,     0,   203,     0,   204,     0,     0,     0,
     205,   206,   207,   208,     0,   209,     0,   210,   211,     0,
     212,   213,   214,   215,   216,     0,   217,   218,   219,   220,
       0,   221,   222,   223,   224,   225,   226,     0,   227,     0,
     228,   229,   230,   231,   232,   233,   234,     0,   235,     0,
     236,     0,     0,   237,     0,   238,   239,   240,   241,   242,
       0,     0,   243,     0,   244,     0,     0,   245,   246,   247,
       0,     0,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,     0,
     265,   266,   267,   268,   269,     0,   270,   271,     0,   272,
       0,   273,   274,   275,   276,   277,   278,     0,   279,   280,
       0,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,     0,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,     0,   297,   298,   299,   300,   301,   302,   461,
     304,   305,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   508,   319,     0,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
       0,   332,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,     0,   347,   348,
     349,   350,   351,     0,   352,   353,   354,   355,   356,     0,
     357,   358,   359,   360,     0,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,     0,   374,
     375,     0,   376,     0,   377,   378,   379,   380,   381,     0,
     382,   383,     0,     0,   384,   385,   386,   387,   388,     0,
     389,   390,   391,   392,   393,   394,   395,     0,     0,   396,
     397,   398,   399,   400,     0,     0,   401,   402,   403,   404,
     405,   406,   407,     0,   408,     0,   409,   410,   411,   412,
       0,     0,   413,     0,     0,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,    99,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     100,   101,   102,   103,   104,   105,   106,   107,     0,   109,
     110,   111,     0,     0,     0,     0,     0,     0,     0,   112,
     113,     0,   114,   115,   116,     0,   117,   118,   119,   120,
     121,     0,   122,   123,     0,   124,   125,   126,   127,   128,
       0,     0,   129,   130,   131,   132,   133,     0,   134,   135,
     136,   137,   138,     0,     0,     0,   139,   140,   141,   142,
     143,     0,   144,   145,   146,     0,   147,   148,   149,   150,
     151,   152,     0,     0,   153,   154,   155,     0,     0,     0,
       0,     0,     0,     0,   156,   157,   158,   159,   160,   161,
     162,   163,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,   174,   175,   176,     0,     0,
     177,   178,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,     0,   198,     0,   199,   200,   201,
     202,     0,   203,     0,   204,     0,     0,     0,   205,   206,
     207,   208,     0,   209,     0,   210,   211,     0,   212,   213,
     214,   215,   537,     0,   217,   218,   219,   220,     0,   221,
     222,   223,   224,   225,   226,     0,   227,     0,   228,   229,
     230,   231,   232,   233,   234,     0,   235,     0,   236,     0,
       0,   237,     0,   238,   239,   240,   241,   242,     0,     0,
     243,     0,   244,     0,     0,   245,   246,   247,     0,     0,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,     0,   265,   266,
     267,   268,   269,     0,   270,   271,     0,   272,     0,   273,
     274,   275,   276,   277,   278,     0,   279,   280,     0,     0,
     281,   282,   283,     0,     0,   284,   285,     0,   286,     0,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
       0,   297,   298,   299,   300,   301,   302,   461,   304,   305,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,     0,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,     0,   332,
     333,     0,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,     0,   347,   348,   349,   350,
     351,     0,   352,   353,   354,   355,   356,     0,   357,   358,
     359,   360,     0,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,     0,   374,   375,     0,
     376,     0,   377,   378,   379,   380,   381,     0,   382,   383,
       0,     0,   384,   385,   386,   387,   388,     0,   389,   390,
     391,   392,   393,   394,   395,     0,     0,   396,   397,   398,
     399,   400,     0,     0,   401,   402,   403,   404,   405,   406,
     407,     0,   408,     0,   409,   410,   411,   412,     0,     0,
     413,     0,     0,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,    99,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   100,   101,
     102,   103,   104,   105,   106,   107,     0,   109,   110,   111,
       0,     0,     0,     0,     0,     0,     0,   112,   113,     0,
     114,   115,   116,     0,   117,   118,   119,   120,   121,     0,
     122,   123,     0,   124,   125,   126,   127,   128,     0,     0,
     129,   130,   131,   132,   133,     0,   134,   135,   136,   137,
     138,     0,     0,     0,   139,   140,   141,   142,   143,     0,
     144,   145,   146,     0,   147,   148,   149,   150,   151,   152,
       0,     0,   153,   154,   155,     0,     0,     0,     0,     0,
       0,     0,   156,   157,   158,   159,   160,   161,   162,   163,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,   174,   175,   176,     0,     0,   177,   178,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,     0,   198,     0,   199,   200,   201,   202,     0,
     203,     0,   204,     0,     0,     0,   205,   206,   207,   208,
       0,   209,     0,   210,   211,     0,   212,   213,   214,   215,
     540,     0,   217,   218,   219,   220,     0,   221,   222,   223,
     224,   225,   226,     0,   227,     0,   228,   229,   230,   231,
     232,   233,   234,     0,   235,     0,   236,     0,     0,   237,
       0,   238,   239,   240,   241,   242,     0,     0,   243,     0,
     244,     0,     0,   245,   246,   247,     0,     0,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,     0,   265,   266,   267,   268,
     269,     0,   270,   271,     0,   272,     0,   273,   274,   275,
     276,   277,   278,     0,   279,   280,     0,     0,   281,   282,
     283,     0,     0,   284,   285,     0,   286,     0,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,     0,   297,
     298,   299,   300,   301,   302,   461,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,     0,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,     0,   332,   333,     0,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,     0,   347,   348,   349,   350,   351,     0,
     352,   353,   354,   355,   356,     0,   357,   358,   359,   360,
       0,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,     0,   374,   375,     0,   376,     0,
     377,   378,   379,   380,   381,     0,   382,   383,     0,     0,
     384,   385,   386,   387,   388,     0,   389,   390,   391,   392,
     393,   394,   395,     0,     0,   396,   397,   398,   399,   400,
       0,     0,   401,   402,   403,   404,   405,   406,   407,     0,
     408,     0,   409,   410,   411,   412,     0,     0,   413,     0,
       0,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,    99,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   100,   101,   102,   103,
     104,   105,   106,   107,     0,   109,   110,   111,     0,     0,
       0,     0,     0,     0,     0,   112,   113,     0,   114,   115,
     116,     0,   117,   118,   119,   120,   121,     0,   122,   123,
       0,   124,   125,   126,   127,   128,     0,     0,   129,   130,
     131,   132,   133,     0,   134,   135,   136,   137,   138,     0,
       0,     0,   139,   140,   141,   142,   143,     0,   144,   145,
     146,     0,   147,   148,   149,   150,   151,   152,     0,     0,
     153,   154,   155,     0,     0,     0,     0,     0,     0,     0,
     156,   157,   158,   159,   160,   161,   162,   163,   164,     0,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,   174,   175,   176,     0,     0,   177,   178,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
       0,   198,     0,   199,   200,   201,   202,     0,   203,     0,
     204,     0,     0,     0,   205,   206,   207,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   544,     0,
     217,   218,   219,   220,     0,   221,   222,   223,   224,   225,
     226,     0,   227,     0,   228,   229,   230,   231,   232,   233,
     234,     0,   235,     0,   236,     0,     0,   237,     0,   238,
     239,   240,   241,   242,     0,     0,   243,     0,   244,     0,
       0,   245,   246,   247,     0,     0,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,     0,   265,   266,   267,   268,   269,     0,
     270,   271,     0,   272,     0,   273,   274,   275,   276,   277,
     278,     0,   279,   280,     0,     0,   281,   282,   283,     0,
       0,   284,   285,     0,   286,     0,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,     0,   297,   298,   299,
     300,   301,   302,   461,   304,   305,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,     0,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,     0,   332,   333,     0,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,     0,   347,   348,   349,   350,   351,     0,   352,   353,
     354,   355,   356,     0,   357,   358,   359,   360,     0,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,     0,   374,   375,     0,   376,     0,   377,   378,
     379,   380,   381,     0,   382,   383,     0,     0,   384,   385,
     386,   387,   388,     0,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,   398,   399,   400,     0,     0,
     401,   402,   403,   404,   405,   406,   407,     0,   408,     0,
     409,   410,   411,   412,     0,     0,   413,     0,     0,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,    99,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   100,   101,   102,   103,   104,   105,
     106,   107,     0,   109,   110,   111,     0,     0,     0,     0,
       0,     0,     0,   112,   113,     0,   114,   115,   116,     0,
     117,   118,   119,   120,   121,     0,   122,   123,     0,   124,
     125,   126,   127,   128,     0,     0,   129,   130,   131,   132,
     133,     0,   134,   135,   136,   137,   138,     0,     0,     0,
     139,   140,   141,   142,   143,     0,   144,   145,   146,     0,
     147,   148,   149,   150,   151,   152,     0,     0,   153,   154,
     155,     0,     0,     0,     0,     0,     0,     0,   156,   157,
     158,   159,   160,   161,   162,   163,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,     0,   198,
       0,   199,   200,   201,   202,     0,   203,     0,   204,     0,
       0,     0,   205,   206,   207,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   557,     0,   217,   218,
     219,   220,     0,   221,   222,   223,   224,   225,   226,     0,
     227,     0,   228,   229,   230,   231,   232,   233,   234,     0,
     235,     0,   236,     0,     0,   237,     0,   238,   239,   240,
     241,   242,     0,     0,   243,     0,   244,     0,     0,   245,
     246,   247,     0,     0,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,     0,   265,   266,   267,   268,   269,     0,   270,   271,
       0,   272,     0,   273,   274,   275,   276,   277,   278,     0,
     279,   280,     0,     0,   281,   282,   283,     0,     0,   284,
     285,     0,   286,     0,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,     0,   297,   298,   299,   300,   301,
     302,   461,   304,   305,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,     0,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,     0,   332,   333,     0,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,     0,
     347,   348,   349,   350,   351,     0,   352,   353,   354,   355,
     356,     0,   357,   358,   359,   360,     0,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
       0,   374,   375,     0,   376,     0,   377,   378,   379,   380,
     381,     0,   382,   383,     0,     0,   384,   385,   386,   387,
     388,     0,   389,   390,   391,   392,   393,   394,   395,     0,
       0,   396,   397,   398,   399,   400,     0,     0,   401,   402,
     403,   404,   405,   406,   407,     0,   408,     0,   409,   410,
     411,   412,     0,     0,   413,     0,     0,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,    99,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   100,   101,   102,   103,   104,   105,   106,   107,
       0,   109,   110,   111,     0,     0,     0,     0,     0,     0,
       0,   112,   113,     0,   114,   115,   116,     0,   117,   118,
     119,   120,   121,     0,   122,   123,     0,   124,   125,   126,
     127,   128,     0,     0,   129,   130,   131,   132,   133,     0,
     134,   135,   136,   137,   138,     0,     0,     0,   139,   140,
     141,   142,   143,     0,   144,   145,   146,     0,   147,   148,
     149,   150,   151,   152,     0,     0,   153,   154,   155,     0,
       0,     0,     0,     0,     0,     0,   156,   157,   158,   159,
     160,   161,   162,   163,   164,     0,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,   174,   175,   176,
       0,     0,   177,   178,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,     0,   198,     0,   199,
     200,   201,   202,     0,   203,     0,   204,     0,     0,     0,
     205,   206,   207,   208,     0,   209,     0,   210,   211,     0,
     212,   213,   214,   215,   572,     0,   217,   218,   219,   220,
       0,   221,   222,   223,   224,   225,   226,     0,   227,     0,
     228,   229,   230,   231,   232,   233,   234,     0,   235,     0,
     236,     0,     0,   237,     0,   238,   239,   240,   241,   242,
       0,     0,   243,     0,   244,     0,     0,   245,   246,   247,
       0,     0,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,     0,
     265,   266,   267,   268,   269,     0,   270,   271,     0,   272,
       0,   273,   274,   275,   276,   277,   278,     0,   279,   280,
       0,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,     0,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,     0,   297,   298,   299,   300,   301,   302,   461,
     304,   305,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,     0,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
       0,   332,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,     0,   347,   348,
     349,   350,   351,     0,   352,   353,   354,   355,   356,     0,
     357,   358,   359,   360,     0,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,     0,   374,
     375,     0,   376,     0,   377,   378,   379,   380,   381,     0,
     382,   383,     0,     0,   384,   385,   386,   387,   388,     0,
     389,   390,   391,   392,   393,   394,   395,     0,     0,   396,
     397,   398,   399,   400,     0,     0,   401,   402,   403,   404,
     405,   406,   407,     0,   408,     0,   409,   410,   411,   412,
       0,     0,   413,     0,     0,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,    99,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     100,   101,   102,   103,   104,   105,   106,   107,     0,   109,
     110,   111,     0,     0,     0,     0,     0,     0,     0,   112,
     113,     0,   114,   115,   116,     0,   117,   118,   119,   120,
     121,     0,   122,   123,     0,   124,   125,   126,   127,   128,
       0,     0,   129,   130,   131,   132,   133,     0,   134,   135,
     136,   137,   138,     0,     0,     0,   139,   140,   141,   142,
     143,     0,   144,   145,   146,     0,   147,   148,   149,   150,
     151,   152,     0,     0,   153,   154,   155,     0,     0,     0,
       0,     0,     0,     0,   156,   157,   158,   159,   160,   161,
     162,   163,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,   174,   175,   176,     0,     0,
     177,   178,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,     0,   198,     0,   199,   200,   201,
     202,     0,   203,     0,   204,     0,     0,     0,   205,   206,
     207,   208,     0,   209,     0,   210,   211,     0,   212,   213,
     214,   215,   576,     0,   217,   218,   219,   220,     0,   221,
     222,   223,   224,   225,   226,     0,   227,     0,   228,   229,
     230,   231,   232,   233,   234,     0,   235,     0,   236,     0,
       0,   237,     0,   238,   239,   240,   241,   242,     0,     0,
     243,     0,   244,     0,     0,   245,   246,   247,     0,     0,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,     0,   265,   266,
     267,   268,   269,     0,   270,   271,     0,   272,     0,   273,
     274,   275,   276,   277,   278,     0,   279,   280,     0,     0,
     281,   282,   283,     0,     0,   284,   285,     0,   286,     0,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
       0,   297,   298,   299,   300,   301,   302,   461,   304,   305,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,     0,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,     0,   332,
     333,     0,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,     0,   347,   348,   349,   350,
     351,     0,   352,   353,   354,   355,   356,     0,   357,   358,
     359,   360,     0,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,     0,   374,   375,     0,
     376,     0,   377,   378,   379,   380,   381,     0,   382,   383,
       0,     0,   384,   385,   386,   387,   388,     0,   389,   390,
     391,   392,   393,   394,   395,     0,     0,   396,   397,   398,
     399,   400,     0,     0,   401,   402,   403,   404,   405,   406,
     407,     0,   408,     0,   409,   410,   411,   412,     0,     0,
     413,     0,     0,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,    99,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   100,   101,
     102,   103,   104,   105,   106,   107,     0,   109,   110,   111,
       0,     0,     0,     0,     0,     0,     0,   112,   113,     0,
     114,   115,   116,     0,   117,   118,   119,   120,   121,     0,
     122,   123,     0,   124,   125,   126,   127,   128,     0,     0,
     129,   130,   131,   132,   133,     0,   134,   135,   136,   137,
     138,     0,     0,     0,   139,   140,   141,   142,   143,     0,
     144,   145,   146,     0,   147,   148,   149,   150,   151,   152,
       0,     0,   153,   154,   155,     0,     0,     0,     0,     0,
       0,     0,   156,   157,   158,   159,   160,   161,   162,   163,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,   174,   175,   176,     0,     0,   177,   178,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,     0,   198,     0,   199,   200,   201,   202,     0,
     203,     0,   204,     0,     0,     0,   205,   206,   207,   208,
       0,   209,     0,   210,   211,     0,   212,   213,   214,   215,
     579,     0,   217,   218,   219,   220,     0,   221,   222,   223,
     224,   225,   226,     0,   227,     0,   228,   229,   230,   231,
     232,   233,   234,     0,   235,     0,   236,     0,     0,   237,
       0,   238,   239,   240,   241,   242,     0,     0,   243,     0,
     244,     0,     0,   245,   246,   247,     0,     0,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,     0,   265,   266,   267,   268,
     269,     0,   270,   271,     0,   272,     0,   273,   274,   275,
     276,   277,   278,     0,   279,   280,     0,     0,   281,   282,
     283,     0,     0,   284,   285,     0,   286,     0,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,     0,   297,
     298,   299,   300,   301,   302,   461,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,     0,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,     0,   332,   333,     0,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,     0,   347,   348,   349,   350,   351,     0,
     352,   353,   354,   355,   356,     0,   357,   358,   359,   360,
       0,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,     0,   374,   375,     0,   376,     0,
     377,   378,   379,   380,   381,     0,   382,   383,     0,     0,
     384,   385,   386,   387,   388,     0,   389,   390,   391,   392,
     393,   394,   395,     0,     0,   396,   397,   398,   399,   400,
       0,     0,   401,   402,   403,   404,   405,   406,   407,     0,
     408,     0,   409,   410,   411,   412,     0,     0,   413,     0,
       0,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,    99,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   100,   101,   102,   103,
     104,   105,   106,   107,     0,   109,   110,   111,     0,     0,
       0,     0,     0,     0,     0,   112,   113,     0,   114,   115,
     116,     0,   117,   118,   119,   120,   121,     0,   122,   123,
       0,   124,   125,   126,   127,   128,     0,     0,   129,   130,
     131,   132,   133,     0,   134,   135,   136,   137,   138,     0,
       0,     0,   139,   140,   141,   142,   143,     0,   144,   145,
     146,     0,   147,   148,   149,   150,   151,   152,     0,     0,
     153,   154,   155,     0,     0,     0,     0,     0,     0,     0,
     156,   157,   158,   159,   160,   161,   162,   163,   164,     0,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,   174,   175,   176,     0,     0,   177,   178,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
       0,   198,     0,   199,   200,   201,   202,     0,   203,     0,
     204,     0,     0,     0,   205,   206,   207,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,     0,
     217,   218,   219,   220,     0,   221,   222,   223,   224,   225,
     226,     0,   227,     0,   228,   229,   230,   231,   232,   233,
     234,     0,   235,     0,   236,     0,     0,   237,     0,   238,
     239,   240,   241,   242,     0,     0,   243,     0,   244,     0,
       0,   245,   246,   247,     0,     0,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,     0,   265,   266,   267,   268,   269,     0,
     270,   271,     0,   272,     0,   273,   274,   275,   276,   277,
     278,     0,   279,   280,     0,     0,   281,   282,   283,     0,
       0,   284,   285,     0,   286,     0,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,     0,   297,   298,   299,
     300,   301,   302,   461,   304,   305,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,     0,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,     0,   332,   333,     0,   334,   335,
     336,   337,   338,   339,   340,   493,   342,   343,   344,   345,
     346,     0,   347,   348,   349,   350,   351,     0,   352,   353,
     354,   355,   356,     0,   357,   358,   359,   360,     0,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,     0,   374,   375,     0,   376,     0,   377,   378,
     379,   380,   381,     0,   495,   383,     0,     0,   384,   385,
     386,   387,   388,     0,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,   398,   399,   400,     0,     0,
     401,   402,   403,   404,   405,   406,   407,     0,   408,     0,
     409,   410,   411,   412,     0,     0,   413,     0,     0,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,    99,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   100,   101,   102,   103,   104,   105,
     106,   107,     0,   109,   110,   111,     0,     0,     0,     0,
       0,     0,     0,   112,   113,     0,   114,   115,   116,     0,
     117,   118,   119,   120,   121,     0,   122,   123,     0,   124,
     125,   126,   127,   128,     0,     0,   129,   130,   131,   132,
     133,     0,   134,   135,   136,   137,   138,     0,     0,     0,
     139,   140,   141,   142,   143,     0,   144,   145,   146,     0,
     147,   148,   149,   150,   151,   152,     0,     0,   153,   154,
     155,     0,     0,     0,     0,     0,     0,     0,   156,   157,
     158,   159,   160,   161,   162,   163,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,     0,   198,
       0,   199,   200,   201,   202,     0,   203,     0,   204,     0,
       0,     0,   205,   206,   207,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   829,     0,   217,   218,
     219,   220,     0,   221,   222,   223,   224,   225,   226,     0,
     227,     0,   228,   229,   230,   231,   232,   233,   234,     0,
     235,     0,   236,     0,     0,   237,     0,   238,   239,   240,
     241,   242,     0,     0,   243,     0,   244,     0,     0,   245,
     246,   247,     0,     0,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,     0,   265,   266,   267,   268,   269,     0,   270,   271,
       0,   272,     0,   273,   274,   275,   276,   277,   278,     0,
     279,   280,     0,     0,   281,   282,   283,     0,     0,   284,
     285,     0,   286,     0,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,     0,   297,   298,   299,   300,   301,
     302,   461,   304,   305,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,     0,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,     0,   332,   333,     0,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,     0,
     347,   348,   349,   350,   351,     0,   352,   353,   354,   355,
     356,     0,   357,   358,   359,   360,     0,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
       0,   374,   375,     0,   376,     0,   377,   378,   379,   380,
     381,     0,   382,   383,     0,     0,   384,   385,   386,   387,
     388,     0,   389,   390,   391,   392,   393,   394,   395,     0,
       0,   396,   397,   398,   399,   400,     0,     0,   401,   402,
     403,   404,   405,   406,   407,     0,   408,     0,   409,   410,
     411,   412,     0,     0,   413,     0,     0,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,    99,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   100,   101,   102,   103,   104,   105,   106,   107,
       0,   109,   110,   111,     0,     0,     0,     0,     0,     0,
       0,   112,   113,     0,   114,   115,   116,     0,   117,   118,
     119,   120,   121,     0,   122,   123,     0,   124,   125,   126,
     127,   128,     0,     0,   129,   130,   131,   132,   133,     0,
     134,   135,   136,   137,   138,     0,     0,     0,   139,   140,
     141,   142,   143,     0,   144,   145,   146,     0,   147,   148,
     149,   150,   151,   152,     0,     0,   153,   154,   155,     0,
       0,     0,     0,     0,     0,     0,   156,   157,   158,   159,
     160,   161,   162,   163,   164,     0,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,   174,   175,   176,
       0,     0,   177,   178,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,     0,   198,     0,   199,
     200,   201,   202,     0,   203,     0,   204,     0,     0,     0,
     205,   206,   207,   208,     0,   209,     0,   210,   211,     0,
     212,   213,   214,   215,   831,     0,   217,   218,   219,   220,
       0,   221,   222,   223,   224,   225,   226,     0,   227,     0,
     228,   229,   230,   231,   232,   233,   234,     0,   235,     0,
     236,     0,     0,   237,     0,   238,   239,   240,   241,   242,
       0,     0,   243,     0,   244,     0,     0,   245,   246,   247,
       0,     0,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,     0,
     265,   266,   267,   268,   269,     0,   270,   271,     0,   272,
       0,   273,   274,   275,   276,   277,   278,     0,   279,   280,
       0,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,     0,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,     0,   297,   298,   299,   300,   301,   302,   461,
     304,   305,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,     0,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
       0,   332,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,     0,   347,   348,
     349,   350,   351,     0,   352,   353,   354,   355,   356,     0,
     357,   358,   359,   360,     0,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,     0,   374,
     375,     0,   376,     0,   377,   378,   379,   380,   381,     0,
     382,   383,     0,     0,   384,   385,   386,   387,   388,     0,
     389,   390,   391,   392,   393,   394,   395,     0,     0,   396,
     397,   398,   399,   400,     0,     0,   401,   402,   403,   404,
     405,   406,   407,     0,   408,     0,   409,   410,   411,   412,
       0,     0,   413,     0,     0,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,    99,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     100,   101,   102,   103,   104,   105,   106,   107,     0,   109,
     110,   111,     0,     0,     0,     0,     0,  1136,     0,   112,
     113,     0,   114,   115,   116,     0,   117,   118,   119,   120,
     121,     0,   122,   123,     0,   124,   125,   126,   127,   128,
       0,     0,   129,   130,   131,   132,   133,     0,   134,   135,
     136,   137,   138,     0,     0,     0,   139,   140,   141,   142,
     143,     0,   144,   145,   146,     0,   147,   148,   149,   150,
     151,   152,     0,     0,   153,   154,   155,     0,     0,     0,
       0,     0,     0,     0,   156,   157,   158,   159,   160,   161,
     162,   163,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,   174,   175,   176,     0,     0,
     177,   178,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,     0,   198,     0,   199,   200,   201,
     202,     0,   203,     0,   204,     0,     0,     0,   205,   206,
     207,   208,     0,   209,     0,   210,   211,     0,   212,   213,
     214,   215,   216,     0,   217,   218,   219,   220,     0,   221,
     222,   223,   224,   225,   226,     0,   227,     0,   228,   229,
     230,   231,   232,   233,   234,     0,   235,     0,   236,     0,
       0,   237,     0,   238,   239,   240,   241,   242,     0,     0,
     243,     0,   244,     0,     0,   245,   246,   247,     0,     0,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,     0,   265,   266,
     267,   268,   269,     0,   270,   271,     0,   272,     0,   273,
     274,   275,   276,   277,   278,     0,   279,   280,     0,     0,
     281,   282,   283,     0,     0,   284,   285,     0,   286,     0,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
       0,   297,   298,   299,   300,   301,   302,   461,   304,   305,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,     0,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,     0,   332,
     333,     0,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,     0,   347,   348,   349,   350,
     351,     0,     0,   353,   354,   355,   356,     0,   357,   358,
     359,   360,     0,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,     0,   374,   375,     0,
     376,     0,   377,   378,   379,   380,   381,     0,   382,   383,
       0,     0,   384,   385,   386,   387,   388,     0,   389,   390,
     391,   392,   393,   394,   395,     0,     0,   396,   397,   398,
     399,   400,     0,     0,   401,   402,   403,   404,   405,   406,
     407,     0,   408,     0,   409,   410,   411,   412,     0,     0,
     413,     0,     0,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,    99,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   100,   101,
     102,   103,   104,   105,   106,   107,     0,   109,   110,   111,
       0,     0,     0,     0,     0,     0,     0,   112,   113,     0,
     114,   115,   116,     0,   117,   118,   119,   120,   121,     0,
     122,   123,     0,   124,   125,   126,   127,   128,     0,     0,
     129,   130,   131,   132,   133,     0,   134,   135,   136,   137,
     138,     0,     0,     0,   139,   140,   141,   142,   143,     0,
     144,   145,   146,     0,   147,   148,   149,   150,   151,   152,
       0,     0,   153,   154,   155,     0,     0,     0,     0,     0,
       0,     0,   156,   157,   158,   159,   160,   161,   162,   163,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,   174,   175,   176,     0,     0,   177,   178,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,     0,   198,     0,   199,   200,   201,   202,     0,
     203,     0,   204,     0,     0,     0,   205,   206,   207,   208,
       0,   209,     0,   210,   211,     0,   212,   213,   214,   215,
    1255,     0,   217,   218,   219,   220,     0,   221,   222,   223,
     224,   225,   226,     0,   227,     0,   228,   229,   230,   231,
     232,   233,   234,     0,   235,     0,   236,     0,     0,   237,
       0,   238,   239,   240,   241,   242,     0,     0,   243,     0,
     244,     0,     0,   245,   246,   247,     0,     0,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,     0,   265,   266,   267,   268,
     269,     0,   270,   271,     0,   272,     0,   273,   274,   275,
     276,   277,   278,     0,   279,   280,     0,     0,   281,   282,
     283,     0,     0,   284,   285,     0,   286,     0,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,     0,   297,
     298,   299,   300,   301,   302,   461,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,     0,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,     0,   332,   333,     0,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,     0,   347,   348,   349,   350,   351,     0,
     352,   353,   354,   355,   356,     0,   357,   358,   359,   360,
       0,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,     0,   374,   375,     0,   376,     0,
     377,   378,   379,   380,   381,     0,   382,   383,     0,     0,
     384,   385,   386,   387,   388,     0,   389,   390,   391,   392,
     393,   394,   395,     0,     0,   396,   397,   398,   399,   400,
       0,     0,   401,   402,   403,   404,   405,   406,   407,     0,
     408,     0,   409,   410,   411,   412,     0,     0,   413,     0,
       0,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,    99,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   100,   101,   102,   103,
     104,   105,   106,   107,     0,   109,   110,   111,     0,     0,
       0,     0,     0,     0,     0,   112,   113,     0,   114,   115,
     116,     0,   117,   118,   119,   120,   121,     0,   122,   123,
       0,   124,   125,   126,   127,   128,     0,     0,   129,   130,
     131,   132,   133,     0,   134,   135,   136,   137,   138,     0,
       0,     0,   139,   140,   141,   142,   143,     0,   144,   145,
     146,     0,   147,   148,   149,   150,   151,   152,     0,     0,
     153,   154,   155,     0,     0,     0,     0,     0,     0,     0,
     156,   157,   158,   159,   160,   161,   162,   163,   164,     0,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,   174,   175,   176,     0,     0,   177,   178,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
       0,   198,     0,   199,   200,   201,   202,     0,   203,     0,
     204,     0,     0,     0,   205,   206,   207,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,  1268,     0,
     217,   218,   219,   220,     0,   221,   222,   223,   224,   225,
     226,     0,   227,     0,   228,   229,   230,   231,   232,   233,
     234,     0,   235,     0,   236,     0,     0,   237,     0,   238,
     239,   240,   241,   242,     0,     0,   243,     0,   244,     0,
       0,   245,   246,   247,     0,     0,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,     0,   265,   266,   267,   268,   269,     0,
     270,   271,     0,   272,     0,   273,   274,   275,   276,   277,
     278,     0,   279,   280,     0,     0,   281,   282,   283,     0,
       0,   284,   285,     0,   286,     0,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,     0,   297,   298,   299,
     300,   301,   302,   461,   304,   305,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,     0,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,     0,   332,   333,     0,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,     0,   347,   348,   349,   350,   351,     0,   352,   353,
     354,   355,   356,     0,   357,   358,   359,   360,     0,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,     0,   374,   375,     0,   376,     0,   377,   378,
     379,   380,   381,     0,   382,   383,     0,     0,   384,   385,
     386,   387,   388,     0,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,   398,   399,   400,     0,     0,
     401,   402,   403,   404,   405,   406,   407,     0,   408,     0,
     409,   410,   411,   412,     0,     0,   413,     0,     0,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,    99,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   100,   101,   102,   103,   104,   105,
     106,   107,     0,   109,   110,   111,     0,     0,     0,     0,
       0,     0,     0,   112,   113,     0,   114,   115,   116,     0,
     117,   118,   119,   120,   121,     0,   122,   123,     0,   124,
     125,   126,   127,   128,     0,     0,   129,   130,   131,   132,
     133,     0,   134,   135,   136,   137,   138,     0,     0,     0,
     139,   140,   141,   142,   143,     0,   144,   145,   146,     0,
     147,   148,   149,   150,   151,   152,     0,     0,   153,   154,
     155,     0,     0,     0,     0,     0,     0,     0,   156,   157,
     158,   159,   160,   161,   162,   163,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,     0,   198,
       0,   199,   200,   201,   202,     0,   203,     0,   204,     0,
       0,     0,   205,   206,   207,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,  1522,     0,   217,   218,
     219,   220,     0,   221,   222,   223,   224,   225,   226,     0,
     227,     0,   228,   229,   230,   231,   232,   233,   234,     0,
     235,     0,   236,     0,     0,   237,     0,   238,   239,   240,
     241,   242,     0,     0,   243,     0,   244,     0,     0,   245,
     246,   247,     0,     0,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,     0,   265,   266,   267,   268,   269,     0,   270,   271,
       0,   272,     0,   273,   274,   275,   276,   277,   278,     0,
     279,   280,     0,     0,   281,   282,   283,     0,     0,   284,
     285,     0,   286,     0,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,     0,   297,   298,   299,   300,   301,
     302,   461,   304,   305,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,     0,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,     0,   332,   333,     0,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,     0,
     347,   348,   349,   350,   351,     0,   352,   353,   354,   355,
     356,     0,   357,   358,   359,   360,     0,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
       0,   374,   375,     0,   376,     0,   377,   378,   379,   380,
     381,     0,   382,   383,     0,     0,   384,   385,   386,   387,
     388,     0,   389,   390,   391,   392,   393,   394,   395,     0,
       0,   396,   397,   398,   399,   400,     0,     0,   401,   402,
     403,   404,   405,   406,   407,     0,   408,     0,   409,   410,
     411,   412,     0,     0,   413,     0,     0,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,    99,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   100,   101,   102,   103,   104,   105,   106,   107,
       0,   109,   110,   111,     0,     0,     0,     0,     0,     0,
       0,   112,   113,     0,   114,   115,   116,     0,   117,   118,
     119,   120,   121,     0,   122,   123,     0,   124,   125,   126,
     127,   128,     0,     0,   129,   130,   131,   132,   133,     0,
     134,   135,   136,   137,   138,     0,     0,     0,   139,   140,
     141,   142,   143,     0,   144,   145,   146,     0,   147,   148,
     149,   150,   151,   152,     0,     0,   153,   154,   155,     0,
       0,     0,     0,     0,     0,     0,   156,   157,   158,   159,
     160,   161,   162,   163,   164,     0,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,   174,   175,   176,
       0,     0,   177,   178,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,     0,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,     0,   198,     0,   199,
     200,   201,   202,     0,   203,     0,   204,     0,     0,     0,
     205,   206,   207,   208,     0,   209,     0,   210,   211,     0,
     212,   213,   214,   215,  1534,     0,   217,   218,   219,   220,
       0,   221,   222,   223,   224,   225,   226,     0,   227,     0,
     228,   229,   230,   231,   232,   233,   234,     0,   235,     0,
     236,     0,     0,   237,     0,   238,   239,   240,   241,   242,
       0,     0,   243,     0,   244,     0,     0,   245,   246,   247,
       0,     0,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,     0,
     265,   266,   267,   268,   269,     0,   270,   271,     0,   272,
       0,   273,   274,   275,   276,   277,   278,     0,   279,   280,
       0,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     286,     0,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,     0,   297,   298,   299,   300,   301,   302,   461,
     304,   305,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,     0,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
       0,   332,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,     0,   347,   348,
     349,   350,   351,     0,   352,   353,   354,   355,   356,     0,
     357,   358,   359,   360,     0,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,     0,   374,
     375,     0,   376,     0,   377,   378,   379,   380,   381,     0,
     382,   383,     0,     0,   384,   385,   386,   387,   388,     0,
     389,   390,   391,   392,   393,   394,   395,     0,     0,   396,
     397,   398,   399,   400,     0,     0,   401,   402,   403,   404,
     405,   406,   407,     0,   408,     0,   409,   410,   411,   412,
       0,     0,   413,     0,     0,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,    99,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     100,   101,   102,   103,   104,   105,   106,   107,     0,   109,
     110,   111,     0,     0,     0,     0,     0,     0,     0,   112,
     113,     0,   114,   115,   116,     0,   117,   118,   119,   120,
     121,     0,   122,   123,     0,   124,   125,   126,   127,   128,
       0,     0,   129,   130,   131,   132,   133,     0,   134,   135,
     136,   137,   138,     0,     0,     0,   139,   140,   141,   142,
     143,     0,   144,   145,   146,     0,   147,   148,   149,   150,
     151,   152,     0,     0,   153,   154,   155,     0,     0,     0,
       0,     0,     0,     0,   156,   157,   158,   159,   160,   161,
     162,   163,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,   174,   175,   176,     0,     0,
     177,   178,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,     0,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,     0,   198,     0,   199,   200,   201,
     202,     0,   203,     0,   204,     0,     0,     0,   205,   206,
     207,   208,     0,   209,     0,   210,   211,     0,   212,   213,
     214,   215,  1536,     0,   217,   218,   219,   220,     0,   221,
     222,   223,   224,   225,   226,     0,   227,     0,   228,   229,
     230,   231,   232,   233,   234,     0,   235,     0,   236,     0,
       0,   237,     0,   238,   239,   240,   241,   242,     0,     0,
     243,     0,   244,     0,     0,   245,   246,   247,     0,     0,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,     0,   265,   266,
     267,   268,   269,     0,   270,   271,     0,   272,     0,   273,
     274,   275,   276,   277,   278,     0,   279,   280,     0,     0,
     281,   282,   283,     0,     0,   284,   285,     0,   286,     0,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
       0,   297,   298,   299,   300,   301,   302,   461,   304,   305,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,     0,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,     0,   332,
     333,     0,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,     0,   347,   348,   349,   350,
     351,     0,   352,   353,   354,   355,   356,     0,   357,   358,
     359,   360,     0,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,     0,   374,   375,     0,
     376,     0,   377,   378,   379,   380,   381,     0,   382,   383,
       0,     0,   384,   385,   386,   387,   388,     0,   389,   390,
     391,   392,   393,   394,   395,     0,     0,   396,   397,   398,
     399,   400,     0,     0,   401,   402,   403,   404,   405,   406,
     407,     0,   408,     0,   409,   410,   411,   412,     0,     0,
     413,     0,     0,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,    99,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   100,   101,
     102,   103,   104,   105,   106,   107,     0,   109,   110,   111,
       0,     0,     0,     0,     0,     0,     0,   112,   113,     0,
     114,   115,   116,     0,   117,   118,   119,   120,   121,     0,
     122,   123,     0,   124,   125,   126,   127,   128,     0,     0,
     129,   130,   131,   132,   133,     0,   134,   135,   136,   137,
     138,     0,     0,     0,   139,   140,   141,   142,   143,     0,
     144,   145,   146,     0,   147,   148,   149,   150,   151,   152,
       0,     0,   153,   154,   155,     0,     0,     0,     0,     0,
       0,     0,   156,   157,   158,   159,   160,   161,   162,   163,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,   174,   175,   176,     0,     0,   177,   178,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,     0,   198,     0,   199,   200,   201,   202,     0,
     203,     0,   204,     0,     0,     0,   205,   206,   207,   208,
       0,   209,     0,   210,   211,     0,   212,   213,   214,   215,
    2118,     0,   217,   218,   219,   220,     0,   221,   222,   223,
     224,   225,   226,     0,   227,     0,   228,   229,   230,   231,
     232,   233,   234,     0,   235,     0,   236,     0,     0,   237,
       0,   238,   239,   240,   241,   242,     0,     0,   243,     0,
     244,     0,     0,   245,   246,   247,     0,     0,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,     0,   265,   266,   267,   268,
     269,     0,   270,   271,     0,   272,     0,   273,   274,   275,
     276,   277,   278,     0,   279,   280,     0,     0,   281,   282,
     283,     0,     0,   284,   285,     0,   286,     0,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,     0,   297,
     298,   299,   300,   301,   302,   461,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,     0,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,     0,   332,   333,     0,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,     0,   347,   348,   349,   350,   351,     0,
     352,   353,   354,   355,   356,     0,   357,   358,   359,   360,
       0,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,     0,   374,   375,     0,   376,     0,
     377,   378,   379,   380,   381,     0,   382,   383,     0,     0,
     384,   385,   386,   387,   388,     0,   389,   390,   391,   392,
     393,   394,   395,     0,     0,   396,   397,   398,   399,   400,
       0,     0,   401,   402,   403,   404,   405,   406,   407,     0,
     408,     0,   409,   410,   411,   412,     0,     0,   413,     0,
       0,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,    99,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   100,   101,   102,   103,
     104,   105,   106,   107,     0,   109,   110,   111,     0,     0,
       0,     0,     0,     0,     0,   112,   113,     0,   114,   115,
     116,     0,   117,   118,   119,   120,   121,     0,   122,   123,
       0,   124,   125,   126,   127,   128,     0,     0,   129,   130,
     131,   132,   133,     0,   134,   135,   136,   137,   138,     0,
       0,     0,   139,   140,   141,   142,   143,     0,   144,   145,
     146,     0,   147,   148,   149,   150,   151,   152,     0,     0,
     153,   154,   155,     0,     0,     0,     0,     0,     0,     0,
     156,   157,   158,   159,   160,   161,   162,   163,   164,     0,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,   174,   175,   176,     0,     0,   177,   178,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,     0,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
       0,   198,     0,   199,   200,   201,   202,     0,   203,     0,
     204,     0,     0,     0,   205,   206,   207,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,     0,
     217,   218,   219,   220,     0,   221,   222,   223,   224,   225,
     226,     0,   227,     0,   228,   229,   230,   231,   232,   233,
     234,     0,   235,     0,   236,     0,     0,   237,     0,   238,
     239,   240,   241,   242,     0,     0,   243,     0,   244,     0,
       0,   245,   246,   247,     0,     0,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,     0,   265,   266,   267,   268,   269,     0,
     270,   271,     0,   272,     0,   273,   274,   275,   276,   277,
     278,     0,   279,   280,     0,     0,   281,   282,   283,     0,
       0,   284,   285,     0,   286,     0,   287,   288,   289,   290,
     291,   292,   293,     0,   295,   296,     0,   297,   298,   299,
     300,   301,   302,   461,   304,   305,     0,   306,   307,   308,
     309,   310,   311,   312,     0,   314,   315,   316,   317,   318,
     319,     0,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,     0,   332,   333,     0,   334,   335,
     336,   337,     0,   339,   340,   341,   342,   343,   344,   345,
     346,     0,   347,   348,   349,   350,   351,     0,   352,   353,
     354,   355,   356,     0,   357,   358,   359,   360,     0,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,     0,   374,   375,     0,   376,     0,   377,   378,
     379,   380,   381,     0,   382,   383,     0,     0,   384,   385,
     386,   387,   388,     0,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,   398,   399,   400,     0,     0,
     401,   402,   403,   404,   405,   406,   407,     0,   408,     0,
     409,   410,   411,   412,     0,     0,   413,     0,     0,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   885,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   100,   101,   102,   103,   104,   105,
     106,   107,     0,   109,   110,   111,     0,     0,     0,     0,
       0,     0,     0,   112,   113,     0,   114,   115,   116,   586,
     117,   118,   119,     0,   886,   587,   887,   888,     0,   124,
     125,   126,   127,   128,     0,     0,   129,   130,   889,   890,
     133,     0,   134,   135,   136,   137,     0,     0,   588,     0,
     139,   140,   141,   142,   143,   589,   144,   145,   146,     0,
     147,   148,   149,   150,   151,   152,     0,   590,   153,   154,
     155,     0,     0,     0,   591,     0,     0,     0,   156,   157,
     158,   159,   160,   161,   891,   892,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,   174,
     175,   176,     0,     0,   177,   178,   655,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,     0,   188,   189,
     190,   191,     0,   193,   194,   195,   196,     0,     0,   198,
       0,   199,   200,   893,   202,     0,   203,     0,   204,   592,
       0,   593,   205,   206,   207,   208,     0,   209,     0,     0,
     211,     0,   212,   213,   214,   215,   216,   594,   217,   218,
     219,   220,     0,   221,   222,   223,   224,   225,   226,     0,
     227,   595,     0,   229,   230,   231,   232,   894,   895,     0,
     896,     0,   236,   596,   597,   237,   598,   238,   239,   240,
     241,   242,     0,     0,   243,   599,   244,   600,     0,   245,
     246,   247,     0,     0,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     897,   601,   898,   266,   267,   268,     0,     0,   270,   271,
     602,   272,     0,     0,   274,   899,   276,   277,   278,     0,
     279,   280,     0,     0,   281,   282,   283,     0,     0,   284,
       0,   603,   286,   604,     0,   288,   289,   290,   291,   292,
     293,   294,   295,   296,     0,   297,   298,     0,   300,   301,
       0,   461,   304,   305,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   900,   316,   317,   318,   319,     0,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,     0,   332,   333,   605,   334,   335,   336,     0,
     338,   339,   340,   341,   342,   343,   344,   345,   346,     0,
     347,   348,   349,   350,   351,     0,   352,   901,   354,   355,
     356,   606,   357,   358,   902,   360,     0,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,     0,
       0,   374,   375,     0,   376,   607,   377,   378,   379,   380,
     381,     0,   903,   904,     0,     0,   384,   385,     0,   387,
       0,     0,   389,   390,   391,   392,   393,   394,   395,     0,
       0,   396,   397,   398,   399,   400,     0,     0,   401,   402,
     403,   404,   405,     0,   905,     0,   408,   609,   409,   410,
     411,   412,     0,     0,   413,     0,     0,   414,   415,   416,
     417,   418,   419,   885,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   431,   432,   433,     0,   100,   101,
     102,   103,   104,   105,   106,   107,     0,   109,   110,   111,
       0,     0,     0,     0,     0,     0,     0,   112,   113,     0,
     114,   115,   116,   586,   117,   118,   119,     0,   886,   587,
     887,   888,     0,   124,   125,   126,   127,   128,     0,     0,
     129,   130,   889,   890,   133,     0,   134,   135,   136,   137,
       0,     0,   588,     0,   139,   140,   141,   142,   143,   589,
     144,   145,   146,     0,   147,   148,   149,   150,   151,   152,
       0,   590,   153,   154,   155,     0,     0,     0,   591,     0,
       0,     0,   156,   157,   158,   159,   160,   161,   891,   892,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,   174,   175,   176,     0,     0,   177,   178,
     655,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,     0,   188,   189,   190,   191,     0,   193,   194,   195,
     196,     0,     0,   198,     0,   199,   200,   893,   202,     0,
     203,     0,   204,   592,     0,   593,   205,   206,   207,   208,
       0,   209,     0,     0,   211,     0,   212,   213,   214,   215,
     216,   594,   217,   218,   219,   220,     0,   221,   222,   223,
     224,   225,   226,     0,   227,   595,     0,   229,   230,   231,
     232,   894,   895,     0,   896,     0,   236,   596,   597,   237,
     598,   238,   239,   240,   241,   242,     0,     0,   243,   599,
     244,   600,     0,   245,   246,   247,     0,     0,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   897,   601,   898,   266,   267,   268,
       0,     0,   270,   271,   602,   272,     0,     0,   274,   899,
     276,   277,   278,     0,   279,   280,     0,     0,   281,   282,
     283,     0,     0,   284,     0,   603,   286,   604,     0,   288,
     289,   290,   291,   292,   293,   294,   295,   296,     0,   297,
     298,     0,   300,   301,     0,   461,   304,   305,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   900,   316,
     317,   318,   319,     0,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,     0,   332,   333,   605,
     334,   335,   336,     0,   338,   339,   340,   341,   342,   343,
     344,   345,   346,     0,   347,   348,   349,   350,   351,     0,
     352,     0,   354,   355,   356,   606,   357,   358,   902,   360,
       0,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,     0,     0,   374,   375,     0,   376,   607,
     377,   378,   379,   380,   381,     0,   903,   904,     0,     0,
     384,   385,     0,   387,     0,     0,   389,   390,   391,   392,
     393,   394,   395,     0,     0,   396,   397,   398,   399,   400,
       0,     0,   401,   402,   403,   404,   405,     0,   905,     0,
     408,   609,   409,   410,   411,   412,     0,     0,   413,     0,
       0,   414,   415,   416,   417,   418,   419,     0,   785,     0,
       0,     0,     0,     0,   786,     0,     0,     0,   431,   432,
     433,   798,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     799,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   800,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   787,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   801,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   802,     0,     0,   803,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   804,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   788,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   805,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1553,     0,     0,     0,   790,
     807,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     808,     0,     0,     0,     0,     0,  1554,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     810,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     792
};

static const yytype_int16 yycheck[] =
{
      10,    32,     0,   458,    14,   541,    53,   551,   491,    19,
      20,    21,   463,   736,    24,   812,   614,    27,   503,   919,
      30,    31,   785,   465,   614,   798,    15,   827,     0,   623,
     652,   653,     0,  1020,  1461,   980,  1803,   577,     0,   738,
     457,   528,     0,    15,   810,   977,   781,   680,   670,   827,
     953,   691,   790,   507,  1538,  1294,  1540,   827,   827,   787,
    1851,  1416,  1870,    73,  1483,     0,  1726,  1532,    27,    79,
      80,    81,    82,    83,    55,   855,  1878,   921,    88,     0,
      15,    18,    92,  1453,  1529,     9,    31,   815,  1885,    87,
      56,     5,    10,  1759,    11,    71,    14,    32,     5,    13,
      14,     9,    20,    49,  1474,   556,     5,     5,    56,  2177,
       5,     5,    30,    31,  2122,    87,    55,     5,  2125,    87,
      55,  1159,     5,    82,   847,    87,  1753,   581,   901,    87,
      13,    14,  2128,  1157,   728,     5,   465,    26,   728,    65,
       0,   165,     5,  1588,    33,   133,   464,     5,  2216,     5,
     873,     5,    87,     5,  1023,    13,    14,    47,   113,     5,
      39,    39,    80,   847,   118,   470,  2114,     3,     4,     5,
     770,     4,   614,     9,  1792,     0,     9,    26,    65,   621,
     164,   104,  1627,  1628,    33,   465,     4,    11,  1758,  1695,
     164,     9,   525,    73,   164,    80,  2296,   205,  2268,  2197,
      11,   116,   266,    83,   798,    11,    56,   264,  2384,   799,
     211,    56,   802,   803,    11,   541,    40,   543,  1457,   545,
       9,   165,   252,    11,   111,   116,   925,  2077,  2296,    40,
      90,   272,   106,   272,   719,   161,   690,   104,   123,   158,
       3,  2348,   311,  1188,   255,   113,   111,    71,   249,   154,
      26,   154,    40,   525,   159,  2442,   178,    79,   333,    81,
      71,    83,   985,    36,  2225,    90,    88,    30,    31,   891,
     892,   904,    73,   972,   973,   111,   114,   899,   126,    11,
      26,   168,    83,    71,   199,  2246,  2282,    33,   730,   731,
     834,   181,  2468,   303,   736,    26,   186,   752,   427,   114,
     618,   156,  1822,  1453,   178,   411,   307,   901,    40,  1969,
      21,  1666,  2120,   143,    29,   237,   456,   222,   465,   222,
     430,   105,   469,  1022,  1474,   237,   780,  1993,   169,   469,
    2328,   221,   432,   116,   614,    62,    63,    11,    53,    71,
     284,   621,   471,   453,   182,  2413,   357,   120,   131,  2536,
     126,    26,   353,   453,   423,   955,  1821,   187,   263,   325,
     263,   467,    73,   237,   251,  1310,   240,   182,   204,   256,
    1890,  2439,   298,  1818,   293,  1820,  2003,   325,  2554,   409,
    2007,  1751,   249,  1753,   225,   303,   980,  2494,   256,   225,
    2240,   256,   467,   248,   849,   126,    57,    71,   283,   249,
     163,    76,   165,   467,    65,   847,   266,  2368,   409,    84,
     467,   298,   356,   261,   388,   857,  1179,   105,   388,   341,
     623,  2521,  1992,  1929,   623,   842,   313,  2045,   845,   341,
     471,   873,   471,  2381,   465,  2505,   853,   112,   426,   641,
     642,   266,   747,   467,   231,   778,   467,   457,   458,   459,
     730,   731,  1249,  2521,   377,  1900,   736,   411,   413,  1497,
     367,   368,  2469,   471,   666,   355,   326,   341,  1455,  1456,
     924,   360,  1496,  1196,  2470,   325,   465,  2268,   404,   933,
     325,   528,   492,   937,   494,  2483,   456,   471,     5,   465,
     500,  2151,   464,   469,   409,   374,   374,   382,   508,   469,
     350,   326,   956,   957,   179,   471,   778,  2515,   388,   456,
     520,   360,  2178,  1416,   297,   190,   505,   404,   409,   517,
     467,   467,   532,   471,   622,   623,   420,     0,   857,   464,
     465,  1463,  1771,   432,   515,   471,   473,   474,   856,  1262,
     381,   459,   383,   985,   103,   517,   463,  1147,   472,   517,
     560,   561,   562,   467,   453,   517,   493,  2184,   466,   517,
     623,   520,  2189,   508,   225,  2192,   407,   847,   467,   467,
     430,   988,   467,   467,   448,  2383,   515,   857,  1262,   467,
     515,   421,   517,  2067,   467,  2387,   432,   388,  1491,  2054,
     508,  2388,   211,   873,  1188,   798,   517,   467,  1453,   798,
     321,  1751,   465,  1753,   467,   430,   469,   453,   468,   467,
     470,   467,   430,   467,   360,   467,  1485,   627,  1208,  1474,
     407,   467,   458,   459,  2043,   458,   459,   156,  1218,  1473,
     249,  1221,   189,  2003,   126,   453,  2498,  2007,  2500,   463,
     458,   459,  2302,   468,   470,   470,   618,   458,   459,   460,
     461,   462,   463,  1598,   460,   461,   462,   463,   421,   690,
     152,   458,   459,   460,   461,   462,   463,  2475,  1204,   458,
     459,  2116,   460,   461,   462,   463,   235,   614,   500,   238,
     467,  1279,   390,   618,   621,   154,   215,   889,   890,  1279,
    1312,   366,  2047,  2523,   369,  2322,   898,   376,   901,   231,
     798,   324,   901,   231,  2566,   985,     4,   393,  1653,   231,
     532,     9,    22,   165,  2505,     4,  1310,   141,    28,  1259,
       9,   656,   732,  1263,   111,   433,  1266,   350,  1673,  1448,
    1449,   410,  1467,   468,   353,   798,   471,   236,   560,   561,
     562,   751,   752,   195,  1384,   947,   948,   757,   758,   759,
      22,  2581,  1194,   222,  1196,   690,   693,  1702,   210,  1556,
    1360,  1361,  2227,  1666,   256,  1365,   703,   219,     4,   261,
    2537,  2538,  2580,     9,   784,   785,   623,   980,   715,   203,
     231,   980,   763,   764,   126,   766,   423,   797,  2027,  1240,
     409,   728,   179,   730,   731,   231,   343,  1214,   757,   340,
    1400,  1401,  1219,   901,   814,   337,   306,  2177,   818,   337,
    1590,   411,   467,   823,  2184,   337,  2583,   467,   828,  2189,
    1262,   131,  2192,  2193,   763,   764,   836,   766,   763,   764,
     377,   766,   842,   751,   334,   845,  1564,  1279,   901,   849,
     850,   450,   852,   853,  1668,   855,  2216,  1487,   272,   462,
    1292,  1177,   209,  2003,   467,   814,   469,  2007,   251,   131,
     154,  1599,  1316,   256,   251,   159,  1604,   467,   857,     3,
     417,     5,  1696,   468,  2358,   407,   471,   329,  1204,   407,
     469,    73,   980,   106,   856,   407,   337,   231,  2353,   468,
     432,    83,   471,  1616,   432,   266,  1751,  1223,  1753,    22,
     113,   337,  1228,   395,   468,    28,  1851,   471,   460,   251,
     732,   453,   305,   405,  1194,   453,  1196,   980,    91,   261,
     467,   856,  1020,   921,  1378,   467,  2296,  1284,   222,   467,
      73,  1288,   850,  1290,   852,   467,   758,   311,    22,   467,
      83,    22,   450,   953,    28,   467,   471,    28,  1851,   921,
    1404,   798,  2322,   921,   468,   178,   407,   471,   163,   921,
     270,   462,   784,   921,   468,   145,   467,   471,   469,   263,
     344,   407,   106,  1460,  1377,   797,  1379,  1380,   988,   403,
     193,   468,  1262,   467,   471,  1188,   921,   189,  1442,  1188,
     468,   468,   165,   337,   471,  1535,   818,  1537,   270,  1279,
      30,    31,   468,   377,  1598,   942,   828,  1017,   131,   319,
    1709,  2438,  1292,   323,   237,   468,   467,   240,   471,   381,
    1618,   383,   195,  1742,  1743,  1744,  1745,  2177,  1960,    13,
      14,   467,  2019,   855,  2184,  1832,   249,   210,   251,  2189,
     350,  1585,  2192,  2413,   178,   468,   219,   131,   471,   423,
     131,   323,   324,   164,   901,   990,  1819,   205,   468,  1653,
      90,   471,    90,   407,    53,  1831,  2216,  1700,  1701,  2439,
     468,  1871,   245,   471,  1674,  1675,  1676,  1677,   350,  1673,
    1680,  1681,  1682,  1683,  1684,  1685,  1686,  1687,  1688,  1689,
    1188,  1028,  1830,  1871,  1832,  2522,  1538,  1539,  1540,  1865,
    1799,  1871,  1871,   237,   414,  2570,   240,  1310,  1702,    13,
      14,  1310,  2539,  1893,    22,  1125,   468,  1127,   341,   471,
      28,   311,   467,   467,   343,  1188,  1136,  1850,  1138,  1852,
    1730,  1731,  1726,   980,   450,   337,  1134,  1126,   209,   465,
    2085,   467,   344,   469,  2047,   146,  2296,   270,  2003,   146,
    1790,  2521,  2007,   319,   344,   381,   329,   383,   377,   468,
    1170,    22,   471,   343,  2591,   468,   146,    28,   471,  1179,
    1180,     5,  2322,     7,  1616,   377,  1618,   333,   334,    13,
    1190,  1191,  1192,  1193,   146,  1195,   270,   377,    22,   270,
     468,  1201,    26,  1203,  1611,  1017,  1294,   377,   417,  1134,
     323,  2101,   423,   468,  1214,  1215,   471,   341,   467,  1219,
    1220,   430,  1310,    79,  1224,  1225,  1226,  1227,   251,  1229,
    1230,   423,   467,   131,   469,   448,   434,   350,  1238,  1239,
     333,   334,   623,   423,   453,   319,   146,   417,   319,   323,
     468,  1251,   323,   471,   467,   469,   623,  1310,   467,   146,
     430,   468,   146,  1707,   471,  1253,   266,  1851,  1538,  1539,
    1540,  1851,  1180,  2413,   468,   468,   350,   471,   471,   350,
     131,   377,  1190,   453,  1192,   468,    35,  1195,   471,  1764,
    1767,  1768,  1769,  1201,   467,  1203,  2083,   467,    35,  2439,
     468,   414,  2055,   471,   220,    54,   468,  1215,   468,   471,
     467,   471,  1220,  1125,     5,  1127,  1224,  1225,  1226,  1227,
       5,  1229,  1230,   343,   448,   343,   159,   468,  1253,  2092,
     471,  2020,  2177,  2268,   145,  1639,  1640,  1641,   467,  2184,
     414,  1362,   468,   414,  2189,   471,  1616,  2192,  1618,   467,
    2039,  1188,  1279,   430,   103,   432,  1283,   377,  1170,   377,
      65,   468,  1892,   467,   471,  1292,    71,  1455,  1456,  1457,
     468,  2216,   270,   471,   468,  2268,  2266,   471,    83,   468,
     467,  2521,   471,  1404,   468,  1969,   468,   471,   294,   471,
     468,     8,  2327,   471,    11,  2330,    22,   417,   467,   417,
     468,   421,    28,   471,   468,  1598,   111,   471,   113,  1598,
     430,   467,   430,   469,  1846,   111,  1416,   798,  1850,   270,
    1852,   319,   467,    40,   468,   323,  1238,   471,     5,   468,
      47,   798,   471,   453,   381,   453,   383,  1362,   468,   188,
     468,   471,   468,   471,     5,   471,  1446,   467,   381,   467,
     383,  2296,   350,  1453,    71,   468,   468,  1478,   471,   471,
    1653,     5,   468,   168,  1653,   471,   468,     5,   319,   471,
     333,   334,   323,  1310,  1474,   333,   334,  2322,  1478,  1404,
    1673,  1481,   467,  1483,  1673,  1473,   235,  2176,   193,   238,
     522,  2008,   524,  2010,  2074,   492,  1421,   494,   467,   350,
     249,  2085,   730,   731,   467,   131,   467,   467,  2092,  1702,
    1598,  1473,  1437,  1702,   467,  1473,   414,  2273,   467,  1994,
     901,  1473,   139,   467,   467,  1473,   467,   467,  1453,  1529,
     431,   280,   343,  1726,   901,   277,   205,  1726,    94,   471,
      35,   141,   350,   159,   263,  1598,   251,   159,  1473,  1474,
    2138,   256,   261,  1478,   154,   220,  2086,  2087,  2148,   159,
     467,  2034,   388,   414,   181,  1653,   377,  2151,  2413,   186,
    2505,   467,    83,   388,   471,   324,  1846,    53,    53,  1579,
    1850,   388,  1852,   279,  1584,  1673,   242,   388,  1588,  1589,
    1590,  1591,   388,   298,  2439,   344,   430,   146,   126,   980,
    1653,    90,  1602,   203,   221,   251,   417,  1607,   313,   251,
     467,  1611,  2505,   980,  1702,   364,    35,  1544,   471,   430,
    1673,   469,   222,   420,   152,   467,  1614,  1627,  1628,   467,
      34,   467,   426,     9,  1446,  2067,   467,    11,  1726,   386,
     386,  2354,   453,   471,   270,   386,   467,   343,  2238,  1702,
    1577,   268,   256,   467,   388,  2267,   467,   172,  1851,   155,
     164,   473,  1851,   263,   468,   467,  1666,   411,    35,   203,
     353,   471,   272,  1726,   211,   267,  2521,   467,   471,   211,
     251,   377,   211,  1771,  2268,   303,   264,   423,  2268,  1614,
     467,  1618,   146,   319,  1602,   146,  1623,   323,  1625,   404,
     430,  1738,  1629,  1630,   251,     8,  2138,   266,    11,   266,
     251,  2301,    15,    16,    17,  1736,    35,    35,  2302,   468,
      34,   417,  2199,   251,   350,   465,   465,   388,   256,  2206,
     388,   388,  1753,   261,   430,   467,   388,   468,   355,   468,
    1740,   468,   164,  2327,   468,   468,  2330,   468,  1748,  1749,
    1750,  1751,   468,  1753,  1754,   469,    35,   453,  1758,  1759,
     468,  1598,   468,  1851,  2376,   468,  2553,   471,   450,   450,
     468,   467,  1584,   468,     8,    54,  1969,  1589,  1590,  1591,
    1969,    15,    16,    17,   468,   164,  1713,   450,   414,   468,
     468,  2504,   468,   467,   388,  1607,  1796,  2067,  1851,   467,
     467,   467,   276,   403,   427,   427,   468,  1188,   417,   266,
     409,  1736,  1812,   456,  1814,   452,  1653,   267,  1818,  1819,
    1820,  1188,  1822,   267,   103,   267,  1751,   471,  1753,  2236,
     230,   251,   467,  2310,   451,  2369,  1673,   388,  1838,   146,
    1840,   458,   459,   460,   461,   462,   463,   189,   146,   270,
     146,   471,   388,  1853,  1854,  1855,  1856,  1857,  1858,  1859,
    1860,  1861,  1862,   388,   388,  1702,   388,   395,  2138,   264,
    2315,   468,  1872,  2348,   266,   430,    35,   405,   146,  1879,
     146,  1969,   465,  2328,   256,   341,   240,   468,  2332,  1726,
    1890,   137,  2085,  1893,   164,    11,  2085,   159,    91,  2092,
    1900,  1889,   468,  2092,   207,   468,  1814,   472,   468,   188,
     164,  2445,   272,   467,   427,   468,  1969,   377,   453,   164,
     172,  2505,  2354,   471,  1851,  2505,  2358,   467,   326,  1310,
    1838,  2019,   416,    81,   267,   468,  1748,  1749,  1750,  2027,
     467,  1868,   468,  1310,   146,  1853,  1854,  1855,  1856,  1857,
    1858,  1859,  1860,  1861,  1862,   279,   235,   466,  2151,   238,
     468,   467,  2151,   168,  1889,   268,  2410,  2374,   398,   467,
     249,    35,   165,   467,  2419,    77,   411,   468,  2422,   471,
     466,   466,  1982,   164,  2510,  1985,  1986,  1987,  1988,   468,
     467,   210,  1992,  1993,   467,   169,  1996,  2085,   468,  1999,
    1812,   280,   195,  2003,  2092,   468,   468,  2007,   467,   141,
     275,   210,   467,  2013,  1851,   189,   379,   210,   273,   343,
      53,   175,   154,   468,   456,   468,   219,   159,   468,   430,
     191,   180,  2085,  2440,   268,   256,   256,   388,  2038,  2092,
     456,   388,    35,  2043,   169,   324,   104,  2047,  2036,  2037,
     251,   225,   245,   377,   467,  2055,   266,   430,   467,    35,
    1872,   466,   285,  2151,   189,   344,   164,   210,   467,    83,
     467,   203,  2504,   266,   467,  2268,   429,   127,  2003,  2268,
    2080,  1893,  2007,   468,  2354,   364,   313,   467,  2358,   467,
     222,   211,   111,   417,    35,   146,    71,   271,  2151,   146,
     225,  2028,   118,  2030,    35,   334,   430,   468,   334,  2302,
      53,  2036,  2037,  2302,    35,   467,  2116,     8,   467,   416,
      11,   471,  2122,   468,    15,    16,    17,   468,    35,   453,
     179,   263,  1969,  2133,  2327,  2123,   329,  2330,  2327,    71,
     272,  2330,   411,   467,   467,   465,   271,   398,    65,    65,
     269,   454,   455,   456,   471,   458,   459,   460,   461,   462,
     463,    35,   350,   337,   456,   256,   179,   233,   467,    35,
     490,   491,   467,  1985,  1986,  1987,  1988,  2177,  2178,   269,
    2268,   398,  2182,   269,  2184,   467,   467,   507,   468,  2189,
     249,   266,  2192,  2193,   333,  2195,   320,  2197,  2123,   191,
      32,   266,   116,   266,   467,   409,    21,   381,   517,   383,
    1833,  2138,  1202,  1846,  2302,  2268,  2216,  1598,   411,  1533,
     454,   455,   456,  1796,   458,   459,   460,   461,   462,   463,
     404,  1598,  2038,   407,  2504,  2439,  2236,  2237,  2501,  2327,
    2212,  2507,  2330,  1874,  2573,  2245,  2079,  2361,  2085,  2302,
    2552,  2540,  2284,  1527,   785,  2092,   381,  1539,   383,  2184,
    1879,   581,  2504,  2550,  2189,  1524,  1579,  2192,  1850,  2269,
    2270,   403,  1653,  2502,  2327,   842,  1583,  2330,  2278,   404,
    1616,  2281,   407,   751,  2138,    35,  1653,  1868,  2276,   723,
    1173,  1488,  1673,  2293,   614,     8,  2296,  1503,    11,  1774,
     772,   621,   622,   623,    54,  2430,  1673,   773,  1147,  2297,
    2029,  2332,  2505,  1172,  2151,  2315,  2505,   775,  1753,   639,
    1474,  1702,  2322,  1993,  2009,  2412,  2323,    40,  2328,  2237,
    1751,  2413,  2424,   465,    47,  1702,   468,   469,  2338,  2425,
    1297,  2268,  2208,  2343,  2491,  1726,  2492,   667,  2479,  1491,
    1318,  2276,  2352,   103,  1421,  1015,  1466,  1419,    71,  1726,
    2405,  2269,  2270,  1018,  1586,  1292,   686,   687,   688,   857,
     690,  1126,  2297,  2281,  2374,   757,  1127,   268,  1797,    -1,
      -1,    -1,    -1,    -1,    -1,  2385,    -1,     0,    -1,    -1,
     710,    -1,    -1,    -1,    -1,    -1,    -1,  2322,  2386,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2332,    -1,    -1,
     730,   731,    -1,  2413,    -1,   735,   736,  2505,   168,  2419,
      -1,    -1,    -1,    -1,  2424,    -1,   139,    -1,    -1,    -1,
      -1,  2268,    -1,  2245,    -1,  2343,    -1,    -1,   188,  2439,
    2440,  2441,  2442,    -1,    -1,   765,    -1,  2435,    -1,   769,
     770,    -1,  2505,    -1,    -1,  2382,    -1,    -1,    -1,    -1,
     780,  2386,    -1,    -1,    -1,  2302,    -1,    -1,   181,    -1,
    1851,  1360,  1361,   186,    -1,    -1,  1365,    90,   798,    -1,
      -1,  2293,    -1,  2483,  1851,   235,    -1,    -1,   238,    -1,
    2327,  2491,    -1,  2330,    -1,    -1,    -1,    -1,    -1,   249,
      -1,  2501,    -1,    -1,    -1,    -1,    -1,    -1,   221,    -1,
    2435,  1400,  1401,    -1,    -1,  2515,    -1,    -1,    -1,    -1,
      -1,  2521,    -1,    -1,    -1,    -1,  2514,   847,   141,    -1,
     280,    -1,    -1,    -1,    -1,    -1,  2536,   857,    -1,    -1,
    2352,   154,    -1,    -1,    -1,    -1,   159,    -1,    -1,    -1,
      -1,   164,    -1,   873,    -1,   268,    -1,    -1,    -1,   172,
      -1,    -1,   175,   454,   455,   456,    -1,   458,   459,   460,
     461,   462,   463,  2385,   324,    -1,    -1,    -1,  2505,    -1,
      -1,   901,    -1,    -1,    -1,    -1,    -1,    -1,  1969,  2514,
     203,    -1,    -1,    -1,   344,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1969,     0,   924,    -1,    49,    -1,    -1,   222,
     930,    -1,    -1,   933,   364,    -1,    -1,   937,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   951,    -1,    -1,   954,   955,   956,   957,    -1,    -1,
      -1,    -1,   355,    -1,   964,   965,    -1,    -1,    -1,    92,
     263,    -1,    -1,   266,    -1,    -1,    -1,    -1,    -1,   272,
     980,   981,   982,   983,   984,   985,    -1,    -1,  2505,   989,
      -1,    -1,    -1,   993,   117,    -1,     8,   997,    -1,    11,
    1000,  1001,  1002,  1003,  1004,  1005,  1006,  1007,  1008,    -1,
      -1,  1011,   135,    90,    -1,    -1,   139,    -1,  1018,    -1,
    1020,    -1,    -1,    -1,  2085,    -1,    -1,    -1,    40,    -1,
      -1,  2092,    -1,   326,    -1,    47,    -1,   160,  2085,     8,
     163,    -1,    11,    -1,    -1,  2092,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   176,    -1,    -1,    -1,    -1,   451,    71,
      -1,    -1,    -1,    -1,   141,   458,   459,   460,   461,   462,
     463,    40,    -1,    -1,    -1,    -1,    -1,   154,    47,    -1,
      -1,    -1,   159,    -1,   377,    -1,    -1,   164,    -1,    -1,
    2151,    -1,    -1,    -1,    -1,   172,    -1,    -1,   175,    -1,
      -1,    -1,    71,    -1,  2151,  1674,  1675,  1676,  1677,    -1,
     403,  1680,  1681,  1682,  1683,  1684,  1685,  1686,  1687,  1688,
    1689,    -1,    -1,    -1,    -1,    -1,   203,   139,    -1,  1129,
      -1,    -1,    -1,   256,   427,    -1,   429,   430,    -1,    -1,
      -1,   264,    -1,    -1,    -1,   222,    -1,  1147,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1156,  1157,    -1,    -1,
       0,  1730,  1731,    -1,    -1,    -1,    -1,    -1,    -1,   181,
     139,    -1,   465,    -1,   186,   468,   469,   470,    -1,    -1,
      -1,    -1,   305,    -1,    -1,    -1,   263,    -1,  1188,   266,
      -1,    -1,    -1,    -1,  1194,   272,  1196,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2268,    -1,   221,
      -1,    -1,   181,    -1,    -1,    -1,    -1,   186,    -1,    -1,
     614,  2268,    -1,    -1,    -1,    -1,    -1,   621,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2302,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   326,
      90,    -1,   221,    -1,    -1,  2302,   268,    -1,     8,    -1,
      -1,    11,  1262,    -1,    -1,    -1,  2327,    -1,    -1,  2330,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1279,
    2327,    -1,    -1,  2330,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    -1,  1292,    -1,  1294,  1295,  1296,    47,    -1,   268,
     377,   141,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1310,    -1,    -1,    -1,   154,    -1,  1316,  1317,    -1,   159,
      -1,    71,  1322,    -1,   164,    -1,   403,    -1,    -1,    -1,
      -1,    -1,   172,    -1,   728,   175,   730,   731,    -1,    -1,
      -1,    -1,    -1,   355,    -1,    -1,    -1,    -1,    -1,    -1,
     427,    -1,   429,   430,    -1,    -1,    -1,    -1,    -1,    -1,
    1360,  1361,  1362,   203,    -1,  1365,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1377,  1378,  1379,
    1380,    -1,   222,    -1,    -1,  1385,   355,    -1,   465,   139,
      -1,   468,   469,   470,    -1,    -1,    -1,    -1,    -1,    -1,
    1400,  1401,    -1,    -1,  1404,   799,    -1,    -1,   802,   803,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1418,    -1,
    1420,    -1,  1422,   263,    -1,    -1,   266,    -1,    -1,    -1,
      -1,   181,   272,    -1,    -1,    -1,   186,    -1,    -1,   451,
      -1,    -1,  1442,    -1,  2505,    -1,   458,   459,   460,   461,
     462,   463,    -1,  1453,    -1,  1455,  1456,  1457,  2505,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1466,    -1,   862,   863,
      -1,   221,    -1,    -1,  1474,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   451,    -1,    -1,    -1,   326,    -1,  1488,   458,
     459,   460,   461,   462,   463,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1503,    -1,    -1,     8,    -1,    -1,    11,
      -1,    -1,    -1,    15,    16,    17,    -1,    -1,   268,    -1,
      -1,  1521,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      32,    -1,    -1,    -1,    -1,    -1,    -1,   377,  1538,  1539,
    1540,   935,   936,    -1,    -1,    -1,    -1,     8,    -1,   943,
      11,   945,   946,    -1,    15,    16,    17,    -1,    -1,    -1,
      -1,     8,    -1,   403,    11,    -1,   960,    -1,   962,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2148,
      -1,   975,   976,    -1,    -1,    -1,    -1,   427,    -1,   429,
     430,    -1,    -1,    40,    -1,    -1,   490,   491,  1598,     8,
      47,    -1,    11,    -1,    -1,   355,    15,    16,    17,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1616,    -1,  1618,    -1,
      -1,    -1,    -1,    -1,    71,   465,    -1,    -1,   468,   469,
     470,    40,    -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1650,    -1,    -1,  1653,    -1,    -1,    -1,    -1,    -1,    -1,
    1660,    -1,    71,    -1,  1664,    -1,    -1,  1667,    -1,  2238,
      -1,    -1,    -1,  1673,  1674,  1675,  1676,  1677,    -1,    -1,
    1680,  1681,  1682,  1683,  1684,  1685,  1686,  1687,  1688,  1689,
      -1,    -1,   139,  1693,  1694,    -1,    -1,    -1,    -1,    -1,
      -1,   451,  1702,    -1,    -1,   207,    -1,  1707,   458,   459,
     460,   461,   462,   463,  1714,    -1,    -1,  1717,    -1,  1719,
      -1,    -1,    -1,    -1,    -1,   186,  1726,  1727,   622,    -1,
    1730,  1731,  2301,    -1,   181,  1735,  1736,    -1,    -1,   186,
      -1,    -1,    -1,    -1,    -1,   639,   207,    -1,    -1,    -1,
      -1,  1751,    -1,  1753,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1156,  1157,    -1,  1765,   268,    -1,    -1,    -1,
      -1,  1771,   181,   667,   221,    -1,    -1,   186,    -1,    -1,
      -1,    -1,  1782,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   686,   687,   688,    -1,   690,    -1,  1798,    -1,
      -1,    -1,     0,    -1,    -1,    -1,    -1,   268,    -1,    -1,
      -1,    -1,   221,    -1,  1208,    -1,   710,    -1,    -1,    -1,
      18,   268,    -1,    -1,  1218,    -1,    -1,  1221,    -1,    -1,
      28,     8,    30,    31,    11,    -1,    -1,    -1,    15,    16,
      17,   735,    -1,    -1,    -1,    -1,  1846,    -1,    46,    -1,
    1850,  1851,  1852,    -1,    -1,    32,    -1,    -1,    -1,   268,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    66,    -1,
      -1,   765,    -1,    -1,    -1,   769,   770,    -1,    -1,    77,
      -1,    -1,    -1,    -1,    -1,  1279,    -1,    -1,    -1,    -1,
      88,    -1,    90,    -1,    -1,    -1,    -1,    -1,  1292,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   355,   107,
      -1,    -1,  1306,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1920,    -1,    -1,   121,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   131,    -1,    -1,    -1,    -1,    -1,   137,
      -1,    -1,    -1,    -1,    -1,    -1,   355,   145,    -1,   147,
     148,    -1,   454,   455,   456,    -1,   458,   459,   460,   461,
     462,   463,    -1,  1963,  1964,    -1,    -1,    -1,  1968,  1969,
      -1,    -1,    -1,  1973,    -1,    -1,  1976,  1977,    -1,    -1,
      -1,  1981,    -1,    -1,    -1,    -1,    -1,   185,    -1,    -1,
      -1,    -1,    -1,   454,   455,   456,    -1,   458,   459,   460,
     461,   462,   463,  2003,   451,    -1,    -1,  2007,    -1,    -1,
      -1,   458,   459,   460,   461,   462,   463,    -1,    -1,  2019,
      -1,    -1,    -1,    -1,    -1,    -1,   224,  2027,    -1,    -1,
     207,    -1,    -1,    -1,  2034,    -1,   930,    -1,    -1,    -1,
      -1,    -1,   451,    -1,    -1,   454,   455,   456,    -1,   458,
     459,   460,   461,   462,   463,    -1,    -1,   951,    -1,    -1,
     954,    -1,    -1,   957,    -1,    -1,    -1,  2067,  1462,    -1,
     964,   965,    -1,    -1,    -1,    -1,  2076,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2085,    -1,   981,   982,   983,
     984,   268,  2092,    -1,   292,   989,    -1,   295,    -1,   993,
      -1,  1495,  1496,   997,    -1,    -1,  1000,  1001,  1002,  1003,
    1004,  1005,  1006,  1007,  1008,    -1,    -1,  1011,    -1,    -1,
      -1,    -1,    -1,    -1,  1018,   323,  1020,    -1,    -1,    -1,
      -1,    -1,    -1,   331,    -1,    -1,    -1,    -1,  2138,    -1,
      -1,    -1,    -1,    -1,    -1,   343,    -1,    -1,  2148,    -1,
      -1,  2151,   350,    -1,    -1,    -1,   354,    -1,    -1,    -1,
    2160,  2161,    -1,    -1,  2164,    -1,   364,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2177,     8,   377,
      -1,    11,    -1,    -1,  2184,    15,    16,    17,    -1,  2189,
      -1,    -1,  2192,  2193,    -1,     8,    -1,    -1,    11,    -1,
    2200,  2201,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,   412,    -1,  2216,    47,  2218,   417,
      -1,     8,    -1,    -1,    11,    -1,    -1,    40,    15,    16,
      17,    -1,   430,    -1,    47,  1129,    -1,    -1,  2238,    -1,
      -1,    71,    -1,  1637,  1638,    32,    -1,    -1,  1642,    -1,
      -1,    -1,    -1,    -1,    -1,   453,    -1,    -1,    71,    -1,
      -1,    -1,  1156,  1157,    -1,    -1,    -1,    -1,  2268,   467,
      -1,   704,   470,    -1,    -1,    -1,    -1,   454,   455,   456,
      -1,   458,   459,   460,   461,   462,   463,    -1,    -1,    -1,
      -1,    -1,     3,    -1,    -1,    -1,  2296,     8,    -1,    -1,
      11,  2301,  2302,    -1,    15,    16,    17,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   748,    -1,    -1,  2318,    -1,
      -1,    32,  2322,    -1,    35,    -1,    -1,  2327,    -1,    40,
    2330,    -1,  2332,    -1,    -1,    -1,    47,    -1,    -1,     8,
      -1,    -1,    11,    -1,  2344,    -1,    15,    16,    17,    -1,
      -1,   181,    -1,    -1,  2354,    -1,   186,    -1,  2358,  2359,
      71,    -1,    -1,    32,    -1,    -1,    -1,    -1,   181,    -1,
      -1,    -1,    -1,   186,    -1,    -1,    -1,   207,   208,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   221,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1294,  1295,  1296,    -1,    -1,    -1,    -1,    -1,   221,    -1,
    2410,    -1,    -1,  2413,    -1,    -1,    -1,    -1,    -1,    -1,
     207,   251,  2422,  1317,   254,    -1,    -1,    -1,  1322,    -1,
    2430,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,  2439,
      -1,   271,    -1,    -1,    -1,    -1,    -1,   880,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   268,    -1,  1851,    -1,  2459,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1362,    -1,
     181,    -1,    -1,    -1,    -1,   186,    -1,    -1,  2478,  2479,
      -1,   268,    -1,  1377,    -1,  1379,  1380,    -1,    -1,    -1,
      -1,  1385,    -1,    -1,    -1,   928,   207,   208,    -1,    -1,
      -1,    -1,    -1,    -1,  2504,  2505,    -1,    -1,    -1,    -1,
     221,    -1,  1906,    -1,    -1,    -1,    -1,   950,    -1,    -1,
      -1,  2521,   955,  2523,  1418,   355,  1420,    -1,  1422,    -1,
      -1,    -1,    -1,   966,   967,   968,    -1,   970,   207,    -1,
     251,    -1,   355,   254,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,    -1,
     271,  1455,  1456,  1457,    -1,    -1,     8,    -1,    -1,    11,
      -1,    -1,  1466,    15,    16,    17,    -1,    -1,    -1,    -1,
      -1,  2581,  2582,  1016,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1488,    -1,    -1,    -1,    -1,   268,
      -1,    -1,    -1,     8,  1037,    -1,    11,    -1,    -1,  1503,
      15,    16,    17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   451,    -1,    -1,   454,   455,   456,  1521,   458,   459,
     460,   461,   462,   463,    -1,    40,    -1,    -1,   451,    -1,
      -1,   471,    47,    -1,   355,   458,   459,   460,   461,   462,
     463,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,
      -1,    15,    16,    17,    -1,    -1,    71,   454,   455,   456,
      -1,   458,   459,   460,   461,   462,   463,    -1,    32,    -1,
    2074,    -1,    -1,    -1,    -1,  2079,    40,    -1,    -1,    -1,
      -1,    -1,    -1,    47,    -1,    -1,    -1,    -1,    -1,  2093,
    2094,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1143,    -1,    -1,    -1,    -1,    -1,    -1,    71,    -1,    -1,
      -1,    -1,  1155,    -1,    -1,    -1,    -1,  1160,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     451,    -1,    -1,   454,   455,   456,    -1,   458,   459,   460,
     461,   462,   463,    -1,    -1,    -1,  1650,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   207,  1660,    -1,    -1,    -1,
    1664,    -1,    -1,  1667,    -1,    -1,   181,    -1,    -1,    -1,
      -1,   186,    -1,    -1,    -1,   454,   455,   456,    -1,   458,
     459,   460,   461,   462,   463,    -1,    -1,    -1,    -1,  1693,
    1694,    -1,   207,   208,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   221,    -1,    -1,    -1,
    1714,    -1,    -1,  1717,    -1,  1719,   268,   181,    -1,    -1,
      -1,    -1,   186,  1727,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1735,  1736,    -1,    -1,    -1,   251,    -1,    -1,   254,
      -1,    -1,    -1,   207,   208,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   268,    -1,  2259,  2260,   221,    -1,    -1,
      -1,  1765,    -1,    -1,  2268,    -1,    -1,  1771,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1320,  1782,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   251,    -1,    -1,
     254,    -1,    -1,    -1,  1798,    -1,    -1,    -1,  1341,    -1,
      -1,    -1,    -1,     8,   268,    -1,    11,   271,    -1,    -1,
      15,    16,    17,    -1,    -1,  1358,    -1,  1360,  1361,    -1,
    1363,    -1,  1365,    -1,    -1,    -1,  1369,    32,    -1,    -1,
      -1,    -1,    -1,  1376,    -1,    40,    -1,    -1,  1381,    -1,
     355,    -1,    47,    -1,    -1,    -1,    -1,    -1,  1391,  1392,
    1393,  1394,    -1,    -1,    -1,    -1,    -1,  1400,  1401,    -1,
    1403,    -1,    -1,    -1,    -1,    -1,    71,    -1,    -1,    -1,
      -1,  1414,    -1,    -1,  1417,    -1,    -1,    -1,    -1,    -1,
      -1,  1424,  1425,  1426,  1427,  1428,  1429,  1430,  1431,  1432,
    1433,   355,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   454,   455,   456,    -1,   458,   459,   460,   461,
     462,   463,    -1,    -1,    -1,    -1,  1920,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1471,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   451,    -1,    -1,   454,
     455,   456,    -1,   458,   459,   460,   461,   462,   463,    -1,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,  1963,
    1964,    -1,    -1,    -1,  1968,    -1,    -1,    -1,    -1,  1973,
      -1,    -1,  1976,  1977,    -1,    -1,   181,  1981,    -1,    -1,
      -1,   186,    -1,    -1,    -1,    -1,    -1,   451,    -1,    -1,
     454,   455,   456,    -1,   458,   459,   460,   461,   462,   463,
      -1,  2505,   207,   208,   468,    -1,    72,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2019,   221,    -1,    -1,    -1,
      -1,    87,    -1,  2027,    -1,    -1,    -1,    -1,    -1,    -1,
    2034,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   251,    -1,    -1,   254,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,     8,   268,    -1,    11,   271,    -1,    -1,    15,
      16,    17,  2076,    -1,   140,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   149,    -1,    -1,    32,    -1,    -1,    -1,
    1633,  1634,    -1,    -1,    40,   161,    -1,    -1,    -1,    -1,
      -1,    47,    -1,    -1,    -1,    -1,  1649,    -1,    -1,    -1,
      -1,    -1,  1655,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   189,    -1,    71,    -1,  1670,  1671,  1672,
      -1,  1674,  1675,  1676,  1677,    -1,    -1,  1680,  1681,  1682,
    1683,  1684,  1685,  1686,  1687,  1688,  1689,  1690,    -1,    -1,
     355,    -1,    -1,    -1,    -1,    -1,  2160,  2161,    -1,    -1,
    2164,    -1,    -1,    -1,    -1,    -1,    -1,  1710,   234,    -1,
      -1,    -1,  1715,  1716,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1729,  1730,  1731,  1732,
      -1,  1734,    -1,    -1,    -1,    -1,  2200,  2201,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2218,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   290,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1777,   181,    -1,    -1,   304,    -1,
     186,    -1,    -1,    -1,    -1,    -1,   451,    -1,    -1,   454,
     455,   456,    -1,   458,   459,   460,   461,   462,   463,    -1,
      -1,   207,   208,   468,    -1,    -1,    -1,    -1,    -1,   335,
      -1,   337,  1815,    -1,    -1,   221,    -1,    -1,   344,    -1,
       8,   347,    -1,    11,    -1,    -1,    -1,    15,    16,    17,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     366,    -1,    -1,    -1,    32,   251,    -1,    -1,   254,    -1,
      -1,   377,    40,    -1,  2318,    -1,    -1,    -1,   384,    47,
      -1,    -1,   268,    -1,    -1,   271,    -1,   393,  2332,     8,
      -1,    -1,    11,    -1,    -1,    -1,    15,    16,    17,    -1,
    2344,    -1,    -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    32,    -1,  2359,    -1,   423,    -1,    -1,
      -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1921,    -1,
      -1,    -1,  1925,  1926,    -1,  1928,    -1,    -1,  1931,  1932,
    1933,  1934,    71,    -1,    -1,  1938,  1939,  1940,  1941,  1942,
    1943,  1944,  1945,  1946,  1947,  1948,  1949,    -1,     8,   355,
      -1,    11,    -1,    -1,    -1,    15,    16,    17,    -1,  1962,
      -1,    -1,  1965,    -1,  1967,    -1,  2430,    -1,  1971,    -1,
      -1,  1974,  1975,    -1,    -1,  1978,  1979,    -1,    -1,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,    -1,
      -1,    -1,    -1,   181,    -1,  2459,    -1,    -1,   186,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    71,    -1,    -1,  2478,  2479,    -1,    35,  2021,   207,
     208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2033,    -1,    -1,   221,    -1,    -1,    54,    -1,    -1,    -1,
      -1,    -1,   181,  2046,    -1,   451,    -1,   186,   454,   455,
     456,    -1,   458,   459,   460,   461,   462,   463,    -1,  2523,
      -1,    -1,   468,   251,    -1,    -1,   254,    -1,   207,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     268,    -1,   221,   271,    -1,   103,   104,    -1,    -1,    -1,
      -1,    -1,    -1,   111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   251,    -1,    -1,   254,    -1,  2581,  2582,    -1,
      -1,   181,    -1,    -1,    -1,    -1,   186,    -1,    -1,   268,
      -1,    -1,   271,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2144,    -1,    -1,    -1,  2148,    -1,   207,   208,    -1,
     168,  2154,  2155,  2156,    -1,    -1,  2159,    -1,    -1,  2162,
    2163,   221,    -1,    -1,  2167,    -1,    -1,   355,    -1,    -1,
     188,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   254,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   355,   235,    -1,    -1,
     238,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   249,    -1,   251,    -1,  2238,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2256,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   280,   451,    -1,    -1,   454,   455,   456,    -1,
     458,   459,   460,   461,   462,   463,    -1,    -1,    -1,    -1,
     468,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   355,    -1,  2300,  2301,    -1,
      -1,    -1,  2305,  2306,  2307,    -1,   324,    -1,    -1,    -1,
      -1,    -1,   451,    -1,    -1,   454,   455,   456,    -1,   458,
     459,   460,   461,   462,   463,    -1,   344,    -1,    -1,   468,
      -1,    -1,    -1,  2336,  2337,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   364,  2350,   366,    -1,
      -1,   369,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2362,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   451,    -1,    -1,   454,   455,   456,    -1,   458,   459,
     460,   461,   462,   463,  2407,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2418,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2437,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2451,   467,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2512,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,  2526,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    72,
      -1,    74,    75,    76,    77,    78,    79,    80,    81,    82,
    2593,    84,    85,    86,    87,    88,    89,    -1,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,   124,   125,   126,    -1,   128,   129,   130,   131,   132,
      -1,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,    -1,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,   171,    -1,
     173,   174,    -1,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,   200,   201,   202,
      -1,   204,    -1,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,    -1,    -1,   218,   219,   220,   221,    -1,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
      -1,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,    -1,   375,   376,    -1,   378,   379,   380,   381,   382,
     383,   384,    -1,   386,   387,    -1,    -1,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,   410,    -1,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,    -1,
      -1,    -1,    -1,    -1,    -1,   458,   459,   460,    -1,    -1,
      -1,    -1,    -1,    -1,   467,   468,    -1,    -1,    -1,   472,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    72,
      -1,    74,    75,    76,    77,    78,    79,    80,    81,    82,
      -1,    84,    85,    86,    87,    88,    89,    -1,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,   124,   125,    -1,    -1,   128,   129,   130,   131,   132,
      -1,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,    -1,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,   171,    -1,
     173,   174,    -1,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,   200,   201,   202,
      -1,   204,    -1,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,    -1,    -1,   218,   219,   220,   221,    -1,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
      -1,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,    -1,   386,   387,    -1,    -1,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,   410,    -1,   412,
     413,   414,   415,   416,   417,   418,    -1,   420,   421,   422,
     423,   424,   425,    -1,    -1,   428,    -1,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,    -1,
     453,    -1,    -1,    -1,    -1,   458,   459,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   467,   468,    -1,    -1,    -1,   472,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    72,
      -1,    74,    75,    76,    77,    78,    79,    80,    81,    82,
      -1,    84,    85,    86,    87,    88,    89,    -1,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,   124,   125,    -1,    -1,   128,   129,   130,   131,   132,
      -1,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,    -1,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,   171,    -1,
     173,   174,    -1,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,   200,   201,   202,
      -1,   204,    -1,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,    -1,    -1,   218,   219,   220,   221,    -1,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
      -1,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,    -1,   386,   387,    -1,    -1,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,   410,    -1,   412,
     413,   414,   415,   416,   417,   418,    -1,   420,   421,   422,
     423,   424,   425,    -1,    -1,   428,    -1,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,    -1,
     453,    -1,    -1,    -1,    -1,   458,   459,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   467,    -1,    -1,    -1,    -1,   472,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    72,
      -1,    74,    75,    76,    77,    78,    79,    80,    81,    82,
      -1,    84,    85,    86,    87,    88,    89,    -1,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,   124,   125,    -1,    -1,   128,   129,   130,   131,   132,
      -1,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,    -1,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,   164,   165,   166,   167,   168,   169,    -1,   171,    -1,
     173,   174,    -1,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,   200,   201,   202,
      -1,   204,    -1,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,    -1,   217,   218,   219,   220,   221,    -1,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
      -1,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,    -1,   375,   376,    -1,   378,   379,   380,   381,   382,
     383,   384,    -1,   386,   387,    -1,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,   410,    -1,   412,
     413,   414,   415,   416,   417,   418,    -1,   420,   421,   422,
     423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,    -1,
      -1,    -1,    -1,    -1,    -1,   458,   459,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   467,    -1,    -1,    -1,    -1,   472,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    72,
      -1,    74,    75,    76,    77,    78,    79,    80,    81,    82,
      -1,    84,    85,    86,    87,    88,    89,    -1,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,   124,   125,    -1,    -1,   128,   129,   130,   131,   132,
      -1,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,    -1,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,   171,    -1,
     173,   174,    -1,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,   200,   201,   202,
      -1,   204,    -1,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,    -1,    -1,   218,   219,   220,   221,    -1,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
      -1,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,    -1,   375,   376,    -1,   378,   379,   380,   381,   382,
     383,   384,    -1,   386,   387,    -1,    -1,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,   410,    -1,   412,
     413,   414,   415,   416,   417,   418,    -1,   420,   421,   422,
     423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,    -1,
      -1,    -1,    -1,    -1,    -1,   458,   459,   460,    -1,    -1,
      -1,    -1,    -1,    -1,   467,    -1,    -1,    -1,    -1,   472,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    72,
      -1,    74,    75,    76,    77,    78,    79,    80,    81,    82,
      -1,    84,    85,    86,    87,    88,    89,    -1,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,   124,   125,    -1,    -1,   128,   129,   130,   131,   132,
      -1,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,    -1,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,   171,    -1,
     173,   174,    -1,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,   200,   201,   202,
      -1,   204,    -1,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,    -1,    -1,   218,   219,   220,   221,    -1,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
      -1,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,    -1,   375,   376,    -1,   378,   379,   380,   381,   382,
     383,   384,    -1,   386,   387,    -1,    -1,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,   410,    -1,   412,
     413,   414,   415,   416,   417,   418,    -1,   420,   421,   422,
     423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,    -1,
      -1,    -1,    -1,    -1,    -1,   458,   459,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   467,    -1,    -1,    -1,    -1,   472,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    72,
      -1,    74,    75,    76,    77,    78,    79,    80,    81,    82,
      -1,    84,    85,    86,    87,    88,    89,    -1,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,   124,   125,    -1,    -1,   128,   129,   130,   131,   132,
      -1,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,    -1,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,   171,    -1,
     173,   174,    -1,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,   200,   201,   202,
      -1,   204,    -1,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,    -1,    -1,   218,   219,   220,   221,    -1,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
      -1,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,    -1,   375,   376,    -1,   378,   379,   380,   381,   382,
     383,   384,    -1,   386,   387,    -1,    -1,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,   410,    -1,   412,
     413,   414,   415,   416,   417,   418,    -1,   420,   421,   422,
     423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,    -1,
      -1,    -1,    -1,    -1,    -1,   458,   459,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   467,   468,    -1,    -1,    -1,   472,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    72,
      -1,    74,    75,    76,    77,    78,    79,    80,    81,    82,
      -1,    84,    85,    86,    87,    88,    89,    -1,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,   124,   125,    -1,    -1,   128,   129,   130,   131,   132,
      -1,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,    -1,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,   164,   165,   166,   167,   168,   169,    -1,   171,    -1,
     173,   174,    -1,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,   200,   201,   202,
      -1,   204,    -1,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,    -1,    -1,   218,   219,   220,   221,    -1,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
      -1,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,    -1,   375,   376,    -1,   378,   379,   380,   381,   382,
     383,   384,    -1,   386,   387,    -1,    -1,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,   410,    -1,   412,
     413,   414,   415,   416,   417,   418,    -1,   420,   421,   422,
     423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,    -1,
      -1,    -1,    -1,    -1,    -1,   458,   459,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   467,    -1,    -1,    -1,    -1,   472,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    72,
      -1,    74,    75,    76,    77,    78,    79,    80,    81,    82,
      -1,    84,    85,    86,    87,    88,    89,    -1,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,   124,   125,    -1,    -1,   128,   129,   130,   131,   132,
      -1,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,    -1,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,   171,    -1,
     173,   174,    -1,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,   200,   201,   202,
      -1,   204,    -1,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,    -1,    -1,   218,   219,   220,   221,    -1,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
      -1,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,    -1,   375,   376,    -1,   378,   379,   380,   381,   382,
     383,   384,    -1,   386,   387,    -1,    -1,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,   410,    -1,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,    -1,
      -1,    -1,    -1,    -1,    -1,   458,   459,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   467,    -1,    -1,    -1,    -1,   472,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    72,
      -1,    74,    75,    76,    77,    78,    79,    80,    81,    82,
      -1,    84,    85,    86,    87,    88,    89,    -1,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,   124,   125,    -1,    -1,   128,   129,   130,   131,   132,
      -1,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,    -1,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,   171,    -1,
     173,   174,    -1,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,   200,   201,   202,
      -1,   204,    -1,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,    -1,    -1,   218,   219,   220,   221,    -1,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
      -1,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,    -1,   375,   376,    -1,   378,   379,   380,   381,   382,
     383,   384,    -1,   386,   387,    -1,    -1,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,   410,    -1,   412,
     413,   414,   415,   416,   417,   418,    -1,   420,   421,   422,
     423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,    -1,
      -1,    -1,    -1,    -1,    -1,   458,   459,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   467,    -1,    -1,    -1,    -1,   472,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    72,
      -1,    74,    75,    76,    77,    78,    79,    80,    81,    82,
      -1,    84,    85,    86,    87,    88,    89,    -1,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,   124,   125,    -1,    -1,   128,   129,   130,   131,   132,
      -1,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,    -1,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,   171,    -1,
     173,   174,    -1,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,   200,   201,   202,
      -1,   204,    -1,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,    -1,    -1,   218,   219,   220,   221,    -1,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
      -1,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,    -1,   375,   376,    -1,   378,   379,   380,   381,   382,
     383,   384,    -1,   386,   387,    -1,    -1,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,   410,    -1,   412,
     413,   414,   415,   416,   417,   418,    -1,   420,   421,   422,
     423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,    -1,
      -1,    -1,    -1,    -1,    -1,   458,   459,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   467,    -1,    -1,    -1,    -1,   472,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    72,
      -1,    74,    75,    76,    77,    78,    79,    80,    81,    82,
      -1,    84,    85,    86,    87,    88,    89,    -1,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,   124,   125,    -1,    -1,   128,   129,   130,   131,   132,
      -1,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,    -1,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,   171,    -1,
     173,   174,    -1,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,   200,   201,   202,
      -1,   204,    -1,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,    -1,    -1,   218,   219,   220,   221,    -1,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
      -1,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,    -1,   375,   376,    -1,   378,   379,   380,   381,   382,
     383,   384,    -1,   386,   387,    -1,    -1,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,   410,    -1,   412,
     413,   414,   415,   416,   417,   418,    -1,   420,   421,   422,
     423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,    -1,
      -1,    -1,    -1,    -1,    -1,   458,   459,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   467,    -1,    -1,    -1,    -1,   472,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    72,
      -1,    74,    75,    76,    77,    78,    79,    80,    81,    82,
      -1,    84,    85,    86,    87,    88,    89,    -1,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,   124,   125,    -1,    -1,   128,   129,   130,   131,   132,
      -1,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,    -1,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,   171,    -1,
     173,   174,    -1,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,   200,   201,   202,
      -1,   204,    -1,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,    -1,    -1,   218,   219,   220,   221,    -1,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
      -1,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,    -1,   375,   376,    -1,   378,   379,   380,   381,   382,
     383,   384,    -1,   386,   387,    -1,    -1,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,   410,    -1,   412,
     413,   414,   415,   416,   417,   418,    -1,   420,   421,   422,
     423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,    -1,
      -1,    -1,    -1,    -1,    -1,   458,   459,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   467,    -1,    -1,    -1,    -1,   472,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    72,
      -1,    74,    75,    76,    77,    78,    79,    80,    81,    82,
      -1,    84,    85,    86,    87,    88,    89,    -1,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,   124,   125,    -1,    -1,   128,   129,   130,   131,   132,
      -1,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,    -1,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,   171,    -1,
     173,   174,    -1,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,   200,   201,   202,
      -1,   204,    -1,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,    -1,    -1,   218,   219,   220,   221,    -1,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
      -1,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,    -1,   375,   376,    -1,   378,   379,   380,   381,   382,
     383,   384,    -1,   386,   387,    -1,    -1,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,   410,    -1,   412,
     413,   414,   415,   416,   417,   418,    -1,   420,   421,   422,
     423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,    -1,
      -1,    -1,    -1,    -1,    -1,   458,   459,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   467,    -1,    -1,    -1,    -1,   472,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    72,
      -1,    74,    75,    76,    77,    78,    79,    80,    81,    82,
      -1,    84,    85,    86,    87,    88,    89,    -1,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,   124,   125,    -1,    -1,   128,   129,   130,   131,   132,
      -1,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,    -1,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,   171,    -1,
     173,   174,    -1,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,   200,   201,   202,
      -1,   204,    -1,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,    -1,    -1,   218,   219,   220,   221,    -1,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
      -1,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,    -1,   375,   376,    -1,   378,   379,   380,   381,   382,
     383,   384,    -1,   386,   387,    -1,    -1,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,   410,    -1,   412,
     413,   414,   415,   416,   417,   418,    -1,   420,   421,   422,
     423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,    -1,
      -1,    -1,    -1,    -1,    -1,   458,   459,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   467,    -1,    -1,    -1,    -1,   472,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    72,
      -1,    74,    75,    76,    77,    78,    79,    80,    81,    82,
      -1,    84,    85,    86,    87,    88,    89,    -1,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,    -1,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,   124,   125,    -1,    -1,   128,   129,   130,   131,   132,
      -1,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,    -1,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,   171,    -1,
     173,   174,    -1,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,   191,   192,
      -1,   194,   195,   196,   197,   198,   199,   200,   201,   202,
      -1,   204,    -1,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,    -1,    -1,   218,   219,   220,   221,    -1,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,    -1,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
      -1,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,    -1,   375,   376,    -1,   378,   379,   380,   381,   382,
     383,   384,    -1,   386,   387,    -1,    -1,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,   410,    -1,   412,
     413,   414,   415,   416,   417,   418,    -1,   420,   421,   422,
     423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   458,   459,    -1,    -1,     3,
       4,     5,     6,     7,   467,     9,    10,    -1,    -1,   472,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    -1,    66,    67,    68,    69,    70,    -1,    72,    -1,
      74,    75,    76,    77,    78,    79,    80,    81,    82,    -1,
      84,    85,    86,    87,    88,    89,    -1,    91,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,    -1,   112,    -1,
     114,   115,   116,   117,   118,   119,    -1,   121,   122,   123,
     124,   125,    -1,    -1,   128,   129,   130,   131,   132,    -1,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
      -1,   155,   156,   157,   158,    -1,   160,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,   171,    -1,   173,
     174,    -1,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,   191,   192,    -1,
     194,   195,   196,   197,   198,   199,   200,   201,   202,    -1,
     204,    -1,   206,   207,   208,   209,   210,   211,   212,   213,
     214,   215,    -1,    -1,   218,   219,   220,   221,    -1,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,    -1,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,    -1,
     264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,    -1,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,    -1,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
      -1,   375,   376,    -1,   378,   379,   380,   381,   382,   383,
     384,    -1,   386,   387,    -1,    -1,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,    -1,
      -1,   405,   406,   407,   408,   409,   410,    -1,   412,   413,
     414,   415,   416,   417,   418,    -1,   420,   421,   422,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   458,   459,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   467,    -1,    -1,    -1,    -1,   472,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    -1,    66,    67,    68,    69,    70,    -1,    72,    -1,
      74,    75,    76,    77,    78,    79,    80,    81,    82,    -1,
      84,    85,    86,    87,    88,    89,    -1,    91,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,    -1,   112,    -1,
     114,   115,   116,   117,   118,   119,    -1,   121,   122,   123,
     124,   125,    -1,    -1,   128,   129,   130,   131,   132,    -1,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
      -1,   155,   156,   157,   158,    -1,   160,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,   171,    -1,   173,
     174,    -1,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,   191,   192,    -1,
     194,   195,   196,   197,   198,   199,   200,   201,   202,    -1,
     204,    -1,   206,    -1,   208,   209,   210,   211,   212,   213,
     214,   215,    -1,    -1,   218,   219,   220,   221,    -1,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,    -1,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,    -1,
     264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,    -1,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,    -1,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
      -1,   375,   376,    -1,   378,   379,   380,   381,   382,   383,
     384,    -1,   386,   387,    -1,    -1,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,    -1,
      -1,   405,   406,   407,   408,   409,   410,    -1,   412,   413,
     414,   415,   416,   417,   418,    -1,   420,   421,   422,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   458,   459,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   467,    -1,    -1,    -1,    -1,   472,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    -1,    66,    67,    68,    69,    70,    -1,    72,    -1,
      74,    75,    76,    77,    78,    79,    80,    81,    82,    -1,
      84,    85,    86,    87,    88,    89,    -1,    91,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,    -1,
     114,   115,   116,   117,   118,   119,    -1,   121,   122,   123,
     124,   125,    -1,    -1,   128,   129,   130,   131,   132,    -1,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
      -1,   155,   156,   157,   158,    -1,   160,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,   171,    -1,   173,
     174,    -1,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,   191,   192,    -1,
     194,   195,   196,   197,   198,   199,   200,   201,   202,    -1,
     204,    -1,   206,    -1,    -1,   209,   210,   211,   212,   213,
     214,   215,    -1,    -1,   218,   219,   220,   221,    -1,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,    -1,   252,   253,
      -1,   255,   256,   257,   258,   259,   260,   261,   262,    -1,
     264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,    -1,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,    -1,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
      -1,   375,   376,    -1,   378,   379,   380,   381,   382,   383,
     384,    -1,   386,   387,    -1,    -1,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,    -1,
      -1,   405,   406,   407,   408,   409,   410,    -1,   412,   413,
     414,   415,   416,   417,   418,    -1,   420,   421,   422,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,    -1,    -1,
      -1,    -1,    -1,    -1,   458,   459,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   467,    -1,    -1,    -1,    -1,   472,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    43,
      44,    45,    46,    -1,    48,    49,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    -1,    66,    67,    68,    69,    70,    -1,    72,    -1,
      74,    75,    76,    77,    78,    79,    80,    81,    82,    -1,
      84,    85,    86,    87,    88,    89,    -1,    91,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,    -1,
     114,   115,   116,   117,   118,   119,    -1,   121,   122,   123,
     124,   125,    -1,    -1,   128,   129,   130,   131,   132,    -1,
     134,   135,   136,    -1,   138,    -1,   140,    -1,   142,   143,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
      -1,   155,   156,   157,   158,    -1,   160,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,   171,    -1,   173,
     174,    -1,   176,   177,   178,   179,   180,    -1,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,   191,   192,    -1,
     194,   195,   196,   197,   198,   199,   200,   201,   202,    -1,
     204,    -1,   206,    -1,    -1,   209,   210,   211,   212,   213,
     214,   215,    -1,    -1,   218,   219,   220,    -1,    -1,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,    -1,   252,   253,
      -1,   255,   256,   257,   258,   259,   260,   261,   262,    -1,
     264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,    -1,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,    -1,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
      -1,   375,   376,    -1,   378,   379,   380,   381,   382,   383,
     384,    -1,   386,   387,    -1,    -1,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,    -1,
      -1,   405,   406,   407,   408,   409,   410,    -1,   412,   413,
     414,   415,   416,   417,   418,    -1,   420,   421,   422,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   458,   459,     3,    -1,    -1,    -1,
      -1,    -1,    -1,   467,    -1,    -1,    -1,    -1,   472,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    35,    -1,
      37,    38,    -1,    40,    41,    42,    -1,    44,    45,    46,
      47,    48,    -1,    50,    51,    -1,    53,    54,    55,    56,
      57,    -1,    -1,    60,    61,    62,    63,    64,    -1,    66,
      67,    68,    69,    70,    -1,    -1,    -1,    74,    75,    76,
      77,    78,    -1,    80,    81,    82,    -1,    84,    85,    86,
      87,    88,    89,    -1,    91,    92,    93,    94,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,
     107,   108,   109,   110,    -1,   112,    -1,   114,   115,   116,
     117,   118,   119,    -1,   121,   122,   123,   124,   125,    -1,
      -1,   128,   129,   130,   131,   132,    -1,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,   145,   146,
     147,   148,   149,   150,   151,    -1,   153,    -1,   155,   156,
     157,   158,    -1,   160,    -1,   162,    -1,    -1,   165,   166,
     167,   168,   169,    -1,   171,    -1,   173,   174,    -1,   176,
     177,   178,   179,   180,    -1,   182,   183,   184,   185,    -1,
     187,   188,   189,   190,   191,   192,    -1,   194,   195,   196,
     197,   198,   199,   200,   201,   202,    -1,   204,    -1,   206,
      -1,    -1,   209,   210,   211,   212,   213,   214,   215,    -1,
      -1,   218,   219,   220,    -1,    -1,   223,   224,   225,    -1,
      -1,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,    -1,   252,   253,    -1,   255,    -1,
     257,   258,   259,   260,   261,   262,    -1,   264,   265,    -1,
      -1,   268,   269,   270,    -1,    -1,   273,   274,    -1,   276,
      -1,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
     297,    -1,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,    -1,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,    -1,   350,   351,   352,   353,   354,    -1,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,    -1,   375,   376,
      -1,   378,    -1,   380,   381,   382,   383,   384,    -1,   386,
     387,    -1,    -1,   390,   391,   392,   393,   394,    -1,   396,
     397,   398,   399,   400,   401,   402,    -1,    -1,   405,   406,
     407,   408,   409,    -1,    -1,   412,   413,   414,   415,   416,
     417,   418,    -1,   420,    -1,   422,   423,   424,   425,    -1,
      -1,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,    -1,    -1,    -1,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   468,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    64,    -1,
      66,    67,    68,    69,    70,    -1,    72,    -1,    74,    75,
      76,    77,    78,    79,    80,    81,    82,    -1,    84,    85,
      86,    87,    88,    89,    -1,    91,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,    -1,   112,    -1,   114,   115,
     116,   117,   118,   119,    -1,   121,   122,   123,   124,   125,
      -1,    -1,   128,   129,   130,   131,   132,    -1,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,   145,
     146,   147,   148,   149,   150,   151,    -1,   153,    -1,   155,
     156,   157,   158,    -1,   160,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,    -1,   171,    -1,   173,   174,    -1,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,   191,   192,    -1,   194,   195,
     196,   197,   198,   199,   200,   201,   202,    -1,   204,    -1,
     206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,    -1,   218,   219,   220,   221,    -1,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,    -1,   252,   253,   254,   255,
      -1,   257,   258,   259,   260,   261,   262,    -1,   264,   265,
      -1,   267,   268,   269,   270,    -1,    -1,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,    -1,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,    -1,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,    -1,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,    -1,
     386,   387,    -1,    -1,   390,   391,   392,   393,   394,    -1,
     396,   397,   398,   399,   400,   401,   402,    -1,    -1,   405,
     406,   407,   408,   409,   410,    -1,   412,   413,   414,   415,
     416,   417,   418,    -1,   420,   421,   422,   423,   424,   425,
      -1,    -1,   428,    -1,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,    -1,    -1,   453,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   467,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    72,    -1,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,    -1,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,   124,
     125,    -1,    -1,   128,   129,   130,   131,   132,    -1,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,    -1,   153,    -1,
     155,   156,   157,   158,    -1,   160,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,    -1,   171,    -1,   173,   174,
      -1,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,   191,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,    -1,   204,
      -1,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,    -1,   218,   219,   220,   221,    -1,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,    -1,   252,   253,   254,
     255,    -1,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,   267,   268,   269,   270,    -1,    -1,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,    -1,   390,   391,   392,   393,   394,
      -1,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,   410,    -1,   412,   413,   414,
     415,   416,   417,   418,    -1,   420,   421,   422,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,    -1,    -1,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   467,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    72,    -1,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,    -1,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,   124,
     125,    -1,    -1,   128,   129,   130,   131,   132,    -1,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,    -1,   153,    -1,
     155,   156,   157,   158,    -1,   160,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,    -1,   171,    -1,   173,   174,
      -1,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,   191,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,    -1,   204,
      -1,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,    -1,    -1,   218,   219,   220,   221,    -1,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,    -1,   252,   253,   254,
     255,    -1,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,    -1,   390,   391,   392,   393,   394,
      -1,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,   410,    -1,   412,   413,   414,
     415,   416,   417,   418,    -1,   420,   421,   422,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,    -1,    -1,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   467,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    72,    -1,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,    -1,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,   124,
     125,    -1,    -1,   128,   129,   130,   131,   132,    -1,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,    -1,   153,    -1,
     155,   156,   157,   158,    -1,   160,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,    -1,   171,    -1,   173,   174,
      -1,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,   191,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,    -1,   204,
      -1,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,    -1,    -1,   218,   219,   220,   221,    -1,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,    -1,   252,   253,   254,
     255,    -1,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,    -1,   390,   391,   392,   393,   394,
      -1,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,   410,    -1,   412,   413,   414,
     415,   416,   417,   418,    -1,   420,   421,   422,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,    -1,    -1,     3,     4,
       5,    -1,    -1,    -1,     9,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   467,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    -1,    -1,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    72,    -1,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,   102,   103,   104,
     105,   106,   107,   108,   109,   110,    -1,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,   124,
     125,    -1,    -1,   128,   129,   130,   131,   132,    -1,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,    -1,
     155,   156,   157,   158,    -1,   160,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,    -1,   171,    -1,   173,   174,
      -1,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,   191,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,    -1,   204,
      -1,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,    -1,    -1,   218,   219,   220,   221,    -1,   223,   224,
     225,    -1,    -1,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,    -1,   252,   253,   254,
     255,    -1,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,   266,    -1,   268,   269,   270,    -1,    -1,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,    -1,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,    -1,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,    -1,    -1,   412,   413,   414,
     415,   416,   417,   418,    -1,   420,   421,   422,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,    -1,    -1,     3,    -1,
      -1,    -1,    -1,   458,   459,   460,    -1,    -1,    -1,    -1,
      -1,    -1,   467,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    30,    31,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    -1,    -1,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    72,    -1,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,   102,   103,   104,
     105,   106,   107,   108,   109,   110,    -1,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,   124,
     125,    -1,    -1,   128,   129,   130,   131,   132,    -1,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,    -1,   153,    -1,
     155,   156,   157,   158,    -1,   160,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,    -1,   171,    -1,   173,   174,
      -1,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,   191,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,    -1,   204,
      -1,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,    -1,    -1,   218,   219,   220,   221,    -1,   223,   224,
     225,    -1,    -1,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,    -1,   252,   253,   254,
     255,    -1,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,    -1,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,    -1,   390,   391,   392,   393,   394,
      -1,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,    -1,    -1,   412,   413,   414,
     415,   416,   417,   418,    -1,   420,   421,   422,   423,   424,
     425,    -1,    -1,   428,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,    -1,    -1,   453,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   467,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,
      44,    45,    46,    47,    48,    -1,    50,    51,    -1,    53,
      54,    55,    56,    57,    -1,    -1,    60,    61,    62,    63,
      64,    -1,    66,    67,    68,    69,    70,    -1,    -1,    -1,
      74,    75,    76,    77,    78,    -1,    80,    81,    82,    -1,
      84,    85,    86,    87,    88,    89,    -1,    -1,    92,    93,
      94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,   103,
     104,   105,   106,   107,   108,   109,   110,    -1,   112,    -1,
     114,   115,   116,   117,   118,   119,    -1,   121,   122,   123,
     124,   125,    -1,    -1,   128,   129,   130,   131,   132,    -1,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,   145,   146,   147,   148,   149,   150,   151,    -1,   153,
      -1,   155,   156,   157,   158,    -1,   160,    -1,   162,    -1,
      -1,    -1,   166,   167,   168,   169,    -1,   171,    -1,   173,
     174,    -1,   176,   177,   178,   179,   180,    -1,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,   191,   192,    -1,
     194,    -1,   196,   197,   198,   199,   200,   201,   202,    -1,
     204,    -1,   206,    -1,    -1,   209,    -1,   211,   212,   213,
     214,   215,    -1,    -1,   218,    -1,   220,    -1,    -1,   223,
     224,   225,    -1,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,    -1,   246,   247,   248,   249,   250,    -1,   252,   253,
      -1,   255,    -1,   257,   258,   259,   260,   261,   262,    -1,
     264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,
     274,    -1,   276,    -1,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,    -1,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,    -1,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,    -1,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,    -1,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
     384,    -1,   386,   387,    -1,    -1,   390,   391,   392,   393,
     394,    -1,   396,   397,   398,   399,   400,   401,   402,    -1,
      -1,   405,   406,   407,   408,   409,    -1,    -1,   412,   413,
     414,   415,   416,   417,   418,    -1,   420,    -1,   422,   423,
     424,   425,    -1,    -1,   428,    -1,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,    -1,    -1,   453,
       3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   467,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      -1,    44,    45,    46,    47,    48,    -1,    50,    51,    -1,
      53,    54,    55,    56,    57,    -1,    -1,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    -1,
      -1,    74,    75,    76,    77,    78,    -1,    80,    81,    82,
      -1,    84,    85,    86,    87,    88,    89,    -1,    -1,    92,
      93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,
     103,   104,   105,   106,   107,   108,   109,   110,    -1,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,   124,   125,    -1,    -1,   128,   129,   130,   131,   132,
      -1,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,   145,   146,   147,   148,   149,   150,   151,    -1,
     153,    -1,   155,   156,   157,   158,    -1,   160,    -1,   162,
      -1,    -1,    -1,   166,   167,   168,   169,    -1,   171,    -1,
     173,   174,    -1,   176,   177,   178,   179,   180,    -1,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,   191,   192,
      -1,   194,    -1,   196,   197,   198,   199,   200,   201,   202,
      -1,   204,    -1,   206,    -1,    -1,   209,    -1,   211,   212,
     213,   214,   215,    -1,    -1,   218,    -1,   220,    -1,    -1,
     223,   224,   225,    -1,    -1,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,    -1,   246,   247,   248,   249,   250,    -1,   252,
     253,    -1,   255,    -1,   257,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
      -1,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,    -1,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,    -1,   350,   351,   352,
     353,   354,    -1,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,    -1,   375,   376,    -1,   378,    -1,   380,   381,   382,
     383,   384,    -1,   386,   387,    -1,    -1,   390,   391,   392,
     393,   394,    -1,   396,   397,   398,   399,   400,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,    -1,    -1,   412,
     413,   414,   415,   416,   417,   418,    -1,   420,    -1,   422,
     423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,    -1,    -1,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   467,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      -1,    44,    45,    46,    47,    48,    -1,    50,    51,    -1,
      53,    54,    55,    56,    57,    -1,    -1,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    -1,
      -1,    74,    75,    76,    77,    78,    -1,    80,    81,    82,
      -1,    84,    85,    86,    87,    88,    89,    -1,    -1,    92,
      93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,
     103,   104,   105,   106,   107,   108,   109,   110,    -1,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,   124,   125,    -1,    -1,   128,   129,   130,   131,   132,
      -1,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,   145,   146,   147,   148,   149,   150,   151,    -1,
     153,    -1,   155,   156,   157,   158,    -1,   160,    -1,   162,
      -1,    -1,    -1,   166,   167,   168,   169,    -1,   171,    -1,
     173,   174,    -1,   176,   177,   178,   179,   180,    -1,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,   191,   192,
      -1,   194,    -1,   196,   197,   198,   199,   200,   201,   202,
      -1,   204,    -1,   206,    -1,    -1,   209,    -1,   211,   212,
     213,   214,   215,    -1,    -1,   218,    -1,   220,    -1,    -1,
     223,   224,   225,    -1,    -1,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,    -1,   246,   247,   248,   249,   250,    -1,   252,
     253,    -1,   255,    -1,   257,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
      -1,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,    -1,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,    -1,   350,   351,   352,
     353,   354,    -1,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,    -1,   375,   376,    -1,   378,    -1,   380,   381,   382,
     383,   384,    -1,   386,   387,    -1,    -1,   390,   391,   392,
     393,   394,    -1,   396,   397,   398,   399,   400,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,    -1,    -1,   412,
     413,   414,   415,   416,   417,   418,    -1,   420,    -1,   422,
     423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,    -1,    -1,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   467,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      -1,    44,    45,    46,    47,    48,    -1,    50,    51,    -1,
      53,    54,    55,    56,    57,    -1,    -1,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    -1,
      -1,    74,    75,    76,    77,    78,    -1,    80,    81,    82,
      -1,    84,    85,    86,    87,    88,    89,    -1,    -1,    92,
      93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,
     103,   104,   105,   106,   107,   108,   109,   110,    -1,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,   124,   125,    -1,    -1,   128,   129,   130,   131,   132,
      -1,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,   145,   146,   147,   148,   149,   150,   151,    -1,
     153,    -1,   155,   156,   157,   158,    -1,   160,    -1,   162,
      -1,    -1,    -1,   166,   167,   168,   169,    -1,   171,    -1,
     173,   174,    -1,   176,   177,   178,   179,   180,    -1,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,   191,   192,
      -1,   194,    -1,   196,   197,   198,   199,   200,   201,   202,
      -1,   204,    -1,   206,    -1,    -1,   209,    -1,   211,   212,
     213,   214,   215,    -1,    -1,   218,    -1,   220,    -1,    -1,
     223,   224,   225,    -1,    -1,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,    -1,   246,   247,   248,   249,   250,    -1,   252,
     253,    -1,   255,    -1,   257,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
      -1,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,    -1,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,    -1,   350,   351,   352,
     353,   354,    -1,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,    -1,   375,   376,    -1,   378,    -1,   380,   381,   382,
     383,   384,    -1,   386,   387,    -1,    -1,   390,   391,   392,
     393,   394,    -1,   396,   397,   398,   399,   400,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,    -1,    -1,   412,
     413,   414,   415,   416,   417,   418,    -1,   420,    -1,   422,
     423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,    -1,    -1,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   467,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      -1,    44,    45,    46,    47,    48,    -1,    50,    51,    -1,
      53,    54,    55,    56,    57,    -1,    -1,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    -1,
      -1,    74,    75,    76,    77,    78,    -1,    80,    81,    82,
      -1,    84,    85,    86,    87,    88,    89,    -1,    -1,    92,
      93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,
     103,   104,   105,   106,   107,   108,   109,   110,    -1,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,   124,   125,    -1,    -1,   128,   129,   130,   131,   132,
      -1,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,   145,   146,   147,   148,   149,   150,   151,    -1,
     153,    -1,   155,   156,   157,   158,    -1,   160,    -1,   162,
      -1,    -1,    -1,   166,   167,   168,   169,    -1,   171,    -1,
     173,   174,    -1,   176,   177,   178,   179,   180,    -1,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,   191,   192,
      -1,   194,    -1,   196,   197,   198,   199,   200,   201,   202,
      -1,   204,    -1,   206,    -1,    -1,   209,    -1,   211,   212,
     213,   214,   215,    -1,    -1,   218,    -1,   220,    -1,    -1,
     223,   224,   225,    -1,    -1,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,    -1,   246,   247,   248,   249,   250,    -1,   252,
     253,    -1,   255,    -1,   257,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
      -1,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,    -1,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,    -1,   350,   351,   352,
     353,   354,    -1,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,    -1,   375,   376,    -1,   378,    -1,   380,   381,   382,
     383,   384,    -1,   386,   387,    -1,    -1,   390,   391,   392,
     393,   394,    -1,   396,   397,   398,   399,   400,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,    -1,    -1,   412,
     413,   414,   415,   416,   417,   418,    -1,   420,    -1,   422,
     423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,    -1,    -1,
      -1,    -1,    -1,     3,     4,     5,    -1,    -1,     8,     9,
      -1,    -1,    -1,    -1,   467,    15,    16,    17,    18,    19,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    33,    34,    35,    36,    37,    38,    39,
      40,    41,    42,    43,    44,    45,    46,    -1,    48,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      -1,    71,    72,    73,    74,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    86,    87,    88,    89,
      90,    91,    92,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   129,
     130,   131,   132,   133,   134,   135,   136,   137,   138,   139,
     140,   141,   142,   143,   144,   145,    -1,   147,   148,   149,
     150,    -1,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,    -1,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,    -1,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,    -1,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,    -1,   275,   276,   277,    -1,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,    -1,   292,   293,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,    -1,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,    -1,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,    -1,   393,    -1,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,    -1,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   448,   449,
     450,    -1,     3,    -1,   454,   455,   456,     8,   458,   459,
     460,   461,   462,   463,    15,    16,    17,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    -1,    -1,    60,
      61,    62,    63,    64,    -1,    66,    67,    68,    69,    70,
      -1,    -1,    -1,    74,    75,    76,    77,    78,    -1,    80,
      81,    82,    -1,    84,    85,    86,    87,    88,    89,    -1,
      -1,    92,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   102,   103,   104,   105,   106,   107,   108,   109,   110,
      -1,   112,    -1,   114,   115,   116,   117,   118,   119,    -1,
     121,   122,   123,   124,   125,    -1,    -1,   128,   129,   130,
     131,   132,    -1,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,   145,   146,   147,   148,   149,   150,
     151,    -1,   153,    -1,   155,   156,   157,   158,    -1,   160,
      -1,   162,    -1,    -1,    -1,   166,   167,   168,   169,    -1,
     171,    -1,   173,   174,    -1,   176,   177,   178,   179,   180,
      -1,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
     191,   192,    -1,   194,    -1,   196,   197,   198,   199,   200,
     201,   202,    -1,   204,    -1,   206,    -1,    -1,   209,    -1,
     211,   212,   213,   214,   215,    -1,    -1,   218,    -1,   220,
      -1,    -1,   223,   224,   225,    -1,    -1,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,    -1,   246,   247,   248,   249,   250,
      -1,   252,   253,    -1,   255,    -1,   257,   258,   259,   260,
     261,   262,    -1,   264,   265,    -1,    -1,   268,   269,   270,
      -1,    -1,   273,   274,    -1,   276,    -1,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,    -1,   289,   290,
     291,   292,   293,   294,   295,   296,   297,    -1,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,    -1,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,    -1,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,    -1,   344,   345,   346,   347,   348,    -1,   350,
     351,   352,   353,   354,    -1,   356,   357,   358,   359,    -1,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,    -1,   375,   376,    -1,   378,    -1,   380,
     381,   382,   383,   384,    -1,   386,   387,    -1,    -1,   390,
     391,   392,   393,   394,    -1,   396,   397,   398,   399,   400,
     401,   402,    -1,    -1,   405,   406,   407,   408,   409,    -1,
      -1,   412,   413,   414,   415,   416,   417,   418,    -1,   420,
      -1,   422,   423,   424,   425,    -1,    -1,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
      -1,    -1,    -1,   454,   455,   456,    -1,   458,   459,   460,
     461,   462,   463,     8,    -1,    -1,    11,    -1,    -1,    -1,
      15,    16,    17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     8,    -1,    -1,    11,    -1,    -1,    32,    15,    16,
      17,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,
       8,    -1,    47,    11,    -1,    32,    -1,    15,    16,    17,
      -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,
      47,    -1,    -1,    -1,    32,    -1,    71,    -1,    -1,    -1,
      -1,    -1,    40,    -1,     8,    -1,    -1,    11,    -1,    47,
      -1,    15,    16,    17,    71,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    32,    15,
      16,    17,    -1,    71,    -1,    -1,    40,    -1,    -1,    -1,
      -1,    -1,    -1,    47,    -1,    -1,    32,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,    -1,
      -1,    47,    -1,     8,    -1,    -1,    11,    71,    -1,    -1,
      15,    16,    17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    71,    -1,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,
      -1,    -1,    47,    -1,    -1,    -1,   181,    -1,    -1,    -1,
      -1,   186,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   181,    -1,    71,    -1,    -1,   186,
      -1,    -1,   207,   208,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   181,    -1,    -1,   221,    -1,   186,    -1,
     207,   208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   221,    -1,    -1,    -1,    -1,   207,
     208,    -1,    -1,    -1,    -1,    -1,   251,   181,    -1,   254,
      -1,    -1,   186,   221,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   268,   251,   181,   271,   254,    -1,    -1,
     186,    -1,    -1,   207,   208,    -1,    -1,    -1,    -1,    -1,
      -1,   268,    -1,   251,   271,    -1,   254,   221,    -1,    -1,
      -1,   207,   208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     268,    -1,    -1,   271,    -1,   221,   181,    -1,    -1,    -1,
      -1,   186,    -1,    -1,    -1,    -1,    -1,   251,    -1,    -1,
     254,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   207,   208,   268,   251,    -1,   271,   254,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   221,    -1,    -1,    -1,
     355,    -1,   268,    -1,    -1,   271,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   355,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   251,    -1,    -1,   254,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   355,    -1,    -1,
      -1,    -1,    -1,   268,    -1,    -1,   271,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   355,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   355,
      -1,    -1,    -1,    -1,    -1,    -1,   451,    -1,    -1,   454,
     455,   456,    -1,   458,   459,   460,   461,   462,   463,    -1,
      -1,    -1,    -1,   468,   451,    -1,    -1,   454,   455,   456,
      -1,   458,   459,   460,   461,   462,   463,    -1,    -1,    -1,
     355,   468,    -1,   451,    -1,    -1,   454,   455,   456,    -1,
     458,   459,   460,   461,   462,   463,    -1,    -1,    -1,    -1,
     468,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   451,    -1,    -1,
     454,   455,   456,    -1,   458,   459,   460,   461,   462,   463,
      -1,    -1,    -1,    -1,   468,   451,    -1,    -1,   454,   455,
     456,    -1,   458,   459,   460,   461,   462,   463,    -1,    -1,
      -1,    -1,   468,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   451,     3,    -1,   454,
     455,   456,    -1,   458,   459,   460,   461,   462,   463,    -1,
      -1,   466,    18,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    31,    32,    33,    34,    35,
      36,    37,    38,    39,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      86,    87,    88,    89,    90,    91,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   460,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      -1,    -1,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    -1,    -1,    74,    75,    76,    77,
      78,    -1,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,   107,
     108,   109,   110,    -1,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,   125,    -1,    -1,
     128,   129,   130,   131,   132,    -1,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,   145,   146,   147,
     148,   149,   150,   151,    -1,   153,    -1,   155,   156,   157,
     158,    -1,   160,    -1,   162,    -1,    -1,    -1,   166,   167,
     168,   169,    -1,   171,    -1,   173,   174,    -1,   176,   177,
     178,   179,   180,    -1,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,   191,   192,    -1,   194,    -1,   196,   197,
     198,   199,   200,   201,   202,    -1,   204,    -1,   206,    -1,
      -1,   209,    -1,   211,   212,   213,   214,   215,    -1,    -1,
     218,    -1,   220,    -1,    -1,   223,   224,   225,    -1,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,    -1,   246,   247,
     248,   249,   250,    -1,   252,   253,    -1,   255,    -1,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,    -1,   276,    -1,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,    -1,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,    -1,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,    -1,
     378,    -1,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,   392,   393,   394,    -1,   396,   397,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,    -1,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,   420,    -1,   422,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,     3,     4,     5,    -1,    -1,    -1,     9,
      -1,    -1,   460,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    -1,    -1,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    -1,    72,    -1,    74,    75,    76,    77,    78,    79,
      80,    81,    82,    -1,    84,    85,    86,    87,    88,    89,
      -1,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,    -1,   114,   115,   116,   117,   118,   119,
      -1,   121,   122,   123,   124,   125,    -1,    -1,   128,   129,
     130,   131,   132,    -1,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,    -1,   155,   156,   157,   158,    -1,
     160,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
      -1,   171,    -1,   173,   174,    -1,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,   191,   192,    -1,   194,   195,   196,   197,   198,   199,
     200,   201,   202,    -1,   204,    -1,   206,   207,   208,   209,
     210,   211,   212,   213,   214,   215,    -1,    -1,   218,   219,
     220,   221,    -1,   223,   224,   225,    -1,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,    -1,   252,   253,   254,   255,    -1,   257,   258,   259,
     260,   261,   262,    -1,   264,   265,   266,    -1,   268,   269,
     270,    -1,    -1,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,    -1,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,    -1,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,    -1,   378,   379,
     380,   381,   382,   383,   384,    -1,   386,   387,    -1,    -1,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,    -1,    -1,   405,   406,   407,   408,   409,
      -1,    -1,   412,   413,   414,   415,   416,   417,   418,    -1,
     420,   421,   422,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,     3,     4,     5,    -1,    -1,    -1,     9,   458,   459,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      -1,    53,    54,    55,    56,    57,    -1,    -1,    60,    61,
      62,    63,    64,    -1,    66,    67,    68,    69,    70,    -1,
      72,    -1,    74,    75,    76,    77,    78,    79,    80,    81,
      82,    -1,    84,    85,    86,    87,    88,    89,    -1,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,    -1,   114,   115,   116,   117,   118,   119,    -1,   121,
     122,   123,   124,   125,    -1,    -1,   128,   129,   130,   131,
     132,    -1,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,    -1,   155,   156,   157,   158,    -1,   160,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,    -1,   171,
      -1,   173,   174,    -1,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,   191,
     192,    -1,   194,   195,   196,   197,   198,   199,   200,   201,
     202,    -1,   204,    -1,   206,   207,   208,   209,   210,   211,
     212,   213,   214,   215,    -1,    -1,   218,   219,   220,   221,
      -1,   223,   224,   225,    -1,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,    -1,
     252,   253,   254,   255,    -1,   257,   258,   259,   260,   261,
     262,    -1,   264,   265,   266,    -1,   268,   269,   270,    -1,
      -1,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,    -1,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,    -1,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,    -1,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,    -1,   375,   376,    -1,   378,   379,   380,   381,
     382,   383,   384,    -1,   386,   387,    -1,    -1,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,    -1,    -1,   405,   406,   407,   408,   409,    -1,    -1,
     412,   413,   414,   415,   416,   417,   418,    -1,   420,   421,
     422,   423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,     3,
       4,     5,    -1,    -1,    -1,     9,   458,   459,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    -1,    53,
      54,    55,    56,    57,    -1,    -1,    60,    61,    62,    63,
      64,    -1,    66,    67,    68,    69,    70,    -1,    72,    -1,
      74,    75,    76,    77,    78,    79,    80,    81,    82,    -1,
      84,    85,    86,    87,    88,    89,    -1,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,   102,   103,
     104,   105,   106,   107,   108,   109,   110,    -1,   112,    -1,
     114,   115,   116,   117,   118,   119,    -1,   121,   122,   123,
     124,   125,    -1,    -1,   128,   129,   130,   131,   132,    -1,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
      -1,   155,   156,   157,   158,    -1,   160,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,   171,    -1,   173,
     174,    -1,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,   191,   192,    -1,
     194,   195,   196,   197,   198,   199,   200,   201,   202,    -1,
     204,    -1,   206,   207,   208,   209,   210,   211,   212,   213,
     214,   215,    -1,    -1,   218,   219,   220,   221,    -1,   223,
     224,   225,    -1,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,    -1,   252,   253,
     254,   255,    -1,   257,   258,   259,   260,   261,   262,    -1,
     264,   265,   266,    -1,   268,   269,   270,    -1,    -1,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,    -1,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,    -1,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,    -1,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
      -1,   375,   376,    -1,   378,   379,   380,   381,   382,   383,
     384,    -1,   386,   387,    -1,    -1,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,    -1,
      -1,   405,   406,   407,   408,   409,    -1,    -1,   412,   413,
     414,   415,   416,   417,   418,    -1,   420,   421,   422,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,    -1,    -1,     8,
      -1,    -1,    11,    -1,   458,   459,    15,    16,    17,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,
      11,    -1,    -1,    32,    15,    16,    17,    36,    -1,    -1,
      -1,    40,    -1,    -1,    -1,    -1,     8,    -1,    47,    11,
      -1,    32,    -1,    15,    16,    17,    -1,    -1,    -1,    40,
      -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,    -1,    -1,
      32,    -1,    71,    -1,    -1,    -1,    -1,    -1,    40,    -1,
       8,    -1,    -1,    11,    -1,    47,    -1,    15,    16,    17,
      71,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    32,    -1,    -1,    35,    -1,    71,
      -1,    -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,    47,
      -1,   120,     8,    -1,    -1,    11,    -1,    -1,    -1,    15,
      16,    17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    71,    -1,    -1,    32,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,    -1,
      -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   159,    -1,
      -1,    -1,   181,   164,    -1,    71,    -1,   186,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   158,    -1,    -1,    -1,
     181,    -1,    -1,    -1,    -1,   186,    -1,    -1,   207,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   181,
      -1,    -1,   221,    -1,   186,    -1,   207,   208,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     221,    -1,    -1,    -1,    -1,   207,   208,    -1,    -1,    -1,
      -1,    -1,   251,   181,    -1,   254,    -1,    -1,   186,   221,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,
     251,    -1,   271,   254,    -1,    -1,    -1,    -1,    -1,   207,
     208,    -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,   251,
     271,    -1,   254,   221,    -1,   181,    -1,    -1,    -1,    -1,
     186,    -1,    -1,    -1,    -1,    -1,   268,    -1,    -1,   271,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   207,   208,   251,    -1,    -1,   254,    -1,    -1,    -1,
      -1,   293,    -1,    -1,    -1,   221,    -1,    -1,    -1,    -1,
     268,    -1,    -1,   271,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     8,    -1,    -1,    11,    -1,   355,    -1,    15,    16,
      17,    -1,    -1,    -1,    -1,   251,    -1,    -1,   254,    -1,
      -1,    -1,    -1,    -1,   355,    32,    -1,    -1,    35,    -1,
      -1,    -1,   268,    40,    -1,   271,    -1,    -1,    -1,    -1,
      47,    -1,    -1,   355,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   288,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   411,    -1,    71,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   355,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   451,    -1,    -1,   454,   455,   456,    -1,   458,
     459,   460,   461,   462,   463,    -1,    -1,    -1,    -1,   355,
     451,    -1,    -1,   454,   455,   456,    -1,   458,   459,   460,
     461,   462,   463,    -1,    -1,    -1,    -1,    -1,    -1,   451,
      -1,    -1,   454,   455,   456,    -1,   458,   459,   460,   461,
     462,   463,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   451,   181,    -1,   454,   455,   456,   186,
     458,   459,   460,   461,   462,   463,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     207,   208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   221,   451,    -1,    -1,   454,   455,
     456,    -1,   458,   459,   460,   461,   462,   463,     8,    -1,
      -1,    11,    -1,    -1,    -1,    15,    16,    17,    -1,    -1,
      -1,    -1,    -1,    -1,   251,    -1,     8,   254,    -1,    11,
      -1,    -1,    32,    15,    16,    17,    -1,    -1,    -1,    -1,
      40,   268,    -1,    -1,   271,     8,    -1,    47,    11,    22,
      32,    -1,    15,    16,    17,    28,    -1,    -1,    40,    -1,
      -1,    -1,    35,    -1,    -1,    47,    -1,    -1,    -1,    32,
      -1,    71,    -1,    -1,    -1,    -1,    -1,    40,    -1,     8,
      -1,    54,    11,    -1,    47,    -1,    15,    16,    17,    71,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    32,    -1,    -1,    -1,    -1,    71,    -1,
      -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   355,    -1,
     103,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   131,    -1,
      -1,    -1,    -1,    -1,   164,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   181,    -1,    -1,    -1,    -1,   186,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   181,
      -1,    -1,    -1,    -1,   186,    -1,    -1,   207,   208,    -1,
      -1,    -1,    -1,    -1,    -1,   188,    -1,    -1,   181,    -1,
      -1,   221,    -1,   186,   451,   207,   208,   454,   455,   456,
      -1,   458,   459,   460,   461,   462,   463,    -1,    -1,   221,
      -1,    -1,    -1,    -1,   207,   208,    -1,    -1,    -1,    -1,
      -1,   251,   181,    -1,   254,    -1,    -1,   186,   221,    -1,
      -1,    -1,   235,    -1,    -1,   238,    -1,    -1,   268,   251,
      -1,   271,   254,    -1,    -1,    -1,   249,    -1,   207,   208,
      -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,   251,   271,
      -1,   254,   221,    -1,    -1,    -1,    -1,   270,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   268,    -1,   280,   271,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   251,    -1,    -1,   254,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,
      -1,    -1,    -1,    -1,    -1,    -1,   319,    -1,    -1,    -1,
     323,   324,    -1,    -1,    -1,   355,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   344,    -1,   355,    -1,    -1,    -1,   350,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   364,   355,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   385,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   355,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   414,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   451,    -1,    -1,   454,   455,   456,    -1,   458,   459,
     460,   461,   462,   463,    -1,    -1,    -1,    -1,    -1,   451,
      -1,    -1,   454,   455,   456,    -1,   458,   459,   460,   461,
     462,   463,    -1,    -1,    -1,    -1,    -1,    -1,   451,    -1,
      -1,   454,   455,   456,    -1,   458,   459,   460,   461,   462,
     463,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     3,   451,     5,    -1,   454,   455,   456,    -1,   458,
     459,   460,   461,   462,   463,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    33,    34,    35,    36,    37,    38,    39,    40,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,    74,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    86,    87,    88,    89,    90,    91,
      92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   139,   140,   141,
     142,   143,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    33,
      34,    35,    36,    37,    38,    39,    40,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      74,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    86,    87,    88,    89,    90,    91,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   129,   130,   131,   132,   133,
     134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    31,    32,    33,    34,    35,
      36,    37,    38,    39,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      86,    87,    88,    89,    90,    91,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    72,    -1,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,    -1,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,   125,    -1,    -1,
     128,   129,   130,   131,   132,    -1,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,   145,   146,   147,
     148,   149,   150,   151,    -1,   153,    -1,   155,   156,   157,
     158,    -1,   160,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,    -1,   171,    -1,   173,   174,    -1,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,   191,   192,    -1,   194,   195,   196,   197,
     198,   199,   200,   201,   202,    -1,   204,    -1,   206,   207,
     208,   209,   210,   211,   212,   213,   214,   215,    -1,    -1,
     218,   219,   220,   221,    -1,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,    -1,   252,   253,   254,   255,    -1,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,    -1,
     378,   379,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,   392,   393,   394,    -1,   396,   397,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,   410,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,   420,   421,   422,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,     3,    -1,     5,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    -1,    -1,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    -1,    72,    -1,    74,    75,    76,    77,    78,    79,
      80,    81,    82,    -1,    84,    85,    86,    87,    88,    89,
      -1,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,   102,   103,   104,   105,   106,   107,   108,   109,
     110,    -1,   112,    -1,   114,   115,   116,   117,   118,   119,
      -1,   121,   122,   123,   124,   125,    -1,    -1,   128,   129,
     130,   131,   132,    -1,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,    -1,   155,   156,   157,   158,    -1,
     160,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
      -1,   171,    -1,   173,   174,    -1,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,   191,   192,    -1,   194,   195,   196,   197,   198,   199,
     200,   201,   202,    -1,   204,    -1,   206,   207,   208,   209,
     210,   211,   212,   213,   214,   215,    -1,    -1,   218,   219,
     220,   221,    -1,   223,   224,   225,    -1,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,    -1,   252,   253,   254,   255,    -1,   257,   258,   259,
     260,   261,   262,    -1,   264,   265,   266,    -1,   268,   269,
     270,    -1,    -1,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,    -1,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,    -1,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,    -1,   378,   379,
     380,   381,   382,   383,   384,    -1,   386,   387,    -1,    -1,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,    -1,    -1,   405,   406,   407,   408,   409,
      -1,    -1,   412,   413,   414,   415,   416,   417,   418,    -1,
     420,   421,   422,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    30,    31,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      -1,    53,    54,    55,    56,    57,    -1,    -1,    60,    61,
      62,    63,    64,    -1,    66,    67,    68,    69,    70,    -1,
      72,    -1,    74,    75,    76,    77,    78,    79,    80,    81,
      82,    -1,    84,    85,    86,    87,    88,    89,    -1,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
     102,   103,   104,   105,   106,   107,   108,   109,   110,    -1,
     112,    -1,   114,   115,   116,   117,   118,   119,    -1,   121,
     122,   123,   124,   125,    -1,    -1,   128,   129,   130,   131,
     132,    -1,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,   145,   146,   147,   148,   149,   150,   151,
      -1,   153,    -1,   155,   156,   157,   158,    -1,   160,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,    -1,   171,
      -1,   173,   174,    -1,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,   191,
     192,    -1,   194,   195,   196,   197,   198,   199,   200,   201,
     202,    -1,   204,    -1,   206,   207,   208,   209,   210,   211,
     212,   213,   214,   215,    -1,    -1,   218,   219,   220,   221,
      -1,   223,   224,   225,    -1,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,    -1,
     252,   253,   254,   255,    -1,   257,   258,   259,   260,   261,
     262,    -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,
      -1,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,    -1,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,    -1,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,    -1,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,    -1,   375,   376,    -1,   378,   379,   380,   381,
     382,   383,   384,    -1,   386,   387,    -1,    -1,   390,   391,
     392,   393,   394,    -1,   396,   397,   398,   399,   400,   401,
     402,    -1,    -1,   405,   406,   407,   408,   409,    -1,    -1,
     412,   413,   414,   415,   416,   417,   418,    -1,   420,   421,
     422,   423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    -1,    53,
      54,    55,    56,    57,    -1,    -1,    60,    61,    62,    63,
      64,    -1,    66,    67,    68,    69,    70,    -1,    72,    -1,
      74,    75,    76,    77,    78,    79,    80,    81,    82,    -1,
      84,    85,    86,    87,    88,    89,    -1,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,   102,   103,
     104,   105,   106,   107,   108,   109,   110,    -1,   112,    -1,
     114,   115,   116,   117,   118,   119,    -1,   121,   122,   123,
     124,   125,    -1,    -1,   128,   129,   130,   131,   132,    -1,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,   145,   146,   147,   148,   149,   150,   151,    -1,   153,
      -1,   155,   156,   157,   158,    -1,   160,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,   171,    -1,   173,
     174,    -1,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,   191,   192,    -1,
     194,   195,   196,   197,   198,   199,   200,   201,   202,    -1,
     204,    -1,   206,   207,   208,   209,   210,   211,   212,   213,
     214,   215,    -1,    -1,   218,   219,   220,   221,    -1,   223,
     224,   225,    -1,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,    -1,   252,   253,
     254,   255,    -1,   257,   258,   259,   260,   261,   262,    -1,
     264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,    -1,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,    -1,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,    -1,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
      -1,   375,   376,    -1,   378,   379,   380,   381,   382,   383,
     384,    -1,   386,   387,    -1,    -1,   390,   391,   392,   393,
     394,    -1,   396,   397,   398,   399,   400,   401,   402,    -1,
      -1,   405,   406,   407,   408,   409,    -1,    -1,   412,   413,
     414,   415,   416,   417,   418,    -1,   420,   421,   422,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    -1,    -1,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    -1,    -1,    73,    74,    75,
      76,    77,    78,    -1,    80,    81,    82,    83,    84,    85,
      86,    87,    88,    89,    -1,    -1,    92,    93,    94,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,   105,
     106,   107,   108,   109,   110,    -1,   112,    -1,   114,   115,
     116,   117,   118,   119,    -1,   121,   122,   123,   124,   125,
      -1,    -1,   128,   129,   130,   131,   132,    -1,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,   145,
     146,   147,   148,   149,   150,   151,    -1,   153,    -1,   155,
     156,   157,   158,    -1,   160,   161,   162,    -1,    -1,    -1,
     166,   167,   168,   169,    -1,   171,    -1,   173,   174,    -1,
     176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,   191,   192,    -1,   194,    -1,
     196,   197,   198,   199,   200,   201,   202,    -1,   204,    -1,
     206,    -1,    -1,   209,    -1,   211,   212,   213,   214,   215,
      -1,    -1,   218,    -1,   220,    -1,    -1,   223,   224,   225,
      -1,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,    -1,
     246,   247,   248,   249,   250,    -1,   252,   253,    -1,   255,
      -1,   257,   258,   259,   260,   261,   262,    -1,   264,   265,
      -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,    -1,
     276,    -1,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,    -1,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,    -1,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,    -1,   375,
     376,    -1,   378,    -1,   380,   381,   382,   383,   384,    -1,
     386,   387,    -1,    -1,   390,   391,   392,   393,   394,    -1,
     396,   397,   398,   399,   400,   401,   402,    -1,   404,   405,
     406,   407,   408,   409,    -1,    -1,   412,   413,   414,   415,
     416,   417,   418,    -1,   420,    -1,   422,   423,   424,   425,
      -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      -1,    -1,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    -1,    -1,    -1,    74,    75,    76,    77,
      78,    -1,    80,    81,    82,    83,    84,    85,    86,    87,
      88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,   107,
     108,   109,   110,    -1,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,   125,    -1,    -1,
     128,   129,   130,   131,   132,    -1,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,   145,   146,   147,
     148,   149,   150,   151,    -1,   153,    -1,   155,   156,   157,
     158,    -1,   160,   161,   162,    -1,    -1,    -1,   166,   167,
     168,   169,    -1,   171,    -1,   173,   174,    -1,   176,   177,
     178,   179,   180,    -1,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,   191,   192,    -1,   194,    -1,   196,   197,
     198,   199,   200,   201,   202,    -1,   204,    -1,   206,    -1,
      -1,   209,    -1,   211,   212,   213,   214,   215,    -1,    -1,
     218,    -1,   220,   221,    -1,   223,   224,   225,    -1,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,    -1,   246,   247,
     248,   249,   250,    -1,   252,   253,    -1,   255,    -1,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,    -1,   276,    -1,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,    -1,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,    -1,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,    -1,
     378,    -1,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,   392,   393,   394,    -1,   396,   397,
     398,   399,   400,   401,   402,    -1,   404,   405,   406,   407,
     408,   409,    -1,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,   420,    -1,   422,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      30,    31,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    -1,    -1,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    -1,    -1,    -1,    74,    75,    76,    77,    78,    -1,
      80,    81,    82,    -1,    84,    85,    86,    87,    88,    89,
      -1,    -1,    92,    93,    94,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   102,   103,   104,   105,   106,   107,   108,   109,
     110,    -1,   112,    -1,   114,   115,   116,   117,   118,   119,
      -1,   121,   122,   123,   124,   125,    -1,    -1,   128,   129,
     130,   131,   132,    -1,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,   145,   146,   147,   148,   149,
     150,   151,    -1,   153,    -1,   155,   156,   157,   158,    -1,
     160,    -1,   162,    -1,    -1,    -1,   166,   167,   168,   169,
      -1,   171,    -1,   173,   174,    -1,   176,   177,   178,   179,
     180,    -1,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,   191,   192,    -1,   194,    -1,   196,   197,   198,   199,
     200,   201,   202,    -1,   204,    -1,   206,    -1,    -1,   209,
      -1,   211,   212,   213,   214,   215,    -1,    -1,   218,    -1,
     220,    -1,    -1,   223,   224,   225,    -1,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,    -1,   246,   247,   248,   249,
     250,    -1,   252,   253,    -1,   255,    -1,   257,   258,   259,
     260,   261,   262,    -1,   264,   265,    -1,    -1,   268,   269,
     270,    -1,    -1,   273,   274,    -1,   276,    -1,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,    -1,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,    -1,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,    -1,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,    -1,   378,    -1,
     380,   381,   382,   383,   384,    -1,   386,   387,    -1,    -1,
     390,   391,   392,   393,   394,    -1,   396,   397,   398,   399,
     400,   401,   402,    -1,    -1,   405,   406,   407,   408,   409,
      -1,    -1,   412,   413,   414,   415,   416,   417,   418,    -1,
     420,    -1,   422,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    -1,    44,    45,    46,    47,    48,    -1,    50,    51,
      -1,    53,    54,    55,    56,    57,    -1,    -1,    60,    61,
      62,    63,    64,    -1,    66,    67,    68,    69,    70,    -1,
      -1,    -1,    74,    75,    76,    77,    78,    -1,    80,    81,
      82,    -1,    84,    85,    86,    87,    88,    89,    -1,    -1,
      92,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     102,   103,   104,   105,   106,   107,   108,   109,   110,    -1,
     112,    -1,   114,   115,   116,   117,   118,   119,    -1,   121,
     122,   123,   124,   125,    -1,    -1,   128,   129,   130,   131,
     132,    -1,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,   145,   146,   147,   148,   149,   150,   151,
      -1,   153,    -1,   155,   156,   157,   158,    -1,   160,    -1,
     162,    -1,    -1,    -1,   166,   167,   168,   169,    -1,   171,
      -1,   173,   174,    -1,   176,   177,   178,   179,   180,    -1,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,   191,
     192,    -1,   194,    -1,   196,   197,   198,   199,   200,   201,
     202,    -1,   204,    -1,   206,    -1,    -1,   209,    -1,   211,
     212,   213,   214,   215,    -1,    -1,   218,    -1,   220,    -1,
      -1,   223,   224,   225,    -1,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,    -1,   246,   247,   248,   249,   250,    -1,
     252,   253,    -1,   255,    -1,   257,   258,   259,   260,   261,
     262,    -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,
      -1,   273,   274,    -1,   276,    -1,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,    -1,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,    -1,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,    -1,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,    -1,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,    -1,   375,   376,    -1,   378,    -1,   380,   381,
     382,   383,   384,    -1,   386,   387,    -1,    -1,   390,   391,
     392,   393,   394,    -1,   396,   397,   398,   399,   400,   401,
     402,    -1,    -1,   405,   406,   407,   408,   409,    -1,    -1,
     412,   413,   414,   415,   416,   417,   418,    -1,   420,    -1,
     422,   423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,
      44,    45,    46,    47,    48,    -1,    50,    51,    -1,    53,
      54,    55,    56,    57,    -1,    -1,    60,    61,    62,    63,
      64,    -1,    66,    67,    68,    69,    70,    -1,    -1,    -1,
      74,    75,    76,    77,    78,    -1,    80,    81,    82,    -1,
      84,    85,    86,    87,    88,    89,    -1,    -1,    92,    93,
      94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,   103,
     104,   105,   106,   107,   108,   109,   110,    -1,   112,    -1,
     114,   115,   116,   117,   118,   119,    -1,   121,   122,   123,
     124,   125,    -1,    -1,   128,   129,   130,   131,   132,    -1,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,   145,   146,   147,   148,   149,   150,   151,    -1,   153,
      -1,   155,   156,   157,   158,    -1,   160,    -1,   162,    -1,
      -1,    -1,   166,   167,   168,   169,    -1,   171,    -1,   173,
     174,    -1,   176,   177,   178,   179,   180,    -1,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,   191,   192,    -1,
     194,    -1,   196,   197,   198,   199,   200,   201,   202,    -1,
     204,    -1,   206,    -1,    -1,   209,    -1,   211,   212,   213,
     214,   215,    -1,    -1,   218,    -1,   220,    -1,    -1,   223,
     224,   225,    -1,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,    -1,   246,   247,   248,   249,   250,    -1,   252,   253,
      -1,   255,    -1,   257,   258,   259,   260,   261,   262,    -1,
     264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,
     274,    -1,   276,    -1,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,    -1,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,    -1,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,    -1,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,    -1,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
      -1,   375,   376,    -1,   378,    -1,   380,   381,   382,   383,
     384,    -1,   386,   387,    -1,    -1,   390,   391,   392,   393,
     394,    -1,   396,   397,   398,   399,   400,   401,   402,    -1,
      -1,   405,   406,   407,   408,   409,    -1,    -1,   412,   413,
     414,   415,   416,   417,   418,    -1,   420,    -1,   422,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    -1,    -1,    60,    61,    62,    63,    64,    -1,
      66,    67,    68,    69,    70,    -1,    -1,    -1,    74,    75,
      76,    77,    78,    -1,    80,    81,    82,    -1,    84,    85,
      86,    87,    88,    89,    -1,    -1,    92,    93,    94,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,   105,
     106,   107,   108,   109,   110,    -1,   112,    -1,   114,   115,
     116,   117,   118,   119,    -1,   121,   122,   123,   124,   125,
      -1,    -1,   128,   129,   130,   131,   132,    -1,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,   145,
     146,   147,   148,   149,   150,   151,    -1,   153,    -1,   155,
     156,   157,   158,    -1,   160,    -1,   162,    -1,    -1,    -1,
     166,   167,   168,   169,    -1,   171,    -1,   173,   174,    -1,
     176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,   191,   192,    -1,   194,    -1,
     196,   197,   198,   199,   200,   201,   202,    -1,   204,    -1,
     206,    -1,    -1,   209,    -1,   211,   212,   213,   214,   215,
      -1,    -1,   218,    -1,   220,    -1,    -1,   223,   224,   225,
      -1,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,    -1,
     246,   247,   248,   249,   250,    -1,   252,   253,    -1,   255,
      -1,   257,   258,   259,   260,   261,   262,    -1,   264,   265,
      -1,   267,   268,   269,   270,    -1,    -1,   273,   274,    -1,
     276,    -1,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,    -1,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,    -1,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,    -1,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,    -1,   375,
     376,    -1,   378,    -1,   380,   381,   382,   383,   384,    -1,
     386,   387,    -1,    -1,   390,   391,   392,   393,   394,    -1,
     396,   397,   398,   399,   400,   401,   402,    -1,    -1,   405,
     406,   407,   408,   409,    -1,    -1,   412,   413,   414,   415,
     416,   417,   418,    -1,   420,    -1,   422,   423,   424,   425,
      -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      -1,    -1,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    -1,    -1,    74,    75,    76,    77,
      78,    -1,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,   107,
     108,   109,   110,    -1,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,   125,    -1,    -1,
     128,   129,   130,   131,   132,    -1,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,   145,   146,   147,
     148,   149,   150,   151,    -1,   153,    -1,   155,   156,   157,
     158,    -1,   160,    -1,   162,    -1,    -1,    -1,   166,   167,
     168,   169,    -1,   171,    -1,   173,   174,    -1,   176,   177,
     178,   179,   180,    -1,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,   191,   192,    -1,   194,    -1,   196,   197,
     198,   199,   200,   201,   202,    -1,   204,    -1,   206,    -1,
      -1,   209,    -1,   211,   212,   213,   214,   215,    -1,    -1,
     218,    -1,   220,    -1,    -1,   223,   224,   225,    -1,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,    -1,   246,   247,
     248,   249,   250,    -1,   252,   253,    -1,   255,    -1,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,    -1,   276,    -1,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,    -1,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,    -1,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,    -1,
     378,    -1,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,   392,   393,   394,    -1,   396,   397,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,    -1,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,   420,    -1,   422,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    -1,    -1,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    -1,    -1,    -1,    74,    75,    76,    77,    78,    -1,
      80,    81,    82,    -1,    84,    85,    86,    87,    88,    89,
      -1,    -1,    92,    93,    94,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   102,   103,   104,   105,   106,   107,   108,   109,
     110,    -1,   112,    -1,   114,   115,   116,   117,   118,   119,
      -1,   121,   122,   123,   124,   125,    -1,    -1,   128,   129,
     130,   131,   132,    -1,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,   145,   146,   147,   148,   149,
     150,   151,    -1,   153,    -1,   155,   156,   157,   158,    -1,
     160,    -1,   162,    -1,    -1,    -1,   166,   167,   168,   169,
      -1,   171,    -1,   173,   174,    -1,   176,   177,   178,   179,
     180,    -1,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,   191,   192,    -1,   194,    -1,   196,   197,   198,   199,
     200,   201,   202,    -1,   204,    -1,   206,    -1,    -1,   209,
      -1,   211,   212,   213,   214,   215,    -1,    -1,   218,    -1,
     220,    -1,    -1,   223,   224,   225,    -1,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,    -1,   246,   247,   248,   249,
     250,    -1,   252,   253,    -1,   255,    -1,   257,   258,   259,
     260,   261,   262,    -1,   264,   265,    -1,   267,   268,   269,
     270,    -1,    -1,   273,   274,    -1,   276,    -1,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,    -1,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,    -1,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,    -1,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,    -1,   378,    -1,
     380,   381,   382,   383,   384,    -1,   386,   387,    -1,    -1,
     390,   391,   392,   393,   394,    -1,   396,   397,   398,   399,
     400,   401,   402,    -1,    -1,   405,   406,   407,   408,   409,
      -1,    -1,   412,   413,   414,   415,   416,   417,   418,    -1,
     420,    -1,   422,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    -1,    44,    45,    46,    47,    48,    -1,    50,    51,
      -1,    53,    54,    55,    56,    57,    -1,    -1,    60,    61,
      62,    63,    64,    -1,    66,    67,    68,    69,    70,    -1,
      -1,    -1,    74,    75,    76,    77,    78,    -1,    80,    81,
      82,    -1,    84,    85,    86,    87,    88,    89,    -1,    -1,
      92,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     102,   103,   104,   105,   106,   107,   108,   109,   110,    -1,
     112,    -1,   114,   115,   116,   117,   118,   119,    -1,   121,
     122,   123,   124,   125,    -1,    -1,   128,   129,   130,   131,
     132,    -1,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,   145,   146,   147,   148,   149,   150,   151,
      -1,   153,    -1,   155,   156,   157,   158,    -1,   160,    -1,
     162,    -1,    -1,    -1,   166,   167,   168,   169,    -1,   171,
      -1,   173,   174,    -1,   176,   177,   178,   179,   180,    -1,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,   191,
     192,    -1,   194,    -1,   196,   197,   198,   199,   200,   201,
     202,    -1,   204,    -1,   206,    -1,    -1,   209,    -1,   211,
     212,   213,   214,   215,    -1,    -1,   218,    -1,   220,    -1,
      -1,   223,   224,   225,    -1,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,    -1,   246,   247,   248,   249,   250,    -1,
     252,   253,    -1,   255,    -1,   257,   258,   259,   260,   261,
     262,    -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,
      -1,   273,   274,    -1,   276,    -1,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,    -1,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,    -1,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,    -1,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,    -1,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,    -1,   375,   376,    -1,   378,    -1,   380,   381,
     382,   383,   384,    -1,   386,   387,    -1,    -1,   390,   391,
     392,   393,   394,    -1,   396,   397,   398,   399,   400,   401,
     402,    -1,    -1,   405,   406,   407,   408,   409,    -1,    -1,
     412,   413,   414,   415,   416,   417,   418,    -1,   420,    -1,
     422,   423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,
      44,    45,    46,    47,    48,    -1,    50,    51,    -1,    53,
      54,    55,    56,    57,    -1,    -1,    60,    61,    62,    63,
      64,    -1,    66,    67,    68,    69,    70,    -1,    -1,    -1,
      74,    75,    76,    77,    78,    -1,    80,    81,    82,    -1,
      84,    85,    86,    87,    88,    89,    -1,    -1,    92,    93,
      94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,   103,
     104,   105,   106,   107,   108,   109,   110,    -1,   112,    -1,
     114,   115,   116,   117,   118,   119,    -1,   121,   122,   123,
     124,   125,    -1,    -1,   128,   129,   130,   131,   132,    -1,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,   145,   146,   147,   148,   149,   150,   151,    -1,   153,
      -1,   155,   156,   157,   158,    -1,   160,    -1,   162,    -1,
      -1,    -1,   166,   167,   168,   169,    -1,   171,    -1,   173,
     174,    -1,   176,   177,   178,   179,   180,    -1,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,   191,   192,    -1,
     194,    -1,   196,   197,   198,   199,   200,   201,   202,    -1,
     204,    -1,   206,    -1,    -1,   209,    -1,   211,   212,   213,
     214,   215,    -1,    -1,   218,    -1,   220,    -1,    -1,   223,
     224,   225,    -1,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,    -1,   246,   247,   248,   249,   250,    -1,   252,   253,
      -1,   255,    -1,   257,   258,   259,   260,   261,   262,    -1,
     264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,
     274,    -1,   276,    -1,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,    -1,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,    -1,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,    -1,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,    -1,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
     384,    -1,   386,   387,    -1,    -1,   390,   391,   392,   393,
     394,    -1,   396,   397,   398,   399,   400,   401,   402,    -1,
      -1,   405,   406,   407,   408,   409,    -1,    -1,   412,   413,
     414,   415,   416,   417,   418,    -1,   420,    -1,   422,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    35,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    -1,    -1,    60,    61,    62,    63,    64,    -1,
      66,    67,    68,    69,    70,    -1,    -1,    -1,    74,    75,
      76,    77,    78,    -1,    80,    81,    82,    -1,    84,    85,
      86,    87,    88,    89,    -1,    -1,    92,    93,    94,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,   105,
     106,   107,   108,   109,   110,    -1,   112,    -1,   114,   115,
     116,   117,   118,   119,    -1,   121,   122,   123,   124,   125,
      -1,    -1,   128,   129,   130,   131,   132,    -1,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,   145,
     146,   147,   148,   149,   150,   151,    -1,   153,    -1,   155,
     156,   157,   158,    -1,   160,    -1,   162,    -1,    -1,    -1,
     166,   167,   168,   169,    -1,   171,    -1,   173,   174,    -1,
     176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,   191,   192,    -1,   194,    -1,
     196,   197,   198,   199,   200,   201,   202,    -1,   204,    -1,
     206,    -1,    -1,   209,    -1,   211,   212,   213,   214,   215,
      -1,    -1,   218,    -1,   220,    -1,    -1,   223,   224,   225,
      -1,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,    -1,
     246,   247,   248,   249,   250,    -1,   252,   253,    -1,   255,
      -1,   257,   258,   259,   260,   261,   262,    -1,   264,   265,
      -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,    -1,
     276,    -1,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,    -1,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,    -1,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,    -1,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,    -1,   375,
     376,    -1,   378,    -1,   380,   381,   382,   383,   384,    -1,
     386,   387,    -1,    -1,   390,   391,   392,   393,   394,    -1,
     396,   397,   398,   399,   400,   401,   402,    -1,    -1,   405,
     406,   407,   408,   409,    -1,    -1,   412,   413,   414,   415,
     416,   417,   418,    -1,   420,    -1,   422,   423,   424,   425,
      -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    35,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      -1,    -1,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    -1,    -1,    74,    75,    76,    77,
      78,    -1,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,   107,
     108,   109,   110,    -1,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,   125,    -1,    -1,
     128,   129,   130,   131,   132,    -1,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,   145,   146,   147,
     148,   149,   150,   151,    -1,   153,    -1,   155,   156,   157,
     158,    -1,   160,    -1,   162,    -1,    -1,    -1,   166,   167,
     168,   169,    -1,   171,    -1,   173,   174,    -1,   176,   177,
     178,   179,   180,    -1,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,   191,   192,    -1,   194,    -1,   196,   197,
     198,   199,   200,   201,   202,    -1,   204,    -1,   206,    -1,
      -1,   209,    -1,   211,   212,   213,   214,   215,    -1,    -1,
     218,    -1,   220,    -1,    -1,   223,   224,   225,    -1,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,    -1,   246,   247,
     248,   249,   250,    -1,   252,   253,    -1,   255,    -1,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,    -1,   276,    -1,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,    -1,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,    -1,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,    -1,
     378,    -1,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,   392,   393,   394,    -1,   396,   397,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,    -1,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,   420,    -1,   422,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,     3,    -1,     5,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    -1,    -1,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    -1,    -1,    -1,    74,    75,    76,    77,    78,    -1,
      80,    81,    82,    -1,    84,    85,    86,    87,    88,    89,
      -1,    -1,    92,    93,    94,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   102,   103,   104,   105,   106,   107,   108,   109,
     110,    -1,   112,    -1,   114,   115,   116,   117,   118,   119,
      -1,   121,   122,   123,   124,   125,    -1,    -1,   128,   129,
     130,   131,   132,    -1,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,   145,   146,   147,   148,   149,
     150,   151,    -1,   153,    -1,   155,   156,   157,   158,    -1,
     160,    -1,   162,    -1,    -1,    -1,   166,   167,   168,   169,
      -1,   171,    -1,   173,   174,    -1,   176,   177,   178,   179,
     180,    -1,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,   191,   192,    -1,   194,    -1,   196,   197,   198,   199,
     200,   201,   202,    -1,   204,    -1,   206,    -1,    -1,   209,
      -1,   211,   212,   213,   214,   215,    -1,    -1,   218,    -1,
     220,    -1,    -1,   223,   224,   225,    -1,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,    -1,   246,   247,   248,   249,
     250,    -1,   252,   253,    -1,   255,    -1,   257,   258,   259,
     260,   261,   262,    -1,   264,   265,    -1,    -1,   268,   269,
     270,    -1,    -1,   273,   274,    -1,   276,    -1,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,    -1,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,    -1,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,    -1,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,    -1,   378,    -1,
     380,   381,   382,   383,   384,    -1,   386,   387,    -1,    -1,
     390,   391,   392,   393,   394,    -1,   396,   397,   398,   399,
     400,   401,   402,    -1,    -1,   405,   406,   407,   408,   409,
      -1,    -1,   412,   413,   414,   415,   416,   417,   418,    -1,
     420,    -1,   422,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    -1,    44,    45,    46,    47,    48,    -1,    50,    51,
      -1,    53,    54,    55,    56,    57,    -1,    -1,    60,    61,
      62,    63,    64,    -1,    66,    67,    68,    69,    70,    -1,
      -1,    -1,    74,    75,    76,    77,    78,    -1,    80,    81,
      82,    -1,    84,    85,    86,    87,    88,    89,    -1,    -1,
      92,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     102,   103,   104,   105,   106,   107,   108,   109,   110,    -1,
     112,    -1,   114,   115,   116,   117,   118,   119,    -1,   121,
     122,   123,   124,   125,    -1,    -1,   128,   129,   130,   131,
     132,    -1,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,   145,   146,   147,   148,   149,   150,   151,
      -1,   153,    -1,   155,   156,   157,   158,    -1,   160,    -1,
     162,    -1,    -1,    -1,   166,   167,   168,   169,    -1,   171,
      -1,   173,   174,    -1,   176,   177,   178,   179,   180,    -1,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,   191,
     192,    -1,   194,    -1,   196,   197,   198,   199,   200,   201,
     202,    -1,   204,    -1,   206,    -1,    -1,   209,    -1,   211,
     212,   213,   214,   215,    -1,    -1,   218,    -1,   220,    -1,
      -1,   223,   224,   225,    -1,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,    -1,   246,   247,   248,   249,   250,    -1,
     252,   253,    -1,   255,    -1,   257,   258,   259,   260,   261,
     262,    -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,
      -1,   273,   274,    -1,   276,    -1,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,    -1,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,    -1,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,    -1,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,    -1,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,    -1,   375,   376,    -1,   378,    -1,   380,   381,
     382,   383,   384,    -1,   386,   387,    -1,    -1,   390,   391,
     392,   393,   394,    -1,   396,   397,   398,   399,   400,   401,
     402,    -1,    -1,   405,   406,   407,   408,   409,    -1,    -1,
     412,   413,   414,   415,   416,   417,   418,    -1,   420,    -1,
     422,   423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,
      44,    45,    46,    47,    48,    -1,    50,    51,    -1,    53,
      54,    55,    56,    57,    -1,    -1,    60,    61,    62,    63,
      64,    -1,    66,    67,    68,    69,    70,    -1,    -1,    -1,
      74,    75,    76,    77,    78,    -1,    80,    81,    82,    -1,
      84,    85,    86,    87,    88,    89,    -1,    -1,    92,    93,
      94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,   103,
     104,   105,   106,   107,   108,   109,   110,    -1,   112,    -1,
     114,   115,   116,   117,   118,   119,    -1,   121,   122,   123,
     124,   125,    -1,    -1,   128,   129,   130,   131,   132,    -1,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,   145,   146,   147,   148,   149,   150,   151,    -1,   153,
      -1,   155,   156,   157,   158,    -1,   160,    -1,   162,    -1,
      -1,    -1,   166,   167,   168,   169,    -1,   171,    -1,   173,
     174,    -1,   176,   177,   178,   179,   180,    -1,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,   191,   192,    -1,
     194,    -1,   196,   197,   198,   199,   200,   201,   202,    -1,
     204,    -1,   206,    -1,    -1,   209,    -1,   211,   212,   213,
     214,   215,    -1,    -1,   218,    -1,   220,    -1,    -1,   223,
     224,   225,    -1,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,    -1,   246,   247,   248,   249,   250,    -1,   252,   253,
      -1,   255,    -1,   257,   258,   259,   260,   261,   262,    -1,
     264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,
     274,    -1,   276,    -1,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,    -1,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,    -1,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,    -1,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,    -1,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
      -1,   375,   376,    -1,   378,    -1,   380,   381,   382,   383,
     384,    -1,   386,   387,    -1,    -1,   390,   391,   392,   393,
     394,    -1,   396,   397,   398,   399,   400,   401,   402,    -1,
      -1,   405,   406,   407,   408,   409,    -1,    -1,   412,   413,
     414,   415,   416,   417,   418,    -1,   420,    -1,   422,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    -1,    -1,    60,    61,    62,    63,    64,    -1,
      66,    67,    68,    69,    70,    -1,    -1,    -1,    74,    75,
      76,    77,    78,    -1,    80,    81,    82,    -1,    84,    85,
      86,    87,    88,    89,    -1,    -1,    92,    93,    94,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,   105,
     106,   107,   108,   109,   110,    -1,   112,    -1,   114,   115,
     116,   117,   118,   119,    -1,   121,   122,   123,   124,   125,
      -1,    -1,   128,   129,   130,   131,   132,    -1,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,   145,
     146,   147,   148,   149,   150,   151,    -1,   153,    -1,   155,
     156,   157,   158,    -1,   160,    -1,   162,    -1,    -1,    -1,
     166,   167,   168,   169,    -1,   171,    -1,   173,   174,    -1,
     176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,   191,   192,    -1,   194,    -1,
     196,   197,   198,   199,   200,   201,   202,    -1,   204,    -1,
     206,    -1,    -1,   209,    -1,   211,   212,   213,   214,   215,
      -1,    -1,   218,    -1,   220,    -1,    -1,   223,   224,   225,
      -1,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,    -1,
     246,   247,   248,   249,   250,    -1,   252,   253,    -1,   255,
      -1,   257,   258,   259,   260,   261,   262,    -1,   264,   265,
      -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,    -1,
     276,    -1,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,    -1,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,    -1,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,    -1,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,    -1,   375,
     376,    -1,   378,    -1,   380,   381,   382,   383,   384,    -1,
     386,   387,    -1,    -1,   390,   391,   392,   393,   394,    -1,
     396,   397,   398,   399,   400,   401,   402,    -1,    -1,   405,
     406,   407,   408,   409,    -1,    -1,   412,   413,   414,   415,
     416,   417,   418,    -1,   420,    -1,   422,   423,   424,   425,
      -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      -1,    -1,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    -1,    -1,    74,    75,    76,    77,
      78,    -1,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,   107,
     108,   109,   110,    -1,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,   125,    -1,    -1,
     128,   129,   130,   131,   132,    -1,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,   145,   146,   147,
     148,   149,   150,   151,    -1,   153,    -1,   155,   156,   157,
     158,    -1,   160,    -1,   162,    -1,    -1,    -1,   166,   167,
     168,   169,    -1,   171,    -1,   173,   174,    -1,   176,   177,
     178,   179,   180,    -1,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,   191,   192,    -1,   194,    -1,   196,   197,
     198,   199,   200,   201,   202,    -1,   204,    -1,   206,    -1,
      -1,   209,    -1,   211,   212,   213,   214,   215,    -1,    -1,
     218,    -1,   220,    -1,    -1,   223,   224,   225,    -1,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,    -1,   246,   247,
     248,   249,   250,    -1,   252,   253,    -1,   255,    -1,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,    -1,   276,    -1,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,    -1,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,    -1,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,    -1,
     378,    -1,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,   392,   393,   394,    -1,   396,   397,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,    -1,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,   420,    -1,   422,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    -1,    -1,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    -1,    -1,    -1,    74,    75,    76,    77,    78,    -1,
      80,    81,    82,    -1,    84,    85,    86,    87,    88,    89,
      -1,    -1,    92,    93,    94,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   102,   103,   104,   105,   106,   107,   108,   109,
     110,    -1,   112,    -1,   114,   115,   116,   117,   118,   119,
      -1,   121,   122,   123,   124,   125,    -1,    -1,   128,   129,
     130,   131,   132,    -1,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,   145,   146,   147,   148,   149,
     150,   151,    -1,   153,    -1,   155,   156,   157,   158,    -1,
     160,    -1,   162,    -1,    -1,    -1,   166,   167,   168,   169,
      -1,   171,    -1,   173,   174,    -1,   176,   177,   178,   179,
     180,    -1,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,   191,   192,    -1,   194,    -1,   196,   197,   198,   199,
     200,   201,   202,    -1,   204,    -1,   206,    -1,    -1,   209,
      -1,   211,   212,   213,   214,   215,    -1,    -1,   218,    -1,
     220,    -1,    -1,   223,   224,   225,    -1,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,    -1,   246,   247,   248,   249,
     250,    -1,   252,   253,    -1,   255,    -1,   257,   258,   259,
     260,   261,   262,    -1,   264,   265,    -1,    -1,   268,   269,
     270,    -1,    -1,   273,   274,    -1,   276,    -1,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,    -1,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,    -1,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,    -1,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,    -1,   378,    -1,
     380,   381,   382,   383,   384,    -1,   386,   387,    -1,    -1,
     390,   391,   392,   393,   394,    -1,   396,   397,   398,   399,
     400,   401,   402,    -1,    -1,   405,   406,   407,   408,   409,
      -1,    -1,   412,   413,   414,   415,   416,   417,   418,    -1,
     420,    -1,   422,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    -1,    44,    45,    46,    47,    48,    -1,    50,    51,
      -1,    53,    54,    55,    56,    57,    -1,    -1,    60,    61,
      62,    63,    64,    -1,    66,    67,    68,    69,    70,    -1,
      -1,    -1,    74,    75,    76,    77,    78,    -1,    80,    81,
      82,    -1,    84,    85,    86,    87,    88,    89,    -1,    -1,
      92,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     102,   103,   104,   105,   106,   107,   108,   109,   110,    -1,
     112,    -1,   114,   115,   116,   117,   118,   119,    -1,   121,
     122,   123,   124,   125,    -1,    -1,   128,   129,   130,   131,
     132,    -1,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,   145,   146,   147,   148,   149,   150,   151,
      -1,   153,    -1,   155,   156,   157,   158,    -1,   160,    -1,
     162,    -1,    -1,    -1,   166,   167,   168,   169,    -1,   171,
      -1,   173,   174,    -1,   176,   177,   178,   179,   180,    -1,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,   191,
     192,    -1,   194,    -1,   196,   197,   198,   199,   200,   201,
     202,    -1,   204,    -1,   206,    -1,    -1,   209,    -1,   211,
     212,   213,   214,   215,    -1,    -1,   218,    -1,   220,    -1,
      -1,   223,   224,   225,    -1,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,    -1,   246,   247,   248,   249,   250,    -1,
     252,   253,    -1,   255,    -1,   257,   258,   259,   260,   261,
     262,    -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,
      -1,   273,   274,    -1,   276,    -1,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,    -1,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,    -1,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,    -1,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,    -1,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,    -1,   375,   376,    -1,   378,    -1,   380,   381,
     382,   383,   384,    -1,   386,   387,    -1,    -1,   390,   391,
     392,   393,   394,    -1,   396,   397,   398,   399,   400,   401,
     402,    -1,    -1,   405,   406,   407,   408,   409,    -1,    -1,
     412,   413,   414,   415,   416,   417,   418,    -1,   420,    -1,
     422,   423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,
      44,    45,    46,    47,    48,    -1,    50,    51,    -1,    53,
      54,    55,    56,    57,    -1,    -1,    60,    61,    62,    63,
      64,    -1,    66,    67,    68,    69,    70,    -1,    -1,    -1,
      74,    75,    76,    77,    78,    -1,    80,    81,    82,    -1,
      84,    85,    86,    87,    88,    89,    -1,    -1,    92,    93,
      94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,   103,
     104,   105,   106,   107,   108,   109,   110,    -1,   112,    -1,
     114,   115,   116,   117,   118,   119,    -1,   121,   122,   123,
     124,   125,    -1,    -1,   128,   129,   130,   131,   132,    -1,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,   145,   146,   147,   148,   149,   150,   151,    -1,   153,
      -1,   155,   156,   157,   158,    -1,   160,    -1,   162,    -1,
      -1,    -1,   166,   167,   168,   169,    -1,   171,    -1,   173,
     174,    -1,   176,   177,   178,   179,   180,    -1,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,   191,   192,    -1,
     194,    -1,   196,   197,   198,   199,   200,   201,   202,    -1,
     204,    -1,   206,    -1,    -1,   209,    -1,   211,   212,   213,
     214,   215,    -1,    -1,   218,    -1,   220,    -1,    -1,   223,
     224,   225,    -1,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,    -1,   246,   247,   248,   249,   250,    -1,   252,   253,
      -1,   255,    -1,   257,   258,   259,   260,   261,   262,    -1,
     264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,
     274,    -1,   276,    -1,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,    -1,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,    -1,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,    -1,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,    -1,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
      -1,   375,   376,    -1,   378,    -1,   380,   381,   382,   383,
     384,    -1,   386,   387,    -1,    -1,   390,   391,   392,   393,
     394,    -1,   396,   397,   398,   399,   400,   401,   402,    -1,
      -1,   405,   406,   407,   408,   409,    -1,    -1,   412,   413,
     414,   415,   416,   417,   418,    -1,   420,    -1,   422,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    -1,    -1,    60,    61,    62,    63,    64,    -1,
      66,    67,    68,    69,    70,    -1,    -1,    -1,    74,    75,
      76,    77,    78,    -1,    80,    81,    82,    -1,    84,    85,
      86,    87,    88,    89,    -1,    -1,    92,    93,    94,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,   105,
     106,   107,   108,   109,   110,    -1,   112,    -1,   114,   115,
     116,   117,   118,   119,    -1,   121,   122,   123,   124,   125,
      -1,    -1,   128,   129,   130,   131,   132,    -1,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,   145,
     146,   147,   148,   149,   150,   151,    -1,   153,    -1,   155,
     156,   157,   158,    -1,   160,    -1,   162,    -1,    -1,    -1,
     166,   167,   168,   169,    -1,   171,    -1,   173,   174,    -1,
     176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,   191,   192,    -1,   194,    -1,
     196,   197,   198,   199,   200,   201,   202,    -1,   204,    -1,
     206,    -1,    -1,   209,    -1,   211,   212,   213,   214,   215,
      -1,    -1,   218,    -1,   220,    -1,    -1,   223,   224,   225,
      -1,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,    -1,
     246,   247,   248,   249,   250,    -1,   252,   253,    -1,   255,
      -1,   257,   258,   259,   260,   261,   262,    -1,   264,   265,
      -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,    -1,
     276,    -1,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,    -1,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,    -1,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,    -1,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,    -1,   375,
     376,    -1,   378,    -1,   380,   381,   382,   383,   384,    -1,
     386,   387,    -1,    -1,   390,   391,   392,   393,   394,    -1,
     396,   397,   398,   399,   400,   401,   402,    -1,    -1,   405,
     406,   407,   408,   409,    -1,    -1,   412,   413,   414,   415,
     416,   417,   418,    -1,   420,    -1,   422,   423,   424,   425,
      -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      -1,    -1,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    -1,    -1,    74,    75,    76,    77,
      78,    -1,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,   107,
     108,   109,   110,    -1,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,   125,    -1,    -1,
     128,   129,   130,   131,   132,    -1,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,   145,   146,   147,
     148,   149,   150,   151,    -1,   153,    -1,   155,   156,   157,
     158,    -1,   160,    -1,   162,    -1,    -1,    -1,   166,   167,
     168,   169,    -1,   171,    -1,   173,   174,    -1,   176,   177,
     178,   179,   180,    -1,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,   191,   192,    -1,   194,    -1,   196,   197,
     198,   199,   200,   201,   202,    -1,   204,    -1,   206,    -1,
      -1,   209,    -1,   211,   212,   213,   214,   215,    -1,    -1,
     218,    -1,   220,    -1,    -1,   223,   224,   225,    -1,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,    -1,   246,   247,
     248,   249,   250,    -1,   252,   253,    -1,   255,    -1,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,    -1,   276,    -1,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,    -1,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,    -1,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,    -1,
     378,    -1,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,   392,   393,   394,    -1,   396,   397,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,    -1,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,   420,    -1,   422,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    -1,    -1,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    -1,    -1,    -1,    74,    75,    76,    77,    78,    -1,
      80,    81,    82,    -1,    84,    85,    86,    87,    88,    89,
      -1,    -1,    92,    93,    94,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   102,   103,   104,   105,   106,   107,   108,   109,
     110,    -1,   112,    -1,   114,   115,   116,   117,   118,   119,
      -1,   121,   122,   123,   124,   125,    -1,    -1,   128,   129,
     130,   131,   132,    -1,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,   145,   146,   147,   148,   149,
     150,   151,    -1,   153,    -1,   155,   156,   157,   158,    -1,
     160,    -1,   162,    -1,    -1,    -1,   166,   167,   168,   169,
      -1,   171,    -1,   173,   174,    -1,   176,   177,   178,   179,
     180,    -1,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,   191,   192,    -1,   194,    -1,   196,   197,   198,   199,
     200,   201,   202,    -1,   204,    -1,   206,    -1,    -1,   209,
      -1,   211,   212,   213,   214,   215,    -1,    -1,   218,    -1,
     220,    -1,    -1,   223,   224,   225,    -1,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,    -1,   246,   247,   248,   249,
     250,    -1,   252,   253,    -1,   255,    -1,   257,   258,   259,
     260,   261,   262,    -1,   264,   265,    -1,    -1,   268,   269,
     270,    -1,    -1,   273,   274,    -1,   276,    -1,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,    -1,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,    -1,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,    -1,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,    -1,   378,    -1,
     380,   381,   382,   383,   384,    -1,   386,   387,    -1,    -1,
     390,   391,   392,   393,   394,    -1,   396,   397,   398,   399,
     400,   401,   402,    -1,    -1,   405,   406,   407,   408,   409,
      -1,    -1,   412,   413,   414,   415,   416,   417,   418,    -1,
     420,    -1,   422,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    -1,    44,    45,    46,    47,    48,    -1,    50,    51,
      -1,    53,    54,    55,    56,    57,    -1,    -1,    60,    61,
      62,    63,    64,    -1,    66,    67,    68,    69,    70,    -1,
      -1,    -1,    74,    75,    76,    77,    78,    -1,    80,    81,
      82,    -1,    84,    85,    86,    87,    88,    89,    -1,    -1,
      92,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     102,   103,   104,   105,   106,   107,   108,   109,   110,    -1,
     112,    -1,   114,   115,   116,   117,   118,   119,    -1,   121,
     122,   123,   124,   125,    -1,    -1,   128,   129,   130,   131,
     132,    -1,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,   145,   146,   147,   148,   149,   150,   151,
      -1,   153,    -1,   155,   156,   157,   158,    -1,   160,    -1,
     162,    -1,    -1,    -1,   166,   167,   168,   169,    -1,   171,
      -1,   173,   174,    -1,   176,   177,   178,   179,   180,    -1,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,   191,
     192,    -1,   194,    -1,   196,   197,   198,   199,   200,   201,
     202,    -1,   204,    -1,   206,    -1,    -1,   209,    -1,   211,
     212,   213,   214,   215,    -1,    -1,   218,    -1,   220,    -1,
      -1,   223,   224,   225,    -1,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,    -1,   246,   247,   248,   249,   250,    -1,
     252,   253,    -1,   255,    -1,   257,   258,   259,   260,   261,
     262,    -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,
      -1,   273,   274,    -1,   276,    -1,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,    -1,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,    -1,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,    -1,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,    -1,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,    -1,   375,   376,    -1,   378,    -1,   380,   381,
     382,   383,   384,    -1,   386,   387,    -1,    -1,   390,   391,
     392,   393,   394,    -1,   396,   397,   398,   399,   400,   401,
     402,    -1,    -1,   405,   406,   407,   408,   409,    -1,    -1,
     412,   413,   414,   415,   416,   417,   418,    -1,   420,    -1,
     422,   423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,
      44,    45,    46,    47,    48,    -1,    50,    51,    -1,    53,
      54,    55,    56,    57,    -1,    -1,    60,    61,    62,    63,
      64,    -1,    66,    67,    68,    69,    70,    -1,    -1,    -1,
      74,    75,    76,    77,    78,    -1,    80,    81,    82,    -1,
      84,    85,    86,    87,    88,    89,    -1,    -1,    92,    93,
      94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,   103,
     104,   105,   106,   107,   108,   109,   110,    -1,   112,    -1,
     114,   115,   116,   117,   118,   119,    -1,   121,   122,   123,
     124,   125,    -1,    -1,   128,   129,   130,   131,   132,    -1,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,   145,   146,   147,   148,   149,   150,   151,    -1,   153,
      -1,   155,   156,   157,   158,    -1,   160,    -1,   162,    -1,
      -1,    -1,   166,   167,   168,   169,    -1,   171,    -1,   173,
     174,    -1,   176,   177,   178,   179,   180,    -1,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,   191,   192,    -1,
     194,    -1,   196,   197,   198,   199,   200,   201,   202,    -1,
     204,    -1,   206,    -1,    -1,   209,    -1,   211,   212,   213,
     214,   215,    -1,    -1,   218,    -1,   220,    -1,    -1,   223,
     224,   225,    -1,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,    -1,   246,   247,   248,   249,   250,    -1,   252,   253,
      -1,   255,    -1,   257,   258,   259,   260,   261,   262,    -1,
     264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,
     274,    -1,   276,    -1,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,    -1,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,    -1,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,    -1,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,    -1,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
      -1,   375,   376,    -1,   378,    -1,   380,   381,   382,   383,
     384,    -1,   386,   387,    -1,    -1,   390,   391,   392,   393,
     394,    -1,   396,   397,   398,   399,   400,   401,   402,    -1,
      -1,   405,   406,   407,   408,   409,    -1,    -1,   412,   413,
     414,   415,   416,   417,   418,    -1,   420,    -1,   422,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    -1,    -1,    60,    61,    62,    63,    64,    -1,
      66,    67,    68,    69,    70,    -1,    -1,    -1,    74,    75,
      76,    77,    78,    -1,    80,    81,    82,    -1,    84,    85,
      86,    87,    88,    89,    -1,    -1,    92,    93,    94,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,   105,
     106,   107,   108,   109,   110,    -1,   112,    -1,   114,   115,
     116,   117,   118,   119,    -1,   121,   122,   123,   124,   125,
      -1,    -1,   128,   129,   130,   131,   132,    -1,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,   145,
     146,   147,   148,   149,   150,   151,    -1,   153,    -1,   155,
     156,   157,   158,    -1,   160,    -1,   162,    -1,    -1,    -1,
     166,   167,   168,   169,    -1,   171,    -1,   173,   174,    -1,
     176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,   191,   192,    -1,   194,    -1,
     196,   197,   198,   199,   200,   201,   202,    -1,   204,    -1,
     206,    -1,    -1,   209,    -1,   211,   212,   213,   214,   215,
      -1,    -1,   218,    -1,   220,    -1,    -1,   223,   224,   225,
      -1,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,    -1,
     246,   247,   248,   249,   250,    -1,   252,   253,    -1,   255,
      -1,   257,   258,   259,   260,   261,   262,    -1,   264,   265,
      -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,    -1,
     276,    -1,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,    -1,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,    -1,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,    -1,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,    -1,   375,
     376,    -1,   378,    -1,   380,   381,   382,   383,   384,    -1,
     386,   387,    -1,    -1,   390,   391,   392,   393,   394,    -1,
     396,   397,   398,   399,   400,   401,   402,    -1,    -1,   405,
     406,   407,   408,   409,    -1,    -1,   412,   413,   414,   415,
     416,   417,   418,    -1,   420,    -1,   422,   423,   424,   425,
      -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    35,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      -1,    -1,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    -1,    -1,    74,    75,    76,    77,
      78,    -1,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,   107,
     108,   109,   110,    -1,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,   125,    -1,    -1,
     128,   129,   130,   131,   132,    -1,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,   145,   146,   147,
     148,   149,   150,   151,    -1,   153,    -1,   155,   156,   157,
     158,    -1,   160,    -1,   162,    -1,    -1,    -1,   166,   167,
     168,   169,    -1,   171,    -1,   173,   174,    -1,   176,   177,
     178,   179,   180,    -1,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,   191,   192,    -1,   194,    -1,   196,   197,
     198,   199,   200,   201,   202,    -1,   204,    -1,   206,    -1,
      -1,   209,    -1,   211,   212,   213,   214,   215,    -1,    -1,
     218,    -1,   220,    -1,    -1,   223,   224,   225,    -1,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,    -1,   246,   247,
     248,   249,   250,    -1,   252,   253,    -1,   255,    -1,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,    -1,   276,    -1,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,    -1,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,    -1,    -1,   351,   352,   353,   354,    -1,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,    -1,
     378,    -1,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,   392,   393,   394,    -1,   396,   397,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,    -1,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,   420,    -1,   422,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    -1,    -1,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    -1,    -1,    -1,    74,    75,    76,    77,    78,    -1,
      80,    81,    82,    -1,    84,    85,    86,    87,    88,    89,
      -1,    -1,    92,    93,    94,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   102,   103,   104,   105,   106,   107,   108,   109,
     110,    -1,   112,    -1,   114,   115,   116,   117,   118,   119,
      -1,   121,   122,   123,   124,   125,    -1,    -1,   128,   129,
     130,   131,   132,    -1,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,   145,   146,   147,   148,   149,
     150,   151,    -1,   153,    -1,   155,   156,   157,   158,    -1,
     160,    -1,   162,    -1,    -1,    -1,   166,   167,   168,   169,
      -1,   171,    -1,   173,   174,    -1,   176,   177,   178,   179,
     180,    -1,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,   191,   192,    -1,   194,    -1,   196,   197,   198,   199,
     200,   201,   202,    -1,   204,    -1,   206,    -1,    -1,   209,
      -1,   211,   212,   213,   214,   215,    -1,    -1,   218,    -1,
     220,    -1,    -1,   223,   224,   225,    -1,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,    -1,   246,   247,   248,   249,
     250,    -1,   252,   253,    -1,   255,    -1,   257,   258,   259,
     260,   261,   262,    -1,   264,   265,    -1,    -1,   268,   269,
     270,    -1,    -1,   273,   274,    -1,   276,    -1,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,    -1,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,    -1,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,    -1,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,    -1,   378,    -1,
     380,   381,   382,   383,   384,    -1,   386,   387,    -1,    -1,
     390,   391,   392,   393,   394,    -1,   396,   397,   398,   399,
     400,   401,   402,    -1,    -1,   405,   406,   407,   408,   409,
      -1,    -1,   412,   413,   414,   415,   416,   417,   418,    -1,
     420,    -1,   422,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    -1,    44,    45,    46,    47,    48,    -1,    50,    51,
      -1,    53,    54,    55,    56,    57,    -1,    -1,    60,    61,
      62,    63,    64,    -1,    66,    67,    68,    69,    70,    -1,
      -1,    -1,    74,    75,    76,    77,    78,    -1,    80,    81,
      82,    -1,    84,    85,    86,    87,    88,    89,    -1,    -1,
      92,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     102,   103,   104,   105,   106,   107,   108,   109,   110,    -1,
     112,    -1,   114,   115,   116,   117,   118,   119,    -1,   121,
     122,   123,   124,   125,    -1,    -1,   128,   129,   130,   131,
     132,    -1,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,   145,   146,   147,   148,   149,   150,   151,
      -1,   153,    -1,   155,   156,   157,   158,    -1,   160,    -1,
     162,    -1,    -1,    -1,   166,   167,   168,   169,    -1,   171,
      -1,   173,   174,    -1,   176,   177,   178,   179,   180,    -1,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,   191,
     192,    -1,   194,    -1,   196,   197,   198,   199,   200,   201,
     202,    -1,   204,    -1,   206,    -1,    -1,   209,    -1,   211,
     212,   213,   214,   215,    -1,    -1,   218,    -1,   220,    -1,
      -1,   223,   224,   225,    -1,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,    -1,   246,   247,   248,   249,   250,    -1,
     252,   253,    -1,   255,    -1,   257,   258,   259,   260,   261,
     262,    -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,
      -1,   273,   274,    -1,   276,    -1,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,    -1,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,    -1,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,    -1,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,    -1,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,    -1,   375,   376,    -1,   378,    -1,   380,   381,
     382,   383,   384,    -1,   386,   387,    -1,    -1,   390,   391,
     392,   393,   394,    -1,   396,   397,   398,   399,   400,   401,
     402,    -1,    -1,   405,   406,   407,   408,   409,    -1,    -1,
     412,   413,   414,   415,   416,   417,   418,    -1,   420,    -1,
     422,   423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,
      44,    45,    46,    47,    48,    -1,    50,    51,    -1,    53,
      54,    55,    56,    57,    -1,    -1,    60,    61,    62,    63,
      64,    -1,    66,    67,    68,    69,    70,    -1,    -1,    -1,
      74,    75,    76,    77,    78,    -1,    80,    81,    82,    -1,
      84,    85,    86,    87,    88,    89,    -1,    -1,    92,    93,
      94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,   103,
     104,   105,   106,   107,   108,   109,   110,    -1,   112,    -1,
     114,   115,   116,   117,   118,   119,    -1,   121,   122,   123,
     124,   125,    -1,    -1,   128,   129,   130,   131,   132,    -1,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,   145,   146,   147,   148,   149,   150,   151,    -1,   153,
      -1,   155,   156,   157,   158,    -1,   160,    -1,   162,    -1,
      -1,    -1,   166,   167,   168,   169,    -1,   171,    -1,   173,
     174,    -1,   176,   177,   178,   179,   180,    -1,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,   191,   192,    -1,
     194,    -1,   196,   197,   198,   199,   200,   201,   202,    -1,
     204,    -1,   206,    -1,    -1,   209,    -1,   211,   212,   213,
     214,   215,    -1,    -1,   218,    -1,   220,    -1,    -1,   223,
     224,   225,    -1,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,    -1,   246,   247,   248,   249,   250,    -1,   252,   253,
      -1,   255,    -1,   257,   258,   259,   260,   261,   262,    -1,
     264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,
     274,    -1,   276,    -1,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,    -1,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,    -1,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,    -1,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,    -1,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
      -1,   375,   376,    -1,   378,    -1,   380,   381,   382,   383,
     384,    -1,   386,   387,    -1,    -1,   390,   391,   392,   393,
     394,    -1,   396,   397,   398,   399,   400,   401,   402,    -1,
      -1,   405,   406,   407,   408,   409,    -1,    -1,   412,   413,
     414,   415,   416,   417,   418,    -1,   420,    -1,   422,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    -1,    -1,    60,    61,    62,    63,    64,    -1,
      66,    67,    68,    69,    70,    -1,    -1,    -1,    74,    75,
      76,    77,    78,    -1,    80,    81,    82,    -1,    84,    85,
      86,    87,    88,    89,    -1,    -1,    92,    93,    94,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,   105,
     106,   107,   108,   109,   110,    -1,   112,    -1,   114,   115,
     116,   117,   118,   119,    -1,   121,   122,   123,   124,   125,
      -1,    -1,   128,   129,   130,   131,   132,    -1,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,   145,
     146,   147,   148,   149,   150,   151,    -1,   153,    -1,   155,
     156,   157,   158,    -1,   160,    -1,   162,    -1,    -1,    -1,
     166,   167,   168,   169,    -1,   171,    -1,   173,   174,    -1,
     176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,   191,   192,    -1,   194,    -1,
     196,   197,   198,   199,   200,   201,   202,    -1,   204,    -1,
     206,    -1,    -1,   209,    -1,   211,   212,   213,   214,   215,
      -1,    -1,   218,    -1,   220,    -1,    -1,   223,   224,   225,
      -1,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,    -1,
     246,   247,   248,   249,   250,    -1,   252,   253,    -1,   255,
      -1,   257,   258,   259,   260,   261,   262,    -1,   264,   265,
      -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,    -1,
     276,    -1,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,    -1,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,    -1,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,    -1,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,    -1,   375,
     376,    -1,   378,    -1,   380,   381,   382,   383,   384,    -1,
     386,   387,    -1,    -1,   390,   391,   392,   393,   394,    -1,
     396,   397,   398,   399,   400,   401,   402,    -1,    -1,   405,
     406,   407,   408,   409,    -1,    -1,   412,   413,   414,   415,
     416,   417,   418,    -1,   420,    -1,   422,   423,   424,   425,
      -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      -1,    -1,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    -1,    -1,    74,    75,    76,    77,
      78,    -1,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,   107,
     108,   109,   110,    -1,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,   125,    -1,    -1,
     128,   129,   130,   131,   132,    -1,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,   145,   146,   147,
     148,   149,   150,   151,    -1,   153,    -1,   155,   156,   157,
     158,    -1,   160,    -1,   162,    -1,    -1,    -1,   166,   167,
     168,   169,    -1,   171,    -1,   173,   174,    -1,   176,   177,
     178,   179,   180,    -1,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,   191,   192,    -1,   194,    -1,   196,   197,
     198,   199,   200,   201,   202,    -1,   204,    -1,   206,    -1,
      -1,   209,    -1,   211,   212,   213,   214,   215,    -1,    -1,
     218,    -1,   220,    -1,    -1,   223,   224,   225,    -1,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,    -1,   246,   247,
     248,   249,   250,    -1,   252,   253,    -1,   255,    -1,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,    -1,   276,    -1,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,    -1,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,    -1,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,    -1,
     378,    -1,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,   392,   393,   394,    -1,   396,   397,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,    -1,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,   420,    -1,   422,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    -1,    -1,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    -1,    -1,    -1,    74,    75,    76,    77,    78,    -1,
      80,    81,    82,    -1,    84,    85,    86,    87,    88,    89,
      -1,    -1,    92,    93,    94,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   102,   103,   104,   105,   106,   107,   108,   109,
     110,    -1,   112,    -1,   114,   115,   116,   117,   118,   119,
      -1,   121,   122,   123,   124,   125,    -1,    -1,   128,   129,
     130,   131,   132,    -1,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,   145,   146,   147,   148,   149,
     150,   151,    -1,   153,    -1,   155,   156,   157,   158,    -1,
     160,    -1,   162,    -1,    -1,    -1,   166,   167,   168,   169,
      -1,   171,    -1,   173,   174,    -1,   176,   177,   178,   179,
     180,    -1,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,   191,   192,    -1,   194,    -1,   196,   197,   198,   199,
     200,   201,   202,    -1,   204,    -1,   206,    -1,    -1,   209,
      -1,   211,   212,   213,   214,   215,    -1,    -1,   218,    -1,
     220,    -1,    -1,   223,   224,   225,    -1,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,    -1,   246,   247,   248,   249,
     250,    -1,   252,   253,    -1,   255,    -1,   257,   258,   259,
     260,   261,   262,    -1,   264,   265,    -1,    -1,   268,   269,
     270,    -1,    -1,   273,   274,    -1,   276,    -1,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,    -1,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,    -1,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,    -1,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,    -1,   378,    -1,
     380,   381,   382,   383,   384,    -1,   386,   387,    -1,    -1,
     390,   391,   392,   393,   394,    -1,   396,   397,   398,   399,
     400,   401,   402,    -1,    -1,   405,   406,   407,   408,   409,
      -1,    -1,   412,   413,   414,   415,   416,   417,   418,    -1,
     420,    -1,   422,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    -1,    44,    45,    46,    47,    48,    -1,    50,    51,
      -1,    53,    54,    55,    56,    57,    -1,    -1,    60,    61,
      62,    63,    64,    -1,    66,    67,    68,    69,    70,    -1,
      -1,    -1,    74,    75,    76,    77,    78,    -1,    80,    81,
      82,    -1,    84,    85,    86,    87,    88,    89,    -1,    -1,
      92,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     102,   103,   104,   105,   106,   107,   108,   109,   110,    -1,
     112,    -1,   114,   115,   116,   117,   118,   119,    -1,   121,
     122,   123,   124,   125,    -1,    -1,   128,   129,   130,   131,
     132,    -1,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,   145,   146,   147,   148,   149,   150,   151,
      -1,   153,    -1,   155,   156,   157,   158,    -1,   160,    -1,
     162,    -1,    -1,    -1,   166,   167,   168,   169,    -1,   171,
      -1,   173,   174,    -1,   176,   177,   178,   179,   180,    -1,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,   191,
     192,    -1,   194,    -1,   196,   197,   198,   199,   200,   201,
     202,    -1,   204,    -1,   206,    -1,    -1,   209,    -1,   211,
     212,   213,   214,   215,    -1,    -1,   218,    -1,   220,    -1,
      -1,   223,   224,   225,    -1,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,    -1,   246,   247,   248,   249,   250,    -1,
     252,   253,    -1,   255,    -1,   257,   258,   259,   260,   261,
     262,    -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,
      -1,   273,   274,    -1,   276,    -1,   278,   279,   280,   281,
     282,   283,   284,    -1,   286,   287,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,    -1,   299,   300,   301,
     302,   303,   304,   305,    -1,   307,   308,   309,   310,   311,
     312,    -1,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,    -1,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,    -1,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,    -1,   375,   376,    -1,   378,    -1,   380,   381,
     382,   383,   384,    -1,   386,   387,    -1,    -1,   390,   391,
     392,   393,   394,    -1,   396,   397,   398,   399,   400,   401,
     402,    -1,    -1,   405,   406,   407,   408,   409,    -1,    -1,
     412,   413,   414,   415,   416,   417,   418,    -1,   420,    -1,
     422,   423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    43,
      44,    45,    46,    -1,    48,    49,    50,    51,    -1,    53,
      54,    55,    56,    57,    -1,    -1,    60,    61,    62,    63,
      64,    -1,    66,    67,    68,    69,    -1,    -1,    72,    -1,
      74,    75,    76,    77,    78,    79,    80,    81,    82,    -1,
      84,    85,    86,    87,    88,    89,    -1,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,   102,   103,
     104,   105,   106,   107,   108,   109,   110,    -1,   112,    -1,
     114,   115,   116,   117,   118,   119,    -1,   121,   122,   123,
     124,   125,    -1,    -1,   128,   129,   130,   131,   132,    -1,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,   145,    -1,   147,   148,   149,   150,    -1,    -1,   153,
      -1,   155,   156,   157,   158,    -1,   160,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,   171,    -1,    -1,
     174,    -1,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,   191,   192,    -1,
     194,   195,    -1,   197,   198,   199,   200,   201,   202,    -1,
     204,    -1,   206,   207,   208,   209,   210,   211,   212,   213,
     214,   215,    -1,    -1,   218,   219,   220,   221,    -1,   223,
     224,   225,    -1,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,    -1,    -1,   252,   253,
     254,   255,    -1,    -1,   258,   259,   260,   261,   262,    -1,
     264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,
      -1,   275,   276,   277,    -1,   279,   280,   281,   282,   283,
     284,   285,   286,   287,    -1,   289,   290,    -1,   292,   293,
      -1,   295,   296,   297,    -1,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,    -1,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,   329,   330,   331,   332,    -1,
     334,   335,   336,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,    -1,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,    -1,
      -1,   375,   376,    -1,   378,   379,   380,   381,   382,   383,
     384,    -1,   386,   387,    -1,    -1,   390,   391,    -1,   393,
      -1,    -1,   396,   397,   398,   399,   400,   401,   402,    -1,
      -1,   405,   406,   407,   408,   409,    -1,    -1,   412,   413,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   448,   449,   450,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    43,    44,    45,    46,    -1,    48,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    -1,    -1,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      -1,    -1,    72,    -1,    74,    75,    76,    77,    78,    79,
      80,    81,    82,    -1,    84,    85,    86,    87,    88,    89,
      -1,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,   102,   103,   104,   105,   106,   107,   108,   109,
     110,    -1,   112,    -1,   114,   115,   116,   117,   118,   119,
      -1,   121,   122,   123,   124,   125,    -1,    -1,   128,   129,
     130,   131,   132,    -1,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,   145,    -1,   147,   148,   149,
     150,    -1,    -1,   153,    -1,   155,   156,   157,   158,    -1,
     160,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
      -1,   171,    -1,    -1,   174,    -1,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,   191,   192,    -1,   194,   195,    -1,   197,   198,   199,
     200,   201,   202,    -1,   204,    -1,   206,   207,   208,   209,
     210,   211,   212,   213,   214,   215,    -1,    -1,   218,   219,
     220,   221,    -1,   223,   224,   225,    -1,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
      -1,    -1,   252,   253,   254,   255,    -1,    -1,   258,   259,
     260,   261,   262,    -1,   264,   265,    -1,    -1,   268,   269,
     270,    -1,    -1,   273,    -1,   275,   276,   277,    -1,   279,
     280,   281,   282,   283,   284,   285,   286,   287,    -1,   289,
     290,    -1,   292,   293,    -1,   295,   296,   297,    -1,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,   329,
     330,   331,   332,    -1,   334,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,    -1,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,    -1,    -1,   375,   376,    -1,   378,   379,
     380,   381,   382,   383,   384,    -1,   386,   387,    -1,    -1,
     390,   391,    -1,   393,    -1,    -1,   396,   397,   398,   399,
     400,   401,   402,    -1,    -1,   405,   406,   407,   408,   409,
      -1,    -1,   412,   413,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,    -1,    22,    -1,
      -1,    -1,    -1,    -1,    28,    -1,    -1,    -1,   448,   449,
     450,    35,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      54,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   131,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   188,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   235,    -1,    -1,   238,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   249,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   270,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   319,    -1,    -1,    -1,   323,
     324,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     344,    -1,    -1,    -1,    -1,    -1,   350,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     364,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     414
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    18,    28,    30,    31,    46,    66,    77,    88,    90,
     107,   121,   131,   137,   145,   147,   148,   185,   224,   292,
     295,   323,   331,   343,   350,   354,   364,   377,   412,   417,
     430,   453,   467,   475,   476,   477,   478,   489,   490,   492,
     496,   510,   511,   513,   515,   522,   524,   570,   576,   577,
     594,   595,   596,   597,   598,   599,   636,   755,   758,   761,
     768,   769,   770,   771,   772,   779,   783,   789,   791,   796,
     800,   801,   804,   805,   807,   809,   390,   433,   523,   189,
     337,   344,   377,   423,   523,   523,    49,   467,   589,   169,
     225,   271,   337,   381,   383,   404,   407,   568,   767,     3,
      18,    19,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    29,    37,    38,    40,    41,    42,    44,    45,    46,
      47,    48,    50,    51,    53,    54,    55,    56,    57,    60,
      61,    62,    63,    64,    66,    67,    68,    69,    70,    74,
      75,    76,    77,    78,    80,    81,    82,    84,    85,    86,
      87,    88,    89,    92,    93,    94,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   112,   114,   115,   116,   117,
     118,   119,   121,   122,   123,   124,   125,   128,   129,   130,
     131,   132,   134,   135,   136,   138,   139,   140,   142,   143,
     144,   145,   146,   147,   148,   149,   150,   151,   153,   155,
     156,   157,   158,   160,   162,   166,   167,   168,   169,   171,
     173,   174,   176,   177,   178,   179,   180,   182,   183,   184,
     185,   187,   188,   189,   190,   191,   192,   194,   196,   197,
     198,   199,   200,   201,   202,   204,   206,   209,   211,   212,
     213,   214,   215,   218,   220,   223,   224,   225,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   246,   247,   248,   249,   250,
     252,   253,   255,   257,   258,   259,   260,   261,   262,   264,
     265,   268,   269,   270,   273,   274,   276,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   327,   328,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   344,   345,   346,
     347,   348,   350,   351,   352,   353,   354,   356,   357,   358,
     359,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   375,   376,   378,   380,   381,   382,
     383,   384,   386,   387,   390,   391,   392,   393,   394,   396,
     397,   398,   399,   400,   401,   402,   405,   406,   407,   408,
     409,   412,   413,   414,   415,   416,   417,   418,   420,   422,
     423,   424,   425,   428,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   740,   746,   812,   813,    20,    72,
      87,   140,   149,   161,   189,   234,   290,   304,   335,   337,
     344,   347,   366,   377,   384,   393,   423,   571,   572,   575,
     523,   295,   740,    90,   421,   467,   492,   576,   594,   775,
     779,   796,   809,   105,   105,     5,   745,   790,   746,   740,
      26,   386,   390,   746,   802,   803,   806,   523,    26,   126,
     606,   607,   225,   337,   348,   386,   784,   785,   806,   523,
     267,   647,   738,   746,   165,   467,   793,   467,   311,   600,
     601,   740,   600,   595,   596,   599,     0,   470,   116,   199,
     409,   141,   203,   272,   403,   608,   609,   595,   597,   598,
     471,   421,   773,    26,   386,   390,   806,   180,   738,   740,
     180,   738,   180,   647,   180,   738,   492,   576,   594,   757,
     796,   738,   381,   383,   381,   383,   321,   180,   746,   311,
     344,   377,   423,   189,    26,   740,   236,   393,   104,   377,
     423,   340,   180,   573,   746,   749,   180,   739,   740,   180,
     740,   467,   514,   568,   775,     3,    43,    49,    72,    79,
      91,    98,   163,   165,   181,   195,   207,   208,   210,   219,
     221,   245,   254,   275,   277,   329,   355,   379,   417,   421,
     776,   778,   779,   781,   782,   812,   813,   814,   773,   745,
     745,   456,   467,   467,   756,   450,   209,   469,   266,     3,
       4,     6,     7,     8,     9,    10,    48,    50,    51,    58,
      59,    62,    63,    70,    72,    95,    96,    97,    98,    99,
     100,   101,   108,   109,   111,   130,   146,   151,   152,   157,
     201,   202,   204,   226,   227,   244,   246,   251,   256,   257,
     259,   268,   278,   291,   308,   333,   349,   358,   373,   386,
     387,   392,   394,   395,   410,   418,   451,   458,   459,   460,
     467,   472,   595,   662,   665,   668,   669,   670,   672,   673,
     674,   675,   677,   678,   682,   684,   685,   686,   688,   701,
     705,   723,   728,   735,   736,   742,   743,   744,   745,   746,
     748,   812,   814,   734,   735,   784,   745,   784,   450,   164,
     388,   456,   467,   738,   460,   465,   469,   729,   731,     3,
     163,   165,   421,   779,   792,   794,   163,   795,   682,   709,
     600,   471,   467,   751,   468,   468,   477,   164,   205,   647,
     797,    26,   126,   605,   605,    53,   605,   154,   159,   222,
     263,   614,   616,   617,   629,   631,   632,   633,   608,   609,
     467,   738,   450,   209,   146,    22,    28,   131,   270,   319,
     323,   350,   414,   483,   486,   487,   319,   146,    35,    54,
     103,   188,   235,   238,   249,   280,   319,   324,   344,   350,
     364,   486,   516,   519,   146,   319,   350,   486,   146,   319,
     350,   486,   468,   467,   558,   568,   251,   759,   423,   180,
     738,   180,   738,   811,   738,    79,   764,   434,    80,   123,
     283,   382,   146,    56,   325,   471,   574,   469,   750,   146,
     471,   574,   146,   266,   709,   377,   468,   471,     4,   152,
     266,   395,   458,   459,   518,   521,   744,   745,   774,   776,
     777,   780,   775,   467,   584,   588,   518,   780,   786,   788,
     682,   710,   711,   748,   752,     3,    48,    50,    51,    62,
      63,   108,   109,   157,   201,   202,   204,   244,   246,   259,
     308,   351,   358,   386,   387,   418,   659,   661,   663,   665,
     667,   669,   670,   671,   673,   674,   677,   678,   712,   748,
     812,    35,   220,   746,   467,   732,   420,   676,   682,   727,
     467,   676,   676,   467,   159,   467,   467,   467,   664,   664,
     294,   595,   467,   467,   666,   467,   467,    62,    63,   676,
     682,   467,   664,   467,   467,   467,   467,   467,   432,   453,
     467,   679,   467,   679,   467,   467,   682,   682,   682,   595,
     682,   709,   732,   731,   745,   467,   467,   745,     3,     8,
      11,    15,    16,    17,    32,    35,    40,    47,    71,   181,
     186,   207,   208,   221,   251,   254,   268,   271,   355,   451,
     454,   455,   456,   458,   459,   460,   461,   462,   463,   703,
     704,   705,   707,   431,   689,   277,   682,   205,   471,   602,
     467,   745,   731,   602,     3,   111,   225,   518,   678,   745,
     787,    94,   111,   788,   111,   788,   738,   682,   730,     3,
      26,    30,    31,    32,    33,    34,    35,    36,    39,    52,
      58,    59,    65,    71,    73,    83,    90,    95,    96,    97,
      99,   100,   101,   111,   113,   120,   126,   127,   133,   137,
     141,   152,   154,   159,   161,   164,   170,   172,   175,   186,
     193,   203,   205,   216,   217,   222,   226,   227,   251,   256,
     263,   266,   267,   271,   272,   288,   298,   313,   326,   343,
     349,   360,   374,   377,   385,   388,   389,   395,   403,   404,
     410,   411,   419,   426,   427,   429,   430,   460,   741,   753,
     812,   813,   814,   815,   729,   468,   471,   773,   468,   471,
     601,   739,    35,   797,   494,   738,    35,   746,   350,   597,
     597,   610,   611,   682,   597,   156,   248,   623,   211,   249,
     307,   353,   409,    26,   618,   682,   458,   459,   619,   620,
     682,   684,   629,   630,   617,   616,   614,   615,   159,   632,
     261,   634,   614,   629,   709,   751,   220,   738,    65,    73,
      83,   161,   180,   298,   404,   539,   549,   564,   746,    73,
      83,   491,    83,   491,   467,   388,   467,   537,   231,   407,
     537,    83,   471,   388,   738,   661,   518,    53,   520,   518,
     518,   103,   235,   238,    53,   388,   430,   453,   517,   242,
     337,   517,   519,   647,    83,   388,   491,   337,   738,   388,
     337,   388,   557,   562,   746,   430,   587,   311,   423,   146,
      90,   511,   524,   760,   761,   807,   738,   251,   512,   516,
     251,   467,   558,    35,   558,   180,   552,   746,   765,   573,
     749,   741,   469,   739,   740,   740,   749,   468,   180,   738,
     811,   775,   781,     4,   744,     4,   744,   586,   593,   753,
      49,    92,   117,   135,   139,   160,   163,   176,   256,   264,
     305,   590,   471,   468,   471,    13,    14,   661,    34,   660,
     106,   178,   237,   240,   341,   448,   467,   680,   681,   468,
     471,   664,   750,   757,   709,   729,   467,   426,   724,   725,
     682,   709,   467,   744,   744,   709,     3,   106,   178,   237,
     240,   341,   448,   713,   714,   745,   744,   744,   744,   676,
     676,   682,     8,    15,    16,    17,   454,   455,   456,   458,
     459,   460,   461,   462,   463,   703,   708,   746,   682,   715,
     458,   459,   467,   683,   684,   705,   717,   468,   709,   682,
     709,   718,   386,   386,   744,   744,   682,    52,   164,   217,
     389,   682,   709,   721,   468,   471,   744,   472,   744,   680,
     659,   682,   682,   682,   682,     5,   753,   754,   386,    39,
     374,   733,   749,   682,   467,   595,   722,   126,   152,   251,
     256,   261,   395,   405,   682,   256,   467,   682,   388,    47,
     181,   186,   221,   355,   682,   682,   682,   682,   682,   682,
     682,   682,   682,   682,    26,    33,   360,   702,   172,   155,
     690,   333,   467,   701,   169,   225,   377,   381,   383,   407,
     603,   738,   736,   164,   637,    26,   126,   419,   460,   468,
     710,   637,   467,   745,   468,   466,   473,   738,   792,   738,
     800,   682,   468,   467,   411,   799,   111,   279,   467,   493,
     594,    35,   746,   467,   498,   507,   509,   746,   471,    36,
     120,   411,   612,   333,   334,   458,   459,   620,   622,   684,
     353,   211,   267,   471,     4,   621,   744,   621,   333,   334,
     622,   737,   738,   255,   357,   635,   630,   615,   468,   319,
     486,   467,   180,   549,   740,   211,   251,   211,   411,   467,
     542,   659,   740,   746,   180,   740,   180,   746,    22,   131,
     350,   482,   485,   532,   547,   753,   740,   541,   561,   753,
     740,   483,   740,   319,   350,   486,   516,   518,   749,   740,
     518,   749,   740,   518,   319,   350,   486,   740,   740,   740,
     740,   319,   350,   486,   740,   740,   303,   583,   468,   471,
     264,   164,   388,   578,   423,   738,   746,   568,   467,   146,
     146,   221,   539,   549,   553,   556,   565,   567,   746,   430,
     432,   544,   145,   594,   430,   766,   251,   266,   574,   741,
     574,   266,   574,   251,    35,   468,   471,   460,   467,   518,
     585,   780,    35,   582,   745,   582,   251,   256,   305,   582,
     582,   786,   711,   682,   682,    34,   660,   465,   465,   388,
     388,   388,   467,   388,   744,   659,   664,   468,   709,   682,
     133,   725,   726,    35,   468,   682,   468,   468,   468,   468,
     164,   468,   468,   468,   471,   468,   469,   288,   716,   468,
     683,   683,   682,    11,    15,    16,    17,   186,   207,   268,
     454,   455,   456,   458,   459,   460,   461,   462,   463,   705,
     683,   468,   468,   159,   164,   719,   720,   468,   450,   450,
     468,   468,    35,   721,   709,   721,   721,   164,   468,   732,
     682,   468,   468,   468,   450,   683,   683,   139,   709,   164,
     126,   152,   256,   261,   395,   405,   467,   139,   708,   682,
     374,   733,   682,   722,   682,   388,   467,   595,   467,   467,
     276,   694,   381,   383,   381,   383,   738,   377,   604,   604,
     604,   216,   334,   467,   595,   638,   639,   640,   647,   650,
     685,   687,   688,   742,   746,   427,   655,   710,   710,   711,
     468,   471,   608,   609,   655,   744,   680,   682,   730,   751,
     757,   638,   427,   798,   417,   376,   410,   502,   497,   506,
     746,   266,   499,   746,   503,   509,   471,   637,   456,   732,
     611,   268,   703,   706,   452,   613,     4,   744,   622,   267,
     409,   619,   471,   230,   388,   682,   251,   564,   467,   146,
     467,   542,   189,   562,   525,   270,   535,   525,    22,   131,
     323,   324,   350,   479,   480,   481,   487,   488,   146,   574,
     146,   574,   532,   547,   532,   468,   471,   528,   745,   468,
     471,   456,   469,   388,   337,    83,   388,   491,   337,   388,
     388,   388,   337,   367,   368,   592,   745,   557,   583,   738,
     558,   759,   377,   562,   738,   738,   811,   738,   468,   471,
     264,   537,   264,   266,   536,   740,   430,   810,   537,    35,
     146,   738,   749,   146,   586,   580,   591,   780,   745,   745,
     256,   562,   460,   562,   745,   745,   465,   744,   466,   744,
     178,   237,   681,   237,   681,   681,   744,   240,   468,   468,
     385,   682,   137,   659,   468,   682,   682,   708,   682,   719,
     659,   683,   683,   683,   683,   126,   251,   261,   683,   683,
     683,   683,   683,   683,   683,   683,   683,   683,   682,   682,
     720,   719,   679,   679,   659,   468,   468,   468,   709,   468,
     472,   745,   682,    32,    32,   682,   468,   682,   164,   467,
     712,   682,   468,   139,   683,   683,   139,   139,   682,   682,
     609,   427,   467,   695,   746,   604,   604,   604,   604,   738,
     738,   738,   595,   650,   746,   164,   595,   639,   640,    35,
     641,   642,   746,   471,    91,   165,   195,   210,   219,   245,
     329,   644,   642,    35,   641,   643,   746,   453,   654,   467,
     731,   682,   172,   624,   608,   608,   608,   419,   468,   624,
     468,   466,   468,   682,   326,   501,   416,   468,   471,   732,
      81,   501,   468,   471,   498,   798,   682,   467,   613,   156,
     215,   267,   738,   740,   468,   146,   562,   549,   562,   525,
     552,   468,   113,   193,   249,   251,   548,   467,   559,   168,
     111,   179,   251,   537,   517,   104,   111,   168,   251,   366,
     369,   519,   537,   350,   481,   398,   740,   746,   485,   561,
     250,   268,   351,   458,   459,   518,   526,   563,   659,   706,
     745,   748,   815,   753,   740,   740,   740,   740,   740,   740,
     740,   740,   740,   740,   517,   592,   467,   766,   180,   738,
     468,   512,   467,    35,   546,   544,   553,    77,   514,   104,
     249,   594,   552,   411,   763,   574,   811,   468,   471,   562,
     744,   466,   466,   468,   682,   468,   468,   720,   164,   126,
     261,   467,   468,   680,   682,   682,   682,   712,   468,   682,
      32,    32,   682,   682,   139,   468,   468,   682,   696,   746,
     738,   738,   738,   738,   642,   643,   731,   467,   468,     5,
     746,   747,   467,   639,   210,   275,   645,   639,   645,   210,
     644,   645,   210,   379,   648,   467,   746,   467,   273,   710,
      53,   175,   628,   468,   468,   468,   711,   745,   628,   745,
     735,   594,   279,   594,   497,   266,   467,   495,   456,   509,
     501,   708,   525,   549,   468,   468,   430,   555,   114,   182,
     191,   113,   413,   532,   550,    65,    71,    83,   111,   113,
     168,   193,   251,   256,   298,   313,   404,   530,   531,   543,
      29,    53,   569,   180,   256,   518,   682,   569,   256,   458,
     459,   521,   746,   659,   574,   574,   748,   750,   456,   388,
     388,   584,   411,   579,   581,   562,    35,   251,   467,   766,
     556,   145,   594,   143,   187,   536,   116,   131,   297,   810,
     104,   430,   808,   266,   746,   762,   467,    35,   591,   466,
     683,   164,   467,   712,   468,   682,   682,   682,   468,   285,
     697,   651,   652,   687,   641,   467,   739,   639,   266,   411,
     646,   639,   210,   639,   742,   656,   657,   746,   467,   656,
     746,   608,   467,   625,   626,   627,   682,   682,   429,   691,
     608,   691,   502,    83,   467,   500,   508,   687,   746,   127,
     682,   468,   313,   555,   467,   545,   525,   468,   471,   467,
     749,   740,   683,   569,   114,   182,   113,   256,   211,   738,
     555,   111,    35,   146,    71,   658,   750,   462,   526,   740,
     740,   517,   118,   468,   594,   146,    35,   468,   740,   810,
      26,    76,    84,   112,   179,   190,   366,   369,   540,   540,
     334,   334,    57,    65,   225,   738,   508,   683,   712,   468,
      53,   608,   468,   471,    35,   653,   739,   468,   682,   467,
     639,   646,   467,   468,   471,   659,   656,   468,   468,   468,
     471,   692,   693,   746,   468,   416,   740,   682,   468,   471,
      71,   504,   504,   252,   409,   738,   525,   551,   554,   753,
     532,   682,   251,   531,    35,   555,   558,   179,   749,   411,
     484,   462,   398,   584,   745,   766,   808,   738,   594,   544,
     514,    65,   269,    65,   763,   468,   468,   709,   306,   334,
     698,   654,   651,   467,   468,   739,   709,   657,   658,   468,
     626,   471,    35,   594,   468,   655,   500,   749,   505,   749,
     505,   350,   558,   468,   471,   456,   468,   179,   233,   566,
     467,   527,   682,   398,    35,   467,   808,   536,   810,   269,
     269,   467,   766,    47,    94,   400,   682,   699,   700,   699,
     468,   656,   468,   468,   693,   695,   504,   612,   612,   507,
     566,   554,   526,   249,   538,   527,   165,   284,   356,   266,
     533,   534,   560,   516,   594,   508,   655,   700,   333,   158,
     293,   158,   293,   468,   320,   649,   505,   613,   613,   655,
     534,   191,   116,   409,   266,   560,   266,   533,   468,   808,
     468,    32,   467,   612,   525,    56,   249,   325,   350,   529,
     529,   766,   700,   682,   613,    21,   111,   256,   655,   468
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */

#define YYFAIL		goto yyerrlab

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)					\
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    {								\
      yychar = (Token);						\
      yylval = (Value);						\
      yytoken = YYTRANSLATE (yychar);				\
      YYPOPSTACK (1);						\
      goto yybackup;						\
    }								\
  else								\
    {								\
      yyerror (&yylloc, yyscanner, YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (YYID (0))


#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#define YYRHSLOC(Rhs, K) ((Rhs)[K])
#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)				\
    do									\
      if (YYID (N))                                                    \
	{								\
	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
	}								\
      else								\
	{								\
	  (Current).first_line   = (Current).last_line   =		\
	    YYRHSLOC (Rhs, 0).last_line;				\
	  (Current).first_column = (Current).last_column =		\
	    YYRHSLOC (Rhs, 0).last_column;				\
	}								\
    while (YYID (0))
#endif


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
#  define YY_LOCATION_PRINT(File, Loc)			\
     fprintf (File, "%d.%d-%d.%d",			\
	      (Loc).first_line, (Loc).first_column,	\
	      (Loc).last_line,  (Loc).last_column)
# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */

#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, &yylloc, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval, &yylloc, yyscanner)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (YYID (0))

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
do {									  \
  if (yydebug)								  \
    {									  \
      YYFPRINTF (stderr, "%s ", Title);					  \
      yy_symbol_print (stderr,						  \
		  Type, Value, Location, yyscanner); \
      YYFPRINTF (stderr, "\n");						  \
    }									  \
} while (YYID (0))


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (!yyvaluep)
    return;
  YYUSE (yylocationp);
  YYUSE (yyscanner);
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# else
  YYUSE (yyoutput);
# endif
  switch (yytype)
    {
      default:
	break;
    }
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
#else
static void
yy_stack_print (bottom, top)
    yytype_int16 *bottom;
    yytype_int16 *top;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (; bottom <= top; ++bottom)
    YYFPRINTF (stderr, " %d", *bottom);
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (YYID (0))


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_reduce_print (YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, core_yyscan_t yyscanner)
#else
static void
yy_reduce_print (yyvsp, yylsp, yyrule, yyscanner)
    YYSTYPE *yyvsp;
    YYLTYPE *yylsp;
    int yyrule;
    core_yyscan_t yyscanner;
#endif
{
  int yynrhs = yyr2[yyrule];
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
	     yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      fprintf (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
		       &(yyvsp[(yyi + 1) - (yynrhs)])
		       , &(yylsp[(yyi + 1) - (yynrhs)])		       , yyscanner);
      fprintf (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (yyvsp, yylsp, Rule, yyscanner); \
} while (YYID (0))

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif



#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static YYSIZE_T
yystrlen (const char *yystr)
#else
static YYSIZE_T
yystrlen (yystr)
    const char *yystr;
#endif
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static char *
yystpcpy (char *yydest, const char *yysrc)
#else
static char *
yystpcpy (yydest, yysrc)
    char *yydest;
    const char *yysrc;
#endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into YYRESULT an error message about the unexpected token
   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
   including the terminating null byte.  If YYRESULT is null, do not
   copy anything; just return the number of bytes that would be
   copied.  As a special case, return 0 if an ordinary "syntax error"
   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
   size calculation.  */
static YYSIZE_T
yysyntax_error (char *yyresult, int yystate, int yychar)
{
  int yyn = yypact[yystate];

  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
    return 0;
  else
    {
      int yytype = YYTRANSLATE (yychar);
      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
      YYSIZE_T yysize = yysize0;
      YYSIZE_T yysize1;
      int yysize_overflow = 0;
      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
      int yyx;

# if 0
      /* This is so xgettext sees the translatable formats that are
	 constructed on the fly.  */
      YY_("syntax error, unexpected %s");
      YY_("syntax error, unexpected %s, expecting %s");
      YY_("syntax error, unexpected %s, expecting %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
# endif
      char *yyfmt;
      char const *yyf;
      static char const yyunexpected[] = "syntax error, unexpected %s";
      static char const yyexpecting[] = ", expecting %s";
      static char const yyor[] = " or %s";
      char yyformat[sizeof yyunexpected
		    + sizeof yyexpecting - 1
		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
		       * (sizeof yyor - 1))];
      char const *yyprefix = yyexpecting;

      /* Start YYX at -YYN if negative to avoid negative indexes in
	 YYCHECK.  */
      int yyxbegin = yyn < 0 ? -yyn : 0;

      /* Stay within bounds of both yycheck and yytname.  */
      int yychecklim = YYLAST - yyn + 1;
      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
      int yycount = 1;

      yyarg[0] = yytname[yytype];
      yyfmt = yystpcpy (yyformat, yyunexpected);

      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
	  {
	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
	      {
		yycount = 1;
		yysize = yysize0;
		yyformat[sizeof yyunexpected - 1] = '\0';
		break;
	      }
	    yyarg[yycount++] = yytname[yyx];
	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
	    yysize_overflow |= (yysize1 < yysize);
	    yysize = yysize1;
	    yyfmt = yystpcpy (yyfmt, yyprefix);
	    yyprefix = yyor;
	  }

      yyf = YY_(yyformat);
      yysize1 = yysize + yystrlen (yyf);
      yysize_overflow |= (yysize1 < yysize);
      yysize = yysize1;

      if (yysize_overflow)
	return YYSIZE_MAXIMUM;

      if (yyresult)
	{
	  /* Avoid sprintf, as that infringes on the user's name space.
	     Don't have undefined behavior even if the translation
	     produced a string with the wrong number of "%s"s.  */
	  char *yyp = yyresult;
	  int yyi = 0;
	  while ((*yyp = *yyf) != '\0')
	    {
	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
		{
		  yyp += yytnamerr (yyp, yyarg[yyi++]);
		  yyf += 2;
		}
	      else
		{
		  yyp++;
		  yyf++;
		}
	    }
	}
      return yysize;
    }
}
#endif /* YYERROR_VERBOSE */


/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, core_yyscan_t yyscanner)
#else
static void
yydestruct (yymsg, yytype, yyvaluep, yylocationp, yyscanner)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
    YYLTYPE *yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (yyscanner);

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
	break;
    }
}


/* Prevent warnings from -Wmissing-prototypes.  */

#ifdef YYPARSE_PARAM
#if defined __STDC__ || defined __cplusplus
int yyparse (void *YYPARSE_PARAM);
#else
int yyparse ();
#endif
#else /* ! YYPARSE_PARAM */
#if defined __STDC__ || defined __cplusplus
int yyparse (core_yyscan_t yyscanner);
#else
int yyparse ();
#endif
#endif /* ! YYPARSE_PARAM */






/*----------.
| yyparse.  |
`----------*/

#ifdef YYPARSE_PARAM
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void *YYPARSE_PARAM)
#else
int
yyparse (YYPARSE_PARAM)
    void *YYPARSE_PARAM;
#endif
#else /* ! YYPARSE_PARAM */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (core_yyscan_t yyscanner)
#else
int
yyparse (yyscanner)
    core_yyscan_t yyscanner;
#endif
#endif
{
  /* The look-ahead symbol.  */
int yychar;

/* The semantic value of the look-ahead symbol.  */
YYSTYPE yylval;

/* Number of syntax errors so far.  */
int yynerrs;
/* Location data for the look-ahead symbol.  */
YYLTYPE yylloc;

  int yystate;
  int yyn;
  int yyresult;
  /* Number of tokens to shift before error messages enabled.  */
  int yyerrstatus;
  /* Look-ahead token as an internal (translated) token number.  */
  int yytoken = 0;
#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

  /* Three stacks and their tools:
     `yyss': related to states,
     `yyvs': related to semantic values,
     `yyls': related to locations.

     Refer to the stacks thru separate pointers, to allow yyoverflow
     to reallocate them elsewhere.  */

  /* The state stack.  */
  yytype_int16 yyssa[YYINITDEPTH];
  yytype_int16 *yyss = yyssa;
  yytype_int16 *yyssp;

  /* The semantic value stack.  */
  YYSTYPE yyvsa[YYINITDEPTH];
  YYSTYPE *yyvs = yyvsa;
  YYSTYPE *yyvsp;

  /* The location stack.  */
  YYLTYPE yylsa[YYINITDEPTH];
  YYLTYPE *yyls = yylsa;
  YYLTYPE *yylsp;
  /* The locations where the error started and ended.  */
  YYLTYPE yyerror_range[2];

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  YYSIZE_T yystacksize = YYINITDEPTH;

  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY;		/* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */

  yyssp = yyss;
  yyvsp = yyvs;
  yylsp = yyls;
#if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  /* Initialize the default location before parsing starts.  */
  yylloc.first_line   = yylloc.last_line   = 1;
  yylloc.first_column = yylloc.last_column = 0;
#endif

  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack.  Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	yytype_int16 *yyss1 = yyss;
	YYLTYPE *yyls1 = yyls;

	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),
		    &yyls1, yysize * sizeof (*yylsp),
		    &yystacksize);
	yyls = yyls1;
	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	yytype_int16 *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss);
	YYSTACK_RELOCATE (yyvs);
	YYSTACK_RELOCATE (yyls);
#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     look-ahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to look-ahead token.  */
  yyn = yypact[yystate];
  if (yyn == YYPACT_NINF)
    goto yydefault;

  /* Not known => get a look-ahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yyn == 0 || yyn == YYTABLE_NINF)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the look-ahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token unless it is eof.  */
  if (yychar != YYEOF)
    yychar = YYEMPTY;

  yystate = yyn;
  *++yyvsp = yylval;
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 452 "third_party/libpg_query/grammar/grammar.y"
    {
				pg_yyget_extra(yyscanner)->parsetree = (yyvsp[(1) - (1)].list);
			;}
    break;

  case 3:
#line 468 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (3)].list) != NIL)
					{
						/* update length of previous stmt */
						updateRawStmtEnd(llast_node(PGRawStmt, (yyvsp[(1) - (3)].list)), (yylsp[(2) - (3)]));
					}
					if ((yyvsp[(3) - (3)].node) != NULL)
						(yyval.list) = lappend((yyvsp[(1) - (3)].list), makeRawStmt((yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]) + 1));
					else
						(yyval.list) = (yyvsp[(1) - (3)].list);
				;}
    break;

  case 4:
#line 480 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (1)].node) != NULL)
						(yyval.list) = list_make1(makeRawStmt((yyvsp[(1) - (1)].node), 0));
					else
						(yyval.list) = NIL;
				;}
    break;

  case 36:
#line 520 "third_party/libpg_query/grammar/grammar.y"
    { (yyval.node) = NULL; ;}
    break;

  case 37:
#line 10 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 38:
#line 19 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 39:
#line 28 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 40:
#line 37 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 41:
#line 46 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 42:
#line 55 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 43:
#line 64 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 44:
#line 73 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 45:
#line 86 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 46:
#line 88 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 47:
#line 93 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(3) - (3)].node); ;}
    break;

  case 48:
#line 94 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 49:
#line 100 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 50:
#line 104 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 51:
#line 108 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					if (strcmp((yyvsp[(2) - (2)].defelt)->defname, "as") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "restart") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "owned_by") == 0)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("sequence option \"%s\" not supported here", (yyvsp[(2) - (2)].defelt)->defname),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
				;}
    break;

  case 52:
#line 119 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("generated", (PGNode *) makeInteger((yyvsp[(3) - (3)].ival)), (yylsp[(1) - (3)]));
				;}
    break;

  case 53:
#line 127 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 54:
#line 131 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 55:
#line 140 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(2) - (2)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 56:
#line 149 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(5) - (5)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 57:
#line 158 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(3) - (3)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 58:
#line 167 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(6) - (6)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 59:
#line 176 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ColumnDefault;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (yyvsp[(4) - (4)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 60:
#line 185 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 61:
#line 193 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 62:
#line 201 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStatistics;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeInteger((yyvsp[(6) - (6)].ival));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 63:
#line 210 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 64:
#line 219 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 65:
#line 228 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStorage;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeString((yyvsp[(6) - (6)].str));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 66:
#line 237 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);

					c->contype = PG_CONSTR_IDENTITY;
					c->generated_when = (yyvsp[(6) - (9)].ival);
					c->options = (yyvsp[(9) - (9)].list);
					c->location = (yylsp[(5) - (9)]);

					n->subtype = PG_AT_AddIdentity;
					n->name = (yyvsp[(3) - (9)].str);
					n->def = (PGNode *) c;

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 67:
#line 254 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetIdentity;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 68:
#line 263 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (5)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 69:
#line 272 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (7)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 70:
#line 281 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 71:
#line 291 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 72:
#line 304 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGColumnDef *def = makeNode(PGColumnDef);
					n->subtype = PG_AT_AlterColumnType;
					n->name = (yyvsp[(3) - (8)].str);
					n->def = (PGNode *) def;
					/* We only use these fields of the PGColumnDef node */
					def->typeName = (yyvsp[(6) - (8)].typnam);
					def->collClause = (PGCollateClause *) (yyvsp[(7) - (8)].node);
					def->raw_default = (yyvsp[(8) - (8)].node);
					def->location = (yylsp[(3) - (8)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 73:
#line 319 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AlterColumnGenericOptions;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 74:
#line 328 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddConstraint;
					n->def = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 75:
#line 336 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);
					n->subtype = PG_AT_AlterConstraint;
					n->def = (PGNode *) c;
					c->contype = PG_CONSTR_FOREIGN; /* others not supported, yet */
					c->conname = (yyvsp[(3) - (4)].str);
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "ALTER CONSTRAINT statement",
									&c->deferrable,
									&c->initdeferred,
									NULL, NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 76:
#line 351 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ValidateConstraint;
					n->name = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 77:
#line 359 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 78:
#line 369 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 79:
#line 379 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 80:
#line 386 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetUnLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 81:
#line 393 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 82:
#line 401 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 83:
#line 408 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_GenericOptions;
					n->def = (PGNode *)(yyvsp[(1) - (1)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 84:
#line 418 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 85:
#line 419 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 86:
#line 425 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(1) - (1)].defelt);
				;}
    break;

  case 87:
#line 429 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_SET;
				;}
    break;

  case 88:
#line 434 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_ADD;
				;}
    break;

  case 89:
#line 439 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElemExtended(NULL, (yyvsp[(2) - (2)].str), NULL, DEFELEM_DROP, (yylsp[(2) - (2)]));
				;}
    break;

  case 90:
#line 446 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 91:
#line 447 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 92:
#line 452 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 93:
#line 456 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 1; ;}
    break;

  case 94:
#line 457 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 0; ;}
    break;

  case 95:
#line 8 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(2) - (2)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 96:
#line 14 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(3) - (3)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 97:
#line 20 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 98:
#line 26 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 99:
#line 7 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SCHEMA;
					n->subname = (yyvsp[(3) - (6)].str);
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 100:
#line 16 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 101:
#line 26 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 102:
#line 36 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 103:
#line 46 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 104:
#line 56 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 105:
#line 66 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 106:
#line 76 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 107:
#line 86 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 108:
#line 96 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 109:
#line 107 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 110:
#line 118 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 111:
#line 128 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 112:
#line 140 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = COLUMN; ;}
    break;

  case 113:
#line 141 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = 0; ;}
    break;

  case 114:
#line 10 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(5) - (7)].istmt)->relation = (yyvsp[(4) - (7)].range);
					(yyvsp[(5) - (7)].istmt)->onConflictClause = (yyvsp[(6) - (7)].onconflict);
					(yyvsp[(5) - (7)].istmt)->returningList = (yyvsp[(7) - (7)].list);
					(yyvsp[(5) - (7)].istmt)->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *) (yyvsp[(5) - (7)].istmt);
				;}
    break;

  case 115:
#line 22 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 116:
#line 28 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->override = (yyvsp[(2) - (4)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 117:
#line 35 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (4)].list);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 118:
#line 41 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (7)].list);
					(yyval.istmt)->override = (yyvsp[(5) - (7)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(7) - (7)].node);
				;}
    break;

  case 119:
#line 48 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = NULL;
				;}
    break;

  case 120:
#line 58 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 121:
#line 62 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].range)->alias = makeAlias((yyvsp[(3) - (3)].str), NIL);
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 122:
#line 71 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = (yyvsp[(2) - (4)].list);
					(yyval.infer)->whereClause = (yyvsp[(4) - (4)].node);
					(yyval.infer)->conname = NULL;
					(yyval.infer)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 123:
#line 80 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = NIL;
					(yyval.infer)->whereClause = NULL;
					(yyval.infer)->conname = (yyvsp[(3) - (3)].str);
					(yyval.infer)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 124:
#line 88 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = NULL;
				;}
    break;

  case 125:
#line 95 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = (yyvsp[(1) - (1)].with); ;}
    break;

  case 126:
#line 96 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = NULL; ;}
    break;

  case 127:
#line 102 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 128:
#line 114 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].target)->val = (PGNode *) (yyvsp[(3) - (3)].node);
					(yyval.list) = list_make1((yyvsp[(1) - (3)].target));
				;}
    break;

  case 129:
#line 119 "third_party/libpg_query/grammar/statements/insert.y"
    {
					int ncolumns = list_length((yyvsp[(2) - (5)].list));
					int i = 1;
					PGListCell *col_cell;

					/* Create a PGMultiAssignRef source for each target */
					foreach(col_cell, (yyvsp[(2) - (5)].list))
					{
						PGResTarget *res_col = (PGResTarget *) lfirst(col_cell);
						PGMultiAssignRef *r = makeNode(PGMultiAssignRef);

						r->source = (PGNode *) (yyvsp[(5) - (5)].node);
						r->colno = i;
						r->ncolumns = ncolumns;
						res_col->val = (PGNode *) r;
						i++;
					}

					(yyval.list) = (yyvsp[(2) - (5)].list);
				;}
    break;

  case 130:
#line 144 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_UPDATE;
					(yyval.onconflict)->infer = (yyvsp[(3) - (8)].infer);
					(yyval.onconflict)->targetList = (yyvsp[(7) - (8)].list);
					(yyval.onconflict)->whereClause = (yyvsp[(8) - (8)].node);
					(yyval.onconflict)->location = (yylsp[(1) - (8)]);
				;}
    break;

  case 131:
#line 154 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_NOTHING;
					(yyval.onconflict)->infer = (yyvsp[(3) - (5)].infer);
					(yyval.onconflict)->targetList = NIL;
					(yyval.onconflict)->whereClause = NULL;
					(yyval.onconflict)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 132:
#line 163 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = NULL;
				;}
    break;

  case 133:
#line 170 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = (yyvsp[(1) - (5)].str);
					(yyval.ielem)->expr = NULL;
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 134:
#line 181 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(1) - (5)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 135:
#line 192 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(2) - (7)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(4) - (7)].list);
					(yyval.ielem)->opclass = (yyvsp[(5) - (7)].list);
					(yyval.ielem)->ordering = (yyvsp[(6) - (7)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(7) - (7)].nullorder);
				;}
    break;

  case 136:
#line 206 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 137:
#line 207 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 138:
#line 213 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = PG_OVERRIDING_USER_VALUE; ;}
    break;

  case 139:
#line 214 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = OVERRIDING_SYSTEM_VALUE; ;}
    break;

  case 140:
#line 219 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 141:
#line 220 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].target)); ;}
    break;

  case 142:
#line 226 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 143:
#line 227 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 144:
#line 231 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 145:
#line 232 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 146:
#line 238 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 147:
#line 240 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 148:
#line 245 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 149:
#line 246 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_concat((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].list)); ;}
    break;

  case 150:
#line 250 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].ielem)); ;}
    break;

  case 151:
#line 251 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].ielem)); ;}
    break;

  case 152:
#line 257 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;	/* upper production sets this */
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 153:
#line 8 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_NOTHING;
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 154:
#line 15 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_ASSIGNMENT;
					n->name = (yyvsp[(2) - (4)].str);
					n->args = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 155:
#line 23 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_CALL;
					n->name = (yyvsp[(2) - (5)].str);
					n->args = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 156:
#line 10 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(4) - (5)].range)->relpersistence = (yyvsp[(2) - (5)].ival);
					n->sequence = (yyvsp[(4) - (5)].range);
					n->options = (yyvsp[(5) - (5)].list);
					n->ownerId = InvalidOid;
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 157:
#line 20 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(7) - (8)].range)->relpersistence = (yyvsp[(2) - (8)].ival);
					n->sequence = (yyvsp[(7) - (8)].range);
					n->options = (yyvsp[(8) - (8)].list);
					n->ownerId = InvalidOid;
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 158:
#line 32 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 159:
#line 33 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = NIL; ;}
    break;

  case 160:
#line 8 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(2) - (3)].str);
					n->params = (yyvsp[(3) - (3)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 161:
#line 16 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(7) - (9)].str);
					n->params = (yyvsp[(8) - (9)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(4) - (9)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = false;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (9)].into)->rel->relpersistence = (yyvsp[(2) - (9)].ival);
					(yyvsp[(4) - (9)].into)->skipData = !((yyvsp[(9) - (9)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 162:
#line 33 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(10) - (12)].str);
					n->params = (yyvsp[(11) - (12)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(7) - (12)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = true;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (12)].into)->rel->relpersistence = (yyvsp[(2) - (12)].ival);
					(yyvsp[(7) - (12)].into)->skipData = !((yyvsp[(12) - (12)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 163:
#line 51 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 164:
#line 52 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = NIL; ;}
    break;

  case 165:
#line 10 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(3) - (4)].range);
					n->options = (yyvsp[(4) - (4)].list);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 166:
#line 18 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(5) - (6)].range);
					n->options = (yyvsp[(6) - (6)].list);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 167:
#line 29 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 168:
#line 30 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 169:
#line 34 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 170:
#line 35 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 171:
#line 36 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 172:
#line 41 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(1) - (1)].str)); ;}
    break;

  case 173:
#line 42 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(2) - (2)].str)); ;}
    break;

  case 174:
#line 44 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.value) = makeFloat((yyvsp[(2) - (2)].str));
					doNegateFloat((yyval.value));
				;}
    break;

  case 175:
#line 48 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeInteger((yyvsp[(1) - (1)].ival)); ;}
    break;

  case 176:
#line 53 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("as", (PGNode *)(yyvsp[(2) - (2)].typnam), (yylsp[(1) - (2)]));
				;}
    break;

  case 177:
#line 57 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cache", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 178:
#line 61 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 179:
#line 65 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(false), (yylsp[(1) - (2)]));
				;}
    break;

  case 180:
#line 69 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("increment", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 181:
#line 73 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 182:
#line 77 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 183:
#line 81 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 184:
#line 85 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 185:
#line 89 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("owned_by", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 186:
#line 93 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					/* not documented, only used by pg_dump */
					(yyval.defelt) = makeDefElem("sequence_name", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 187:
#line 98 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("start", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 188:
#line 102 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 189:
#line 106 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 190:
#line 112 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 191:
#line 113 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 192:
#line 117 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 193:
#line 118 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = + (yyvsp[(2) - (2)].ival); ;}
    break;

  case 194:
#line 119 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = - (yyvsp[(2) - (2)].ival); ;}
    break;

  case 195:
#line 3 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 196:
#line 10 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_BEGIN;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 197:
#line 16 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_START;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 198:
#line 22 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 199:
#line 29 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 200:
#line 36 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 201:
#line 45 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 202:
#line 46 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 203:
#line 47 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 204:
#line 9 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(4) - (9)].range)->relpersistence = (yyvsp[(2) - (9)].ival);
					n->relation = (yyvsp[(4) - (9)].range);
					n->tableElts = (yyvsp[(6) - (9)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(8) - (9)].list);
					n->oncommit = (yyvsp[(9) - (9)].oncommit);
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 205:
#line 24 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(7) - (12)].range)->relpersistence = (yyvsp[(2) - (12)].ival);
					n->relation = (yyvsp[(7) - (12)].range);
					n->tableElts = (yyvsp[(9) - (12)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(11) - (12)].list);
					n->oncommit = (yyvsp[(12) - (12)].oncommit);
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 206:
#line 41 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 207:
#line 43 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * We must complain about conflicting options.
					 * We could, but choose not to, complain about redundant
					 * options (ie, where $2's bit is already set in $1).
					 */
					int		newspec = (yyvsp[(1) - (2)].ival) | (yyvsp[(2) - (2)].ival);

					/* special message for this case */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED)) == (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("constraint declared INITIALLY DEFERRED must be DEFERRABLE"),
								 parser_errposition((yylsp[(2) - (2)]))));
					/* generic message for other conflicts */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE)) == (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE) ||
						(newspec & (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED)) == (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("conflicting constraint properties"),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.ival) = newspec;
				;}
    break;

  case 208:
#line 69 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].typnam); ;}
    break;

  case 209:
#line 70 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 210:
#line 71 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].list); ;}
    break;

  case 211:
#line 72 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].value); ;}
    break;

  case 212:
#line 73 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 213:
#line 74 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 214:
#line 78 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 215:
#line 79 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 216:
#line 84 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 217:
#line 89 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_NOACTION; ;}
    break;

  case 218:
#line 90 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_RESTRICT; ;}
    break;

  case 219:
#line 91 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_CASCADE; ;}
    break;

  case 220:
#line 92 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETNULL; ;}
    break;

  case 221:
#line 93 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETDEFAULT; ;}
    break;

  case 222:
#line 99 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 223:
#line 105 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 224:
#line 106 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 225:
#line 108 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * Note: the PGCollateClause is momentarily included in
					 * the list built by ColQualList, but we split it out
					 * again in SplitColQualList.
					 */
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 226:
#line 125 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NOTNULL;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 227:
#line 132 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NULL;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 228:
#line 139 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (2)]);
					n->keys = NULL;
					n->options = (yyvsp[(2) - (2)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 229:
#line 149 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NULL;
					n->options = (yyvsp[(3) - (3)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 230:
#line 159 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->is_no_inherit = (yyvsp[(5) - (5)].boolean);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					n->skip_validation = false;
					n->initially_valid = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 231:
#line 171 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_DEFAULT;
					n->location = (yylsp[(1) - (2)]);
					n->raw_expr = (yyvsp[(2) - (2)].node);
					n->cooked_expr = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 232:
#line 180 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_IDENTITY;
					n->generated_when = (yyvsp[(2) - (5)].ival);
					n->options = (yyvsp[(5) - (5)].list);
					n->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 233:
#line 189 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (5)]);
					n->pktable			= (yyvsp[(2) - (5)].range);
					n->fk_attrs			= NIL;
					n->pk_attrs			= (yyvsp[(3) - (5)].list);
					n->fk_matchtype		= (yyvsp[(4) - (5)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(5) - (5)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(5) - (5)].ival) & 0xFF);
					n->skip_validation  = false;
					n->initially_valid  = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 234:
#line 208 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 235:
#line 214 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 236:
#line 220 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (1)].ival) << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 237:
#line 222 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | ((yyvsp[(1) - (1)].ival) & 0xFF); ;}
    break;

  case 238:
#line 224 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (2)].ival) << 8) | ((yyvsp[(2) - (2)].ival) & 0xFF); ;}
    break;

  case 239:
#line 226 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(2) - (2)].ival) << 8) | ((yyvsp[(1) - (2)].ival) & 0xFF); ;}
    break;

  case 240:
#line 228 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 241:
#line 233 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 242:
#line 234 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 243:
#line 238 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = ONCOMMIT_DROP; ;}
    break;

  case 244:
#line 239 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_DELETE_ROWS; ;}
    break;

  case 245:
#line 240 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_PRESERVE_ROWS; ;}
    break;

  case 246:
#line 241 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_NOOP; ;}
    break;

  case 247:
#line 246 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 248:
#line 250 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = true; ;}
    break;

  case 249:
#line 251 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = false; ;}
    break;

  case 250:
#line 257 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 251:
#line 263 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 252:
#line 268 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_COMMENTS; ;}
    break;

  case 253:
#line 269 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_CONSTRAINTS; ;}
    break;

  case 254:
#line 270 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_DEFAULTS; ;}
    break;

  case 255:
#line 271 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_IDENTITY; ;}
    break;

  case 256:
#line 272 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_INDEXES; ;}
    break;

  case 257:
#line 273 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STATISTICS; ;}
    break;

  case 258:
#line 274 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STORAGE; ;}
    break;

  case 259:
#line 275 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_ALL; ;}
    break;

  case 260:
#line 281 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 261:
#line 282 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 262:
#line 286 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
    break;

  case 263:
#line 292 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRABLE;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 264:
#line 299 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_NOT_DEFERRABLE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 265:
#line 306 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRED;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 266:
#line 313 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_IMMEDIATE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 267:
#line 324 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 268:
#line 325 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(true), (yylsp[(1) - (2)]))); ;}
    break;

  case 269:
#line 326 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(false), (yylsp[(1) - (2)]))); ;}
    break;

  case 270:
#line 327 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 271:
#line 331 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 272:
#line 336 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 273:
#line 337 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) & ~(yyvsp[(3) - (3)].ival); ;}
    break;

  case 274:
#line 338 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 275:
#line 343 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 276:
#line 348 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_DEFERRABLE; ;}
    break;

  case 277:
#line 349 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_DEFERRABLE; ;}
    break;

  case 278:
#line 350 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_IMMEDIATE; ;}
    break;

  case 279:
#line 351 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_DEFERRED; ;}
    break;

  case 280:
#line 352 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_VALID; ;}
    break;

  case 281:
#line 353 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NO_INHERIT; ;}
    break;

  case 282:
#line 359 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (4)].str);
					n->typeName = (yyvsp[(2) - (4)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collOid = InvalidOid;
					n->fdwoptions = (yyvsp[(3) - (4)].list);
					SplitColQualList((yyvsp[(4) - (4)].list), &n->constraints, &n->collClause,
									 yyscanner);
					n->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 283:
#line 382 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 284:
#line 386 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 285:
#line 392 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 286:
#line 393 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 287:
#line 397 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 288:
#line 401 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 289:
#line 402 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 290:
#line 403 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 291:
#line 408 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 292:
#line 412 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 293:
#line 419 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 294:
#line 420 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 295:
#line 425 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 296:
#line 426 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 297:
#line 431 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str));
				;}
    break;

  case 298:
#line 438 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 299:
#line 439 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 300:
#line 444 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 301:
#line 445 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 302:
#line 449 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 303:
#line 455 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 304:
#line 459 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 305:
#line 463 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (5)].str), (yyvsp[(3) - (5)].str), (PGNode *) (yyvsp[(5) - (5)].node),
											 PG_DEFELEM_UNSPEC, (yylsp[(1) - (5)]));
				;}
    break;

  case 306:
#line 468 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str), NULL, PG_DEFELEM_UNSPEC, (yylsp[(1) - (3)]));
				;}
    break;

  case 307:
#line 475 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 308:
#line 476 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 309:
#line 480 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 310:
#line 482 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (4)].str)), (yyvsp[(2) - (4)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 311:
#line 488 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(2) - (5)].str)), (yyvsp[(3) - (5)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->setof = true;
					(yyval.typnam)->location = (yylsp[(2) - (5)]);
				;}
    break;

  case 312:
#line 499 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					processCASbits((yyvsp[(5) - (5)].ival), (yylsp[(5) - (5)]), "CHECK",
								   NULL, NULL, &n->skip_validation,
								   &n->is_no_inherit, yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 313:
#line 513 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (6)]);
					n->keys = (yyvsp[(3) - (6)].list);
					n->options = (yyvsp[(5) - (6)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(6) - (6)].ival), (yylsp[(6) - (6)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 314:
#line 526 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(2) - (3)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(3) - (3)].ival), (yylsp[(3) - (3)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 315:
#line 541 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (7)]);
					n->keys = (yyvsp[(4) - (7)].list);
					n->options = (yyvsp[(6) - (7)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(7) - (7)].ival), (yylsp[(7) - (7)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 316:
#line 554 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (4)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(3) - (4)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 317:
#line 569 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (11)]);
					n->pktable			= (yyvsp[(7) - (11)].range);
					n->fk_attrs			= (yyvsp[(4) - (11)].list);
					n->pk_attrs			= (yyvsp[(8) - (11)].list);
					n->fk_matchtype		= (yyvsp[(9) - (11)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(10) - (11)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(10) - (11)].ival) & 0xFF);
					processCASbits((yyvsp[(11) - (11)].ival), (yylsp[(11) - (11)]), "FOREIGN KEY",
								   &n->deferrable, &n->initdeferred,
								   &n->skip_validation, NULL,
								   yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 318:
#line 591 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 319:
#line 595 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 320:
#line 602 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_FULL;
			;}
    break;

  case 321:
#line 606 "third_party/libpg_query/grammar/statements/create.y"
    {
				ereport(ERROR,
						(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
						 errmsg("MATCH PARTIAL not yet implemented"),
						 parser_errposition((yylsp[(1) - (2)]))));
				(yyval.ival) = PG_FKCONSTR_MATCH_PARTIAL;
			;}
    break;

  case 322:
#line 614 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 323:
#line 618 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 324:
#line 626 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGTableLikeClause *n = makeNode(PGTableLikeClause);
					n->relation = (yyvsp[(2) - (3)].range);
					n->options = (yyvsp[(3) - (3)].ival);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 325:
#line 635 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 326:
#line 636 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 327:
#line 637 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 328:
#line 638 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 329:
#line 640 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 330:
#line 647 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 331:
#line 653 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_UNLOGGED; ;}
    break;

  case 332:
#line 654 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = RELPERSISTENCE_PERMANENT; ;}
    break;

  case 333:
#line 659 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_ATTRIBUTE_IDENTITY_ALWAYS; ;}
    break;

  case 334:
#line 660 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ATTRIBUTE_IDENTITY_BY_DEFAULT; ;}
    break;

  case 335:
#line 10 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 336:
#line 20 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 337:
#line 30 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 338:
#line 40 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 339:
#line 50 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->objects = list_make1(lappend((yyvsp[(5) - (6)].list), makeString((yyvsp[(3) - (6)].str))));
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 340:
#line 60 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (8)].objtype);
					n->objects = list_make1(lappend((yyvsp[(7) - (8)].list), makeString((yyvsp[(5) - (8)].str))));
					n->behavior = (yyvsp[(8) - (8)].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 341:
#line 73 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TABLE; ;}
    break;

  case 342:
#line 74 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SEQUENCE; ;}
    break;

  case 343:
#line 75 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_VIEW; ;}
    break;

  case 344:
#line 76 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_MATVIEW; ;}
    break;

  case 345:
#line 77 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_INDEX; ;}
    break;

  case 346:
#line 78 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_TABLE; ;}
    break;

  case 347:
#line 79 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_COLLATION; ;}
    break;

  case 348:
#line 80 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_CONVERSION; ;}
    break;

  case 349:
#line 81 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_STATISTIC_EXT; ;}
    break;

  case 350:
#line 82 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSPARSER; ;}
    break;

  case 351:
#line 83 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSDICTIONARY; ;}
    break;

  case 352:
#line 84 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSTEMPLATE; ;}
    break;

  case 353:
#line 85 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSCONFIGURATION; ;}
    break;

  case 354:
#line 90 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_ACCESS_METHOD; ;}
    break;

  case 355:
#line 91 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EVENT_TRIGGER; ;}
    break;

  case 356:
#line 92 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EXTENSION; ;}
    break;

  case 357:
#line 93 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FDW; ;}
    break;

  case 358:
#line 94 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_PUBLICATION; ;}
    break;

  case 359:
#line 95 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SCHEMA; ;}
    break;

  case 360:
#line 96 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_SERVER; ;}
    break;

  case 361:
#line 101 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 362:
#line 102 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 363:
#line 107 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_CASCADE; ;}
    break;

  case 364:
#line 108 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; ;}
    break;

  case 365:
#line 109 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; /* default */ ;}
    break;

  case 366:
#line 114 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_POLICY; ;}
    break;

  case 367:
#line 115 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_RULE; ;}
    break;

  case 368:
#line 116 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TRIGGER; ;}
    break;

  case 369:
#line 12 "third_party/libpg_query/grammar/statements/update.y"
    {
					PGUpdateStmt *n = makeNode(PGUpdateStmt);
					n->relation = (yyvsp[(3) - (8)].range);
					n->targetList = (yyvsp[(5) - (8)].list);
					n->fromClause = (yyvsp[(6) - (8)].list);
					n->whereClause = (yyvsp[(7) - (8)].node);
					n->returningList = (yyvsp[(8) - (8)].list);
					n->withClause = (yyvsp[(1) - (8)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 370:
#line 3 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = (yyvsp[(3) - (11)].range);
					n->query = NULL;
					n->attlist = (yyvsp[(4) - (11)].list);
					n->is_from = (yyvsp[(6) - (11)].boolean);
					n->is_program = (yyvsp[(7) - (11)].boolean);
					n->filename = (yyvsp[(8) - (11)].str);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(8) - (11)]))));

					n->options = NIL;
					/* Concatenate user-supplied flags */
					if ((yyvsp[(2) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(2) - (11)].defelt));
					if ((yyvsp[(5) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(5) - (11)].defelt));
					if ((yyvsp[(9) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(9) - (11)].defelt));
					if ((yyvsp[(11) - (11)].list))
						n->options = list_concat(n->options, (yyvsp[(11) - (11)].list));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 371:
#line 31 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = NULL;
					n->query = (yyvsp[(3) - (9)].node);
					n->attlist = NIL;
					n->is_from = false;
					n->is_program = (yyvsp[(6) - (9)].boolean);
					n->filename = (yyvsp[(7) - (9)].str);
					n->options = (yyvsp[(9) - (9)].list);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(5) - (9)]))));

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 372:
#line 53 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 373:
#line 54 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 374:
#line 60 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(2) - (3)]));
				;}
    break;

  case 375:
#line 63 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 376:
#line 69 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 377:
#line 73 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 378:
#line 80 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 379:
#line 81 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 380:
#line 85 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 381:
#line 86 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 382:
#line 91 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 383:
#line 92 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 384:
#line 96 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 385:
#line 97 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 386:
#line 102 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 387:
#line 103 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 388:
#line 104 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeNode(PGAStar); ;}
    break;

  case 389:
#line 105 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (3)].list); ;}
    break;

  case 390:
#line 106 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = NULL; ;}
    break;

  case 391:
#line 112 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 392:
#line 120 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (2)]));
				;}
    break;

  case 393:
#line 123 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 394:
#line 128 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 395:
#line 129 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = NIL; ;}
    break;

  case 396:
#line 135 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 397:
#line 138 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 398:
#line 144 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 399:
#line 148 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 400:
#line 152 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("freeze", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 401:
#line 156 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 402:
#line 160 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("null", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 403:
#line 164 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("csv"), (yylsp[(1) - (1)]));
				;}
    break;

  case 404:
#line 168 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("header", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 405:
#line 172 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("quote", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 406:
#line 176 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("escape", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 407:
#line 180 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 408:
#line 184 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)makeNode(PGAStar), (yylsp[(1) - (3)]));
				;}
    break;

  case 409:
#line 188 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_not_null", (PGNode *)(yyvsp[(4) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 410:
#line 192 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_null", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 411:
#line 196 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("encoding", (PGNode *)makeString((yyvsp[(2) - (2)].str)), (yylsp[(1) - (2)]));
				;}
    break;

  case 412:
#line 203 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 413:
#line 209 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 414:
#line 210 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 415:
#line 211 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 416:
#line 217 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 417:
#line 221 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 420:
#line 52 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 421:
#line 53 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 422:
#line 68 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 423:
#line 70 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list), NIL,
										NULL, NULL, NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (2)].node);
				;}
    break;

  case 424:
#line 77 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(3) - (4)].list),
										(PGNode*) list_nth((yyvsp[(4) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 425:
#line 85 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(4) - (4)].list),
										(PGNode*) list_nth((yyvsp[(3) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(3) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 426:
#line 93 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (2)].node), NULL, NIL,
										NULL, NULL,
										(yyvsp[(1) - (2)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 427:
#line 101 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].list), NIL,
										NULL, NULL,
										(yyvsp[(1) - (3)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (3)].node);
				;}
    break;

  case 428:
#line 109 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(4) - (5)].list),
										(PGNode*) list_nth((yyvsp[(5) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(5) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 429:
#line 117 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(5) - (5)].list),
										(PGNode*) list_nth((yyvsp[(4) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 430:
#line 127 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 431:
#line 128 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 432:
#line 158 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->targetList = (yyvsp[(3) - (9)].list);
					n->intoClause = (yyvsp[(4) - (9)].into);
					n->fromClause = (yyvsp[(5) - (9)].list);
					n->whereClause = (yyvsp[(6) - (9)].node);
					n->groupClause = (yyvsp[(7) - (9)].list);
					n->havingClause = (yyvsp[(8) - (9)].node);
					n->windowClause = (yyvsp[(9) - (9)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 433:
#line 172 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->distinctClause = (yyvsp[(2) - (9)].list);
					n->targetList = (yyvsp[(3) - (9)].list);
					n->intoClause = (yyvsp[(4) - (9)].into);
					n->fromClause = (yyvsp[(5) - (9)].list);
					n->whereClause = (yyvsp[(6) - (9)].node);
					n->groupClause = (yyvsp[(7) - (9)].list);
					n->havingClause = (yyvsp[(8) - (9)].node);
					n->windowClause = (yyvsp[(9) - (9)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 434:
#line 184 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 435:
#line 186 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* same as SELECT * FROM relation_expr */
					PGColumnRef *cr = makeNode(PGColumnRef);
					PGResTarget *rt = makeNode(PGResTarget);
					PGSelectStmt *n = makeNode(PGSelectStmt);

					cr->fields = list_make1(makeNode(PGAStar));
					cr->location = -1;

					rt->name = NULL;
					rt->indirection = NIL;
					rt->val = (PGNode *)cr;
					rt->location = -1;

					n->targetList = list_make1(rt);
					n->fromClause = list_make1((yyvsp[(2) - (2)].range));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 436:
#line 205 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_UNION, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 437:
#line 209 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_INTERSECT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 438:
#line 213 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_EXCEPT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 439:
#line 230 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 440:
#line 237 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 441:
#line 244 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(3) - (3)].list);
				(yyval.with)->recursive = true;
				(yyval.with)->location = (yylsp[(1) - (3)]);
			;}
    break;

  case 442:
#line 253 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 443:
#line 254 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 444:
#line 258 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGCommonTableExpr *n = makeNode(PGCommonTableExpr);
				n->ctename = (yyvsp[(1) - (6)].str);
				n->aliascolnames = (yyvsp[(2) - (6)].list);
				n->ctequery = (yyvsp[(5) - (6)].node);
				n->location = (yylsp[(1) - (6)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 445:
#line 270 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(2) - (2)].range);
					(yyval.into)->colNames = NIL;
					(yyval.into)->options = NIL;
					(yyval.into)->onCommit = PG_ONCOMMIT_NOOP;
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;
				;}
    break;

  case 446:
#line 280 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.into) = NULL; ;}
    break;

  case 447:
#line 289 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 448:
#line 294 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 449:
#line 299 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 450:
#line 304 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 451:
#line 309 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 452:
#line 317 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 453:
#line 325 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_UNLOGGED;
				;}
    break;

  case 454:
#line 330 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 455:
#line 335 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 456:
#line 341 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 457:
#line 342 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 458:
#line 346 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 459:
#line 347 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 460:
#line 348 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 461:
#line 355 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(NIL); ;}
    break;

  case 462:
#line 356 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 463:
#line 360 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL;;}
    break;

  case 464:
#line 361 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 465:
#line 365 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 466:
#line 366 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 467:
#line 370 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 468:
#line 374 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].sortby)); ;}
    break;

  case 469:
#line 375 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].sortby)); ;}
    break;

  case 470:
#line 379 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (4)].node);
					(yyval.sortby)->sortby_dir = SORTBY_USING;
					(yyval.sortby)->sortby_nulls = (yyvsp[(4) - (4)].nullorder);
					(yyval.sortby)->useOp = (yyvsp[(3) - (4)].list);
					(yyval.sortby)->location = (yylsp[(3) - (4)]);
				;}
    break;

  case 471:
#line 388 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (3)].node);
					(yyval.sortby)->sortby_dir = (yyvsp[(2) - (3)].sortorder);
					(yyval.sortby)->sortby_nulls = (yyvsp[(3) - (3)].nullorder);
					(yyval.sortby)->useOp = NIL;
					(yyval.sortby)->location = -1;		/* no operator */
				;}
    break;

  case 472:
#line 398 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_ASC; ;}
    break;

  case 473:
#line 399 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DESC; ;}
    break;

  case 474:
#line 400 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DEFAULT; ;}
    break;

  case 475:
#line 403 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_FIRST; ;}
    break;

  case 476:
#line 404 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_LAST; ;}
    break;

  case 477:
#line 405 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_DEFAULT; ;}
    break;

  case 478:
#line 409 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(2) - (2)].node), (yyvsp[(1) - (2)].node)); ;}
    break;

  case 479:
#line 410 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 480:
#line 411 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL, (yyvsp[(1) - (1)].node)); ;}
    break;

  case 481:
#line 412 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (1)].node), NULL); ;}
    break;

  case 482:
#line 416 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 483:
#line 417 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL,NULL); ;}
    break;

  case 484:
#line 422 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 485:
#line 424 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Disabled because it was too confusing, bjm 2002-02-18 */
					ereport(ERROR,
							(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("LIMIT #,# syntax is not supported"),
							 errhint("Use separate LIMIT and OFFSET clauses."),
							 parser_errposition((yylsp[(1) - (4)]))));
				;}
    break;

  case 486:
#line 440 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(3) - (5)].node); ;}
    break;

  case 487:
#line 442 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst(1, -1); ;}
    break;

  case 488:
#line 447 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 489:
#line 450 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 490:
#line 454 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 491:
#line 456 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* LIMIT ALL is represented as a NULL constant */
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 492:
#line 463 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 493:
#line 483 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 494:
#line 485 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 495:
#line 487 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 496:
#line 491 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival),(yylsp[(1) - (1)])); ;}
    break;

  case 497:
#line 492 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str),(yylsp[(1) - (1)])); ;}
    break;

  case 498:
#line 496 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 499:
#line 497 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 500:
#line 500 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 501:
#line 501 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 502:
#line 526 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 503:
#line 527 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 504:
#line 531 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 505:
#line 532 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].node)); ;}
    break;

  case 506:
#line 536 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 507:
#line 537 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 508:
#line 542 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_EMPTY, NIL, (yylsp[(1) - (2)]));
				;}
    break;

  case 509:
#line 554 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 510:
#line 555 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 511:
#line 559 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 512:
#line 560 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 513:
#line 564 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 514:
#line 565 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 515:
#line 569 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 516:
#line 570 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 517:
#line 575 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGLockingClause *n = makeNode(PGLockingClause);
					n->lockedRels = (yyvsp[(2) - (3)].list);
					n->strength = (yyvsp[(1) - (3)].lockstrength);
					n->waitPolicy = (yyvsp[(3) - (3)].lockwaitpolicy);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 518:
#line 585 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = LCS_FORUPDATE; ;}
    break;

  case 519:
#line 586 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORNOKEYUPDATE; ;}
    break;

  case 520:
#line 587 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORSHARE; ;}
    break;

  case 521:
#line 588 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORKEYSHARE; ;}
    break;

  case 522:
#line 592 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 523:
#line 593 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 524:
#line 598 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = LockWaitError; ;}
    break;

  case 525:
#line 599 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitSkip; ;}
    break;

  case 526:
#line 600 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitBlock; ;}
    break;

  case 527:
#line 610 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->valuesLists = list_make1((yyvsp[(3) - (4)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 528:
#line 616 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = (PGSelectStmt *) (yyvsp[(1) - (5)].node);
					n->valuesLists = lappend(n->valuesLists, (yyvsp[(4) - (5)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 529:
#line 633 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 530:
#line 634 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 531:
#line 638 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 532:
#line 639 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 533:
#line 646 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(1) - (2)].range)->alias = (yyvsp[(2) - (2)].alias);
					(yyval.node) = (PGNode *) (yyvsp[(1) - (2)].range);
				;}
    break;

  case 534:
#line 651 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeTableSample *n = (PGRangeTableSample *) (yyvsp[(3) - (3)].node);
					(yyvsp[(1) - (3)].range)->alias = (yyvsp[(2) - (3)].alias);
					/* relation_expr goes inside the PGRangeTableSample node */
					n->relation = (PGNode *) (yyvsp[(1) - (3)].range);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 535:
#line 659 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(1) - (2)].node);
					n->alias = (PGAlias*) linitial((yyvsp[(2) - (2)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(2) - (2)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 536:
#line 666 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(2) - (3)].node);
					n->lateral = true;
					n->alias = (PGAlias*) linitial((yyvsp[(3) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(3) - (3)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 537:
#line 674 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = false;
					n->subquery = (yyvsp[(1) - (2)].node);
					n->alias = (yyvsp[(2) - (2)].alias);
					/*
					 * The SQL spec does not permit a subselect
					 * (<derived_table>) without an alias clause,
					 * so we don't either.  This avoids the problem
					 * of needing to invent a unique refname for it.
					 * That could be surmounted if there's sufficient
					 * popular demand, but for now let's just implement
					 * the spec and see if anyone complains.
					 * However, it does seem like a good idea to emit
					 * an error message that's better than "syntax error".
					 */
					if ((yyvsp[(2) - (2)].alias) == NULL)
					{
						if (IsA((yyvsp[(1) - (2)].node), PGSelectStmt) &&
							((PGSelectStmt *) (yyvsp[(1) - (2)].node))->valuesLists)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("VALUES in FROM must have an alias"),
									 errhint("For example, FROM (VALUES ...) [AS] foo."),
									 parser_errposition((yylsp[(1) - (2)]))));
						else
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("subquery in FROM must have an alias"),
									 errhint("For example, FROM (SELECT ...) [AS] foo."),
									 parser_errposition((yylsp[(1) - (2)]))));
					}
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 538:
#line 709 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = true;
					n->subquery = (yyvsp[(2) - (3)].node);
					n->alias = (yyvsp[(3) - (3)].alias);
					/* same comment as above */
					if ((yyvsp[(3) - (3)].alias) == NULL)
					{
						if (IsA((yyvsp[(2) - (3)].node), PGSelectStmt) &&
							((PGSelectStmt *) (yyvsp[(2) - (3)].node))->valuesLists)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("VALUES in FROM must have an alias"),
									 errhint("For example, FROM (VALUES ...) [AS] foo."),
									 parser_errposition((yylsp[(2) - (3)]))));
						else
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("subquery in FROM must have an alias"),
									 errhint("For example, FROM (SELECT ...) [AS] foo."),
									 parser_errposition((yylsp[(2) - (3)]))));
					}
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 539:
#line 734 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) (yyvsp[(1) - (1)].jexpr);
				;}
    break;

  case 540:
#line 738 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(2) - (4)].jexpr)->alias = (yyvsp[(4) - (4)].alias);
					(yyval.node) = (PGNode *) (yyvsp[(2) - (4)].jexpr);
				;}
    break;

  case 541:
#line 764 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.jexpr) = (yyvsp[(2) - (3)].jexpr);
				;}
    break;

  case 542:
#line 768 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* CROSS JOIN is same as unqualified inner join */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL;
					n->quals = NULL;
					(yyval.jexpr) = n;
				;}
    break;

  case 543:
#line 780 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(2) - (5)].jtype);
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(4) - (5)].node);
					if ((yyvsp[(5) - (5)].node) != NULL && IsA((yyvsp[(5) - (5)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(5) - (5)].node); /* USING clause */
					else
						n->quals = (yyvsp[(5) - (5)].node); /* ON clause */
					(yyval.jexpr) = n;
				;}
    break;

  case 544:
#line 793 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(3) - (4)].node);
					if ((yyvsp[(4) - (4)].node) != NULL && IsA((yyvsp[(4) - (4)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(4) - (4)].node); /* USING clause */
					else
						n->quals = (yyvsp[(4) - (4)].node); /* ON clause */
					(yyval.jexpr) = n;
				;}
    break;

  case 545:
#line 807 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(3) - (5)].jtype);
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(5) - (5)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					(yyval.jexpr) = n;
				;}
    break;

  case 546:
#line 818 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					(yyval.jexpr) = n;
				;}
    break;

  case 547:
#line 833 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.alias)->colnames = (yyvsp[(4) - (5)].list);
				;}
    break;

  case 548:
#line 839 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (2)].str);
				;}
    break;

  case 549:
#line 844 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.alias)->colnames = (yyvsp[(3) - (4)].list);
				;}
    break;

  case 550:
#line 850 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (1)].str);
				;}
    break;

  case 551:
#line 856 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = (yyvsp[(1) - (1)].alias); ;}
    break;

  case 552:
#line 857 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = NULL; ;}
    break;

  case 553:
#line 866 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (1)].alias), NIL);
				;}
    break;

  case 554:
#line 870 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 555:
#line 874 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.list) = list_make2(a, (yyvsp[(4) - (5)].list));
				;}
    break;

  case 556:
#line 880 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.list) = list_make2(a, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 557:
#line 886 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, NIL);
				;}
    break;

  case 558:
#line 891 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_FULL; ;}
    break;

  case 559:
#line 892 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_LEFT; ;}
    break;

  case 560:
#line 893 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_RIGHT; ;}
    break;

  case 561:
#line 894 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_INNER; ;}
    break;

  case 562:
#line 898 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 563:
#line 899 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 564:
#line 911 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) (yyvsp[(3) - (4)].list); ;}
    break;

  case 565:
#line 912 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 566:
#line 918 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, implicitly */
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 567:
#line 925 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, explicitly */
					(yyval.range) = (yyvsp[(1) - (2)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 568:
#line 932 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance */
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 569:
#line 939 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance, SQL99-style syntax */
					(yyval.range) = (yyvsp[(3) - (4)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 570:
#line 962 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeTableSample *n = makeNode(PGRangeTableSample);
					/* n->relation will be filled in later */
					n->method = (yyvsp[(2) - (6)].list);
					n->args = (yyvsp[(4) - (6)].list);
					n->repeatable = (yyvsp[(6) - (6)].node);
					n->location = (yylsp[(2) - (6)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 571:
#line 974 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) (yyvsp[(3) - (4)].node); ;}
    break;

  case 572:
#line 975 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 573:
#line 991 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(2) - (2)].boolean);
					n->is_rowsfrom = false;
					n->functions = list_make1(list_make2((yyvsp[(1) - (2)].node), NIL));
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 574:
#line 1001 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(6) - (6)].boolean);
					n->is_rowsfrom = true;
					n->functions = (yyvsp[(4) - (6)].list);
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 575:
#line 1013 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 576:
#line 1017 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 577:
#line 1018 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 578:
#line 1021 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 579:
#line 1022 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 580:
#line 1025 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 581:
#line 1026 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 582:
#line 1031 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 583:
#line 1032 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 584:
#line 1038 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 585:
#line 1042 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 586:
#line 1048 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (3)].str);
					n->typeName = (yyvsp[(2) - (3)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collClause = (PGCollateClause *) (yyvsp[(3) - (3)].node);
					n->collOid = InvalidOid;
					n->constraints = NIL;
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 587:
#line 1069 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 588:
#line 1076 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 589:
#line 1089 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 590:
#line 1094 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->setof = true;
				;}
    break;

  case 591:
#line 1101 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (5)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(4) - (5)].ival)));
				;}
    break;

  case 592:
#line 1106 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (6)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(5) - (6)].ival)));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 593:
#line 1112 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
				;}
    break;

  case 594:
#line 1117 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 595:
#line 1126 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeInteger(-1)); ;}
    break;

  case 596:
#line 1128 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (4)].list), makeInteger((yyvsp[(3) - (4)].ival))); ;}
    break;

  case 597:
#line 1130 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = NIL; ;}
    break;

  case 598:
#line 1134 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 599:
#line 1135 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 600:
#line 1136 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 601:
#line 1137 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 602:
#line 1138 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 603:
#line 1140 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 604:
#line 1145 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (4)].typnam);
					(yyval.typnam)->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											 makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
				;}
    break;

  case 605:
#line 1164 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 606:
#line 1165 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 607:
#line 1166 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 608:
#line 1167 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 609:
#line 1179 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = makeTypeName((yyvsp[(1) - (2)].str));
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 610:
#line 1185 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(2) - (3)].list)));
					(yyval.typnam)->typmods = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 611:
#line 1192 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 612:
#line 1193 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 613:
#line 1200 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 614:
#line 1205 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 615:
#line 1210 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int2");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 616:
#line 1215 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int8");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 617:
#line 1220 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 618:
#line 1225 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (2)].typnam);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 619:
#line 1230 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float8");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 620:
#line 1235 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 621:
#line 1241 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 622:
#line 1247 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 623:
#line 1253 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("bool");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 624:
#line 1260 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Check FLOAT() precision limits assuming IEEE floating
					 * types - thomas 1997-09-18
					 */
					if ((yyvsp[(2) - (3)].ival) < 1)
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be at least 1 bit"),
								 parser_errposition((yylsp[(2) - (3)]))));
					else if ((yyvsp[(2) - (3)].ival) <= 24)
						(yyval.typnam) = SystemTypeName("float4");
					else if ((yyvsp[(2) - (3)].ival) <= 53)
						(yyval.typnam) = SystemTypeName("float8");
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be less than 54 bits"),
								 parser_errposition((yylsp[(2) - (3)]))));
				;}
    break;

  case 625:
#line 1281 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
				;}
    break;

  case 626:
#line 1291 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 627:
#line 1295 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 628:
#line 1303 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 629:
#line 1307 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 630:
#line 1315 "third_party/libpg_query/grammar/statements/select.y"
    {
					const char *typname;

					typname = (yyvsp[(2) - (5)].boolean) ? "varbit" : "bit";
					(yyval.typnam) = SystemTypeName(typname);
					(yyval.typnam)->typmods = (yyvsp[(4) - (5)].list);
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 631:
#line 1327 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* bit defaults to bit(1), varbit to no limit */
					if ((yyvsp[(2) - (2)].boolean))
					{
						(yyval.typnam) = SystemTypeName("varbit");
					}
					else
					{
						(yyval.typnam) = SystemTypeName("bit");
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					}
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 632:
#line 1348 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 633:
#line 1352 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 634:
#line 1358 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 635:
#line 1362 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Length was not specified so allow to be unrestricted.
					 * This handles problems with fixed-length (bpchar) strings
					 * which in column definitions must default to a length
					 * of one, but should not be constrained if the length
					 * was not specified.
					 */
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 636:
#line 1375 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (4)].conststr));
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 637:
#line 1383 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (1)].conststr));
					/* char defaults to char(1), varchar to no limit */
					if (strcmp((yyvsp[(1) - (1)].conststr), "bpchar") == 0)
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 638:
#line 1393 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 639:
#line 1395 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 640:
#line 1397 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "varchar"; ;}
    break;

  case 641:
#line 1399 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 642:
#line 1401 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 643:
#line 1403 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 644:
#line 1407 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 645:
#line 1408 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 646:
#line 1416 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 647:
#line 1425 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 648:
#line 1433 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 649:
#line 1442 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 650:
#line 1453 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("interval");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 651:
#line 1460 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 652:
#line 1461 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 653:
#line 1462 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 654:
#line 1467 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR), (yylsp[(1) - (1)]))); ;}
    break;

  case 655:
#line 1469 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MONTH), (yylsp[(1) - (1)]))); ;}
    break;

  case 656:
#line 1471 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY), (yylsp[(1) - (1)]))); ;}
    break;

  case 657:
#line 1473 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR), (yylsp[(1) - (1)]))); ;}
    break;

  case 658:
#line 1475 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE), (yylsp[(1) - (1)]))); ;}
    break;

  case 659:
#line 1477 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 660:
#line 1479 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR) |
												 INTERVAL_MASK(MONTH), (yylsp[(1) - (3)])));
				;}
    break;

  case 661:
#line 1484 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR), (yylsp[(1) - (3)])));
				;}
    break;

  case 662:
#line 1489 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 663:
#line 1495 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(3) - (3)].list);
					linitial((yyval.list)) = makeIntConst(INTERVAL_MASK(DAY) |
												INTERVAL_MASK(HOUR) |
												INTERVAL_MASK(MINUTE) |
												INTERVAL_MASK(SECOND), (yylsp[(1) - (3)]));
				;}
    break;

  case 664:
#line 1503 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 665:
#line 1508 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(3) - (3)].list);
					linitial((yyval.list)) = makeIntConst(INTERVAL_MASK(HOUR) |
												INTERVAL_MASK(MINUTE) |
												INTERVAL_MASK(SECOND), (yylsp[(1) - (3)]));
				;}
    break;

  case 666:
#line 1515 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(3) - (3)].list);
					linitial((yyval.list)) = makeIntConst(INTERVAL_MASK(MINUTE) |
												INTERVAL_MASK(SECOND), (yylsp[(1) - (3)]));
				;}
    break;

  case 667:
#line 1521 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 668:
#line 1526 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (1)])));
				;}
    break;

  case 669:
#line 1530 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (4)])),
									makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
				;}
    break;

  case 670:
#line 1565 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 671:
#line 1567 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), (yylsp[(2) - (3)])); ;}
    break;

  case 672:
#line 1569 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = (yyvsp[(1) - (3)].node);
					n->collname = (yyvsp[(3) - (3)].list);
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 673:
#line 1577 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("timezone"),
											   list_make2((yyvsp[(5) - (5)].node), (yyvsp[(1) - (5)].node)),
											   (yylsp[(2) - (5)]));
				;}
    break;

  case 674:
#line 1592 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 675:
#line 1594 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 676:
#line 1596 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 677:
#line 1598 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 678:
#line 1600 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 679:
#line 1602 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 680:
#line 1604 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 681:
#line 1606 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 682:
#line 1608 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 683:
#line 1610 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 684:
#line 1612 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 685:
#line 1614 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 686:
#line 1616 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 687:
#line 1618 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 688:
#line 1621 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 689:
#line 1623 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 690:
#line 1625 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 691:
#line 1628 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeAndExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 692:
#line 1630 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeOrExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 693:
#line 1632 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 694:
#line 1634 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 695:
#line 1637 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 696:
#line 1642 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make3((yyvsp[(1) - (5)].node), (yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 697:
#line 1649 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "!~~",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 698:
#line 1654 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make3((yyvsp[(1) - (6)].node), (yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 699:
#line 1661 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 700:
#line 1666 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make2((yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 701:
#line 1674 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 702:
#line 1679 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 703:
#line 1688 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (4)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (4)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (4)].node), (PGNode *) n, (yylsp[(2) - (4)]));
				;}
    break;

  case 704:
#line 1696 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 705:
#line 1704 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (5)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 706:
#line 1712 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
											   (yylsp[(2) - (7)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (7)].node), (PGNode *) n, (yylsp[(2) - (7)]));
				;}
    break;

  case 707:
#line 1730 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 708:
#line 1738 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 709:
#line 1746 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 710:
#line 1754 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 711:
#line 1762 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 712:
#line 1770 "third_party/libpg_query/grammar/statements/select.y"
    {
					if (list_length((yyvsp[(1) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on left side of OVERLAPS expression"),
								 parser_errposition((yylsp[(1) - (3)]))));
					if (list_length((yyvsp[(3) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on right side of OVERLAPS expression"),
								 parser_errposition((yylsp[(3) - (3)]))));
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlaps"),
											   list_concat((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)),
											   (yylsp[(2) - (3)]));
				;}
    break;

  case 713:
#line 1786 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = PG_IS_TRUE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 714:
#line 1794 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_TRUE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 715:
#line 1802 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_FALSE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 716:
#line 1810 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_FALSE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 717:
#line 1818 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_UNKNOWN;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 718:
#line 1826 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_UNKNOWN;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 719:
#line 1834 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 720:
#line 1838 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 721:
#line 1842 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 722:
#line 1846 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 723:
#line 1850 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN,
												   "BETWEEN",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 724:
#line 1858 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN,
												   "NOT BETWEEN",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 725:
#line 1866 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN_SYM,
												   "BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 726:
#line 1874 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN_SYM,
												   "NOT BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 727:
#line 1882 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(3) - (3)].node), PGSubLink))
					{
						/* generate foo = ANY (subquery) */
						PGSubLink *n = (PGSubLink *) (yyvsp[(3) - (3)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (3)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (3)]);
						(yyval.node) = (PGNode *)n;
					}
					else
					{
						/* generate scalar IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
					}
				;}
    break;

  case 728:
#line 1902 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(4) - (4)].node), PGSubLink))
					{
						/* generate NOT (foo = ANY (subquery)) */
						/* Make an = ANY node */
						PGSubLink *n = (PGSubLink *) (yyvsp[(4) - (4)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (4)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (4)]);
						/* Stick a NOT on top; must have same parse location */
						(yyval.node) = makeNotExpr((PGNode *) n, (yylsp[(2) - (4)]));
					}
					else
					{
						/* generate scalar NOT IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "<>", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
					}
				;}
    break;

  case 729:
#line 1924 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = (yyvsp[(3) - (4)].subquerytype);
					n->subLinkId = 0;
					n->testexpr = (yyvsp[(1) - (4)].node);
					n->operName = (yyvsp[(2) - (4)].list);
					n->subselect = (yyvsp[(4) - (4)].node);
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 730:
#line 1935 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(3) - (6)].subquerytype) == PG_ANY_SUBLINK)
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ANY, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
					else
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ALL, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 731:
#line 1942 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * The SQL spec only allows DEFAULT in "contextually typed
					 * expressions", but for us, it's easier to allow it in
					 * any a_expr and then throw error during parse analysis
					 * if it's in an inappropriate context.  This way also
					 * lets us say something smarter than "syntax error".
					 */
					PGSetToDefault *n = makeNode(PGSetToDefault);
					/* parse analysis will fill in the rest */
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 732:
#line 1967 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 733:
#line 1969 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), (yylsp[(2) - (3)])); ;}
    break;

  case 734:
#line 1971 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 735:
#line 1973 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 736:
#line 1975 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 737:
#line 1977 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 738:
#line 1979 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 739:
#line 1981 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 740:
#line 1983 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 741:
#line 1985 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 742:
#line 1987 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 743:
#line 1989 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 744:
#line 1991 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 745:
#line 1993 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 746:
#line 1995 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 747:
#line 1997 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 748:
#line 1999 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 749:
#line 2001 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 750:
#line 2003 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 751:
#line 2005 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 752:
#line 2009 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 753:
#line 2013 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 754:
#line 2017 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 755:
#line 2030 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 756:
#line 2031 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 757:
#line 2033 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeParamRef(0, (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeParamRef(0, (yylsp[(1) - (2)]));
				;}
    break;

  case 758:
#line 2045 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGParamRef *p = makeNode(PGParamRef);
					p->number = (yyvsp[(1) - (2)].ival);
					p->location = (yylsp[(1) - (2)]);
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (PGNode *) p;
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = (PGNode *) p;
				;}
    break;

  case 759:
#line 2060 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(4) - (4)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(2) - (4)].node);
						n->indirection = check_indirection((yyvsp[(4) - (4)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else
						(yyval.node) = (yyvsp[(2) - (4)].node);
				;}
    break;

  case 760:
#line 2072 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 761:
#line 2074 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 762:
#line 2076 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (1)].node);
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 763:
#line 2087 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Because the select_with_parens nonterminal is designed
					 * to "eat" as many levels of parens as possible, the
					 * '(' a_expr ')' opt_indirection production above will
					 * fail to match a sub-SELECT with indirection decoration;
					 * the sub-SELECT won't be regarded as an a_expr as long
					 * as there are parens around it.  To support applying
					 * subscripting or field selection to a sub-SELECT result,
					 * we need this redundant-looking production.
					 */
					PGSubLink *n = makeNode(PGSubLink);
					PGAIndirection *a = makeNode(PGAIndirection);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					a->arg = (PGNode *)n;
					a->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.node) = (PGNode *)a;
				;}
    break;

  case 764:
#line 2111 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXISTS_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(2) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 765:
#line 2124 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall((yyvsp[(1) - (3)].list), NIL, (yylsp[(1) - (3)]));
				;}
    break;

  case 766:
#line 2128 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (5)].list), (yyvsp[(3) - (5)].list), (yylsp[(1) - (5)]));
					n->agg_order = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 767:
#line 2134 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), list_make1((yyvsp[(4) - (6)].node)), (yylsp[(1) - (6)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(5) - (6)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 768:
#line 2141 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (8)].list), lappend((yyvsp[(3) - (8)].list), (yyvsp[(6) - (8)].node)), (yylsp[(1) - (8)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(7) - (8)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 769:
#line 2148 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(4) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(5) - (6)].list);
					/* Ideally we'd mark the PGFuncCall node to indicate
					 * "must be an aggregate", but there's no provision
					 * for that in PGFuncCall at the moment.
					 */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 770:
#line 2158 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(4) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(5) - (6)].list);
					n->agg_distinct = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 771:
#line 2165 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * We consider AGGREGATE(*) to invoke a parameterless
					 * aggregate.  This does the right thing for COUNT(*),
					 * and there are no other aggregates in SQL that accept
					 * '*' as parameter.
					 *
					 * The PGFuncCall node is also marked agg_star = true,
					 * so that later processing can detect what the argument
					 * really was.
					 */
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (4)].list), NIL, (yylsp[(1) - (4)]));
					n->agg_star = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 772:
#line 2193 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = (PGFuncCall *) (yyvsp[(1) - (4)].node);
					/*
					 * The order clause for WITHIN GROUP and the one for
					 * plain-aggregate ORDER BY share a field, so we have to
					 * check here that at most one is present.  We also check
					 * for DISTINCT and VARIADIC here to give a better error
					 * location.  Other consistency checks are deferred to
					 * parse analysis.
					 */
					if ((yyvsp[(2) - (4)].list) != NIL)
					{
						if (n->agg_order != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use multiple ORDER BY clauses with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->agg_distinct)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use DISTINCT with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->func_variadic)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use VARIADIC with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						n->agg_order = (yyvsp[(2) - (4)].list);
						n->agg_within_group = true;
					}
					n->agg_filter = (yyvsp[(3) - (4)].node);
					n->over = (yyvsp[(4) - (4)].windef);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 773:
#line 2228 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 774:
#line 2238 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 775:
#line 2239 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 776:
#line 2247 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("pg_collation_for"),
											   list_make1((yyvsp[(4) - (5)].node)),
											   (yylsp[(1) - (5)]));
				;}
    break;

  case 777:
#line 2253 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_DATE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 778:
#line 2257 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 779:
#line 2261 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 780:
#line 2265 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 781:
#line 2269 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 782:
#line 2273 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 783:
#line 2277 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 784:
#line 2281 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 785:
#line 2285 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 786:
#line 2289 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_ROLE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 787:
#line 2293 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 788:
#line 2297 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_SESSION_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 789:
#line 2301 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 790:
#line 2305 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_CATALOG, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 791:
#line 2309 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_SCHEMA, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 792:
#line 2313 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), (yylsp[(1) - (6)])); ;}
    break;

  case 793:
#line 2315 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("date_part"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 794:
#line 2319 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* overlay(A PLACING B FROM C FOR D) is converted to
					 * overlay(A, B, C, D)
					 * overlay(A PLACING B FROM C) is converted to
					 * overlay(A, B, C)
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlay"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 795:
#line 2328 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* position(A in B) is converted to position(B, A) */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("position"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 796:
#line 2333 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* substring(A from B for C) is converted to
					 * substring(A, B, C) - thomas 2000-11-28
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("substring"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 797:
#line 2340 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* TREAT(expr AS target) converts expr of a particular type to target,
					 * which is defined to be a subtype of the original expression.
					 * In SQL99, this is intended for use with structured UDTs,
					 * but let's make this a generally useful form allowing stronger
					 * coercions than are handled by implicit casting.
					 *
					 * Convert SystemTypeName() to SystemFuncName() even though
					 * at the moment they result in the same thing.
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName(((PGValue *)llast((yyvsp[(5) - (6)].typnam)->names))->val.str),
												list_make1((yyvsp[(3) - (6)].node)),
												(yylsp[(1) - (6)]));
				;}
    break;

  case 798:
#line 2355 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* various trim expressions are defined in SQL
					 * - thomas 1997-07-19
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 799:
#line 2362 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("ltrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 800:
#line 2366 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("rtrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 801:
#line 2370 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 802:
#line 2374 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NULLIF, "=", (yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(1) - (6)]));
				;}
    break;

  case 803:
#line 2378 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCoalesceExpr *c = makeNode(PGCoalesceExpr);
					c->args = (yyvsp[(3) - (4)].list);
					c->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 804:
#line 2391 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 805:
#line 2392 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 806:
#line 2396 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(4) - (5)].node); ;}
    break;

  case 807:
#line 2397 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 808:
#line 2405 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 809:
#line 2406 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 810:
#line 2410 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].windef)); ;}
    break;

  case 811:
#line 2412 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].windef)); ;}
    break;

  case 812:
#line 2417 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(3) - (3)].windef);
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.windef) = n;
				;}
    break;

  case 813:
#line 2425 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = (yyvsp[(2) - (2)].windef); ;}
    break;

  case 814:
#line 2427 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = (yyvsp[(2) - (2)].str);
					n->refname = NULL;
					n->partitionClause = NIL;
					n->orderClause = NIL;
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.windef) = n;
				;}
    break;

  case 815:
#line 2440 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = NULL; ;}
    break;

  case 816:
#line 2445 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = NULL;
					n->refname = (yyvsp[(2) - (6)].str);
					n->partitionClause = (yyvsp[(3) - (6)].list);
					n->orderClause = (yyvsp[(4) - (6)].list);
					/* copy relevant fields of opt_frame_clause */
					n->frameOptions = (yyvsp[(5) - (6)].windef)->frameOptions;
					n->startOffset = (yyvsp[(5) - (6)].windef)->startOffset;
					n->endOffset = (yyvsp[(5) - (6)].windef)->endOffset;
					n->location = (yylsp[(1) - (6)]);
					(yyval.windef) = n;
				;}
    break;

  case 817:
#line 2470 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 818:
#line 2471 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 819:
#line 2474 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 820:
#line 2475 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 821:
#line 2487 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_RANGE;
					if (n->frameOptions & (FRAMEOPTION_START_VALUE_PRECEDING |
										   FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("RANGE PRECEDING is only supported with UNBOUNDED"),
								 parser_errposition((yylsp[(1) - (2)]))));
					if (n->frameOptions & (FRAMEOPTION_START_VALUE_FOLLOWING |
										   FRAMEOPTION_END_VALUE_FOLLOWING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("RANGE FOLLOWING is only supported with UNBOUNDED"),
								 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.windef) = n;
				;}
    break;

  case 822:
#line 2505 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_ROWS;
					(yyval.windef) = n;
				;}
    break;

  case 823:
#line 2511 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 824:
#line 2521 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(1) - (1)].windef);
					/* reject invalid cases */
					if (n->frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(1) - (1)]))));
					if (n->frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot end with current row"),
								 parser_errposition((yylsp[(1) - (1)]))));
					n->frameOptions |= FRAMEOPTION_END_CURRENT_ROW;
					(yyval.windef) = n;
				;}
    break;

  case 825:
#line 2538 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n1 = (yyvsp[(2) - (4)].windef);
					PGWindowDef *n2 = (yyvsp[(4) - (4)].windef);
					/* form merged options */
					int		frameOptions = n1->frameOptions;
					/* shift converts START_ options to END_ options */
					frameOptions |= n2->frameOptions << 1;
					frameOptions |= FRAMEOPTION_BETWEEN;
					/* reject invalid cases */
					if (frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(2) - (4)]))));
					if (frameOptions & FRAMEOPTION_END_UNBOUNDED_PRECEDING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame end cannot be UNBOUNDED PRECEDING"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_CURRENT_ROW) &&
						(frameOptions & FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from current row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING) &&
						(frameOptions & (FRAMEOPTION_END_VALUE_PRECEDING |
										 FRAMEOPTION_END_CURRENT_ROW)))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					n1->frameOptions = frameOptions;
					n1->endOffset = n2->startOffset;
					(yyval.windef) = n1;
				;}
    break;

  case 826:
#line 2583 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_PRECEDING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 827:
#line 2591 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_FOLLOWING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 828:
#line 2599 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_CURRENT_ROW;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 829:
#line 2607 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_PRECEDING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 830:
#line 2615 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_FOLLOWING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 831:
#line 2635 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 832:
#line 2636 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 833:
#line 2637 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(2) - (5)].list), (yyvsp[(4) - (5)].node)); ;}
    break;

  case 834:
#line 2640 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 835:
#line 2641 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 836:
#line 2642 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ALL_SUBLINK; ;}
    break;

  case 837:
#line 2645 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 838:
#line 2646 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) (yyvsp[(1) - (1)].conststr); ;}
    break;

  case 839:
#line 2649 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "+"; ;}
    break;

  case 840:
#line 2650 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "-"; ;}
    break;

  case 841:
#line 2651 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "*"; ;}
    break;

  case 842:
#line 2652 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "/"; ;}
    break;

  case 843:
#line 2653 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "%"; ;}
    break;

  case 844:
#line 2654 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "^"; ;}
    break;

  case 845:
#line 2655 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<"; ;}
    break;

  case 846:
#line 2656 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">"; ;}
    break;

  case 847:
#line 2657 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "="; ;}
    break;

  case 848:
#line 2658 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<="; ;}
    break;

  case 849:
#line 2659 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">="; ;}
    break;

  case 850:
#line 2660 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<>"; ;}
    break;

  case 851:
#line 2664 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 852:
#line 2666 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 853:
#line 2671 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 854:
#line 2673 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 855:
#line 2678 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 856:
#line 2680 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 857:
#line 2682 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~")); ;}
    break;

  case 858:
#line 2684 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~")); ;}
    break;

  case 859:
#line 2686 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~*")); ;}
    break;

  case 860:
#line 2688 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~*")); ;}
    break;

  case 861:
#line 2702 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 862:
#line 2704 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 863:
#line 2708 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 864:
#line 2712 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 865:
#line 2719 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 866:
#line 2723 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 867:
#line 2729 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 868:
#line 2733 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 869:
#line 2742 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 870:
#line 2752 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 871:
#line 2753 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 872:
#line 2758 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(makeStringConst((yyvsp[(1) - (3)].str), (yylsp[(1) - (3)])), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 873:
#line 2761 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 874:
#line 2768 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 875:
#line 2769 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "year"; ;}
    break;

  case 876:
#line 2770 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "month"; ;}
    break;

  case 877:
#line 2771 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "day"; ;}
    break;

  case 878:
#line 2772 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "hour"; ;}
    break;

  case 879:
#line 2773 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "minute"; ;}
    break;

  case 880:
#line 2774 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "second"; ;}
    break;

  case 881:
#line 2775 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 882:
#line 2786 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make4((yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].node), (yyvsp[(3) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 883:
#line 2790 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 884:
#line 2797 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 885:
#line 2803 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(3) - (3)].node), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 886:
#line 2804 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 887:
#line 2821 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 888:
#line 2825 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* not legal per SQL99, but might as well allow it */
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yyvsp[(2) - (3)].node));
				;}
    break;

  case 889:
#line 2830 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 890:
#line 2834 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Since there are no cases where this syntax allows
					 * a textual FOR value, we forcibly cast the argument
					 * to int4.  The possible matches in pg_proc are
					 * substring(text,int4) and substring(text,text),
					 * and we don't want the parser to choose the latter,
					 * which it is likely to do if the second argument
					 * is unknown or doesn't have an implicit cast to int4.
					 */
					(yyval.list) = list_make3((yyvsp[(1) - (2)].node), makeIntConst(1, -1),
									makeTypeCast((yyvsp[(2) - (2)].node),
												 SystemTypeName("int4"), -1));
				;}
    break;

  case 891:
#line 2849 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 892:
#line 2853 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 893:
#line 2857 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 894:
#line 2860 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 895:
#line 2863 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(3) - (3)].list), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 896:
#line 2864 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 897:
#line 2865 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 898:
#line 2869 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subselect = (yyvsp[(1) - (1)].node);
					/* other fields will be filled later */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 899:
#line 2875 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *)(yyvsp[(2) - (3)].list); ;}
    break;

  case 900:
#line 2886 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseExpr *c = makeNode(PGCaseExpr);
					c->casetype = InvalidOid; /* not analyzed yet */
					c->arg = (PGExpr *) (yyvsp[(2) - (5)].node);
					c->args = (yyvsp[(3) - (5)].list);
					c->defresult = (PGExpr *) (yyvsp[(4) - (5)].node);
					c->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 901:
#line 2899 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 902:
#line 2900 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 903:
#line 2905 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseWhen *w = makeNode(PGCaseWhen);
					w->expr = (PGExpr *) (yyvsp[(2) - (4)].node);
					w->result = (PGExpr *) (yyvsp[(4) - (4)].node);
					w->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)w;
				;}
    break;

  case 904:
#line 2915 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 905:
#line 2916 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 906:
#line 2919 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 907:
#line 2920 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 908:
#line 2924 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (1)].str), NIL, (yylsp[(1) - (1)]), yyscanner);
				;}
    break;

  case 909:
#line 2928 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].list), (yylsp[(1) - (2)]), yyscanner);
				;}
    break;

  case 910:
#line 2935 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(2) - (2)].str));
				;}
    break;

  case 911:
#line 2939 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeNode(PGAStar);
				;}
    break;

  case 912:
#line 2943 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = false;
					ai->lidx = NULL;
					ai->uidx = (yyvsp[(2) - (3)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 913:
#line 2951 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = true;
					ai->lidx = (yyvsp[(2) - (5)].node);
					ai->uidx = (yyvsp[(4) - (5)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 914:
#line 2961 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 915:
#line 2962 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 916:
#line 2966 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 917:
#line 2967 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 918:
#line 2971 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 919:
#line 2972 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 922:
#line 2986 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 923:
#line 2987 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 924:
#line 2991 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 925:
#line 2992 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 926:
#line 2996 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(3) - (3)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (3)].node);
					(yyval.target)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 927:
#line 3012 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(2) - (2)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (2)].node);
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 928:
#line 3020 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (1)].node);
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 929:
#line 3028 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnRef *n = makeNode(PGColumnRef);
					n->fields = list_make1(makeNode(PGAStar));
					n->location = (yylsp[(1) - (1)]);

					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)n;
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 930:
#line 3049 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].range)); ;}
    break;

  case 931:
#line 3050 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].range)); ;}
    break;

  case 932:
#line 3062 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = makeRangeVar(NULL, (yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 933:
#line 3066 "third_party/libpg_query/grammar/statements/select.y"
    {
					check_qualified_name((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.range) = makeRangeVar(NULL, NULL, (yylsp[(1) - (2)]));
					switch (list_length((yyvsp[(2) - (2)].list)))
					{
						case 1:
							(yyval.range)->catalogname = NULL;
							(yyval.range)->schemaname = (yyvsp[(1) - (2)].str);
							(yyval.range)->relname = strVal(linitial((yyvsp[(2) - (2)].list)));
							break;
						case 2:
							(yyval.range)->catalogname = (yyvsp[(1) - (2)].str);
							(yyval.range)->schemaname = strVal(linitial((yyvsp[(2) - (2)].list)));
							(yyval.range)->relname = strVal(lsecond((yyvsp[(2) - (2)].list)));
							break;
						default:
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("improper qualified name (too many dotted names): %s",
											NameListToString(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)))),
									 parser_errposition((yylsp[(1) - (2)]))));
							break;
					}
				;}
    break;

  case 934:
#line 3093 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 935:
#line 3095 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 936:
#line 3099 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 937:
#line 3101 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 938:
#line 3112 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 939:
#line 3114 "third_party/libpg_query/grammar/statements/select.y"
    {
						(yyval.list) = check_func_name(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)),
											 yyscanner);
					;}
    break;

  case 940:
#line 3125 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival), (yylsp[(1) - (1)]));
				;}
    break;

  case 941:
#line 3129 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 942:
#line 3133 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 943:
#line 3137 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 944:
#line 3141 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* This is a bit constant per SQL99:
					 * Without Feature F511, "BIT data type",
					 * a <general literal> shall not be a
					 * <bit string literal> or a <hex string literal>.
					 */
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 945:
#line 3150 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic type 'literal' syntax */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (2)].list));
					t->location = (yylsp[(1) - (2)]);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), t);
				;}
    break;

  case 946:
#line 3157 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic syntax with a type modifier */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (6)].list));
					PGListCell *lc;

					/*
					 * We must use func_arg_list and opt_sort_clause in the
					 * production to avoid reduce/reduce conflicts, but we
					 * don't actually wish to allow PGNamedArgExpr in this
					 * context, nor ORDER BY.
					 */
					foreach(lc, (yyvsp[(3) - (6)].list))
					{
						PGNamedArgExpr *arg = (PGNamedArgExpr *) lfirst(lc);

						if (IsA(arg, PGNamedArgExpr))
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have parameter name"),
									 parser_errposition(arg->location)));
					}
					if ((yyvsp[(4) - (6)].list) != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have ORDER BY"),
									 parser_errposition((yylsp[(4) - (6)]))));

					t->typmods = (yyvsp[(3) - (6)].list);
					t->location = (yylsp[(1) - (6)]);
					(yyval.node) = makeStringConstCast((yyvsp[(6) - (6)].str), (yylsp[(6) - (6)]), t);
				;}
    break;

  case 947:
#line 3189 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), (yyvsp[(1) - (2)].typnam));
				;}
    break;

  case 948:
#line 3193 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGTypeName *t = (yyvsp[(1) - (3)].typnam);
					t->typmods = (yyvsp[(3) - (3)].list);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
				;}
    break;

  case 949:
#line 3199 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGTypeName *t = (yyvsp[(1) - (5)].typnam);
					t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.node) = makeStringConstCast((yyvsp[(5) - (5)].str), (yylsp[(5) - (5)]), t);
				;}
    break;

  case 950:
#line 3207 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGTypeName *t = (yyvsp[(1) - (6)].typnam);
					if ((yyvsp[(6) - (6)].list) != NIL)
					{
						t->typmods = lappend((yyvsp[(6) - (6)].list), makeParamRef(0, (yylsp[(3) - (6)])));
					}
					else
						t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
												makeParamRef(0, (yylsp[(3) - (6)])));
					(yyval.node) = makeParamRefCast(0, (yylsp[(5) - (6)]), t);
				;}
    break;

  case 951:
#line 3219 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(true, (yylsp[(1) - (1)]));
				;}
    break;

  case 952:
#line 3223 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(false, (yylsp[(1) - (1)]));
				;}
    break;

  case 953:
#line 3227 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 954:
#line 3232 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 955:
#line 3233 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 956:
#line 3249 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 957:
#line 3250 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 958:
#line 3251 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 959:
#line 3254 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 960:
#line 3255 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 961:
#line 3260 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 962:
#line 3261 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 963:
#line 3262 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 964:
#line 3265 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 965:
#line 3266 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 966:
#line 3270 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
    break;

  case 967:
#line 3272 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 968:
#line 3276 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 969:
#line 3277 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 971:
#line 3288 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 972:
#line 3289 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 973:
#line 3290 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 974:
#line 3291 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 975:
#line 3292 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 976:
#line 3295 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 977:
#line 3296 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 978:
#line 8 "third_party/libpg_query/grammar/statements/prepare.y"
    {
					PGPrepareStmt *n = makeNode(PGPrepareStmt);
					n->name = (yyvsp[(2) - (5)].str);
					n->argtypes = (yyvsp[(3) - (5)].list);
					n->query = (yyvsp[(5) - (5)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 979:
#line 18 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 980:
#line 19 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = NIL; ;}
    break;

  case 985:
#line 8 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not both */
					n->schemaname = (yyvsp[(3) - (4)].str);
					n->schemaElts = (yyvsp[(4) - (4)].list);
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 986:
#line 17 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not here */
					n->schemaname = (yyvsp[(6) - (7)].str);
					if ((yyvsp[(7) - (7)].list) != NIL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("CREATE SCHEMA IF NOT EXISTS cannot include schema elements"),
								 parser_errposition((yylsp[(7) - (7)]))));
					n->schemaElts = (yyvsp[(7) - (7)].list);
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 987:
#line 35 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					if ((yyloc) < 0)			/* see comments for YYLLOC_DEFAULT */
						(yyloc) = (yylsp[(2) - (2)]);
					(yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 988:
#line 41 "third_party/libpg_query/grammar/statements/create_schema.y"
    { (yyval.list) = NIL; ;}
    break;

  case 993:
#line 11 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (13)].boolean);
					n->concurrent = (yyvsp[(4) - (13)].boolean);
					n->idxname = (yyvsp[(5) - (13)].str);
					n->relation = (yyvsp[(7) - (13)].range);
					n->accessMethod = (yyvsp[(8) - (13)].str);
					n->indexParams = (yyvsp[(10) - (13)].list);
					n->options = (yyvsp[(12) - (13)].list);
					n->whereClause = (yyvsp[(13) - (13)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 994:
#line 36 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (16)].boolean);
					n->concurrent = (yyvsp[(4) - (16)].boolean);
					n->idxname = (yyvsp[(8) - (16)].str);
					n->relation = (yyvsp[(10) - (16)].range);
					n->accessMethod = (yyvsp[(11) - (16)].str);
					n->indexParams = (yyvsp[(13) - (16)].list);
					n->options = (yyvsp[(15) - (16)].list);
					n->whereClause = (yyvsp[(16) - (16)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 995:
#line 62 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 996:
#line 66 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
    break;

  case 997:
#line 67 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (char*) DEFAULT_INDEX_TYPE; ;}
    break;

  case 998:
#line 72 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 999:
#line 73 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1000:
#line 78 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1001:
#line 79 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = NULL; ;}
    break;

  case 1002:
#line 83 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1003:
#line 84 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1004:
#line 89 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1005:
#line 90 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1006:
#line 8 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1007:
#line 17 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1008:
#line 26 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1009:
#line 35 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1010:
#line 44 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1011:
#line 53 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1012:
#line 6 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1013:
#line 8 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGExportStmt *n = makeNode(PGExportStmt);
					n->filename = (yyvsp[(3) - (4)].str);
					n->options = NIL;
					if ((yyvsp[(4) - (4)].list)) {
						n->options = list_concat(n->options, (yyvsp[(4) - (4)].list));
					}
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1014:
#line 21 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGImportStmt *n = makeNode(PGImportStmt);
					n->filename = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1015:
#line 10 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(2) - (2)].node);
					n->options = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1016:
#line 17 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(4) - (4)].node);
					n->options = list_make1(makeDefElem("analyze", NULL, (yylsp[(2) - (4)])));
					if ((yyvsp[(3) - (4)].boolean))
						n->options = lappend(n->options,
											 makeDefElem("verbose", NULL, (yylsp[(3) - (4)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1017:
#line 27 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(3) - (3)].node);
					n->options = list_make1(makeDefElem("verbose", NULL, (yylsp[(2) - (3)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1018:
#line 34 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(5) - (5)].node);
					n->options = (yyvsp[(3) - (5)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1019:
#line 44 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1020:
#line 45 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1021:
#line 50 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 1022:
#line 51 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 1023:
#line 52 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1029:
#line 65 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1030:
#line 66 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1031:
#line 67 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1032:
#line 68 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1033:
#line 73 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1034:
#line 74 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1035:
#line 80 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 1036:
#line 84 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 1037:
#line 91 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1038:
#line 92 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1039:
#line 97 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "true"; ;}
    break;

  case 1040:
#line 98 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "false"; ;}
    break;

  case 1041:
#line 99 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "on"; ;}
    break;

  case 1042:
#line 105 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1043:
#line 111 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 1044:
#line 118 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1045:
#line 119 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "analyze"; ;}
    break;

  case 1046:
#line 11 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(2) - (2)].vsetstmt);
					n->is_local = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1047:
#line 17 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->is_local = true;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1048:
#line 23 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->is_local = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1049:
#line 32 "third_party/libpg_query/grammar/statements/variable_set.y"
    {(yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt);;}
    break;

  case 1050:
#line 34 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_CURRENT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1051:
#line 42 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "timezone";
					if ((yyvsp[(3) - (3)].node) != NULL)
						n->args = list_make1((yyvsp[(3) - (3)].node));
					else
						n->kind = VAR_SET_DEFAULT;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1052:
#line 53 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "search_path";
					n->args = list_make1(makeStringConst((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)])));
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1053:
#line 65 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1054:
#line 73 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1055:
#line 81 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1056:
#line 88 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1057:
#line 98 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)])); ;}
    break;

  case 1058:
#line 100 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1059:
#line 106 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1060:
#line 110 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1061:
#line 114 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (3)].typnam);
					if ((yyvsp[(3) - (3)].list) != NIL)
					{
						PGAConst *n = (PGAConst *) linitial((yyvsp[(3) - (3)].list));
						if ((n->val.val.ival & ~(INTERVAL_MASK(HOUR) | INTERVAL_MASK(MINUTE))) != 0)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("time zone interval must be HOUR or HOUR TO MINUTE"),
									 parser_errposition((yylsp[(3) - (3)]))));
					}
					t->typmods = (yyvsp[(3) - (3)].list);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
				;}
    break;

  case 1062:
#line 129 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (5)].typnam);
					t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.node) = makeStringConstCast((yyvsp[(5) - (5)].str), (yylsp[(5) - (5)]), t);
				;}
    break;

  case 1063:
#line 135 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1064:
#line 136 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1065:
#line 137 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1066:
#line 141 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1067:
#line 142 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 1068:
#line 8 "third_party/libpg_query/grammar/statements/load.y"
    {
					PGLoadStmt *n = makeNode(PGLoadStmt);
					n->filename = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1069:
#line 16 "third_party/libpg_query/grammar/statements/load.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1070:
#line 9 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (4)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1071:
#line 23 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(5) - (5)].range);
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1072:
#line 37 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = (PGVacuumStmt *) (yyvsp[(5) - (5)].node);
					n->options |= PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1073:
#line 49 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (4)].ival);
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1074:
#line 57 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (6)].ival);
					n->relation = (yyvsp[(5) - (6)].range);
					n->va_cols = (yyvsp[(6) - (6)].list);
					if (n->va_cols != NIL)	/* implies analyze */
						n->options |= PG_VACOPT_ANALYZE;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1075:
#line 70 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_ANALYZE; ;}
    break;

  case 1076:
#line 71 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_VERBOSE; ;}
    break;

  case 1077:
#line 72 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FREEZE; ;}
    break;

  case 1078:
#line 73 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FULL; ;}
    break;

  case 1079:
#line 75 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					if (strcmp((yyvsp[(1) - (1)].str), "disable_page_skipping") == 0)
						(yyval.ival) = PG_VACOPT_DISABLE_PAGE_SKIPPING;
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("unrecognized VACUUM option \"%s\"", (yyvsp[(1) - (1)].str)),
									 parser_errposition((yylsp[(1) - (1)]))));
				;}
    break;

  case 1080:
#line 87 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1081:
#line 88 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1082:
#line 93 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1083:
#line 94 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 1084:
#line 98 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1085:
#line 99 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1086:
#line 9 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGDeleteStmt *n = makeNode(PGDeleteStmt);
					n->relation = (yyvsp[(4) - (7)].range);
					n->usingClause = (yyvsp[(5) - (7)].list);
					n->whereClause = (yyvsp[(6) - (7)].node);
					n->returningList = (yyvsp[(7) - (7)].list);
					n->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1087:
#line 22 "third_party/libpg_query/grammar/statements/delete.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 1088:
#line 26 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(2) - (2)].str);
					(yyvsp[(1) - (2)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (2)].range);
				;}
    break;

  case 1089:
#line 33 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(3) - (3)].str);
					(yyvsp[(1) - (3)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 1090:
#line 43 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1091:
#line 44 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1092:
#line 50 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1093:
#line 51 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1094:
#line 10 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (2)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1095:
#line 20 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(3) - (4)].range);
					n->va_cols = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1096:
#line 2 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (2)].vsetstmt); ;}
    break;

  case 1097:
#line 8 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (yyvsp[(1) - (1)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1098:
#line 15 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET_ALL;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1099:
#line 24 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt); ;}
    break;

  case 1100:
#line 26 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "timezone";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1101:
#line 33 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "transaction_isolation";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1102:
#line 4 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1103:
#line 10 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "timezone";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1104:
#line 16 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "transaction_isolation";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1105:
#line 22 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "all";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1108:
#line 31 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1109:
#line 33 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = psprintf("%s.%s", (yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str)); ;}
    break;

  case 1110:
#line 10 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(4) - (9)].range);
					n->view->relpersistence = (yyvsp[(2) - (9)].ival);
					n->aliases = (yyvsp[(5) - (9)].list);
					n->query = (yyvsp[(8) - (9)].node);
					n->replace = false;
					n->options = (yyvsp[(6) - (9)].list);
					n->withCheckOption = (yyvsp[(9) - (9)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1111:
#line 23 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(6) - (11)].range);
					n->view->relpersistence = (yyvsp[(4) - (11)].ival);
					n->aliases = (yyvsp[(7) - (11)].list);
					n->query = (yyvsp[(10) - (11)].node);
					n->replace = true;
					n->options = (yyvsp[(8) - (11)].list);
					n->withCheckOption = (yyvsp[(11) - (11)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1112:
#line 36 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(5) - (12)].range);
					n->view->relpersistence = (yyvsp[(2) - (12)].ival);
					n->aliases = (yyvsp[(7) - (12)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(11) - (12)].node));
					n->replace = false;
					n->options = (yyvsp[(9) - (12)].list);
					n->withCheckOption = (yyvsp[(12) - (12)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(12) - (12)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1113:
#line 54 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(7) - (14)].range);
					n->view->relpersistence = (yyvsp[(4) - (14)].ival);
					n->aliases = (yyvsp[(9) - (14)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(13) - (14)].node));
					n->replace = true;
					n->options = (yyvsp[(11) - (14)].list);
					n->withCheckOption = (yyvsp[(14) - (14)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(14) - (14)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1114:
#line 74 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1115:
#line 75 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1116:
#line 76 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_LOCAL_CHECK_OPTION; ;}
    break;

  case 1117:
#line 77 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_NO_CHECK_OPTION; ;}
    break;

  case 1118:
#line 12 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(6) - (7)].node);
					ctas->into = (yyvsp[(4) - (7)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = false;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (7)].into)->rel->relpersistence = (yyvsp[(2) - (7)].ival);
					(yyvsp[(4) - (7)].into)->skipData = !((yyvsp[(7) - (7)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1119:
#line 25 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(9) - (10)].node);
					ctas->into = (yyvsp[(7) - (10)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = true;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (10)].into)->rel->relpersistence = (yyvsp[(2) - (10)].ival);
					(yyvsp[(7) - (10)].into)->skipData = !((yyvsp[(10) - (10)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1120:
#line 41 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1121:
#line 42 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1122:
#line 43 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1123:
#line 49 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(1) - (4)].range);
					(yyval.into)->colNames = (yyvsp[(2) - (4)].list);
					(yyval.into)->options = (yyvsp[(3) - (4)].list);
					(yyval.into)->onCommit = (yyvsp[(4) - (4)].oncommit);
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;		/* might get changed later */
				;}
    break;


/* Line 1267 of yacc.c.  */
#line 22022 "third_party/libpg_query/grammar/grammar_out.cpp"
      default: break;
    }
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, yyscanner, YY_("syntax error"));
#else
      {
	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
	  {
	    YYSIZE_T yyalloc = 2 * yysize;
	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
	    if (yymsg != yymsgbuf)
	      YYSTACK_FREE (yymsg);
	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
	    if (yymsg)
	      yymsg_alloc = yyalloc;
	    else
	      {
		yymsg = yymsgbuf;
		yymsg_alloc = sizeof yymsgbuf;
	      }
	  }

	if (0 < yysize && yysize <= yymsg_alloc)
	  {
	    (void) yysyntax_error (yymsg, yystate, yychar);
	    yyerror (&yylloc, yyscanner, yymsg);
	  }
	else
	  {
	    yyerror (&yylloc, yyscanner, YY_("syntax error"));
	    if (yysize != 0)
	      goto yyexhaustedlab;
	  }
      }
#endif
    }

  yyerror_range[0] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse look-ahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
	{
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
	}
      else
	{
	  yydestruct ("Error: discarding",
		      yytoken, &yylval, &yylloc, yyscanner);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse look-ahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[0] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule which action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (yyn != YYPACT_NINF)
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;

      yyerror_range[0] = *yylsp;
      yydestruct ("Error: popping",
		  yystos[yystate], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  *++yyvsp = yylval;

  yyerror_range[1] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the look-ahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, (yyerror_range - 1), 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#ifndef yyoverflow
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, yyscanner, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEOF && yychar != YYEMPTY)
     yydestruct ("Cleanup: discarding lookahead",
		 yytoken, &yylval, &yylloc, yyscanner);
  /* Do not reclaim the symbols of the rule which action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  /* Make sure YYID is used.  */
  return YYID (yyresult);
}


#line 67 "third_party/libpg_query/grammar/statements/create_as.y"


#line 1 "third_party/libpg_query/grammar/grammar.cpp"
/*
 * The signature of this function is required by bison.  However, we
 * ignore the passed yylloc and instead use the last token position
 * available from the scanner.
 */
static void
base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner, const char *msg)
{
	parser_yyerror(msg);
}

static PGRawStmt *
makeRawStmt(PGNode *stmt, int stmt_location)
{
	PGRawStmt    *rs = makeNode(PGRawStmt);

	rs->stmt = stmt;
	rs->stmt_location = stmt_location;
	rs->stmt_len = 0;			/* might get changed later */
	return rs;
}

/* Adjust a PGRawStmt to reflect that it doesn't run to the end of the string */
static void
updateRawStmtEnd(PGRawStmt *rs, int end_location)
{
	/*
	 * If we already set the length, don't change it.  This is for situations
	 * like "select foo ;; select bar" where the same statement will be last
	 * in the string for more than one semicolon.
	 */
	if (rs->stmt_len > 0)
		return;

	/* OK, update length of PGRawStmt */
	rs->stmt_len = end_location - rs->stmt_location;
}

static PGNode *
makeColumnRef(char *colname, PGList *indirection,
			  int location, core_yyscan_t yyscanner)
{
	/*
	 * Generate a PGColumnRef node, with an PGAIndirection node added if there
	 * is any subscripting in the specified indirection list.  However,
	 * any field selection at the start of the indirection list must be
	 * transposed into the "fields" part of the PGColumnRef node.
	 */
	PGColumnRef  *c = makeNode(PGColumnRef);
	int		nfields = 0;
	PGListCell *l;

	c->location = location;
	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAIndices))
		{
			PGAIndirection *i = makeNode(PGAIndirection);

			if (nfields == 0)
			{
				/* easy case - all indirection goes to PGAIndirection */
				c->fields = list_make1(makeString(colname));
				i->indirection = check_indirection(indirection, yyscanner);
			}
			else
			{
				/* got to split the list in two */
				i->indirection = check_indirection(list_copy_tail(indirection,
																  nfields),
												   yyscanner);
				indirection = list_truncate(indirection, nfields);
				c->fields = lcons(makeString(colname), indirection);
			}
			i->arg = (PGNode *) c;
			return (PGNode *) i;
		}
		else if (IsA(lfirst(l), PGAStar))
		{
			/* We only allow '*' at the end of a PGColumnRef */
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
		nfields++;
	}
	/* No subscripting, so all indirection gets added to field list */
	c->fields = lcons(makeString(colname), indirection);
	return (PGNode *) c;
}

static PGNode *
makeTypeCast(PGNode *arg, PGTypeName *tpname, int location)
{
	PGTypeCast *n = makeNode(PGTypeCast);
	n->arg = arg;
	n->typeName = tpname;
	n->location = location;
	return (PGNode *) n;
}

static PGNode *
makeStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeStringConstCast(char *str, int location, PGTypeName *tpname)
{
	PGNode *s = makeStringConst(str, location);

	return makeTypeCast(s, tpname, -1);
}

static PGNode *
makeIntConst(int val, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGInteger;
	n->val.val.ival = val;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeFloatConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGFloat;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeBitStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGBitString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeNullAConst(int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGNull;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeAConst(PGValue *v, int location)
{
	PGNode *n;

	switch (v->type)
	{
		case T_PGFloat:
			n = makeFloatConst(v->val.str, location);
			break;

		case T_PGInteger:
			n = makeIntConst(v->val.ival, location);
			break;

		case T_PGString:
		default:
			n = makeStringConst(v->val.str, location);
			break;
	}

	return n;
}

/* makeBoolAConst()
 * Create an PGAConst string node and put it inside a boolean cast.
 */
static PGNode *
makeBoolAConst(bool state, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = (state ? (char*) "t" : (char*) "f");
	n->location = location;

	return makeTypeCast((PGNode *)n, SystemTypeName("bool"), -1);
}

/* check_qualified_name --- check the result of qualified_name production
 *
 * It's easiest to let the grammar production for qualified_name allow
 * subscripts and '*', which we then must reject here.
 */
static void
check_qualified_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
}

/* check_func_name --- check the result of func_name production
 *
 * It's easiest to let the grammar production for func_name allow subscripts
 * and '*', which we then must reject here.
 */
static PGList *
check_func_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
	return names;
}

/* check_indirection --- check the result of indirection production
 *
 * We only allow '*' at the end of the list, but it's hard to enforce that
 * in the grammar, so do it here.
 */
static PGList *
check_indirection(PGList *indirection, core_yyscan_t yyscanner)
{
	PGListCell *l;

	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAStar))
		{
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
	}
	return indirection;
}

/* makeParamRef
 * Creates a new PGParamRef node
 */
static PGNode* makeParamRef(int number, int location)
{
	PGParamRef *p = makeNode(PGParamRef);
	p->number = number;
	p->location = location;
	return (PGNode *) p;
}

static PGNode *
makeParamRefCast(int number, int location, PGTypeName *tpname)
{
	PGNode *p = makeParamRef(number, location);
	return makeTypeCast(p, tpname, -1);
}

/* insertSelectOptions()
 * Insert ORDER BY, etc into an already-constructed SelectStmt.
 *
 * This routine is just to avoid duplicating code in PGSelectStmt productions.
 */
static void
insertSelectOptions(PGSelectStmt *stmt,
					PGList *sortClause, PGList *lockingClause,
					PGNode *limitOffset, PGNode *limitCount,
					PGWithClause *withClause,
					core_yyscan_t yyscanner)
{
	Assert(IsA(stmt, PGSelectStmt));

	/*
	 * Tests here are to reject constructs like
	 *	(SELECT foo ORDER BY bar) ORDER BY baz
	 */
	if (sortClause)
	{
		if (stmt->sortClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple ORDER BY clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) sortClause))));
		stmt->sortClause = sortClause;
	}
	/* We can handle multiple locking clauses, though */
	stmt->lockingClause = list_concat(stmt->lockingClause, lockingClause);
	if (limitOffset)
	{
		if (stmt->limitOffset)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple OFFSET clauses not allowed"),
					 parser_errposition(exprLocation(limitOffset))));
		stmt->limitOffset = limitOffset;
	}
	if (limitCount)
	{
		if (stmt->limitCount)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple LIMIT clauses not allowed"),
					 parser_errposition(exprLocation(limitCount))));
		stmt->limitCount = limitCount;
	}
	if (withClause)
	{
		if (stmt->withClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple WITH clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) withClause))));
		stmt->withClause = withClause;
	}
}

static PGNode *
makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg)
{
	PGSelectStmt *n = makeNode(PGSelectStmt);

	n->op = op;
	n->all = all;
	n->larg = (PGSelectStmt *) larg;
	n->rarg = (PGSelectStmt *) rarg;
	return (PGNode *) n;
}

/* SystemFuncName()
 * Build a properly-qualified reference to a built-in function.
 */
PGList *
SystemFuncName(const char *name)
{
	return list_make2(makeString(DEFAULT_SCHEMA), makeString(name));
}

/* SystemTypeName()
 * Build a properly-qualified reference to a built-in type.
 *
 * typmod is defaulted, but may be changed afterwards by caller.
 * Likewise for the location.
 */
PGTypeName *
SystemTypeName(const char *name)
{
	return makeTypeNameFromNameList(list_make2(makeString(DEFAULT_SCHEMA),
											   makeString(name)));
}

/* doNegate()
 * Handle negation of a numeric constant.
 *
 * Formerly, we did this here because the optimizer couldn't cope with
 * indexquals that looked like "var = -4" --- it wants "var = const"
 * and a unary minus operator applied to a constant didn't qualify.
 * As of Postgres 7.0, that problem doesn't exist anymore because there
 * is a constant-subexpression simplifier in the optimizer.  However,
 * there's still a good reason for doing this here, which is that we can
 * postpone committing to a particular internal representation for simple
 * negative constants.	It's better to leave "-123.456" in string form
 * until we know what the desired type is.
 */
static PGNode *
doNegate(PGNode *n, int location)
{
	if (IsA(n, PGAConst))
	{
		PGAConst *con = (PGAConst *)n;

		/* report the constant's location as that of the '-' sign */
		con->location = location;

		if (con->val.type == T_PGInteger)
		{
			con->val.val.ival = -con->val.val.ival;
			return n;
		}
		if (con->val.type == T_PGFloat)
		{
			doNegateFloat(&con->val);
			return n;
		}
	}

	return (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", NULL, n, location);
}

static void
doNegateFloat(PGValue *v)
{
	char   *oldval = v->val.str;

	Assert(IsA(v, PGFloat));
	if (*oldval == '+')
		oldval++;
	if (*oldval == '-')
		v->val.str = oldval+1;	/* just strip the '-' */
	else
		v->val.str = psprintf("-%s", oldval);
}

static PGNode *
makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a AND b AND c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_AND_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_AND_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a OR b OR c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_OR_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_OR_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeNotExpr(PGNode *expr, int location)
{
	return (PGNode *) makeBoolExpr(PG_NOT_EXPR, list_make1(expr), location);
}

static PGNode *
makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod, int location)
{
	PGSQLValueFunction *svf = makeNode(PGSQLValueFunction);

	svf->op = op;
	/* svf->type will be filled during parse analysis */
	svf->typmod = typmod;
	svf->location = location;
	return (PGNode *) svf;
}

/* Separate PGConstraint nodes from COLLATE clauses in a */
static void
SplitColQualList(PGList *qualList,
				 PGList **constraintList, PGCollateClause **collClause,
				 core_yyscan_t yyscanner)
{
	PGListCell   *cell;
	PGListCell   *prev;
	PGListCell   *next;

	*collClause = NULL;
	prev = NULL;
	for (cell = list_head(qualList); cell; cell = next)
	{
		PGNode   *n = (PGNode *) lfirst(cell);

		next = lnext(cell);
		if (IsA(n, PGConstraint))
		{
			/* keep it in list */
			prev = cell;
			continue;
		}
		if (IsA(n, PGCollateClause))
		{
			PGCollateClause *c = (PGCollateClause *) n;

			if (*collClause)
				ereport(ERROR,
						(errcode(PG_ERRCODE_SYNTAX_ERROR),
						 errmsg("multiple COLLATE clauses not allowed"),
						 parser_errposition(c->location)));
			*collClause = c;
		}
		else
			elog(ERROR, "unexpected node type %d", (int) n->type);
		/* remove non-Constraint nodes from qualList */
		qualList = list_delete_cell(qualList, cell, prev);
	}
	*constraintList = qualList;
}

/*
 * Process result of ConstraintAttributeSpec, and set appropriate bool flags
 * in the output command node.  Pass NULL for any flags the particular
 * command doesn't support.
 */
static void
processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner)
{
	/* defaults */
	if (deferrable)
		*deferrable = false;
	if (initdeferred)
		*initdeferred = false;
	if (not_valid)
		*not_valid = false;

	if (cas_bits & (CAS_DEFERRABLE | CAS_INITIALLY_DEFERRED))
	{
		if (deferrable)
			*deferrable = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_INITIALLY_DEFERRED)
	{
		if (initdeferred)
			*initdeferred = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NOT_VALID)
	{
		if (not_valid)
			*not_valid = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NOT VALID",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NO_INHERIT)
	{
		if (no_inherit)
			*no_inherit = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NO INHERIT",
							constrType),
					 parser_errposition(location)));
	}
}

/*----------
 * Recursive view transformation
 *
 * Convert
 *
 *     CREATE RECURSIVE VIEW relname (aliases) AS query
 *
 * to
 *
 *     CREATE VIEW relname (aliases) AS
 *         WITH RECURSIVE relname (aliases) AS (query)
 *         SELECT aliases FROM relname
 *
 * Actually, just the WITH ... part, which is then inserted into the original
 * view as the query.
 * ----------
 */
static PGNode *
makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query)
{
	PGSelectStmt *s = makeNode(PGSelectStmt);
	PGWithClause *w = makeNode(PGWithClause);
	PGCommonTableExpr *cte = makeNode(PGCommonTableExpr);
	PGList	   *tl = NIL;
	PGListCell   *lc;

	/* create common table expression */
	cte->ctename = relname;
	cte->aliascolnames = aliases;
	cte->ctequery = query;
	cte->location = -1;

	/* create WITH clause and attach CTE */
	w->recursive = true;
	w->ctes = list_make1(cte);
	w->location = -1;

	/* create target list for the new SELECT from the alias list of the
	 * recursive view specification */
	foreach (lc, aliases)
	{
		PGResTarget *rt = makeNode(PGResTarget);

		rt->name = NULL;
		rt->indirection = NIL;
		rt->val = makeColumnRef(strVal(lfirst(lc)), NIL, -1, 0);
		rt->location = -1;

		tl = lappend(tl, rt);
	}

	/* create new SELECT combining WITH clause, target list, and fake FROM
	 * clause */
	s->withClause = w;
	s->targetList = tl;
	s->fromClause = list_make1(makeRangeVar(NULL, relname, -1));

	return (PGNode *) s;
}

/* parser_init()
 * Initialize to parse one query string
 */
void
parser_init(base_yy_extra_type *yyext)
{
	yyext->parsetree = NIL;		/* in case grammar forgets to set it */
}
} // namespace duckdb_libpgquery
