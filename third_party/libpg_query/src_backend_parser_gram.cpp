/* A Bison parser, made by GNU Bison 2.3.  */

/* Skeleton implementation for Bison's Yacc-like parsers in C

   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.3"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Using locations.  */
#define YYLSP_NEEDED 1

/* Substitute the variable and function names.  */
#define yyparse base_yyparse
#define yylex   base_yylex
#define yyerror base_yyerror
#define yylval  base_yylval
#define yychar  base_yychar
#define yydebug base_yydebug
#define yynerrs base_yynerrs
#define yylloc base_yylloc

/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     IDENT = 258,
     FCONST = 259,
     SCONST = 260,
     BCONST = 261,
     XCONST = 262,
     Op = 263,
     ICONST = 264,
     PARAM = 265,
     TYPECAST = 266,
     DOT_DOT = 267,
     COLON_EQUALS = 268,
     EQUALS_GREATER = 269,
     LAMBDA_ARROW = 270,
     LESS_EQUALS = 271,
     GREATER_EQUALS = 272,
     NOT_EQUALS = 273,
     ABORT_P = 274,
     ABSOLUTE_P = 275,
     ACCESS = 276,
     ACTION = 277,
     ADD_P = 278,
     ADMIN = 279,
     AFTER = 280,
     AGGREGATE = 281,
     ALL = 282,
     ALSO = 283,
     ALTER = 284,
     ALWAYS = 285,
     ANALYSE = 286,
     ANALYZE = 287,
     AND = 288,
     ANY = 289,
     ARRAY = 290,
     AS = 291,
     ASC_P = 292,
     ASSERTION = 293,
     ASSIGNMENT = 294,
     ASYMMETRIC = 295,
     AT = 296,
     ATTACH = 297,
     ATTRIBUTE = 298,
     AUTHORIZATION = 299,
     BACKWARD = 300,
     BEFORE = 301,
     BEGIN_P = 302,
     BETWEEN = 303,
     BIGINT = 304,
     BINARY = 305,
     BIT = 306,
     BOOLEAN_P = 307,
     BOTH = 308,
     BY = 309,
     CACHE = 310,
     CALL_P = 311,
     CALLED = 312,
     CASCADE = 313,
     CASCADED = 314,
     CASE = 315,
     CAST = 316,
     CATALOG_P = 317,
     CHAIN = 318,
     CHAR_P = 319,
     CHARACTER = 320,
     CHARACTERISTICS = 321,
     CHECK_P = 322,
     CHECKPOINT = 323,
     CLASS = 324,
     CLOSE = 325,
     CLUSTER = 326,
     COALESCE = 327,
     COLLATE = 328,
     COLLATION = 329,
     COLUMN = 330,
     COLUMNS = 331,
     COMMENT = 332,
     COMMENTS = 333,
     COMMIT = 334,
     COMMITTED = 335,
     CONCURRENTLY = 336,
     CONFIGURATION = 337,
     CONFLICT = 338,
     CONNECTION = 339,
     CONSTRAINT = 340,
     CONSTRAINTS = 341,
     CONTENT_P = 342,
     CONTINUE_P = 343,
     CONVERSION_P = 344,
     COPY = 345,
     COST = 346,
     CREATE_P = 347,
     CROSS = 348,
     CSV = 349,
     CUBE = 350,
     CURRENT_P = 351,
     CURRENT_CATALOG = 352,
     CURRENT_DATE = 353,
     CURRENT_ROLE = 354,
     CURRENT_SCHEMA = 355,
     CURRENT_TIME = 356,
     CURRENT_TIMESTAMP = 357,
     CURRENT_USER = 358,
     CURSOR = 359,
     CYCLE = 360,
     DATA_P = 361,
     DATABASE = 362,
     DAY_P = 363,
     DAYS_P = 364,
     DEALLOCATE = 365,
     DEC = 366,
     DECIMAL_P = 367,
     DECLARE = 368,
     DEFAULT = 369,
     DEFAULTS = 370,
     DEFERRABLE = 371,
     DEFERRED = 372,
     DEFINER = 373,
     DELETE_P = 374,
     DELIMITER = 375,
     DELIMITERS = 376,
     DEPENDS = 377,
     DESC_P = 378,
     DESCRIBE = 379,
     DETACH = 380,
     DICTIONARY = 381,
     DISABLE_P = 382,
     DISCARD = 383,
     DISTINCT = 384,
     DO = 385,
     DOCUMENT_P = 386,
     DOMAIN_P = 387,
     DOUBLE_P = 388,
     DROP = 389,
     EACH = 390,
     ELSE = 391,
     ENABLE_P = 392,
     ENCODING = 393,
     ENCRYPTED = 394,
     END_P = 395,
     ENUM_P = 396,
     ESCAPE = 397,
     EVENT = 398,
     EXCEPT = 399,
     EXCLUDE = 400,
     EXCLUDING = 401,
     EXCLUSIVE = 402,
     EXECUTE = 403,
     EXISTS = 404,
     EXPLAIN = 405,
     EXPORT_P = 406,
     EXTENSION = 407,
     EXTERNAL = 408,
     EXTRACT = 409,
     FALSE_P = 410,
     FAMILY = 411,
     FETCH = 412,
     FILTER = 413,
     FIRST_P = 414,
     FLOAT_P = 415,
     FOLLOWING = 416,
     FOR = 417,
     FORCE = 418,
     FOREIGN = 419,
     FORWARD = 420,
     FREEZE = 421,
     FROM = 422,
     FULL = 423,
     FUNCTION = 424,
     FUNCTIONS = 425,
     GENERATED = 426,
     GLOB = 427,
     GLOBAL = 428,
     GRANT = 429,
     GRANTED = 430,
     GROUP_P = 431,
     GROUPING = 432,
     HANDLER = 433,
     HAVING = 434,
     HEADER_P = 435,
     HOLD = 436,
     HOUR_P = 437,
     HOURS_P = 438,
     IDENTITY_P = 439,
     IF_P = 440,
     ILIKE = 441,
     IMMEDIATE = 442,
     IMMUTABLE = 443,
     IMPLICIT_P = 444,
     IMPORT_P = 445,
     IN_P = 446,
     INCLUDING = 447,
     INCREMENT = 448,
     INDEX = 449,
     INDEXES = 450,
     INHERIT = 451,
     INHERITS = 452,
     INITIALLY = 453,
     INLINE_P = 454,
     INNER_P = 455,
     INOUT = 456,
     INPUT_P = 457,
     INSENSITIVE = 458,
     INSERT = 459,
     INSTEAD = 460,
     INT_P = 461,
     INTEGER = 462,
     INTERSECT = 463,
     INTERVAL = 464,
     INTO = 465,
     INVOKER = 466,
     IS = 467,
     ISNULL = 468,
     ISOLATION = 469,
     JOIN = 470,
     KEY = 471,
     LABEL = 472,
     LANGUAGE = 473,
     LARGE_P = 474,
     LAST_P = 475,
     LATERAL_P = 476,
     LEADING = 477,
     LEAKPROOF = 478,
     LEFT = 479,
     LEVEL = 480,
     LIKE = 481,
     LIMIT = 482,
     LISTEN = 483,
     LOAD = 484,
     LOCAL = 485,
     LOCALTIME = 486,
     LOCALTIMESTAMP = 487,
     LOCATION = 488,
     LOCK_P = 489,
     LOCKED = 490,
     LOGGED = 491,
     MACRO = 492,
     MAPPING = 493,
     MATCH = 494,
     MATERIALIZED = 495,
     MAXVALUE = 496,
     METHOD = 497,
     MICROSECOND_P = 498,
     MICROSECONDS_P = 499,
     MILLISECOND_P = 500,
     MILLISECONDS_P = 501,
     MINUTE_P = 502,
     MINUTES_P = 503,
     MINVALUE = 504,
     MODE = 505,
     MONTH_P = 506,
     MONTHS_P = 507,
     MOVE = 508,
     NAME_P = 509,
     NAMES = 510,
     NATIONAL = 511,
     NATURAL = 512,
     NCHAR = 513,
     NEW = 514,
     NEXT = 515,
     NO = 516,
     NONE = 517,
     NOT = 518,
     NOTHING = 519,
     NOTIFY = 520,
     NOTNULL = 521,
     NOWAIT = 522,
     NULL_P = 523,
     NULLIF = 524,
     NULLS_P = 525,
     NUMERIC = 526,
     OBJECT_P = 527,
     OF = 528,
     OFF = 529,
     OFFSET = 530,
     OIDS = 531,
     OLD = 532,
     ON = 533,
     ONLY = 534,
     OPERATOR = 535,
     OPTION = 536,
     OPTIONS = 537,
     OR = 538,
     ORDER = 539,
     ORDINALITY = 540,
     OUT_P = 541,
     OUTER_P = 542,
     OVER = 543,
     OVERLAPS = 544,
     OVERLAY = 545,
     OVERRIDING = 546,
     OWNED = 547,
     OWNER = 548,
     PARALLEL = 549,
     PARSER = 550,
     PARTIAL = 551,
     PARTITION = 552,
     PASSING = 553,
     PASSWORD = 554,
     PERCENT = 555,
     PLACING = 556,
     PLANS = 557,
     POLICY = 558,
     POSITION = 559,
     PRAGMA_P = 560,
     PRECEDING = 561,
     PRECISION = 562,
     PREPARE = 563,
     PREPARED = 564,
     PRESERVE = 565,
     PRIMARY = 566,
     PRIOR = 567,
     PRIVILEGES = 568,
     PROCEDURAL = 569,
     PROCEDURE = 570,
     PROGRAM = 571,
     PUBLICATION = 572,
     QUOTE = 573,
     RANGE = 574,
     READ_P = 575,
     REAL = 576,
     REASSIGN = 577,
     RECHECK = 578,
     RECURSIVE = 579,
     REF = 580,
     REFERENCES = 581,
     REFERENCING = 582,
     REFRESH = 583,
     REINDEX = 584,
     RELATIVE_P = 585,
     RELEASE = 586,
     RENAME = 587,
     REPEATABLE = 588,
     REPLACE = 589,
     REPLICA = 590,
     RESET = 591,
     RESTART = 592,
     RESTRICT = 593,
     RETURNING = 594,
     RETURNS = 595,
     REVOKE = 596,
     RIGHT = 597,
     ROLE = 598,
     ROLLBACK = 599,
     ROLLUP = 600,
     ROW = 601,
     ROWS = 602,
     RULE = 603,
     SAMPLE = 604,
     SAVEPOINT = 605,
     SCHEMA = 606,
     SCHEMAS = 607,
     SCROLL = 608,
     SEARCH = 609,
     SECOND_P = 610,
     SECONDS_P = 611,
     SECURITY = 612,
     SELECT = 613,
     SEQUENCE = 614,
     SEQUENCES = 615,
     SERIALIZABLE = 616,
     SERVER = 617,
     SESSION = 618,
     SESSION_USER = 619,
     SET = 620,
     SETOF = 621,
     SETS = 622,
     SHARE = 623,
     SHOW = 624,
     SIMILAR = 625,
     SIMPLE = 626,
     SKIP = 627,
     SMALLINT = 628,
     SNAPSHOT = 629,
     SOME = 630,
     SQL_P = 631,
     STABLE = 632,
     STANDALONE_P = 633,
     START = 634,
     STATEMENT = 635,
     STATISTICS = 636,
     STDIN = 637,
     STDOUT = 638,
     STORAGE = 639,
     STRICT_P = 640,
     STRIP_P = 641,
     STRUCT = 642,
     SUBSCRIPTION = 643,
     SUBSTRING = 644,
     SYMMETRIC = 645,
     SYSID = 646,
     SYSTEM_P = 647,
     TABLE = 648,
     TABLES = 649,
     TABLESAMPLE = 650,
     TABLESPACE = 651,
     TEMP = 652,
     TEMPLATE = 653,
     TEMPORARY = 654,
     TEXT_P = 655,
     THEN = 656,
     TIME = 657,
     TIMESTAMP = 658,
     TO = 659,
     TRAILING = 660,
     TRANSACTION = 661,
     TRANSFORM = 662,
     TREAT = 663,
     TRIGGER = 664,
     TRIM = 665,
     TRUE_P = 666,
     TRUNCATE = 667,
     TRUSTED = 668,
     TYPE_P = 669,
     TYPES_P = 670,
     UNBOUNDED = 671,
     UNCOMMITTED = 672,
     UNENCRYPTED = 673,
     UNION = 674,
     UNIQUE = 675,
     UNKNOWN = 676,
     UNLISTEN = 677,
     UNLOGGED = 678,
     UNTIL = 679,
     UPDATE = 680,
     USER = 681,
     USING = 682,
     VACUUM = 683,
     VALID = 684,
     VALIDATE = 685,
     VALIDATOR = 686,
     VALUE_P = 687,
     VALUES = 688,
     VARCHAR = 689,
     VARIADIC = 690,
     VARYING = 691,
     VERBOSE = 692,
     VERSION_P = 693,
     VIEW = 694,
     VIEWS = 695,
     VOLATILE = 696,
     WHEN = 697,
     WHERE = 698,
     WHITESPACE_P = 699,
     WINDOW = 700,
     WITH = 701,
     WITHIN = 702,
     WITHOUT = 703,
     WORK = 704,
     WRAPPER = 705,
     WRITE_P = 706,
     XML_P = 707,
     XMLATTRIBUTES = 708,
     XMLCONCAT = 709,
     XMLELEMENT = 710,
     XMLEXISTS = 711,
     XMLFOREST = 712,
     XMLNAMESPACES = 713,
     XMLPARSE = 714,
     XMLPI = 715,
     XMLROOT = 716,
     XMLSERIALIZE = 717,
     XMLTABLE = 718,
     YEAR_P = 719,
     YEARS_P = 720,
     YES_P = 721,
     ZONE = 722,
     NOT_LA = 723,
     NULLS_LA = 724,
     WITH_LA = 725,
     POSTFIXOP = 726,
     UMINUS = 727
   };
#endif
/* Tokens.  */
#define IDENT 258
#define FCONST 259
#define SCONST 260
#define BCONST 261
#define XCONST 262
#define Op 263
#define ICONST 264
#define PARAM 265
#define TYPECAST 266
#define DOT_DOT 267
#define COLON_EQUALS 268
#define EQUALS_GREATER 269
#define LAMBDA_ARROW 270
#define LESS_EQUALS 271
#define GREATER_EQUALS 272
#define NOT_EQUALS 273
#define ABORT_P 274
#define ABSOLUTE_P 275
#define ACCESS 276
#define ACTION 277
#define ADD_P 278
#define ADMIN 279
#define AFTER 280
#define AGGREGATE 281
#define ALL 282
#define ALSO 283
#define ALTER 284
#define ALWAYS 285
#define ANALYSE 286
#define ANALYZE 287
#define AND 288
#define ANY 289
#define ARRAY 290
#define AS 291
#define ASC_P 292
#define ASSERTION 293
#define ASSIGNMENT 294
#define ASYMMETRIC 295
#define AT 296
#define ATTACH 297
#define ATTRIBUTE 298
#define AUTHORIZATION 299
#define BACKWARD 300
#define BEFORE 301
#define BEGIN_P 302
#define BETWEEN 303
#define BIGINT 304
#define BINARY 305
#define BIT 306
#define BOOLEAN_P 307
#define BOTH 308
#define BY 309
#define CACHE 310
#define CALL_P 311
#define CALLED 312
#define CASCADE 313
#define CASCADED 314
#define CASE 315
#define CAST 316
#define CATALOG_P 317
#define CHAIN 318
#define CHAR_P 319
#define CHARACTER 320
#define CHARACTERISTICS 321
#define CHECK_P 322
#define CHECKPOINT 323
#define CLASS 324
#define CLOSE 325
#define CLUSTER 326
#define COALESCE 327
#define COLLATE 328
#define COLLATION 329
#define COLUMN 330
#define COLUMNS 331
#define COMMENT 332
#define COMMENTS 333
#define COMMIT 334
#define COMMITTED 335
#define CONCURRENTLY 336
#define CONFIGURATION 337
#define CONFLICT 338
#define CONNECTION 339
#define CONSTRAINT 340
#define CONSTRAINTS 341
#define CONTENT_P 342
#define CONTINUE_P 343
#define CONVERSION_P 344
#define COPY 345
#define COST 346
#define CREATE_P 347
#define CROSS 348
#define CSV 349
#define CUBE 350
#define CURRENT_P 351
#define CURRENT_CATALOG 352
#define CURRENT_DATE 353
#define CURRENT_ROLE 354
#define CURRENT_SCHEMA 355
#define CURRENT_TIME 356
#define CURRENT_TIMESTAMP 357
#define CURRENT_USER 358
#define CURSOR 359
#define CYCLE 360
#define DATA_P 361
#define DATABASE 362
#define DAY_P 363
#define DAYS_P 364
#define DEALLOCATE 365
#define DEC 366
#define DECIMAL_P 367
#define DECLARE 368
#define DEFAULT 369
#define DEFAULTS 370
#define DEFERRABLE 371
#define DEFERRED 372
#define DEFINER 373
#define DELETE_P 374
#define DELIMITER 375
#define DELIMITERS 376
#define DEPENDS 377
#define DESC_P 378
#define DESCRIBE 379
#define DETACH 380
#define DICTIONARY 381
#define DISABLE_P 382
#define DISCARD 383
#define DISTINCT 384
#define DO 385
#define DOCUMENT_P 386
#define DOMAIN_P 387
#define DOUBLE_P 388
#define DROP 389
#define EACH 390
#define ELSE 391
#define ENABLE_P 392
#define ENCODING 393
#define ENCRYPTED 394
#define END_P 395
#define ENUM_P 396
#define ESCAPE 397
#define EVENT 398
#define EXCEPT 399
#define EXCLUDE 400
#define EXCLUDING 401
#define EXCLUSIVE 402
#define EXECUTE 403
#define EXISTS 404
#define EXPLAIN 405
#define EXPORT_P 406
#define EXTENSION 407
#define EXTERNAL 408
#define EXTRACT 409
#define FALSE_P 410
#define FAMILY 411
#define FETCH 412
#define FILTER 413
#define FIRST_P 414
#define FLOAT_P 415
#define FOLLOWING 416
#define FOR 417
#define FORCE 418
#define FOREIGN 419
#define FORWARD 420
#define FREEZE 421
#define FROM 422
#define FULL 423
#define FUNCTION 424
#define FUNCTIONS 425
#define GENERATED 426
#define GLOB 427
#define GLOBAL 428
#define GRANT 429
#define GRANTED 430
#define GROUP_P 431
#define GROUPING 432
#define HANDLER 433
#define HAVING 434
#define HEADER_P 435
#define HOLD 436
#define HOUR_P 437
#define HOURS_P 438
#define IDENTITY_P 439
#define IF_P 440
#define ILIKE 441
#define IMMEDIATE 442
#define IMMUTABLE 443
#define IMPLICIT_P 444
#define IMPORT_P 445
#define IN_P 446
#define INCLUDING 447
#define INCREMENT 448
#define INDEX 449
#define INDEXES 450
#define INHERIT 451
#define INHERITS 452
#define INITIALLY 453
#define INLINE_P 454
#define INNER_P 455
#define INOUT 456
#define INPUT_P 457
#define INSENSITIVE 458
#define INSERT 459
#define INSTEAD 460
#define INT_P 461
#define INTEGER 462
#define INTERSECT 463
#define INTERVAL 464
#define INTO 465
#define INVOKER 466
#define IS 467
#define ISNULL 468
#define ISOLATION 469
#define JOIN 470
#define KEY 471
#define LABEL 472
#define LANGUAGE 473
#define LARGE_P 474
#define LAST_P 475
#define LATERAL_P 476
#define LEADING 477
#define LEAKPROOF 478
#define LEFT 479
#define LEVEL 480
#define LIKE 481
#define LIMIT 482
#define LISTEN 483
#define LOAD 484
#define LOCAL 485
#define LOCALTIME 486
#define LOCALTIMESTAMP 487
#define LOCATION 488
#define LOCK_P 489
#define LOCKED 490
#define LOGGED 491
#define MACRO 492
#define MAPPING 493
#define MATCH 494
#define MATERIALIZED 495
#define MAXVALUE 496
#define METHOD 497
#define MICROSECOND_P 498
#define MICROSECONDS_P 499
#define MILLISECOND_P 500
#define MILLISECONDS_P 501
#define MINUTE_P 502
#define MINUTES_P 503
#define MINVALUE 504
#define MODE 505
#define MONTH_P 506
#define MONTHS_P 507
#define MOVE 508
#define NAME_P 509
#define NAMES 510
#define NATIONAL 511
#define NATURAL 512
#define NCHAR 513
#define NEW 514
#define NEXT 515
#define NO 516
#define NONE 517
#define NOT 518
#define NOTHING 519
#define NOTIFY 520
#define NOTNULL 521
#define NOWAIT 522
#define NULL_P 523
#define NULLIF 524
#define NULLS_P 525
#define NUMERIC 526
#define OBJECT_P 527
#define OF 528
#define OFF 529
#define OFFSET 530
#define OIDS 531
#define OLD 532
#define ON 533
#define ONLY 534
#define OPERATOR 535
#define OPTION 536
#define OPTIONS 537
#define OR 538
#define ORDER 539
#define ORDINALITY 540
#define OUT_P 541
#define OUTER_P 542
#define OVER 543
#define OVERLAPS 544
#define OVERLAY 545
#define OVERRIDING 546
#define OWNED 547
#define OWNER 548
#define PARALLEL 549
#define PARSER 550
#define PARTIAL 551
#define PARTITION 552
#define PASSING 553
#define PASSWORD 554
#define PERCENT 555
#define PLACING 556
#define PLANS 557
#define POLICY 558
#define POSITION 559
#define PRAGMA_P 560
#define PRECEDING 561
#define PRECISION 562
#define PREPARE 563
#define PREPARED 564
#define PRESERVE 565
#define PRIMARY 566
#define PRIOR 567
#define PRIVILEGES 568
#define PROCEDURAL 569
#define PROCEDURE 570
#define PROGRAM 571
#define PUBLICATION 572
#define QUOTE 573
#define RANGE 574
#define READ_P 575
#define REAL 576
#define REASSIGN 577
#define RECHECK 578
#define RECURSIVE 579
#define REF 580
#define REFERENCES 581
#define REFERENCING 582
#define REFRESH 583
#define REINDEX 584
#define RELATIVE_P 585
#define RELEASE 586
#define RENAME 587
#define REPEATABLE 588
#define REPLACE 589
#define REPLICA 590
#define RESET 591
#define RESTART 592
#define RESTRICT 593
#define RETURNING 594
#define RETURNS 595
#define REVOKE 596
#define RIGHT 597
#define ROLE 598
#define ROLLBACK 599
#define ROLLUP 600
#define ROW 601
#define ROWS 602
#define RULE 603
#define SAMPLE 604
#define SAVEPOINT 605
#define SCHEMA 606
#define SCHEMAS 607
#define SCROLL 608
#define SEARCH 609
#define SECOND_P 610
#define SECONDS_P 611
#define SECURITY 612
#define SELECT 613
#define SEQUENCE 614
#define SEQUENCES 615
#define SERIALIZABLE 616
#define SERVER 617
#define SESSION 618
#define SESSION_USER 619
#define SET 620
#define SETOF 621
#define SETS 622
#define SHARE 623
#define SHOW 624
#define SIMILAR 625
#define SIMPLE 626
#define SKIP 627
#define SMALLINT 628
#define SNAPSHOT 629
#define SOME 630
#define SQL_P 631
#define STABLE 632
#define STANDALONE_P 633
#define START 634
#define STATEMENT 635
#define STATISTICS 636
#define STDIN 637
#define STDOUT 638
#define STORAGE 639
#define STRICT_P 640
#define STRIP_P 641
#define STRUCT 642
#define SUBSCRIPTION 643
#define SUBSTRING 644
#define SYMMETRIC 645
#define SYSID 646
#define SYSTEM_P 647
#define TABLE 648
#define TABLES 649
#define TABLESAMPLE 650
#define TABLESPACE 651
#define TEMP 652
#define TEMPLATE 653
#define TEMPORARY 654
#define TEXT_P 655
#define THEN 656
#define TIME 657
#define TIMESTAMP 658
#define TO 659
#define TRAILING 660
#define TRANSACTION 661
#define TRANSFORM 662
#define TREAT 663
#define TRIGGER 664
#define TRIM 665
#define TRUE_P 666
#define TRUNCATE 667
#define TRUSTED 668
#define TYPE_P 669
#define TYPES_P 670
#define UNBOUNDED 671
#define UNCOMMITTED 672
#define UNENCRYPTED 673
#define UNION 674
#define UNIQUE 675
#define UNKNOWN 676
#define UNLISTEN 677
#define UNLOGGED 678
#define UNTIL 679
#define UPDATE 680
#define USER 681
#define USING 682
#define VACUUM 683
#define VALID 684
#define VALIDATE 685
#define VALIDATOR 686
#define VALUE_P 687
#define VALUES 688
#define VARCHAR 689
#define VARIADIC 690
#define VARYING 691
#define VERBOSE 692
#define VERSION_P 693
#define VIEW 694
#define VIEWS 695
#define VOLATILE 696
#define WHEN 697
#define WHERE 698
#define WHITESPACE_P 699
#define WINDOW 700
#define WITH 701
#define WITHIN 702
#define WITHOUT 703
#define WORK 704
#define WRAPPER 705
#define WRITE_P 706
#define XML_P 707
#define XMLATTRIBUTES 708
#define XMLCONCAT 709
#define XMLELEMENT 710
#define XMLEXISTS 711
#define XMLFOREST 712
#define XMLNAMESPACES 713
#define XMLPARSE 714
#define XMLPI 715
#define XMLROOT 716
#define XMLSERIALIZE 717
#define XMLTABLE 718
#define YEAR_P 719
#define YEARS_P 720
#define YES_P 721
#define ZONE 722
#define NOT_LA 723
#define NULLS_LA 724
#define WITH_LA 725
#define POSTFIXOP 726
#define UMINUS 727




/* Copy the first part of user declarations.  */
#line 1 "third_party/libpg_query/grammar/grammar.y.tmp"

#line 1 "third_party/libpg_query/grammar/grammar.hpp"
/*#define YYDEBUG 1*/
/*-------------------------------------------------------------------------
 *
 * gram.y
 *	  POSTGRESQL BISON rules/actions
 *
 * Portions Copyright (c) 1996-2017, PostgreSQL Global Development PGGroup
 * Portions Copyright (c) 1994, Regents of the University of California
 *
 *
 * IDENTIFICATION
 *	  src/backend/parser/gram.y
 *
 * HISTORY
 *	  AUTHOR			DATE			MAJOR EVENT
 *	  Andrew Yu			Sept, 1994		POSTQUEL to SQL conversion
 *	  Andrew Yu			Oct, 1994		lispy code conversion
 *
 * NOTES
 *	  CAPITALS are used to represent terminal symbols.
 *	  non-capitals are used to represent non-terminals.
 *
 *	  In general, nothing in this file should initiate database accesses
 *	  nor depend on changeable state (such as SET variables).  If you do
 *	  database accesses, your code will fail when we have aborted the
 *	  current transaction and are just parsing commands to find the next
 *	  ROLLBACK or COMMIT.  If you make use of SET variables, then you
 *	  will do the wrong thing in multi-query strings like this:
 *			SET constraint_exclusion TO off; SELECT * FROM foo;
 *	  because the entire string is parsed by gram.y before the SET gets
 *	  executed.  Anything that depends on the database or changeable state
 *	  should be handled during parse analysis so that it happens at the
 *	  right time not the wrong time.
 *
 * WARNINGS
 *	  If you use a list, make sure the datum is a node so that the printing
 *	  routines work.
 *
 *	  Sometimes we assign constants to makeStrings. Make sure we don't free
 *	  those.
 *
 *-------------------------------------------------------------------------
 */
#include "pg_functions.hpp"
#include <string.h>

#include <ctype.h>
#include <limits.h>

#include "nodes/makefuncs.hpp"
#include "nodes/nodeFuncs.hpp"
#include "parser/gramparse.hpp"
#include "parser/parser.hpp"
#include "utils/datetime.hpp"

namespace duckdb_libpgquery {
#define DEFAULT_SCHEMA "main"

/*
 * Location tracking support --- simpler than bison's default, since we only
 * want to track the start position not the end position of each nonterminal.
 */
#define YYLLOC_DEFAULT(Current, Rhs, N) \
	do { \
		if ((N) > 0) \
			(Current) = (Rhs)[1]; \
		else \
			(Current) = (-1); \
	} while (0)

/*
 * The above macro assigns -1 (unknown) as the parse location of any
 * nonterminal that was reduced from an empty rule, or whose leftmost
 * component was reduced from an empty rule.  This is problematic
 * for nonterminals defined like
 *		OptFooList: / * EMPTY * / { ... } | OptFooList Foo { ... } ;
 * because we'll set -1 as the location during the first reduction and then
 * copy it during each subsequent reduction, leaving us with -1 for the
 * location even when the list is not empty.  To fix that, do this in the
 * action for the nonempty rule(s):
 *		if (@$ < 0) @$ = @2;
 * (Although we have many nonterminals that follow this pattern, we only
 * bother with fixing @$ like this when the nonterminal's parse location
 * is actually referenced in some rule.)
 *
 * A cleaner answer would be to make YYLLOC_DEFAULT scan all the Rhs
 * locations until it's found one that's not -1.  Then we'd get a correct
 * location for any nonterminal that isn't entirely empty.  But this way
 * would add overhead to every rule reduction, and so far there's not been
 * a compelling reason to pay that overhead.
 */

/*
 * Bison doesn't allocate anything that needs to live across parser calls,
 * so we can easily have it use palloc instead of malloc.  This prevents
 * memory leaks if we error out during parsing.  Note this only works with
 * bison >= 2.0.  However, in bison 1.875 the default is to use alloca()
 * if possible, so there's not really much problem anyhow, at least if
 * you're building with gcc.
 */
#define YYMALLOC palloc
#define YYFREE   pfree
#define YYINITDEPTH 1000

/* yields an integer bitmask of these flags: */
#define CAS_NOT_DEFERRABLE			0x01
#define CAS_DEFERRABLE				0x02
#define CAS_INITIALLY_IMMEDIATE		0x04
#define CAS_INITIALLY_DEFERRED		0x08
#define CAS_NOT_VALID				0x10
#define CAS_NO_INHERIT				0x20


#define parser_yyerror(msg)  scanner_yyerror(msg, yyscanner)
#define parser_errposition(pos)  scanner_errposition(pos, yyscanner)

static void base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner,
						 const char *msg);
static PGRawStmt *makeRawStmt(PGNode *stmt, int stmt_location);
static void updateRawStmtEnd(PGRawStmt *rs, int end_location);
static PGNode *makeColumnRef(char *colname, PGList *indirection,
						   int location, core_yyscan_t yyscanner);
static PGNode *makeTypeCast(PGNode *arg, PGTypeName *tpname, int location);
static PGNode *makeStringConst(char *str, int location);
static PGNode *makeStringConstCast(char *str, int location, PGTypeName *tpname);
static PGNode *makeIntervalNode(char *str, int location, PGList *typmods);
static PGNode *makeIntervalNode(int val, int location, PGList *typmods);
static PGNode *makeIntervalNode(PGNode *arg, int location, PGList *typmods);
static PGNode *makeSampleSize(PGValue *sample_size, bool is_percentage);
static PGNode *makeSampleOptions(PGNode *sample_size, char *method, int seed, int location);
static PGNode *makeIntConst(int val, int location);
static PGNode *makeFloatConst(char *str, int location);
static PGNode *makeBitStringConst(char *str, int location);
static PGNode *makeNullAConst(int location);
static PGNode *makeAConst(PGValue *v, int location);
static PGNode *makeBoolAConst(bool state, int location);
static PGNode *makeParamRef(int number, int location);
static PGNode *makeParamRefCast(int number, int location, PGTypeName *tpname);
static void check_qualified_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_func_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_indirection(PGList *indirection, core_yyscan_t yyscanner);
static void insertSelectOptions(PGSelectStmt *stmt,
								PGList *sortClause, PGList *lockingClause,
								PGNode *limitOffset, PGNode *limitCount,
								PGWithClause *withClause,
								core_yyscan_t yyscanner);
static PGNode *makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg);
static PGNode *doNegate(PGNode *n, int location);
static void doNegateFloat(PGValue *v);
static PGNode *makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeNotExpr(PGNode *expr, int location);
static PGNode *makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod,
								  int location);
static void SplitColQualList(PGList *qualList,
							 PGList **constraintList, PGCollateClause **collClause,
							 core_yyscan_t yyscanner);
static void processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner);
static PGNode *makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query);



/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* Enabling the token table.  */
#ifndef YYTOKEN_TABLE
# define YYTOKEN_TABLE 0
#endif

#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE
#line 14 "third_party/libpg_query/grammar/grammar.y"
{
	core_YYSTYPE		core_yystype;
	/* these fields must match core_YYSTYPE: */
	int					ival;
	char				*str;
	const char			*keyword;
	const char          *conststr;

	char				chr;
	bool				boolean;
	PGJoinType			jtype;
	PGDropBehavior		dbehavior;
	PGOnCommitAction		oncommit;
	PGList				*list;
	PGNode				*node;
	PGValue				*value;
	PGObjectType			objtype;
	PGTypeName			*typnam;
	PGObjectWithArgs		*objwithargs;
	PGDefElem				*defelt;
	PGSortBy				*sortby;
	PGWindowDef			*windef;
	PGJoinExpr			*jexpr;
	PGIndexElem			*ielem;
	PGAlias				*alias;
	PGRangeVar			*range;
	PGIntoClause			*into;
	PGWithClause			*with;
	PGInferClause			*infer;
	PGOnConflictClause	*onconflict;
	PGAIndices			*aind;
	PGResTarget			*target;
	PGInsertStmt			*istmt;
	PGVariableSetStmt		*vsetstmt;
	PGOverridingKind       override;
	PGSortByDir            sortorder;
	PGSortByNulls          nullorder;
	PGLockClauseStrength lockstrength;
	PGLockWaitPolicy lockwaitpolicy;
	PGSubLinkType subquerytype;
	PGViewCheckOption viewcheckoption;
}
/* Line 193 of yacc.c.  */
#line 1257 "third_party/libpg_query/grammar/grammar_out.cpp"
	YYSTYPE;
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
# define YYSTYPE_IS_TRIVIAL 1
#endif

#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif


/* Copy the second part of user declarations.  */


/* Line 216 of yacc.c.  */
#line 1282 "third_party/libpg_query/grammar/grammar_out.cpp"

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#elif (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
typedef signed char yytype_int8;
#else
typedef short int yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(msgid) dgettext ("bison-runtime", msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(msgid) msgid
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(e) ((void) (e))
#else
# define YYUSE(e) /* empty */
#endif

/* Identity function, used to suppress warnings about constant conditions.  */
#ifndef lint
# define YYID(n) (n)
#else
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static int
YYID (int i)
#else
static int
YYID (i)
    int i;
#endif
{
  return i;
}
#endif

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#     ifndef _STDLIB_H
#      define _STDLIB_H 1
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined _STDLIB_H \
       && ! ((defined YYMALLOC || defined malloc) \
	     && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef _STDLIB_H
#    define _STDLIB_H 1
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
	 || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
	     && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss;
  YYSTYPE yyvs;
    YYLTYPE yyls;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(To, From, Count) \
      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
#  else
#   define YYCOPY(To, From, Count)		\
      do					\
	{					\
	  YYSIZE_T yyi;				\
	  for (yyi = 0; yyi < (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (YYID (0))
#  endif
# endif

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack)					\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack, Stack, yysize);				\
	Stack = &yyptr->Stack;						\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))

#endif

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  570
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   47474

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  491
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  361
/* YYNRULES -- Number of rules.  */
#define YYNRULES  1628
/* YYNRULES -- Number of states.  */
#define YYNSTATES  2692

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   727

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,   479,     2,     2,
     484,   485,   477,   475,   488,   476,   486,   478,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   490,   487,
     471,   473,   472,   489,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,   482,     2,   483,   480,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   474,   481
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const yytype_uint16 yyprhs[] =
{
       0,     0,     3,     5,     9,    11,    13,    15,    17,    19,
      21,    23,    25,    27,    29,    31,    33,    35,    37,    39,
      41,    43,    45,    47,    49,    51,    53,    55,    57,    59,
      61,    63,    65,    67,    69,    71,    73,    75,    77,    78,
      83,    90,    95,   102,   107,   114,   119,   126,   128,   131,
     135,   138,   140,   144,   147,   151,   153,   157,   160,   166,
     170,   177,   182,   189,   196,   203,   209,   215,   222,   232,
     237,   243,   251,   258,   263,   272,   277,   280,   285,   289,
     296,   301,   304,   307,   310,   313,   315,   318,   319,   321,
     324,   327,   330,   332,   336,   341,   344,   345,   348,   352,
     355,   359,   366,   373,   382,   389,   398,   405,   414,   421,
     430,   439,   450,   459,   470,   472,   473,   481,   483,   488,
     493,   501,   504,   506,   510,   515,   519,   520,   522,   523,
     526,   530,   536,   545,   551,   552,   558,   564,   572,   575,
     576,   578,   580,   582,   586,   589,   590,   592,   593,   595,
     599,   601,   605,   607,   611,   614,   617,   622,   628,   634,
     643,   645,   646,   650,   660,   673,   677,   678,   683,   690,
     692,   695,   697,   699,   700,   702,   705,   708,   710,   713,
     716,   718,   721,   725,   728,   731,   734,   737,   741,   745,
     749,   751,   755,   757,   758,   760,   763,   766,   769,   772,
     775,   778,   781,   784,   786,   788,   789,   799,   812,   813,
     816,   818,   820,   822,   824,   826,   828,   832,   833,   835,
     838,   840,   842,   845,   848,   852,   854,   856,   859,   862,
     864,   867,   871,   877,   880,   886,   892,   895,   899,   901,
     903,   906,   909,   910,   915,   916,   920,   925,   930,   931,
     935,   938,   939,   943,   945,   947,   949,   951,   953,   955,
     957,   959,   961,   963,   967,   971,   973,   976,   979,   982,
     985,   988,   991,   992,   996,  1000,  1004,  1005,  1007,  1010,
    1012,  1015,  1018,  1021,  1024,  1029,  1031,  1035,  1037,  1041,
    1043,  1045,  1047,  1049,  1053,  1055,  1058,  1059,  1061,  1062,
    1064,  1068,  1069,  1072,  1073,  1077,  1081,  1083,  1089,  1093,
    1095,  1099,  1101,  1106,  1112,  1118,  1125,  1129,  1137,  1142,
    1154,  1156,  1160,  1163,  1166,  1169,  1170,  1174,  1176,  1178,
    1181,  1184,  1187,  1190,  1192,  1193,  1195,  1198,  1205,  1210,
    1217,  1222,  1229,  1238,  1240,  1242,  1244,  1246,  1248,  1251,
    1253,  1256,  1258,  1260,  1262,  1266,  1270,  1274,  1278,  1281,
    1284,  1286,  1290,  1292,  1294,  1296,  1298,  1302,  1304,  1306,
    1307,  1309,  1311,  1313,  1320,  1322,  1324,  1327,  1331,  1340,
    1352,  1362,  1364,  1366,  1370,  1371,  1373,  1377,  1379,  1380,
    1382,  1383,  1385,  1386,  1388,  1392,  1394,  1396,  1398,  1402,
    1403,  1406,  1409,  1410,  1413,  1414,  1416,  1417,  1419,  1421,
    1423,  1427,  1431,  1433,  1435,  1439,  1443,  1447,  1451,  1456,
    1460,  1463,  1465,  1467,  1469,  1471,  1473,  1477,  1479,  1481,
    1485,  1489,  1491,  1494,  1499,  1504,  1507,  1511,  1517,  1523,
    1525,  1527,  1538,  1549,  1551,  1554,  1559,  1564,  1569,  1572,
    1575,  1579,  1581,  1585,  1592,  1595,  1596,  1600,  1604,  1609,
    1614,  1619,  1624,  1628,  1631,  1633,  1635,  1636,  1638,  1640,
    1641,  1643,  1649,  1651,  1652,  1654,  1655,  1659,  1661,  1665,
    1670,  1674,  1676,  1678,  1679,  1682,  1685,  1686,  1689,  1692,
    1694,  1696,  1698,  1699,  1702,  1707,  1713,  1718,  1721,  1725,
    1728,  1731,  1734,  1737,  1739,  1742,  1746,  1747,  1749,  1750,
    1756,  1758,  1763,  1770,  1773,  1775,  1776,  1781,  1782,  1784,
    1786,  1788,  1790,  1793,  1796,  1798,  1800,  1802,  1804,  1806,
    1808,  1812,  1813,  1815,  1819,  1821,  1823,  1826,  1829,  1830,
    1832,  1836,  1838,  1839,  1841,  1844,  1848,  1851,  1856,  1859,
    1863,  1866,  1867,  1869,  1872,  1873,  1878,  1884,  1887,  1888,
    1890,  1894,  1898,  1902,  1906,  1910,  1914,  1916,  1921,  1925,
    1930,  1936,  1941,  1947,  1952,  1958,  1961,  1966,  1968,  1970,
    1971,  1973,  1978,  1984,  1989,  1990,  1993,  1996,  1999,  2001,
    2003,  2004,  2009,  2012,  2014,  2017,  2020,  2025,  2028,  2035,
    2038,  2040,  2044,  2049,  2050,  2053,  2054,  2057,  2058,  2060,
    2064,  2068,  2071,  2072,  2075,  2080,  2082,  2084,  2087,  2091,
    2097,  2104,  2107,  2111,  2116,  2120,  2125,  2126,  2128,  2130,
    2132,  2134,  2136,  2139,  2144,  2146,  2148,  2150,  2152,  2155,
    2159,  2163,  2164,  2166,  2168,  2170,  2172,  2174,  2177,  2180,
    2183,  2186,  2189,  2191,  2195,  2196,  2198,  2200,  2202,  2204,
    2210,  2213,  2215,  2217,  2219,  2221,  2226,  2228,  2231,  2234,
    2236,  2240,  2244,  2247,  2249,  2250,  2256,  2259,  2265,  2268,
    2270,  2274,  2278,  2279,  2281,  2283,  2285,  2287,  2289,  2291,
    2293,  2295,  2297,  2299,  2301,  2303,  2305,  2307,  2309,  2311,
    2313,  2315,  2317,  2319,  2321,  2323,  2325,  2327,  2331,  2335,
    2339,  2343,  2347,  2351,  2355,  2356,  2358,  2362,  2366,  2372,
    2375,  2378,  2382,  2386,  2390,  2394,  2398,  2402,  2406,  2410,
    2414,  2418,  2422,  2426,  2430,  2433,  2436,  2440,  2444,  2447,
    2450,  2454,  2458,  2464,  2469,  2476,  2480,  2486,  2491,  2498,
    2503,  2510,  2516,  2524,  2528,  2531,  2536,  2540,  2543,  2545,
    2549,  2553,  2557,  2561,  2566,  2570,  2575,  2579,  2584,  2590,
    2597,  2604,  2612,  2619,  2627,  2634,  2642,  2646,  2651,  2656,
    2663,  2665,  2667,  2671,  2674,  2677,  2681,  2685,  2689,  2693,
    2697,  2701,  2705,  2709,  2713,  2717,  2721,  2725,  2729,  2732,
    2735,  2741,  2748,  2755,  2763,  2765,  2767,  2770,  2773,  2778,
    2780,  2782,  2784,  2787,  2790,  2794,  2800,  2807,  2816,  2823,
    2830,  2835,  2840,  2842,  2844,  2846,  2852,  2854,  2856,  2861,
    2863,  2868,  2870,  2875,  2877,  2882,  2884,  2886,  2888,  2890,
    2892,  2894,  2901,  2906,  2911,  2916,  2921,  2928,  2934,  2940,
    2946,  2951,  2958,  2963,  2969,  2970,  2976,  2977,  2980,  2981,
    2983,  2987,  2991,  2994,  2997,  2998,  3005,  3007,  3008,  3012,
    3013,  3016,  3019,  3020,  3022,  3027,  3030,  3033,  3036,  3039,
    3042,  3047,  3051,  3053,  3059,  3061,  3063,  3065,  3067,  3069,
    3071,  3073,  3075,  3077,  3079,  3081,  3083,  3085,  3087,  3089,
    3091,  3093,  3095,  3100,  3102,  3107,  3109,  3114,  3116,  3119,
    3121,  3124,  3126,  3129,  3131,  3135,  3137,  3141,  3143,  3147,
    3149,  3153,  3157,  3159,  3163,  3167,  3168,  3170,  3172,  3174,
    3176,  3178,  3180,  3182,  3184,  3186,  3188,  3193,  3197,  3200,
    3204,  3205,  3209,  3213,  3216,  3219,  3221,  3222,  3225,  3228,
    3232,  3235,  3237,  3239,  3243,  3249,  3251,  3254,  3259,  3262,
    3263,  3265,  3266,  3268,  3271,  3274,  3277,  3281,  3287,  3289,
    3290,  3292,  3295,  3296,  3299,  3301,  3302,  3304,  3305,  3307,
    3311,  3315,  3318,  3320,  3322,  3324,  3328,  3330,  3333,  3335,
    3339,  3341,  3343,  3345,  3348,  3350,  3352,  3354,  3356,  3358,
    3361,  3368,  3371,  3377,  3381,  3385,  3387,  3389,  3391,  3393,
    3395,  3397,  3399,  3401,  3403,  3405,  3407,  3409,  3411,  3413,
    3416,  3419,  3423,  3427,  3428,  3430,  3432,  3434,  3436,  3438,
    3440,  3442,  3444,  3450,  3454,  3455,  3457,  3459,  3461,  3463,
    3468,  3476,  3479,  3480,  3482,  3484,  3486,  3488,  3502,  3519,
    3521,  3524,  3525,  3527,  3528,  3530,  3531,  3534,  3535,  3537,
    3538,  3545,  3554,  3561,  3570,  3577,  3586,  3588,  3593,  3597,
    3600,  3605,  3609,  3615,  3617,  3618,  3620,  3622,  3623,  3625,
    3627,  3629,  3631,  3633,  3635,  3637,  3639,  3641,  3643,  3645,
    3647,  3651,  3653,  3655,  3657,  3659,  3661,  3663,  3666,  3668,
    3670,  3673,  3677,  3681,  3683,  3687,  3691,  3694,  3698,  3702,
    3706,  3710,  3712,  3714,  3716,  3718,  3722,  3728,  3730,  3732,
    3734,  3736,  3740,  3743,  3745,  3750,  3756,  3762,  3767,  3774,
    3776,  3778,  3780,  3782,  3784,  3786,  3787,  3789,  3793,  3795,
    3796,  3804,  3806,  3809,  3813,  3816,  3817,  3820,  3821,  3824,
    3829,  3832,  3834,  3836,  3838,  3841,  3845,  3848,  3851,  3855,
    3860,  3863,  3865,  3867,  3869,  3873,  3876,  3886,  3898,  3911,
    3926,  3930,  3935,  3940,  3941,  3949,  3960,  3963,  3967,  3968,
    3973,  3975,  3977,  3979,  3981,  3983,  3985,  3987,  3989,  3991,
    3993,  3995,  3997,  3999,  4001,  4003,  4005,  4007,  4009,  4011,
    4013,  4015,  4017,  4019,  4021,  4023,  4025,  4027,  4029,  4031,
    4033,  4035,  4037,  4039,  4041,  4043,  4045,  4047,  4049,  4051,
    4053,  4055,  4057,  4059,  4061,  4063,  4065,  4067,  4069,  4071,
    4073,  4075,  4077,  4079,  4081,  4083,  4085,  4087,  4089,  4091,
    4093,  4095,  4097,  4099,  4101,  4103,  4105,  4107,  4109,  4111,
    4113,  4115,  4117,  4119,  4121,  4123,  4125,  4127,  4129,  4131,
    4133,  4135,  4137,  4139,  4141,  4143,  4145,  4147,  4149,  4151,
    4153,  4155,  4157,  4159,  4161,  4163,  4165,  4167,  4169,  4171,
    4173,  4175,  4177,  4179,  4181,  4183,  4185,  4187,  4189,  4191,
    4193,  4195,  4197,  4199,  4201,  4203,  4205,  4207,  4209,  4211,
    4213,  4215,  4217,  4219,  4221,  4223,  4225,  4227,  4229,  4231,
    4233,  4235,  4237,  4239,  4241,  4243,  4245,  4247,  4249,  4251,
    4253,  4255,  4257,  4259,  4261,  4263,  4265,  4267,  4269,  4271,
    4273,  4275,  4277,  4279,  4281,  4283,  4285,  4287,  4289,  4291,
    4293,  4295,  4297,  4299,  4301,  4303,  4305,  4307,  4309,  4311,
    4313,  4315,  4317,  4319,  4321,  4323,  4325,  4327,  4329,  4331,
    4333,  4335,  4337,  4339,  4341,  4343,  4345,  4347,  4349,  4351,
    4353,  4355,  4357,  4359,  4361,  4363,  4365,  4367,  4369,  4371,
    4373,  4375,  4377,  4379,  4381,  4383,  4385,  4387,  4389,  4391,
    4393,  4395,  4397,  4399,  4401,  4403,  4405,  4407,  4409,  4411,
    4413,  4415,  4417,  4419,  4421,  4423,  4425,  4427,  4429,  4431,
    4433,  4435,  4437,  4439,  4441,  4443,  4445,  4447,  4449,  4451,
    4453,  4455,  4457,  4459,  4461,  4463,  4465,  4467,  4469,  4471,
    4473,  4475,  4477,  4479,  4481,  4483,  4485,  4487,  4489,  4491,
    4493,  4495,  4497,  4499,  4501,  4503,  4505,  4507,  4509,  4511,
    4513,  4515,  4517,  4519,  4521,  4523,  4525,  4527,  4529,  4531,
    4533,  4535,  4537,  4539,  4541,  4543,  4545,  4547,  4549,  4551,
    4553,  4555,  4557,  4559,  4561,  4563,  4565,  4567,  4569,  4571,
    4573,  4575,  4577,  4579,  4581,  4583,  4585,  4587,  4589,  4591,
    4593,  4595,  4597,  4599,  4601,  4603,  4605,  4607,  4609,  4611,
    4613,  4615,  4617,  4619,  4621,  4623,  4625,  4627,  4629,  4631,
    4633,  4635,  4637,  4639,  4641,  4643,  4645,  4647,  4649,  4651,
    4653,  4655,  4657,  4659,  4661,  4663,  4665,  4667,  4669,  4671,
    4673,  4675,  4677,  4679,  4681,  4683,  4685,  4687,  4689,  4691,
    4693,  4695,  4697,  4699,  4701,  4703,  4705,  4707,  4709,  4711,
    4713,  4715,  4717,  4719,  4721,  4723,  4725,  4727,  4729,  4731,
    4733,  4735,  4737,  4739,  4741,  4743,  4745,  4747,  4749,  4751,
    4753,  4755,  4757,  4759,  4761,  4763,  4765,  4767,  4769,  4771,
    4773,  4775,  4777,  4779,  4781,  4783,  4785,  4787,  4789,  4791,
    4793,  4795,  4797,  4799,  4801,  4803,  4805,  4807,  4809,  4811,
    4813,  4815,  4817,  4819,  4821,  4823,  4825,  4827,  4829,  4831,
    4833,  4835,  4837,  4839,  4841,  4843,  4845,  4847,  4849,  4851,
    4853,  4855,  4857,  4859,  4861,  4863,  4865,  4867,  4869
};

/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
static const yytype_int16 yyrhs[] =
{
     492,     0,    -1,   493,    -1,   493,   487,   494,    -1,   494,
      -1,   803,    -1,   532,    -1,   495,    -1,   835,    -1,   842,
      -1,   804,    -1,   597,    -1,   845,    -1,   593,    -1,   793,
      -1,   528,    -1,   541,    -1,   506,    -1,   831,    -1,   587,
      -1,   530,    -1,   807,    -1,   805,    -1,   806,    -1,   796,
      -1,   509,    -1,   824,    -1,   527,    -1,   790,    -1,   507,
      -1,   614,    -1,   539,    -1,   596,    -1,   826,    -1,   836,
      -1,   818,    -1,   839,    -1,   843,    -1,    -1,    29,   393,
     674,   503,    -1,    29,   393,   185,   149,   674,   503,    -1,
      29,   194,   773,   503,    -1,    29,   194,   185,   149,   773,
     503,    -1,    29,   359,   773,   503,    -1,    29,   359,   185,
     149,   773,   503,    -1,    29,   439,   773,   503,    -1,    29,
     439,   185,   149,   773,   503,    -1,   498,    -1,   496,   498,
      -1,   365,   114,   716,    -1,   134,   114,    -1,   337,    -1,
     337,   534,   535,    -1,   365,   536,    -1,   365,   171,   586,
      -1,   502,    -1,   499,   488,   502,    -1,    23,   566,    -1,
      23,   185,   263,   149,   566,    -1,    23,    75,   566,    -1,
      23,    75,   185,   263,   149,   566,    -1,    29,   508,   781,
     497,    -1,    29,   508,   781,   134,   263,   268,    -1,    29,
     508,   781,   365,   263,   268,    -1,    29,   508,   781,   365,
     381,   538,    -1,    29,   508,   781,   365,   554,    -1,    29,
     508,   781,   336,   554,    -1,    29,   508,   781,   365,   384,
     781,    -1,    29,   508,   781,    23,   171,   586,    36,   184,
     544,    -1,    29,   508,   781,   496,    -1,    29,   508,   781,
     134,   184,    -1,    29,   508,   781,   134,   184,   185,   149,
      -1,   134,   508,   185,   149,   781,   591,    -1,   134,   508,
     781,   591,    -1,    29,   508,   781,   505,   414,   686,   683,
     501,    -1,    29,   508,   781,   504,    -1,    23,   556,    -1,
      29,    85,   775,   542,    -1,   430,    85,   775,    -1,   134,
      85,   185,   149,   775,   591,    -1,   134,    85,   775,   591,
      -1,   365,   236,    -1,   365,   423,    -1,   365,   554,    -1,
     336,   554,    -1,   504,    -1,   427,   716,    -1,    -1,   549,
      -1,   365,   549,    -1,    23,   549,    -1,   134,   564,    -1,
     500,    -1,   503,   488,   500,    -1,   282,   484,   499,   485,
      -1,   365,   106,    -1,    -1,   110,   775,    -1,   110,   308,
     775,    -1,   110,    27,    -1,   110,   308,    27,    -1,    29,
     351,   775,   332,   404,   775,    -1,    29,   393,   674,   332,
     404,   775,    -1,    29,   393,   185,   149,   674,   332,   404,
     775,    -1,    29,   359,   773,   332,   404,   775,    -1,    29,
     359,   185,   149,   773,   332,   404,   775,    -1,    29,   439,
     773,   332,   404,   775,    -1,    29,   439,   185,   149,   773,
     332,   404,   775,    -1,    29,   194,   773,   332,   404,   775,
      -1,    29,   194,   185,   149,   773,   332,   404,   775,    -1,
      29,   393,   674,   332,   508,   775,   404,   775,    -1,    29,
     393,   185,   149,   674,   332,   508,   775,   404,   775,    -1,
      29,   393,   674,   332,    85,   775,   404,   775,    -1,    29,
     393,   185,   149,   674,   332,    85,   775,   404,   775,    -1,
      75,    -1,    -1,   513,   204,   210,   511,   510,   516,   518,
      -1,   614,    -1,   291,   519,   432,   614,    -1,   484,   523,
     485,   614,    -1,   484,   523,   485,   291,   519,   432,   614,
      -1,   114,   433,    -1,   773,    -1,   773,    36,   781,    -1,
     484,   525,   485,   680,    -1,   278,    85,   775,    -1,    -1,
     619,    -1,    -1,   781,   767,    -1,   526,   473,   716,    -1,
     484,   520,   485,   473,   716,    -1,   278,    83,   512,   130,
     425,   365,   524,   680,    -1,   278,    83,   512,   130,   264,
      -1,    -1,   781,   521,   522,   632,   633,    -1,   721,   521,
     522,   632,   633,    -1,   484,   716,   485,   521,   522,   632,
     633,    -1,   339,   770,    -1,    -1,   426,    -1,   392,    -1,
     526,    -1,   520,   488,   526,    -1,    73,   784,    -1,    -1,
     784,    -1,    -1,   514,    -1,   523,   488,   514,    -1,   515,
      -1,   524,   488,   515,    -1,   517,    -1,   525,   488,   517,
      -1,   781,   767,    -1,   305,   781,    -1,   305,   781,   473,
     823,    -1,   305,   781,   484,   745,   485,    -1,    92,   585,
     359,   773,   529,    -1,    92,   585,   359,   185,   263,   149,
     773,   529,    -1,   533,    -1,    -1,   148,   775,   531,    -1,
      92,   585,   393,   847,    36,   148,   775,   531,   846,    -1,
      92,   585,   393,   185,   263,   149,   847,    36,   148,   775,
     531,   846,    -1,   484,   744,   485,    -1,    -1,    29,   359,
     773,   533,    -1,    29,   359,   185,   149,   773,   533,    -1,
     536,    -1,   533,   536,    -1,   446,    -1,   470,    -1,    -1,
       4,    -1,   475,     4,    -1,   476,     4,    -1,   538,    -1,
      36,   688,    -1,    55,   535,    -1,   105,    -1,   261,   105,
      -1,   193,   537,   535,    -1,   241,   535,    -1,   249,   535,
      -1,   261,   241,    -1,   261,   249,    -1,   292,    54,   784,
      -1,   359,   254,   784,    -1,   379,   534,   535,    -1,   337,
      -1,   337,   534,   535,    -1,    54,    -1,    -1,   779,    -1,
     475,   779,    -1,   476,   779,    -1,    19,   540,    -1,    47,
     540,    -1,   379,   540,    -1,    79,   540,    -1,   140,   540,
      -1,   344,   540,    -1,   449,    -1,   406,    -1,    -1,    92,
     585,   393,   773,   484,   573,   485,   561,   553,    -1,    92,
     585,   393,   185,   263,   149,   773,   484,   573,   485,   561,
     553,    -1,    -1,   542,   565,    -1,   580,    -1,   851,    -1,
     741,    -1,   535,    -1,   780,    -1,   262,    -1,   484,   533,
     485,    -1,    -1,   780,    -1,   261,    22,    -1,   338,    -1,
      58,    -1,   365,   268,    -1,   365,   114,    -1,    85,   775,
     548,    -1,   548,    -1,   560,    -1,    73,   784,    -1,   263,
     268,    -1,   268,    -1,   420,   572,    -1,   311,   216,   572,
      -1,    67,   484,   716,   485,   555,    -1,   114,   717,    -1,
     171,   586,    36,   184,   544,    -1,   326,   773,   575,   583,
     551,    -1,   564,   545,    -1,   278,   425,   546,    -1,   550,
      -1,   577,    -1,   550,   577,    -1,   577,   550,    -1,    -1,
     282,   484,   567,   485,    -1,    -1,   278,    79,   134,    -1,
     278,    79,   119,   347,    -1,   278,    79,   310,   347,    -1,
      -1,   484,   558,   485,    -1,   261,   196,    -1,    -1,    85,
     775,   581,    -1,   581,    -1,    78,    -1,    86,    -1,   115,
      -1,   184,    -1,   195,    -1,   381,    -1,   384,    -1,    27,
      -1,   578,    -1,   558,   488,   578,    -1,   427,   194,   569,
      -1,   116,    -1,   263,   116,    -1,   198,   117,    -1,   198,
     187,    -1,   446,   554,    -1,   446,   276,    -1,   448,   276,
      -1,    -1,   484,   568,   485,    -1,   563,   192,   557,    -1,
     563,   146,   557,    -1,    -1,   788,    -1,   263,   116,    -1,
     116,    -1,   198,   187,    -1,   198,   117,    -1,   263,   429,
      -1,   261,   196,    -1,   781,   686,   552,   576,    -1,   549,
      -1,   567,   488,   549,    -1,   571,    -1,   568,   488,   571,
      -1,   781,    -1,   566,    -1,   584,    -1,   556,    -1,   788,
     473,   543,    -1,   788,    -1,   446,   562,    -1,    -1,   582,
      -1,    -1,   781,    -1,   484,   579,   485,    -1,    -1,   576,
     547,    -1,    -1,   278,   119,   546,    -1,   788,   473,   543,
      -1,   788,    -1,   788,   486,   788,   473,   543,    -1,   788,
     486,   788,    -1,   574,    -1,   579,   488,   574,    -1,   686,
      -1,   783,   785,   479,   414,    -1,   366,   783,   785,   479,
     414,    -1,    67,   484,   716,   485,   542,    -1,   420,   484,
     579,   485,   572,   542,    -1,   420,   559,   542,    -1,   311,
     216,   484,   579,   485,   572,   542,    -1,   311,   216,   559,
     542,    -1,   164,   216,   484,   579,   485,   326,   773,   575,
     583,   551,   542,    -1,   570,    -1,   582,   488,   570,    -1,
     239,   168,    -1,   239,   296,    -1,   239,   371,    -1,    -1,
     226,   773,   563,    -1,   399,    -1,   397,    -1,   230,   399,
      -1,   230,   397,    -1,   173,   399,    -1,   173,   397,    -1,
     423,    -1,    -1,    30,    -1,    54,   114,    -1,   134,   588,
     185,   149,   590,   591,    -1,   134,   588,   590,   591,    -1,
     134,   589,   185,   149,   774,   591,    -1,   134,   589,   774,
     591,    -1,   134,   592,   775,   278,   784,   591,    -1,   134,
     592,   185,   149,   775,   278,   784,   591,    -1,   393,    -1,
     359,    -1,   169,    -1,   237,    -1,   439,    -1,   240,   439,
      -1,   194,    -1,   164,   393,    -1,    74,    -1,    89,    -1,
     381,    -1,   400,   354,   295,    -1,   400,   354,   126,    -1,
     400,   354,   398,    -1,   400,   354,    82,    -1,    21,   242,
      -1,   143,   409,    -1,   152,    -1,   164,   106,   450,    -1,
     317,    -1,   351,    -1,   362,    -1,   784,    -1,   590,   488,
     784,    -1,    58,    -1,   338,    -1,    -1,   303,    -1,   348,
      -1,   409,    -1,    92,   594,   773,   595,    36,   716,    -1,
     169,    -1,   237,    -1,   484,   485,    -1,   484,   745,   485,
      -1,   513,   425,   832,   365,   524,   664,   833,   518,    -1,
      90,   609,   773,   575,   607,   598,   603,   612,   599,   534,
     604,    -1,    90,   484,   792,   485,   404,   603,   612,   534,
     604,    -1,   167,    -1,   404,    -1,   601,   121,   780,    -1,
      -1,   611,    -1,   600,   488,   611,    -1,   427,    -1,    -1,
      36,    -1,    -1,   316,    -1,    -1,   608,    -1,   484,   613,
     485,    -1,   815,    -1,   535,    -1,   477,    -1,   484,   600,
     485,    -1,    -1,   788,   605,    -1,   446,   276,    -1,    -1,
     608,   610,    -1,    -1,    50,    -1,    -1,    50,    -1,   276,
      -1,   166,    -1,   120,   602,   780,    -1,   268,   602,   780,
      -1,    94,    -1,   180,    -1,   318,   602,   780,    -1,   142,
     602,   780,    -1,   163,   318,   579,    -1,   163,   318,   477,
      -1,   163,   263,   268,   579,    -1,   163,   268,   579,    -1,
     138,   780,    -1,   815,    -1,   780,    -1,   382,    -1,   383,
      -1,   606,    -1,   613,   488,   606,    -1,   616,    -1,   615,
      -1,   484,   616,   485,    -1,   484,   615,   485,    -1,   618,
      -1,   617,   629,    -1,   617,   628,   656,   635,    -1,   617,
     628,   634,   657,    -1,   619,   617,    -1,   619,   617,   629,
      -1,   619,   617,   628,   656,   635,    -1,   619,   617,   628,
     634,   657,    -1,   618,    -1,   615,    -1,   358,   627,   769,
     622,   664,   680,   651,   655,   725,   639,    -1,   358,   626,
     770,   622,   664,   680,   651,   655,   725,   639,    -1,   663,
      -1,   393,   674,    -1,   617,   419,   625,   617,    -1,   617,
     208,   625,   617,    -1,   617,   144,   625,   617,    -1,   446,
     620,    -1,   470,   620,    -1,   446,   324,   620,    -1,   621,
      -1,   620,   488,   621,    -1,   775,   786,    36,   484,   792,
     485,    -1,   210,   623,    -1,    -1,   399,   624,   773,    -1,
     397,   624,   773,    -1,   230,   399,   624,   773,    -1,   230,
     397,   624,   773,    -1,   173,   399,   624,   773,    -1,   173,
     397,   624,   773,    -1,   423,   624,   773,    -1,   393,   773,
      -1,   773,    -1,   393,    -1,    -1,    27,    -1,   129,    -1,
      -1,   129,    -1,   129,   278,   484,   744,   485,    -1,    27,
      -1,    -1,   629,    -1,    -1,   284,    54,   630,    -1,   631,
      -1,   630,   488,   631,    -1,   716,   427,   741,   633,    -1,
     716,   632,   633,    -1,    37,    -1,   123,    -1,    -1,   469,
     159,    -1,   469,   220,    -1,    -1,   636,   637,    -1,   637,
     636,    -1,   636,    -1,   637,    -1,   634,    -1,    -1,   227,
     645,    -1,   227,   645,   488,   646,    -1,   157,   650,   647,
     649,   279,    -1,   157,   650,   649,   279,    -1,   275,   646,
      -1,   275,   647,   649,    -1,     4,   479,    -1,     9,   479,
      -1,     4,   300,    -1,     9,   300,    -1,     9,    -1,     9,
     347,    -1,   427,   349,   641,    -1,    -1,   781,    -1,    -1,
     640,   484,   638,   485,   644,    -1,   638,    -1,   638,   484,
     781,   485,    -1,   638,   484,   781,   488,     9,   485,    -1,
     395,   641,    -1,   642,    -1,    -1,   333,   484,     9,   485,
      -1,    -1,   716,    -1,    27,    -1,   716,    -1,   718,    -1,
     475,   648,    -1,   476,   648,    -1,   779,    -1,     4,    -1,
     346,    -1,   347,    -1,   159,    -1,   260,    -1,   176,    54,
     652,    -1,    -1,   653,    -1,   652,   488,   653,    -1,   716,
      -1,   654,    -1,   484,   485,    -1,   179,   716,    -1,    -1,
     658,    -1,   162,   320,   279,    -1,   656,    -1,    -1,   659,
      -1,   658,   659,    -1,   660,   661,   662,    -1,   162,   425,
      -1,   162,   261,   216,   425,    -1,   162,   368,    -1,   162,
     216,   368,    -1,   273,   772,    -1,    -1,   267,    -1,   372,
     235,    -1,    -1,   433,   484,   744,   485,    -1,   663,   488,
     484,   744,   485,    -1,   167,   665,    -1,    -1,   666,    -1,
     665,   488,   666,    -1,   674,   669,   643,    -1,   675,   670,
     643,    -1,   221,   675,   670,    -1,   615,   669,   643,    -1,
     221,   615,   669,    -1,   667,    -1,   484,   667,   485,   668,
      -1,   484,   667,   485,    -1,   666,    93,   215,   666,    -1,
     666,   671,   215,   666,   673,    -1,   666,   215,   666,   673,
      -1,   666,   257,   671,   215,   666,    -1,   666,   257,   215,
     666,    -1,    36,   781,   484,   774,   485,    -1,    36,   782,
      -1,   781,   484,   774,   485,    -1,   781,    -1,   668,    -1,
      -1,   668,    -1,    36,   484,   681,   485,    -1,    36,   781,
     484,   681,   485,    -1,   781,   484,   681,   485,    -1,    -1,
     168,   672,    -1,   224,   672,    -1,   342,   672,    -1,   200,
      -1,   287,    -1,    -1,   427,   484,   774,   485,    -1,   278,
     716,    -1,   773,    -1,   773,   477,    -1,   279,   773,    -1,
     279,   484,   773,   485,    -1,   721,   679,    -1,   347,   167,
     484,   677,   485,   679,    -1,   721,   678,    -1,   676,    -1,
     677,   488,   676,    -1,    36,   484,   681,   485,    -1,    -1,
     470,   285,    -1,    -1,   443,   716,    -1,    -1,   682,    -1,
     681,   488,   682,    -1,   781,   686,   683,    -1,    73,   784,
      -1,    -1,   781,   686,    -1,   684,   488,   781,   686,    -1,
     346,    -1,   387,    -1,   688,   687,    -1,   366,   688,   687,
      -1,   688,    35,   482,   779,   483,    -1,   366,   688,    35,
     482,   779,   483,    -1,   688,    35,    -1,   366,   688,    35,
      -1,   685,   484,   684,   485,    -1,   687,   482,   483,    -1,
     687,   482,   779,   483,    -1,    -1,   690,    -1,   692,    -1,
     694,    -1,   698,    -1,   704,    -1,   705,   715,    -1,   705,
     484,   779,   485,    -1,   692,    -1,   695,    -1,   699,    -1,
     704,    -1,   783,   691,    -1,   783,   785,   691,    -1,   484,
     744,   485,    -1,    -1,   206,    -1,   207,    -1,   373,    -1,
      49,    -1,   321,    -1,   160,   693,    -1,   133,   307,    -1,
     112,   691,    -1,   111,   691,    -1,   271,   691,    -1,    52,
      -1,   484,   779,   485,    -1,    -1,   696,    -1,   697,    -1,
     696,    -1,   697,    -1,    51,   703,   484,   744,   485,    -1,
      51,   703,    -1,   700,    -1,   701,    -1,   700,    -1,   701,
      -1,   702,   484,   779,   485,    -1,   702,    -1,    65,   703,
      -1,    64,   703,    -1,   434,    -1,   256,    65,   703,    -1,
     256,    64,   703,    -1,   258,   703,    -1,   436,    -1,    -1,
     403,   484,   779,   485,   706,    -1,   403,   706,    -1,   402,
     484,   779,   485,   706,    -1,   402,   706,    -1,   209,    -1,
     470,   402,   467,    -1,   448,   402,   467,    -1,    -1,   464,
      -1,   465,    -1,   251,    -1,   252,    -1,   108,    -1,   109,
      -1,   182,    -1,   183,    -1,   247,    -1,   248,    -1,   355,
      -1,   356,    -1,   245,    -1,   246,    -1,   243,    -1,   244,
      -1,   707,    -1,   708,    -1,   709,    -1,   710,    -1,   711,
      -1,   712,    -1,   713,    -1,   714,    -1,   707,   404,   708,
      -1,   709,   404,   710,    -1,   709,   404,   711,    -1,   709,
     404,   712,    -1,   710,   404,   711,    -1,   710,   404,   712,
      -1,   711,   404,   712,    -1,    -1,   718,    -1,   716,    11,
     686,    -1,   716,    73,   784,    -1,   716,    41,   402,   467,
     716,    -1,   475,   716,    -1,   476,   716,    -1,   716,   475,
     716,    -1,   716,   476,   716,    -1,   716,   477,   716,    -1,
     716,   478,   716,    -1,   716,   479,   716,    -1,   716,   480,
     716,    -1,   716,   471,   716,    -1,   716,   472,   716,    -1,
     716,   473,   716,    -1,   716,    16,   716,    -1,   716,    17,
     716,    -1,   716,    18,   716,    -1,   716,   740,   716,    -1,
     740,   716,    -1,   716,   740,    -1,   716,    33,   716,    -1,
     716,   283,   716,    -1,   263,   716,    -1,   468,   716,    -1,
     716,   172,   716,    -1,   716,   226,   716,    -1,   716,   226,
     716,   142,   716,    -1,   716,   468,   226,   716,    -1,   716,
     468,   226,   716,   142,   716,    -1,   716,   186,   716,    -1,
     716,   186,   716,   142,   716,    -1,   716,   468,   186,   716,
      -1,   716,   468,   186,   716,   142,   716,    -1,   716,   370,
     404,   716,    -1,   716,   370,   404,   716,   142,   716,    -1,
     716,   468,   370,   404,   716,    -1,   716,   468,   370,   404,
     716,   142,   716,    -1,   716,   212,   268,    -1,   716,   213,
      -1,   716,   212,   263,   268,    -1,   716,   263,   268,    -1,
     716,   266,    -1,   736,    -1,   736,    15,   716,    -1,   763,
      15,   716,    -1,   736,   289,   736,    -1,   716,   212,   411,
      -1,   716,   212,   263,   411,    -1,   716,   212,   155,    -1,
     716,   212,   263,   155,    -1,   716,   212,   421,    -1,   716,
     212,   263,   421,    -1,   716,   212,   129,   167,   716,    -1,
     716,   212,   263,   129,   167,   716,    -1,   716,   212,   273,
     484,   747,   485,    -1,   716,   212,   263,   273,   484,   747,
     485,    -1,   716,    48,   768,   717,    33,   716,    -1,   716,
     468,    48,   768,   717,    33,   716,    -1,   716,    48,   390,
     717,    33,   716,    -1,   716,   468,    48,   390,   717,    33,
     716,    -1,   716,   191,   757,    -1,   716,   468,   191,   757,
      -1,   716,   742,   737,   615,    -1,   716,   742,   737,   484,
     716,   485,    -1,   114,    -1,   718,    -1,   717,    11,   686,
      -1,   475,   717,    -1,   476,   717,    -1,   717,   475,   717,
      -1,   717,   476,   717,    -1,   717,   477,   717,    -1,   717,
     478,   717,    -1,   717,   479,   717,    -1,   717,   480,   717,
      -1,   717,   471,   717,    -1,   717,   472,   717,    -1,   717,
     473,   717,    -1,   717,    16,   717,    -1,   717,    17,   717,
      -1,   717,    18,   717,    -1,   717,   740,   717,    -1,   740,
     717,    -1,   717,   740,    -1,   717,   212,   129,   167,   717,
      -1,   717,   212,   263,   129,   167,   717,    -1,   717,   212,
     273,   484,   747,   485,    -1,   717,   212,   263,   273,   484,
     747,   485,    -1,   763,    -1,   778,    -1,   489,   767,    -1,
      10,   767,    -1,   484,   716,   485,   767,    -1,   758,    -1,
     720,    -1,   615,    -1,   615,   766,    -1,   149,   615,    -1,
     777,   484,   485,    -1,   777,   484,   745,   628,   485,    -1,
     777,   484,   435,   746,   628,   485,    -1,   777,   484,   745,
     488,   435,   746,   628,   485,    -1,   777,   484,    27,   745,
     628,   485,    -1,   777,   484,   129,   745,   628,   485,    -1,
     777,   484,   477,   485,    -1,   719,   723,   724,   728,    -1,
     722,    -1,   719,    -1,   722,    -1,    74,   162,   484,   716,
     485,    -1,    98,    -1,   101,    -1,   101,   484,   779,   485,
      -1,   102,    -1,   102,   484,   779,   485,    -1,   231,    -1,
     231,   484,   779,   485,    -1,   232,    -1,   232,   484,   779,
     485,    -1,    99,    -1,   103,    -1,   364,    -1,   426,    -1,
      97,    -1,   100,    -1,    61,   484,   716,    36,   686,   485,
      -1,   154,   484,   748,   485,    -1,   290,   484,   750,   485,
      -1,   304,   484,   752,   485,    -1,   389,   484,   753,   485,
      -1,   408,   484,   716,    36,   686,   485,    -1,   410,   484,
      53,   756,   485,    -1,   410,   484,   222,   756,   485,    -1,
     410,   484,   405,   756,   485,    -1,   410,   484,   756,   485,
      -1,   269,   484,   716,   488,   716,   485,    -1,    72,   484,
     744,   485,    -1,   447,   176,   484,   629,   485,    -1,    -1,
     158,   484,   443,   716,   485,    -1,    -1,   445,   726,    -1,
      -1,   727,    -1,   726,   488,   727,    -1,   781,    36,   729,
      -1,   288,   729,    -1,   288,   781,    -1,    -1,   484,   730,
     731,   628,   732,   485,    -1,   781,    -1,    -1,   297,    54,
     744,    -1,    -1,   319,   733,    -1,   347,   733,    -1,    -1,
     734,    -1,    48,   734,    33,   734,    -1,   416,   306,    -1,
     416,   161,    -1,    96,   346,    -1,   716,   306,    -1,   716,
     161,    -1,   346,   484,   744,   485,    -1,   346,   484,   485,
      -1,   735,    -1,   484,   744,   488,   716,   485,    -1,    34,
      -1,   375,    -1,    27,    -1,     8,    -1,   739,    -1,   475,
      -1,   476,    -1,   477,    -1,   478,    -1,   479,    -1,   480,
      -1,   471,    -1,   472,    -1,   473,    -1,    16,    -1,    17,
      -1,    18,    -1,     8,    -1,   280,   484,   743,   485,    -1,
     738,    -1,   280,   484,   743,   485,    -1,   738,    -1,   280,
     484,   743,   485,    -1,   226,    -1,   468,   226,    -1,   172,
      -1,   468,   172,    -1,   186,    -1,   468,   186,    -1,   738,
      -1,   781,   486,   743,    -1,   716,    -1,   744,   488,   716,
      -1,   746,    -1,   745,   488,   746,    -1,   716,    -1,   787,
      13,   716,    -1,   787,    14,   716,    -1,   686,    -1,   747,
     488,   686,    -1,   749,   167,   716,    -1,    -1,     3,    -1,
     707,    -1,   708,    -1,   709,    -1,   710,    -1,   711,    -1,
     712,    -1,   713,    -1,   714,    -1,   780,    -1,   716,   751,
     754,   755,    -1,   716,   751,   754,    -1,   301,   716,    -1,
     717,   191,   717,    -1,    -1,   716,   754,   755,    -1,   716,
     755,   754,    -1,   716,   754,    -1,   716,   755,    -1,   744,
      -1,    -1,   167,   716,    -1,   162,   716,    -1,   716,   167,
     744,    -1,   167,   744,    -1,   744,    -1,   615,    -1,   484,
     744,   485,    -1,    60,   762,   759,   761,   140,    -1,   760,
      -1,   759,   760,    -1,   442,   716,   401,   716,    -1,   136,
     716,    -1,    -1,   716,    -1,    -1,   781,    -1,   781,   766,
      -1,   486,   776,    -1,   486,   477,    -1,   482,   716,   483,
      -1,   482,   765,   490,   765,   483,    -1,   716,    -1,    -1,
     764,    -1,   766,   764,    -1,    -1,   767,   764,    -1,    40,
      -1,    -1,   770,    -1,    -1,   771,    -1,   770,   488,   771,
      -1,   716,    36,   789,    -1,   716,     3,    -1,   716,    -1,
     477,    -1,   773,    -1,   772,   488,   773,    -1,   781,    -1,
     781,   766,    -1,   775,    -1,   774,   488,   775,    -1,   781,
      -1,   788,    -1,   783,    -1,   781,   766,    -1,   779,    -1,
       4,    -1,   780,    -1,     6,    -1,     7,    -1,   777,   780,
      -1,   777,   484,   745,   628,   485,   780,    -1,   689,   780,
      -1,   705,   484,   716,   485,   715,    -1,   705,   779,   715,
      -1,   705,   780,   715,    -1,   411,    -1,   155,    -1,   268,
      -1,     9,    -1,     5,    -1,     3,    -1,   848,    -1,   849,
      -1,   781,    -1,     5,    -1,     3,    -1,   848,    -1,   850,
      -1,   781,    -1,   781,   785,    -1,   486,   776,    -1,   785,
     486,   776,    -1,   484,   774,   485,    -1,    -1,   783,    -1,
       3,    -1,   848,    -1,   849,    -1,   850,    -1,   851,    -1,
     788,    -1,     5,    -1,   308,   775,   791,    36,   792,    -1,
     484,   747,   485,    -1,    -1,   614,    -1,   509,    -1,   596,
      -1,   831,    -1,    92,   351,   781,   794,    -1,    92,   351,
     185,   263,   149,   781,   794,    -1,   794,   795,    -1,    -1,
     541,    -1,   796,    -1,   528,    -1,   843,    -1,    92,   802,
     194,   799,   800,   278,   773,   798,   484,   525,   485,   801,
     680,    -1,    92,   802,   194,   799,   185,   263,   149,   569,
     278,   773,   798,   484,   525,   485,   801,   680,    -1,   781,
      -1,   427,   797,    -1,    -1,    81,    -1,    -1,   569,    -1,
      -1,   446,   554,    -1,    -1,   420,    -1,    -1,    29,   393,
     674,   365,   351,   775,    -1,    29,   393,   185,   149,   674,
     365,   351,   775,    -1,    29,   359,   773,   365,   351,   775,
      -1,    29,   359,   185,   149,   773,   365,   351,   775,    -1,
      29,   439,   773,   365,   351,   775,    -1,    29,   439,   185,
     149,   773,   365,   351,   775,    -1,    68,    -1,   151,   107,
     780,   604,    -1,   190,   107,   780,    -1,   150,   810,    -1,
     150,   814,   808,   810,    -1,   150,   437,   810,    -1,   150,
     484,   813,   485,   810,    -1,   437,    -1,    -1,   815,    -1,
     535,    -1,    -1,   614,    -1,   509,    -1,   596,    -1,   831,
      -1,   845,    -1,     3,    -1,   848,    -1,   849,    -1,   850,
      -1,   811,    -1,   780,    -1,   816,    -1,   813,   488,   816,
      -1,    32,    -1,    31,    -1,   411,    -1,   155,    -1,   278,
      -1,   812,    -1,   817,   809,    -1,   811,    -1,   814,    -1,
     365,   819,    -1,   365,   230,   819,    -1,   365,   363,   819,
      -1,   820,    -1,   841,   167,    96,    -1,   402,   467,   822,
      -1,   351,   780,    -1,   841,   404,   823,    -1,   841,   473,
     823,    -1,   841,   404,   114,    -1,   841,   473,   114,    -1,
     815,    -1,   535,    -1,   780,    -1,     3,    -1,   705,   780,
     715,    -1,   705,   484,   779,   485,   780,    -1,   535,    -1,
     114,    -1,   230,    -1,   821,    -1,   823,   488,   821,    -1,
     229,   825,    -1,   780,    -1,   428,   828,   830,   808,    -1,
     428,   828,   830,   808,   773,    -1,   428,   828,   830,   808,
     835,    -1,   428,   484,   829,   485,    -1,   428,   484,   829,
     485,   773,   786,    -1,   814,    -1,   437,    -1,   166,    -1,
     168,    -1,     3,    -1,   168,    -1,    -1,   827,    -1,   829,
     488,   827,    -1,   166,    -1,    -1,   513,   119,   167,   832,
     834,   833,   518,    -1,   674,    -1,   674,   781,    -1,   674,
      36,   781,    -1,   443,   716,    -1,    -1,   427,   665,    -1,
      -1,   814,   808,    -1,   814,   808,   773,   786,    -1,   336,
     838,    -1,   841,    -1,    27,    -1,   837,    -1,   402,   467,
      -1,   406,   214,   225,    -1,   840,   614,    -1,   840,   841,
      -1,   840,   402,   467,    -1,   840,   406,   214,   225,    -1,
     840,    27,    -1,   369,    -1,   124,    -1,   781,    -1,   841,
     486,   781,    -1,    56,   719,    -1,    92,   585,   439,   773,
     575,   801,    36,   614,   844,    -1,    92,   283,   334,   585,
     439,   773,   575,   801,    36,   614,   844,    -1,    92,   585,
     324,   439,   773,   484,   579,   485,   801,    36,   614,   844,
      -1,    92,   283,   334,   585,   324,   439,   773,   484,   579,
     485,   801,    36,   614,   844,    -1,   446,    67,   281,    -1,
     446,    59,    67,   281,    -1,   446,   230,    67,   281,    -1,
      -1,    92,   585,   393,   847,    36,   614,   846,    -1,    92,
     585,   393,   185,   263,   149,   847,    36,   614,   846,    -1,
     446,   106,    -1,   446,   261,   106,    -1,    -1,   773,   575,
     561,   553,    -1,    19,    -1,    20,    -1,    21,    -1,    22,
      -1,    23,    -1,    24,    -1,    25,    -1,    26,    -1,    28,
      -1,    29,    -1,    30,    -1,    38,    -1,    39,    -1,    41,
      -1,    42,    -1,    43,    -1,    45,    -1,    46,    -1,    47,
      -1,    54,    -1,    55,    -1,    56,    -1,    57,    -1,    58,
      -1,    59,    -1,    62,    -1,    63,    -1,    66,    -1,    68,
      -1,    69,    -1,    70,    -1,    71,    -1,    76,    -1,    77,
      -1,    78,    -1,    79,    -1,    80,    -1,    82,    -1,    83,
      -1,    84,    -1,    86,    -1,    87,    -1,    88,    -1,    89,
      -1,    90,    -1,    91,    -1,    94,    -1,    95,    -1,    96,
      -1,   104,    -1,   105,    -1,   106,    -1,   107,    -1,   108,
      -1,   109,    -1,   110,    -1,   113,    -1,   115,    -1,   117,
      -1,   118,    -1,   119,    -1,   120,    -1,   121,    -1,   122,
      -1,   124,    -1,   125,    -1,   126,    -1,   127,    -1,   128,
      -1,   131,    -1,   132,    -1,   133,    -1,   134,    -1,   135,
      -1,   137,    -1,   138,    -1,   139,    -1,   141,    -1,   142,
      -1,   143,    -1,   145,    -1,   146,    -1,   147,    -1,   148,
      -1,   150,    -1,   151,    -1,   152,    -1,   153,    -1,   156,
      -1,   158,    -1,   159,    -1,   161,    -1,   163,    -1,   165,
      -1,   169,    -1,   170,    -1,   171,    -1,   173,    -1,   175,
      -1,   178,    -1,   180,    -1,   181,    -1,   182,    -1,   183,
      -1,   184,    -1,   185,    -1,   187,    -1,   188,    -1,   189,
      -1,   190,    -1,   192,    -1,   193,    -1,   194,    -1,   195,
      -1,   196,    -1,   197,    -1,   199,    -1,   202,    -1,   203,
      -1,   204,    -1,   205,    -1,   211,    -1,   214,    -1,   216,
      -1,   217,    -1,   218,    -1,   219,    -1,   220,    -1,   223,
      -1,   225,    -1,   228,    -1,   229,    -1,   230,    -1,   233,
      -1,   234,    -1,   235,    -1,   236,    -1,   237,    -1,   238,
      -1,   239,    -1,   240,    -1,   241,    -1,   242,    -1,   243,
      -1,   244,    -1,   245,    -1,   246,    -1,   247,    -1,   248,
      -1,   249,    -1,   250,    -1,   251,    -1,   252,    -1,   253,
      -1,   254,    -1,   255,    -1,   259,    -1,   260,    -1,   261,
      -1,   264,    -1,   265,    -1,   267,    -1,   270,    -1,   272,
      -1,   273,    -1,   274,    -1,   276,    -1,   277,    -1,   280,
      -1,   281,    -1,   282,    -1,   285,    -1,   288,    -1,   291,
      -1,   292,    -1,   293,    -1,   294,    -1,   295,    -1,   296,
      -1,   297,    -1,   298,    -1,   299,    -1,   300,    -1,   302,
      -1,   303,    -1,   305,    -1,   306,    -1,   308,    -1,   309,
      -1,   310,    -1,   312,    -1,   313,    -1,   314,    -1,   315,
      -1,   316,    -1,   317,    -1,   318,    -1,   319,    -1,   320,
      -1,   322,    -1,   323,    -1,   324,    -1,   325,    -1,   327,
      -1,   328,    -1,   329,    -1,   330,    -1,   331,    -1,   332,
      -1,   333,    -1,   334,    -1,   335,    -1,   336,    -1,   337,
      -1,   338,    -1,   340,    -1,   341,    -1,   343,    -1,   344,
      -1,   345,    -1,   347,    -1,   348,    -1,   349,    -1,   350,
      -1,   351,    -1,   352,    -1,   353,    -1,   354,    -1,   355,
      -1,   356,    -1,   357,    -1,   359,    -1,   360,    -1,   361,
      -1,   362,    -1,   363,    -1,   365,    -1,   367,    -1,   368,
      -1,   369,    -1,   371,    -1,   372,    -1,   374,    -1,   376,
      -1,   377,    -1,   378,    -1,   379,    -1,   380,    -1,   381,
      -1,   382,    -1,   383,    -1,   384,    -1,   385,    -1,   386,
      -1,   388,    -1,   391,    -1,   392,    -1,   394,    -1,   396,
      -1,   397,    -1,   398,    -1,   399,    -1,   400,    -1,   406,
      -1,   407,    -1,   409,    -1,   412,    -1,   413,    -1,   414,
      -1,   415,    -1,   416,    -1,   417,    -1,   418,    -1,   421,
      -1,   422,    -1,   423,    -1,   424,    -1,   425,    -1,   428,
      -1,   429,    -1,   430,    -1,   431,    -1,   432,    -1,   436,
      -1,   438,    -1,   439,    -1,   440,    -1,   441,    -1,   444,
      -1,   447,    -1,   448,    -1,   449,    -1,   450,    -1,   451,
      -1,   452,    -1,   464,    -1,   465,    -1,   466,    -1,   467,
      -1,    48,    -1,    49,    -1,    51,    -1,    52,    -1,    64,
      -1,    65,    -1,    72,    -1,   111,    -1,   112,    -1,   149,
      -1,   154,    -1,   160,    -1,   177,    -1,   201,    -1,   206,
      -1,   207,    -1,   209,    -1,   256,    -1,   258,    -1,   262,
      -1,   269,    -1,   271,    -1,   286,    -1,   290,    -1,   304,
      -1,   307,    -1,   321,    -1,   346,    -1,   366,    -1,   373,
      -1,   387,    -1,   389,    -1,   402,    -1,   403,    -1,   408,
      -1,   410,    -1,   433,    -1,   434,    -1,   453,    -1,   454,
      -1,   455,    -1,   456,    -1,   457,    -1,   458,    -1,   459,
      -1,   460,    -1,   461,    -1,   462,    -1,   463,    -1,    44,
      -1,    50,    -1,    74,    -1,    81,    -1,    93,    -1,   100,
      -1,   166,    -1,   168,    -1,   172,    -1,   186,    -1,   200,
      -1,   212,    -1,   213,    -1,   215,    -1,   224,    -1,   226,
      -1,   257,    -1,   266,    -1,   287,    -1,   289,    -1,   342,
      -1,   370,    -1,   395,    -1,   437,    -1,    27,    -1,    31,
      -1,    32,    -1,    33,    -1,    34,    -1,    35,    -1,    36,
      -1,    37,    -1,    40,    -1,    53,    -1,    60,    -1,    61,
      -1,    67,    -1,    73,    -1,    75,    -1,    85,    -1,    92,
      -1,    97,    -1,    98,    -1,    99,    -1,   101,    -1,   102,
      -1,   103,    -1,   114,    -1,   116,    -1,   123,    -1,   129,
      -1,   130,    -1,   136,    -1,   140,    -1,   144,    -1,   155,
      -1,   157,    -1,   162,    -1,   164,    -1,   167,    -1,   174,
      -1,   176,    -1,   179,    -1,   191,    -1,   198,    -1,   208,
      -1,   210,    -1,   221,    -1,   222,    -1,   227,    -1,   231,
      -1,   232,    -1,   263,    -1,   268,    -1,   275,    -1,   278,
      -1,   279,    -1,   283,    -1,   284,    -1,   301,    -1,   311,
      -1,   326,    -1,   339,    -1,   358,    -1,   364,    -1,   375,
      -1,   390,    -1,   393,    -1,   401,    -1,   404,    -1,   405,
      -1,   411,    -1,   419,    -1,   420,    -1,   426,    -1,   427,
      -1,   435,    -1,   442,    -1,   443,    -1,   445,    -1,   446,
      -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,   456,   456,   472,   484,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   527,     9,
      18,    27,    36,    45,    54,    63,    72,    85,    87,    93,
      94,    99,   103,   107,   118,   126,   130,   139,   148,   157,
     166,   175,   184,   192,   200,   209,   218,   227,   236,   253,
     262,   271,   280,   290,   303,   318,   327,   335,   350,   358,
     368,   378,   385,   392,   400,   407,   418,   419,   424,   428,
     433,   438,   446,   447,   452,   456,   457,     7,    13,    19,
      25,     6,    15,    25,    35,    45,    55,    65,    75,    85,
      95,   106,   117,   127,   140,   141,     8,    21,    27,    34,
      40,    47,    57,    61,    70,    79,    88,    95,    96,   101,
     113,   118,   143,   153,   163,   169,   180,   191,   206,   207,
     213,   214,   219,   220,   226,   227,   231,   232,   237,   239,
     245,   246,   250,   251,   256,     7,    14,    22,     9,    19,
      32,    33,     7,    14,    31,    51,    52,     9,    17,    29,
      30,    34,    35,    36,    41,    42,    43,    48,    52,    56,
      60,    64,    68,    72,    76,    80,    84,    88,    92,    97,
     101,   105,   112,   113,   117,   118,   119,     2,     9,    15,
      21,    28,    35,    45,    46,    47,     7,    21,    41,    42,
      69,    70,    71,    72,    73,    74,    78,    79,    84,    89,
      90,    91,    92,    93,    98,   105,   106,   107,   124,   131,
     138,   148,   158,   170,   179,   188,   207,   214,   219,   221,
     223,   225,   228,   233,   234,   238,   239,   240,   241,   246,
     250,   251,   256,   263,   268,   269,   270,   271,   272,   273,
     274,   275,   281,   282,   286,   291,   298,   305,   312,   324,
     325,   326,   327,   331,   336,   337,   338,   343,   348,   349,
     350,   351,   352,   353,   358,   381,   385,   392,   393,   397,
     401,   402,   403,   407,   411,   419,   420,   425,   426,   430,
     438,   439,   444,   445,   449,   454,   458,   462,   467,   475,
     476,   480,   481,   487,   498,   511,   525,   539,   553,   567,
     590,   594,   601,   605,   613,   618,   625,   635,   636,   637,
     638,   639,   646,   653,   654,   659,   660,     9,    19,    29,
      39,    49,    59,    73,    74,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    86,    87,    92,    93,
      94,    95,    96,    97,    98,   103,   104,   109,   110,   111,
     116,   117,   118,     7,    18,    19,    23,    27,     7,     1,
      30,    53,    54,    59,    63,    68,    72,    80,    81,    85,
      86,    91,    92,    96,    97,   102,   103,   104,   105,   106,
     111,   119,   123,   128,   129,   134,   138,   143,   147,   151,
     155,   159,   163,   167,   171,   175,   179,   183,   187,   191,
     195,   203,   209,   210,   211,   216,   220,    47,    48,    52,
      53,    68,    69,    76,    84,    92,   100,   108,   116,   127,
     128,   155,   170,   186,   187,   206,   210,   214,   231,   238,
     245,   255,   256,   259,   271,   282,   290,   295,   300,   305,
     310,   318,   326,   331,   336,   343,   344,   348,   349,   350,
     357,   358,   362,   363,   367,   368,   372,   376,   377,   380,
     389,   400,   401,   402,   405,   406,   407,   411,   412,   413,
     414,   418,   419,   423,   425,   441,   443,   448,   451,   459,
     463,   467,   471,   475,   479,   486,   491,   498,   499,   503,
     507,   511,   515,   522,   529,   530,   535,   536,   540,   541,
     549,   569,   570,   572,   577,   578,   582,   583,   586,   587,
     612,   613,   617,   618,   622,   623,   627,   640,   641,   645,
     646,   650,   651,   655,   656,   660,   671,   672,   673,   674,
     678,   679,   684,   685,   686,   695,   701,   719,   720,   724,
     725,   731,   737,   745,   753,   789,   815,   819,   845,   849,
     862,   876,   891,   903,   919,   925,   930,   936,   943,   944,
     952,   956,   960,   966,   973,   978,   979,   980,   981,   985,
     986,   998,   999,  1004,  1011,  1018,  1025,  1057,  1068,  1081,
    1086,  1087,  1090,  1091,  1094,  1095,  1100,  1101,  1106,  1110,
    1116,  1137,  1145,  1158,  1161,  1165,  1165,  1167,  1172,  1179,
    1184,  1190,  1195,  1201,  1209,  1211,  1214,  1218,  1219,  1220,
    1221,  1222,  1223,  1228,  1248,  1249,  1250,  1251,  1262,  1268,
    1276,  1277,  1283,  1288,  1293,  1298,  1303,  1308,  1313,  1318,
    1324,  1330,  1336,  1343,  1365,  1374,  1378,  1386,  1390,  1398,
    1410,  1431,  1435,  1441,  1445,  1458,  1466,  1476,  1478,  1480,
    1482,  1484,  1486,  1491,  1492,  1499,  1508,  1516,  1525,  1536,
    1544,  1545,  1546,  1550,  1550,  1553,  1553,  1556,  1556,  1559,
    1559,  1562,  1562,  1565,  1565,  1568,  1568,  1571,  1571,  1574,
    1576,  1578,  1580,  1582,  1584,  1586,  1588,  1590,  1595,  1600,
    1606,  1613,  1618,  1624,  1630,  1661,  1663,  1665,  1673,  1688,
    1690,  1692,  1694,  1696,  1698,  1700,  1702,  1704,  1706,  1708,
    1710,  1712,  1714,  1717,  1719,  1721,  1724,  1726,  1728,  1730,
    1733,  1738,  1743,  1750,  1755,  1762,  1767,  1775,  1780,  1789,
    1797,  1805,  1813,  1831,  1839,  1847,  1855,  1863,  1871,  1875,
    1883,  1891,  1907,  1915,  1923,  1931,  1939,  1947,  1955,  1959,
    1963,  1967,  1971,  1979,  1987,  1995,  2003,  2023,  2045,  2056,
    2063,  2088,  2090,  2092,  2094,  2096,  2098,  2100,  2102,  2104,
    2106,  2108,  2110,  2112,  2114,  2116,  2118,  2120,  2122,  2124,
    2126,  2130,  2134,  2138,  2152,  2153,  2154,  2166,  2181,  2193,
    2195,  2197,  2208,  2232,  2245,  2249,  2255,  2262,  2269,  2279,
    2286,  2314,  2349,  2360,  2361,  2368,  2374,  2378,  2382,  2386,
    2390,  2394,  2398,  2402,  2406,  2410,  2414,  2418,  2422,  2426,
    2430,  2434,  2436,  2440,  2449,  2454,  2461,  2476,  2483,  2487,
    2491,  2495,  2499,  2513,  2514,  2518,  2519,  2527,  2528,  2532,
    2533,  2538,  2546,  2548,  2562,  2565,  2592,  2593,  2596,  2597,
    2608,  2626,  2633,  2642,  2659,  2704,  2712,  2720,  2728,  2736,
    2757,  2758,  2761,  2762,  2765,  2766,  2767,  2770,  2771,  2774,
    2775,  2776,  2777,  2778,  2779,  2780,  2781,  2782,  2783,  2784,
    2785,  2788,  2790,  2795,  2797,  2802,  2804,  2806,  2808,  2810,
    2812,  2814,  2816,  2830,  2832,  2836,  2840,  2847,  2851,  2857,
    2861,  2870,  2881,  2882,  2886,  2890,  2897,  2898,  2899,  2900,
    2901,  2902,  2903,  2904,  2905,  2906,  2916,  2920,  2927,  2934,
    2935,  2951,  2955,  2960,  2964,  2979,  2984,  2988,  2991,  2994,
    2995,  2996,  2999,  3006,  3016,  3030,  3031,  3035,  3046,  3047,
    3050,  3051,  3054,  3058,  3065,  3069,  3073,  3081,  3092,  3093,
    3097,  3098,  3102,  3103,  3106,  3107,  3117,  3118,  3122,  3123,
    3126,  3142,  3150,  3158,  3180,  3181,  3192,  3196,  3223,  3225,
    3230,  3232,  3242,  3244,  3255,  3259,  3263,  3267,  3271,  3280,
    3287,  3319,  3323,  3327,  3331,  3335,  3339,  3343,  3349,  3350,
    3366,  3367,  3368,  3371,  3372,  3377,  3378,  3379,  3382,  3383,
    3386,  3388,  3393,  3394,  3397,  3405,  3406,  3407,  3408,  3409,
    3412,  3413,     7,    18,    19,    23,    24,    25,    26,     7,
      16,    34,    41,    46,    47,    48,    49,     8,    33,    62,
      66,    67,    72,    73,    78,    79,    83,    84,    89,    90,
       7,    16,    25,    34,    43,    52,     5,     7,    20,     9,
      16,    26,    33,    44,    45,    50,    51,    52,    57,    58,
      59,    60,    61,    65,    66,    67,    68,    73,    74,    79,
      83,    91,    92,    97,    98,    99,   105,   110,   118,   119,
      10,    16,    22,    32,    33,    41,    52,    64,    72,    80,
      87,    97,    99,   105,   109,   113,   128,   135,   136,   137,
     141,   142,     7,    16,     8,    22,    36,    48,    56,    70,
      71,    72,    73,    74,    87,    88,    93,    94,    98,    99,
       7,    21,    25,    32,    43,    44,    50,    51,     9,    19,
       2,     7,    14,    24,    25,    32,     3,    10,    16,    22,
      28,    37,    37,    39,    40,     6,     8,    21,    34,    52,
      74,    75,    76,    77,    11,    24,    41,    42,    43,    48,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    63,    63,
      63,    63,    63,    63,    63,    63,    63,    63,    63,    63,
      63,    63,    63,    63,    63,    63,    63,    63,    63,    63,
      63,    63,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "IDENT", "FCONST", "SCONST", "BCONST",
  "XCONST", "Op", "ICONST", "PARAM", "TYPECAST", "DOT_DOT", "COLON_EQUALS",
  "EQUALS_GREATER", "LAMBDA_ARROW", "LESS_EQUALS", "GREATER_EQUALS",
  "NOT_EQUALS", "ABORT_P", "ABSOLUTE_P", "ACCESS", "ACTION", "ADD_P",
  "ADMIN", "AFTER", "AGGREGATE", "ALL", "ALSO", "ALTER", "ALWAYS",
  "ANALYSE", "ANALYZE", "AND", "ANY", "ARRAY", "AS", "ASC_P", "ASSERTION",
  "ASSIGNMENT", "ASYMMETRIC", "AT", "ATTACH", "ATTRIBUTE", "AUTHORIZATION",
  "BACKWARD", "BEFORE", "BEGIN_P", "BETWEEN", "BIGINT", "BINARY", "BIT",
  "BOOLEAN_P", "BOTH", "BY", "CACHE", "CALL_P", "CALLED", "CASCADE",
  "CASCADED", "CASE", "CAST", "CATALOG_P", "CHAIN", "CHAR_P", "CHARACTER",
  "CHARACTERISTICS", "CHECK_P", "CHECKPOINT", "CLASS", "CLOSE", "CLUSTER",
  "COALESCE", "COLLATE", "COLLATION", "COLUMN", "COLUMNS", "COMMENT",
  "COMMENTS", "COMMIT", "COMMITTED", "CONCURRENTLY", "CONFIGURATION",
  "CONFLICT", "CONNECTION", "CONSTRAINT", "CONSTRAINTS", "CONTENT_P",
  "CONTINUE_P", "CONVERSION_P", "COPY", "COST", "CREATE_P", "CROSS", "CSV",
  "CUBE", "CURRENT_P", "CURRENT_CATALOG", "CURRENT_DATE", "CURRENT_ROLE",
  "CURRENT_SCHEMA", "CURRENT_TIME", "CURRENT_TIMESTAMP", "CURRENT_USER",
  "CURSOR", "CYCLE", "DATA_P", "DATABASE", "DAY_P", "DAYS_P", "DEALLOCATE",
  "DEC", "DECIMAL_P", "DECLARE", "DEFAULT", "DEFAULTS", "DEFERRABLE",
  "DEFERRED", "DEFINER", "DELETE_P", "DELIMITER", "DELIMITERS", "DEPENDS",
  "DESC_P", "DESCRIBE", "DETACH", "DICTIONARY", "DISABLE_P", "DISCARD",
  "DISTINCT", "DO", "DOCUMENT_P", "DOMAIN_P", "DOUBLE_P", "DROP", "EACH",
  "ELSE", "ENABLE_P", "ENCODING", "ENCRYPTED", "END_P", "ENUM_P", "ESCAPE",
  "EVENT", "EXCEPT", "EXCLUDE", "EXCLUDING", "EXCLUSIVE", "EXECUTE",
  "EXISTS", "EXPLAIN", "EXPORT_P", "EXTENSION", "EXTERNAL", "EXTRACT",
  "FALSE_P", "FAMILY", "FETCH", "FILTER", "FIRST_P", "FLOAT_P",
  "FOLLOWING", "FOR", "FORCE", "FOREIGN", "FORWARD", "FREEZE", "FROM",
  "FULL", "FUNCTION", "FUNCTIONS", "GENERATED", "GLOB", "GLOBAL", "GRANT",
  "GRANTED", "GROUP_P", "GROUPING", "HANDLER", "HAVING", "HEADER_P",
  "HOLD", "HOUR_P", "HOURS_P", "IDENTITY_P", "IF_P", "ILIKE", "IMMEDIATE",
  "IMMUTABLE", "IMPLICIT_P", "IMPORT_P", "IN_P", "INCLUDING", "INCREMENT",
  "INDEX", "INDEXES", "INHERIT", "INHERITS", "INITIALLY", "INLINE_P",
  "INNER_P", "INOUT", "INPUT_P", "INSENSITIVE", "INSERT", "INSTEAD",
  "INT_P", "INTEGER", "INTERSECT", "INTERVAL", "INTO", "INVOKER", "IS",
  "ISNULL", "ISOLATION", "JOIN", "KEY", "LABEL", "LANGUAGE", "LARGE_P",
  "LAST_P", "LATERAL_P", "LEADING", "LEAKPROOF", "LEFT", "LEVEL", "LIKE",
  "LIMIT", "LISTEN", "LOAD", "LOCAL", "LOCALTIME", "LOCALTIMESTAMP",
  "LOCATION", "LOCK_P", "LOCKED", "LOGGED", "MACRO", "MAPPING", "MATCH",
  "MATERIALIZED", "MAXVALUE", "METHOD", "MICROSECOND_P", "MICROSECONDS_P",
  "MILLISECOND_P", "MILLISECONDS_P", "MINUTE_P", "MINUTES_P", "MINVALUE",
  "MODE", "MONTH_P", "MONTHS_P", "MOVE", "NAME_P", "NAMES", "NATIONAL",
  "NATURAL", "NCHAR", "NEW", "NEXT", "NO", "NONE", "NOT", "NOTHING",
  "NOTIFY", "NOTNULL", "NOWAIT", "NULL_P", "NULLIF", "NULLS_P", "NUMERIC",
  "OBJECT_P", "OF", "OFF", "OFFSET", "OIDS", "OLD", "ON", "ONLY",
  "OPERATOR", "OPTION", "OPTIONS", "OR", "ORDER", "ORDINALITY", "OUT_P",
  "OUTER_P", "OVER", "OVERLAPS", "OVERLAY", "OVERRIDING", "OWNED", "OWNER",
  "PARALLEL", "PARSER", "PARTIAL", "PARTITION", "PASSING", "PASSWORD",
  "PERCENT", "PLACING", "PLANS", "POLICY", "POSITION", "PRAGMA_P",
  "PRECEDING", "PRECISION", "PREPARE", "PREPARED", "PRESERVE", "PRIMARY",
  "PRIOR", "PRIVILEGES", "PROCEDURAL", "PROCEDURE", "PROGRAM",
  "PUBLICATION", "QUOTE", "RANGE", "READ_P", "REAL", "REASSIGN", "RECHECK",
  "RECURSIVE", "REF", "REFERENCES", "REFERENCING", "REFRESH", "REINDEX",
  "RELATIVE_P", "RELEASE", "RENAME", "REPEATABLE", "REPLACE", "REPLICA",
  "RESET", "RESTART", "RESTRICT", "RETURNING", "RETURNS", "REVOKE",
  "RIGHT", "ROLE", "ROLLBACK", "ROLLUP", "ROW", "ROWS", "RULE", "SAMPLE",
  "SAVEPOINT", "SCHEMA", "SCHEMAS", "SCROLL", "SEARCH", "SECOND_P",
  "SECONDS_P", "SECURITY", "SELECT", "SEQUENCE", "SEQUENCES",
  "SERIALIZABLE", "SERVER", "SESSION", "SESSION_USER", "SET", "SETOF",
  "SETS", "SHARE", "SHOW", "SIMILAR", "SIMPLE", "SKIP", "SMALLINT",
  "SNAPSHOT", "SOME", "SQL_P", "STABLE", "STANDALONE_P", "START",
  "STATEMENT", "STATISTICS", "STDIN", "STDOUT", "STORAGE", "STRICT_P",
  "STRIP_P", "STRUCT", "SUBSCRIPTION", "SUBSTRING", "SYMMETRIC", "SYSID",
  "SYSTEM_P", "TABLE", "TABLES", "TABLESAMPLE", "TABLESPACE", "TEMP",
  "TEMPLATE", "TEMPORARY", "TEXT_P", "THEN", "TIME", "TIMESTAMP", "TO",
  "TRAILING", "TRANSACTION", "TRANSFORM", "TREAT", "TRIGGER", "TRIM",
  "TRUE_P", "TRUNCATE", "TRUSTED", "TYPE_P", "TYPES_P", "UNBOUNDED",
  "UNCOMMITTED", "UNENCRYPTED", "UNION", "UNIQUE", "UNKNOWN", "UNLISTEN",
  "UNLOGGED", "UNTIL", "UPDATE", "USER", "USING", "VACUUM", "VALID",
  "VALIDATE", "VALIDATOR", "VALUE_P", "VALUES", "VARCHAR", "VARIADIC",
  "VARYING", "VERBOSE", "VERSION_P", "VIEW", "VIEWS", "VOLATILE", "WHEN",
  "WHERE", "WHITESPACE_P", "WINDOW", "WITH", "WITHIN", "WITHOUT", "WORK",
  "WRAPPER", "WRITE_P", "XML_P", "XMLATTRIBUTES", "XMLCONCAT",
  "XMLELEMENT", "XMLEXISTS", "XMLFOREST", "XMLNAMESPACES", "XMLPARSE",
  "XMLPI", "XMLROOT", "XMLSERIALIZE", "XMLTABLE", "YEAR_P", "YEARS_P",
  "YES_P", "ZONE", "NOT_LA", "NULLS_LA", "WITH_LA", "'<'", "'>'", "'='",
  "POSTFIXOP", "'+'", "'-'", "'*'", "'/'", "'%'", "'^'", "UMINUS", "'['",
  "']'", "'('", "')'", "'.'", "';'", "','", "'?'", "':'", "$accept",
  "stmtblock", "stmtmulti", "stmt", "AlterTableStmt",
  "alter_identity_column_option_list", "alter_column_default",
  "alter_identity_column_option", "alter_generic_option_list",
  "alter_table_cmd", "alter_using", "alter_generic_option_elem",
  "alter_table_cmds", "alter_generic_options", "opt_set_data",
  "DeallocateStmt", "RenameStmt", "opt_column", "InsertStmt",
  "insert_rest", "insert_target", "opt_conf_expr", "opt_with_clause",
  "insert_column_item", "set_clause", "opt_on_conflict", "index_elem",
  "returning_clause", "override_kind", "set_target_list", "opt_collate",
  "opt_class", "insert_column_list", "set_clause_list", "index_params",
  "set_target", "PragmaStmt", "CreateSeqStmt", "OptSeqOptList",
  "ExecuteStmt", "execute_param_clause", "AlterSeqStmt", "SeqOptList",
  "opt_with", "NumericOnly", "SeqOptElem", "opt_by", "SignedIconst",
  "TransactionStmt", "opt_transaction", "CreateStmt",
  "ConstraintAttributeSpec", "def_arg", "OptParenthesizedSeqOptList",
  "generic_option_arg", "key_action", "ColConstraint", "ColConstraintElem",
  "generic_option_elem", "key_update", "key_actions",
  "create_generic_options", "OnCommitOption", "reloptions",
  "opt_no_inherit", "TableConstraint", "TableLikeOption", "reloption_list",
  "ExistingIndex", "ConstraintAttr", "OptWith", "definition",
  "TableLikeOptionList", "generic_option_name", "ConstraintAttributeElem",
  "columnDef", "generic_option_list", "def_list", "index_name",
  "TableElement", "def_elem", "opt_definition", "OptTableElementList",
  "columnElem", "opt_column_list", "ColQualList", "key_delete",
  "reloption_elem", "columnList", "func_type", "ConstraintElem",
  "TableElementList", "key_match", "TableLikeClause", "OptTemp",
  "generated_when", "DropStmt", "drop_type_any_name", "drop_type_name",
  "any_name_list", "opt_drop_behavior", "drop_type_name_on_any_name",
  "CreateFunctionStmt", "macro_alias", "param_list", "UpdateStmt",
  "CopyStmt", "copy_from", "copy_delimiter", "copy_generic_opt_arg_list",
  "opt_using", "opt_as", "opt_program", "copy_options",
  "copy_generic_opt_arg", "copy_generic_opt_elem", "opt_oids",
  "copy_opt_list", "opt_binary", "copy_opt_item",
  "copy_generic_opt_arg_list_item", "copy_file_name",
  "copy_generic_opt_list", "SelectStmt", "select_with_parens",
  "select_no_parens", "select_clause", "simple_select", "with_clause",
  "cte_list", "common_table_expr", "into_clause", "OptTempTableName",
  "opt_table", "all_or_distinct", "distinct_clause", "opt_all_clause",
  "opt_sort_clause", "sort_clause", "sortby_list", "sortby",
  "opt_asc_desc", "opt_nulls_order", "select_limit", "opt_select_limit",
  "limit_clause", "offset_clause", "sample_count", "sample_clause",
  "opt_sample_func", "tablesample_entry", "tablesample_clause",
  "opt_tablesample_clause", "opt_repeatable_clause", "select_limit_value",
  "select_offset_value", "select_fetch_first_value", "I_or_F_const",
  "row_or_rows", "first_or_next", "group_clause", "group_by_list",
  "group_by_item", "empty_grouping_set", "having_clause",
  "for_locking_clause", "opt_for_locking_clause", "for_locking_items",
  "for_locking_item", "for_locking_strength", "locked_rels_list",
  "opt_nowait_or_skip", "values_clause", "from_clause", "from_list",
  "table_ref", "joined_table", "alias_clause", "opt_alias_clause",
  "func_alias_clause", "join_type", "join_outer", "join_qual",
  "relation_expr", "func_table", "rowsfrom_item", "rowsfrom_list",
  "opt_col_def_list", "opt_ordinality", "where_clause",
  "TableFuncElementList", "TableFuncElement", "opt_collate_clause",
  "colid_type_list", "RowOrStruct", "Typename", "opt_array_bounds",
  "SimpleTypename", "ConstTypename", "GenericType", "opt_type_modifiers",
  "Numeric", "opt_float", "Bit", "ConstBit", "BitWithLength",
  "BitWithoutLength", "Character", "ConstCharacter", "CharacterWithLength",
  "CharacterWithoutLength", "character", "opt_varying", "ConstDatetime",
  "ConstInterval", "opt_timezone", "year_keyword", "month_keyword",
  "day_keyword", "hour_keyword", "minute_keyword", "second_keyword",
  "millisecond_keyword", "microsecond_keyword", "opt_interval", "a_expr",
  "b_expr", "c_expr", "func_application", "func_expr",
  "func_expr_windowless", "func_expr_common_subexpr",
  "within_group_clause", "filter_clause", "window_clause",
  "window_definition_list", "window_definition", "over_clause",
  "window_specification", "opt_existing_window_name",
  "opt_partition_clause", "opt_frame_clause", "frame_extent",
  "frame_bound", "qualified_row", "row", "sub_type", "all_Op", "MathOp",
  "qual_Op", "qual_all_Op", "subquery_Op", "any_operator", "expr_list",
  "func_arg_list", "func_arg_expr", "type_list", "extract_list",
  "extract_arg", "overlay_list", "overlay_placing", "position_list",
  "substr_list", "substr_from", "substr_for", "trim_list", "in_expr",
  "case_expr", "when_clause_list", "when_clause", "case_default",
  "case_arg", "columnref", "indirection_el", "opt_slice_bound",
  "indirection", "opt_indirection", "opt_asymmetric", "opt_target_list",
  "target_list", "target_el", "qualified_name_list", "qualified_name",
  "name_list", "name", "attr_name", "func_name", "AexprConst", "Iconst",
  "Sconst", "ColId", "ColIdOrString", "type_function_name", "any_name",
  "attrs", "opt_name_list", "param_name", "ColLabel", "ColLabelOrString",
  "PrepareStmt", "prep_type_clause", "PreparableStmt", "CreateSchemaStmt",
  "OptSchemaEltList", "schema_stmt", "IndexStmt", "access_method",
  "access_method_clause", "opt_concurrently", "opt_index_name",
  "opt_reloptions", "opt_unique", "AlterObjectSchemaStmt",
  "CheckPointStmt", "ExportStmt", "ImportStmt", "ExplainStmt",
  "opt_verbose", "explain_option_arg", "ExplainableStmt",
  "NonReservedWord", "NonReservedWord_or_Sconst", "explain_option_list",
  "analyze_keyword", "opt_boolean_or_string", "explain_option_elem",
  "explain_option_name", "VariableSetStmt", "set_rest", "generic_set",
  "var_value", "zone_value", "var_list", "LoadStmt", "file_name",
  "VacuumStmt", "vacuum_option_elem", "opt_full", "vacuum_option_list",
  "opt_freeze", "DeleteStmt", "relation_expr_opt_alias",
  "where_or_current_clause", "using_clause", "AnalyzeStmt",
  "VariableResetStmt", "generic_reset", "reset_rest", "VariableShowStmt",
  "show_or_describe", "var_name", "CallStmt", "ViewStmt",
  "opt_check_option", "CreateAsStmt", "opt_with_data", "create_as_target",
  "unreserved_keyword", "col_name_keyword", "type_func_name_keyword",
  "reserved_keyword", 0
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,    60,    62,    61,   726,    43,    45,    42,    47,    37,
      94,   727,    91,    93,    40,    41,    46,    59,    44,    63,
      58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   491,   492,   493,   493,   494,   494,   494,   494,   494,
     494,   494,   494,   494,   494,   494,   494,   494,   494,   494,
     494,   494,   494,   494,   494,   494,   494,   494,   494,   494,
     494,   494,   494,   494,   494,   494,   494,   494,   494,   495,
     495,   495,   495,   495,   495,   495,   495,   496,   496,   497,
     497,   498,   498,   498,   498,   499,   499,   500,   500,   500,
     500,   500,   500,   500,   500,   500,   500,   500,   500,   500,
     500,   500,   500,   500,   500,   500,   500,   500,   500,   500,
     500,   500,   500,   500,   500,   500,   501,   501,   502,   502,
     502,   502,   503,   503,   504,   505,   505,   506,   506,   506,
     506,   507,   507,   507,   507,   507,   507,   507,   507,   507,
     507,   507,   507,   507,   508,   508,   509,   510,   510,   510,
     510,   510,   511,   511,   512,   512,   512,   513,   513,   514,
     515,   515,   516,   516,   516,   517,   517,   517,   518,   518,
     519,   519,   520,   520,   521,   521,   522,   522,   523,   523,
     524,   524,   525,   525,   526,   527,   527,   527,   528,   528,
     529,   529,   530,   530,   530,   531,   531,   532,   532,   533,
     533,   534,   534,   534,   535,   535,   535,   535,   536,   536,
     536,   536,   536,   536,   536,   536,   536,   536,   536,   536,
     536,   536,   537,   537,   538,   538,   538,   539,   539,   539,
     539,   539,   539,   540,   540,   540,   541,   541,   542,   542,
     543,   543,   543,   543,   543,   543,   544,   544,   545,   546,
     546,   546,   546,   546,   547,   547,   547,   547,   548,   548,
     548,   548,   548,   548,   548,   548,   549,   550,   551,   551,
     551,   551,   551,   552,   552,   553,   553,   553,   553,   554,
     555,   555,   556,   556,   557,   557,   557,   557,   557,   557,
     557,   557,   558,   558,   559,   560,   560,   560,   560,   561,
     561,   561,   561,   562,   563,   563,   563,   564,   565,   565,
     565,   565,   565,   565,   566,   567,   567,   568,   568,   569,
     570,   570,   570,   571,   571,   572,   572,   573,   573,   574,
     575,   575,   576,   576,   577,   578,   578,   578,   578,   579,
     579,   580,   580,   580,   581,   581,   581,   581,   581,   581,
     582,   582,   583,   583,   583,   583,   584,   585,   585,   585,
     585,   585,   585,   585,   585,   586,   586,   587,   587,   587,
     587,   587,   587,   588,   588,   588,   588,   588,   588,   588,
     588,   588,   588,   588,   588,   588,   588,   588,   589,   589,
     589,   589,   589,   589,   589,   590,   590,   591,   591,   591,
     592,   592,   592,   593,   594,   594,   595,   595,   596,   597,
     597,   598,   598,   599,   599,   600,   600,   601,   601,   602,
     602,   603,   603,   604,   604,   605,   605,   605,   605,   605,
     606,   607,   607,   608,   608,   609,   609,   610,   610,   610,
     610,   610,   610,   610,   610,   610,   610,   610,   610,   610,
     610,   611,   612,   612,   612,   613,   613,   614,   614,   615,
     615,   616,   616,   616,   616,   616,   616,   616,   616,   617,
     617,   618,   618,   618,   618,   618,   618,   618,   619,   619,
     619,   620,   620,   621,   622,   622,   623,   623,   623,   623,
     623,   623,   623,   623,   623,   624,   624,   625,   625,   625,
     626,   626,   627,   627,   628,   628,   629,   630,   630,   631,
     631,   632,   632,   632,   633,   633,   633,   634,   634,   634,
     634,   635,   635,   636,   636,   636,   636,   637,   637,   638,
     638,   638,   638,   638,   638,   639,   639,   640,   640,   641,
     641,   641,   641,   642,   643,   643,   644,   644,   645,   645,
     646,   647,   647,   647,   648,   648,   649,   649,   650,   650,
     651,   651,   652,   652,   653,   653,   654,   655,   655,   656,
     656,   657,   657,   658,   658,   659,   660,   660,   660,   660,
     661,   661,   662,   662,   662,   663,   663,   664,   664,   665,
     665,   666,   666,   666,   666,   666,   666,   666,   667,   667,
     667,   667,   667,   667,   668,   668,   668,   668,   669,   669,
     670,   670,   670,   670,   670,   671,   671,   671,   671,   672,
     672,   673,   673,   674,   674,   674,   674,   675,   675,   676,
     677,   677,   678,   678,   679,   679,   680,   680,   681,   681,
     682,   683,   683,   684,   684,   685,   685,   686,   686,   686,
     686,   686,   686,   686,   687,   687,   687,   688,   688,   688,
     688,   688,   688,   688,   689,   689,   689,   689,   690,   690,
     691,   691,   692,   692,   692,   692,   692,   692,   692,   692,
     692,   692,   692,   693,   693,   694,   694,   695,   695,   696,
     697,   698,   698,   699,   699,   700,   701,   702,   702,   702,
     702,   702,   702,   703,   703,   704,   704,   704,   704,   705,
     706,   706,   706,   707,   707,   708,   708,   709,   709,   710,
     710,   711,   711,   712,   712,   713,   713,   714,   714,   715,
     715,   715,   715,   715,   715,   715,   715,   715,   715,   715,
     715,   715,   715,   715,   715,   716,   716,   716,   716,   716,
     716,   716,   716,   716,   716,   716,   716,   716,   716,   716,
     716,   716,   716,   716,   716,   716,   716,   716,   716,   716,
     716,   716,   716,   716,   716,   716,   716,   716,   716,   716,
     716,   716,   716,   716,   716,   716,   716,   716,   716,   716,
     716,   716,   716,   716,   716,   716,   716,   716,   716,   716,
     716,   716,   716,   716,   716,   716,   716,   716,   716,   716,
     716,   717,   717,   717,   717,   717,   717,   717,   717,   717,
     717,   717,   717,   717,   717,   717,   717,   717,   717,   717,
     717,   717,   717,   717,   718,   718,   718,   718,   718,   718,
     718,   718,   718,   718,   719,   719,   719,   719,   719,   719,
     719,   720,   720,   721,   721,   722,   722,   722,   722,   722,
     722,   722,   722,   722,   722,   722,   722,   722,   722,   722,
     722,   722,   722,   722,   722,   722,   722,   722,   722,   722,
     722,   722,   722,   723,   723,   724,   724,   725,   725,   726,
     726,   727,   728,   728,   728,   729,   730,   730,   731,   731,
     732,   732,   732,   733,   733,   734,   734,   734,   734,   734,
     735,   735,   736,   736,   737,   737,   737,   738,   738,   739,
     739,   739,   739,   739,   739,   739,   739,   739,   739,   739,
     739,   740,   740,   741,   741,   742,   742,   742,   742,   742,
     742,   742,   742,   743,   743,   744,   744,   745,   745,   746,
     746,   746,   747,   747,   748,   748,   749,   749,   749,   749,
     749,   749,   749,   749,   749,   749,   750,   750,   751,   752,
     752,   753,   753,   753,   753,   753,   753,   754,   755,   756,
     756,   756,   757,   757,   758,   759,   759,   760,   761,   761,
     762,   762,   763,   763,   764,   764,   764,   764,   765,   765,
     766,   766,   767,   767,   768,   768,   769,   769,   770,   770,
     771,   771,   771,   771,   772,   772,   773,   773,   774,   774,
     775,   776,   777,   777,   778,   778,   778,   778,   778,   778,
     778,   778,   778,   778,   778,   778,   778,   778,   779,   780,
     781,   781,   781,   782,   782,   783,   783,   783,   784,   784,
     785,   785,   786,   786,   787,   788,   788,   788,   788,   788,
     789,   789,   790,   791,   791,   792,   792,   792,   792,   793,
     793,   794,   794,   795,   795,   795,   795,   796,   796,   797,
     798,   798,   799,   799,   800,   800,   801,   801,   802,   802,
     803,   803,   803,   803,   803,   803,   804,   805,   806,   807,
     807,   807,   807,   808,   808,   809,   809,   809,   810,   810,
     810,   810,   810,   811,   811,   811,   811,   812,   812,   813,
     813,   814,   814,   815,   815,   815,   815,   816,   817,   817,
     818,   818,   818,   819,   819,   819,   819,   820,   820,   820,
     820,   821,   821,   822,   822,   822,   822,   822,   822,   822,
     823,   823,   824,   825,   826,   826,   826,   826,   826,   827,
     827,   827,   827,   827,   828,   828,   829,   829,   830,   830,
     831,   832,   832,   832,   833,   833,   834,   834,   835,   835,
     836,   837,   837,   838,   838,   838,   839,   839,   839,   839,
     839,   840,   840,   841,   841,   842,   843,   843,   843,   843,
     844,   844,   844,   844,   845,   845,   846,   846,   846,   847,
     848,   848,   848,   848,   848,   848,   848,   848,   848,   848,
     848,   848,   848,   848,   848,   848,   848,   848,   848,   848,
     848,   848,   848,   848,   848,   848,   848,   848,   848,   848,
     848,   848,   848,   848,   848,   848,   848,   848,   848,   848,
     848,   848,   848,   848,   848,   848,   848,   848,   848,   848,
     848,   848,   848,   848,   848,   848,   848,   848,   848,   848,
     848,   848,   848,   848,   848,   848,   848,   848,   848,   848,
     848,   848,   848,   848,   848,   848,   848,   848,   848,   848,
     848,   848,   848,   848,   848,   848,   848,   848,   848,   848,
     848,   848,   848,   848,   848,   848,   848,   848,   848,   848,
     848,   848,   848,   848,   848,   848,   848,   848,   848,   848,
     848,   848,   848,   848,   848,   848,   848,   848,   848,   848,
     848,   848,   848,   848,   848,   848,   848,   848,   848,   848,
     848,   848,   848,   848,   848,   848,   848,   848,   848,   848,
     848,   848,   848,   848,   848,   848,   848,   848,   848,   848,
     848,   848,   848,   848,   848,   848,   848,   848,   848,   848,
     848,   848,   848,   848,   848,   848,   848,   848,   848,   848,
     848,   848,   848,   848,   848,   848,   848,   848,   848,   848,
     848,   848,   848,   848,   848,   848,   848,   848,   848,   848,
     848,   848,   848,   848,   848,   848,   848,   848,   848,   848,
     848,   848,   848,   848,   848,   848,   848,   848,   848,   848,
     848,   848,   848,   848,   848,   848,   848,   848,   848,   848,
     848,   848,   848,   848,   848,   848,   848,   848,   848,   848,
     848,   848,   848,   848,   848,   848,   848,   848,   848,   848,
     848,   848,   848,   848,   848,   848,   848,   848,   848,   848,
     848,   848,   848,   848,   848,   848,   848,   848,   848,   848,
     848,   848,   848,   848,   848,   848,   848,   848,   848,   848,
     848,   848,   848,   848,   848,   848,   848,   848,   848,   848,
     848,   848,   848,   848,   848,   848,   848,   848,   848,   848,
     848,   848,   848,   848,   848,   848,   848,   848,   848,   849,
     849,   849,   849,   849,   849,   849,   849,   849,   849,   849,
     849,   849,   849,   849,   849,   849,   849,   849,   849,   849,
     849,   849,   849,   849,   849,   849,   849,   849,   849,   849,
     849,   849,   849,   849,   849,   849,   849,   849,   849,   849,
     849,   849,   849,   849,   849,   849,   849,   849,   850,   850,
     850,   850,   850,   850,   850,   850,   850,   850,   850,   850,
     850,   850,   850,   850,   850,   850,   850,   850,   850,   850,
     850,   850,   851,   851,   851,   851,   851,   851,   851,   851,
     851,   851,   851,   851,   851,   851,   851,   851,   851,   851,
     851,   851,   851,   851,   851,   851,   851,   851,   851,   851,
     851,   851,   851,   851,   851,   851,   851,   851,   851,   851,
     851,   851,   851,   851,   851,   851,   851,   851,   851,   851,
     851,   851,   851,   851,   851,   851,   851,   851,   851,   851,
     851,   851,   851,   851,   851,   851,   851,   851,   851,   851,
     851,   851,   851,   851,   851,   851,   851,   851,   851
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     0,     4,
       6,     4,     6,     4,     6,     4,     6,     1,     2,     3,
       2,     1,     3,     2,     3,     1,     3,     2,     5,     3,
       6,     4,     6,     6,     6,     5,     5,     6,     9,     4,
       5,     7,     6,     4,     8,     4,     2,     4,     3,     6,
       4,     2,     2,     2,     2,     1,     2,     0,     1,     2,
       2,     2,     1,     3,     4,     2,     0,     2,     3,     2,
       3,     6,     6,     8,     6,     8,     6,     8,     6,     8,
       8,    10,     8,    10,     1,     0,     7,     1,     4,     4,
       7,     2,     1,     3,     4,     3,     0,     1,     0,     2,
       3,     5,     8,     5,     0,     5,     5,     7,     2,     0,
       1,     1,     1,     3,     2,     0,     1,     0,     1,     3,
       1,     3,     1,     3,     2,     2,     4,     5,     5,     8,
       1,     0,     3,     9,    12,     3,     0,     4,     6,     1,
       2,     1,     1,     0,     1,     2,     2,     1,     2,     2,
       1,     2,     3,     2,     2,     2,     2,     3,     3,     3,
       1,     3,     1,     0,     1,     2,     2,     2,     2,     2,
       2,     2,     2,     1,     1,     0,     9,    12,     0,     2,
       1,     1,     1,     1,     1,     1,     3,     0,     1,     2,
       1,     1,     2,     2,     3,     1,     1,     2,     2,     1,
       2,     3,     5,     2,     5,     5,     2,     3,     1,     1,
       2,     2,     0,     4,     0,     3,     4,     4,     0,     3,
       2,     0,     3,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     3,     1,     2,     2,     2,     2,
       2,     2,     0,     3,     3,     3,     0,     1,     2,     1,
       2,     2,     2,     2,     4,     1,     3,     1,     3,     1,
       1,     1,     1,     3,     1,     2,     0,     1,     0,     1,
       3,     0,     2,     0,     3,     3,     1,     5,     3,     1,
       3,     1,     4,     5,     5,     6,     3,     7,     4,    11,
       1,     3,     2,     2,     2,     0,     3,     1,     1,     2,
       2,     2,     2,     1,     0,     1,     2,     6,     4,     6,
       4,     6,     8,     1,     1,     1,     1,     1,     2,     1,
       2,     1,     1,     1,     3,     3,     3,     3,     2,     2,
       1,     3,     1,     1,     1,     1,     3,     1,     1,     0,
       1,     1,     1,     6,     1,     1,     2,     3,     8,    11,
       9,     1,     1,     3,     0,     1,     3,     1,     0,     1,
       0,     1,     0,     1,     3,     1,     1,     1,     3,     0,
       2,     2,     0,     2,     0,     1,     0,     1,     1,     1,
       3,     3,     1,     1,     3,     3,     3,     3,     4,     3,
       2,     1,     1,     1,     1,     1,     3,     1,     1,     3,
       3,     1,     2,     4,     4,     2,     3,     5,     5,     1,
       1,    10,    10,     1,     2,     4,     4,     4,     2,     2,
       3,     1,     3,     6,     2,     0,     3,     3,     4,     4,
       4,     4,     3,     2,     1,     1,     0,     1,     1,     0,
       1,     5,     1,     0,     1,     0,     3,     1,     3,     4,
       3,     1,     1,     0,     2,     2,     0,     2,     2,     1,
       1,     1,     0,     2,     4,     5,     4,     2,     3,     2,
       2,     2,     2,     1,     2,     3,     0,     1,     0,     5,
       1,     4,     6,     2,     1,     0,     4,     0,     1,     1,
       1,     1,     2,     2,     1,     1,     1,     1,     1,     1,
       3,     0,     1,     3,     1,     1,     2,     2,     0,     1,
       3,     1,     0,     1,     2,     3,     2,     4,     2,     3,
       2,     0,     1,     2,     0,     4,     5,     2,     0,     1,
       3,     3,     3,     3,     3,     3,     1,     4,     3,     4,
       5,     4,     5,     4,     5,     2,     4,     1,     1,     0,
       1,     4,     5,     4,     0,     2,     2,     2,     1,     1,
       0,     4,     2,     1,     2,     2,     4,     2,     6,     2,
       1,     3,     4,     0,     2,     0,     2,     0,     1,     3,
       3,     2,     0,     2,     4,     1,     1,     2,     3,     5,
       6,     2,     3,     4,     3,     4,     0,     1,     1,     1,
       1,     1,     2,     4,     1,     1,     1,     1,     2,     3,
       3,     0,     1,     1,     1,     1,     1,     2,     2,     2,
       2,     2,     1,     3,     0,     1,     1,     1,     1,     5,
       2,     1,     1,     1,     1,     4,     1,     2,     2,     1,
       3,     3,     2,     1,     0,     5,     2,     5,     2,     1,
       3,     3,     0,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     3,     3,     3,
       3,     3,     3,     3,     0,     1,     3,     3,     5,     2,
       2,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     2,     2,     3,     3,     2,     2,
       3,     3,     5,     4,     6,     3,     5,     4,     6,     4,
       6,     5,     7,     3,     2,     4,     3,     2,     1,     3,
       3,     3,     3,     4,     3,     4,     3,     4,     5,     6,
       6,     7,     6,     7,     6,     7,     3,     4,     4,     6,
       1,     1,     3,     2,     2,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     2,     2,
       5,     6,     6,     7,     1,     1,     2,     2,     4,     1,
       1,     1,     2,     2,     3,     5,     6,     8,     6,     6,
       4,     4,     1,     1,     1,     5,     1,     1,     4,     1,
       4,     1,     4,     1,     4,     1,     1,     1,     1,     1,
       1,     6,     4,     4,     4,     4,     6,     5,     5,     5,
       4,     6,     4,     5,     0,     5,     0,     2,     0,     1,
       3,     3,     2,     2,     0,     6,     1,     0,     3,     0,
       2,     2,     0,     1,     4,     2,     2,     2,     2,     2,
       4,     3,     1,     5,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     4,     1,     4,     1,     4,     1,     2,     1,
       2,     1,     2,     1,     3,     1,     3,     1,     3,     1,
       3,     3,     1,     3,     3,     0,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     4,     3,     2,     3,
       0,     3,     3,     2,     2,     1,     0,     2,     2,     3,
       2,     1,     1,     3,     5,     1,     2,     4,     2,     0,
       1,     0,     1,     2,     2,     2,     3,     5,     1,     0,
       1,     2,     0,     2,     1,     0,     1,     0,     1,     3,
       3,     2,     1,     1,     1,     3,     1,     2,     1,     3,
       1,     1,     1,     2,     1,     1,     1,     1,     1,     2,
       6,     2,     5,     3,     3,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     2,
       2,     3,     3,     0,     1,     1,     1,     1,     1,     1,
       1,     1,     5,     3,     0,     1,     1,     1,     1,     4,
       7,     2,     0,     1,     1,     1,     1,    13,    16,     1,
       2,     0,     1,     0,     1,     0,     2,     0,     1,     0,
       6,     8,     6,     8,     6,     8,     1,     4,     3,     2,
       4,     3,     5,     1,     0,     1,     1,     0,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       3,     1,     1,     1,     1,     1,     1,     2,     1,     1,
       2,     3,     3,     1,     3,     3,     2,     3,     3,     3,
       3,     1,     1,     1,     1,     3,     5,     1,     1,     1,
       1,     3,     2,     1,     4,     5,     5,     4,     6,     1,
       1,     1,     1,     1,     1,     0,     1,     3,     1,     0,
       7,     1,     2,     3,     2,     0,     2,     0,     2,     4,
       2,     1,     1,     1,     2,     3,     2,     2,     3,     4,
       2,     1,     1,     1,     3,     2,     9,    11,    12,    14,
       3,     4,     4,     0,     7,    10,     2,     3,     0,     4,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1
};

/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
     128,   205,     0,  1092,  1091,   205,     0,  1066,   205,   406,
     334,     0,  1162,     0,   205,     0,   128,     0,     0,     0,
       0,     0,     0,   205,   473,     0,  1161,   205,     0,  1135,
       0,     0,     0,     0,     0,     2,     4,     7,    17,    29,
      25,     0,    27,    15,    20,     6,    31,    16,    19,    13,
      32,    11,    30,   440,   427,   475,   439,   127,   443,    28,
      14,    24,     5,    10,    22,    23,    21,  1074,    35,    26,
      33,    18,     8,    34,    36,     0,     9,    37,    12,   204,
     203,   197,     0,     0,     0,     0,     0,   198,  1010,  1180,
    1181,  1182,  1183,  1184,  1185,  1186,  1187,  1188,  1189,  1190,
    1191,  1192,  1193,  1194,  1195,  1528,  1196,  1197,  1198,  1479,
    1480,  1529,  1481,  1482,  1199,  1200,  1201,  1202,  1203,  1204,
    1205,  1206,  1483,  1484,  1207,  1208,  1209,  1210,  1211,  1485,
    1530,  1212,  1213,  1214,  1215,  1216,  1531,  1217,  1218,  1219,
    1220,  1221,  1222,  1223,  1224,  1225,  1532,  1226,  1227,  1228,
    1533,  1229,  1230,  1231,  1232,  1233,  1234,  1235,  1486,  1487,
    1236,  1237,  1238,  1239,  1240,  1241,  1242,  1243,  1244,  1245,
    1246,  1247,  1248,  1249,  1250,  1251,  1252,  1253,  1254,  1255,
    1256,  1257,  1258,  1259,  1260,  1261,  1262,  1263,  1488,  1264,
    1265,  1266,  1267,  1489,  1268,  1269,  1270,  1490,  1271,  1272,
    1273,  1534,  1535,  1274,  1275,  1276,  1536,  1277,  1278,  1491,
    1279,  1280,  1281,  1282,  1283,  1284,  1285,  1537,  1286,  1287,
    1288,  1289,  1290,  1291,  1292,  1293,  1294,  1295,  1296,  1538,
    1492,  1297,  1298,  1299,  1300,  1493,  1494,  1495,  1301,  1539,
    1540,  1302,  1541,  1303,  1304,  1305,  1306,  1307,  1308,  1542,
    1309,  1543,  1310,  1311,  1312,  1313,  1314,  1315,  1316,  1317,
    1318,  1319,  1320,  1321,  1322,  1323,  1324,  1325,  1326,  1327,
    1328,  1329,  1330,  1331,  1332,  1333,  1334,  1335,  1496,  1544,
    1497,  1336,  1337,  1338,  1498,  1339,  1340,  1545,  1341,  1499,
    1342,  1500,  1343,  1344,  1345,  1346,  1347,  1348,  1349,  1350,
    1351,  1501,  1546,  1352,  1547,  1502,  1353,  1354,  1355,  1356,
    1357,  1358,  1359,  1360,  1361,  1362,  1363,  1364,  1503,  1365,
    1366,  1504,  1367,  1368,  1369,  1370,  1371,  1372,  1373,  1374,
    1375,  1376,  1377,  1378,  1505,  1379,  1380,  1381,  1382,  1383,
    1384,  1385,  1386,  1387,  1388,  1389,  1390,  1391,  1392,  1393,
    1394,  1395,  1396,  1548,  1397,  1398,  1399,  1506,  1400,  1401,
    1402,  1403,  1404,  1405,  1406,  1407,  1408,  1409,  1410,  1411,
    1412,  1413,  1414,  1415,  1416,  1507,  1417,  1418,  1419,  1549,
    1420,  1421,  1508,  1422,  1423,  1424,  1425,  1426,  1427,  1428,
    1429,  1430,  1431,  1432,  1433,  1509,  1434,  1510,  1435,  1436,
    1437,  1550,  1438,  1439,  1440,  1441,  1442,  1511,  1512,  1443,
    1444,  1513,  1445,  1514,  1446,  1447,  1448,  1449,  1450,  1451,
    1452,  1453,  1454,  1455,  1456,  1457,  1458,  1459,  1460,  1461,
    1462,  1515,  1516,  1463,  1551,  1464,  1465,  1466,  1467,  1468,
    1469,  1470,  1471,  1472,  1473,  1474,  1517,  1518,  1519,  1520,
    1521,  1522,  1523,  1524,  1525,  1526,  1527,  1475,  1476,  1477,
    1478,  1165,     0,     0,   992,  1011,  1012,  1017,   200,   405,
     128,     0,   374,     0,     0,   375,     0,     0,   328,   327,
    1058,   333,     0,     0,     0,  1010,    99,  1367,    97,   990,
    1011,     0,   351,   352,     0,   360,     0,   345,   349,   346,
       0,   370,   362,   371,   363,   344,   364,   353,   343,     0,
     372,   347,     0,     0,     0,   201,   166,   334,   128,     0,
    1079,  1080,  1078,  1069,  1074,  1081,  1082,     0,     0,  1009,
    1123,  1122,   155,  1034,  1152,  1511,  1443,  1163,  1153,  1150,
    1151,   202,   472,   470,     0,   977,  1312,  1404,  1415,  1511,
    1100,  1103,     0,   199,     0,   444,   593,   986,  1134,     0,
    1139,     0,  1381,   448,   451,  1023,   449,   440,     0,     0,
       1,   128,     0,     0,     0,   469,   469,     0,   469,     0,
     432,   440,   435,   439,     0,  1073,  1148,  1160,  1511,  1443,
    1515,  1156,  1157,  1285,     0,     0,  1285,     0,  1285,     0,
    1285,     0,     0,   969,     0,   970,   993,  1036,  1037,  1035,
       0,  1038,   301,   332,   331,   330,   329,   334,  1285,  1042,
       0,     0,     0,     0,     0,  1053,   100,    98,   358,   359,
       0,   350,   348,     0,  1285,   369,  1018,   365,  1285,   369,
     988,  1285,     0,     0,   162,     0,  1071,  1083,  1098,     0,
    1099,  1089,  1077,  1084,  1085,  1086,   128,   404,  1068,     0,
       0,     0,     0,  1154,     0,     0,     0,   995,   997,   998,
     901,  1008,   972,  1480,  1481,  1482,   961,     0,  1483,  1484,
    1485,  1530,   839,   826,   835,   840,   827,   829,   836,  1486,
    1487,   780,  1251,  1488,  1489,  1006,  1490,  1493,  1494,  1495,
     831,   833,  1496,  1497,     0,  1007,  1499,  1500,  1348,  1502,
    1503,  1505,  1506,   837,  1508,  1510,  1511,  1512,  1513,  1514,
    1005,   838,  1516,     0,     0,     0,   983,     0,   972,   811,
       0,   634,   635,   657,   658,   636,   663,   664,   666,   637,
       0,   982,   715,   854,   810,   822,   882,   758,     0,   809,
     804,   455,   978,     0,   805,   994,   996,   962,   455,   976,
    1101,  1106,  1102,     0,     0,     0,     0,     0,   595,   594,
     987,  1133,  1131,  1132,  1130,  1129,  1136,     0,  1138,  1074,
     915,     0,   450,     0,     0,     0,   430,   429,     3,     0,
       0,  1141,     0,   467,   468,     0,     0,     0,     0,     0,
       0,     0,     0,   542,   489,   490,   492,   539,   543,   551,
       0,   436,     0,  1023,  1158,     0,     0,     0,   115,   115,
       0,     0,     0,     0,     0,    92,    41,    85,     0,     0,
       0,     0,   180,   193,     0,     0,     0,     0,     0,   190,
       0,     0,   173,    43,   167,   169,     0,   115,     0,    39,
       0,     0,     0,    45,     0,     0,     0,     0,   814,   919,
     475,   917,   992,     0,   968,     0,  1025,  1552,  1553,  1554,
    1555,  1556,  1557,  1558,  1559,  1560,  1561,  1562,  1563,  1564,
    1565,  1566,  1567,  1568,  1569,  1570,  1571,  1572,  1573,  1574,
    1575,  1576,  1577,  1578,  1579,  1580,  1581,  1582,  1583,  1584,
    1585,  1586,  1587,  1588,  1589,  1590,  1591,  1592,  1593,  1594,
    1595,  1596,  1597,  1598,  1599,  1600,  1601,  1602,  1603,  1604,
    1605,  1606,  1607,  1608,  1609,  1610,  1611,  1612,  1613,  1614,
    1615,  1616,  1617,  1618,  1619,  1620,  1621,  1622,  1623,  1624,
    1625,  1626,  1627,  1628,   965,   964,   991,  1026,  1027,  1028,
    1029,   971,     0,     0,   402,     0,     0,  1039,     0,  1285,
     161,  1285,   301,     0,   301,     0,     0,  1052,  1055,   361,
     357,   355,   354,   356,     0,   367,   368,     0,   338,     0,
    1019,     0,     0,   340,     0,     0,     0,     0,   128,     0,
     174,  1094,  1095,  1093,     0,     0,  1076,   177,   194,  1088,
    1097,  1087,  1096,  1075,  1070,     0,  1067,   393,  1112,  1111,
    1120,   156,     0,  1015,   645,   674,   652,   674,   674,   641,
     641,   654,   642,   643,   679,     0,   674,   641,   646,   615,
       0,   644,   616,   682,   682,   669,     0,   922,   626,   627,
     628,   629,   655,   656,   630,   661,   662,   631,   714,     0,
     641,  1016,   128,  1155,  1164,     0,   807,   673,   660,   960,
       0,     0,   668,   667,     0,     0,     0,     0,     0,   650,
     649,   648,   813,   925,     0,   647,     0,     0,   674,   674,
     672,   738,     0,   651,     0,     0,   940,     0,   946,     0,
       0,     0,   678,     0,   676,     0,     0,   739,   719,   720,
     811,   915,     0,   806,   812,  1001,     0,     0,   714,   714,
     981,   901,     0,   898,   899,   900,     0,     0,     0,   975,
       0,   909,   911,     0,     0,   754,   907,     0,   757,     0,
       0,     0,     0,   895,   896,   897,   889,   890,   891,   892,
     893,   894,   905,   888,   735,     0,     0,   856,     0,     0,
     734,     0,     0,     0,   558,     0,   999,   963,   558,  1114,
    1118,  1119,  1117,     0,  1113,  1105,  1104,  1109,  1107,  1110,
    1108,     0,  1127,     0,  1124,   555,     0,   452,     0,     0,
    1147,     0,   122,     0,  1142,     0,   447,   446,   476,   477,
     483,   445,   528,   529,     0,     0,     0,     0,   548,   546,
     519,   493,   518,     0,     0,   497,     0,   520,   715,   541,
     434,   487,   488,   491,   433,     0,   544,     0,   554,   542,
     492,     0,  1149,  1159,     0,     0,     0,     0,     0,  1285,
       0,     0,    76,    57,   253,     0,   114,     0,     0,     0,
       0,     0,     0,     0,    84,    81,    82,    83,     0,     0,
       0,     0,   178,   179,   192,     0,   183,   184,   181,   185,
     186,     0,     0,   171,   172,     0,     0,     0,     0,   170,
       0,     0,     0,     0,     0,     0,     0,     0,   475,   475,
     475,   820,     0,     0,   474,     0,     0,   966,   969,   392,
     309,     0,   299,     0,     0,     0,     0,     0,   334,  1045,
    1043,  1041,  1044,  1046,     0,     0,   158,   160,     0,   298,
     272,     0,  1057,   376,     0,     0,  1285,  1054,   289,     0,
     369,   366,  1020,     0,   369,   989,     0,   369,   165,  1285,
     301,     0,  1072,  1090,   175,   195,   176,   196,   425,     0,
     399,   407,   412,   390,     0,   390,     0,   409,   413,   390,
     408,   390,   403,     0,   157,     0,   626,     0,   621,   617,
     687,   688,   689,   690,   697,   698,   695,   696,   691,   692,
     685,   686,   693,   694,   683,   684,     0,   699,   700,   701,
     702,   703,   704,   705,   706,   632,  1033,     0,   638,   641,
    1032,     0,   973,     0,     0,   959,   955,     0,     0,     0,
       0,     0,     0,   926,   927,   928,   929,   930,   931,   932,
     933,   934,     0,     0,   935,     0,     0,     0,   671,   670,
       0,   887,   898,   899,   900,   895,   896,   897,   889,   890,
     891,   892,   893,   894,   913,     0,     0,     0,     0,     0,
       0,     0,     0,   781,     0,     0,   804,   881,     0,   915,
     945,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   915,   951,     0,   972,     0,     0,     0,  1003,  1004,
     716,   730,   731,   732,   736,  1031,  1030,   980,     0,   974,
       0,     0,   717,   740,   745,     0,   952,   776,     0,   764,
       0,   753,     0,   762,   766,   741,   756,     0,   737,     0,
     975,   910,   912,     0,   908,     0,   727,   728,   729,   721,
     722,   723,   724,   725,   726,   733,   886,   884,   885,     0,
       0,     0,   864,   759,     0,     0,   761,   760,  1277,  1312,
       0,   466,   466,   466,   454,   464,   979,     0,   607,   475,
     607,     0,   714,   596,  1023,  1137,  1125,  1126,   916,  1022,
     128,     0,  1145,     0,     0,     0,   134,   117,     0,  1143,
       0,   150,   558,     0,   972,     0,   481,   482,     0,   486,
    1506,  1400,     0,     0,     0,     0,   521,   549,     0,   540,
       0,   995,   522,   994,   523,   526,   527,   498,   550,   984,
     552,     0,   545,   438,   437,   556,     0,    42,     0,  1285,
      59,     0,     0,     0,     0,     0,     0,   208,   244,   208,
      96,  1285,   369,  1285,   369,  1184,  1252,  1416,     0,    55,
      88,     0,   277,   108,     0,   262,   306,    78,    93,   101,
       0,     0,    44,   168,   182,   187,   104,   191,   188,  1062,
     189,   115,     0,    40,     0,   102,     0,  1060,     0,     0,
      46,   106,  1064,     0,     0,     0,     0,   918,   815,   920,
     921,   968,     0,   391,     0,   300,     0,   401,   381,   382,
     392,     0,   301,  1042,     0,     0,     0,     0,     0,   292,
     290,   320,     0,   297,   291,   299,     0,     0,   248,     0,
    1178,     0,     0,   377,   373,     0,     0,   337,  1021,   339,
       0,   341,     0,     0,   394,     0,   397,     0,   396,   400,
     395,   389,     0,   420,     0,     0,     0,     0,     0,     0,
    1121,   622,   618,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   923,   639,   471,     0,     0,     0,   956,     0,
       0,   852,     0,   828,   830,   640,   842,     0,   653,   832,
     834,     0,   902,     0,     0,     0,   843,   783,   784,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   799,   798,   844,   880,
       0,     0,   943,   944,   845,   681,   680,   682,   682,     0,
       0,   950,     0,     0,     0,   850,   808,   916,   665,   714,
       0,     0,     0,     0,     0,     0,     0,   765,   755,     0,
     763,   767,     0,     0,     0,   749,     0,     0,   747,   777,
     743,     0,     0,   778,     0,     0,     0,   821,   466,   466,
     466,   466,   463,   465,     0,     0,     0,     0,  1400,     0,
     579,   557,   559,   566,   579,   584,   823,   605,   824,   986,
       0,   531,     0,   531,     0,  1115,  1128,     0,  1146,     0,
     139,   121,   141,   140,     0,   148,     0,   972,     0,   139,
     123,     0,   142,     0,  1145,     0,   154,   478,     0,   903,
     486,     0,   480,   525,   524,     0,   496,   547,   494,     0,
     553,     0,     0,     0,   252,     0,     0,     0,   208,     0,
       0,   316,     0,   303,    77,     0,     0,     0,    51,     0,
      69,    61,    47,    75,     0,     0,    80,     0,    73,    90,
      91,    89,    94,     0,   236,   218,   249,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     818,   819,   816,   475,   967,   423,   424,   173,   422,   310,
       0,     0,  1057,  1040,     0,     0,   161,   301,     0,   276,
     272,     0,   270,   269,   271,     0,  1179,   166,     0,  1174,
    1056,     0,     0,  1051,   369,     0,   426,     0,   385,   421,
     410,   415,     0,   419,   417,   416,   411,   414,     0,   623,
       0,   613,     0,   624,     0,   633,   707,   708,   709,   710,
     711,   712,   713,   659,     0,   958,   954,     0,   825,   924,
       0,   914,   938,   937,   782,   794,   795,   796,   939,     0,
       0,     0,   791,   792,   793,   785,   786,   787,   788,   789,
     790,   797,   948,   947,   941,   942,   677,   675,     0,   847,
     848,   849,   949,   883,  1002,   718,     0,     0,   746,   953,
     768,     0,     0,     0,   742,   902,     0,     0,     0,     0,
       0,   751,     0,     0,     0,   867,   862,   863,     0,     0,
       0,     0,   457,   456,   462,   579,   584,     0,   440,     0,
     566,     0,   578,   515,   577,     0,     0,   590,   588,     0,
     590,     0,   590,     0,   515,     0,   580,   515,   577,     0,
     597,   987,   606,     0,   538,   815,   538,     0,   453,  1144,
       0,  1140,     0,     0,     0,   129,   126,   116,     0,     0,
     151,   139,   130,     0,   479,   484,   485,   495,   985,   109,
     208,     0,     0,    58,     0,   318,   264,   296,   279,     0,
       0,     0,   209,     0,   284,     0,    50,    70,     0,    66,
       0,    95,     0,     0,     0,     0,     0,    53,    65,     0,
      48,     0,   369,   369,    56,   263,   215,  1348,     0,   889,
     890,   213,   305,   210,   311,   212,   214,   641,   211,   308,
     105,  1063,     0,   103,     0,  1061,   112,   110,   107,  1065,
       0,   404,   384,     0,     0,  1285,     0,  1057,   159,   298,
       0,   326,   248,   321,     0,  1178,  1176,     0,  1173,     0,
       0,     0,   342,     0,   398,     0,   418,     0,     0,   619,
     625,   957,   841,   851,   936,     0,     0,     0,     0,   846,
     774,   772,   769,     0,   770,   750,     0,     0,   748,   744,
       0,   779,   853,     0,   869,   866,   461,   460,   459,   458,
     565,   563,     0,   568,  1014,  1013,   575,   508,   514,   564,
       0,   560,     0,   589,   585,     0,   586,     0,     0,   587,
       0,   561,     0,  1013,   562,     0,   604,     0,     0,   858,
    1000,   858,  1116,   138,   118,     0,   119,   149,     0,     0,
       0,     0,   143,   378,     0,   314,    60,     0,   296,     0,
     208,   281,   280,   283,   278,   282,   285,     0,     0,     0,
       0,     0,   265,     0,     0,     0,   229,     0,     0,   296,
     302,   225,   226,   335,     0,     0,     0,    62,    52,    49,
      54,    63,     0,     0,    64,    67,   612,    79,    72,   641,
     641,     0,     0,     0,   817,   380,   387,   173,     0,     0,
       0,     0,   298,     0,     0,     0,  1178,     0,     0,   206,
       0,   245,     0,   163,  1177,     0,  1166,     0,  1049,  1050,
       0,     0,   386,   620,   614,   800,     0,     0,     0,   771,
     775,   773,   752,   855,     0,   475,   600,     0,   603,   567,
       0,     0,   503,   510,     0,   513,   507,     0,   569,     0,
       0,   571,   573,     0,     0,     0,   608,     0,     0,     0,
     990,     0,   530,   532,   535,   534,   537,     0,   506,   506,
       0,     0,     0,   152,     0,   145,   145,     0,   131,   904,
       0,   208,     0,   295,   315,   243,     0,     0,   227,     0,
     233,     0,   267,   268,   266,   228,   296,   301,   230,   336,
       0,    71,     0,    87,   641,     0,   307,   113,   111,   404,
       0,  1057,  1173,     0,     0,   272,   166,  1175,   261,   254,
     255,   256,   257,   258,   259,   260,   275,   274,   246,   247,
       0,     0,     0,  1051,     0,   801,     0,   802,     0,   872,
     605,     0,     0,   599,     0,   501,   499,   502,   504,   500,
       0,     0,   576,   592,     0,   572,   570,   581,     0,   612,
       0,   583,   536,     0,   857,   859,     0,     0,   442,   441,
       0,   125,     0,   607,     0,     0,   147,   147,   133,     0,
     301,   317,     0,   287,   294,   286,     0,     0,   224,     0,
     231,   325,   217,   611,     0,    74,     0,   312,   379,   383,
       0,  1167,     0,  1173,   248,  1178,     0,  1170,     0,     0,
    1057,   803,   868,     0,     0,     0,   598,   601,     0,   574,
       0,     0,     0,   609,   610,   582,   533,     0,     0,   508,
     120,   145,   124,   153,   144,   483,   146,   483,     0,   325,
     273,     0,     0,   251,   217,     0,   242,     0,    68,    86,
     313,     0,   298,  1168,   207,   164,  1171,  1172,     0,   607,
    1479,  1228,  1450,     0,   870,   873,   871,   865,     0,   511,
       0,   517,   591,   860,   861,   505,   147,   486,   486,   607,
     242,   288,   293,     0,   232,   234,   322,   323,   324,     0,
     238,   235,   239,     0,  1173,     0,  1047,     0,   877,   876,
     875,   879,   878,   602,     0,     0,   509,   483,   136,   135,
     132,   208,   250,     0,     0,     0,   240,     0,   241,   216,
    1169,  1057,     0,   512,     0,   486,   319,   221,     0,   220,
       0,   304,   237,   607,   874,     0,   137,   219,   223,   222,
    1048,   516
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    34,    35,    36,    37,  1910,  1911,  1912,  1618,   825,
    2545,  1619,   826,   827,  1914,    38,    39,  1238,   520,  1556,
    1181,  2290,    41,  1865,  1561,  1869,  2423,  2111,  1864,  1871,
    2526,  2585,  1866,  1562,  2424,  1563,    42,    43,  1306,    44,
     644,    45,  1307,  1265,  1008,   845,  1255,   997,    46,    81,
      47,  1901,  2172,  2598,  1924,  2681,  2320,  2321,  1620,  2640,
    2641,  1903,  1966,  1247,  2634,  1679,  2476,  1624,  1607,  2322,
    1688,  2433,  2201,  1621,  2142,  1680,  2307,  2532,  1317,  1681,
    2533,  2300,  1682,  1290,  1310,  2144,  2642,  1625,  1291,  2173,
    1234,  1683,  2596,  1684,   482,  2325,    48,   512,   513,   635,
     978,   514,    49,   483,   966,   521,    51,  1670,  2347,  1977,
    2348,  1712,  1664,  1006,  1709,  1338,  1294,  1007,   471,  1352,
    1978,  1947,  1339,   522,   729,    54,    55,    56,   569,   563,
     564,  1154,  1534,  1834,   795,   544,   545,   579,  1284,  1188,
    1189,  1569,  1882,  1213,  1214,   804,   805,  2393,  2518,  2394,
    2395,  2258,  2259,  2656,  1201,  1205,  1206,  1582,  1575,  1194,
    2104,  2412,  2413,  2414,  2279,  1209,  1210,   807,   808,   809,
    1218,  1592,    58,  1538,  1841,  1842,  1843,  2082,  2083,  2097,
    2093,  2264,  2401,  1844,  1845,  2386,  2387,  2493,  2100,  1851,
    2405,  2406,  2453,  1723,  1036,  1037,  1359,  1038,   730,  1039,
    1388,   731,  1075,  1041,   732,   733,   734,  1044,   735,   736,
     737,   738,  1058,   739,   740,  1092,  1377,  1378,  1379,  1380,
    1381,  1382,  1383,  1384,  1385,   780,  1442,   742,   743,   744,
    1847,   745,  1147,  1522,  2418,  2514,  2515,  1827,  2066,  2244,
    2385,  2565,  2614,  2615,   746,   747,  1519,  1142,  1143,   748,
    2175,  1145,  1435,  1462,   860,   861,  1049,  1412,  1413,  1438,
    1755,  1445,  1451,  1782,  1783,  1463,  1487,   749,  1395,  1396,
    1739,  1060,   750,   605,   865,   606,  1056,  1481,   758,   751,
     752,  1588,   556,  2397,   640,   945,   753,   754,   755,   756,
     757,  2256,   464,  2586,   980,   785,   863,  1622,  1477,    59,
     662,   610,    60,   957,  1301,    61,  2369,  2211,   968,  1319,
    1692,   484,    62,    63,    64,    65,    66,   586,  1000,   523,
    1001,  1002,   649,    67,  1009,   651,   652,    68,   550,   551,
    1010,  1165,  1011,    69,   531,    70,   776,   560,   777,   779,
     525,   792,  1860,  1552,    72,    73,   538,   539,    74,    75,
     552,    76,    77,  2366,   526,  1969,   963,   490,   466,   467,
     950
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -2342
static const int yypact[] =
{
    4364,  -127,   502, -2342, -2342,  -127, 30282, -2342,  -127,    43,
    2097, 32607, -2342, 26714,  -127, 36792,   385,   174,   200,   375,
   36792, 36792, 33072,  -127,   233, 37257, -2342,  -127, 33537,   -24,
     -60, 37722, 36792,  1462,   499,    20, -2342, -2342, -2342, -2342,
   -2342,    31, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342, -2342,    71, -2342,    56,    95,   768,   176, -2342,
   -2342, -2342, -2342, -2342, -2342, -2342, -2342,   240, -2342, -2342,
   -2342, -2342, -2342, -2342, -2342, 19172, -2342, -2342, -2342, -2342,
   -2342, -2342, 38187, 36792, 38652, 34002, 39117, -2342,    76, -2342,
   -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342,   284,  -191, -2342,   100, -2342, -2342, -2342, -2342,
    1462, 36792, -2342,   393,   420, -2342,   252, 39582, -2342, -2342,
   -2342, -2342,   987, 36792,   578, -2342, -2342, 34467, -2342, -2342,
   -2342,   537, -2342, -2342,   396, -2342,    55, -2342, -2342, -2342,
     408, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,   506,
   -2342, -2342, 40047, 40512, 40977, -2342,   392,   526,   450, 18706,
   -2342, -2342, -2342, -2342,   240, -2342, -2342,   375,   375, -2342,
   -2342, -2342,   293,   403, -2342,   431,   688, -2342, -2342, -2342,
     432, -2342, -2342,   630,  7657,  7657, 41442,   375, 41442,   470,
   -2342, -2342,   -19, -2342, 20570, -2342,   473,  -191, -2342,    84,
     797, 10579, 36792,   486, -2342,   516,   486,   495,   519,   768,
   -2342,  4364,   856,   819, 33537,   261,   261,   984,   261,   652,
     825, -2342,   625, -2342,   569, -2342, 36792, -2342,   590,   828,
     -60, -2342,   432,   884,   397,   771,   914,  5260,   973,   399,
    1015,   876,  5709, 10579, 24035, -2342,  -191, -2342, -2342, -2342,
     665, -2342,   684, -2342, -2342, -2342, -2342,   526,   910, -2342,
     751, 41907, 42372, 36792,   718,  1113, -2342, -2342, -2342, -2342,
     760, -2342, -2342,   112,  1073,    27,   747, -2342,  1091,    30,
   -2342,  1097,   991, 10579, -2342,   881, -2342, -2342, -2342,   216,
   -2342, -2342, 25895, -2342, -2342, -2342,   450,   769, -2342, 25895,
   10579, 46092,  1245, -2342,  1061, 36792,   807, -2342, -2342, -2342,
   -2342, -2342, -2342,  1290,    70,  1298, 10579,   882,    70,    70,
     890,  1150, -2342, -2342, -2342,   115,   913,   947, -2342,   120,
     120, -2342,  1013,   957,   961, -2342,   127,  1322,  1367,    93,
     963,   972,   801,    70, 10579, -2342,   974,   120,   982,   986,
     988,  1463,   994, -2342,  1487,  1011,   117,   137,  1017,  1018,
   -2342, -2342,   133, 10579, 10579, 10579, -2342,  6683, -2342,  -191,
     375, -2342, -2342, -2342, -2342, -2342, -2342, -2342,  1020, -2342,
     118,  5186, -2342,  1050, -2342, -2342, -2342,   177, 10579, -2342,
    1484,   -43, -2342,   134, -2342, -2342, -2342,  -191,  1296,  1021,
   -2342, -2342, -2342,   149,  1414, 24965, 25430, 36792, -2342, -2342,
    -191, -2342, -2342, -2342, -2342, -2342, -2342,   406, -2342,   240,
   26952,   479,   486, 36792, 36792,  1475, -2342, -2342, -2342, 33537,
   36792, 42837,  1152, -2342, -2342,   768,   768, 10579,   768,    63,
    1057,  8144, 11066,  1358,  1246,   422,   598,  1365, -2342,  1255,
     652,   825, 10579,   516, -2342,  1305, 36792, 30747,   701,   766,
    1056,  1137,  1060,   -51,  1464, -2342,  1062, -2342,  1144, 36792,
   47007,   151, -2342,  1499,   151,   151,   150,  1502,  1154,   192,
    1307,   -54,  -159,  1062,  1615, -2342, 33537,    58,   -52,  1062,
   36792,  1160,    -4,  1062, 10579, 10579, 10579,  1086, -2342, 26952,
     -48, -2342,   867,   908, 23569,  1082, -2342, -2342, -2342, -2342,
   -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342,  1169, 36792,  1130,   -96,  1429,  1491, 36792,  1323,
    1615,  1324,  1104,  1554,   684,  8631,  1555, -2342, 43302, -2342,
   -2342, -2342, -2342, -2342, 36792, -2342, -2342, 36792, -2342, 27957,
    1107, 36792, 36792, -2342, 36792, 36792,   490, 43767,   450, 29817,
   -2342, -2342, -2342, -2342,   285,   584, -2342, -2342, -2342, -2342,
   -2342, -2342, -2342, -2342, -2342, 27957, -2342,  2654, -2342, -2342,
   -2342,  1109,   496, -2342, -2342,  1164, -2342,  1164,  1164,  1118,
    1118,  1120, -2342, -2342, -2342,   801,  1164,  1118, -2342, -2342,
   47007, -2342, -2342,  -165,   463, -2342,  1122, -2342,  1572, -2342,
   -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,  2563,   508,
     591, -2342,  1462, -2342, -2342, 10579,  -191, -2342,  1124, 26952,
    1170, 10579, -2342, -2342, 10579,  1129,  1605,  1605, 10579, -2342,
   -2342, -2342, -2342,  1923,  1605, -2342,  1605,  1605,  1164,  1164,
   -2342,  2936, 10579, -2342, 22437, 10579, 13501,  9118, 10579,  1213,
    1214,  1605, -2342,  1605, -2342, 10579,  7170,  2936,  1608,  1608,
    1143, 22910,  1133,  -191,  -191, -2342,  1605, 10579,  2417,  2417,
   -2342,   122, 46092, 10579, 10579, 10579, 10579, 27492,  1220,    91,
   36792, 10579, 10579,  1139,   810, -2342, 10579,  1356, -2342,  1147,
   10579,  1223,    89, 10579, 10579, 10579, 10579, 10579, 10579, 10579,
   10579, 10579, -2342, -2342, 15438,   147,  1456,  1486, 10579,  -140,
     164, 10579, 34932,  7657,  1466,  5709, -2342,   130,  1466, -2342,
   -2342, -2342, -2342,   135, -2342, -2342, -2342, -2342,  1109, -2342,
    1109,  1161, 36792,    84, 31677, -2342, 10579, -2342,   542,  1171,
    1218,  1421,  1617, 36792, -2342, 21036,  1448, -2342,  1173, -2342,
   26356,  1448, -2342, -2342, 13977,  1289,  1443,  1383, -2342, -2342,
   -2342,  1176, 26952, 11553, 11553, -2342,   585, 26952,   622, -2342,
   -2342, -2342, -2342, -2342, -2342,   491, -2342, 36792,    -8,  1358,
     598,   558, -2342, -2342,   907,  1181, 44232, 36792,  1451,  1406,
    1455,  -156, -2342, -2342, -2342, 46092, -2342, 36792, 36792, 44697,
   45162, 28422, 36792, 27957, -2342, -2342, -2342, -2342, 36792,  1096,
   36792, 27034, -2342, -2342, -2342,   151, -2342, -2342, -2342, -2342,
   -2342, 36792, 36792, -2342, -2342,   151, 36792, 36792,   151, -2342,
     965, 36792, 36792, 36792, 36792,  1233, 36792, 36792,   -35,   -35,
    1389, -2342,  9605,  1190, -2342, 10579, 10579, -2342, 10579,  1362,
   -2342,   562, -2342,  1404,    11,  1249, 36792, 36792,  1277, -2342,
   -2342, -2342, -2342, -2342,  1201,  1540, -2342,  1615,  1541, 31212,
     646,  1003,  1247, -2342,   566, 10579,  1428, -2342, -2342,  1416,
      27, -2342, -2342, 27957,    30, -2342,  1420,   119, -2342,  1439,
     684,  1667, -2342, -2342, -2342, -2342, -2342, -2342, -2342,   579,
   18240, -2342, -2342,  1669,   375,  1669,   143, -2342, -2342,  1669,
   -2342,  1669, -2342, 25895, -2342, 10579,  1671, 36792,  1227,  1229,
   -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342, -2342, -2342, -2342, -2342,  1605,  1311, -2342,  1313,
    1315,  1319, -2342, -2342, -2342, -2342, -2342, 46092, -2342,   637,
   -2342,   655, -2342, 10579, 10579,    10, -2342, 26420,   656, 10579,
    1240,  1242,   675, -2342, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342,  1243,  1557, -2342,  1244,  1248,  1250, -2342, -2342,
    4908, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342, -2342, -2342, -2342,  1251,  1252, 26456,  1257, 13501,
   13501,  6683,   927, -2342, 13501,  1258, -2342, -2342,   677, 26374,
    1256,  1261,  1263,  1270,  1265,  1274, 26504, 10092, 10579, 10092,
   10092, 26868,  1256,  1275, -2342, 10579,  1287, 22928, -2342, -2342,
   -2342,  4417,  4417,  4417,  2936, -2342, -2342, -2342,  1273, -2342,
   13501, 13501, -2342, 23329,  3245,  6683, -2342, -2342,  1606, -2342,
    1328, -2342,  1294, -2342, -2342,  4336, -2342, 22437, 27010, 10579,
     101, -2342, 10579,  1139, 10579,  1378,  4417,  4417,  4417,   180,
     180,   110,   110,   110,   833,   164, -2342, -2342, -2342,  1300,
    1312,  1314,  1501, 26952,   994, 10579, -2342, 26952,   835,   866,
   36792,  3846,  4379,  4683, -2342, -2342, -2342, 16842,  1348,   -48,
    1348,  1605,  2417, -2342,   516, -2342, -2342, -2342, 26952, -2342,
    1462, 16842,  1357,  1369,   -91, 19638,  1525, -2342, 36792, -2342,
   36792, -2342,   -33,  1332, -2342, 10579, -2342, -2342,  1506,  1343,
    1542,  1543,   754,   754,   585,  1544, -2342, -2342,  1394, -2342,
   10579,   836, -2342,   911, -2342, -2342, -2342, -2342,  1336, -2342,
   -2342,  1591, -2342, -2342, -2342, -2342,  1423,  1062, 10579,  1565,
   -2342,    45,  1345,  1681,   124,  1641, 36792, -2342,  1558, -2342,
     703,  1688,   119,  1690,   119, 27957, 27957, 27957,   681, -2342,
   -2342,   375, -2342, -2342,   687, -2342,  -188, -2342, -2342, -2342,
    1438,   433,  1062,  1615, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342,   155,   553,  1062,  1444, -2342,  1445, -2342,  1446,   575,
    1062, -2342, -2342,  1366,  1372,  1373, 10579, -2342, -2342, 26952,
   26952, 26952,  1376, -2342,    81, -2342, 36792, -2342, -2342, -2342,
    1362, 36792,   684, -2342,  1055, 36792, 36792, 36792, 36792, -2342,
   -2342, -2342,  1380,  1364, -2342, 46092,   -81,  1587,  1590, 36792,
    1424,  1060,  1835, -2342, 26952,  1724, 36792, -2342, -2342, -2342,
   36792, -2342,  1725,  1462, -2342, 27957, -2342, 29352, -2342, -2342,
   -2342, -2342,   375, -2342,   375,  1607, 36792, 24500,   375,   375,
   -2342,  1396,  1229,   699, 46092,  1605,    64,  1395,  1132,   710,
     438,  1035, -2342, -2342, -2342,   707, 26732, 10579, -2342,  1739,
   46092, -2342, 22946, -2342, -2342, -2342, -2342, 10579, -2342, -2342,
   -2342, 10579, -2342, 22437, 10579,  1717, -2342,  1874,  1874, 22910,
   46092, 13501, 13501, 13501, 13501,   609,   982, 13501, 13501, 13501,
   13501, 13501, 13501, 13501, 13501, 13501, 14464,   271, -2342, -2342,
   10579, 10579,  1726,  1717, -2342, -2342, -2342,  -164,  -164, 46092,
    1401,  1256,  1402,  1407, 10579, -2342,  -191, 22974, -2342,  2417,
   10579,   944,  2103, 10579,   711, 10579,  1722, -2342, -2342,  1409,
   -2342, -2342, 46092, 10579,  1411,  4760, 13501, 13501,  5020, -2342,
    5206, 10579,  6683, -2342,  1389,  1454, 21502, -2342,  1505,  1505,
    1505,  1505, -2342, -2342, 36792, 36792, 36792, 17308,  1732, 16376,
   35397,  1413,  1276, -2342, 35397, 35862, -2342,  1432, -2342,  -191,
   10579,  1727,  1425,  1727,  1426, -2342, -2342,  1430,  1413, 10579,
    1570, -2342, -2342, -2342,  1482, -2342,   715, -2342,  1833,  1570,
   -2342,   726, -2342, 21036,  1357, 10579,  -191, -2342,  1435, -2342,
    1343,   173, -2342, -2342, -2342,  1646, -2342, -2342, -2342, 36792,
   -2342, 36792, 22992,  1771, -2342, 36792, 36792, 36792, -2342, 36792,
     730,   141,  1447, -2342,   141,  1756,   518,  1060,   192,  1937,
     -63, -2342, -2342, -2342,  1520, 36792, -2342, 36792, -2342, -2342,
   -2342, -2342, -2342, 28422, -2342, -2342, -2342, 27957, 21971, 27957,
   36792, 36792, 36792, 36792, 36792, 36792, 36792, 36792, 36792, 36792,
   -2342, -2342, -2342,  1389, -2342, -2342, -2342,  -159, -2342, -2342,
      81,  1452,  1247,  1491, 45627,   731,  1615,  1453,  1899, -2342,
     646, 31212, -2342, -2342, -2342,  1860, -2342,   392,   128, -2342,
   -2342,  1462, 36792,  1514,   119, 36792, -2342,   732, -2342, -2342,
   -2342, -2342, 36792,  1460, -2342,  1460, -2342, -2342,  1605, -2342,
   36792, -2342,  1459, -2342,  1467, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342, -2342, -2342, 10579, 26952, -2342,  1458, -2342, 26952,
   23010, -2342, 26952,  1726, -2342,  1163,  1163,  1163,  3232,  1784,
     228,  1470,  1163,  1163,  1163,   196,   196,    73,    73,    73,
    1874,   271, 26952, 26952, -2342, -2342, -2342, -2342,  1471, -2342,
   -2342, -2342,  1256, -2342, -2342,   245, 10579, 10579, 23329, -2342,
   27030, 10579, 46092,   738, 23329,   170, 10579,  2234,  3093, 10579,
   10579, 23506, 23058,  1472, 10579, 46542, -2342, -2342, 36792, 36792,
   36792, 36792, -2342, -2342, -2342, 35397, 35862,  1474, 15909,  1276,
    1477, 36327, -2342,  1564,  1480, 16842,  1751,  1680, -2342, 16842,
    1680,   136,  1680,  1753,  1564, 20104, -2342,  1564,  1488,  1685,
   -2342,   673, 26952,  1917,  1797,   375,  1797,   375, -2342, 26952,
    7657, -2342,  1462,   -72, 36792,  -191,   -75, -2342,  1507, 36792,
   -2342,  1570, 26952, 22437, -2342, -2342, -2342, -2342, -2342, -2342,
   -2342, 36792,   763, -2342,   790,   141, -2342,  1545, -2342,   464,
    1791,    29, -2342, 27957,  1839,   617, -2342,  1803,  1721, -2342,
     151, -2342, 10579,   617,  1731,   160, 36792, -2342, -2342,  2378,
   -2342, 46092,   119,   119, -2342, -2342, -2342,  1435, 47007,   285,
     584, -2342, -2342, -2342, -2342, -2342, -2342,   591, -2342,  1517,
   -2342, -2342,  1597, -2342,  1599, -2342, -2342, -2342, -2342, -2342,
    1510,   769,    41, 36792,  1968,  1742,  1523,  1247, -2342, 31212,
    1184,   621,  1590, -2342,   159,  1424, -2342,  1902,  1563,  1733,
   36792,  1528, -2342,  1977, -2342, 29352,  1460,  1531, 46092, -2342,
   -2342, 26952, -2342, -2342, -2342, 13501,  1849,  1533, 46092, -2342,
   23329, 23329, 27030,   841, -2342, 23329, 10579, 10579, 23329, 23329,
   10579, -2342, -2342, 23491,  1723, -2342, -2342, -2342, -2342, -2342,
   -2342, -2342, 28887, 35397, -2342,  1534, -2342, 32142, -2342, -2342,
   36792,  1276, 16842, -2342, -2342,   109, -2342, 16842,  1804, -2342,
   16842, -2342, 36792,  1549, -2342, 36792, -2342, 12040, 10579,  1579,
   -2342,  1579, -2342,  1021, -2342,   -91, -2342, -2342,  1941, 17774,
    1897, 10579, -2342, -2342,  1550,   141, -2342,  1710,  1545,  1560,
   -2342, -2342, -2342, -2342, -2342, -2342, -2342,   843,  1568, 36792,
   36792, 13501, -2342,   617,   549,   102, -2342,  1823, 36792,  1545,
   -2342, -2342, -2342, -2342,  1933,  2012,  1900, -2342, -2342, 26952,
   -2342, -2342,  1605,  1605, -2342, -2342,  1984, -2342, -2342,   591,
     337, 21971, 36792, 36792, -2342, -2342, -2342,  -159,  1938,   860,
    1462,  1911, 31212,  2025,  1577, 36792,  1424,   153,   153, -2342,
    1716, -2342,  1719, -2342, -2342,   698, -2342, 36792, -2342, -2342,
   17774,  1462, -2342, -2342, -2342,  3837, 13501, 46092,   865, -2342,
   23329, 23329, 23329, -2342,  2010,  1389, -2342,   869,  2031, -2342,
   36792,     3,   -85,  1588,  1592, -2342, -2342,   871, -2342, 10579,
    1593, -2342, -2342, 16842,   109,   883, -2342, 46092, 36792,   888,
   46092,  6196,  1586, -2342, -2342, 26952, 26952, 36792,  1648,  1648,
    1649, 36792, 10579, -2342,   897,  2005,    26,   -39, 26952, -2342,
   36792, -2342, 27957, -2342,   141, -2342, 27957, 10579, -2342,   981,
    3232,  2046, -2342, -2342, -2342, -2342,  1545,   684, -2342, -2342,
    1903, -2342, 36792,  1659,   511,  1674, -2342, -2342, -2342,   769,
     375,  1247,  1563, 36792,  1462,   646,   392, -2342, -2342, -2342,
   -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342, -2342,
    2023,  1811,  2026,  1514,   924,  3837,   925, -2342, 10579,   342,
    1432, 28887,  1610, -2342,   952, -2342, -2342, -2342, -2342, -2342,
   36792,   853, -2342, 26952, 36792, -2342, -2342, -2342, 36792,  1984,
     954, -2342, -2342, 12040,  1609, -2342,  2060,  1749, -2342, -2342,
    1462, -2342, 23533,  1348, 17774, 36792, 36792, 36792, -2342,  1735,
     684,   141,   975, -2342,  1628, -2342, 23551,  1841, -2342,  1919,
   -2342,  1871,  1629, -2342, 10579, -2342,  1698, -2342, -2342, -2342,
    2079, -2342,  1634,  1563,  1590,  1424,  1842, -2342,  1843,  1638,
    1247, -2342,  1256, 12527, 12527,  1640, -2342, -2342, 36792, -2342,
     977,  1642,   979, -2342, -2342, -2342, -2342, 36792,  1644, 32142,
   -2342,  2005, -2342, -2342, -2342,   206, -2342,   206, 21036,  1871,
   -2342, 27957, 21971,  1865,  1629,    42,  1853,  1615, -2342, 26952,
   -2342,  1462, 31212, -2342, -2342, -2342, -2342, -2342, 17774,  1348,
   14951,  1786,    72, 26392, -2342, -2342, -2342, -2342,   992, -2342,
    2125,  1802, -2342, -2342, -2342, -2342, 36792,  1343,  1343,  -192,
    1853, -2342, -2342,  1943, -2342, -2342, -2342, -2342, -2342,    98,
    1862, -2342,  1863,  1049,  1563,  1001, -2342,  2109, -2342, -2342,
   -2342, -2342, -2342, -2342,  1658,  1660, -2342,   206, -2342, -2342,
   -2342, -2342, -2342,   106,   106,  2028, -2342,  1728, -2342, -2342,
   -2342,  1247, 13014, -2342,  2139,  1343,   141, -2342,  2127, -2342,
     132, -2342, -2342,  1348, -2342,  1666, -2342, -2342, -2342, -2342,
   -2342, -2342
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -2342, -2342, -2342,  1589, -2342, -2342, -2342,   248, -2342,   912,
   -2342,   236,  -490,   554, -2342, -2342, -2342,  -778,    18, -2342,
   -2342, -2342, -2342,    49,   299, -2342,  -351, -1703,  -108, -2342,
   -2200, -2285, -2342,  -407, -2159, -1497, -2342,  -932,   223, -2342,
   -1893, -2342,  -595,  -811,  -645,  -807, -2342,    28, -2342,   863,
    -927, -1573, -2165,  -412, -2342,  -480, -2342,  -254, -1572,  -455,
    -442, -2342, -2078,  -816, -2342,  1374,  -169, -2342,   586, -2342,
   -1896, -2342, -2342,   577, -2342,  -791, -2342, -2342, -1652,   234,
    -397, -2054, -2099,   530,  -601, -2342,  -441,   274, -1545, -2342,
     601, -2342,  -386, -2342,  -470, -1937, -2342, -2342, -2342,  1231,
    -611, -2342, -2342, -2342, -2342,    32, -2342, -2342, -2342, -2342,
   -2342,  -821,   536, -2012, -2342,   503, -2342, -2342, -2342, -2342,
      -1,   260, -2342,     4,    44,   -30,     5,    40,    34,    38,
    1434,  1457, -2342, -1137,   757, -2342, -2342,  -568,   -47, -2342,
     653, -2315, -1829,  -409,  1005,  1422,  1431,  -290,  -187, -2342,
    -346, -2342, -1187, -2342, -2342,   648,  1042, -1094, -1089, -2342,
     384, -2342,  -275, -2342,   142,  -381,  1022, -2342,  1433, -2342,
   -2342, -2342, -2342, -1066,   692, -1772,   400, -1742, -1636,   178,
     158,  -788,  -151,    21,   418,  -231, -2342, -2342,  -227, -1492,
   -2118,  -239,  -234, -2342, -2342,  -715,   921,  -806, -2342, -2342,
    -674,   678, -2342, -2342, -2342,  1308,  1738, -2342, -2342,  1800,
    1868, -2342,   210,  1993,  -447,  -675,  1207, -1008,  1208, -1015,
   -1007,  -990,  1209,  1215, -1055,  2796,  2099,  -756,    -5, -2342,
   -2116, -1455, -2342, -2342,     8, -2342,  -291, -2342,  -288, -2342,
   -2342, -2342,  -277, -2341, -2342,  1145, -2342, -1025, -2342,  3240,
     724, -2342, -1441,  -539,  -588,  -836, -1744, -2342, -2342, -2342,
   -2342, -2342, -2342, -1075, -1570,  -506,   794, -2342, -2342,   898,
   -2342, -2342,  1925,  -512,  1010,  -530,  -719,   799, -2342,  -535,
    1149, -2342,  1987,  -508,   410,  -853,     6, -2342,  1892,   226,
    1239, -2342,   683,  -491, -1031,  -761, -2342,  -591, -2342, -2342,
   -2342,  -974, -2342,   627, -2342,  -919, -2342,  -180, -2342, -2342,
   -1897, -2342, -2342, -2342, -2342, -2342, -2342,  -356, -2342,  -427,
    -443, -2342, -2342,    13,  -635,  1318, -2342, -2342,   812, -2342,
     951, -2342,   664, -2342, -2342, -2342,  1135, -2342, -2342, -2342,
      35,  1521,   435, -2342,  1138, -2342, -2342, -2342, -2342, -2342,
     628, -2342,  -918, -2239,    57, -2046,  -947,    -6,  -439,  -411,
   -1905
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If zero, do what YYDEFACT says.
   If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -1534
static const yytype_int16 yytable[] =
{
     465,   461,   844,   568,    52,   639,  1244,   996,   580,  1103,
     759,   954,   462,   946,   810,  1069,  1070,  1003,    40,  1389,
    1280,   637,   781,  2178,  1252,  1299,  1233,   770,   983,   524,
    1300,  1268,    50,  1083,    57,    71,  1904,  1269,  1302,  1303,
    1331,  1240,  1094,  1919,    53,  1921,  1208,   645,  1853,   555,
      57,  2124,  1222,  1468,  1469,  2194,  1814,    78,  1407,  1434,
      53,  1900,   582,  1872,  2202,  1405,  1408,  2079,  2053,  1273,
     566,  -428,  1012,   671,  2205,  -674,   648,   567,  1390,   591,
     654, -1015,  1848,  1409,  1760,   975,   529,   771,   975, -1015,
   -1015,   646,  1540,   469,   951,  -431,  1848,   583,  -679,  2525,
    2354,   581,  -679,  2096,   986, -1016,   599,   843,   655,   849,
    1584,   853,  1225, -1016, -1016,     3,     4,  1587,  1162,    53,
   -1533,  1112,  -682,   529,  2359,  -641,  1322,   671, -1533, -1533,
    1955,  1479,  -654,  1236,  1537,  -993,  2388,  1500,  -669,   529,
     529,  1479,  -682,  1271,   558,  2304,  1737,   955,   764,  -887,
     572,  1118,  1159,   990,   529,   990,  -887,  2409,   671,  2363,
     671,   630,  -388,  -428,  2677,   948,  2117,  1152,   656,   671,
     803,  1983,  1985,  2425,  1516,  1112,  2456,   975,  1668,  2345,
    2468,  1517,  1245,  1120,  1245,  1245,  1253,  -431,  1102,  1256,
    1257,  1112,  1148,   949,   970,  1962,  -173,  -906,   806,  1104,
     575,  -173,  2086,  2288,  -906,  1118,  1524,  1760,  2094,  1228,
    2636,  2484,  2034,   654,  1048,  2497,  2330,  2663,  2444,  2285,
     654,  1118,  1192,  2551,  1356,  2528,  2527,  1157,  1295,  1004,
    1236,  2469,  1245,  2649,  2206,   573,   577,  1120,   971,  2470,
    1932,   655,  2587,  1566,  2431,   530,  2688,  2136,   655,   577,
     772,  1850,   773,  1120,  2425,  1258,  1112,  2138,   951,  1590,
     542,  1501,  2498,  1160,   576,  2448,  1278,  1279,  2471,  2647,
    2627,  1605,  2628,  1221,  1908,  1502,  1178,  2087,  2360,    79,
    1503,   527,  1760,  1089,  1089,  1928,    24,  1263,   793,  1334,
    2510,   603,  1283,  2361,   671,   604,  1873,  1267,  1929,  1274,
    2353,  1862,  2159,  2495,  2087,  1090,  1090,   528,  2233,  2088,
    2467,  1264,  2011,  2261,  2603,  1504,  1163,  2265,  1120,  1091,
    2209,    28,    80,  1193,  2089,  2135,   654,   654,  1606,  1567,
    1443,  2684,  2125,  2090,  2096,  1863,  2088,  2472,  2637,  2139,
     577,  2657,  2675,  1296,  1525,  1069,  1070,  1277,  2473,  -428,
    2132,  2267,  2134,  1083,   655,   655,  1230,  2226,  1024,  1094,
    2090,    30,   543,  1312,  1591,   976,  2091,  2678,   976,  1246,
    2445,  1246,  1246,  -431,    31,  2388,  2441,  1314,  2650,  1161,
     529,  2626,  1848,  1048,  1848,   765,  2529,  2399,   946,  2207,
     794,  1259,  2540,  2126,  2499,  1835,  1836,  1470,    32,  1260,
    2689,  1219,  2140,  1243,  2141,  2670,  1715,   972,  2425,  2289,
    -428,  1716,    33,  2638,  1340,  1669,     3,     4,  2293,  1246,
     817,   488,   817,  1174,   561,   516,   818,  2632,   818,  1220,
    1243,   533,  1243,  1243,  -431,  1600,  2178,  2216,  1576,  2250,
    1282,   565,   565,  2224,  2679,  1153,  1657,  2548,   631,  2645,
    2618,  2092,  1394,  1355,   766,  1873,   574,   976,  2305,  1505,
     559,  1717,  1272,  1945,  1946,  1231,  1149,   665,  2346,  2362,
    1698,  2680,  1434,  1324,   609,   578,  2604,   517,  2092,  1584,
    1243,  1480,  2496,   637,  2378,  1885,  1321,  1855,   607,   568,
    2398,  1816,  2425,   595,  1327,  2402,  1874,  -887,  2404,   570,
    1269,  2227,   608,  2354,    57,   611,  1057,   571,   603,  2605,
     973,  2389,   604,   653,    53,   977,  1391,  -428,   982,  1657,
    1608,   774,  1518,  2664,  1714,  1398,  1476,   470,  1718,  1402,
    1719,   819,   650,   819,  2474,   811,  2400,  2475,   465,   465,
     948,  -431,   517,  1879,  1392,  -906,   648,  1993,  1448,  1450,
     654,  1605,    57,  1775,  -674,   465,  -428,  2295,  -428,  1933,
   -1015,  1332,    53,   567,  2550,  1089,   948,  1539,   949,  2554,
    1104,  2306,   775,  2555,   582,    52,  1857,  -679,   655,   799,
    -431,  2301,  -431,  1048, -1016,  1089,   617,  1090,  1336,    40,
    1141,  1392,   951,   671,   949,   791,   465,   465,   947, -1533,
     782,  1091,  1107,    50,  1068,    57,    71,  1090,  1897,   583,
    1634,  1074,   603,   581,  -993,    53,   604,  -669,  1155,  1541,
    1637,  1093,  2292,  1640,   994,   995,   994,   995,    78,  1482,
    1848,  2505,  2146,  2486,  1848,  2332,  2333,   465,  1263,  1136,
    1137,  1138,  1139,  1140,  1141,   951,   653,  2323,  2349,   801,
     540,  2302,  1626,   653,   465,  1051,  1633,  1138,  1139,  1140,
    1141,  2563,  1264,  2609,   584,  1048,  2442,  -173,  -173,  1245,
     465,  2324,  1732,  1772,  1773,  1774,  1775,   585,   948,   820,
    2013,   820,  2294,  1443,  1443,  1368,  1369,  2178,  1443,  2564,
      57,  2068,  2069,  2070,  2071,  1708,    82,   568,   465,   473,
      53,   988,  2147,   592,   989,  1710,   949,  1195,  2035,  1697,
    1653,  1654,  1655,  1699,  1997,  1733,  1701,   465,   465,   465,
    1996,   465,  1998,  2000,  1443,  1443,  1905,  2434,  1434,   821,
    1958,   847,   946,   822,  1597,   822,  2443,  1072,  2019,  1999,
    2001,  2002,   465,    24,  2044,  1796,  1770,  1771,  1772,  1773,
    1774,  1775,  1196,   657,   658,   799,   474,  2480,  1883,   653,
     653,  1632,   823,   671,   848,  2481,   659,  2357,   602,   575,
    1635,  1100,   625,   761,  2683,  1638,  1236,   660,    28,   628,
    1643,  2148,  -475,  1856,  1931,  1650,  1237,  -475,  1048,  1245,
     613,   465,   614,  1372,  1373,   465,   465,  1848,  2658,  2659,
    1186,  1187,   948,  1191,   948,   629,   465,  1848,    24,   799,
     791,  1245,  1848,  2358,   800,  1848,  2455,   615,    30,   616,
    1943,  1068,   518,  1323,  1051,   801,  1269,   824,  1674,   824,
     949,    31,   949,   576,  1848,   583,   583,  1906,   583,   581,
     581,  1236,   581,    28,  1112,  1876,  2686,   632,   465,   465,
     465,  1239,  -475,    83,  1735,    32,  1246,  2391,  2531,  1198,
     633,    84,  2392,  1934,  2535,  1078,  1079,  1270,    87,   519,
    1963,   468,  2020,   802,  1118,  1970,   643,   515,   999,   801,
   -1024, -1024,  2021,    30,   948,   999,   541,   661,  1062,  1063,
     553,  1172,  1362,  1363,  1173,    85,    31,   627,   663,   817,
    -475,   654,   664,  1879,  1935,   818,  1120,  2271,   666,   577,
    2274,  1089,   949,  1080,   654,  1848,  1199,  1243,   665,  1791,
      32,  1285,  1286,   478,   642,   479,  1939,   802,  2482,   655,
     817,  1585,  1586,  1090,    33,   670,   818,   763,  1760,  1488,
    1048,    86,   655,  1761,  1762,  1763,  1804,  1093,  1848,   481,
     769,  1790,   670,  1792,  1793,  1760,  1105,  1368,  1369,   465,
    1761,  1762,  1763,   778,  1175,  1489,  1109,  1176,  -521,  -521,
    1608,  1852,   565,   947,   783,  1328,  1246,  2046,  1176,  1156,
     786,  1354,  -474,   653,  1355,   820,  1102,  -474,   817,  1164,
    2546,   999,   999,  1386,   818,  1068,  1387,  1323,  1246,   947,
     784,  1916,   650,  1918,   787,  1443,  1443,  1443,  1443,  1991,
     819,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,  1443,
    1443,  1299,    57,   789,  1051,  2007,  1300,  1549,  2213,   790,
     982,  2582,    53,   816,  1302,  1303,  1848,  1243,   797,  1907,
    1908,   819,   815,  1595,   578,  2014,  1176,  1665,  2308,   465,
    1666,  1693,  -474,   812,  1355,   465,   609,   814,   465,  1243,
    1443,  1443,   465,   829,  1704,  1372,  1373,  1705,  1909,  1848,
     607,  1952,  1979,  1490,  2038,  1068,   465,   979,  1491,   465,
     465,   465,   465,  1492,   608,   830,    57,   611,  2676,   465,
     465,  2149,  1686,  2158,  1687,  2311,    53,  2150,  1434,   819,
    -474,   465,  2157,   828,   831,  2133,  1051,   465,   465,   465,
     465,   947,  2036,  2037,  1340,   465,   465,  2646,  1764,   817,
     465,  1068,   846,  1323,   465,   818,    24,   465,   465,   465,
     465,   465,   465,   465,   465,   465,  2191,  2660,   465,  1765,
    1734,  1741,   465,  1176,  1176,   465,  2340,   465,  2115,   465,
     952,  1689,  2313,  1848,   832,   603,  1765,  -993,   820,   604,
    1745,    28,  1779,  1176,   850,  1176,  1922,  1486,   953,  1923,
     465,   670,  1926,   956,  1760,  1927,   948,   948,   948, -1534,
   -1534, -1534,  -525,  -525,  1989,  1557,   775,  1990,   465,   820,
     958,  2690,  2003,   565,   967,  1176,  2049,   465,   465,  1176,
    2113,    30,   965,  2114,   949,   949,   949,  1766,   851,  1974,
     969,  2118,   822,  2174,  2119,  2137,  2197,  2214,  1666,  1666,
    2215,  1493,   974,  2234,  1766,    53,  1387,  1062,  1063,  1051,
     819,  1494,  1828,   979,  1829,   947,  1080,   947,  1048,  1596,
     981,   852,   833,   822,  2537,   463,   984,   820,  2297,  2316,
     489,  1666,    33,  1005,   489,  2042,   817,  -524,  -524,   532,
     489,   537,   818,  1830,   537,  1831,   948,   557,   654,   985,
     489,   489,   823,  1195,   987,  2298,   465,  1048,  1666,   465,
     465,  1052,   465,  2171,  1392,   862,  1053,  -440,  1418,  1419,
     834,  1055,  2317,  1048,   949,  -645,   655,  1641,   835,  1414,
    -440,   822,  2266,  -652,  2269,  -440,   824,  2318,  2454,   465,
     836,   620,  1065,  1048,   537,  1690,  1879,   947,  1196,  2101,
    1071,   557,   489,   557,   557,   557,  2379,  -642,  2435,  1387,
    1642,  2436,  2355,   796,   653,   798,  1626,   824,  2179,  1040,
    2296,   837,  1048,   862,  1050,  2461,   621,   653,  1666,   465,
    2487,  -440,  2157,  1387,  2490,    53,  2502,  2491,   760,   982,
     762,    24,  1356,  2212,  1392,  1048,  1061,   819,  2507,  2086,
    -440,  2508,  -643,  2511,  1064,  2190,  2508,  1197,   820,   620,
     622,  1051,  2523,  1370,  1371,  2524,   839,   465,   465,  1542,
    1372,  1373,  1325,   465,  1326,   824,    28,  1066,  1767,  1768,
    1769,  2319,  1770,  1771,  1772,  1773,  1774,  1775,   840,  2560,
    2561,   568,  2524,  1387,   621,  1767,  1768,  1769,  -440,  1770,
    1771,  1772,  1773,  1774,  1775,  1198,   623,  -440,   842,  1168,
    1170,  1067,   822,   465,   465,   465,    30,  2569,   465,  2575,
     982,    33,  2508,  1766,  2087,  1073,  2336,  1076,  1954,    31,
     473,   465,   465,   465,   465,   568,  1077,  1806,  1082,   465,
    2590,   823,  2619,  2591,  2622,  2620,  1084,   982,  -646,  1443,
    1085, -1059,  1086,    32,   465,   465,  2088,  2653,  1087,   465,
    2508,  1048,  1199,  1807,   948,  1100,  2671,    33,   948,  2524,
     948,  2089,  -644,   465,   623,  1088,   465,  1146,   465,  1151,
    2090,  1095,  1096,  2374,  1106,  2328,  1152,   474,  1040,  1153,
    1166,  1179,   949,  1050,  1421,   820,   949,  1185,   949,   465,
     800,   802,  1422,  1423,  1424,   568,   824,  1215,  1217,  1100,
    1223,   465,  1846,  2091,  2669,  1553,  2459,   862,   862,   862,
    1241,  1242,    24,   462,  1243,   465,  1846,  1486,  1250,  1248,
    1249,  2337,  2338,  1254,   609,  1443,  1261,   462,  1262,   465,
     476,  1266,  -440,  1823,  1276,  1648,   999,  1879,   607,   822,
    1713,  1281,  1288,  1289,   465,  2283,  1293,    28,  1297,   999,
    1979,  1840,   608,  1298,    57,   611,  1305,  1308,  1309,   951,
    1311,  1315,   465,  1323,    53,  1840,  1808,  1353,  1649,   567,
    1057,  1809,  1068,  1392,  1074,  1048,  1357,  1358,  1393,   947,
     947,   947,  1394,  1399,   671,  1452,  1453,    30,  2092,  1112,
    1443,  1465,  1478,  1485,  1496,   603,  2174,  1499,   786,   604,
      31,  1497,  1520,  1537, -1534, -1534, -1534,  1601,  1770,  1771,
    1772,  1773,  1774,  1775,  1521,  1551,  1543,  1609,   862,  1612,
     465,   830,  1623,  1558,    32,  1550,   576,  1577,  1627,  1578,
    1629,  1565,  1579,   824,  1580,  1598,  1733,  1602,    33,  1603,
     831,  1604,  1636,   577,   478,  1658,   479,  1639,  1663,  1051,
    1667,  1644,  1645,  1646,  1647,  1675,  1651,  1652,  1671,  1676,
    1677,  1695,  2509,  1691,  1696,  2509,  2171,   480,  1700,   947,
     481,   653,  1702,  1703,   948,  1711,  1721,  1690,  1040,  1725,
     557,  1726,  1554,  1050,  1048,  1728,   619,  1729,  1051,  1730,
     832,  1048,   557,  1731,  1747,  1743,   489,  1744,  1746,  1748,
    1785,   465,   949,  1749,  1051,  1750,  1752,  1786,  1753,  1810,
    1800,   465,  1756,  1778,  1176,   465,  1784,    53,   465,  1811,
    1787,   636,   489,   489,  1051,   465,   465,   465,   465,  1788,
    1795,   465,   465,   465,   465,   465,   465,   465,   465,   465,
     465,  1048,  1798,  1805,   465,   465,   654,  2063,  1812,    24,
    1733,  1048,  1821,  1051,  1822,   537,  1878,   537,   465,  1826,
    1040,  1850,   568,   557,   465,  1050,  1824,   465,  1825,   465,
    1859,   489,  1861,  1868,   655,  1875,  1051,   465,   833,   568,
     465,   465,  1881,   557,    28,   465,   465,  2489,  2438,  1887,
      24,  -526,  -527,  1886,  1889,   557,  1890,  1891,  1893,  1895,
    1896,   465,  1846,   465,  1846,  1899,  1269,  1915,   862,  1917,
    1902,  2534,  1930,   462,   465,   462,  2541,  1925,  1936,  1937,
    1938,  1940,  1961,   465,    30,    28,   834,  1941,  1942,  1944,
     557,   557,   557,  1964,   835,  1960,  1100,    31,  1965,   465,
    1968,  1971,  1102,  1972,  1975,  1982,   836,  2174,  1988,  2006,
    1995,  2075,  2494,  2078,  1781,  1760,  2039,  2040,  1780,  2051,
    1948,    32,  2041,  2052,  1048,    30,  2055,  2064,  1833,  2077,
    2494,  2085,  2099,  2103,  1054,  1555,  2308,   837,    31,  2110,
    2105,  2107,  2309,  1040,  2112,  2108,  2116,   947,  1050,  2123,
    2131,   947,  1051,   947,  2310,  2127,  1403,  2145,   529,  2589,
    1048,  2143,    32,   999,  2161,  2200,  2193,  2199,  1980,  2204,
    1981,  2210,  2219,  2222,  1986,  1987,    33,  2171,  1666,  2562,
    2220,  2225,   839,  2311,  2228,  2312,  2229,  2242,  2252,  2257,
    1048,  2543,  2253,  1048,  2260,   862,  2262,  2263,  2270,  1042,
    2276,  2277,  2275,   830,   840,  2208,  2278,  1425,  1426,  1427,
    2291,  1428,  1429,  1430,  1431,  1432,  1433,  2303,  2326,  2327,
    2341,  2299,   831,   948,   842,  2344,  2572,   948,   465,  2331,
    2534,  2342,  2643,  2343,  2350,  2351,   557,  2352,  2364,  2365,
    2313,  2367,  2370,  2371,  2373,    53,  2376,  2377,  2390,  2403,
    2384,   949,   489,   489,  2417,   949,  2421,  2427,   557,   557,
    1184,  1360,  1361,  2408,  2584,  2429,  2430,  2314,   862,  2446,
     465,   465,   832,  2151,  2432,   465,  1051,  2449,  2450,  2451,
     465,  2152,  2437,   465,   465,   557,  1235,  2452,   465,  2460,
    2463,  2464,  2465,  2478,  2488,  1040,  2479,  2492,   557,   594,
    1050,   597,  2500,   601,  2513,  2517,  2501,  2504,  2525,   465,
    1846,  2520,  2539,   465,  1846,   557,  2544,  2542,  2547,   557,
    2556,   462,  2557,  2558,  2568,   462,  2578,  2577,  2579,  1967,
    2588,  2592,  2315,  2594,   465,  1362,  1363,  2316,  2153,  2445,
    2595,   670,  2600,  2597,  1760,  2601,  2284,  2286,  2602,  1761,
    1762,  1763,  2608,  2606,  2607,  2617,  2633,  2621,  2065,  1840,
     833,  2639,  2648,  1840,  2654,  2655,  2047,   947,  1042,  2662,
    2665,  2667,  2672,  2673,  2674,  1048,   465,  2663,  2685,  2687,
    2317,  2691,   948,  2664,  2176,  1051,    53,    53,  2160,  2164,
     788,  1628,  1051,  2287,  1913,  2318,  1364,  1365,  1366,  1367,
    1368,  1369,  2120,  2583,  1370,  1371,  1948,  2420,   834,  2198,
     949,  2629,  2635,  2334,  2682,  2538,   835,  2668,  2661,  2477,
    1898,  1232,  1292,  1920,  2631,  2203,  1949,   557,   836,  2666,
    2154,  2165,  1894,  2630,  2356,  1320,  1950,  1318,  1976,   653,
    2192,  2571,  1051,   636,  2372,  1158,   636,  1177,  1877,   465,
     489,   489,  1051,   489,   636,  1594,   557,  1212,  1888,   837,
     465,   465,  2519,  2625,   465,  1211,  1574,  2106,  2576,  2080,
    1216,  1593,   670,  1858,    53,  1760,   465,  1846,  2281,  2268,
    1761,  1762,  1763,  2506,  2251,  2076,   465,  1846,   462,  2319,
    2567,   465,  1846,  2566,   465,  1846,   472,  2236,   462,  2573,
     473,   465,   465,   462,   839,  2574,   462,  1722,  1372,  1373,
    1404,  1406,  1410,   465,  1846,   465,  2623,  2616,  1411,  2419,
    2624, -1059,  1880,  1738,  1526,   462,   840,  1819,  1662,  1817,
    1953,  2129,  1536,  2559,  1720,   465,  1840,  1333,  1545,  2121,
    1180,  1840,  1547,     0,  1840,  1765,   842,     0,  2155,     0,
       0,  2156,     0,  1436,     0,  2162,     0,   474,     0,     0,
       0,  2280,     0,  2282,   475,  1051,     0,     0,  1042,   862,
    2180,  2181,  2182,  2183,  2184,  2185,  2186,  2187,  2188,  2189,
       0,     0,     0,     0,  2462,     0,     0,     0,     0,   636,
       0,     0,     0,  1040,   465,  1846,     0,     0,  1050,     0,
     465,  1051,     0,     0,     0,  2356,   462,     0,     0,     0,
     476,   568,     0,  1766,     0,     0,     0,  1374,  1375,     0,
       0,   557,     0,   465,    53,     0,     0,   465,  1846,  1043,
       0,  1051,  1040,     0,  1051,   465,     0,  1050,     0,   462,
       0,   557,     0,   557,   830,    53,   465,     0,  1040,     0,
    1042,  1243,  1559,  1050,  1564,     0,   947,     0,     0,     0,
     947,   465,     0,   831,     0,     0,     0,     0,  1040,     0,
       0,   999,     0,  1050,     0,     0,  1765,  1840,   477,     0,
       0,     0,     0,     0,     0,  1100,   557,     0,   612,     0,
       0,  1045,     0,     0,     0,  1235,   489,  1040,  2553,     0,
     624,     0,  1050,     0,     0,     0,   489,  1610,   489,  1614,
       0,   489,   465,   832,     0,   465,  1846,   489,     0,   489,
    1040,     0,     0,     0,   478,  1050,   479,   462,     0,     0,
     636,   489,     0,     0,     0,   636,   489,   465,    53,     0,
     489,   489,   489,   489,  1766,   489,   489,   480,   465,  1846,
     481,     0,     0,     0,  2580,  1360,  1361,     0,     0,  1046,
     462,     0,     0,     0,     0,   557,  1673,     0,   465,     0,
       0,   768,     0,  1042,   998,     0,     0,     0,  1685,  2153,
       0,   998,     0,     0,     0,     0,     0,   465,   465,     0,
       0,     0,     0,     0,    53,     0,     0,  2176,  1043,     0,
       0,   833,     0,   813,  1767,  1768,  1769,     0,  1770,  1771,
    1772,  1773,  1774,  1775,     0,   947,  1051,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1724,     0,     0,  1362,
    1363,     0,   465,  1846,   465,  2644,  1040,     0,   960,   962,
     964,  2177,     0,     0,   462,     0,     0,     0,     0,   834,
       0,     0,     0,     0,     0,     0,     0,   835,     0,     0,
    1045,     0,  1108,     0,     0,     0,     0,     0,     0,   836,
       0,     0,     0,     0,     0,    53,     0,     0,     0,     0,
       0,     0,     0,     0,  1047,   998,     0,   998,   998,     0,
    1364,  1365,  1366,  1367,  1368,  1369,   465,     0,  1370,  1371,
     837,  1360,  1361,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2549,     0,     0,     0,
       0,     0,     0,     0,     0,  1042,     0,     0,  1046,     0,
       0,     0,     0,     0,  1341,  1767,  1768,  1769,     0,  1770,
    1771,  1772,  1773,  1774,  1775,   839,     0,     0,     0,     0,
    2439,     0,     0,   998,     0,     0,   998,   998,     0,     0,
    1040,     0,     0,     0,     0,  1050,  1436,   840,     0,     0,
       0,     0,     0,     0,     0,  1362,  1363,     0,  1342,     0,
       0,     0,  2457,  2458,  1171,     0,     0,   842,     0,     0,
       0,     0,     0,     0,     0,  2466,     0,     0,  1043,   557,
       0,     0,  1372,  1373,  1343,     0,  1849,  1182,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1849,     0,  1344,     0,  1867,     0,  1345,  1870,     0,  1564,
       0,     0,     0,  1224,     0,     0,  1364,  1365,  1366,  1367,
    1368,  1369,     0,     0,  1370,  1371,  1251,  1346,  2176,     0,
    1347,     0,     0,  1047,     0,     0,     0,     0,     0,     0,
    1045,  2521,     0,     0,  1348,     0,     0,  1275,     0,  1040,
       0,     0,     0,     0,  1050,  1292,  1040,     0,     0,     0,
    1043,  2339,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1374,  1375,     0,     0,     0,  1335,  1337,     0,     0,
       0,     0,     0,     0,     0,     0,  1040,     0,  1046,     0,
       0,  1050,     0,     0,     0,  1292,  1040,     0,     0,     0,
     557,  1050,  1045,     0,  1292,   557,   557,   557,  1372,  1373,
       0,     0,  1349,     0,     0,     0,     0,     0,   489,     0,
    1350,     0,     0,     0,     0,   557,     0,     0,     0,   636,
       0,     0,     0,     0,  1111,  1304,     0,  1112,     0,     0,
       0,     0,  1113,  1114,  1115,  1292,  1292,     0,  1400,  1401,
       0,     0,     0,     0,     0,     0,  1415,     0,  1416,  1417,
       0,     0,  1351,  1043,  1330,     0,     0,  1118,     0,     0,
    1046,     0,     0,  1454,  1119,  1455,     0,     0,     0,     0,
       0,     0,  1436,  1042,     0,     0,     0,     0,  1466,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1120,
       0,  1446,     0,     0,     0,     0,     0,     0,     0,  1040,
       0,     0,     0,  1047,  2177,     0,     0,  1374,  1375,     0,
       0,     0,  1042,     0,     0,  1045,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1376,  1042,     0,
       0,     0,     0,     0,     0,  1040,     0,     0,     0,     0,
    1050,     0,     0,     0,     0,  2067,     0,     0,  1042,     0,
       0,     0,     0,   557,   557,   557,   463,     0,  1849,  2084,
       0,     0,     0,  2084,  2098,  1040,     0,     0,  1040,     0,
    1050,     0,     0,  1050,     0,  1583,  1583,  1042,     0,     0,
       0,   670,     0,  1046,  1760,  1047,     0,     0,  1121,  1761,
    1762,  1763,  1564,     0,     0,     0,     0,     0,     0,  1446,
    1042,     0,  1122,     0,     0,  1043,  2237,  1123,   557,     0,
     489,     0,     0,     0,  1292,  1235,  1292,     0,  1318,  1535,
       0,     0,     0,     0,     0,     0,     0,   998,  1124,  1125,
       0,     0,     0,     0,   489,     0,  2163,   998,     0,  1544,
     998,  1546,  1126,     0,     0,     0,     0,     0,     0,   489,
     489,   489,   489,   489,   489,   489,   489,   489,   489,     0,
       0,     0,     0,     0,     0,     0,     0,  1045,     0,     0,
       0,     0,     0,   557,     0,     0,     0,     0,     0,  1127,
    1235,     0,  1128,     0,  1589,     0,     0,     0,     0,     0,
       0,  1318,     0,     0,   557,     0,  1129,     0,     0,     0,
       0,  1292,     0,     0,     0,     0,     0,     0,  1047,  2218,
       0,     0,   998,     0,     0,     0,  1042,     0,     0,     0,
     670,     0,     0,  1760,     0,   998,     0,     0,  1761,  1762,
    1763,     0,     0,  1111,     0,  1046,  1112,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1727,     0,
    1040,     0,     0,     0,     0,  2177,     0,     0,     0,     0,
       0,     0,     0,  1672,     0,     0,  1118,     0,     0,     0,
       0,     0,     0, -1534,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2245,  1765,  1131,   557,   557,   557,
     557,     0,     0,     0,  2084,  2098,     0,  2084,  1120,     0,
    2255,     0,     0,     0,  1849,     0,     0,     0,  1849,     0,
       0,     0,     0,     0,  2273,     0,     0,     0,     0,     0,
     741,   741,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1867,     0,     0,     0,     0,  1564,     0,
    1042,     0,  1436,     0,  1446,  1446,     0,     0,     0,  1446,
    1235,     0,     0,  1766,     0,     0,     0,     0,     0,     0,
    1047,     0,     0,     0,     0,     0,     0,  1803,     0,     0,
       0,     0,     0,     0,     0,  2335,     0,     0,   859,   864,
       0,     0,     0,     0,  1132,  1446,  1446,  1133,  1134,  1135,
       0,  1136,  1137,  1138,  1139,  1140,  1141, -1534,     0,     0,
       0,     0,     0,  1043,     0,     0,     0,     0,     0,     0,
       0, -1534,  1292,  1854,     0,     0, -1534,     0,  1685,     0,
       0,     0,     0,     0,  1765,     0,     0,     0,     0,  2368,
       0,     0,     0,     0,     0,     0,   859,     0,     0,     0,
       0,     0,  1043,     0,  1884,  1884,     0,     0,     0,  1042,
       0, -1534,  1059,     0,     0,     0,  1042,     0,  1043,     0,
       0,     0,     0,     0,     0,  1045,     0,     0,     0,     0,
       0,   463,  2084,     0,     0,     0,  2396,     0,  1043,   489,
    1081,  1849,     0,     0,     0,     0,  1849,     0,     0,  1849,
       0,  2407,  1766,     0,  2410,     0,     0,  1832,     0,  1097,
    1098,  1099,     0,  1101,  1045,  1129,  1042,  1043,  2426,     0,
       0,     0,     0,     0,     0,     0,  1042,     0,  1757,  1758,
    1045,     0,     0,  1777,  1150,     0,     0,     0,   636,   489,
    1043,     0,     0,  1046,     0,     0,     0,   557,     0,     0,
    1045,     0,     0,     0,  1767,  1768,  1769,     0,  1770,  1771,
    1772,  1773,  1774,  1775,     0,     0,     0,     0,     0,  1801,
    1802,   489,   489,     0,     0,     0,     0,     0,     0,  1045,
       0,  1235,  1046,  1190,   489,     0,     0,  1202,  1207,     0,
       0,     0,     0,     0,     0,     0,   557,     0,  1046,  2426,
       0,     0,  1045,     0,     0, -1534,     0,  1992,  1994,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1046,   489,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1849,     0,     0,     0,     0,  2410,     0,  1042,
     859,   859,   859,     0,     0,     0,  2516,  1046,  1951,     0,
     489,     0,     0,  1956,  1957,  1959,  1043,     0,     0,   557,
       0,     0,     0,     0,     0,     0,     0,     0,  1047,     0,
    1046,     0,     0,  1973,     0,  1042,  1446,  1446,  1446,  1446,
       0,   636,  1446,  1446,  1446,  1446,  1446,  1446,  1446,  1446,
    1446,  1446,   557,  1767,  1768,  1769,     0,  1770,  1771,  1772,
    1773,  1774,  1775, -1534,     0,  1042,     0,  1047,  1042,     0,
    1136,  1137,  1138,  1139,  1140,  1141,     0,     0,  1045,     0,
     463,     0,     0,  1047,     0,     0,     0,     0,     0,  2570,
       0,  1446,  1446,   489,     0,     0,     0,  2407,     0,     0,
       0,     0,     0,  1047,     0,     0,     0,     0,     0,     0,
       0,   859,     0,  2426,   636,   636,   636,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1047,     0,     0,     0,     0,     0,     0,     0,
    1043,     0,     0,     0,     0,     0,  1046,     0,     0,     0,
       0,     0,     0,     0,     0,  1047,     0,  2407,     0,     0,
       0,     0,     0,     0,     0,     0,  2516,     0,  2396,     0,
     998,  2072,  2073,  2074,     0,     0,     0,  1564,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1235,     0,     0,     0,   670, -1439,  2426,  1760,     0,
       0,     0,  1045,  1761,  1762,  1763,     0,  1397,     0,     0,
    2015,  2016,  2017,  2018,     0,   636,  2022,  2023,  2024,  2025,
    2026,  2027,  2028,  2029,  2030,  2031,  2128,     0,  1420,     0,
    2217,  1437,     0,     0,  1449,     0,     0,     0,     0,     0,
       0,  1456,  1461,     0,     0,     0,     0,     0,     0,  1043,
    1042,     0,     0,  1467,     0,     0,  1043,     0,     0,  1471,
    1472,  1473,  1474,     0,     0,  2057,  2058,  1483,  1484,     0,
    1046,  1047,  1495,     0,     0,     0,  1498,     0,     0,  1506,
    1507,  1508,  1509,  1510,  1511,  1512,  1513,  1514, -1439,     0,
    1515,  2196,     0,     0,  1523,     0,     0,  1527,     0,   741,
       0,   859,     0,     0,     0,     0,  1043,     0,     0,     0,
       0,  1045,  1330,     0,     0,     0,  1043,     0,  1045,     0,
       0,     0,  1548,     0,     0,     0,     0,     0,     0,     0,
       0,  1144,     0,     0,     0,     0,     0,     0,     0,     0,
   -1439,     0,     0,     0,     0,     0,     0,     0,     0,  1098,
    1099,     0,     0, -1439,     0,     0,     0,     0, -1439,     0,
       0,     0,     0, -1439,     0,     0,     0,     0,  1045,     0,
    1144,     0, -1439,     0,     0, -1439,     0,     0,  1045,  1046,
       0,     0,     0,     0,     0,     0,  1046,     0,     0,     0,
       0,     0,   998,     0,     0,  1047,     0,   998,     0, -1534,
       0,     0,     0,     0, -1439,  2246,  2247,  2248,  2249,     0,
       0,  1335,  1337,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0, -1439,     0,     0,     0,     0,   859,  1043,
       0,  1659,  1660,     0,  1661,     0,  1046,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1046,     0,     0,  1144,
       0,     0,     0,     0,  1144,     0,     0,     0,     0,     0,
       0,  1694,     0,     0,     0,  1043,     0,  1766,     0,     0,
       0, -1439,     0,     0, -1439,     0,     0,     0,     0,     0,
   -1439,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1045,     0,     0,     0,  1043,     0,     0,  1043,     0,
    1446,   859,     0,     0,  1047,     0,     0,     0,     0,     0,
       0,  1047,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1045,     0,     0,
       0,     0,     0,     0,     0, -1439,     0,     0,     0,     0,
    1736,     0,     0,     0,     0,  1742,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1045,     0,  1046,
    1045,  1047,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1047,     0,     0,  1335,  1337,     0,     0,     0,     0,
       0,     0,     0,   998,     0,     0,  1446,  1759,     0,  1833,
       0,     0,     0,     0,     0,  1046,     0,     0,     0,     0,
       0,     0,     0,  1461,     0,  1461,  1461,     0,     0,     0,
       0,  1797,     0,     0,     0, -1439,     0,     0,     0,     0,
       0,     0,     0, -1439,     0,  1046,     0,     0,  1046,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0, -1439,
       0, -1439, -1439,     0,     0,  1815,     0,     0,  1818,  1144,
    1820,  1446,     0,     0,     0,  2447,     0,     0,  1767,  1768,
    1769,     0,  1770,  1771,  1772,  1773,  1774,  1775,     0,     0,
       0,  1144,     0,     0,  2375,     0,  1444,     0, -1439,     0,
    1043, -1439, -1439, -1439,  1047,     0,     0,  1144,  1144,  1144,
       0,  1144,     0,     0,  1111,     0,     0,  1112,     0,     0,
       0,     0,     0,     0,  2483,     0,     0,     0,     0,     0,
       0,  1190,     0,     0,   -38,     0,     0,     0,     0,     0,
    1047,     0,     0,     0,     0,     0,  1207,  1118,     0, -1441,
       0,     0,     0,     1, -1534,     0,     0,     0,     0,     0,
    1144,     0,  1045,     2,  1892,     3,     4,     0,     0,     0,
    1047,     0,     0,  1047,     0,     0,     0,     0,     0,  1120,
    2440,     5,     0,     0,     0,     0,     0,  2530,     0,     0,
       6,     0,     0,     0,     0,  1111,     0,     0,  1112,     0,
    1144,     0,     7, -1534, -1534, -1534,     0,     0,     0,     0,
       0,     0,  1144,     8,     0,     0,     0,  1144,     0,     0,
    2552,     0,   859,     0,     9,     0,    10,     0,  1118,     0,
    1046,     0,     0,     0,     0,  1119,     0,     0,     0,     0,
       0, -1441,     0,     0,    11,  2485,     0,     0,  1813,     0,
       0,     0,     0,     0,   998,     0,     0,     0,    12,     0,
    1120,     0,     0,     0,     0,     0,     0,     0,    13,     0,
       0,     0,     0,     0,    14,     0,     0,     0, -1534,     0,
       0,     0,    15,     0,    16,    17,     0,     0,     0,     0,
       0,     0, -1534, -1441,     0,     0,     0, -1534,     0,     0,
       0,     0,     0,  2005,     0,     0, -1441,     0,     0,     0,
       0, -1441,     0,  2009,     0,     0, -1441,  2010,     0,     0,
    2012,     0,     0,     0,    18, -1441,     0,     0, -1441,     0,
       0,     0, -1534,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2032,  2033,     0,     0,
       0,     0,     0,     0,     0,  1047,     0, -1441,     0,  1121,
       0,     0,     0,    19,     0,     0,  2045,     0,     0,  2048,
       0,  2050,     0,  1122,     0,     0, -1441,     0,  1123,  2054,
       0,     0,     0,     0,     0,     0,  1129,  2061,  2062,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1144,     0,     0,
       0,     0,     0,  1126,     0,     0,  2102,     0,     0,     0,
       0,     0,     0,     0, -1441,  2109,     0, -1441,     0,     0,
    1144,     0,     0, -1441,     0,     0,     0,     0,     0,    20,
       0,  2122,    21,     0,     0,     0,     0,  1144,     0,  1444,
    1444,     0,  1776, -1455,  1444,     0,     0,     0,     0,  1144,
       0,     0,     0,     0,     0,     0,  1144,  1129,     0,     0,
      22,  1144,     0,     0,     0,     0, -1534,  1144,    23,     0,
       0,  1144,  1144,  1144,  1144,     0,     0,     0, -1441,     0,
    1444,  1444,    24,  1144,  1144,     0,     0,     0,     0,    25,
       0,     0,     0,    26,     0,  1144,     0,     0,  1144,     0,
       0,     0,     0,    27,     0,     0,  1144,  1144,  1144,  1144,
    1144,  1144,  1144,  1144,  1144,  1144,     0,    28,     0,     0,
       0,     0,     0,  1144,     0,     0,     0,  1144,  1111,     0,
       0,  1112,  1833,     0,     0, -1455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1131,  1144,     0,
       0,     0,    29,     0,     0,     0,     0,    30, -1441,     0,
    2221,  1118,     0,     0, -1534,     0, -1441,     0, -1534,     0,
      31,  1136,  1137,  1138,  1139,  1140,  1141,     0,     0,     0,
       0,     0, -1441,     0, -1441, -1441,     0, -1455,     0,     0,
       0,     0,     0,  1120,    32,     0,     0,     0,     0,     0,
   -1455,     0,  2230,  2231,     0, -1455,     0,  2232,    33,     0,
   -1455,   -38,  2235,     0,     0,  2238,  2239,     0,     0, -1455,
    2243, -1441, -1455,     0, -1441, -1441, -1441,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1132,     0,     0, -1534, -1534,
   -1534, -1455,  1136,  1137,  1138,  1139,  1140,  1141,     0,  1144,
    1144,  1144,  2056,     0,     0,     0,   741,     0,     0,     0,
   -1455,     0,     0,     0,     0,     0,  1111,     0,     0,  1112,
       0,     0,     0,     0,  1113,  1114,  1115,     0,     0,     0,
       0,     0, -1534,     0,  1144,     0,     0,     0,     0,     0,
       0,  1116,     0,     0,     0,     0, -1534,     0,  2329,  1118,
       0, -1534,     0,     0,     0,     0,  1119,     0, -1455,     0,
       0, -1455,     0,     0,     0,     0,     0, -1455,     0,     0,
       0,     0,     0,     0,     0,     0,  1144,     0,     0,     0,
       0,  1120,  1144,     0,     0,     0, -1534,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1776,  1776,  1144,
       0,  1444,  1444,  1444,  1444,     0,     0,  1444,  1444,  1444,
    1444,  1444,  1444,  1444,  1444,  1444,  1444,  1776,     0,     0,
       0,     0, -1455,     0,     0,     0,     0,     0,  1111,     0,
       0,  1112,  2380,  2381,     0,     0,  2382,  1144,     0,     0,
    1129,  1776,  1776,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1144,  1444,  1444,  1144,     0,
    1144,  1118,     0,     0,     0,     0,     0,     0, -1534,     0,
       0,     0,     0,  2415,  2416,     0,  1833,     0,     0,     0,
    1121,     0,     0,     0,     0,     0,     0,  2428,     0,     0,
       0,     0,     0,  1120,  1122,     0,     0,     0,     0,  1123,
       0,     0, -1455,     0,     0,     0,     0,     0,     0,     0,
   -1455,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1124,  1125,     0,     0,     0,     0, -1455,     0, -1455, -1455,
   -1534,     0,  1144,     0,  1126,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2059,     0,     0, -1455,     0,     0, -1455, -1455,
   -1455,  1127,     0,     0,  1128,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1129,  1110,
       0,  1130, -1534,     0,  1111,  2503,     0,  1112,     0,     0,
       0,     0,  1113,  1114,  1115,     0, -1534,  1101,     0,     0,
       0, -1534,     0,     0,  1111,     0,     0,  1112,  2522,  1116,
       0,     0,  1117,     0,     0,     0,     0,  1118, -1534,     0,
       0,     0,     0,  2536,  1119,  1136,  1137,  1138,  1139,  1140,
    1141,     0,     0,     0,     0,  1144, -1534,  1118,     0,  1144,
    1144,     0,  1144,     0, -1534,  1776,  1776,  1776,  1776,  1120,
       0,     0,  1776,  1776,  1776,  1776,  1776,  1776,  1776,  1776,
    1776,  1776,  1144,  1144,     0,     0,     0,     0,  1131,  1120,
       0,     0,     0,   817,     0,  1144,     0,     0,  1144,   818,
    1144,     0,     0,     0,  1144,     0,   830,  1776,  1776,     0,
    1129,  1144,  1144,     0,     0,     0,     0,     0,     0,  2415,
       0,     0,     0,     0,     0,   831,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2599,     0,  1144,     0,     0,     0,     0,     0,  2060,  1144,
       0,     0,     0,     0,     0,     0,     0,     0,  1121,  2613,
    2613,     0,  1144,     0,     0,   832,     0,     0,     0,     0,
       0,     0,  1122,     0,     0,     0,  1132,  1123, -1534,  1133,
    1134,  1135,     0,  1136,  1137,  1138,  1139,  1140,  1141,     0,
   -1534,     0, -1534,     0,   819,     0,  1751, -1534,  1124,  1125,
       0,     0,     0,     0,     0,     0,  2613,     0,     0,     0,
       0,     0,  1126,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0, -1534,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1127,
       0,     0,  1128,   833,     0,     0,     0,     0,     0,     0,
       0,  1144,     0,     0,     0,  1444,  1129,     0,  2613,  1130,
    1144,  1144,  1144,     0,     0,  1144,     0,     0,  1144,  1144,
       0,     0,     0,  1144,     0,     0,  1129,     0, -1534,     0,
       0,     0,     0,     0,     0,  1136,  1137,  1138,  1139,  1140,
    1141,   834,     0,     0,     0,     0,     0,     0,     0,   835,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   836,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   820,     0,     0,     0,     0,     0,     0,     0,
       0,  1444,   837,     0,     0,     0,  1131,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1144,
       0,     0,     0,     0,     0,     0, -1534,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   838,     0,     0,     0,   822,   839,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1776,  1444,     0,     0,   840,
    1144,  1144,  1144,     0,     0,   841,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   842,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1132,  1144,  1144,  1133,  1134,  1135,
       0,  1136,  1137,  1138,  1139,  1140,  1141,     0,  1144,     0,
       0,     0,     0,     0, -1534,     0,     0,     0,     0,     0,
    1776,  1136,  1137,  1138,  1139,  1140,  1141,     0,     0,     0,
     824,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    88,   667,   529,   668,   669,   670,   671,   672,
       0,     0,     0,     0,     0,  1776,     0,     0,    89,    90,
      91,    92,    93,    94,    95,    96,   854,    97,    98,    99,
       0,     0,     0,  1144,     0,     0,     0,   100,   101,     0,
     102,   103,   104,   105,   106,   107,   108,   109,   673,   111,
     674,   675,  1144,   114,   115,   116,   117,   118,   119,   676,
     677,   120,   121,   678,   679,   124,  1144,   125,   126,   127,
     128,   680,     0,   681,     0,   131,   132,   133,   134,   135,
     136,   137,   138,   139,     0,   140,   141,   142,   143,   144,
     145,     0,   146,   147,   148,   149,   682,   683,   684,   685,
     686,   687,   688,   151,   152,   153,   154,   155,   156,   157,
     689,   690,   160,   691,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,   855,  1144,
     173,   174,   692,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,  1144,   184,   185,   186,   187,   693,   189,
     190,   191,   192,   694,   695,   194,     0,   195,   196,   696,
     198,     0,   199,     0,   200,   201,     0,   202,   203,   204,
     205,   206,   207,     0,   208,     0,   209,   210,     0,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,   228,   229,
     230,   231,   232,   233,   234,   697,   698,     0,   699,     0,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
       0,     0,   248,   249,   250,   251,     0,   252,   253,   254,
     700,   701,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   702,   279,   703,   281,   282,
     283,   284,   704,   285,   286,   287,   288,   705,   706,   290,
     707,   292,   293,   294,     0,   295,   296,     0,     0,   708,
     298,   299,     0,     0,   300,   301,   302,   303,   304,   709,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
       0,   316,   317,   710,   319,   320,   321,   322,   323,   324,
       0,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     711,   335,   336,   337,   338,     0,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   712,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,     0,   369,   370,
     371,   372,   373,   713,   374,   375,   376,   377,   378,   379,
     380,   381,   714,   383,     0,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   715,     0,
     398,   399,     0,   400,   401,   402,   403,   404,   405,   406,
       0,   716,   717,     0,     0,   409,   410,   718,   412,   719,
     720,   414,   415,   416,   417,   418,   419,   420,     0,     0,
     421,   422,   423,   424,   425,   721,     0,   426,   427,   428,
     429,   430,   431,   722,   856,   433,   434,   435,   436,   437,
     438,     0,     0,   439,     0,     0,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   723,     0,     0,
       0,     0,     0,     0,   724,   725,   857,     0,     0,     0,
       0,     0,     0,   727,   858,     0,     0,     0,   728,    88,
     667,   529,   668,   669,   670,   671,   672,     0,     0,     0,
       0,     0,     0,     0,     0,    89,    90,    91,    92,    93,
      94,    95,    96,     0,    97,    98,    99,     0,     0,     0,
       0,     0,     0,     0,   100,   101,     0,   102,   103,   104,
     105,   106,   107,   108,   109,   673,   111,   674,   675,     0,
     114,   115,   116,   117,   118,   119,   676,   677,   120,   121,
     678,   679,   124,     0,   125,   126,   127,   128,   680,     0,
     681,     0,   131,   132,   133,   134,   135,   136,   137,   138,
     139,     0,   140,   141,   142,   143,   144,   145,     0,   146,
     147,   148,   149,   682,   683,   684,   685,   686,   687,   688,
     151,   152,   153,   154,   155,   156,   157,   689,   690,   160,
     691,   161,     0,   162,   163,   164,   165,   166,   167,     0,
     168,   169,   170,   171,   172,     0,     0,   173,   174,   692,
     176,   177,     0,   178,   179,   180,     0,   181,   182,   183,
       0,   184,   185,   186,   187,   693,   189,   190,   191,   192,
     694,   695,   194,     0,   195,   196,   696,   198,     0,   199,
       0,   200,   201,     0,   202,   203,   204,   205,   206,   207,
       0,   208,     0,   209,   210,     0,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,     0,   222,   223,
     224,   225,   226,   227,     0,   228,   229,   230,   231,   232,
     233,   234,   697,   698,     0,   699,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,     0,     0,   248,
     249,   250,   251,     0,   252,   253,   254,   700,   701,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   702,   279,   703,   281,   282,   283,   284,   704,
     285,   286,   287,   288,   705,   706,   290,   707,   292,   293,
     294,     0,   295,   296,     0,     0,   708,   298,   299,     0,
       0,   300,   301,   302,   303,   304,   709,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,     0,   316,   317,
     710,   319,   320,   321,   322,   323,   324,     0,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   711,   335,   336,
     337,   338,     0,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,     0,   351,   352,   353,   354,
     355,   356,   712,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,    24,   369,   370,   371,   372,   373,
     713,   374,   375,   376,   377,   378,   379,   380,   381,   714,
     383,     0,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   715,     0,   398,   399,    28,
     400,   401,   402,   403,   404,   405,   406,     0,   716,   717,
       0,     0,   409,   410,   718,   412,   719,   720,   414,   415,
     416,   417,   418,   419,   420,     0,     0,   421,   422,   423,
     424,   425,   721,     0,   426,   427,   428,   429,   430,   590,
     722,     0,   433,   434,   435,   436,   437,   438,     0,     0,
     439,     0,    31,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   723,     0,    32,     0,     0,     0,
       0,   724,   725,     0,     0,     0,     0,     0,     0,     0,
     727,  2512,     0,     0,     0,   728,    88,   667,   529,   668,
     669,   670,   671,   672,     0,     0,     0,     0,     0,     0,
       0,     0,    89,    90,    91,    92,    93,    94,    95,    96,
       0,    97,    98,    99,     0,     0,     0,     0,     0,     0,
       0,   100,   101,     0,   102,   103,   104,   105,   106,   107,
     108,   109,   673,   111,   674,   675,     0,   114,   115,   116,
     117,   118,   119,   676,   677,   120,   121,   678,   679,   124,
       0,   125,   126,   127,   128,   680,     0,   681,     0,   131,
     132,   133,   134,   135,   136,   137,   138,   139,     0,   140,
     141,   142,   143,   144,   145,     0,   146,   147,   148,   149,
     682,   683,   684,   685,   686,   687,   688,   151,   152,   153,
     154,   155,   156,   157,   689,   690,   160,   691,   161,     0,
     162,   163,   164,   165,   166,   167,     0,   168,   169,   170,
     171,   172,     0,     0,   173,   174,   692,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,   187,   693,   189,   190,   191,   192,   694,   695,   194,
       0,   195,   196,   696,   198,     0,   199,     0,   200,   201,
       0,   202,   203,   204,   205,   206,   207,     0,   208,     0,
     209,   210,     0,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,     0,   222,   223,   224,   225,   226,
     227,     0,   228,   229,   230,   231,   232,   233,   234,   697,
     698,     0,   699,     0,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,     0,     0,   248,   249,   250,   251,
       0,   252,   253,   254,   700,   701,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   702,
     279,   703,   281,   282,   283,   284,   704,   285,   286,   287,
     288,   705,   706,   290,   707,   292,   293,   294,     0,   295,
     296,     0,     0,   708,   298,   299,     0,     0,   300,   301,
     302,   303,   304,   709,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,     0,   316,   317,   710,   319,   320,
     321,   322,   323,   324,     0,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   711,   335,   336,   337,   338,     0,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,     0,   351,   352,   353,   354,   355,   356,   712,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,    24,   369,   370,   371,   372,   373,   713,   374,   375,
     376,   377,   378,   379,   380,   381,   714,   383,     0,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   715,     0,   398,   399,    28,   400,   401,   402,
     403,   404,   405,   406,     0,   716,   717,     0,     0,   409,
     410,   718,   412,   719,   720,   414,   415,   416,   417,   418,
     419,   420,     0,     0,   421,   422,   423,   424,   425,   721,
       0,   426,   427,   428,   429,   430,   590,   722,     0,   433,
     434,   435,   436,   437,   438,     0,     0,   439,     0,    31,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   723,     0,    32,     0,     0,     0,     0,   724,   725,
       0,     0,     0,     0,     0,     0,     0,   727,     0,     0,
       0,     0,   728,    88,   667,   529,   668,   669,   670,   671,
     672,     0,     0,     0,     0,     0,     0,     0,     0,    89,
      90,    91,    92,    93,    94,    95,    96,     0,    97,    98,
      99,     0,     0,     0,     0,     0,     0,     0,   100,   101,
       0,   102,   103,   104,   105,   106,   107,   108,   109,   673,
     111,   674,   675,  1457,   114,   115,   116,   117,   118,   119,
     676,   677,   120,   121,   678,   679,   124,     0,   125,   126,
     127,   128,   680,     0,   681,     0,   131,   132,   133,   134,
     135,   136,   137,   138,   139,     0,   140,   141,   142,   143,
     144,   145,     0,   146,   147,   148,   149,   682,   683,   684,
     685,   686,   687,   688,   151,   152,   153,   154,   155,   156,
     157,   689,   690,   160,   691,   161,     0,   162,   163,   164,
     165,   166,   167,     0,   168,   169,   170,   171,   172,     0,
       0,   173,   174,   692,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,     0,   184,   185,   186,   187,   693,
     189,   190,   191,   192,   694,   695,   194,     0,   195,   196,
     696,   198,     0,   199,     0,   200,   201,  1458,   202,   203,
     204,   205,   206,   207,     0,   208,     0,   209,   210,     0,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,     0,   222,   223,   224,   225,   226,   227,     0,   228,
     229,   230,   231,   232,   233,   234,   697,   698,     0,   699,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,     0,  1459,   248,   249,   250,   251,     0,   252,   253,
     254,   700,   701,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   702,   279,   703,   281,
     282,   283,   284,   704,   285,   286,   287,   288,   705,   706,
     290,   707,   292,   293,   294,     0,   295,   296,     0,     0,
     708,   298,   299,     0,     0,   300,   301,   302,   303,   304,
     709,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,     0,   316,   317,   710,   319,   320,   321,   322,   323,
     324,     0,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   711,   335,   336,   337,   338,     0,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,     0,
     351,   352,   353,   354,   355,   356,   712,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,     0,   369,
     370,   371,   372,   373,   713,   374,   375,   376,   377,   378,
     379,   380,   381,   714,   383,     0,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   715,
       0,   398,   399,     0,   400,   401,   402,   403,   404,   405,
     406,     0,   716,   717,     0,  1460,   409,   410,   718,   412,
     719,   720,   414,   415,   416,   417,   418,   419,   420,     0,
       0,   421,   422,   423,   424,   425,   721,     0,   426,   427,
     428,   429,   430,   431,   722,     0,   433,   434,   435,   436,
     437,   438,     0,     0,   439,     0,     0,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   723,     0,
       0,     0,     0,     0,     0,   724,   725,     0,     0,     0,
       0,     0,     0,     0,   727,     0,     0,     0,     0,   728,
      88,   667,   529,   668,   669,   670,   671,   672,     0,     0,
       0,     0,     0,     0,     0,     0,    89,    90,    91,    92,
      93,    94,    95,    96,     0,    97,    98,    99,     0,     0,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,   105,   106,   107,   108,   109,   673,   111,   674,   675,
       0,   114,   115,   116,   117,   118,   119,   676,   677,   120,
     121,   678,   679,   124,     0,   125,   126,   127,   128,   680,
       0,   681,     0,   131,   132,   133,   134,   135,   136,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
     146,   147,   148,   149,   682,   683,   684,   685,   686,   687,
     688,   151,   152,   153,   154,   155,   156,   157,   689,   690,
     160,   691,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     692,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   693,   189,   190,   191,
     192,   694,   695,   194,     0,   195,   196,   696,   198,     0,
     199,     0,   200,   201,     0,   202,   203,   204,   205,   206,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,   229,   230,   231,
     232,   233,   234,   697,   698,     0,   699,     0,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,     0,     0,
     248,   249,   250,   251,     0,   252,   253,   254,   700,   701,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   702,   279,   703,   281,   282,   283,   284,
     704,   285,   286,   287,   288,   705,   706,   290,   707,   292,
     293,   294,     0,   295,   296,     0,     0,   708,   298,   299,
       0,     0,   300,   301,   302,   303,   304,   709,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,     0,   316,
     317,   710,   319,   320,   321,   322,   323,   324,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   711,   335,
     336,   337,   338,     0,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,   353,
     354,   355,   356,   712,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,   371,   372,
     373,   713,   374,   375,   376,   377,   378,   379,   380,   381,
     714,   383,     0,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   715,     0,   398,   399,
       0,   400,   401,   402,   403,   404,   405,   406,     0,   716,
     717,     0,     0,   409,   410,   718,   412,   719,   720,   414,
     415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
     423,   424,   425,   721,     0,   426,   427,   428,   429,   430,
     431,   722,     0,   433,   434,   435,   436,   437,   438,     0,
       0,   439,     0,     0,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   723,     0,     0,     0,     0,
       0,     0,   724,   725,   726,     0,     0,     0,     0,     0,
       0,   727,     0,     0,     0,     0,   728,    88,   667,   529,
     668,   669,   670,   671,   672,     0,     0,     0,     0,     0,
       0,     0,     0,    89,    90,    91,    92,    93,    94,    95,
      96,  1200,    97,    98,    99,     0,     0,     0,     0,     0,
       0,     0,   100,   101,     0,   102,   103,   104,   105,   106,
     107,   108,   109,   673,   111,   674,   675,     0,   114,   115,
     116,   117,   118,   119,   676,   677,   120,   121,   678,   679,
     124,     0,   125,   126,   127,   128,   680,     0,   681,     0,
     131,   132,   133,   134,   135,   136,   137,   138,   139,     0,
     140,   141,   142,   143,   144,   145,     0,   146,   147,   148,
     149,   682,   683,   684,   685,   686,   687,   688,   151,   152,
     153,   154,   155,   156,   157,   689,   690,   160,   691,   161,
       0,   162,   163,   164,   165,   166,   167,     0,   168,   169,
     170,   171,   172,     0,     0,   173,   174,   692,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,     0,   184,
     185,   186,   187,   693,   189,   190,   191,   192,   694,   695,
     194,     0,   195,   196,   696,   198,     0,   199,     0,   200,
     201,     0,   202,   203,   204,   205,   206,   207,     0,   208,
       0,   209,   210,     0,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,     0,   222,   223,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,   234,
     697,   698,     0,   699,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,     0,     0,   248,   249,   250,
     251,     0,   252,   253,   254,   700,   701,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     702,   279,   703,   281,   282,   283,   284,   704,   285,   286,
     287,   288,   705,   706,   290,   707,   292,   293,   294,     0,
     295,   296,     0,     0,   708,   298,   299,     0,     0,   300,
     301,   302,   303,   304,   709,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,     0,   316,   317,   710,   319,
     320,   321,   322,   323,   324,     0,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   711,   335,   336,   337,   338,
       0,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     712,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,   372,   373,   713,   374,
     375,   376,   377,   378,   379,   380,   381,   714,   383,     0,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   715,     0,   398,   399,     0,   400,   401,
     402,   403,   404,   405,   406,     0,   716,   717,     0,     0,
     409,   410,   718,   412,   719,   720,   414,   415,   416,   417,
     418,   419,   420,     0,     0,   421,   422,   423,   424,   425,
     721,     0,   426,   427,   428,   429,   430,   431,   722,     0,
     433,   434,   435,   436,   437,   438,     0,     0,   439,     0,
       0,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   723,     0,     0,     0,     0,     0,     0,   724,
     725,     0,     0,     0,     0,     0,     0,     0,   727,     0,
       0,     0,     0,   728,    88,   667,   529,   668,   669,   670,
     671,   672,     0,     0,     0,     0,     0,     0,     0,     0,
      89,    90,    91,    92,    93,    94,    95,    96,     0,    97,
      98,    99,     0,     0,     0,     0,     0,     0,     0,   100,
     101,     0,   102,   103,   104,   105,   106,   107,   108,   109,
     673,   111,   674,   675,     0,   114,   115,   116,   117,   118,
     119,   676,   677,   120,   121,   678,   679,   124,     0,   125,
     126,   127,   128,   680,     0,   681,     0,   131,   132,   133,
     134,   135,   136,   137,   138,   139,     0,   140,   141,   142,
     143,   144,   145,     0,   146,   147,   148,   149,   682,   683,
     684,   685,   686,   687,   688,   151,   152,   153,   154,   155,
     156,   157,   689,   690,   160,   691,   161,     0,   162,   163,
     164,   165,   166,   167,     0,   168,   169,   170,   171,   172,
       0,     0,   173,   174,   692,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,   187,
     693,   189,   190,   191,   192,   694,   695,   194,     0,   195,
     196,   696,   198,     0,   199,     0,   200,   201,     0,   202,
     203,   204,   205,   206,   207,     0,   208,     0,   209,   210,
       0,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,     0,   222,   223,   224,   225,   226,   227,     0,
     228,   229,   230,   231,   232,   233,   234,   697,   698,     0,
     699,     0,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,     0,     0,   248,   249,   250,   251,     0,   252,
     253,   254,   700,   701,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   702,   279,   703,
     281,   282,   283,   284,   704,   285,   286,   287,   288,   705,
     706,   290,   707,   292,   293,   294,     0,   295,   296,     0,
       0,   708,   298,   299,     0,     0,   300,   301,   302,   303,
     304,   709,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,     0,   316,   317,   710,   319,   320,   321,   322,
     323,   324,     0,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   711,   335,   336,   337,   338,     0,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
       0,   351,   352,   353,   354,   355,   356,   712,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,     0,
     369,   370,   371,   372,   373,   713,   374,   375,   376,   377,
     378,   379,   380,   381,   714,   383,     0,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     715,     0,   398,   399,     0,   400,   401,   402,   403,   404,
     405,   406,     0,   716,   717,     0,     0,   409,   410,   718,
     412,   719,   720,   414,   415,   416,   417,   418,   419,   420,
       0,     0,   421,   422,   423,   424,   425,   721,     0,   426,
     427,   428,   429,   430,   431,   722,     0,   433,   434,   435,
     436,   437,   438,     0,     0,   439,     0,     0,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   723,
       0,     0,     0,     0,     0,     0,   724,   725,     0,     0,
       0,     0,     0,     0,     0,   727,  1313,     0,     0,     0,
     728,    88,   667,   529,   668,   669,   670,   671,   672,     0,
       0,     0,     0,     0,     0,     0,     0,    89,    90,    91,
      92,    93,    94,    95,    96,     0,    97,    98,    99,     0,
       0,     0,     0,     0,     0,     0,   100,   101,     0,   102,
     103,   104,   105,   106,   107,   108,   109,   673,   111,   674,
     675,     0,   114,   115,   116,   117,   118,   119,   676,   677,
     120,   121,   678,   679,   124,     0,   125,   126,   127,   128,
     680,     0,   681,     0,   131,   132,   133,   134,   135,   136,
     137,   138,   139,     0,   140,   141,   142,   143,   144,   145,
       0,   146,   147,   148,   149,   682,   683,   684,   685,   686,
     687,   688,   151,   152,   153,   154,   155,   156,   157,   689,
     690,   160,   691,   161,     0,   162,   163,   164,   165,   166,
     167,     0,   168,   169,   170,   171,   172,     0,     0,   173,
     174,   692,   176,   177,     0,   178,   179,   180,     0,   181,
     182,   183,     0,   184,   185,   186,   187,   693,   189,   190,
     191,   192,   694,   695,   194,     0,   195,   196,   696,   198,
       0,   199,     0,   200,   201,     0,   202,   203,   204,   205,
     206,   207,     0,   208,     0,   209,   210,     0,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,     0,
     222,   223,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,   234,   697,   698,     0,   699,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,     0,
       0,   248,   249,   250,   251,     0,   252,   253,   254,   700,
     701,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   702,   279,   703,   281,   282,   283,
     284,   704,   285,   286,   287,   288,   705,   706,   290,   707,
     292,   293,   294,     0,   295,   296,     0,     0,   708,   298,
     299,     0,     0,   300,   301,   302,   303,   304,   709,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,     0,
     316,   317,   710,   319,   320,   321,   322,   323,   324,     0,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   711,
     335,   336,   337,   338,     0,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,     0,   351,   352,
     353,   354,   355,   356,   712,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,     0,   369,   370,   371,
     372,   373,   713,   374,   375,   376,   377,   378,   379,   380,
     381,   714,   383,     0,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   715,     0,   398,
     399,     0,   400,   401,   402,   403,   404,   405,   406,     0,
     716,   717,     0,     0,   409,   410,   718,   412,   719,   720,
     414,   415,   416,   417,   418,   419,   420,     0,     0,   421,
     422,   423,   424,   425,   721,     0,   426,   427,   428,   429,
     430,   431,   722,     0,   433,   434,   435,   436,   437,   438,
       0,     0,   439,     0,     0,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   723,     0,     0,     0,
       0,     0,     0,   724,   725,     0,     0,     0,     0,     0,
       0,     0,   727,  1447,     0,     0,     0,   728,    88,   667,
     529,   668,   669,   670,   671,   672,     0,     0,     0,     0,
       0,     0,     0,     0,    89,    90,    91,    92,    93,    94,
      95,    96,     0,    97,    98,    99,     0,     0,     0,     0,
       0,     0,     0,   100,   101,     0,   102,   103,   104,   105,
     106,   107,   108,   109,   673,   111,   674,   675,     0,   114,
     115,   116,   117,   118,   119,   676,   677,   120,   121,   678,
     679,   124,     0,   125,   126,   127,   128,   680,     0,   681,
       0,   131,   132,   133,   134,   135,   136,   137,   138,   139,
       0,   140,   141,   142,   143,   144,   145,     0,   146,   147,
     148,   149,   682,   683,   684,   685,   686,   687,   688,   151,
     152,   153,   154,   155,   156,   157,   689,   690,   160,   691,
     161,     0,   162,   163,   164,   165,   166,   167,     0,   168,
     169,   170,   171,   172,     0,     0,   173,   174,   692,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,   187,   693,   189,   190,   191,   192,   694,
     695,   194,     0,   195,   196,   696,   198,     0,   199,     0,
     200,   201,     0,   202,   203,   204,   205,   206,   207,     0,
     208,     0,   209,   210,     0,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,     0,   222,   223,   224,
     225,   226,   227,     0,   228,   229,   230,   231,   232,   233,
     234,   697,   698,     0,   699,     0,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,     0,     0,   248,   249,
     250,   251,     0,   252,   253,   254,   700,   701,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   702,   279,   703,   281,   282,   283,   284,   704,   285,
     286,   287,   288,   705,   706,   290,   707,   292,   293,   294,
       0,   295,   296,     0,     0,   708,   298,   299,     0,     0,
     300,   301,   302,   303,   304,   709,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,     0,   316,   317,   710,
     319,   320,   321,   322,   323,   324,     0,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   711,   335,   336,   337,
     338,     0,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,     0,   351,   352,   353,   354,   355,
     356,   712,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,     0,   369,   370,   371,   372,   373,   713,
     374,   375,   376,   377,   378,   379,   380,   381,   714,   383,
       0,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   715,     0,   398,   399,     0,   400,
     401,   402,   403,   404,   405,   406,     0,   716,   717,     0,
       0,   409,   410,   718,   412,   719,   720,   414,   415,   416,
     417,   418,   419,   420,     0,     0,   421,   422,   423,   424,
     425,   721,     0,   426,   427,   428,   429,   430,   431,   722,
    1656,   433,   434,   435,   436,   437,   438,     0,     0,   439,
       0,     0,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   723,     0,     0,     0,     0,     0,     0,
     724,   725,     0,     0,     0,     0,     0,     0,     0,   727,
       0,     0,     0,     0,   728,    88,   667,   529,   668,   669,
     670,   671,   672,     0,     0,     0,     0,     0,     0,     0,
       0,    89,    90,    91,    92,    93,    94,    95,    96,     0,
      97,    98,    99,     0,     0,     0,     0,     0,     0,     0,
     100,   101,     0,   102,   103,   104,   105,   106,   107,   108,
     109,   673,   111,   674,   675,     0,   114,   115,   116,   117,
     118,   119,   676,   677,   120,   121,   678,   679,   124,     0,
     125,   126,   127,   128,   680,     0,   681,     0,   131,   132,
     133,   134,   135,   136,   137,   138,   139,     0,   140,   141,
     142,   143,   144,   145,     0,   146,   147,   148,   149,   682,
     683,   684,   685,   686,   687,   688,   151,   152,   153,   154,
     155,   156,   157,   689,   690,   160,   691,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   692,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   693,   189,   190,   191,   192,   694,   695,   194,     0,
     195,   196,   696,   198,     0,   199,     0,   200,   201,  1458,
     202,   203,   204,   205,   206,   207,     0,   208,     0,   209,
     210,     0,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,   234,   697,   698,
       0,   699,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,     0,     0,   248,   249,   250,   251,     0,
     252,   253,   254,   700,   701,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   702,   279,
     703,   281,   282,   283,   284,   704,   285,   286,   287,   288,
     705,   706,   290,   707,   292,   293,   294,     0,   295,   296,
       0,     0,   708,   298,   299,     0,     0,   300,   301,   302,
     303,   304,   709,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,     0,   316,   317,   710,   319,   320,   321,
     322,   323,   324,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   711,   335,   336,   337,   338,     0,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,     0,   351,   352,   353,   354,   355,   356,   712,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   372,   373,   713,   374,   375,   376,
     377,   378,   379,   380,   381,   714,   383,     0,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   715,     0,   398,   399,     0,   400,   401,   402,   403,
     404,   405,   406,     0,   716,   717,     0,     0,   409,   410,
     718,   412,   719,   720,   414,   415,   416,   417,   418,   419,
     420,     0,     0,   421,   422,   423,   424,   425,   721,     0,
     426,   427,   428,   429,   430,   431,   722,     0,   433,   434,
     435,   436,   437,   438,     0,     0,   439,     0,     0,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     723,     0,     0,     0,     0,     0,     0,   724,   725,     0,
       0,     0,     0,     0,     0,     0,   727,     0,     0,     0,
       0,   728,    88,   667,   529,   668,   669,   670,   671,   672,
       0,     0,     0,     0,     0,     0,     0,     0,    89,    90,
      91,    92,    93,    94,    95,    96,     0,    97,    98,    99,
       0,     0,     0,     0,     0,     0,     0,   100,   101,     0,
     102,   103,   104,   105,   106,   107,   108,   109,   673,   111,
     674,   675,     0,   114,   115,   116,   117,   118,   119,   676,
     677,   120,   121,   678,   679,   124,     0,   125,   126,   127,
     128,   680,     0,   681,     0,   131,   132,   133,   134,   135,
     136,   137,   138,   139,     0,   140,   141,   142,   143,   144,
     145,     0,   146,   147,   148,   149,   682,   683,   684,   685,
     686,   687,   688,   151,   152,   153,   154,   155,   156,   157,
     689,   690,   160,   691,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   692,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   693,   189,
     190,   191,   192,   694,   695,   194,     0,   195,   196,   696,
     198,     0,   199,     0,   200,   201,     0,   202,   203,   204,
     205,   206,   207,     0,   208,     0,   209,   210,     0,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,   228,   229,
     230,   231,   232,   233,   234,   697,   698,     0,   699,     0,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
       0,     0,   248,   249,   250,   251,     0,   252,   253,   254,
     700,   701,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   702,   279,   703,   281,   282,
     283,   284,   704,   285,   286,   287,   288,   705,   706,   290,
     707,   292,   293,   294,     0,   295,   296,     0,     0,   708,
     298,   299,     0,     0,   300,   301,   302,   303,   304,   709,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
       0,   316,   317,   710,   319,   320,   321,   322,   323,   324,
       0,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     711,   335,   336,   337,   338,     0,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   712,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,     0,   369,   370,
     371,   372,   373,   713,   374,   375,   376,   377,   378,   379,
     380,   381,   714,   383,     0,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   715,     0,
     398,   399,     0,   400,   401,   402,   403,   404,   405,   406,
       0,   716,   717,     0,     0,   409,   410,   718,   412,   719,
     720,   414,   415,   416,   417,   418,   419,   420,     0,     0,
     421,   422,   423,   424,   425,   721,     0,   426,   427,   428,
     429,   430,   431,   722,     0,   433,   434,   435,   436,   437,
     438,     0,     0,   439,     0,     0,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   723,     0,     0,
       0,     0,     0,     0,   724,   725,     0,     0,     0,     0,
       0,     0,     0,   727,     0,     0,     0,     0,   728,    88,
     667,   529,   668,   669,   670,   671,   672,     0,     0,     0,
       0,     0,     0,     0,     0,    89,    90,    91,    92,    93,
      94,    95,    96,     0,    97,    98,    99,     0,     0,     0,
       0,     0,     0,     0,   100,   101,     0,   102,   103,   104,
     105,   106,   107,   108,   109,   673,   111,   674,   675,     0,
     114,   115,   116,   117,   118,   119,   676,   677,   120,   121,
     678,   679,   124,     0,   125,   126,   127,   128,   680,     0,
     681,     0,   131,   132,   133,   134,   135,   136,   137,   138,
     139,     0,   140,   141,   142,   143,   144,   145,     0,   146,
     147,   148,   149,   682,   683,   684,   685,   686,   687,   688,
     151,   152,   153,   154,   155,   156,   157,   689,   690,   160,
     691,   161,     0,   162,   163,   164,   165,   166,   167,     0,
     168,   169,   170,   171,   172,     0,     0,   173,   174,   692,
     176,   177,     0,   178,   179,   180,     0,   181,   182,   183,
       0,   184,   185,   186,   187,   693,   189,   190,   191,   192,
     694,   695,   194,     0,   195,   196,   696,   198,     0,   199,
       0,   200,   201,     0,   202,   203,   204,   205,   206,   207,
       0,   208,     0,   209,   210,     0,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,     0,   222,   223,
     224,   225,   226,   227,     0,   228,   229,   230,   231,   232,
     233,   234,   697,   698,     0,   699,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,     0,     0,   248,
     249,   250,   251,     0,   252,   253,   254,   700,   701,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   702,   279,   703,   281,   282,   283,   284,   704,
     285,   286,   287,   288,   705,   706,   290,   707,   292,   293,
     294,     0,   295,   296,     0,     0,   708,   298,   299,     0,
       0,   300,   301,   302,   303,   304,   709,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,     0,   316,   317,
     710,   319,   320,   321,   322,   323,   324,     0,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   711,   335,   336,
     337,   338,     0,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,     0,   351,   352,   353,   354,
     355,   356,   712,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,     0,   369,   370,   371,   372,   373,
     713,   374,   375,   376,   377,   378,   379,   380,   381,   714,
     383,     0,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   715,     0,   398,   399,     0,
     400,   401,   402,   403,   404,   405,   406,     0,   716,   717,
       0,     0,   409,   410,   718,   412,   719,   720,   414,   415,
     416,   417,   418,   419,   420,     0,     0,   421,   422,   423,
     424,   425,   721,     0,   426,   427,   428,   429,   430,   431,
     722,     0,   433,   434,   435,   436,   437,   438,     0,     0,
     439,     0,     0,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   723,     0,     0,     0,     0,     0,
       0,  1203,  1204,     0,     0,     0,     0,     0,     0,     0,
     727,     0,     0,     0,     0,   728,    88,  1581,   529,   668,
     669,   670,   671,   672,     0,     0,     0,     0,     0,     0,
       0,     0,    89,    90,    91,    92,    93,    94,    95,    96,
       0,    97,    98,    99,     0,     0,     0,     0,     0,     0,
       0,   100,   101,     0,   102,   103,   104,   105,   106,   107,
     108,   109,   673,   111,   674,   675,     0,   114,   115,   116,
     117,   118,   119,   676,   677,   120,   121,   678,   679,   124,
       0,   125,   126,   127,   128,   680,     0,   681,     0,   131,
     132,   133,   134,   135,   136,   137,   138,   139,     0,   140,
     141,   142,   143,   144,   145,     0,   146,   147,   148,   149,
     682,   683,   684,   685,   686,   687,   688,   151,   152,   153,
     154,   155,   156,   157,   689,   690,   160,   691,   161,     0,
     162,   163,   164,   165,   166,   167,     0,   168,   169,   170,
     171,   172,     0,     0,   173,   174,   692,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,   187,   693,   189,   190,   191,   192,   694,   695,   194,
       0,   195,   196,   696,   198,     0,   199,     0,   200,   201,
       0,   202,   203,   204,   205,   206,   207,     0,   208,     0,
     209,   210,     0,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,     0,   222,   223,   224,   225,   226,
     227,     0,   228,   229,   230,   231,   232,   233,   234,   697,
     698,     0,   699,     0,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,     0,     0,   248,   249,   250,   251,
       0,   252,   253,   254,   700,   701,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   702,
     279,   703,   281,   282,   283,   284,   704,   285,   286,   287,
     288,   705,   706,   290,   707,   292,   293,   294,     0,   295,
     296,     0,     0,   708,   298,   299,     0,     0,   300,   301,
     302,   303,   304,   709,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,     0,   316,   317,   710,   319,   320,
     321,   322,   323,   324,     0,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   711,   335,   336,   337,   338,     0,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,     0,   351,   352,   353,   354,   355,   356,   712,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,     0,   369,   370,   371,   372,   373,   713,   374,   375,
     376,   377,   378,   379,   380,   381,   714,   383,     0,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   715,     0,   398,   399,     0,   400,   401,   402,
     403,   404,   405,   406,     0,   716,   717,     0,     0,   409,
     410,   718,   412,   719,   720,   414,   415,   416,   417,   418,
     419,   420,     0,     0,   421,   422,   423,   424,   425,   721,
       0,   426,   427,   428,   429,   430,   431,   722,     0,   433,
     434,   435,   436,   437,   438,     0,     0,   439,     0,     0,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   723,     0,     0,     0,     0,     0,     0,   724,   725,
       0,     0,     0,     0,     0,     0,     0,   727,     0,     0,
       0,     0,   728,    88,   667,   529,   668,   669,   670,   671,
     672,     0,     0,     0,     0,     0,     0,     0,     0,    89,
      90,    91,    92,    93,    94,    95,    96,     0,    97,    98,
      99,     0,     0,     0,     0,     0,     0,     0,   100,   101,
       0,   102,   103,   104,   105,   106,   107,   108,   109,   673,
     111,   674,   675,     0,   114,   115,   116,   117,   118,   119,
     676,   677,   120,   121,   678,   679,   124,     0,   125,   126,
     127,   128,   680,     0,   681,     0,   131,   132,   133,   134,
     135,   136,   137,   138,   139,     0,   140,   141,   142,   143,
     144,   145,     0,   146,   147,   148,   149,   682,   683,   684,
     685,   686,   687,   688,   151,   152,   153,   154,   155,   156,
     157,   689,   690,   160,   691,   161,     0,   162,   163,   164,
     165,   166,   167,     0,   168,   169,   170,   171,   172,     0,
       0,   173,   174,   692,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,     0,   184,   185,   186,   187,   693,
     189,   190,   191,   192,   694,   695,   194,     0,   195,   196,
     696,   198,     0,   199,     0,   200,   201,     0,   202,   203,
     204,   205,   206,   207,     0,   208,     0,   209,   210,     0,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,     0,   222,   223,   224,   225,   226,   227,     0,   228,
     229,   230,   231,   232,   233,   234,   697,   698,     0,   699,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,     0,     0,   248,   249,   250,   251,     0,   252,   253,
     254,   700,   701,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   702,   279,   703,   281,
     282,   283,   284,   704,   285,   286,   287,   288,   705,   706,
     290,   707,   292,   293,   294,     0,   295,   296,     0,     0,
     708,   298,   299,     0,     0,   300,   301,   302,   303,   304,
     709,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,     0,   316,   317,   710,   319,   320,   321,   322,   323,
     324,     0,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   711,   335,   336,   337,   338,     0,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,     0,
     351,   352,   353,   354,   355,   356,   712,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,     0,   369,
     370,   371,   372,   373,   713,   374,   375,   376,   377,   378,
     379,   380,   381,   714,   383,     0,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   715,
       0,   398,   399,     0,   400,   401,   402,   403,   404,   405,
     406,     0,   716,   717,     0,     0,   409,   410,   718,   412,
     719,   720,   414,   415,   416,   417,   418,   419,   420,     0,
       0,   421,   422,   423,   424,   425,   721,     0,   426,   427,
     428,   429,   430,   431,   722,     0,   433,   434,   435,   436,
     437,   438,     0,     0,   439,     0,     0,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   723,     0,
       0,     0,     0,     0,     0,   724,   725,     0,     0,     0,
       0,     0,     0,     0,  2411,     0,     0,     0,     0,   728,
      88,   667,   529,   668,   669,   670,   671,   672,     0,     0,
       0,     0,     0,     0,     0,     0,    89,    90,    91,    92,
      93,    94,    95,    96,     0,    97,    98,    99,     0,     0,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,   105,   106,   107,   108,  2610,   673,   111,   674,   675,
       0,   114,   115,   116,   117,   118,   119,   676,   677,   120,
     121,   678,   679,   124,     0,   125,   126,   127,   128,   680,
       0,   681,     0,   131,   132,   133,   134,   135,   136,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
     146,   147,   148,  2611,   682,   683,   684,   685,   686,   687,
     688,   151,   152,   153,   154,   155,   156,   157,   689,   690,
     160,   691,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     692,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   693,   189,   190,   191,
     192,   694,   695,   194,     0,   195,   196,   696,   198,     0,
     199,     0,   200,   201,     0,   202,   203,   204,   205,   206,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,   229,   230,   231,
     232,   233,   234,   697,   698,     0,   699,     0,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,     0,     0,
     248,   249,   250,   251,     0,   252,   253,   254,   700,   701,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   702,   279,   703,   281,   282,   283,   284,
     704,   285,   286,   287,   288,   705,   706,   290,   707,   292,
     293,   294,     0,   295,   296,     0,     0,   708,   298,   299,
       0,     0,   300,   301,   302,   303,   304,   709,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,     0,   316,
     317,   710,   319,   320,   321,   322,   323,   324,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   711,   335,
     336,   337,   338,     0,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,   353,
     354,   355,   356,   712,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,   371,   372,
     373,   713,   374,   375,   376,   377,   378,   379,   380,   381,
     714,   383,     0,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   715,     0,   398,   399,
       0,   400,   401,   402,   403,   404,   405,   406,     0,   716,
     717,     0,     0,   409,   410,   718,   412,   719,   720,   414,
     415,   416,   417,  2612,   419,   420,     0,     0,   421,   422,
     423,   424,   425,   721,     0,   426,   427,   428,   429,   430,
     431,   722,     0,   433,   434,   435,   436,   437,   438,     0,
       0,   439,     0,     0,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   723,     0,     0,     0,     0,
       0,     0,   724,   725,     0,     0,     0,     0,     0,     0,
       0,   727,     0,     0,     0,     0,   728,    88,   667,   529,
     668,   669,   670,   671,   672,     0,     0,     0,     0,     0,
       0,     0,     0,    89,    90,    91,    92,    93,    94,    95,
      96,     0,    97,    98,    99,     0,     0,     0,     0,     0,
       0,     0,   100,   101,     0,   102,   103,   104,   105,   106,
     107,   108,   109,   673,   111,   674,   675,     0,   114,   115,
     116,   117,   118,   119,   676,   677,   120,   121,   678,   679,
     124,     0,   125,   126,   127,   128,   680,     0,   681,     0,
     131,   132,   133,   134,   135,   136,   137,   138,   139,     0,
     140,   141,   142,   143,   144,   145,     0,   146,   147,   148,
    2611,   682,   683,   684,   685,   686,   687,   688,   151,   152,
     153,   154,   155,   156,   157,   689,   690,   160,   691,   161,
       0,   162,   163,   164,   165,   166,   167,     0,   168,   169,
     170,   171,   172,     0,     0,   173,   174,   692,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,     0,   184,
     185,   186,   187,   693,   189,   190,   191,   192,   694,   695,
     194,     0,   195,   196,   696,   198,     0,   199,     0,   200,
     201,     0,   202,   203,   204,   205,   206,   207,     0,   208,
       0,   209,   210,     0,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,     0,   222,   223,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,   234,
     697,   698,     0,   699,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,     0,     0,   248,   249,   250,
     251,     0,   252,   253,   254,   700,   701,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     702,   279,   703,   281,   282,   283,   284,   704,   285,   286,
     287,   288,   705,   706,   290,   707,   292,   293,   294,     0,
     295,   296,     0,     0,   708,   298,   299,     0,     0,   300,
     301,   302,   303,   304,   709,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,     0,   316,   317,   710,   319,
     320,   321,   322,   323,   324,     0,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   711,   335,   336,   337,   338,
       0,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     712,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,   372,   373,   713,   374,
     375,   376,   377,   378,   379,   380,   381,   714,   383,     0,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   715,     0,   398,   399,     0,   400,   401,
     402,   403,   404,   405,   406,     0,   716,   717,     0,     0,
     409,   410,   718,   412,   719,   720,   414,   415,   416,   417,
    2612,   419,   420,     0,     0,   421,   422,   423,   424,   425,
     721,     0,   426,   427,   428,   429,   430,   431,   722,     0,
     433,   434,   435,   436,   437,   438,     0,     0,   439,     0,
       0,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   723,     0,     0,     0,     0,     0,     0,   724,
     725,     0,     0,     0,     0,     0,     0,     0,   727,     0,
       0,     0,     0,   728,    88,   667,   529,   668,   669,   670,
     671,   672,     0,     0,     0,     0,     0,     0,     0,     0,
      89,    90,    91,    92,    93,    94,    95,    96,     0,    97,
      98,    99,     0,     0,     0,     0,     0,     0,     0,   100,
     101,     0,   102,   103,   104,   105,   106,   107,   108,   109,
     673,   111,   674,   675,     0,   114,   115,   116,   117,   118,
     119,   676,   677,   120,   121,   678,   679,   124,     0,   125,
     126,   127,   128,   680,     0,   681,     0,   131,   132,   133,
     134,   135,   136,   137,   138,   139,     0,   140,   141,   142,
     143,   144,   145,     0,   146,   147,   148,   149,   682,   683,
     684,   685,   686,   687,   688,   151,   152,   153,   154,   155,
     156,   157,   689,   690,   160,     0,   161,     0,   162,   163,
     164,   165,   166,   167,     0,   168,   169,   170,   171,   172,
       0,     0,   173,   174,   692,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,   187,
     693,   189,   190,   191,   192,   694,   695,   194,     0,   195,
     196,   696,   198,     0,   199,     0,   200,   201,     0,   202,
     203,   204,   205,   206,   207,     0,   208,     0,   209,   210,
       0,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,     0,   222,   223,   224,   225,   226,   227,     0,
     228,   229,   230,   231,   232,   233,   234,   697,   698,     0,
     699,     0,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,     0,     0,   248,   249,   250,   251,     0,   252,
     253,   254,   700,   701,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   702,   279,   703,
     281,   282,   283,   284,     0,   285,   286,   287,   288,   705,
     706,   290,   707,   292,   293,   294,     0,   295,   296,     0,
       0,   708,   298,   299,     0,     0,   300,   301,   302,   303,
     304,   709,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,     0,   316,   317,   710,   319,   320,   321,   322,
     323,   324,     0,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   711,   335,   336,   337,   338,     0,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
       0,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,     0,
     369,   370,   371,   372,   373,   713,   374,   375,   376,   377,
     378,   379,   380,   381,   714,   383,     0,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     715,     0,   398,   399,     0,   400,   401,   402,   403,   404,
     405,   406,     0,   716,   717,     0,     0,   409,   410,   718,
     412,   719,   720,   414,   415,   416,   417,   418,   419,   420,
       0,     0,   421,   422,   423,   424,   425,   721,     0,   426,
     427,   428,   429,   430,   431,   722,     0,   433,   434,   435,
     436,   437,   438,     0,     0,   439,     0,     0,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,     0,
       0,     0,     0,     0,     0,     0,  1439,  1440,     0,     0,
      88,   667,   529,   668,   669,  1441,   671,   672,     0,     0,
     728,     0,     0,     0,     0,     0,    89,    90,    91,    92,
      93,    94,    95,    96,     0,    97,    98,    99,     0,     0,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,   105,   106,   107,   108,   109,   673,   111,   674,   675,
       0,   114,   115,   116,   117,   118,   119,   676,   677,   120,
     121,   678,   679,   124,     0,   125,   126,   127,   128,   680,
       0,   681,     0,   131,   132,   133,   134,   135,   136,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
     146,   147,   148,   149,   682,   683,   684,   685,   686,   687,
     688,   151,   152,   153,   154,   155,   156,   157,   689,   690,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     692,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   693,   189,   190,   191,
     192,   694,   695,   194,     0,   195,   196,   696,   198,     0,
     199,     0,   200,   201,     0,   202,   203,   204,   205,   206,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,   229,   230,   231,
     232,   233,   234,   697,   698,     0,   699,     0,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,     0,     0,
     248,   249,   250,   251,     0,   252,   253,   254,   700,   701,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   702,   279,   703,   281,   282,   283,   284,
       0,   285,   286,   287,   288,   705,   706,   290,   707,   292,
     293,   294,     0,   295,   296,     0,     0,   297,   298,   299,
       0,     0,   300,   301,   302,   303,   304,   709,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,     0,   316,
     317,   710,   319,   320,   321,   322,   323,   324,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   711,   335,
     336,   337,   338,     0,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,   353,
     354,   355,   356,  1570,  1571,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,   371,   372,
     373,   713,   374,   375,   376,   377,   378,   379,   380,   381,
     714,   383,     0,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   715,     0,   398,   399,
       0,   400,   401,   402,   403,   404,   405,   406,     0,   716,
     717,     0,     0,   409,   410,   718,   412,   719,   720,   414,
     415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
     423,   424,   425,   721,     0,   426,   427,   428,   429,   430,
     431,   722,     0,   433,   434,   435,   436,   437,   438,     0,
       0,   439,     0,     0,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,     0,     0,     0,     0,     0,
       0,     0,  1572,  1573,     0,     0,     0,     0,     0,     0,
       0,  1441,     0,     0,     0,     0,   728,    88,   667,   529,
     668,   669,   670,   671,   672,     0,     0,     0,     0,     0,
       0,     0,     0,    89,    90,    91,    92,    93,    94,    95,
      96,     0,    97,    98,    99,     0,     0,     0,     0,     0,
       0,     0,   100,   101,     0,   102,   103,   104,   105,   106,
     107,   108,   109,   673,   111,   674,   675,     0,   114,   115,
     116,   117,   118,   119,   676,   677,   120,   121,   678,   679,
     124,     0,   125,   126,   127,   128,   680,     0,   681,     0,
     131,   132,   133,   134,   135,   136,   137,   138,   139,     0,
     140,   141,   142,   143,   144,   145,     0,   146,   147,   148,
     149,   682,   683,   684,   685,   686,   687,   688,   151,   152,
     153,   154,   155,   156,   157,   689,   690,   160,     0,   161,
       0,   162,   163,   164,   165,   166,   167,     0,   168,   169,
     170,   171,   172,     0,     0,   173,   174,   692,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,     0,   184,
     185,   186,   187,   693,   189,   190,   191,   192,   694,   695,
     194,     0,   195,   196,   696,   198,     0,   199,     0,   200,
     201,     0,   202,   203,   204,   205,   206,   207,     0,   208,
       0,   209,   210,     0,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,     0,   222,   223,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,   234,
     697,   698,     0,   699,     0,   238,     0,   240,   241,   242,
     243,   244,   245,   246,   247,     0,     0,   248,   249,   250,
     251,     0,   252,   253,   254,   700,   701,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     702,   279,   703,   281,   282,   283,   284,     0,   285,   286,
     287,   288,   705,   706,   290,   707,   292,   293,   294,     0,
     295,   296,     0,     0,   708,   298,   299,     0,     0,   300,
     301,   302,   303,   304,   709,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,     0,   316,   317,   710,   319,
     320,   321,   322,   323,   324,     0,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   711,   335,   336,   337,   338,
       0,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,   372,   373,   713,   374,
     375,   376,   377,   378,   379,   380,   381,   714,   383,     0,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   715,     0,   398,   399,     0,   400,   401,
     402,   403,   404,   405,   406,     0,   716,   717,     0,     0,
     409,   410,   718,   412,   719,   720,   414,   415,   416,   417,
     418,   419,   420,     0,     0,   421,   422,   423,   424,   425,
     721,     0,   426,   427,   428,   429,   430,   431,   722,     0,
     433,   434,   435,   436,   437,   438,     0,     0,   439,     0,
       0,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,     0,     0,     0,     0,     0,     0,     0,  1439,
    1440,     0,     0,     0,     0,     0,     0,     0,  1441,     0,
       0,     0,     0,   728,    88,   667,   529,   668,   669,   670,
     671,   672,     0,     0,     0,     0,     0,     0,     0,     0,
      89,    90,    91,    92,    93,    94,    95,    96,     0,    97,
      98,    99,     0,     0,     0,     0,     0,     0,     0,   100,
     101,     0,   102,   103,   104,   105,   106,   107,   108, -1534,
     673,   111,   674,   675,     0,   114,   115,   116,   117,   118,
     119,   676,   677,   120,   121,   678,   679,   124,     0,   125,
     126,   127,   128,   680,     0,   681,     0,   131,   132,   133,
     134,   135,   136,   137,   138,   139,     0,   140,   141,   142,
     143,   144,   145,     0,   146,   147,   148,  2611,   682,   683,
     684,   685,   686,   687,   688,   151,   152,   153,   154,   155,
     156,   157,   689,   690,   160,   691,   161,     0,   162,   163,
     164,   165,   166,   167,     0,   168,   169,   170,   171,   172,
       0,     0,   173,   174,   692,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,   187,
     693,   189,   190,   191,   192,   694,   695,   194,     0,   195,
     196,   696,   198,     0,   199,     0,   200,   201,     0,   202,
     203,   204,   205, -1534,   207,     0,   208,     0,   209,   210,
       0,   211,   212,   213,   214,   215,   216, -1534,   218,   219,
     220,   221,     0,   222,   223,   224,   225,   226,   227,     0,
     228,   229,   230,   231,   232,   233,   234,   697,   698,     0,
     699,     0,   238,     0,     0,   241,   242,   243,   244,   245,
     246,   247,     0,     0,   248,   249,   250, -1534,     0,   252,
     253,   254,   700,   701,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   702,   279,   703,
     281,   282,   283,   284,     0,   285,   286,     0,   288,   705,
     706,   290,   707,   292,   293,   294,     0,   295,   296,     0,
       0,   708,   298,   299,     0,     0,   300,   301,   302,   303,
     304,   709,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,     0,   316,   317,   710,   319,   320,   321,   322,
     323,   324,     0,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   711,   335,   336,   337,   338,     0,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
       0,   351,   352,   353,   354,   355,   356,   712,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,     0,
     369,   370,   371,   372,   373,   713,   374,   375,   376,   377,
     378, -1534,   380,   381,   714,   383,     0,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     715,     0,   398,   399,     0,   400,   401,   402,   403,   404,
     405,   406,     0,   716,   717,     0,     0,   409,   410,   718,
     412,   719,   720,   414,   415,   416,   417,  2612,   419,   420,
       0,     0,   421,   422,   423,   424,   425,   721,     0,   426,
     427,   428,   429,   430,   431,   722,     0,   433,   434,   435,
     436,   437,   438,     0,     0,   439,     0,     0,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460, -1534,
       0,     0,     0,     0,     0,     0,   724,   725,     0,     0,
       0,     0,     0,     0,     0,   727,     0,     0,     0,     0,
     728,    88,   667,   529,   668,   669,   670,   671,   672,     0,
       0,     0,     0,     0,     0,     0,     0,    89,    90,    91,
      92,    93,    94,    95,    96,     0,    97,    98,    99,     0,
       0,     0,     0,     0,     0,     0,   100,   101,     0,   102,
     103,   104,   105,   106,   107,   108,     0,   673,   111,   674,
     675,     0,   114,   115,   116,   117,   118,   119,   676,   677,
     120,   121,   678,   679,   124,     0,   125,   126,   127,   128,
     680,     0,   681,     0,   131,   132,   133,   134,   135,   136,
     137,   138,   139,     0,   140,   141,   142,   143,   144,   145,
       0,   146,   147,   148,   149,   682,   683,   684,   685,   686,
     687,   688,   151,   152,   153,   154,   155,   156,   157,   689,
     690,   160,   691,   161,     0,   162,   163,   164,   165,   166,
     167,     0,   168,   169,   170,   171,   172,     0,     0,   173,
     174,   692,   176,   177,     0,   178,   179,   180,     0,   181,
       0,   183,     0,   184,   185,   186,   187,   693,   189,   190,
     191,   192,   694,   695,   194,     0,   195,   196,   696,   198,
       0,   199,     0,   200,   201,     0,   202,   203,   204,   205,
       0,   207,     0,   208,     0,   209,   210,     0,   211,   212,
     213,   214,   215,   216,     0,   218,   219,   220,   221,     0,
     222,   223,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,   234,   697,   698,     0,   699,     0,   238,
       0,     0,   241,   242,   243,   244,   245,   246,   247,     0,
       0,   248,   249,   250,     0,     0,   252,   253,   254,   700,
     701,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   702,   279,   703,   281,   282,   283,
     284,     0,   285,   286,     0,   288,   705,   706,   290,   707,
     292,   293,   294,     0,   295,   296,     0,     0,   708,   298,
     299,     0,     0,   300,   301,   302,   303,   304,   709,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,     0,
     316,   317,   710,   319,   320,   321,   322,   323,   324,     0,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   711,
     335,   336,   337,   338,     0,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,     0,   351,   352,
     353,   354,   355,   356,   712,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,     0,   369,   370,   371,
     372,   373,   713,   374,   375,   376,   377,   378,     0,   380,
     381,   714,   383,     0,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   715,     0,   398,
     399,     0,   400,   401,   402,   403,   404,   405,   406,     0,
     716,   717,     0,     0,   409,   410,   718,   412,   719,   720,
     414,   415,   416,   417,   418,   419,   420,     0,     0,   421,
     422,   423,   424,   425,   721,     0,   426,   427,   428,   429,
     430,   431,   722,     0,   433,   434,   435,   436,   437,   438,
       0,     0,   439,     0,     0,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,     0,     0,     0,     0,
       0,     0,   485,   724,   725,     0,     0,     0,     0,     0,
       0,     0,   727,     0,     0,     0,     0,   728,    89,    90,
      91,    92,    93,    94,    95,    96,     0,    97,    98,    99,
       0,     0,     0,     0,     0,  2081,     0,   100,   101,     0,
     102,   103,   104,     0,   106,   107,   108,   109,   110,     0,
     112,   113,     0,   114,   115,   116,   117,   118,   119,     0,
       0,   120,   121,   122,   123,   124,     0,   125,   126,   127,
     128,   129,     0,     0,     0,   131,   132,   133,   134,   135,
       0,   137,   138,   139,     0,   140,   141,   142,   143,   144,
     145,     0,  -579,   147,   148,   149,     0,     0,     0,     0,
       0,     0,     0,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,     0,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   175,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,     0,   194,     0,   195,   196,   197,
     198,     0,   199,     0,   200,     0,     0,  -579,   203,   204,
     205,     0,   207,     0,   208,     0,   209,   210,     0,   211,
     212,   213,   214,   215,   216,     0,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,   228,  -579,
     230,   231,   232,   233,   234,   235,   236,     0,   237,     0,
     238,     0,     0,   241,  -579,   243,   244,   245,   246,   247,
       0,     0,   248,  -579,   250,     0,     0,   252,   253,   254,
       0,     0,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,  -579,   280,   281,   282,
     283,   284,     0,   285,   286,     0,   288,     0,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,     0,   297,
     298,   299,     0,     0,   300,   301,     0,   303,     0,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
       0,   316,   317,   318,   319,   320,   321,   322,   323,   324,
       0,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,     0,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,     0,   351,
     352,  -579,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,     0,   369,   370,
     371,   372,   373,     0,   374,   375,   376,   377,   378,     0,
     380,   381,   382,   383,     0,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,     0,
     398,   399,     0,   400,  -579,   402,   403,   404,   405,   406,
       0,   407,   408,     0,     0,   409,   410,   411,   412,   413,
       0,   414,   415,   416,   417,   418,   419,   420,     0,     0,
     421,   422,   423,   424,   425,     0,     0,   426,   427,   428,
     429,   430,   431,   432,     0,   433,     0,   435,   436,   437,
     438,     0,     0,   439,     0,     0,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,     0,     0,    88,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   786,    89,    90,    91,    92,    93,
      94,    95,    96,     0,    97,    98,    99,     0,     0,     0,
       0,     0,     0,     0,   100,   101,     0,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,     0,
     114,   115,   116,   117,   118,   119,     0,   677,   120,   121,
     122,   123,   124,     0,   125,   126,   127,   128,   680,     0,
     681,     0,   131,   132,   133,   134,   135,   136,   137,   138,
     139,     0,   140,   141,   142,   143,   144,   145,     0,   146,
     147,   148,   149,   682,   683,   684,   685,   686,   687,   688,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
       0,   161,     0,   162,   163,   164,   165,   166,   167,     0,
     168,   169,   170,   171,   172,     0,     0,   173,   174,   175,
     176,   177,     0,   178,   179,   180,     0,   181,   182,   183,
       0,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     694,     0,   194,     0,   195,   196,   197,   198,     0,   199,
       0,   200,   201,     0,   202,   203,   204,   205,   206,   207,
       0,   208,     0,   209,   210,     0,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,     0,   222,   223,
     224,   225,   226,   227,     0,   228,   229,   230,   231,   232,
     233,   234,   235,   236,     0,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,  1837,     0,   248,
     249,   250,   251,     0,   252,   253,   254,   700,   701,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,     0,
     285,   286,   287,   288,     0,   706,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   554,   297,   298,   299,     0,
       0,   300,   301,   302,   303,   304,   709,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,     0,   316,   317,
     710,   319,   320,   321,   322,   323,   324,     0,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,     0,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,     0,   351,   352,   353,   354,
     355,   356,   357,  1838,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,    24,   369,   370,   371,   372,   373,
     713,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,     0,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   715,     0,   398,   399,    28,
     400,   401,   402,   403,   404,   405,   406,     0,   407,   408,
       0,     0,   409,   410,   718,   412,   719,     0,   414,   415,
     416,   417,   418,   419,   420,     0,     0,   421,   422,   423,
     424,   425,   721,     0,   426,   427,   428,   429,   430,   590,
     432,     0,   433,   434,   435,   436,   437,   438,     0,     0,
     439,     0,    31,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,     0,    88,    32,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1839,    89,    90,    91,    92,    93,    94,    95,    96,     0,
      97,    98,    99,     0,     0,     0,     0,     0,     0,     0,
     100,   101,     0,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,     0,   114,   115,   116,   117,
     118,   119,     0,   677,   120,   121,   122,   123,   124,     0,
     125,   126,   127,   128,   680,     0,   681,     0,   131,   132,
     133,   134,   135,   136,   137,   138,   139,     0,   140,   141,
     142,   143,   144,   145,     0,   146,   147,   148,   149,   682,
     683,   684,   685,   686,   687,   688,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,     0,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   694,     0,   194,     0,
     195,   196,   197,   198,     0,   199,     0,   200,   201,     0,
     202,   203,   204,   205,   206,   207,     0,   208,     0,   209,
     210,     0,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,  1837,     0,   248,   249,   250,   251,     0,
     252,   253,   254,   700,   701,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,     0,   285,   286,   287,   288,
       0,   706,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   554,   297,   298,   299,     0,     0,   300,   301,   302,
     303,   304,   709,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,     0,   316,   317,   710,   319,   320,   321,
     322,   323,   324,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,     0,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,     0,   351,   352,   353,   354,   355,   356,   357,  1838,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   372,   373,   713,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,     0,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   715,     0,   398,   399,     0,   400,   401,   402,   403,
     404,   405,   406,     0,   407,   408,     0,     0,   409,   410,
     718,   412,   719,     0,   414,   415,   416,   417,   418,   419,
     420,     0,     0,   421,   422,   423,   424,   425,   721,     0,
     426,   427,   428,   429,   430,   431,   432,     0,   433,   434,
     435,   436,   437,   438,     0,     0,   439,     0,     0,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
       0,    88,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1839,    89,    90,    91,
      92,    93,    94,    95,    96,     0,    97,    98,    99,     0,
       0,     0,     0,     0,     0,     0,   100,   101,     0,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,     0,   114,   115,   116,   117,   118,   119,     0,   677,
     120,   121,   122,   123,   124,     0,   125,   126,   127,   128,
     680,     0,   681,     0,   131,   132,   133,   134,   135,   136,
     137,   138,   139,     0,   140,   141,   142,   143,   144,   145,
       0,   146,   147,   148,   149,   682,   683,   684,   685,   686,
     687,   688,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,     0,   161,     0,   162,   163,   164,   165,   166,
     167,     0,   168,   169,   170,   171,   172,     0,     0,   173,
     174,   175,   176,   177,     0,   178,   179,   180,     0,   181,
     182,   183,     0,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   694,     0,   194,     0,   195,   196,   197,   198,
       0,   199,     0,   200,   201,     0,   202,   203,   204,   205,
     206,   207,     0,   208,     0,   209,   210,     0,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,     0,
     222,   223,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,   234,   235,   236,     0,   237,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,     0,
       0,   248,   249,   250,   251,     0,   252,   253,   254,   700,
     701,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,     0,   285,   286,   287,   288,     0,   706,   290,   291,
     292,   293,   294,     0,   295,   296,     0,     0,   297,   298,
     299,     0,     0,   300,   301,   302,   303,   304,   709,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,     0,
     316,   317,   710,   319,   320,   321,   322,   323,   324,     0,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,     0,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,     0,   351,   352,
     353,   354,   355,   356,   357,  1838,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,     0,   369,   370,   371,
     372,   373,   713,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,     0,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   715,     0,   398,
     399,     0,   400,   401,   402,   403,   404,   405,   406,     0,
     407,   408,     0,     0,   409,   410,   718,   412,   719,     0,
     414,   415,   416,   417,   418,   419,   420,     0,     0,   421,
     422,   423,   424,   425,   721,     0,   426,   427,   428,   429,
     430,   431,   432,     0,   433,   434,   435,   436,   437,   438,
       0,     0,   439,     0,     0,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,     0,    88,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    33,    89,    90,    91,    92,    93,    94,    95,
      96,     0,    97,    98,    99,     0,     0,     0,     0,     0,
       0,     0,   100,   101,     0,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,     0,   114,   115,
     116,   117,   118,   119,     0,   677,   120,   121,   122,   123,
     124,     0,   125,   126,   127,   128,   680,     0,   681,     0,
     131,   132,   133,   134,   135,   136,   137,   138,   139,     0,
     140,   141,   142,   143,   144,   145,     0,   146,   147,   148,
     149,   682,   683,   684,   685,   686,   687,   688,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,     0,   161,
       0,   162,   163,   164,   165,   166,   167,     0,   168,   169,
     170,   171,   172,     0,     0,   173,   174,   175,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,     0,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   694,     0,
     194,     0,   195,   196,   197,   198,     0,   199,     0,   200,
     201,     0,   202,   203,   204,   205,   206,   207,     0,   208,
       0,   209,   210,     0,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,     0,   222,   223,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,   234,
     235,   236,     0,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,     0,     0,   248,   249,   250,
     251,     0,   252,   253,   254,   700,   701,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,     0,   285,   286,
     287,   288,     0,   706,   290,   291,   292,   293,   294,     0,
     295,   296,     0,     0,   297,   298,   299,     0,     0,   300,
     301,   302,   303,   304,   709,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,     0,   316,   317,   710,   319,
     320,   321,   322,   323,   324,     0,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
       0,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,   372,   373,   713,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,     0,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   715,     0,   398,   399,     0,   400,   401,
     402,   403,   404,   405,   406,     0,   407,   408,     0,     0,
     409,   410,   718,   412,   719,     0,   414,   415,   416,   417,
     418,   419,   420,     0,     0,   421,   422,   423,   424,   425,
     721,     0,   426,   427,   428,   429,   430,   431,   432,     0,
     433,   434,   435,   436,   437,   438,     0,     0,   439,     0,
       0,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,     0,   647,   990,   529,     0,     0,     0,   671,
       0,     0,     0,     0,     0,     0,     0,     0,  2422,    89,
      90,    91,    92,    93,    94,    95,    96,     0,    97,    98,
      99,     0,     0,     0,     0,     0,     0,     0,   100,   101,
       0,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,     0,   114,   115,   116,   117,   118,   119,
       0,     0,   120,   121,   122,   123,   124,     0,   125,   126,
     127,   128,   129,     0,   130,     0,   131,   132,   133,   134,
     135,   136,   137,   138,   139,     0,   140,   141,   142,   143,
     144,   145,     0,   146,   147,   148,   149,     0,     0,     0,
     150,     0,     0,     0,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,     0,   161,     0,   162,   163,   164,
     165,   166,   167,     0,   168,   169,   170,   171,   172,     0,
       0,   173,   174,   175,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   991,   194,     0,   195,   196,
     197,   198,     0,   199,     0,   200,   201,     0,   202,   203,
     204,   205,   206,   207,     0,   208,     0,   209,   210,     0,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,     0,   222,   223,   224,   225,   226,   227,     0,   228,
     229,   230,   231,   232,   233,   234,   235,   236,     0,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,     0,     0,   248,   249,   250,   251,     0,   252,   253,
     254,     0,     0,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,     0,   285,   286,   287,   288,     0,   289,
     290,   291,   292,   293,   294,     0,   295,   296,   992,     0,
     297,   298,   299,     0,     0,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,     0,   316,   317,   318,   319,   320,   321,   322,   323,
     324,     0,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,     0,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,     0,   369,
     370,   371,   372,   373,     0,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,     0,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
       0,   398,   399,     0,   400,   401,   402,   403,   404,   405,
     406,     0,   407,   408,     0,     0,   409,   410,   411,   412,
     413,   993,   414,   415,   416,   417,   418,   419,   420,     0,
       0,   421,   422,   423,   424,   425,     0,     0,   426,   427,
     428,   429,   430,   431,   432,     0,   433,   434,   435,   436,
     437,   438,     0,     0,   439,     0,     0,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,     0,   647,
       0,     0,     0,     0,     0,   994,   995,  1706,     0,     0,
       0,     0,     0,     0,  1707,    89,    90,    91,    92,    93,
      94,    95,    96,     0,    97,    98,    99,     3,     4,     0,
       0,     0,     0,     0,   100,   101,     0,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,     0,
     114,   115,   116,   117,   118,   119,     0,     0,   120,   121,
     122,   123,   124,     0,   125,   126,   127,   128,   129,     0,
     130,     0,   131,   132,   133,   134,   135,   136,   137,   138,
     139,     0,   140,   141,   142,   143,   144,   145,     0,   146,
     147,   148,   149,     0,     0,     0,   150,     0,     0,     0,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
       0,   161,     0,   162,   163,   164,   165,   166,   167,     0,
     168,   169,   170,   171,   172,     0,     0,   173,   174,   175,
     176,   177,     0,   178,   179,   180,     0,   181,   182,   183,
       0,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,     0,   194,     0,   195,   196,   197,   198,     0,   199,
       0,   200,   201,     0,   202,   203,   204,   205,   206,   207,
       0,   208,     0,   209,   210,     0,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,     0,   222,   223,
     224,   225,   226,   227,     0,   228,   229,   230,   231,   232,
     233,   234,   235,   236,     0,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,     0,     0,   248,
     249,   250,   251,     0,   252,   253,   254,     0,     0,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,     0,
     285,   286,   287,   288,     0,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,     0,   297,   298,   299,     0,
       0,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,     0,   316,   317,
     318,   319,   320,   321,   322,   323,   324,     0,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,     0,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,    24,   369,   370,   371,   372,   373,
       0,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,     0,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,     0,   398,   399,    28,
     400,   401,   402,   403,   404,   405,   406,     0,   407,   408,
       0,     0,   409,   410,   411,   412,   413,     0,   414,   415,
     416,   417,   418,   419,   420,     0,     0,   421,   422,   423,
     424,   425,     0,     0,   426,   427,   428,   429,   430,   590,
     432,     0,   433,   434,   435,   436,   437,   438,     0,     0,
     439,     0,    31,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,     0,   485,    32,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      33,    89,    90,    91,    92,    93,    94,    95,    96,   587,
      97,    98,    99,     0,     0,     0,     0,     0,     0,     0,
     100,   101,     0,   102,   103,   104,     0,   106,   107,   108,
     109,   110,     0,   112,   113,     0,   114,   115,   116,   117,
     118,   119,     0,     0,   120,   121,   122,   123,   124,     0,
     125,   126,   127,   128,   129,     0,     0,     0,   131,   132,
     133,   134,   135,     0,   137,   138,   139,     0,   140,   141,
     142,   143,   144,   145,     0,     0,   147,   148,   149,     0,
       0,     0,     0,     0,     0,     0,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,     0,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,     0,
     195,   196,   197,   198,     0,   199,     0,   200,     0,     0,
       0,   203,   204,   205,     0,   207,     0,   208,     0,   209,
     210,     0,   211,   212,   213,   214,   215,   216,     0,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,     0,   230,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   238,     0,     0,   241,     0,   243,   244,
     245,   246,   247,     0,     0,   248,     0,   250,     0,     0,
     252,   253,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,     0,
     280,   281,   282,   283,   284,     0,   285,   286,     0,   288,
       0,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,     0,   297,   298,   299,     0,     0,   300,   301,     0,
     303,     0,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,     0,   316,   317,   318,   319,   320,   321,
     322,   323,   324,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,     0,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,     0,   351,   352,     0,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
      24,   369,   370,   371,   372,   373,     0,   374,   375,   376,
     377,   378,     0,   380,   381,   382,   383,     0,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,     0,   398,   399,    28,   400,     0,   402,   403,
     404,   405,   406,     0,   588,   408,     0,     0,   589,   410,
     411,   412,   413,     0,   414,   415,   416,   417,   418,   419,
     420,     0,     0,   421,   422,   423,   424,   425,     0,     0,
     426,   427,   428,   429,   430,   590,   432,     0,   433,     0,
     435,   436,   437,   438,     0,     0,   439,     0,    31,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
       0,   485,    32,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    33,    89,    90,    91,
      92,    93,    94,    95,    96,     0,    97,    98,    99,     0,
       0,     0,     0,     0,     0,     0,   100,   101,     0,   102,
     103,   104,     0,   106,   107,   108,   109,   110,     0,   112,
     113,     0,   114,   115,   116,   117,   118,   119,     0,     0,
     120,   121,   122,   123,   124,     0,   125,   126,   127,   128,
     129,     0,     0,     0,   131,   132,   133,   134,   135,     0,
     137,   138,   139,     0,   140,   141,   142,   143,   144,   145,
       0,     0,   147,   148,   149,     0,     0,     0,     0,     0,
       0,     0,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,     0,   161,     0,   162,   163,   164,   165,   166,
     167,     0,   168,   169,   170,   171,   172,     0,     0,   173,
     174,   175,   176,   177,     0,   178,   179,   180,     0,   181,
     182,   183,     0,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,     0,   194,     0,   195,   196,   197,   198,
       0,   199,     0,   200,     0,     0,     0,   203,   204,   205,
       0,   207,     0,   208,     0,   209,   210,     0,   211,   212,
     213,   214,   215,   216,     0,   218,   219,   220,   221,     0,
     222,   223,   224,   225,   226,   227,     0,   228,     0,   230,
     231,   232,   233,   234,   235,   236,     0,   237,     0,   238,
       0,     0,   241,     0,   243,   244,   245,   246,   247,     0,
       0,   248,     0,   250,     0,     0,   252,   253,   254,     0,
       0,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,     0,   280,   281,   282,   283,
     284,     0,   285,   286,     0,   288,     0,   289,   290,   291,
     292,   293,   294,     0,   295,   296,     0,     0,   297,   298,
     299,     0,     0,   300,   301,     0,   303,     0,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,     0,
     316,   317,   318,   319,   320,   321,   322,   323,   324,     0,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,     0,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,     0,   351,   352,
       0,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    24,   369,   370,   371,
     372,   373,     0,   374,   375,   376,   377,   378,     0,   380,
     381,   382,   383,     0,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,     0,   398,
     399,    28,   400,     0,   402,   403,   404,   405,   406,     0,
     407,   408,     0,     0,   409,   410,   411,   412,   413,     0,
     414,   415,   416,   417,   418,   419,   420,     0,     0,   421,
     422,   423,   424,   425,     0,     0,   426,   427,   428,   429,
     430,   590,   432,     0,   433,     0,   435,   436,   437,   438,
       0,     0,   439,     0,    31,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,     0,   485,    32,  2254,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    33,    89,    90,    91,    92,    93,    94,    95,
      96,     0,    97,    98,    99,     0,     0,     0,     0,     0,
       0,     0,   100,   101,     0,   102,   103,   104,     0,   106,
     107,   108,   109,   110,     0,   112,   113,     0,   114,   115,
     116,   117,   118,   119,     0,     0,   120,   121,   122,   123,
     124,     0,   125,   126,   127,   128,   129,     0,     0,     0,
     131,   132,   133,   134,   135,     0,   137,   138,   139,     0,
     140,   141,   142,   143,   144,   145,     0,     0,   147,   148,
     149,     0,     0,     0,     0,     0,     0,     0,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,     0,   161,
       0,   162,   163,   164,   165,   166,   167,     0,   168,   169,
     170,   171,   172,     0,     0,   173,   174,   175,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,     0,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,     0,
     194,     0,   195,   196,   197,   198,     0,   199,     0,   200,
       0,     0,     0,   203,   204,   205,     0,   207,     0,   208,
       0,   209,   210,     0,   211,   212,   213,   214,   215,   216,
       0,   218,   219,   220,   221,     0,   222,   223,   224,   225,
     226,   227,     0,   228,     0,   230,   231,   232,   233,   234,
     235,   236,     0,   237,     0,   238,     0,     0,   241,     0,
     243,   244,   245,   246,   247,     0,     0,   248,     0,   250,
       0,     0,   252,   253,   254,     0,     0,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,     0,   280,   281,   282,   283,   284,     0,   285,   286,
       0,   288,     0,   289,   290,   291,   292,   293,   294,     0,
     295,   296,     0,     0,   297,   298,   299,     0,     0,   300,
     301,     0,   303,     0,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,     0,   316,   317,   318,   319,
     320,   321,   322,   323,   324,     0,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
       0,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,     0,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,   372,   373,     0,   374,
     375,   376,   377,   378,     0,   380,   381,   382,   383,     0,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,     0,   398,   399,     0,   400,     0,
     402,   403,   404,   405,   406,     0,   407,   408,     0,     0,
     409,   410,   411,   412,   413,     0,   414,   415,   416,   417,
     418,   419,   420,     0,     0,   421,   422,   423,   424,   425,
       0,     0,   426,   427,   428,   429,   430,   431,   432,     0,
     433,     0,   435,   436,   437,   438,     0,     0,   439,     0,
       0,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,     0,   485,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2272,    89,
      90,    91,    92,    93,    94,    95,    96,     0,    97,    98,
      99,     0,     0,     0,     0,     0,     0,     0,   100,   101,
       0,   102,   103,   104,     0,   106,   107,   108,   109,   110,
       0,   112,   113,     0,   114,   115,   116,   117,   118,   119,
       0,     0,   120,   121,   122,   123,   124,     0,   125,   126,
     127,   128,   129,     0,     0,     0,   131,   132,   133,   134,
     135,     0,   137,   138,   139,     0,   140,   141,   142,   143,
     144,   145,     0,     0,   147,   148,   149,     0,     0,     0,
       0,     0,     0,     0,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,     0,   161,     0,   162,   163,   164,
     165,   166,   167,     0,   168,   169,   170,   171,   172,     0,
       0,   173,   174,   175,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,     0,   195,   196,
     197,   198,     0,   199,     0,   200,     0,     0,     0,   203,
     204,   205,     0,   207,     0,   208,     0,   209,   210,     0,
     211,   212,   213,   214,   215,   216,     0,   218,   219,   220,
     221,     0,   222,   223,   224,   225,   226,   227,     0,   228,
       0,   230,   231,   232,   233,   234,   235,   236,     0,   237,
       0,   238,     0,     0,   241,     0,   243,   244,   245,   246,
     247,     0,     0,   248,     0,   250,     0,     0,   252,   253,
     254,     0,     0,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,     0,   280,   281,
     282,   283,   284,     0,   285,   286,     0,   288,     0,   289,
     290,   291,   292,   293,   294,     0,   295,   296,     0,     0,
     297,   298,   299,     0,     0,   300,   301,     0,   303,     0,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,     0,   316,   317,   318,   319,   320,   321,   322,   323,
     324,     0,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,     0,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,     0,
     351,   352,     0,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,     0,   369,
     370,   371,   372,   373,     0,   374,   375,   376,   377,   378,
       0,   380,   381,   382,   383,     0,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
       0,   398,   399,     0,   400,     0,   402,   403,   404,   405,
     406,     0,   407,   408,     0,     0,   409,   410,   411,   412,
     413,     0,   414,   415,   416,   417,   418,   419,   420,     0,
       0,   421,   422,   423,   424,   425,     0,     0,   426,   427,
     428,   429,   430,   431,   432,     0,   433,     0,   435,   436,
     437,   438,     0,     0,   439,     0,     0,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,     0,   485,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   767,    89,    90,    91,    92,    93,
      94,    95,    96,     0,    97,    98,    99,     0,     0,     0,
       0,     0,     0,     0,   100,   101,     0,   102,   103,   104,
       0,   106,   107,   108,   109,   110,     0,   112,   113,     0,
     114,   115,   116,   117,   118,   119,     0,     0,   120,   121,
     122,   123,   124,     0,   125,   126,   127,   128,   129,     0,
       0,     0,   131,   132,   133,   134,   135,     0,   137,   138,
     139,     0,   140,   141,   142,   143,   144,   145,     0,     0,
     147,   148,   149,     0,     0,     0,     0,     0,     0,     0,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
       0,   161,     0,   162,   163,   164,   165,   166,   167,     0,
     168,   169,   170,   171,   172,     0,     0,   173,   174,   175,
     176,   177,     0,   178,   179,   180,     0,   181,   182,   183,
       0,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,     0,   194,     0,   195,   196,   197,   198,     0,   199,
       0,   200,     0,     0,     0,   203,   204,   205,     0,   207,
       0,   208,     0,   209,   210,     0,   211,   212,   213,   214,
     215,   216,     0,   218,   219,   220,   221,     0,   222,   223,
     224,   225,   226,   227,     0,   228,     0,   230,   231,   232,
     233,   234,   235,   236,     0,   237,     0,   238,     0,     0,
     241,     0,   243,   244,   245,   246,   247,     0,     0,   248,
       0,   250,     0,     0,   252,   253,   254,     0,     0,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,     0,   280,   281,   282,   283,   284,     0,
     285,   286,     0,   288,     0,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,     0,   297,   298,   299,     0,
       0,   300,   301,     0,   303,     0,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,     0,   316,   317,
     318,   319,   320,   321,   322,   323,   324,     0,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,     0,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,     0,   351,   352,     0,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,     0,   369,   370,   371,   372,   373,
       0,   374,   375,   376,   377,   378,     0,   380,   381,   382,
     383,     0,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,     0,   398,   399,     0,
     400,     0,   402,   403,   404,   405,   406,     0,   407,   408,
       0,     0,   409,   410,   411,   412,   413,     0,   414,   415,
     416,   417,   418,   419,   420,     0,     0,   421,   422,   423,
     424,   425,     0,     0,   426,   427,   428,   429,   430,   431,
     432,     0,   433,     0,   435,   436,   437,   438,     0,     0,
     439,     0,     0,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,     0,   485,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1560,    89,    90,    91,    92,    93,    94,    95,    96,     0,
      97,    98,    99,     0,     0,     0,     0,     0,     0,     0,
     100,   101,     0,   102,   103,   104,     0,   106,   107,   108,
     109,   110,     0,   112,   113,     0,   114,   115,   116,   117,
     118,   119,     0,     0,   120,   121,   122,   123,   124,     0,
     125,   126,   127,   128,   129,     0,     0,     0,   131,   132,
     133,   134,   135,     0,   137,   138,   139,     0,   140,   141,
     142,   143,   144,   145,     0,     0,   147,   148,   149,     0,
       0,     0,     0,     0,     0,     0,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,     0,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,     0,
     195,   196,   197,   198,     0,   199,     0,   200,     0,     0,
       0,   203,   204,   205,     0,   207,     0,   208,     0,   209,
     210,     0,   211,   212,   213,   214,   215,   216,     0,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,     0,   230,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   238,     0,     0,   241,     0,   243,   244,
     245,   246,   247,     0,     0,   248,     0,   250,     0,     0,
     252,   253,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,     0,
     280,   281,   282,   283,   284,     0,   285,   286,     0,   288,
       0,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,     0,   297,   298,   299,     0,     0,   300,   301,     0,
     303,     0,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,     0,   316,   317,   318,   319,   320,   321,
     322,   323,   324,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,     0,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,     0,   351,   352,     0,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   372,   373,     0,   374,   375,   376,
     377,   378,     0,   380,   381,   382,   383,     0,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,     0,   398,   399,     0,   400,     0,   402,   403,
     404,   405,   406,     0,   407,   408,     0,     0,   409,   410,
     411,   412,   413,     0,   414,   415,   416,   417,   418,   419,
     420,     0,     0,   421,   422,   423,   424,   425,     0,     0,
     426,   427,   428,   429,   430,   431,   432,     0,   433,     0,
     435,   436,   437,   438,     0,     0,   439,     0,     0,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
       0,     0,     0,     0,  1013,   990,   529,     0,     0,  1421,
     671,     0,     0,     0,     0,     0,  2065,  1422,  1423,  1424,
      89,    90,    91,    92,    93,    94,    95,    96,   867,    97,
      98,    99,   868,   869,   870,   871,   872,   873,   874,   100,
     101,   875,   102,   103,   104,   105,   106,   107,   108,     0,
    1014,   111,  1015,  1016,   876,   114,   115,   116,   117,   118,
     119,   877,   878,   120,   121,  1017,  1018,   124,   879,   125,
     126,   127,   128,     0,   880,   130,   881,   131,   132,   133,
     134,   135,   136,   137,   138,   139,   882,   140,   141,   142,
     143,   144,   145,   883,   146,   147,   148,   149,   884,   885,
     886,   150,   887,   888,   889,   151,   152,   153,   154,   155,
     156,   157,  1019,  1020,   160,   890,   161,   891,   162,   163,
     164,   165,   166,   167,   892,   168,   169,   170,   171,   172,
     893,   894,   173,   174,   692,   176,   177,   895,   178,   179,
     180,   896,   181,   182,   183,   897,   184,   185,   186,   187,
       0,   189,   190,   191,   192,     0,   898,   194,   899,   195,
     196,  1021,   198,   900,   199,   901,   200,   201,   902,   202,
     203,   204,   205,   206,   207,   903,   208,   904,     0,   210,
     905,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   906,   222,   223,   224,   225,   226,   227,   907,
     228,   229,     0,   231,   232,   233,   234,  1022,  1023,   908,
    1024,   909,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   910,   911,   248,   249,   250,   251,   912,   252,
     253,   254,   913,   914,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,  1025,   279,  1026,
     281,   282,   283,  2166,   915,   285,   286,   287,   288,   916,
       0,   290,  1027,   292,   293,   294,   917,   295,   296,   918,
     919,  2167,   298,   299,   920,   921,   300,     0,   302,   303,
     304,     0,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   922,   316,   317,     0,   319,   320,     0,   322,
     323,   324,   923,   325,   326,   327,   328,   329,   330,   331,
     332,   333,  1028,   335,   336,   337,   338,   924,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     925,   351,   352,   353,   354,   355,   356,  1029,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   926,
     369,   370,   371,   372,   373,   927,   374,  2168,   376,   377,
     378,   379,   380,   381,  1031,   383,   928,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,  1032,   396,
       0,   929,   398,   399,   930,   400,   401,   402,   403,   404,
     405,   406,   931,  1033,  1034,   932,   933,   409,   410,     0,
     412,     0,   934,   414,   415,   416,   417,   418,   419,   420,
     935,   936,   421,   422,   423,   424,   425,   937,   938,   426,
     427,   428,   429,   430,     0,  1035,   939,   433,   434,   435,
     436,   437,   438,   940,   941,   439,   942,   943,   440,   441,
     442,   443,   444,   445,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   457,   458,   459,   460,     0,
     485,     0,  1425,  1426,  1427,  1421,  2169,  2170,  1430,  1431,
    1432,  1433,     0,  1422,  1423,  1424,    89,    90,    91,    92,
      93,    94,    95,    96,     0,    97,    98,    99,     0,     0,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,     0,   106,   107,   108,   109,   110,     0,   112,   113,
       0,   114,   115,   116,   117,   118,   119,     0,     0,   120,
     121,   122,   123,   124,     0,   125,   126,   127,   128,   129,
       0,     0,     0,   131,   132,   133,   134,   135,     0,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
       0,   147,   148,   149,     0,     0,     0,     0,     0,     0,
       0,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,     0,   195,   196,   197,   198,     0,
     199,     0,   200,     0,     0,     0,   203,   204,   205,     0,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,   216,     0,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   230,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   238,     0,
       0,   241,     0,   243,   244,   245,   246,   247,     0,     0,
     248,     0,   250,     0,     0,   252,   253,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,     0,   280,   281,   282,   283,   284,
       0,   285,   286,     0,   288,     0,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,     0,   297,   298,   299,
       0,     0,   300,   301,     0,   303,     0,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,     0,   316,
     317,   318,   319,   320,   321,   322,   323,   324,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,     0,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,     0,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,   371,   372,
     373,     0,   374,   375,   376,   377,   378,     0,   380,   381,
     382,   383,     0,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,     0,   398,   399,
       0,   400,     0,   402,   403,   404,   405,   406,     0,   407,
     408,     0,     0,   409,   410,   411,   412,   413,     0,   414,
     415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
     423,   424,   425,     0,     0,   426,   427,   428,   429,   430,
     431,   432,     0,   433,     0,   435,   436,   437,   438,     0,
       0,   439,     0,     0,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,     0,     0,     0,  1425,  1426,
    1427,     0,  1428,  1429,  1430,  1431,  1432,  1433,  1111,     0,
       0,  1112,     0,     0,     0,     0,  1113,  1114,  1115,     0,
       0,     0,     0,     0,     0,     0,  1111,     0,     0,  1112,
       0,     0,     0,  1116,  1113,  1114,  1115,     0,     0,     0,
       0,  1118,     0,     0,  1111,     0,     0,  1112,  1119,     0,
       0,  1116,  1113,  1114,  1115,     0,     0,     0,     0,  1118,
       0,     0,     0,     0,     0,     0,  1119,     0,     0,  1116,
       0,     0,  1111,  1120,     0,  1112,     0,  1118,     0,     0,
    1113,  1114,  1115,     0,  1119,     0,     0,     0,     0,     0,
    1111,  1120,     0,  1112,     0,     0,     0,  1116,  1113,  1114,
    1115,     0,     0,     0,     0,  1118,     0,     0,  1111,  1120,
       0,  1112,  1119,     0,     0,  1116,  1113,  1114,  1115,     0,
       0,     0,     0,  1118,     0,     0,     0,     0,     0,     0,
    1119,     0,     0,  1116,     0,     0,     0,  1120,     0,     0,
       0,  1118,     0,     0,     0,     0,     0,     0,  1119,     0,
       0,     0,     0,     0,     0,  1120,  1111,     0,     0,  1112,
       0,     0,     0,     0,  1113,  1114,  1115,     0,     0,     0,
       0,     0,  1121,  1120,     0,     0,     0,     0,     0,     0,
       0,  1116,     0,     0,     0,     0,  1122,     0,     0,  1118,
    1121,  1123,     0,     0,     0,     0,  1119,     0,     0,     0,
       0,     0,     0,     0,  1122,     0,     0,     0,  1121,  1123,
       0,     0,  1124,  1125,     0,     0,     0,     0,     0,     0,
       0,  1120,  1122,     0,     0,     0,  1126,  1123,     0,     0,
    1124,  1125,     0,     0,     0,     0,  1121,     0,     0,     0,
       0,     0,     0,     0,  1126,     0,     0,     0,  1124,  1125,
    1122,     0,     0,     0,  1121,  1123,     0,     0,     0,     0,
       0,     0,  1126,  1127,     0,     0,  1128,     0,  1122,     0,
       0,     0,  1121,  1123,     0,     0,  1124,  1125,     0,     0,
    1129,  1127,     0,  1130,  1128,     0,  1122,     0,     0,     0,
    1126,  1123,     0,     0,  1124,  1125,     0,     0,  1129,  1127,
       0,  1130,  1128,     0,     0,     0,     0,     0,  1126,     0,
       0,     0,  1124,  1125,     0,     0,  1129,     0,     0,  1130,
    1121,     0,     0,     0,     0,     0,  1126,  1127,     0,     0,
    1128,     0,     0,     0,  1122,     0,     0,     0,     0,  1123,
       0,     0,     0,     0,  1129,  1127,     0,  1130,  1128,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1124,  1125,  1129,  1127,     0,  1130,  1128,     0,     0,     0,
    1131,     0,     0,     0,  1126,     0,     0,     0,     0,     0,
    1129,     0,     0,  1130,     0,     0,     0,     0,  1131,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1131,     0,     0,     0,
       0,  1127,     0,     0,  1128,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1111,  1129,     0,
    1112,  1130,     0,     0,  1131,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1131,     0,     0,     0,     0,     0,     0,     0,
    1118,     0,     0,     0,     0,     0,     0, -1534,  1132,     0,
    1131,  1133,  1134,  1135,     0,  1136,  1137,  1138,  1139,  1140,
    1141,     0,     0,     0,     0,  1464,  1132,     0,     0,  1133,
    1134,  1135,  1120,  1136,  1137,  1138,  1139,  1140,  1141,     0,
       0,     0,     0,  1799,  1132,     0,     0,  1133,  1134,  1135,
       0,  1136,  1137,  1138,  1139,  1140,  1141,     0,  1131,     0,
       0,  2008,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1132,     0,     0,  1133,  1134,  1135,     0,  1136,
    1137,  1138,  1139,  1140,  1141,     0,     0,     0,     0,  2043,
    1132,     0,     0,  1133,  1134,  1135,     0,  1136,  1137,  1138,
    1139,  1140,  1141,     0,     0,     0,     0,  2130,  1132,     0,
       0,  1133,  1134,  1135,     0,  1136,  1137,  1138,  1139,  1140,
    1141,     0,     0,     0,     0,  2223,     0,     0,     0,  1111,
       0, -1534,  1112,     0,     0,     0,     0,  1113,  1114,  1115,
       0,     0,     0,     0,  1111, -1534,     0,  1112,     0,     0,
   -1534,     0,     0,     0,  1116,     0,  1132,     0,     0,  1133,
    1134,  1135,  1118,  1136,  1137,  1138,  1139,  1140,  1141,  1119,
       0,  1111,     0,  2241,  1112,     0,     0,  1118,     0,  1113,
    1114,  1115,     0,     0, -1534, -1534,     0,     0,     0,  1111,
       0,     0,  1112,     0,  1120,     0,  1116,  1113,  1114,  1115,
       0,     0,     0,     0,  1118,     0,     0,  1111,     0,  1120,
    1112,  1119,     0,     0,  1116,  1113,  1114,  1115,     0,     0,
       0,     0,  1118,     0,     0,     0,     0,     0,     0,  1119,
       0,     0,  1116,     0,     0,     0,  1120,     0,     0,  1129,
    1118,     0,     0,     0,     0,     0,     0,  1119,     0,     0,
       0,     0,     0,     0,  1120,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1120,     0,     0,     0,     0,     0,  2240,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1121,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1122, -1534,     0,
       0,     0,  1123,     0,     0,     0,     0,     0,     0,     0,
       0,     0, -1534,     0,     0,     0,     0, -1534,     0, -1534,
       0,     0,     0,  1124,  1125,  1121,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1126,     0,  1122,
       0,     0,     0,  1121,  1123,     0,     0,     0,     0,     0,
       0,     0, -1534,     0,     0,     0,     0,  1122,     0,     0,
       0,  1121,  1123,     0,     0,  1124,  1125,     0,     0,     0,
       0,     0,     0,     0,  1127,  1122,     0,  1128,     0,  1126,
    1123,     0,     0,  1124,  1125,     0,     0,     0,     0,     0,
       0,  1129,     0,     0,  1130,     0,     0,  1126,     0,     0,
       0,  1124,  1125,     0,     0,     0,  1129,     0,     0,     0,
       0,     0,     0,     0,     0,  1126,  1127, -1534,     0,  1128,
       0,     0,     0,     0,  1136,  1137,  1138,  1139,  1140,  1141,
       0,     0,     0,  1129,  1127,     0,  1130,  1128,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1129,  1127,     0,  1130,  1128,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1129,
       0,     0,  1130,     0,     0,     0,     0,     0,     0,     0,
       0,  1131,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0, -1534,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1131,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1131,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1131,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1132,
       0,     0,  1133,  1134,  1135,     0,  1136,  1137,  1138,  1139,
    1140,  1141,     0,     0, -1534,     0,  2383,     0,     0,     0,
       0,  1136,  1137,  1138,  1139,  1140,  1141,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1132,     0,     0,  1133,  1134,  1135,     0,  1136,  1137,
    1138,  1139,  1140,  1141,     0,     0,     0,     0,  2581,  1132,
       0,     0,  1133,  1134,  1135,     0,  1136,  1137,  1138,  1139,
    1140,  1141,     0,     0,     0,     0,  2593,  1132,   866,     0,
    1133,  1134,  1135,     0,  1136,  1137,  1138,  1139,  1140,  1141,
       0,     0,  1287,     0,    89,    90,    91,    92,    93,    94,
      95,    96,   867,    97,    98,    99,   868,   869,   870,   871,
     872,   873,   874,   100,   101,   875,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   876,   114,
     115,   116,   117,   118,   119,   877,   878,   120,   121,   122,
     123,   124,   879,   125,   126,   127,   128,   129,   880,   130,
     881,   131,   132,   133,   134,   135,   136,   137,   138,   139,
     882,   140,   141,   142,   143,   144,   145,   883,   146,   147,
     148,   149,   884,   885,   886,   150,   887,   888,   889,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   890,
     161,   891,   162,   163,   164,   165,   166,   167,   892,   168,
     169,   170,   171,   172,   893,   894,   173,   174,   175,   176,
     177,   895,   178,   179,   180,   896,   181,   182,   183,   897,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     898,   194,   899,   195,   196,   197,   198,   900,   199,   901,
     200,   201,   902,   202,   203,   204,   205,   206,   207,   903,
     208,   904,   209,   210,   905,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   906,   222,   223,   224,
     225,   226,   227,   907,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   908,   237,   909,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   910,   911,   248,   249,
     250,   251,   912,   252,   253,   254,   913,   914,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   915,   285,
     286,   287,   288,   916,   289,   290,   291,   292,   293,   294,
     917,   295,   296,   918,   919,   297,   298,   299,   920,   921,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   922,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   923,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   924,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   925,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   926,   369,   370,   371,   372,   373,   927,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     928,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   929,   398,   399,   930,   400,
     401,   402,   403,   404,   405,   406,   931,   407,   408,   932,
     933,   409,   410,   411,   412,   413,   934,   414,   415,   416,
     417,   418,   419,   420,   935,   936,   421,   422,   423,   424,
     425,   937,   938,   426,   427,   428,   429,   430,   431,   432,
     939,   433,   434,   435,   436,   437,   438,   940,   941,   439,
     942,   943,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   485,     0,     0,     0,     0,     0,     0,
       0,     0,   944,     0,     0,     0,     0,     0,     0,    89,
      90,    91,    92,    93,    94,    95,    96,     0,    97,    98,
      99,     0,     0,     0,     0,     0,     0,     0,   100,   101,
       0,   102,   103,   104,     0,   106,   107,   108,   109,   110,
       0,   112,   113,     0,   114,   115,   116,   117,   118,   119,
       0,     0,   120,   121,   122,   123,   124,     0,   125,   126,
     127,   128,   129,     0,     0,     0,   131,   132,   133,   134,
     135,     0,   137,   138,   139,     0,   140,   141,   142,   143,
     144,   145,     0,     0,   147,   148,   149,     0,     0,     0,
       0,     0,     0,     0,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,     0,   161,     0,   162,   163,   164,
     165,   166,   167,     0,   168,   169,   170,   171,   172,     0,
       0,   173,   174,   175,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,     0,   195,   196,
     197,   198,     0,   199,     0,   200,     0,     0,     0,   203,
     204,   205,     0,   207,     0,   208,     0,   209,   210,     0,
     211,   212,   213,   214,   215,   216,     0,   218,   219,   220,
     221,     0,   222,   223,   224,   225,   226,   227,     0,   228,
       0,   230,   231,   232,   233,   234,   235,   236,     0,   237,
       0,   238,     0,     0,   241,     0,   243,   244,   245,   246,
     247,     0,     0,   248,     0,   250,     0,     0,   252,   253,
     254,     0,     0,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,     0,   280,   281,
     282,   283,   284,     0,   285,   286,     0,   288,     0,   289,
     290,   291,   292,   293,   294,     0,   295,   296,     0,     0,
     297,   298,   299,     0,     0,   300,   301,     0,   303,     0,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,     0,   316,   317,   318,   319,   320,   321,   322,   323,
     324,     0,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,     0,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,     0,
     351,   352,     0,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,     0,   369,
     370,   371,   372,   373,     0,   374,   375,   376,   377,   378,
       0,   380,   381,   382,   383,     0,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
       0,   398,   399,     0,   400,     0,   402,   403,   404,   405,
     406,     0,   407,   408,     0,     0,   409,   410,   411,   412,
     413,     0,   414,   415,   416,   417,   418,   419,   420,     0,
       0,   421,   422,   423,   424,   425,     0,     0,   426,   427,
     428,   429,   430,   431,   432,     0,   433,     0,   435,   436,
     437,   438,     0,     0,   439,     0,     0,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   647,   990,
     529,     0,     0,     0,   671,     0,     0,  1984,     0,     0,
       0,     0,     0,     0,    89,    90,    91,    92,    93,    94,
      95,    96,     0,    97,    98,    99,     0,     0,     0,     0,
       0,     0,     0,   100,   101,     0,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,     0,   114,
     115,   116,   117,   118,   119,     0,     0,   120,   121,   122,
     123,   124,     0,   125,   126,   127,   128,   129,     0,   130,
       0,   131,   132,   133,   134,   135,   136,   137,   138,   139,
       0,   140,   141,   142,   143,   144,   145,     0,   146,   147,
     148,   149,     0,     0,     0,   150,     0,     0,     0,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,  1167,
     161,     0,   162,   163,   164,   165,   166,   167,     0,   168,
     169,   170,   171,   172,     0,     0,   173,   174,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     991,   194,     0,   195,   196,   197,   198,     0,   199,     0,
     200,   201,     0,   202,   203,   204,   205,   206,   207,     0,
     208,     0,   209,   210,     0,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,     0,   222,   223,   224,
     225,   226,   227,     0,   228,   229,   230,   231,   232,   233,
     234,   235,   236,     0,   237,     0,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,     0,     0,   248,   249,
     250,   251,     0,   252,   253,   254,     0,     0,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,     0,   285,
     286,   287,   288,     0,   289,   290,   291,   292,   293,   294,
       0,   295,   296,   992,     0,   297,   298,   299,     0,     0,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,     0,   316,   317,   318,
     319,   320,   321,   322,   323,   324,     0,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,     0,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,     0,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,     0,   369,   370,   371,   372,   373,     0,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
       0,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,     0,   398,   399,     0,   400,
     401,   402,   403,   404,   405,   406,     0,   407,   408,     0,
       0,   409,   410,   411,   412,   413,   993,   414,   415,   416,
     417,   418,   419,   420,     0,     0,   421,   422,   423,   424,
     425,     0,     0,   426,   427,   428,   429,   430,   431,   432,
       0,   433,   434,   435,   436,   437,   438,     0,     0,   439,
       0,     0,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   647,   990,   529,     0,     0,     0,   671,
     994,   995,     0,     0,     0,     0,     0,     0,     0,    89,
      90,    91,    92,    93,    94,    95,    96,     0,    97,    98,
      99,     0,     0,     0,     0,     0,     0,     0,   100,   101,
       0,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,     0,   114,   115,   116,   117,   118,   119,
       0,     0,   120,   121,   122,   123,   124,     0,   125,   126,
     127,   128,   129,     0,   130,     0,   131,   132,   133,   134,
     135,   136,   137,   138,   139,     0,   140,   141,   142,   143,
     144,   145,     0,   146,   147,   148,   149,     0,     0,     0,
     150,     0,     0,     0,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,  1169,   161,     0,   162,   163,   164,
     165,   166,   167,     0,   168,   169,   170,   171,   172,     0,
       0,   173,   174,   175,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   991,   194,     0,   195,   196,
     197,   198,     0,   199,     0,   200,   201,     0,   202,   203,
     204,   205,   206,   207,     0,   208,     0,   209,   210,     0,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,     0,   222,   223,   224,   225,   226,   227,     0,   228,
     229,   230,   231,   232,   233,   234,   235,   236,     0,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,     0,     0,   248,   249,   250,   251,     0,   252,   253,
     254,     0,     0,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,     0,   285,   286,   287,   288,     0,   289,
     290,   291,   292,   293,   294,     0,   295,   296,   992,     0,
     297,   298,   299,     0,     0,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,     0,   316,   317,   318,   319,   320,   321,   322,   323,
     324,     0,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,     0,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,     0,   369,
     370,   371,   372,   373,     0,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,     0,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
       0,   398,   399,     0,   400,   401,   402,   403,   404,   405,
     406,     0,   407,   408,     0,     0,   409,   410,   411,   412,
     413,   993,   414,   415,   416,   417,   418,   419,   420,     0,
       0,   421,   422,   423,   424,   425,     0,     0,   426,   427,
     428,   429,   430,   431,   432,     0,   433,   434,   435,   436,
     437,   438,     0,     0,   439,     0,     0,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   647,   990,
     529,     0,     0,     0,   671,   994,   995,     0,     0,     0,
       0,     0,     0,     0,    89,    90,    91,    92,    93,    94,
      95,    96,     0,    97,    98,    99,     0,     0,     0,     0,
       0,     0,     0,   100,   101,     0,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,     0,   114,
     115,   116,   117,   118,   119,     0,     0,   120,   121,   122,
     123,   124,     0,   125,   126,   127,   128,   129,     0,   130,
       0,   131,   132,   133,   134,   135,   136,   137,   138,   139,
       0,   140,   141,   142,   143,   144,   145,     0,   146,   147,
     148,   149,     0,     0,     0,   150,     0,     0,     0,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,     0,
     161,     0,   162,   163,   164,   165,   166,   167,     0,   168,
     169,   170,   171,   172,     0,     0,   173,   174,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     991,   194,     0,   195,   196,   197,   198,     0,   199,     0,
     200,   201,     0,   202,   203,   204,   205,   206,   207,     0,
     208,     0,   209,   210,     0,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,     0,   222,   223,   224,
     225,   226,   227,     0,   228,   229,   230,   231,   232,   233,
     234,   235,   236,     0,   237,     0,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,     0,     0,   248,   249,
     250,   251,     0,   252,   253,   254,     0,     0,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,     0,   285,
     286,   287,   288,     0,   289,   290,   291,   292,   293,   294,
       0,   295,   296,   992,     0,   297,   298,   299,     0,     0,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,     0,   316,   317,   318,
     319,   320,   321,   322,   323,   324,     0,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,     0,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,     0,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,     0,   369,   370,   371,   372,   373,     0,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
       0,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,     0,   398,   399,     0,   400,
     401,   402,   403,   404,   405,   406,     0,   407,   408,     0,
       0,   409,   410,   411,   412,   413,   993,   414,   415,   416,
     417,   418,   419,   420,     0,     0,   421,   422,   423,   424,
     425,     0,     0,   426,   427,   428,   429,   430,   431,   432,
       0,   433,   434,   435,   436,   437,   438,     0,     0,   439,
       0,     0,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,     0,  1111,     0,     0,  1112,     0,     0,
     994,   995,  1113,  1114,  1115,     0,     0,     0,     0,     0,
       0,     0,  1111,     0,     0,  1112,     0,     0,     0,  1116,
    1113,  1114,  1115,  1566,     0,     0,     0,  1118,     0,     0,
    1111,     0,     0,  1112,  1119,     0,     0,  1116,  1113,  1114,
    1115,     0,     0,     0,     0,  1118,     0,     0,     0,     0,
       0,     0,  1119,     0,     0,  1116,     0,     0,  1111,  1120,
       0,  1112,     0,  1118,     0,     0,  1113,  1114,  1115,     0,
    1119,     0,     0,     0,     0,     0,     0,  1120,     0,     0,
       0,     0,     0,  1116,     0,     0,  1740,     0,     0,     0,
       0,  1118,     0,     0,  1111,  1120,     0,  1112,  1119,     0,
       0,     0,  1113,  1114,  1115,     0,     0,     0,     0,  1567,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1116,
       0,     0,     0,  1120,     0,     0,     0,  1118,     0,     0,
       0,     0,     0,     0,  1119,     0,     0,     0,     0,     0,
       0,     0,  1111,     0,     0,  1112,     0,     0,     0,     0,
    1113,  1114,  1115,     0,     0,     0,     0,     0,  1121,  1120,
       0,     0,     0,     0,     0,     0,  1780,  1116,     0,     0,
    1789,  1781,  1122,     0,     0,  1118,  1121,  1123,     0,     0,
       0,     0,  1119,  2651,     0,     0,     0,     0,     0,     0,
    1122,     0,     0,     0,  1121,  1123,     0,     0,  1124,  1125,
       0,     0,     0,     0,     0,     0,     0,  1120,  1122,     0,
       0,     0,  1126,  1123,     0,     0,  1124,  1125,     0,     0,
       0,     0,  1121,     0,     0,     0,     0,     0,     0,     0,
    1126,     0,     0,     0,  1124,  1125,  1122,     0,     0,     0,
       0,  1123,     0,     0,     0,     0,     0,     0,  1126,  1127,
       0,     0,  1128,     0,     0,     0,     0,     0,  1121,     0,
       0,     0,  1124,  1125,     0,     0,  1129,  1127,     0,  1130,
    1128,     0,  1122,     0,     0,     0,  1126,  1123,     0,     0,
       0,     0,     0,     0,  1129,  1127,     0,  1130,  1128,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1124,  1125,
       0,     0,  1129,     0,     0,  1130,  1121,     0,     0,     0,
       0,     0,  1126,  1127,     0,     0,  1128,     0,     0,     0,
    1122,     0,     0,     0,     0,  1123,     0,     0,  2652,     0,
    1129,     0,     0,  1130,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1124,  1125,     0,  1127,
       0,     0,  1128,     0,     0,     0,  1131,     0,     0,     0,
    1126,     0,     0,     0,     0,   491,  1129,     0,     0,  1130,
    1111,     0,     0,  1112,  1131,     0,     0,     0,  1113,  1114,
    1115,     0,     0,     0,     0,     0,     0,  1754,     0,     0,
       0,     0,  1131,     0,     0,  1116,     0,  1127,     0,     0,
    1128,     0,     0,  1118,     0,     0,     0,     0,     0,     0,
    1119,     0,     0,  1568,  1129,     0,     0,  1130,   492,     0,
    1131,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   493,     0,  1120,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1132,     0,  1131,  1133,  1134,  1135,
       0,  1136,  1137,  1138,  1139,  1140,  1141,     0,     0,     0,
       0,     0,  1132,     0,     0,  1133,  1134,  1135,     0,  1136,
    1137,  1138,  1139,  1140,  1141,     0,     0,   494,     0,     0,
    1132,     0,     0,  1133,  1134,  1135,   495,  1136,  1137,  1138,
    1139,  1140,  1141,     0,  1131,     0,  1111,     0,   496,  1112,
       0,     0,     0,   497,  1113,  1114,  1115,     0,  1132,     0,
       0,  1133,  1134,  1135,     0,  1136,  1137,  1138,  1139,  1140,
    1141,  1116,     0,     0,  1121,     0,     0,     0,   498,  1118,
       0,     0,     0,     0,     0,     0,  1119,     0,  1122,     0,
       0,     0,     0,  1123,  1132,     0,     0,  1133,  1134,  1135,
       0,  1136,  1137,  1138,  1139,  1140,  1141,     0,     0,     0,
       0,  1120,     0,     0,  1124,  1125,     0,     0,     0,     0,
       0,   499,     0,     0,   500,     0,     0,     0,  1126,     0,
    1111,     0,     0,  1112,     0,     0,     0,     0,  1113,  1114,
    1115,     0,  1132,     0,     0,  1133,  1134,  1135,     0,  1136,
    1137,  1138,  1139,  1140,  1141,  1116,     0,     0,     0,     0,
       0,     0,     0,  1118,     0,  1127,     0,     0,  1128,     0,
    1119,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1129,     0,     0,  1130,     0,   501,  1111,     0,
       0,  1112,     0,     0,     0,  1120,  1113,  1114,  1115,     0,
       0,   502,     0,     0,     0,  1794,     0,     0,  1111,     0,
    1121,  1112,     0,  1116,     0,     0,  1113,  1114,  1115,     0,
       0,  1118,     0,     0,  1122,     0,     0,   817,  1119,  1123,
       0,     0,   503,   818,     0,   504,     0,     0,     0,     0,
     830,  1118,     0,   505,     0,     0,   506,     0,  1119,     0,
    1124,  1125,     0,  1120,     0,     0,     0,     0,     0,   831,
       0,     0,     0,     0,  1126,   507,     0,     0,     0,     0,
       0,     0,  1131,  1120,     0,     0,     0,   508,     0,     0,
       0,     0,     0,     0,   509,     0,     0,     0,     0,     0,
       0,     0,     0,   510,  1121,     0,     0,     0,     0,     0,
       0,  1127,     0,  2004,  1128,     0,     0,     0,  1122,   832,
       0,     0,     0,  1123,     0,     0,     0,     0,  1129,     0,
       0,  1130,     0,   511,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1124,  1125,     0,     0,   819,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1126,     0,
       0,     0,  1121,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1122,     0,     0,     0,
    1132,  1123,  1121,  1133,  1134,  1135,     0,  1136,  1137,  1138,
    1139,  1140,  1141,     0,     0,  1127,  1122,     0,  1128,     0,
       0,  1123,  1124,  1125,     0,     0,     0,   833,     0,     0,
       0,     0,  1129,     0,     0,  1130,  1126,     0,  1131,     0,
       0,     0, -1534, -1534,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1126,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1127,     0,   834,  1128,     0,     0,     0,
       0,     0,     0,   835,     0,     0,     0,     0,     0,     0,
    1129,     0,     0,     0,     0,   836, -1534,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1129,     0,     0,     0,     0,     0,   820,     0,     0,     0,
       0,     0,  1131,     0,     0,     0,   837,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1132,     0,     0,  1133,
    1134,  1135,     0,  1136,  1137,  1138,  1139,  1140,  1141,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1630,     0,     0,     0,
     822,   839,     0,     0,     0,     0,     0,     0,     0,     0,
    1131,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   840,     0,     0,     0,     0,     0,  1631,
    1131,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   842,     0,     0,     0,     0,     0,     0,
    1132,     0,     0,  1133,  1134,  1135,     0,  1136,  1137,  1138,
    1139,  1140,  1141,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   824,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1132,     0,
       0,  1133,  1134,  1135,     0,  1136,  1137,  1138,  1139,  1140,
    1141,     0,     0,     0,     0,   866,     0,  1475,  1132,     0,
       0,  1133,  1134,  1135,     0,  1136,  1137,  1138,  1139,  1140,
    1141,    89,    90,    91,    92,    93,    94,    95,    96,   867,
      97,    98,    99,   868,   869,   870,   871,   872,   873,   874,
     100,   101,   875,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   876,   114,   115,   116,   117,
     118,   119,   877,   878,   120,   121,   122,   123,   124,   879,
     125,   126,   127,   128,   129,   880,   130,   881,   131,   132,
     133,   134,   135,   136,   137,   138,   139,   882,   140,   141,
     142,   143,   144,   145,   883,   146,   147,   148,   149,   884,
     885,   886,   150,   887,   888,   889,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   890,   161,   891,   162,
     163,   164,   165,   166,   167,   892,   168,   169,   170,   171,
     172,   893,   894,   173,   174,   175,   176,   177,   895,   178,
     179,   180,   896,   181,   182,   183,   897,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   898,   194,   899,
     195,   196,   197,   198,   900,   199,   901,   200,   201,   902,
     202,   203,   204,   205,   206,   207,   903,   208,   904,   209,
     210,   905,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   906,   222,   223,   224,   225,   226,   227,
     907,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     908,   237,   909,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   910,   911,   248,   249,   250,   251,   912,
     252,   253,   254,   913,   914,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   915,   285,   286,   287,   288,
     916,   289,   290,   291,   292,   293,   294,   917,   295,   296,
     918,   919,   297,   298,   299,   920,   921,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   922,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   923,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   924,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   925,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     926,   369,   370,   371,   372,   373,   927,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   928,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   929,   398,   399,   930,   400,   401,   402,   403,
     404,   405,   406,   931,   407,   408,   932,   933,   409,   410,
     411,   412,   413,   934,   414,   415,   416,   417,   418,   419,
     420,   935,   936,   421,   422,   423,   424,   425,   937,   938,
     426,   427,   428,   429,   430,   431,   432,   939,   433,   434,
     435,   436,   437,   438,   940,   941,   439,   942,   943,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     866,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    89,    90,    91,    92,
      93,    94,    95,    96,   867,    97,    98,    99,   868,   869,
     870,   871,   872,   873,   874,   100,   101,   875,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     876,   114,   115,   116,   117,   118,   119,   877,   878,   120,
     121,   122,   123,   124,   879,   125,   126,   127,   128,   129,
     880,   130,   881,   131,   132,   133,   134,   135,   136,   137,
     138,   139,   882,   140,   141,   142,   143,   144,   145,   883,
     146,   147,   148,   149,   884,   885,   886,   150,   887,   888,
     889,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   890,   161,   891,   162,   163,   164,   165,   166,   167,
     892,   168,   169,   170,   171,   172,   893,   894,   173,   174,
     175,   176,   177,   895,   178,   179,   180,   896,   181,   182,
     183,   897,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   898,   194,   899,   195,   196,   197,   198,   900,
     199,   901,   200,   201,   902,   202,   203,   204,   205,   206,
     207,   903,   208,   904,   209,   210,   905,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   906,   222,
     223,   224,   225,   226,   227,   907,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   908,   237,   909,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   910,   911,
     248,   249,   250,   251,   912,   252,   253,   254,   913,   914,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     915,   285,   286,   287,   288,   916,   289,   290,   291,   292,
     293,   294,   917,   295,   296,   918,   919,   297,   298,   299,
     920,   921,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   922,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   923,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   924,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   925,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   926,   369,   370,   371,   372,
     373,   927,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   928,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   929,   398,   399,
     930,   400,   401,   402,   403,   404,   405,   406,   931,   407,
     408,   932,   933,   409,   410,   411,   412,   413,   934,   414,
     415,   416,   417,   418,   419,   420,   935,   936,   421,   422,
     423,   424,   425,   937,   938,   426,   427,   428,   429,   430,
     431,   432,   939,   433,   434,   435,   436,   437,   438,   940,
     941,   439,   942,   943,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   866,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    89,    90,    91,    92,  1615,    94,    95,    96,   867,
      97,    98,    99,   868,   869,   870,   871,   872,   873,   874,
     100,   101,   875,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   876,   114,   115,   116,   117,
     118,   119,   877,   878,   120,   121,   122,   123,   124,   879,
     125,   126,   127,   128,   129,   880,   130,   881,   131,   132,
     133,   134,   135,   136,   137,   138,   139,   882,   140,   141,
     142,   143,   144,   145,   883,   146,   147,   148,   149,   884,
     885,   886,   150,   887,   888,   889,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   890,   161,   891,   162,
     163,   164,   165,   166,   167,   892,   168,   169,   170,   171,
     172,   893,   894,   173,   174,   175,  1616,   177,   895,   178,
     179,   180,   896,   181,   182,   183,   897,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   898,   194,   899,
     195,   196,   197,   198,   900,   199,   901,   200,   201,   902,
     202,   203,   204,   205,   206,   207,   903,   208,   904,   209,
     210,   905,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   906,   222,   223,   224,   225,   226,   227,
     907,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     908,   237,   909,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   910,   911,   248,   249,   250,   251,   912,
     252,   253,   254,   913,   914,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   915,   285,   286,   287,   288,
     916,   289,   290,   291,   292,   293,   294,   917,   295,   296,
     918,   919,   297,   298,   299,   920,   921,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   922,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   923,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   924,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   925,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     926,   369,   370,   371,   372,   373,   927,  1617,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   928,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   929,   398,   399,   930,   400,   401,   402,   403,
     404,   405,   406,   931,   407,   408,   932,   933,   409,   410,
     411,   412,   413,   934,   414,   415,   416,   417,   418,   419,
     420,   935,   936,   421,   422,   423,   424,   425,   937,   938,
     426,   427,   428,   429,   430,   431,   432,   939,   433,   434,
     435,   436,   437,   438,   940,   941,   439,   942,   943,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
      88,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    89,    90,    91,    92,
      93,    94,    95,    96,     0,    97,    98,    99,     0,     0,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
       0,   114,   115,   116,   117,   118,   119,     0,   677,   120,
     121,   122,   123,   124,     0,   125,   126,   127,   128,   680,
       0,   681,     0,   131,   132,   133,   134,   135,   136,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
     146,   147,   148,   149,   682,   683,   684,   685,   686,   687,
     688,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   694,     0,   194,     0,   195,   196,   197,   198,     0,
     199,     0,   200,   201,     0,   202,   203,   204,   205,   206,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,   229,   230,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,     0,     0,
     248,   249,   250,   251,     0,   252,   253,   254,   700,   701,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
       0,   285,   286,   287,   288,     0,   706,   290,   291,   292,
     293,   294,     0,   295,   296,     0,     0,   297,   298,   299,
       0,     0,   300,   301,   302,   303,   304,   709,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,     0,   316,
     317,   710,   319,   320,   321,   322,   323,   324,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,     0,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,   371,   372,
     373,   713,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,     0,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   715,     0,   398,   399,
       0,   400,   401,   402,   403,   404,   405,   406,     0,   407,
     408,     0,     0,   409,   410,   718,   412,   719,     0,   414,
     415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
     423,   424,   425,   721,     0,   426,   427,   428,   429,   430,
     431,   432,     0,   433,   434,   435,   436,   437,   438,     0,
       0,   439,     0,     0,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   647,     0,   529,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    89,    90,    91,    92,    93,    94,    95,    96,     0,
      97,    98,    99,     0,     0,     0,     0,     0,     0,     0,
     100,   101,     0,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,     0,   114,   115,   116,   117,
     118,   119,     0,     0,   120,   121,   122,   123,   124,     0,
     125,   126,   127,   128,   129,     0,   130,     0,   131,   132,
     133,   134,   135,   136,   137,   138,   139,     0,   140,   141,
     142,   143,   144,   145,     0,   146,   147,   148,   149,     0,
       0,     0,   150,     0,     0,     0,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,     0,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   991,   194,     0,
     195,   196,   197,   198,     0,   199,     0,   200,   201,     0,
     202,   203,   204,   205,   206,   207,     0,   208,     0,   209,
     210,     0,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,     0,     0,   248,   249,   250,   251,     0,
     252,   253,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,     0,   285,   286,   287,   288,
       0,   289,   290,   291,   292,   293,   294,     0,   295,   296,
     992,     0,   297,   298,   299,     0,     0,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,     0,   316,   317,   318,   319,   320,   321,
     322,   323,   324,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,     0,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   372,   373,     0,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,     0,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,     0,   398,   399,     0,   400,   401,   402,   403,
     404,   405,   406,     0,   407,   408,     0,     0,   409,   410,
     411,   412,   413,   993,   414,   415,   416,   417,   418,   419,
     420,     0,     0,   421,   422,   423,   424,   425,     0,     0,
     426,   427,   428,   429,   430,   431,   432,     0,   433,   434,
     435,   436,   437,   438,     0,     0,   439,     0,     0,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     647,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    89,    90,    91,    92,
      93,    94,    95,    96,     0,    97,    98,    99,     3,     4,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
       0,   114,   115,   116,   117,   118,   119,     0,     0,   120,
     121,   122,   123,   124,     0,   125,   126,   127,   128,   129,
       0,   130,     0,   131,   132,   133,   134,   135,   136,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
     146,   147,   148,   149,     0,     0,     0,   150,     0,     0,
       0,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,     0,   195,   196,   197,   198,     0,
     199,     0,   200,   201,     0,   202,   203,   204,   205,   206,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,   229,   230,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,     0,     0,
     248,   249,   250,   251,     0,   252,   253,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
       0,   285,   286,   287,   288,     0,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,     0,   297,   298,   299,
       0,     0,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,     0,   316,
     317,   318,   319,   320,   321,   322,   323,   324,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,     0,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,   371,   372,
     373,     0,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,     0,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,     0,   398,   399,
       0,   400,   401,   402,   403,   404,   405,   406,     0,   407,
     408,     0,     0,   409,   410,   411,   412,   413,     0,   414,
     415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
     423,   424,   425,     0,     0,   426,   427,   428,   429,   430,
     431,   432,     0,   433,   434,   435,   436,   437,   438,     0,
       0,   439,     0,     0,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,    88,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    89,    90,    91,    92,    93,    94,    95,    96,     0,
      97,    98,    99,     0,     0,     0,     0,     0,     0,     0,
     100,   101,     0,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,     0,   114,   115,   116,   117,
     118,   119,     0,     0,   120,   121,   122,   123,   124,     0,
     125,   126,   127,   128,   129,     0,   130,     0,   131,   132,
     133,   134,   135,   136,   137,   138,   139,     0,   140,   141,
     142,   143,   144,   145,     0,   146,   147,   148,   149,     0,
       0,     0,   150,     0,     0,     0,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,     0,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,     0,
     195,   196,   197,   198,     0,   199,     0,   200,   201,     0,
     202,   203,   204,   205,   206,   207,     0,   208,     0,   209,
     210,     0,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,     0,     0,   248,   249,   250,   251,     0,
     252,   253,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,     0,   285,   286,   287,   288,
       0,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,     0,   297,   298,   299,     0,     0,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,     0,   316,   317,   318,   319,   320,   321,
     322,   323,   324,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,     0,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   372,   373,     0,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,     0,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,     0,   398,   399,     0,   400,   401,   402,   403,
     404,   405,   406,     0,   407,   408,     0,     0,   409,   410,
     411,   412,   413,     0,   414,   415,   416,   417,   418,   419,
     420,     0,     0,   421,   422,   423,   424,   425,     0,     0,
     426,   427,   428,   429,   430,   431,   432,     0,   433,   434,
     435,   436,   437,   438,     0,     0,   439,     0,     0,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     485,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    89,    90,    91,    92,
      93,    94,    95,    96,     0,    97,    98,    99,     0,     0,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,     0,   106,   107,   108,   109,   110,     0,   112,   113,
       0,   114,   115,   116,   117,   118,   119,     0,     0,   120,
     121,   122,   123,   124,  1225,   125,   126,   127,   128,   129,
       0,     0,  1226,   131,   132,   133,   134,   135,     0,   137,
     138,   139,  1227,   140,   141,   142,   143,   144,   145,     0,
       0,   147,   148,   149,     0,     0,     0,     0,     0,     0,
       0,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,     0,   195,   196,   197,   198,     0,
     199,  1228,   200,     0,     0,     0,   203,   204,   205,     0,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,  1229,     0,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   230,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   238,     0,
       0,   241,     0,   243,   244,   245,   246,   247,     0,     0,
     248,     0,   250,     0,     0,   252,   253,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,     0,   280,   281,   282,   283,   284,
       0,   285,   286,     0,   288,     0,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,     0,   297,   298,   299,
       0,     0,   300,   301,     0,   303,     0,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,     0,   316,
     317,   318,   319,   320,   321,   322,   323,   324,  1230,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,     0,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,     0,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,   371,   372,
     373,     0,   374,   375,   376,   377,   378,     0,   380,   381,
     382,   383,     0,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,     0,   398,   399,
       0,   400,     0,   402,   403,   404,   405,   406,     0,   407,
     408,     0,     0,   409,   410,   411,   412,   413,     0,   414,
     415,   416,   417,   418,   419,   420,     0,  1231,   421,   422,
     423,   424,   425,     0,     0,   426,   427,   428,   429,   430,
     431,   432,     0,   433,     0,   435,   436,   437,   438,     0,
       0,   439,     0,     0,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   485,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    89,    90,    91,    92,    93,    94,    95,    96,     0,
      97,    98,    99,     0,     0,     0,     0,     0,     0,     0,
     100,   101,     0,   102,   103,   104,     0,   106,   107,   108,
     109,   110,     0,   112,   113,     0,   114,   115,   116,   117,
     118,   119,     0,     0,   120,   121,   122,   123,   124,  1225,
     125,   126,   127,   128,   129,     0,     0,     0,   131,   132,
     133,   134,   135,     0,   137,   138,   139,  1227,   140,   141,
     142,   143,   144,   145,     0,     0,   147,   148,   149,     0,
       0,     0,     0,     0,     0,     0,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,     0,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,     0,
     195,   196,   197,   198,     0,   199,  1228,   200,     0,     0,
       0,   203,   204,   205,     0,   207,     0,   208,     0,   209,
     210,     0,   211,   212,   213,   214,   215,   216,     0,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,     0,   230,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   238,     0,     0,   241,     0,   243,   244,
     245,   246,   247,     0,     0,   248,     0,   250,  1678,     0,
     252,   253,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,     0,
     280,   281,   282,   283,   284,     0,   285,   286,     0,   288,
       0,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,     0,   297,   298,   299,     0,     0,   300,   301,     0,
     303,     0,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,     0,   316,   317,   318,   319,   320,   321,
     322,   323,   324,  1230,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,     0,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,     0,   351,   352,     0,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   372,   373,     0,   374,   375,   376,
     377,   378,     0,   380,   381,   382,   383,     0,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,     0,   398,   399,     0,   400,     0,   402,   403,
     404,   405,   406,     0,   407,   408,     0,     0,   409,   410,
     411,   412,   413,     0,   414,   415,   416,   417,   418,   419,
     420,     0,  1231,   421,   422,   423,   424,   425,     0,     0,
     426,   427,   428,   429,   430,   431,   432,     0,   433,     0,
     435,   436,   437,   438,     0,     0,   439,     0,     0,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     485,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    89,    90,    91,    92,
      93,    94,    95,    96,     0,    97,    98,    99,     3,     4,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,     0,   106,   107,   108,   109,   110,     0,   112,   113,
       0,   114,   115,   116,   117,   118,   119,     0,     0,   120,
     121,   122,   123,   124,     0,   125,   126,   127,   128,   129,
       0,     0,     0,   131,   132,   133,   134,   135,     0,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
       0,   147,   148,   149,     0,     0,     0,     0,     0,     0,
       0,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,     0,   195,   196,   197,   198,     0,
     199,     0,   200,     0,     0,     0,   203,   204,   205,     0,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,   216,     0,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   230,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   238,     0,
       0,   241,     0,   243,   244,   245,   246,   247,     0,     0,
     248,     0,   250,     0,     0,   252,   253,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,     0,   280,   281,   282,   283,   284,
       0,   285,   286,     0,   288,     0,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,     0,   297,   298,   299,
       0,     0,   300,   301,     0,   303,     0,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,     0,   316,
     317,   318,   319,   320,   321,   322,   323,   324,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,     0,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,     0,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,   371,   372,
     373,     0,   374,   375,   376,   377,   378,     0,   380,   381,
     382,   383,     0,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,     0,   398,   399,
       0,   400,     0,   402,   403,   404,   405,   406,     0,   407,
     408,     0,     0,   409,   410,   411,   412,   413,     0,   414,
     415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
     423,   424,   425,     0,     0,   426,   427,   428,   429,   430,
     431,   432,     0,   433,     0,   435,   436,   437,   438,     0,
       0,   439,     0,     0,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   485,  2391,     0,     0,     0,
       0,  2392,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    89,    90,    91,    92,    93,    94,    95,    96,     0,
      97,    98,    99,     0,     0,     0,     0,     0,     0,     0,
     100,   101,     0,   102,   103,   104,     0,   106,   107,   108,
     109,   110,     0,   112,   113,     0,   114,   115,   116,   117,
     118,   119,     0,     0,   120,   121,   122,   123,   124,     0,
     125,   126,   127,   128,   129,     0,     0,     0,   131,   132,
     133,   134,   135,     0,   137,   138,   139,     0,   140,   141,
     142,   143,   144,   145,     0,     0,   147,   148,   149,     0,
       0,     0,     0,     0,     0,     0,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,     0,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,     0,
     195,   196,   197,   198,     0,   199,     0,   200,     0,     0,
       0,   203,   204,   205,     0,   207,     0,   208,     0,   209,
     210,     0,   211,   212,   213,   214,   215,   216,     0,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,     0,   230,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   238,     0,     0,   241,     0,   243,   244,
     245,   246,   247,     0,     0,   248,     0,   250,     0,     0,
     252,   253,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,     0,
     280,   281,   282,   283,   284,     0,   285,   286,     0,   288,
       0,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,     0,   297,   298,   299,     0,     0,   300,   301,     0,
     303,     0,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,     0,   316,   317,   318,   319,   320,   321,
     322,   323,   324,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,     0,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,     0,   351,   352,     0,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   372,   373,     0,   374,   375,   376,
     377,   378,     0,   380,   381,   382,   383,     0,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,     0,   398,   399,     0,   400,     0,   402,   403,
     404,   405,   406,     0,   407,   408,     0,     0,   409,   410,
     411,   412,   413,     0,   414,   415,   416,   417,   418,   419,
     420,     0,     0,   421,   422,   423,   424,   425,     0,     0,
     426,   427,   428,   429,   430,   431,   432,     0,   433,     0,
     435,   436,   437,   438,     0,     0,   439,     0,     0,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     485,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    89,    90,    91,    92,
      93,    94,    95,    96,   486,    97,    98,    99,     0,     0,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,     0,   106,   107,   108,   109,   110,     0,   112,   113,
       0,   114,   115,   116,   117,   118,   119,     0,     0,   120,
     121,   122,   123,   124,     0,   125,   126,   127,   128,   129,
       0,     0,     0,   131,   132,   133,   134,   135,     0,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
       0,   147,   148,   149,     0,     0,     0,     0,     0,     0,
       0,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,     0,   195,   196,   197,   198,     0,
     199,     0,   200,     0,     0,     0,   203,   204,   205,     0,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,   216,     0,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   230,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   238,     0,
       0,   241,     0,   243,   244,   245,   246,   247,     0,     0,
     248,     0,   250,     0,     0,   252,   253,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,     0,   280,   281,   282,   283,   284,
       0,   285,   286,     0,   288,     0,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,     0,   297,   298,   299,
       0,     0,   300,   301,     0,   303,     0,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,     0,   316,
     317,   318,   319,   320,   321,   487,   323,   324,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,     0,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,     0,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,   371,   372,
     373,     0,   374,   375,   376,   377,   378,     0,   380,   381,
     382,   383,     0,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,     0,   398,   399,
       0,   400,     0,   402,   403,   404,   405,   406,     0,   407,
     408,     0,     0,   409,   410,   411,   412,   413,     0,   414,
     415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
     423,   424,   425,     0,     0,   426,   427,   428,   429,   430,
     431,   432,     0,   433,     0,   435,   436,   437,   438,     0,
       0,   439,     0,     0,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   485,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    89,    90,    91,    92,    93,    94,    95,    96,   534,
      97,    98,    99,     0,     0,     0,     0,     0,     0,     0,
     100,   101,     0,   102,   103,   104,     0,   106,   107,   108,
     109,   110,     0,   112,   113,     0,   114,   115,   116,   117,
     118,   119,     0,     0,   120,   121,   122,   123,   124,     0,
     125,   126,   127,   128,   129,     0,     0,     0,   131,   132,
     133,   134,   135,     0,   137,   138,   139,     0,   140,   141,
     142,   143,   144,   145,     0,     0,   147,   148,   149,     0,
       0,     0,     0,     0,     0,     0,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,     0,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,     0,
     195,   196,   197,   198,     0,   199,     0,   200,     0,     0,
       0,   203,   204,   205,     0,   207,     0,   208,     0,   209,
     210,     0,   211,   212,   213,   214,   215,   216,     0,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,     0,   230,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   238,     0,     0,   241,     0,   243,   244,
     245,   246,   247,     0,     0,   248,     0,   250,     0,     0,
     252,   253,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,     0,
     280,   281,   282,   283,   284,     0,   285,   286,     0,   288,
       0,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,     0,   297,   298,   299,     0,     0,   300,   301,     0,
     303,     0,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,     0,   316,   317,   318,   319,   320,   321,
     322,   323,   324,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,     0,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,     0,   351,   352,     0,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   372,   373,     0,   374,   375,   376,
     377,   378,     0,   380,   381,   382,   383,     0,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,     0,   398,   399,     0,   400,     0,   402,   403,
     404,   405,   406,     0,   535,   408,     0,     0,   536,   410,
     411,   412,   413,     0,   414,   415,   416,   417,   418,   419,
     420,     0,     0,   421,   422,   423,   424,   425,     0,     0,
     426,   427,   428,   429,   430,   431,   432,     0,   433,     0,
     435,   436,   437,   438,     0,     0,   439,     0,     0,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     485,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    89,    90,    91,    92,
      93,    94,    95,    96,     0,    97,    98,    99,     0,     0,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,     0,   106,   107,   108,   109,   110,     0,   112,   113,
       0,   114,   115,   116,   117,   118,   119,     0,     0,   120,
     121,   122,   123,   124,     0,   125,   126,   127,   128,   129,
       0,     0,     0,   131,   132,   133,   134,   135,     0,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
       0,   147,   148,   149,     0,     0,     0,     0,     0,     0,
       0,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,     0,   195,   196,   197,   198,     0,
     199,     0,   200,     0,     0,     0,   203,   204,   205,     0,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,   216,     0,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   230,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   238,     0,
       0,   241,     0,   243,   244,   245,   246,   247,     0,     0,
     248,     0,   250,     0,     0,   252,   253,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,     0,   280,   281,   282,   283,   284,
       0,   285,   286,     0,   288,     0,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,   554,   297,   298,   299,
       0,     0,   300,   301,     0,   303,     0,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,     0,   316,
     317,   318,   319,   320,   321,   322,   323,   324,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,     0,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,     0,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,   371,   372,
     373,     0,   374,   375,   376,   377,   378,     0,   380,   381,
     382,   383,     0,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,     0,   398,   399,
       0,   400,     0,   402,   403,   404,   405,   406,     0,   407,
     408,     0,     0,   409,   410,   411,   412,   413,     0,   414,
     415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
     423,   424,   425,     0,     0,   426,   427,   428,   429,   430,
     431,   432,     0,   433,     0,   435,   436,   437,   438,     0,
       0,   439,     0,     0,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   485,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    89,    90,    91,    92,    93,    94,    95,    96,     0,
      97,    98,    99,     0,     0,     0,     0,     0,     0,     0,
     100,   101,     0,   102,   103,   104,     0,   106,   107,   108,
     109,   110,     0,   112,   113,     0,   114,   115,   116,   117,
     118,   119,     0,     0,   120,   121,   122,   123,   124,     0,
     125,   126,   127,   128,   129,     0,     0,     0,   131,   132,
     133,   134,   135,     0,   137,   138,   139,     0,   140,   141,
     142,   143,   144,   145,     0,     0,   147,   148,   149,     0,
       0,     0,     0,     0,     0,     0,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,     0,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,     0,
     195,   196,   197,   198,     0,   199,     0,   200,     0,     0,
       0,   203,   204,   205,     0,   207,     0,   208,     0,   209,
     210,     0,   211,   212,   213,   214,   215,   598,     0,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,     0,   230,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   238,     0,     0,   241,     0,   243,   244,
     245,   246,   247,     0,     0,   248,     0,   250,     0,     0,
     252,   253,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,     0,
     280,   281,   282,   283,   284,     0,   285,   286,     0,   288,
       0,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   554,   297,   298,   299,     0,     0,   300,   301,     0,
     303,     0,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,     0,   316,   317,   318,   319,   320,   321,
     322,   323,   324,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,     0,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,     0,   351,   352,     0,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   372,   373,     0,   374,   375,   376,
     377,   378,     0,   380,   381,   382,   383,     0,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,     0,   398,   399,     0,   400,     0,   402,   403,
     404,   405,   406,     0,   407,   408,     0,     0,   409,   410,
     411,   412,   413,     0,   414,   415,   416,   417,   418,   419,
     420,     0,     0,   421,   422,   423,   424,   425,     0,     0,
     426,   427,   428,   429,   430,   431,   432,     0,   433,     0,
     435,   436,   437,   438,     0,     0,   439,     0,     0,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     485,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    89,    90,    91,    92,
      93,    94,    95,    96,   626,    97,    98,    99,     0,     0,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,     0,   106,   107,   108,   109,   110,     0,   112,   113,
       0,   114,   115,   116,   117,   118,   119,     0,     0,   120,
     121,   122,   123,   124,     0,   125,   126,   127,   128,   129,
       0,     0,     0,   131,   132,   133,   134,   135,     0,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
       0,   147,   148,   149,     0,     0,     0,     0,     0,     0,
       0,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,     0,   195,   196,   197,   198,     0,
     199,     0,   200,     0,     0,     0,   203,   204,   205,     0,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,   216,     0,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   230,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   238,     0,
       0,   241,     0,   243,   244,   245,   246,   247,     0,     0,
     248,     0,   250,     0,     0,   252,   253,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,     0,   280,   281,   282,   283,   284,
       0,   285,   286,     0,   288,     0,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,     0,   297,   298,   299,
       0,     0,   300,   301,     0,   303,     0,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,     0,   316,
     317,   318,   319,   320,   321,   322,   323,   324,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,     0,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,     0,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,   371,   372,
     373,     0,   374,   375,   376,   377,   378,     0,   380,   381,
     382,   383,     0,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,     0,   398,   399,
       0,   400,     0,   402,   403,   404,   405,   406,     0,   407,
     408,     0,     0,   409,   410,   411,   412,   413,     0,   414,
     415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
     423,   424,   425,     0,     0,   426,   427,   428,   429,   430,
     431,   432,     0,   433,     0,   435,   436,   437,   438,     0,
       0,   439,     0,     0,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   485,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    89,    90,    91,    92,    93,    94,    95,    96,     0,
      97,    98,    99,     0,     0,     0,     0,     0,     0,     0,
     100,   101,     0,   102,   103,   104,     0,   106,   107,   108,
     109,   110,     0,   112,   113,     0,   114,   115,   116,   117,
     118,   119,     0,     0,   120,   121,   122,   123,   124,     0,
     125,   126,   127,   128,   129,     0,     0,     0,   131,   132,
     133,   134,   135,     0,   137,   138,   139,     0,   140,   141,
     142,   143,   144,   145,     0,     0,   147,   148,   149,     0,
       0,     0,     0,     0,     0,     0,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,     0,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,     0,
     195,   196,   197,   198,     0,   199,     0,   200,     0,     0,
       0,   203,   204,   205,     0,  1528,     0,   208,     0,   209,
     210,     0,   211,   212,   213,   214,   215,   216,     0,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,     0,   230,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   238,     0,     0,   241,     0,   243,   244,
     245,   246,   247,     0,     0,   248,     0,   250,     0,     0,
     252,   253,  1529,     0,     0,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,     0,
     280,   281,   282,   283,   284,     0,   285,   286,     0,   288,
       0,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,     0,   297,   298,   299,     0,     0,   300,   301,     0,
     303,     0,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,     0,   316,   317,   318,   319,   320,   321,
     322,   323,   324,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,     0,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,     0,   351,   352,     0,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   372,   373,     0,   374,   375,   376,
     377,   378,     0,   380,   381,   382,   383,     0,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,     0,   398,   399,  1530,   400,     0,   402,  1531,
     404,  1532,   406,     0,   407,   408,     0,     0,   409,   410,
     411,   412,   413,     0,   414,   415,   416,   417,   418,   419,
     420,     0,     0,   421,   422,  1533,   424,   425,     0,     0,
     426,   427,   428,   429,   430,   431,   432,     0,   433,     0,
     435,   436,   437,   438,     0,     0,   439,     0,     0,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     485,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    89,    90,    91,    92,
      93,    94,    95,    96,     0,    97,    98,    99,     0,     0,
       0,     0,     0,  2081,     0,   100,   101,     0,   102,   103,
     104,     0,   106,   107,   108,   109,   110,     0,   112,   113,
       0,   114,   115,   116,   117,   118,   119,     0,     0,   120,
     121,   122,   123,   124,     0,   125,   126,   127,   128,   129,
       0,     0,     0,   131,   132,   133,   134,   135,     0,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
       0,   147,   148,   149,     0,     0,     0,     0,     0,     0,
       0,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,     0,   195,   196,   197,   198,     0,
     199,     0,   200,     0,     0,     0,   203,   204,   205,     0,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,   216,     0,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   230,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   238,     0,
       0,   241,     0,   243,   244,   245,   246,   247,     0,     0,
     248,     0,   250,     0,     0,   252,   253,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,     0,   280,   281,   282,   283,   284,
       0,   285,   286,     0,   288,     0,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,     0,   297,   298,   299,
       0,     0,   300,   301,     0,   303,     0,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,     0,   316,
     317,   318,   319,   320,   321,   322,   323,   324,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,     0,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,     0,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,   371,   372,
     373,     0,   374,   375,   376,   377,   378,     0,   380,   381,
     382,   383,     0,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,     0,   398,   399,
       0,   400,     0,   402,   403,   404,   405,   406,     0,   407,
     408,     0,     0,   409,   410,   411,   412,   413,     0,   414,
     415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
     423,   424,   425,     0,     0,   426,   427,   428,   429,   430,
     431,   432,     0,   433,     0,   435,   436,   437,   438,     0,
       0,   439,     0,     0,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   485,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    89,    90,    91,    92,    93,    94,    95,    96,     0,
      97,    98,    99,     0,     0,     0,     0,     0,  2095,     0,
     100,   101,     0,   102,   103,   104,     0,   106,   107,   108,
     109,   110,     0,   112,   113,     0,   114,   115,   116,   117,
     118,   119,     0,     0,   120,   121,   122,   123,   124,     0,
     125,   126,   127,   128,   129,     0,     0,     0,   131,   132,
     133,   134,   135,     0,   137,   138,   139,     0,   140,   141,
     142,   143,   144,   145,     0,     0,   147,   148,   149,     0,
       0,     0,     0,     0,     0,     0,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,     0,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,     0,
     195,   196,   197,   198,     0,   199,     0,   200,     0,     0,
       0,   203,   204,   205,     0,   207,     0,   208,     0,   209,
     210,     0,   211,   212,   213,   214,   215,   216,     0,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,     0,   230,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   238,     0,     0,   241,     0,   243,   244,
     245,   246,   247,     0,     0,   248,     0,   250,     0,     0,
     252,   253,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,     0,
     280,   281,   282,   283,   284,     0,   285,   286,     0,   288,
       0,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,     0,   297,   298,   299,     0,     0,   300,   301,     0,
     303,     0,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,     0,   316,   317,   318,   319,   320,   321,
     322,   323,   324,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,     0,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,     0,   351,   352,     0,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   372,   373,     0,   374,   375,   376,
     377,   378,     0,   380,   381,   382,   383,     0,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,     0,   398,   399,     0,   400,     0,   402,   403,
     404,   405,   406,     0,   407,   408,     0,     0,   409,   410,
     411,   412,   413,     0,   414,   415,   416,   417,   418,   419,
     420,     0,     0,   421,   422,   423,   424,   425,     0,     0,
     426,   427,   428,   429,   430,   431,   432,     0,   433,     0,
     435,   436,   437,   438,     0,     0,   439,     0,     0,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     485,     0,  2254,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    89,    90,    91,    92,
      93,    94,    95,    96,     0,    97,    98,    99,     0,     0,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,     0,   106,   107,   108,   109,   110,     0,   112,   113,
       0,   114,   115,   116,   117,   118,   119,     0,     0,   120,
     121,   122,   123,   124,     0,   125,   126,   127,   128,   129,
       0,     0,     0,   131,   132,   133,   134,   135,     0,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
       0,   147,   148,   149,     0,     0,     0,     0,     0,     0,
       0,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,     0,   195,   196,   197,   198,     0,
     199,     0,   200,     0,     0,     0,   203,   204,   205,     0,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,   216,     0,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   230,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   238,     0,
       0,   241,     0,   243,   244,   245,   246,   247,     0,     0,
     248,     0,   250,     0,     0,   252,   253,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,     0,   280,   281,   282,   283,   284,
       0,   285,   286,     0,   288,     0,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,     0,   297,   298,   299,
       0,     0,   300,   301,     0,   303,     0,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,     0,   316,
     317,   318,   319,   320,   321,   322,   323,   324,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,     0,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,     0,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,   371,   372,
     373,     0,   374,   375,   376,   377,   378,     0,   380,   381,
     382,   383,     0,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,     0,   398,   399,
       0,   400,     0,   402,   403,   404,   405,   406,     0,   407,
     408,     0,     0,   409,   410,   411,   412,   413,     0,   414,
     415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
     423,   424,   425,     0,     0,   426,   427,   428,   429,   430,
     431,   432,     0,   433,     0,   435,   436,   437,   438,     0,
       0,   439,     0,     0,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   485,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    89,    90,    91,    92,    93,    94,    95,    96,     0,
      97,    98,    99,     0,     0,     0,     0,     0,     0,     0,
     100,   101,     0,   102,   103,   104,     0,   106,   107,   108,
     109,   110,     0,   112,   113,     0,   114,   115,   116,   117,
     118,   119,     0,     0,   120,   121,   122,   123,   124,     0,
     125,   126,   127,   128,   129,     0,     0,     0,   131,   132,
     133,   134,   135,     0,   137,   138,   139,     0,   140,   141,
     142,   143,   144,   145,     0,     0,   147,   148,   149,     0,
       0,     0,     0,     0,     0,     0,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,     0,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,     0,
     195,   196,   197,   198,     0,   199,     0,   200,     0,     0,
       0,   203,   204,   205,     0,   207,     0,   208,     0,   209,
     210,     0,   211,   212,   213,   214,   215,   216,     0,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,     0,   230,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   238,     0,     0,   241,     0,   243,   244,
     245,   246,   247,     0,     0,   248,     0,   250,     0,     0,
     252,   253,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,     0,
     280,   281,   282,   283,   284,     0,   285,   286,     0,   288,
       0,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,     0,   297,   298,   299,     0,     0,   300,   301,     0,
     303,     0,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,     0,   316,   317,   318,   319,   320,   321,
     322,   323,   324,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,     0,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,     0,   351,   352,     0,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   372,   373,     0,   374,   375,   376,
     377,   378,     0,   380,   381,   382,   383,     0,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,     0,   398,   399,     0,   400,     0,   402,   403,
     404,   405,   406,     0,   407,   408,     0,     0,   409,   410,
     411,   412,   413,     0,   414,   415,   416,   417,   418,   419,
     420,     0,     0,   421,   422,   423,   424,   425,     0,     0,
     426,   427,   428,   429,   430,   431,   432,     0,   433,     0,
     435,   436,   437,   438,     0,     0,   439,     0,     0,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     485,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    89,    90,    91,    92,
      93,    94,    95,    96,     0,    97,    98,    99,     0,     0,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,     0,   106,   107,   108,   109,   110,     0,   112,   113,
       0,   114,   115,   116,   117,   118,   119,     0,     0,   120,
     121,   122,   123,   124,     0,   125,   126,   127,   128,   129,
       0,     0,     0,   131,   132,   133,   134,   135,     0,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
       0,   147,   148,   149,     0,     0,     0,     0,     0,     0,
       0,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,     0,   195,   196,   197,   198,     0,
     199,     0,   200,     0,     0,     0,   203,   204,   205,     0,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,   216,     0,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   230,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   238,     0,
       0,   241,     0,   243,   244,   245,   246,   247,     0,     0,
     248,     0,   250,     0,     0,   252,   253,   546,     0,     0,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,     0,   280,   281,   282,   283,   284,
       0,   285,   286,     0,   288,     0,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,     0,   297,   298,   299,
       0,     0,   300,   301,     0,   303,     0,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,     0,   316,
     317,   318,   319,   320,   321,   322,   323,   324,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,     0,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,     0,
     354,   355,   356,   357,   358,   359,   360,   361,   547,   363,
     364,   365,   366,   367,   368,     0,   369,   370,   371,   372,
     548,     0,   374,   375,   376,   377,   378,     0,   380,   381,
     382,   383,     0,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,     0,   398,   399,
       0,   400,     0,   402,   403,   404,   405,   406,     0,   549,
     408,     0,     0,   409,   410,   411,   412,   413,     0,   414,
     415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
     423,   424,   425,     0,     0,   426,   427,   428,   429,   430,
     431,   432,     0,   433,     0,   435,   436,   437,   438,     0,
       0,   439,     0,     0,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   485,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    89,    90,    91,    92,    93,    94,    95,    96,     0,
      97,    98,    99,     0,     0,     0,     0,     0,     0,     0,
     100,   101,     0,   102,   103,   104,     0,   106,   107,   108,
     109,   110,     0,   112,   113,     0,   114,   115,   116,   117,
     118,   119,     0,     0,   120,   121,   122,   123,   124,     0,
     125,   126,   127,   128,   129,     0,     0,     0,   131,   132,
     133,   134,   135,     0,   137,   138,   139,     0,   140,   141,
     142,   143,   144,   145,     0,     0,   147,   148,   149,     0,
       0,     0,     0,     0,     0,     0,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,     0,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,     0,
     195,   196,   197,   198,     0,   199,     0,   200,     0,     0,
       0,   203,   204,   205,     0,   207,     0,   208,     0,   209,
     210,     0,   211,   212,   213,   214,   215,   216,     0,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,     0,   230,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   238,     0,     0,   241,     0,   243,   244,
     245,   246,   247,     0,     0,   248,     0,   250,     0,     0,
     252,   253,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,     0,
     280,   281,   282,   283,   284,     0,   285,   286,     0,   288,
       0,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,     0,   297,   298,   299,     0,     0,   300,   301,     0,
     303,     0,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,     0,   316,   317,   318,   319,   320,   321,
     322,   323,   324,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   562,   338,     0,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,     0,   351,   352,     0,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   372,   373,     0,   374,   375,   376,
     377,   378,     0,   380,   381,   382,   383,     0,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,     0,   398,   399,     0,   400,     0,   402,   403,
     404,   405,   406,     0,   407,   408,     0,     0,   409,   410,
     411,   412,   413,     0,   414,   415,   416,   417,   418,   419,
     420,     0,     0,   421,   422,   423,   424,   425,     0,     0,
     426,   427,   428,   429,   430,   431,   432,     0,   433,     0,
     435,   436,   437,   438,     0,     0,   439,     0,     0,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     485,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    89,    90,    91,    92,
      93,    94,    95,    96,     0,    97,    98,    99,     0,     0,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,     0,   106,   107,   108,   109,   110,     0,   112,   113,
       0,   114,   115,   116,   117,   118,   119,     0,     0,   120,
     121,   122,   123,   124,     0,   125,   126,   127,   128,   129,
       0,     0,     0,   131,   132,   133,   134,   135,     0,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
       0,   147,   148,   149,     0,     0,     0,     0,     0,     0,
       0,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,     0,   195,   196,   197,   198,     0,
     199,     0,   200,     0,     0,     0,   203,   204,   205,     0,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,   593,     0,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   230,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   238,     0,
       0,   241,     0,   243,   244,   245,   246,   247,     0,     0,
     248,     0,   250,     0,     0,   252,   253,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,     0,   280,   281,   282,   283,   284,
       0,   285,   286,     0,   288,     0,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,     0,   297,   298,   299,
       0,     0,   300,   301,     0,   303,     0,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,     0,   316,
     317,   318,   319,   320,   321,   322,   323,   324,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,     0,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,     0,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,   371,   372,
     373,     0,   374,   375,   376,   377,   378,     0,   380,   381,
     382,   383,     0,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,     0,   398,   399,
       0,   400,     0,   402,   403,   404,   405,   406,     0,   407,
     408,     0,     0,   409,   410,   411,   412,   413,     0,   414,
     415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
     423,   424,   425,     0,     0,   426,   427,   428,   429,   430,
     431,   432,     0,   433,     0,   435,   436,   437,   438,     0,
       0,   439,     0,     0,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   485,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    89,    90,    91,    92,    93,    94,    95,    96,     0,
      97,    98,    99,     0,     0,     0,     0,     0,     0,     0,
     100,   101,     0,   102,   103,   104,     0,   106,   107,   108,
     109,   110,     0,   112,   113,     0,   114,   115,   116,   117,
     118,   119,     0,     0,   120,   121,   122,   123,   124,     0,
     125,   126,   127,   128,   129,     0,     0,     0,   131,   132,
     133,   134,   135,     0,   137,   138,   139,     0,   140,   141,
     142,   143,   144,   145,     0,     0,   147,   148,   149,     0,
       0,     0,     0,     0,     0,     0,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,     0,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,     0,
     195,   196,   197,   198,     0,   199,     0,   200,     0,     0,
       0,   203,   204,   205,     0,   207,     0,   208,     0,   209,
     210,     0,   211,   212,   213,   214,   215,   596,     0,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,     0,   230,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   238,     0,     0,   241,     0,   243,   244,
     245,   246,   247,     0,     0,   248,     0,   250,     0,     0,
     252,   253,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,     0,
     280,   281,   282,   283,   284,     0,   285,   286,     0,   288,
       0,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,     0,   297,   298,   299,     0,     0,   300,   301,     0,
     303,     0,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,     0,   316,   317,   318,   319,   320,   321,
     322,   323,   324,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,     0,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,     0,   351,   352,     0,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   372,   373,     0,   374,   375,   376,
     377,   378,     0,   380,   381,   382,   383,     0,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,     0,   398,   399,     0,   400,     0,   402,   403,
     404,   405,   406,     0,   407,   408,     0,     0,   409,   410,
     411,   412,   413,     0,   414,   415,   416,   417,   418,   419,
     420,     0,     0,   421,   422,   423,   424,   425,     0,     0,
     426,   427,   428,   429,   430,   431,   432,     0,   433,     0,
     435,   436,   437,   438,     0,     0,   439,     0,     0,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     485,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    89,    90,    91,    92,
      93,    94,    95,    96,     0,    97,    98,    99,     0,     0,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,     0,   106,   107,   108,   109,   110,     0,   112,   113,
       0,   114,   115,   116,   117,   118,   119,     0,     0,   120,
     121,   122,   123,   124,     0,   125,   126,   127,   128,   129,
       0,     0,     0,   131,   132,   133,   134,   135,     0,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
       0,   147,   148,   149,     0,     0,     0,     0,     0,     0,
       0,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,     0,   195,   196,   197,   198,     0,
     199,     0,   200,     0,     0,     0,   203,   204,   205,     0,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,   600,     0,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   230,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   238,     0,
       0,   241,     0,   243,   244,   245,   246,   247,     0,     0,
     248,     0,   250,     0,     0,   252,   253,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,     0,   280,   281,   282,   283,   284,
       0,   285,   286,     0,   288,     0,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,     0,   297,   298,   299,
       0,     0,   300,   301,     0,   303,     0,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,     0,   316,
     317,   318,   319,   320,   321,   322,   323,   324,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,     0,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,     0,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,   371,   372,
     373,     0,   374,   375,   376,   377,   378,     0,   380,   381,
     382,   383,     0,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,     0,   398,   399,
       0,   400,     0,   402,   403,   404,   405,   406,     0,   407,
     408,     0,     0,   409,   410,   411,   412,   413,     0,   414,
     415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
     423,   424,   425,     0,     0,   426,   427,   428,   429,   430,
     431,   432,     0,   433,     0,   435,   436,   437,   438,     0,
       0,   439,     0,     0,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   485,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    89,    90,    91,    92,    93,    94,    95,    96,     0,
      97,    98,    99,     0,     0,     0,     0,     0,     0,     0,
     100,   101,     0,   102,   103,   104,     0,   106,   107,   108,
     109,   110,     0,   112,   113,     0,   114,   115,   116,   117,
     118,   119,     0,     0,   120,   121,   122,   123,   124,     0,
     125,   126,   127,   128,   129,     0,     0,     0,   131,   132,
     133,   134,   135,     0,   137,   138,   139,     0,   140,   141,
     142,   143,   144,   145,     0,     0,   147,   148,   149,     0,
       0,     0,     0,     0,     0,     0,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,     0,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,     0,
     195,   196,   197,   198,     0,   199,     0,   200,     0,     0,
       0,   203,   204,   205,     0,   207,     0,   208,     0,   209,
     210,     0,   211,   212,   213,   214,   215,   618,     0,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,     0,   230,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   238,     0,     0,   241,     0,   243,   244,
     245,   246,   247,     0,     0,   248,     0,   250,     0,     0,
     252,   253,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,     0,
     280,   281,   282,   283,   284,     0,   285,   286,     0,   288,
       0,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,     0,   297,   298,   299,     0,     0,   300,   301,     0,
     303,     0,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,     0,   316,   317,   318,   319,   320,   321,
     322,   323,   324,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,     0,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,     0,   351,   352,     0,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   372,   373,     0,   374,   375,   376,
     377,   378,     0,   380,   381,   382,   383,     0,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,     0,   398,   399,     0,   400,     0,   402,   403,
     404,   405,   406,     0,   407,   408,     0,     0,   409,   410,
     411,   412,   413,     0,   414,   415,   416,   417,   418,   419,
     420,     0,     0,   421,   422,   423,   424,   425,     0,     0,
     426,   427,   428,   429,   430,   431,   432,     0,   433,     0,
     435,   436,   437,   438,     0,     0,   439,     0,     0,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     485,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    89,    90,    91,    92,
      93,    94,    95,    96,     0,    97,    98,    99,     0,     0,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,     0,   106,   107,   108,   109,   110,     0,   112,   113,
       0,   114,   115,   116,   117,   118,   119,     0,     0,   120,
     121,   122,   123,   124,     0,   125,   126,   127,   128,   129,
       0,     0,     0,   131,   132,   133,   134,   135,     0,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
       0,   147,   148,   149,     0,     0,     0,     0,     0,     0,
       0,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,     0,   195,   196,   197,   198,     0,
     199,     0,   200,     0,     0,     0,   203,   204,   205,     0,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,   634,     0,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   230,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   238,     0,
       0,   241,     0,   243,   244,   245,   246,   247,     0,     0,
     248,     0,   250,     0,     0,   252,   253,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,     0,   280,   281,   282,   283,   284,
       0,   285,   286,     0,   288,     0,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,     0,   297,   298,   299,
       0,     0,   300,   301,     0,   303,     0,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,     0,   316,
     317,   318,   319,   320,   321,   322,   323,   324,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,     0,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,     0,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,   371,   372,
     373,     0,   374,   375,   376,   377,   378,     0,   380,   381,
     382,   383,     0,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,     0,   398,   399,
       0,   400,     0,   402,   403,   404,   405,   406,     0,   407,
     408,     0,     0,   409,   410,   411,   412,   413,     0,   414,
     415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
     423,   424,   425,     0,     0,   426,   427,   428,   429,   430,
     431,   432,     0,   433,     0,   435,   436,   437,   438,     0,
       0,   439,     0,     0,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   485,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    89,    90,    91,    92,    93,    94,    95,    96,     0,
      97,    98,    99,     0,     0,     0,     0,     0,     0,     0,
     100,   101,     0,   102,   103,   104,     0,   106,   107,   108,
     109,   110,     0,   112,   113,     0,   114,   115,   116,   117,
     118,   119,     0,     0,   120,   121,   122,   123,   124,     0,
     125,   126,   127,   128,   129,     0,     0,     0,   131,   132,
     133,   134,   135,     0,   137,   138,   139,     0,   140,   141,
     142,   143,   144,   145,     0,     0,   147,   148,   149,     0,
       0,     0,     0,     0,     0,     0,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,     0,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,     0,
     195,   196,   197,   198,     0,   199,     0,   200,     0,     0,
       0,   203,   204,   205,     0,   207,     0,   208,     0,   209,
     210,     0,   211,   212,   213,   214,   215,   638,     0,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,     0,   230,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   238,     0,     0,   241,     0,   243,   244,
     245,   246,   247,     0,     0,   248,     0,   250,     0,     0,
     252,   253,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,     0,
     280,   281,   282,   283,   284,     0,   285,   286,     0,   288,
       0,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,     0,   297,   298,   299,     0,     0,   300,   301,     0,
     303,     0,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,     0,   316,   317,   318,   319,   320,   321,
     322,   323,   324,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,     0,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,     0,   351,   352,     0,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   372,   373,     0,   374,   375,   376,
     377,   378,     0,   380,   381,   382,   383,     0,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,     0,   398,   399,     0,   400,     0,   402,   403,
     404,   405,   406,     0,   407,   408,     0,     0,   409,   410,
     411,   412,   413,     0,   414,   415,   416,   417,   418,   419,
     420,     0,     0,   421,   422,   423,   424,   425,     0,     0,
     426,   427,   428,   429,   430,   431,   432,     0,   433,     0,
     435,   436,   437,   438,     0,     0,   439,     0,     0,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     485,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    89,    90,    91,    92,
      93,    94,    95,    96,     0,    97,    98,    99,     0,     0,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,     0,   106,   107,   108,   109,   110,     0,   112,   113,
       0,   114,   115,   116,   117,   118,   119,     0,     0,   120,
     121,   122,   123,   124,     0,   125,   126,   127,   128,   129,
       0,     0,     0,   131,   132,   133,   134,   135,     0,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
       0,   147,   148,   149,     0,     0,     0,     0,     0,     0,
       0,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,     0,   195,   196,   197,   198,     0,
     199,     0,   200,     0,     0,     0,   203,   204,   205,     0,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,   641,     0,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   230,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   238,     0,
       0,   241,     0,   243,   244,   245,   246,   247,     0,     0,
     248,     0,   250,     0,     0,   252,   253,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,     0,   280,   281,   282,   283,   284,
       0,   285,   286,     0,   288,     0,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,     0,   297,   298,   299,
       0,     0,   300,   301,     0,   303,     0,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,     0,   316,
     317,   318,   319,   320,   321,   322,   323,   324,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,     0,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,     0,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,   371,   372,
     373,     0,   374,   375,   376,   377,   378,     0,   380,   381,
     382,   383,     0,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,     0,   398,   399,
       0,   400,     0,   402,   403,   404,   405,   406,     0,   407,
     408,     0,     0,   409,   410,   411,   412,   413,     0,   414,
     415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
     423,   424,   425,     0,     0,   426,   427,   428,   429,   430,
     431,   432,     0,   433,     0,   435,   436,   437,   438,     0,
       0,   439,     0,     0,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   485,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    89,    90,    91,    92,    93,    94,    95,    96,     0,
      97,    98,    99,     0,     0,     0,     0,     0,     0,     0,
     100,   101,     0,   102,   103,   104,     0,   106,   107,   108,
     109,   110,     0,   112,   113,     0,   114,   115,   116,   117,
     118,   119,     0,     0,   120,   121,   122,   123,   124,     0,
     125,   126,   127,   128,   129,     0,     0,     0,   131,   132,
     133,   134,   135,     0,   137,   138,   139,     0,   140,   141,
     142,   143,   144,   145,     0,     0,   147,   148,   149,     0,
       0,     0,     0,     0,     0,     0,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,     0,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,     0,
     195,   196,   197,   198,     0,   199,     0,   200,     0,     0,
       0,   203,   204,   205,     0,   207,     0,   208,     0,   209,
     210,     0,   211,   212,   213,   214,   215,   216,     0,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,     0,   230,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   238,     0,     0,   241,     0,   243,   244,
     245,   246,   247,     0,     0,   248,     0,   250,     0,     0,
     252,   253,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,     0,
     280,   281,   282,   283,   284,     0,   285,   286,     0,   288,
       0,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,     0,   297,   298,   299,     0,     0,   300,   301,     0,
     303,     0,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,     0,   316,   317,   318,   319,   320,   321,
     322,   323,   324,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,     0,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,     0,   351,   352,     0,   354,   355,   356,   357,   358,
     359,   360,   361,   547,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   372,   373,     0,   374,   375,   376,
     377,   378,     0,   380,   381,   382,   383,     0,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,     0,   398,   399,     0,   400,     0,   402,   403,
     404,   405,   406,     0,   549,   408,     0,     0,   409,   410,
     411,   412,   413,     0,   414,   415,   416,   417,   418,   419,
     420,     0,     0,   421,   422,   423,   424,   425,     0,     0,
     426,   427,   428,   429,   430,   431,   432,     0,   433,     0,
     435,   436,   437,   438,     0,     0,   439,     0,     0,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     485,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    89,    90,    91,    92,
      93,    94,    95,    96,     0,    97,    98,    99,     0,     0,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,     0,   106,   107,   108,   109,   110,     0,   112,   113,
       0,   114,   115,   116,   117,   118,   119,     0,     0,   120,
     121,   122,   123,   124,     0,   125,   126,   127,   128,   129,
       0,     0,     0,   131,   132,   133,   134,   135,     0,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
       0,   147,   148,   149,     0,     0,     0,     0,     0,     0,
       0,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,     0,   195,   196,   197,   198,     0,
     199,     0,   200,     0,     0,     0,   203,   204,   205,     0,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,   959,     0,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   230,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   238,     0,
       0,   241,     0,   243,   244,   245,   246,   247,     0,     0,
     248,     0,   250,     0,     0,   252,   253,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,     0,   280,   281,   282,   283,   284,
       0,   285,   286,     0,   288,     0,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,     0,   297,   298,   299,
       0,     0,   300,   301,     0,   303,     0,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,     0,   316,
     317,   318,   319,   320,   321,   322,   323,   324,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,     0,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,     0,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,   371,   372,
     373,     0,   374,   375,   376,   377,   378,     0,   380,   381,
     382,   383,     0,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,     0,   398,   399,
       0,   400,     0,   402,   403,   404,   405,   406,     0,   407,
     408,     0,     0,   409,   410,   411,   412,   413,     0,   414,
     415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
     423,   424,   425,     0,     0,   426,   427,   428,   429,   430,
     431,   432,     0,   433,     0,   435,   436,   437,   438,     0,
       0,   439,     0,     0,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   485,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    89,    90,    91,    92,    93,    94,    95,    96,     0,
      97,    98,    99,     0,     0,     0,     0,     0,     0,     0,
     100,   101,     0,   102,   103,   104,     0,   106,   107,   108,
     109,   110,     0,   112,   113,     0,   114,   115,   116,   117,
     118,   119,     0,     0,   120,   121,   122,   123,   124,     0,
     125,   126,   127,   128,   129,     0,     0,     0,   131,   132,
     133,   134,   135,     0,   137,   138,   139,     0,   140,   141,
     142,   143,   144,   145,     0,     0,   147,   148,   149,     0,
       0,     0,     0,     0,     0,     0,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,     0,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,     0,
     195,   196,   197,   198,     0,   199,     0,   200,     0,     0,
       0,   203,   204,   205,     0,   207,     0,   208,     0,   209,
     210,     0,   211,   212,   213,   214,   215,   961,     0,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,     0,   230,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   238,     0,     0,   241,     0,   243,   244,
     245,   246,   247,     0,     0,   248,     0,   250,     0,     0,
     252,   253,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,     0,
     280,   281,   282,   283,   284,     0,   285,   286,     0,   288,
       0,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,     0,   297,   298,   299,     0,     0,   300,   301,     0,
     303,     0,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,     0,   316,   317,   318,   319,   320,   321,
     322,   323,   324,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,     0,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,     0,   351,   352,     0,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   372,   373,     0,   374,   375,   376,
     377,   378,     0,   380,   381,   382,   383,     0,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,     0,   398,   399,     0,   400,     0,   402,   403,
     404,   405,   406,     0,   407,   408,     0,     0,   409,   410,
     411,   412,   413,     0,   414,   415,   416,   417,   418,   419,
     420,     0,     0,   421,   422,   423,   424,   425,     0,     0,
     426,   427,   428,   429,   430,   431,   432,     0,   433,     0,
     435,   436,   437,   438,     0,     0,   439,     0,     0,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     485,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    89,    90,    91,    92,
      93,    94,    95,    96,     0,    97,    98,    99,     0,     0,
       0,     0,     0,  1183,     0,   100,   101,     0,   102,   103,
     104,     0,   106,   107,   108,   109,   110,     0,   112,   113,
       0,   114,   115,   116,   117,   118,   119,     0,     0,   120,
     121,   122,   123,   124,     0,   125,   126,   127,   128,   129,
       0,     0,     0,   131,   132,   133,   134,   135,     0,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
       0,   147,   148,   149,     0,     0,     0,     0,     0,     0,
       0,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,     0,   195,   196,   197,   198,     0,
     199,     0,   200,     0,     0,     0,   203,   204,   205,     0,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,   216,     0,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   230,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   238,     0,
       0,   241,     0,   243,   244,   245,   246,   247,     0,     0,
     248,     0,   250,     0,     0,   252,   253,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,     0,   280,   281,   282,   283,   284,
       0,   285,   286,     0,   288,     0,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,     0,   297,   298,   299,
       0,     0,   300,   301,     0,   303,     0,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,     0,   316,
     317,   318,   319,   320,   321,   322,   323,   324,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,     0,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,     0,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,   371,   372,
     373,     0,     0,   375,   376,   377,   378,     0,   380,   381,
     382,   383,     0,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,     0,   398,   399,
       0,   400,     0,   402,   403,   404,   405,   406,     0,   407,
     408,     0,     0,   409,   410,   411,   412,   413,     0,   414,
     415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
     423,   424,   425,     0,     0,   426,   427,   428,   429,   430,
     431,   432,     0,   433,     0,   435,   436,   437,   438,     0,
       0,   439,     0,     0,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   485,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    89,    90,    91,    92,    93,    94,    95,    96,     0,
      97,    98,    99,     0,     0,     0,     0,     0,     0,     0,
     100,   101,     0,   102,   103,   104,     0,   106,   107,   108,
     109,   110,     0,   112,   113,     0,   114,   115,   116,   117,
     118,   119,     0,     0,   120,   121,   122,   123,   124,     0,
     125,   126,   127,   128,   129,     0,     0,     0,   131,   132,
     133,   134,   135,     0,   137,   138,   139,     0,   140,   141,
     142,   143,   144,   145,     0,     0,   147,   148,   149,     0,
       0,     0,     0,     0,     0,     0,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,     0,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,     0,
     195,   196,   197,   198,     0,   199,     0,   200,     0,     0,
       0,   203,   204,   205,     0,   207,     0,   208,     0,   209,
     210,     0,   211,   212,   213,   214,   215,  1316,     0,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,     0,   230,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   238,     0,     0,   241,     0,   243,   244,
     245,   246,   247,     0,     0,   248,     0,   250,     0,     0,
     252,   253,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,     0,
     280,   281,   282,   283,   284,     0,   285,   286,     0,   288,
       0,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,     0,   297,   298,   299,     0,     0,   300,   301,     0,
     303,     0,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,     0,   316,   317,   318,   319,   320,   321,
     322,   323,   324,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,     0,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,     0,   351,   352,     0,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   372,   373,     0,   374,   375,   376,
     377,   378,     0,   380,   381,   382,   383,     0,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,     0,   398,   399,     0,   400,     0,   402,   403,
     404,   405,   406,     0,   407,   408,     0,     0,   409,   410,
     411,   412,   413,     0,   414,   415,   416,   417,   418,   419,
     420,     0,     0,   421,   422,   423,   424,   425,     0,     0,
     426,   427,   428,   429,   430,   431,   432,     0,   433,     0,
     435,   436,   437,   438,     0,     0,   439,     0,     0,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     485,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    89,    90,    91,    92,
      93,    94,    95,    96,     0,    97,    98,    99,     0,     0,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,     0,   106,   107,   108,   109,   110,     0,   112,   113,
       0,   114,   115,   116,   117,   118,   119,     0,     0,   120,
     121,   122,   123,   124,     0,   125,   126,   127,   128,   129,
       0,     0,     0,   131,   132,   133,   134,   135,     0,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
       0,   147,   148,   149,     0,     0,     0,     0,     0,     0,
       0,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,     0,   195,   196,   197,   198,     0,
     199,     0,   200,     0,     0,     0,   203,   204,   205,     0,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,  1329,     0,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   230,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   238,     0,
       0,   241,     0,   243,   244,   245,   246,   247,     0,     0,
     248,     0,   250,     0,     0,   252,   253,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,     0,   280,   281,   282,   283,   284,
       0,   285,   286,     0,   288,     0,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,     0,   297,   298,   299,
       0,     0,   300,   301,     0,   303,     0,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,     0,   316,
     317,   318,   319,   320,   321,   322,   323,   324,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,     0,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,     0,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,   371,   372,
     373,     0,   374,   375,   376,   377,   378,     0,   380,   381,
     382,   383,     0,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,     0,   398,   399,
       0,   400,     0,   402,   403,   404,   405,   406,     0,   407,
     408,     0,     0,   409,   410,   411,   412,   413,     0,   414,
     415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
     423,   424,   425,     0,     0,   426,   427,   428,   429,   430,
     431,   432,     0,   433,     0,   435,   436,   437,   438,     0,
       0,   439,     0,     0,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   485,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    89,    90,    91,    92,    93,    94,    95,    96,     0,
      97,    98,    99,     0,     0,     0,     0,     0,     0,     0,
     100,   101,     0,   102,   103,   104,     0,   106,   107,   108,
     109,   110,     0,   112,   113,     0,   114,   115,   116,   117,
     118,   119,     0,     0,   120,   121,   122,   123,   124,     0,
     125,   126,   127,   128,   129,     0,     0,     0,   131,   132,
     133,   134,   135,     0,   137,   138,   139,     0,   140,   141,
     142,   143,   144,   145,     0,     0,   147,   148,   149,     0,
       0,     0,     0,     0,     0,     0,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,     0,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,     0,
     195,   196,   197,   198,     0,   199,     0,   200,     0,     0,
       0,   203,   204,   205,     0,   207,     0,   208,     0,   209,
     210,     0,   211,   212,   213,   214,   215,  1599,     0,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,     0,   230,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   238,     0,     0,   241,     0,   243,   244,
     245,   246,   247,     0,     0,   248,     0,   250,     0,     0,
     252,   253,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,     0,
     280,   281,   282,   283,   284,     0,   285,   286,     0,   288,
       0,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,     0,   297,   298,   299,     0,     0,   300,   301,     0,
     303,     0,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,     0,   316,   317,   318,   319,   320,   321,
     322,   323,   324,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,     0,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,     0,   351,   352,     0,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   372,   373,     0,   374,   375,   376,
     377,   378,     0,   380,   381,   382,   383,     0,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,     0,   398,   399,     0,   400,     0,   402,   403,
     404,   405,   406,     0,   407,   408,     0,     0,   409,   410,
     411,   412,   413,     0,   414,   415,   416,   417,   418,   419,
     420,     0,     0,   421,   422,   423,   424,   425,     0,     0,
     426,   427,   428,   429,   430,   431,   432,     0,   433,     0,
     435,   436,   437,   438,     0,     0,   439,     0,     0,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     485,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    89,    90,    91,    92,
      93,    94,    95,    96,     0,    97,    98,    99,     0,     0,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,     0,   106,   107,   108,   109,   110,     0,   112,   113,
       0,   114,   115,   116,   117,   118,   119,     0,     0,   120,
     121,   122,   123,   124,     0,   125,   126,   127,   128,   129,
       0,     0,     0,   131,   132,   133,   134,   135,     0,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
       0,   147,   148,   149,     0,     0,     0,     0,     0,     0,
       0,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,     0,   195,   196,   197,   198,     0,
     199,     0,   200,     0,     0,     0,   203,   204,   205,     0,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,  1611,     0,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   230,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   238,     0,
       0,   241,     0,   243,   244,   245,   246,   247,     0,     0,
     248,     0,   250,     0,     0,   252,   253,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,     0,   280,   281,   282,   283,   284,
       0,   285,   286,     0,   288,     0,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,     0,   297,   298,   299,
       0,     0,   300,   301,     0,   303,     0,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,     0,   316,
     317,   318,   319,   320,   321,   322,   323,   324,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,     0,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,     0,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,   371,   372,
     373,     0,   374,   375,   376,   377,   378,     0,   380,   381,
     382,   383,     0,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,     0,   398,   399,
       0,   400,     0,   402,   403,   404,   405,   406,     0,   407,
     408,     0,     0,   409,   410,   411,   412,   413,     0,   414,
     415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
     423,   424,   425,     0,     0,   426,   427,   428,   429,   430,
     431,   432,     0,   433,     0,   435,   436,   437,   438,     0,
       0,   439,     0,     0,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   485,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    89,    90,    91,    92,    93,    94,    95,    96,     0,
      97,    98,    99,     0,     0,     0,     0,     0,     0,     0,
     100,   101,     0,   102,   103,   104,     0,   106,   107,   108,
     109,   110,     0,   112,   113,     0,   114,   115,   116,   117,
     118,   119,     0,     0,   120,   121,   122,   123,   124,     0,
     125,   126,   127,   128,   129,     0,     0,     0,   131,   132,
     133,   134,   135,     0,   137,   138,   139,     0,   140,   141,
     142,   143,   144,   145,     0,     0,   147,   148,   149,     0,
       0,     0,     0,     0,     0,     0,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,     0,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,     0,
     195,   196,   197,   198,     0,   199,     0,   200,     0,     0,
       0,   203,   204,   205,     0,   207,     0,   208,     0,   209,
     210,     0,   211,   212,   213,   214,   215,  1613,     0,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,     0,   230,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   238,     0,     0,   241,     0,   243,   244,
     245,   246,   247,     0,     0,   248,     0,   250,     0,     0,
     252,   253,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,     0,
     280,   281,   282,   283,   284,     0,   285,   286,     0,   288,
       0,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,     0,   297,   298,   299,     0,     0,   300,   301,     0,
     303,     0,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,     0,   316,   317,   318,   319,   320,   321,
     322,   323,   324,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,     0,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,     0,   351,   352,     0,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   372,   373,     0,   374,   375,   376,
     377,   378,     0,   380,   381,   382,   383,     0,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,     0,   398,   399,     0,   400,     0,   402,   403,
     404,   405,   406,     0,   407,   408,     0,     0,   409,   410,
     411,   412,   413,     0,   414,   415,   416,   417,   418,   419,
     420,     0,     0,   421,   422,   423,   424,   425,     0,     0,
     426,   427,   428,   429,   430,   431,   432,     0,   433,     0,
     435,   436,   437,   438,     0,     0,   439,     0,     0,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     485,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    89,    90,    91,    92,
      93,    94,    95,    96,     0,    97,    98,    99,     0,     0,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,     0,   106,   107,   108,   109,   110,     0,   112,   113,
       0,   114,   115,   116,   117,   118,   119,     0,     0,   120,
     121,   122,   123,   124,     0,   125,   126,   127,   128,   129,
       0,     0,     0,   131,   132,   133,   134,   135,     0,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
       0,   147,   148,   149,     0,     0,     0,     0,     0,     0,
       0,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,     0,   195,   196,   197,   198,     0,
     199,     0,   200,     0,     0,     0,   203,   204,   205,     0,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,  2195,     0,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   230,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   238,     0,
       0,   241,     0,   243,   244,   245,   246,   247,     0,     0,
     248,     0,   250,     0,     0,   252,   253,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,     0,   280,   281,   282,   283,   284,
       0,   285,   286,     0,   288,     0,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,     0,   297,   298,   299,
       0,     0,   300,   301,     0,   303,     0,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,     0,   316,
     317,   318,   319,   320,   321,   322,   323,   324,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,     0,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,     0,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,   371,   372,
     373,     0,   374,   375,   376,   377,   378,     0,   380,   381,
     382,   383,     0,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,     0,   398,   399,
       0,   400,     0,   402,   403,   404,   405,   406,     0,   407,
     408,     0,     0,   409,   410,   411,   412,   413,     0,   414,
     415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
     423,   424,   425,     0,     0,   426,   427,   428,   429,   430,
     431,   432,     0,   433,     0,   435,   436,   437,   438,     0,
       0,   439,     0,     0,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,  1013,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    89,    90,    91,    92,    93,    94,    95,    96,     0,
      97,    98,    99,     0,     0,     0,     0,     0,     0,     0,
     100,   101,     0,   102,   103,   104,   105,   106,   107,   108,
       0,  1014,   111,  1015,  1016,     0,   114,   115,   116,   117,
     118,   119,     0,     0,   120,   121,  1017,  1018,   124,     0,
     125,   126,   127,   128,     0,     0,   130,     0,   131,   132,
     133,   134,   135,   136,   137,   138,   139,     0,   140,   141,
     142,   143,   144,   145,     0,   146,   147,   148,   149,     0,
       0,     0,   150,     0,     0,     0,   151,   152,   153,   154,
     155,   156,   157,  1019,  1020,   160,     0,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   692,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,     0,   189,   190,   191,   192,     0,     0,   194,     0,
     195,   196,  1021,   198,     0,   199,     0,   200,   201,     0,
     202,   203,   204,   205,   206,   207,     0,   208,     0,     0,
     210,     0,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,   229,     0,   231,   232,   233,   234,  1022,  1023,
       0,  1024,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,     0,     0,   248,   249,   250,   251,     0,
     252,   253,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,  1025,   279,
    1026,   281,   282,   283,     0,     0,   285,   286,   287,   288,
       0,     0,   290,  1027,   292,   293,   294,     0,   295,   296,
       0,     0,   297,   298,   299,     0,     0,   300,     0,   302,
     303,   304,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,     0,   316,   317,     0,   319,   320,     0,
     322,   323,   324,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,  1028,   335,   336,   337,   338,     0,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,     0,   351,   352,   353,   354,   355,   356,  1029,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   372,   373,     0,   374,  1030,   376,
     377,   378,   379,   380,   381,  1031,   383,     0,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,  1032,
     396,     0,     0,   398,   399,     0,   400,   401,   402,   403,
     404,   405,   406,     0,  1033,  1034,     0,     0,   409,   410,
       0,   412,     0,     0,   414,   415,   416,   417,   418,   419,
     420,     0,     0,   421,   422,   423,   424,   425,     0,     0,
     426,   427,   428,   429,   430,     0,  1035,     0,   433,   434,
     435,   436,   437,   438,     0,     0,   439,     0,     0,   440,
     441,   442,   443,   444,   445,   485,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   457,   458,   459,   460,
       0,    89,    90,    91,    92,    93,    94,    95,    96,     0,
      97,    98,    99,     0,     0,     0,     0,     0,     0,     0,
     100,   101,     0,   102,   103,   104,     0,   106,   107,   108,
     109,   110,     0,   112,   113,     0,   114,   115,   116,   117,
     118,   119,     0,     0,   120,   121,   122,   123,   124,     0,
     125,   126,   127,   128,   129,     0,     0,     0,   131,   132,
     133,   134,   135,     0,   137,   138,   139,     0,   140,   141,
     142,   143,   144,   145,     0,     0,   147,   148,   149,     0,
       0,     0,     0,     0,     0,     0,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,     0,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,     0,
     195,   196,   197,   198,     0,   199,     0,   200,     0,     0,
       0,   203,   204,   205,     0,   207,     0,   208,     0,   209,
     210,     0,   211,   212,   213,   214,   215,   216,     0,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,     0,   230,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   238,     0,     0,   241,     0,   243,   244,
     245,   246,   247,     0,     0,   248,     0,   250,     0,     0,
     252,   253,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,     0,
     280,   281,   282,   283,   284,     0,   285,   286,     0,   288,
       0,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,     0,   297,   298,   299,     0,     0,   300,   301,     0,
     303,     0,   305,   306,   307,   308,   309,   310,   311,     0,
     313,   314,   315,     0,   316,   317,   318,   319,   320,   321,
     322,   323,   324,     0,   325,   326,   327,   328,   329,   330,
     331,     0,   333,   334,   335,   336,   337,   338,     0,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,     0,   351,   352,     0,   354,   355,   356,   357,     0,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   372,   373,     0,   374,   375,   376,
     377,   378,     0,   380,   381,   382,   383,     0,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,     0,   398,   399,     0,   400,     0,   402,   403,
     404,   405,   406,     0,   407,   408,     0,     0,   409,   410,
     411,   412,   413,     0,   414,   415,   416,   417,   418,   419,
     420,     0,     0,   421,   422,   423,   424,   425,     0,     0,
     426,   427,   428,   429,   430,   431,   432,     0,   433,     0,
     435,   436,   437,   438,     0,     0,   439,     0,     0,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
    1013,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    89,    90,    91,    92,
      93,    94,    95,    96,     0,    97,    98,    99,     0,     0,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,   105,   106,   107,   108,     0,  1014,   111,  1015,  1016,
       0,   114,   115,   116,   117,   118,   119,     0,     0,   120,
     121,  1017,  1018,   124,     0,   125,   126,   127,   128,     0,
       0,   130,     0,   131,   132,   133,   134,   135,   136,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
     146,   147,   148,   149,     0,     0,     0,   150,     0,     0,
       0,   151,   152,   153,   154,   155,   156,   157,  1019,  1020,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     692,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,     0,   189,   190,   191,
     192,     0,     0,   194,     0,   195,   196,  1021,   198,     0,
     199,     0,   200,   201,     0,   202,   203,   204,   205,   206,
     207,     0,   208,     0,     0,   210,     0,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,   229,     0,   231,
     232,   233,   234,  1022,  1023,     0,  1024,     0,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,     0,     0,
     248,   249,   250,   251,     0,   252,   253,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,  1025,   279,  1026,   281,   282,   283,     0,
       0,   285,   286,   287,   288,     0,     0,   290,  1027,   292,
     293,   294,     0,   295,   296,     0,     0,   297,   298,   299,
       0,     0,   300,     0,   302,   303,   304,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,     0,   316,
     317,     0,   319,   320,     0,   322,   323,   324,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,  1028,   335,
     336,   337,   338,     0,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,   353,
     354,   355,   356,     0,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,   371,   372,
     373,     0,   374,     0,   376,   377,   378,   379,   380,   381,
    1031,   383,     0,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,     0,   396,     0,     0,   398,   399,
       0,   400,   401,   402,   403,   404,   405,   406,     0,  1033,
    1034,     0,     0,   409,   410,     0,   412,     0,     0,   414,
     415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
     423,   424,   425,     0,     0,   426,   427,   428,   429,   430,
       0,  1035,     0,   433,   434,   435,   436,   437,   438,     0,
       0,   439,     0,     0,   440,   441,   442,   443,   444,   445,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   457,   458,   459,   460
};

static const yytype_int16 yycheck[] =
{
       6,     6,   597,    33,     0,   513,   822,   652,    55,   728,
     545,   612,     6,   604,   582,   689,   690,   652,     0,  1050,
     856,   512,   561,  1928,   830,   957,   817,   557,   639,    16,
     957,   842,     0,   707,     0,     0,  1609,   844,   957,   957,
     987,   819,   717,  1615,     0,  1617,   802,   517,  1540,    28,
      16,  1880,   813,  1108,  1109,  1952,  1497,     0,  1073,  1084,
      16,  1606,    57,  1560,  1960,  1073,  1073,  1839,  1812,   847,
      32,     0,   660,     9,  1967,     5,   519,    33,  1052,    75,
     519,     5,  1537,  1073,    11,    58,     5,     3,    58,    13,
      14,   518,  1158,    50,   606,     0,  1551,    57,     5,    73,
    2199,    57,     9,  1845,   643,     5,    85,   597,   519,   599,
    1204,   601,    67,    13,    14,    31,    32,  1206,   763,    75,
       5,    11,     5,     5,  2202,     5,   979,     9,    13,    14,
    1675,    40,     5,    75,   167,     5,  2252,    48,     5,     5,
       5,    40,     5,    85,   168,   116,   136,   617,   167,    27,
     119,    41,     3,     4,     5,     4,    34,  2275,     9,  2205,
       9,   106,   121,    92,    58,   604,  1869,   210,   524,     9,
     579,  1716,  1717,  2289,    27,    11,  2341,    58,   167,  2191,
      27,    34,   236,    73,   236,   236,   831,    92,   727,   834,
     835,    11,    15,   604,    82,   276,     4,    27,   579,   729,
     144,     9,    93,   278,    34,    41,   346,    11,  1844,   164,
     168,  2370,  1782,   652,   661,   300,  2153,   119,   116,   291,
     659,    41,   159,  2462,  1030,   264,  2426,   757,   324,   656,
      75,    78,   236,   161,   106,   204,   284,    73,   126,    86,
      85,   652,  2527,    37,  2298,    19,   114,  1899,   659,   284,
     166,   443,   168,    73,  2370,   105,    11,   116,   770,   267,
      27,   172,   347,   114,   208,  2319,   854,   855,   115,  2610,
    2585,   427,  2587,   812,   337,   186,   784,   168,   119,   406,
     191,   107,    11,   448,   448,   473,   358,   446,    27,     4,
    2408,   482,   860,   134,     9,   486,   488,   351,   486,   351,
    2197,   392,   365,   300,   168,   470,   470,   107,  2052,   200,
    2356,   470,  1753,  2085,  2553,   226,   763,  2089,    73,   484,
    1972,   393,   449,   260,   215,  1898,   765,   766,   484,   123,
    1086,  2672,   159,   224,  2076,   426,   200,   184,   296,   198,
     284,  2626,  2657,   439,   484,  1019,  1020,   351,   195,   278,
    1895,   215,  1897,  1027,   765,   766,   311,   129,   209,  1034,
     224,   433,   129,   964,   372,   338,   257,   261,   338,   423,
     268,   423,   423,   278,   446,  2491,  2313,   965,   306,   230,
       5,  2581,  1837,   830,  1839,   404,   425,   278,   979,   261,
     129,   241,  2446,   220,   479,  1532,  1533,  1112,   470,   249,
     268,   810,   261,   484,   263,  2644,   263,   295,  2524,   484,
     339,   268,   484,   371,  1005,   404,    31,    32,  2121,   423,
      23,    11,    23,   779,   484,    15,    29,  2592,    29,   810,
     484,    21,   484,   484,   339,  1226,  2341,  1982,  1194,  2075,
     488,    31,    32,  2013,   338,   488,  1282,  2459,   393,  2608,
    2568,   342,   442,   488,   473,   488,   425,   338,   429,   370,
     484,   318,   404,   382,   383,   420,   289,   486,   427,   310,
    1323,   365,  1497,   981,   470,   419,  2554,    92,   342,  1573,
     484,   390,   479,   974,  2228,  1574,   977,  1542,   470,   519,
    2262,   390,  2608,    83,   985,  2267,  1562,   375,  2270,     0,
    1307,   273,   470,  2602,   470,   470,   436,   487,   482,  2555,
     398,  2253,   486,   519,   470,   488,  1055,   446,   488,  1355,
    1235,   437,   375,   425,  1345,  1064,  1117,   484,  1349,  1068,
    1351,   134,   519,   134,   381,   582,   427,   384,   544,   545,
     979,   446,    92,  1568,  1056,   375,   989,   483,  1087,  1088,
     989,   427,   518,   480,   484,   561,   485,  2130,   487,   404,
     484,   988,   518,   519,  2461,   448,  1005,  1155,   979,  2465,
    1100,  2143,   559,  2466,   569,   571,  1550,   484,   989,   157,
     485,   117,   487,  1030,   484,   448,   334,   470,     4,   571,
     480,  1103,  1104,     9,  1005,   574,   602,   603,   604,   484,
     562,   484,   484,   571,   484,   571,   571,   470,   484,   569,
    1255,   484,   482,   569,   484,   571,   486,   484,   484,   484,
    1265,   484,  2119,  1268,   475,   476,   475,   476,   571,  1120,
    2085,  2403,   114,  2377,  2089,   475,   476,   643,   446,   475,
     476,   477,   478,   479,   480,  1157,   652,    30,  2193,   227,
      22,   187,  1243,   659,   660,   661,  1251,   477,   478,   479,
     480,   319,   470,  2560,   488,  1112,   117,   475,   476,   236,
     676,    54,  1387,   477,   478,   479,   480,   437,  1117,   282,
    1755,   282,  2123,  1439,  1440,   247,   248,  2592,  1444,   347,
     656,  1828,  1829,  1830,  1831,  1340,   194,   727,   704,   173,
     656,   485,   184,    75,   488,  1340,  1117,   216,  1783,  1320,
    1278,  1279,  1280,  1324,  1729,  1389,  1327,   723,   724,   725,
    1728,   727,  1729,  1730,  1480,  1481,    23,  2300,  1753,   332,
    1677,   332,  1323,   336,  1224,   336,   187,   693,   129,  1729,
    1730,  1731,   748,   358,  1799,  1464,   475,   476,   477,   478,
     479,   480,   261,   527,   528,   157,   230,    59,     4,   765,
     766,  1251,   365,     9,   365,    67,   473,   146,   484,   144,
    1261,   727,   194,   547,  2671,  1266,    75,   484,   393,   242,
    1270,   263,   157,  1544,   351,  1275,    85,   162,  1235,   236,
     397,   797,   399,   355,   356,   801,   802,  2252,  2627,  2628,
     795,   796,  1241,   798,  1243,   409,   812,  2262,   358,   157,
     789,   236,  2267,   192,   162,  2270,   479,   397,   433,   399,
    1656,   484,   437,   486,   830,   227,  1633,   430,  1298,   430,
    1241,   446,  1243,   208,  2289,   795,   796,   134,   798,   795,
     796,    75,   798,   393,    11,  1564,  2675,   439,   854,   855,
     856,    85,   227,   351,  1393,   470,   423,     4,  2431,   368,
     354,   359,     9,  1641,  2436,    64,    65,   846,     5,   484,
    1686,     8,   263,   275,    41,  1691,   484,    14,   652,   227,
      13,    14,   273,   433,  1323,   659,    23,   484,   678,   679,
      27,   485,   182,   183,   488,   393,   446,   487,   467,    23,
     275,  1340,   214,  1928,   351,    29,    73,  2094,   278,   284,
    2097,   448,  1323,   703,  1353,  2370,   425,   484,   486,  1458,
     470,    13,    14,   397,   514,   399,   351,   275,   230,  1340,
      23,   346,   347,   470,   484,     8,    29,   467,    11,   129,
    1387,   439,  1353,    16,    17,    18,  1485,   484,  2403,   423,
     477,  1457,     8,  1459,  1460,    11,   730,   247,   248,   965,
      16,    17,    18,   166,   485,   155,   740,   488,   346,   347,
    1685,  1539,   562,   979,   488,   485,   423,    33,   488,   753,
     485,   485,   157,   989,   488,   282,  1525,   162,    23,   763,
     479,   765,   766,   485,    29,   484,   488,   486,   423,  1005,
     484,  1612,   989,  1614,   485,  1761,  1762,  1763,  1764,  1724,
     134,  1767,  1768,  1769,  1770,  1771,  1772,  1773,  1774,  1775,
    1776,  1953,   988,   167,  1030,  1740,  1953,   485,  1975,   210,
     488,  2523,   988,   149,  1953,  1953,  2491,   484,    54,   336,
     337,   134,   214,   485,   419,  1760,   488,   485,    67,  1055,
     488,   485,   227,   484,   488,  1061,  1052,   467,  1064,   484,
    1816,  1817,  1068,   149,   485,   355,   356,   488,   365,  2524,
    1052,  1672,  1707,   263,  1789,   484,  1082,   486,   268,  1085,
    1086,  1087,  1088,   273,  1052,    36,  1052,  1052,  2661,  1095,
    1096,  1907,   446,  1909,   448,   114,  1052,  1908,  2123,   134,
     275,  1107,  1909,   332,    55,  1896,  1112,  1113,  1114,  1115,
    1116,  1117,  1787,  1788,  1705,  1121,  1122,  2609,   191,    23,
    1126,   484,   149,   486,  1130,    29,   358,  1133,  1134,  1135,
    1136,  1137,  1138,  1139,  1140,  1141,  1947,  2629,  1144,   212,
     485,   485,  1148,   488,   488,  1151,  2177,  1153,  1867,  1155,
     485,   148,   171,  2608,   105,   482,   212,   484,   282,   486,
     485,   393,   485,   488,   149,   488,   485,  1123,   484,   488,
    1176,     8,   485,   263,    11,   488,  1615,  1616,  1617,    16,
      17,    18,   346,   347,   485,  1181,  1173,   488,  1194,   282,
     439,  2683,   485,   783,    81,   488,   485,  1203,  1204,   488,
     485,   433,   484,   488,  1615,  1616,  1617,   280,   332,  1700,
     450,   485,   336,  1928,   488,   485,   485,   485,   488,   488,
     488,   411,   149,   485,   280,  1181,   488,  1017,  1018,  1235,
     134,   421,   397,   486,   399,  1241,  1026,  1243,  1685,   332,
     149,   365,   193,   336,   263,     6,   149,   282,   485,   268,
      11,   488,   484,   484,    15,  1794,    23,   346,   347,    20,
      21,    22,    29,   397,    25,   399,  1705,    28,  1707,   278,
      31,    32,   365,   216,   393,   485,  1282,  1724,   488,  1285,
    1286,    36,  1288,  1928,  1796,   602,   225,   144,  1078,  1079,
     241,   484,   311,  1740,  1705,     5,  1707,   332,   249,  1073,
     157,   336,  2090,     5,  2092,   162,   430,   326,  2339,  1315,
     261,   324,   162,  1760,    75,  1311,  2341,  1323,   261,  1849,
     307,    82,    83,    84,    85,    86,   485,     5,   485,   488,
     365,   488,   148,   576,  1340,   578,  1927,   430,  1929,   661,
    2131,   292,  1789,   660,   661,   485,   359,  1353,   488,  1355,
     485,   208,  2159,   488,   485,  1311,   485,   488,   546,   488,
     548,   358,  2168,  1974,  1876,  1812,   484,   134,   485,    93,
     227,   488,     5,   485,   484,  1943,   488,   320,   282,   324,
     393,  1387,   485,   251,   252,   488,   337,  1393,  1394,  1163,
     355,   356,   982,  1399,   984,   430,   393,   484,   471,   472,
     473,   420,   475,   476,   477,   478,   479,   480,   359,   485,
     485,  1441,   488,   488,   359,   471,   472,   473,   275,   475,
     476,   477,   478,   479,   480,   368,   439,   284,   379,   765,
     766,   484,   336,  1439,  1440,  1441,   433,   485,  1444,   485,
     488,   484,   488,   280,   168,   484,  2161,   484,   393,   446,
     173,  1457,  1458,  1459,  1460,  1485,   484,   129,   484,  1465,
     485,   365,   485,   488,   485,   488,   484,   488,     5,  2225,
     484,   194,   484,   470,  1480,  1481,   200,   485,   484,  1485,
     488,  1928,   425,   155,  1923,  1441,   485,   484,  1927,   488,
    1929,   215,     5,  1499,   439,   484,  1502,   447,  1504,    15,
     224,   484,   484,  2218,   484,  2150,   210,   230,   830,   488,
      96,    36,  1923,   830,     8,   282,  1927,   365,  1929,  1525,
     162,   275,    16,    17,    18,  1555,   430,   162,   273,  1485,
     225,  1537,  1537,   257,   485,   114,  2347,   854,   855,   856,
     484,   404,   358,  1537,   484,  1551,  1551,  1503,   404,    85,
     488,  2162,  2163,    54,  1550,  2311,    54,  1551,   404,  1565,
     283,   254,   419,  1519,   404,   332,  1340,  2592,  1550,   336,
    1344,   485,   490,   404,  1580,  2110,   446,   393,   149,  1353,
    2215,  1537,  1550,    92,  1550,  1550,   263,   263,   484,  2101,
      36,    36,  1598,   486,  1550,  1551,   268,   488,   365,  1555,
     436,   273,   484,  2115,   484,  2052,   484,    35,   484,  1615,
    1616,  1617,   442,   484,     9,   402,   402,   433,   342,    11,
    2376,   488,   402,   484,   268,   482,  2341,   404,   485,   486,
     446,   484,   176,   167,   471,   472,   473,  1227,   475,   476,
     477,   478,   479,   480,   158,   427,   485,  1237,   965,  1239,
    1656,    36,  1242,    36,   470,   484,   208,   368,  1248,   216,
    1250,   488,   279,   430,   488,   484,  2340,   216,   484,   263,
      55,   216,  1262,   284,   397,   485,   399,  1267,   316,  1685,
     276,  1271,  1272,  1273,  1274,   484,  1276,  1277,   439,   149,
     149,   263,  2407,   446,   278,  2410,  2341,   420,   278,  1705,
     423,  1707,   263,    36,  2143,    36,    35,  1703,  1030,   482,
     471,   482,   291,  1030,  2161,   404,   477,   404,  1724,   404,
     105,  2168,   483,   404,   167,   485,   487,   485,   485,   485,
     467,  1737,  2143,   485,  1740,   485,   485,   467,   486,   411,
     467,  1747,   485,   485,   488,  1751,   485,  1703,  1754,   421,
     485,   512,   513,   514,  1760,  1761,  1762,  1763,  1764,   485,
     485,  1767,  1768,  1769,  1770,  1771,  1772,  1773,  1774,  1775,
    1776,  2218,   485,   167,  1780,  1781,  2215,  1824,   484,   358,
    2454,  2228,   404,  1789,   484,   546,   280,   548,  1794,   288,
    1112,   443,  1822,   554,  1800,  1112,   484,  1803,   484,  1805,
     443,   562,   433,   278,  2215,   473,  1812,  1813,   193,  1839,
    1816,  1817,   469,   574,   393,  1821,  1822,  2385,  2309,   425,
     358,   279,   279,   279,   488,   586,   235,   404,   263,   484,
     149,  1837,  1837,  1839,  1839,   194,  2643,   149,  1155,   149,
     282,  2432,   404,  1837,  1850,  1839,  2447,  1621,   404,   404,
     404,   485,   488,  1859,   433,   393,   241,   485,   485,   483,
     621,   622,   623,   276,   249,   485,  1822,   446,   278,  1875,
     446,    36,  2411,   149,   149,   268,   261,  2592,   482,   140,
     485,  1837,  2390,  1839,   167,    11,   485,   485,   162,   167,
    1664,   470,   485,   484,  2341,   433,   485,   443,   393,   167,
    2408,   488,   470,   176,   665,   484,    67,   292,   446,   339,
     485,   485,    73,  1235,   432,   485,    83,  1923,  1235,   484,
     149,  1927,  1928,  1929,    85,   279,     3,   171,     5,  2530,
    2377,   484,   470,  1707,   414,    36,   484,   484,  1712,    79,
    1714,   427,   483,   485,  1718,  1719,   484,  2592,   488,  2488,
     483,   167,   337,   114,   484,   116,   485,   485,   484,   395,
    2407,  2452,   485,  2410,   484,  1282,   215,   287,   215,   661,
     285,    54,   484,    36,   359,  1971,   179,   471,   472,   473,
     473,   475,   476,   477,   478,   479,   480,   196,   185,   268,
     473,   446,    55,  2432,   379,   485,  2504,  2436,  2004,   268,
    2591,   404,  2597,   404,    36,   263,   767,   484,   106,   446,
     171,   278,   484,    36,   483,  1971,   167,   484,   484,   215,
     297,  2432,   783,   784,   445,  2436,    85,   130,   789,   790,
     791,   108,   109,   484,  2525,   485,   326,   198,  1355,   216,
    2046,  2047,   105,   106,   484,  2051,  2052,   114,    36,   149,
    2056,   114,   484,  2059,  2060,   816,   817,    73,  2064,   121,
     149,    36,   485,   347,    54,  1387,   347,    36,   829,    82,
    1387,    84,   484,    86,   488,   427,   484,   484,    73,  2085,
    2085,   432,    36,  2089,  2089,   846,   427,   184,   414,   850,
      67,  2085,   281,    67,   484,  2089,    36,   488,   349,  1689,
     365,   473,   263,   184,  2110,   182,   183,   268,   171,   268,
     239,     8,   414,   484,    11,    36,  2112,  2113,   484,    16,
      17,    18,   484,   281,   281,   485,   261,   485,   484,  2085,
     193,   278,   346,  2089,     9,   333,    33,  2143,   830,   196,
     278,   278,    33,   485,   484,  2592,  2152,   119,     9,    22,
     311,   485,  2591,   425,  1928,  2161,  2112,  2113,  1910,  1923,
     571,  1249,  2168,  2114,  1610,   326,   243,   244,   245,   246,
     247,   248,  1873,  2524,   251,   252,  1950,  2285,   241,  1956,
    2591,  2588,  2594,  2155,  2664,  2439,   249,  2642,  2630,  2358,
    1604,   817,   953,  1616,  2591,  1961,  1666,   958,   261,  2640,
     263,  1927,  1601,  2589,  2200,   974,  1670,   968,  1705,  2215,
    1950,  2501,  2218,   974,  2215,   758,   977,   783,  1565,  2225,
     981,   982,  2228,   984,   985,  1220,   987,   805,  1580,   292,
    2236,  2237,  2419,  2579,  2240,   804,  1194,  1853,  2513,  1839,
     807,  1219,     8,  1551,  2200,    11,  2252,  2252,  2106,  2091,
      16,    17,    18,  2404,  2076,  1837,  2262,  2262,  2252,   420,
    2491,  2267,  2267,  2490,  2270,  2270,   169,    33,  2262,  2508,
     173,  2277,  2278,  2267,   337,  2509,  2270,  1356,   355,   356,
    1073,  1073,  1073,  2289,  2289,  2291,  2577,  2564,  1073,  2281,
    2578,   194,  1568,  1395,  1149,  2289,   359,  1503,  1288,  1500,
    1673,  1891,  1153,  2483,  1353,  2311,  2262,   989,  1173,  1874,
     789,  2267,  1174,    -1,  2270,   212,   379,    -1,   381,    -1,
      -1,   384,    -1,  1084,    -1,  1915,    -1,   230,    -1,    -1,
      -1,  2105,    -1,  2107,   237,  2341,    -1,    -1,  1030,  1656,
    1930,  1931,  1932,  1933,  1934,  1935,  1936,  1937,  1938,  1939,
      -1,    -1,    -1,    -1,  2350,    -1,    -1,    -1,    -1,  1120,
      -1,    -1,    -1,  1685,  2370,  2370,    -1,    -1,  1685,    -1,
    2376,  2377,    -1,    -1,    -1,  2371,  2370,    -1,    -1,    -1,
     283,  2411,    -1,   280,    -1,    -1,    -1,   464,   465,    -1,
      -1,  1152,    -1,  2399,  2350,    -1,    -1,  2403,  2403,   661,
      -1,  2407,  1724,    -1,  2410,  2411,    -1,  1724,    -1,  2403,
      -1,  1172,    -1,  1174,    36,  2371,  2422,    -1,  1740,    -1,
    1112,   484,  1183,  1740,  1185,    -1,  2432,    -1,    -1,    -1,
    2436,  2437,    -1,    55,    -1,    -1,    -1,    -1,  1760,    -1,
      -1,  2215,    -1,  1760,    -1,    -1,   212,  2403,   351,    -1,
      -1,    -1,    -1,    -1,    -1,  2411,  1217,    -1,   471,    -1,
      -1,   661,    -1,    -1,    -1,  1226,  1227,  1789,  2464,    -1,
     483,    -1,  1789,    -1,    -1,    -1,  1237,  1238,  1239,  1240,
      -1,  1242,  2488,   105,    -1,  2491,  2491,  1248,    -1,  1250,
    1812,    -1,    -1,    -1,   397,  1812,   399,  2491,    -1,    -1,
    1261,  1262,    -1,    -1,    -1,  1266,  1267,  2513,  2464,    -1,
    1271,  1272,  1273,  1274,   280,  1276,  1277,   420,  2524,  2524,
     423,    -1,    -1,    -1,  2520,   108,   109,    -1,    -1,   661,
    2524,    -1,    -1,    -1,    -1,  1296,  1297,    -1,  2544,    -1,
      -1,   554,    -1,  1235,   652,    -1,    -1,    -1,  1309,   171,
      -1,   659,    -1,    -1,    -1,    -1,    -1,  2563,  2564,    -1,
      -1,    -1,    -1,    -1,  2520,    -1,    -1,  2341,   830,    -1,
      -1,   193,    -1,   586,   471,   472,   473,    -1,   475,   476,
     477,   478,   479,   480,    -1,  2591,  2592,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1357,    -1,    -1,   182,
     183,    -1,  2608,  2608,  2610,  2601,  1928,    -1,   621,   622,
     623,  1928,    -1,    -1,  2608,    -1,    -1,    -1,    -1,   241,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   249,    -1,    -1,
     830,    -1,   740,    -1,    -1,    -1,    -1,    -1,    -1,   261,
      -1,    -1,    -1,    -1,    -1,  2601,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   661,   763,    -1,   765,   766,    -1,
     243,   244,   245,   246,   247,   248,  2672,    -1,   251,   252,
     292,   108,   109,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2460,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1387,    -1,    -1,   830,    -1,
      -1,    -1,    -1,    -1,    50,   471,   472,   473,    -1,   475,
     476,   477,   478,   479,   480,   337,    -1,    -1,    -1,    -1,
    2310,    -1,    -1,   831,    -1,    -1,   834,   835,    -1,    -1,
    2052,    -1,    -1,    -1,    -1,  2052,  1497,   359,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   182,   183,    -1,    94,    -1,
      -1,    -1,  2342,  2343,   767,    -1,    -1,   379,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2355,    -1,    -1,  1030,  1530,
      -1,    -1,   355,   356,   120,    -1,  1537,   790,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1551,    -1,   138,    -1,  1555,    -1,   142,  1558,    -1,  1560,
      -1,    -1,    -1,   816,    -1,    -1,   243,   244,   245,   246,
     247,   248,    -1,    -1,   251,   252,   829,   163,  2592,    -1,
     166,    -1,    -1,   830,    -1,    -1,    -1,    -1,    -1,    -1,
    1030,  2421,    -1,    -1,   180,    -1,    -1,   850,    -1,  2161,
      -1,    -1,    -1,    -1,  2161,  1606,  2168,    -1,    -1,    -1,
    1112,  2168,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   464,   465,    -1,    -1,    -1,   994,   995,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2218,    -1,  1030,    -1,
      -1,  2218,    -1,    -1,    -1,  1666,  2228,    -1,    -1,    -1,
    1671,  2228,  1112,    -1,  1675,  1676,  1677,  1678,   355,   356,
      -1,    -1,   268,    -1,    -1,    -1,    -1,    -1,  1689,    -1,
     276,    -1,    -1,    -1,    -1,  1696,    -1,    -1,    -1,  1700,
      -1,    -1,    -1,    -1,     8,   958,    -1,    11,    -1,    -1,
      -1,    -1,    16,    17,    18,  1716,  1717,    -1,  1066,  1067,
      -1,    -1,    -1,    -1,    -1,    -1,  1074,    -1,  1076,  1077,
      -1,    -1,   318,  1235,   987,    -1,    -1,    41,    -1,    -1,
    1112,    -1,    -1,  1091,    48,  1093,    -1,    -1,    -1,    -1,
      -1,    -1,  1753,  1685,    -1,    -1,    -1,    -1,  1106,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    73,
      -1,  1086,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2341,
      -1,    -1,    -1,  1030,  2341,    -1,    -1,   464,   465,    -1,
      -1,    -1,  1724,    -1,    -1,  1235,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   484,  1740,    -1,
      -1,    -1,    -1,    -1,    -1,  2377,    -1,    -1,    -1,    -1,
    2377,    -1,    -1,    -1,    -1,  1826,    -1,    -1,  1760,    -1,
      -1,    -1,    -1,  1834,  1835,  1836,  1837,    -1,  1839,  1840,
      -1,    -1,    -1,  1844,  1845,  2407,    -1,    -1,  2410,    -1,
    2407,    -1,    -1,  2410,    -1,  1203,  1204,  1789,    -1,    -1,
      -1,     8,    -1,  1235,    11,  1112,    -1,    -1,   172,    16,
      17,    18,  1873,    -1,    -1,    -1,    -1,    -1,    -1,  1194,
    1812,    -1,   186,    -1,    -1,  1387,    33,   191,  1889,    -1,
    1891,    -1,    -1,    -1,  1895,  1896,  1897,    -1,  1899,  1152,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1255,   212,   213,
      -1,    -1,    -1,    -1,  1915,    -1,  1917,  1265,    -1,  1172,
    1268,  1174,   226,    -1,    -1,    -1,    -1,    -1,    -1,  1930,
    1931,  1932,  1933,  1934,  1935,  1936,  1937,  1938,  1939,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1387,    -1,    -1,
      -1,    -1,    -1,  1954,    -1,    -1,    -1,    -1,    -1,   263,
    1961,    -1,   266,    -1,  1217,    -1,    -1,    -1,    -1,    -1,
      -1,  1972,    -1,    -1,  1975,    -1,   280,    -1,    -1,    -1,
      -1,  1982,    -1,    -1,    -1,    -1,    -1,    -1,  1235,  1990,
      -1,    -1,  1340,    -1,    -1,    -1,  1928,    -1,    -1,    -1,
       8,    -1,    -1,    11,    -1,  1353,    -1,    -1,    16,    17,
      18,    -1,    -1,     8,    -1,  1387,    11,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1376,    -1,
    2592,    -1,    -1,    -1,    -1,  2592,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1296,    -1,    -1,    41,    -1,    -1,    -1,
      -1,    -1,    -1,    48,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2065,   212,   370,  2068,  2069,  2070,
    2071,    -1,    -1,    -1,  2075,  2076,    -1,  2078,    73,    -1,
    2081,    -1,    -1,    -1,  2085,    -1,    -1,    -1,  2089,    -1,
      -1,    -1,    -1,    -1,  2095,    -1,    -1,    -1,    -1,    -1,
     544,   545,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2114,    -1,    -1,    -1,    -1,  2119,    -1,
    2052,    -1,  2123,    -1,  1439,  1440,    -1,    -1,    -1,  1444,
    2131,    -1,    -1,   280,    -1,    -1,    -1,    -1,    -1,    -1,
    1387,    -1,    -1,    -1,    -1,    -1,    -1,   142,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2156,    -1,    -1,   602,   603,
      -1,    -1,    -1,    -1,   468,  1480,  1481,   471,   472,   473,
      -1,   475,   476,   477,   478,   479,   480,   172,    -1,    -1,
      -1,    -1,    -1,  1685,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   186,  2193,  1541,    -1,    -1,   191,    -1,  2199,    -1,
      -1,    -1,    -1,    -1,   212,    -1,    -1,    -1,    -1,  2210,
      -1,    -1,    -1,    -1,    -1,    -1,   660,    -1,    -1,    -1,
      -1,    -1,  1724,    -1,  1572,  1573,    -1,    -1,    -1,  2161,
      -1,   226,   676,    -1,    -1,    -1,  2168,    -1,  1740,    -1,
      -1,    -1,    -1,    -1,    -1,  1685,    -1,    -1,    -1,    -1,
      -1,  2252,  2253,    -1,    -1,    -1,  2257,    -1,  1760,  2260,
     704,  2262,    -1,    -1,    -1,    -1,  2267,    -1,    -1,  2270,
      -1,  2272,   280,    -1,  2275,    -1,    -1,  1530,    -1,   723,
     724,   725,    -1,   727,  1724,   280,  2218,  1789,  2289,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2228,    -1,  1439,  1440,
    1740,    -1,    -1,  1444,   748,    -1,    -1,    -1,  2309,  2310,
    1812,    -1,    -1,  1685,    -1,    -1,    -1,  2318,    -1,    -1,
    1760,    -1,    -1,    -1,   471,   472,   473,    -1,   475,   476,
     477,   478,   479,   480,    -1,    -1,    -1,    -1,    -1,  1480,
    1481,  2342,  2343,    -1,    -1,    -1,    -1,    -1,    -1,  1789,
      -1,  2352,  1724,   797,  2355,    -1,    -1,   801,   802,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2367,    -1,  1740,  2370,
      -1,    -1,  1812,    -1,    -1,   370,    -1,  1725,  1726,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1760,  2390,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2403,    -1,    -1,    -1,    -1,  2408,    -1,  2341,
     854,   855,   856,    -1,    -1,    -1,  2417,  1789,  1671,    -1,
    2421,    -1,    -1,  1676,  1677,  1678,  1928,    -1,    -1,  2430,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1685,    -1,
    1812,    -1,    -1,  1696,    -1,  2377,  1761,  1762,  1763,  1764,
      -1,  2452,  1767,  1768,  1769,  1770,  1771,  1772,  1773,  1774,
    1775,  1776,  2463,   471,   472,   473,    -1,   475,   476,   477,
     478,   479,   480,   468,    -1,  2407,    -1,  1724,  2410,    -1,
     475,   476,   477,   478,   479,   480,    -1,    -1,  1928,    -1,
    2491,    -1,    -1,  1740,    -1,    -1,    -1,    -1,    -1,  2500,
      -1,  1816,  1817,  2504,    -1,    -1,    -1,  2508,    -1,    -1,
      -1,    -1,    -1,  1760,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   965,    -1,  2524,  2525,  2526,  2527,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1789,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2052,    -1,    -1,    -1,    -1,    -1,  1928,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1812,    -1,  2568,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2577,    -1,  2579,    -1,
    1928,  1834,  1835,  1836,    -1,    -1,    -1,  2588,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2602,    -1,    -1,    -1,     8,     0,  2608,    11,    -1,
      -1,    -1,  2052,    16,    17,    18,    -1,  1061,    -1,    -1,
    1761,  1762,  1763,  1764,    -1,  2626,  1767,  1768,  1769,  1770,
    1771,  1772,  1773,  1774,  1775,  1776,  1889,    -1,  1082,    -1,
    1988,  1085,    -1,    -1,  1088,    -1,    -1,    -1,    -1,    -1,
      -1,  1095,  1096,    -1,    -1,    -1,    -1,    -1,    -1,  2161,
    2592,    -1,    -1,  1107,    -1,    -1,  2168,    -1,    -1,  1113,
    1114,  1115,  1116,    -1,    -1,  1816,  1817,  1121,  1122,    -1,
    2052,  1928,  1126,    -1,    -1,    -1,  1130,    -1,    -1,  1133,
    1134,  1135,  1136,  1137,  1138,  1139,  1140,  1141,    92,    -1,
    1144,  1954,    -1,    -1,  1148,    -1,    -1,  1151,    -1,  1153,
      -1,  1155,    -1,    -1,    -1,    -1,  2218,    -1,    -1,    -1,
      -1,  2161,  1975,    -1,    -1,    -1,  2228,    -1,  2168,    -1,
      -1,    -1,  1176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   741,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1203,
    1204,    -1,    -1,   157,    -1,    -1,    -1,    -1,   162,    -1,
      -1,    -1,    -1,   167,    -1,    -1,    -1,    -1,  2218,    -1,
     780,    -1,   176,    -1,    -1,   179,    -1,    -1,  2228,  2161,
      -1,    -1,    -1,    -1,    -1,    -1,  2168,    -1,    -1,    -1,
      -1,    -1,  2150,    -1,    -1,  2052,    -1,  2155,    -1,   212,
      -1,    -1,    -1,    -1,   208,  2068,  2069,  2070,  2071,    -1,
      -1,  2169,  2170,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   227,    -1,    -1,    -1,    -1,  1282,  2341,
      -1,  1285,  1286,    -1,  1288,    -1,  2218,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2228,    -1,    -1,   859,
      -1,    -1,    -1,    -1,   864,    -1,    -1,    -1,    -1,    -1,
      -1,  1315,    -1,    -1,    -1,  2377,    -1,   280,    -1,    -1,
      -1,   275,    -1,    -1,   278,    -1,    -1,    -1,    -1,    -1,
     284,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2341,    -1,    -1,    -1,  2407,    -1,    -1,  2410,    -1,
    2225,  1355,    -1,    -1,  2161,    -1,    -1,    -1,    -1,    -1,
      -1,  2168,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2377,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   339,    -1,    -1,    -1,    -1,
    1394,    -1,    -1,    -1,    -1,  1399,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2407,    -1,  2341,
    2410,  2218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2228,    -1,    -1,  2332,  2333,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2341,    -1,    -1,  2311,  1441,    -1,   393,
      -1,    -1,    -1,    -1,    -1,  2377,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1457,    -1,  1459,  1460,    -1,    -1,    -1,
      -1,  1465,    -1,    -1,    -1,   419,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   427,    -1,  2407,    -1,    -1,  2410,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   443,
      -1,   445,   446,    -1,    -1,  1499,    -1,    -1,  1502,  1059,
    1504,  2376,    -1,    -1,    -1,  2318,    -1,    -1,   471,   472,
     473,    -1,   475,   476,   477,   478,   479,   480,    -1,    -1,
      -1,  1081,    -1,    -1,  2225,    -1,  1086,    -1,   482,    -1,
    2592,   485,   486,   487,  2341,    -1,    -1,  1097,  1098,  1099,
      -1,  1101,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,
      -1,    -1,    -1,    -1,  2367,    -1,    -1,    -1,    -1,    -1,
      -1,  1565,    -1,    -1,     0,    -1,    -1,    -1,    -1,    -1,
    2377,    -1,    -1,    -1,    -1,    -1,  1580,    41,    -1,     0,
      -1,    -1,    -1,    19,    48,    -1,    -1,    -1,    -1,    -1,
    1150,    -1,  2592,    29,  1598,    31,    32,    -1,    -1,    -1,
    2407,    -1,    -1,  2410,    -1,    -1,    -1,    -1,    -1,    73,
    2311,    47,    -1,    -1,    -1,    -1,    -1,  2430,    -1,    -1,
      56,    -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,
    1190,    -1,    68,    16,    17,    18,    -1,    -1,    -1,    -1,
      -1,    -1,  1202,    79,    -1,    -1,    -1,  1207,    -1,    -1,
    2463,    -1,  1656,    -1,    90,    -1,    92,    -1,    41,    -1,
    2592,    -1,    -1,    -1,    -1,    48,    -1,    -1,    -1,    -1,
      -1,    92,    -1,    -1,   110,  2376,    -1,    -1,   142,    -1,
      -1,    -1,    -1,    -1,  2592,    -1,    -1,    -1,   124,    -1,
      73,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   134,    -1,
      -1,    -1,    -1,    -1,   140,    -1,    -1,    -1,   172,    -1,
      -1,    -1,   148,    -1,   150,   151,    -1,    -1,    -1,    -1,
      -1,    -1,   186,   144,    -1,    -1,    -1,   191,    -1,    -1,
      -1,    -1,    -1,  1737,    -1,    -1,   157,    -1,    -1,    -1,
      -1,   162,    -1,  1747,    -1,    -1,   167,  1751,    -1,    -1,
    1754,    -1,    -1,    -1,   190,   176,    -1,    -1,   179,    -1,
      -1,    -1,   226,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1780,  1781,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2592,    -1,   208,    -1,   172,
      -1,    -1,    -1,   229,    -1,    -1,  1800,    -1,    -1,  1803,
      -1,  1805,    -1,   186,    -1,    -1,   227,    -1,   191,  1813,
      -1,    -1,    -1,    -1,    -1,    -1,   280,  1821,  1822,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1397,    -1,    -1,
      -1,    -1,    -1,   226,    -1,    -1,  1850,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   275,  1859,    -1,   278,    -1,    -1,
    1420,    -1,    -1,   284,    -1,    -1,    -1,    -1,    -1,   305,
      -1,  1875,   308,    -1,    -1,    -1,    -1,  1437,    -1,  1439,
    1440,    -1,  1442,     0,  1444,    -1,    -1,    -1,    -1,  1449,
      -1,    -1,    -1,    -1,    -1,    -1,  1456,   280,    -1,    -1,
     336,  1461,    -1,    -1,    -1,    -1,   370,  1467,   344,    -1,
      -1,  1471,  1472,  1473,  1474,    -1,    -1,    -1,   339,    -1,
    1480,  1481,   358,  1483,  1484,    -1,    -1,    -1,    -1,   365,
      -1,    -1,    -1,   369,    -1,  1495,    -1,    -1,  1498,    -1,
      -1,    -1,    -1,   379,    -1,    -1,  1506,  1507,  1508,  1509,
    1510,  1511,  1512,  1513,  1514,  1515,    -1,   393,    -1,    -1,
      -1,    -1,    -1,  1523,    -1,    -1,    -1,  1527,     8,    -1,
      -1,    11,   393,    -1,    -1,    92,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   370,  1548,    -1,
      -1,    -1,   428,    -1,    -1,    -1,    -1,   433,   419,    -1,
    2004,    41,    -1,    -1,   468,    -1,   427,    -1,    48,    -1,
     446,   475,   476,   477,   478,   479,   480,    -1,    -1,    -1,
      -1,    -1,   443,    -1,   445,   446,    -1,   144,    -1,    -1,
      -1,    -1,    -1,    73,   470,    -1,    -1,    -1,    -1,    -1,
     157,    -1,  2046,  2047,    -1,   162,    -1,  2051,   484,    -1,
     167,   487,  2056,    -1,    -1,  2059,  2060,    -1,    -1,   176,
    2064,   482,   179,    -1,   485,   486,   487,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   468,    -1,    -1,   471,   472,
     473,   208,   475,   476,   477,   478,   479,   480,    -1,  1659,
    1660,  1661,   142,    -1,    -1,    -1,  2110,    -1,    -1,    -1,
     227,    -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,    11,
      -1,    -1,    -1,    -1,    16,    17,    18,    -1,    -1,    -1,
      -1,    -1,   172,    -1,  1694,    -1,    -1,    -1,    -1,    -1,
      -1,    33,    -1,    -1,    -1,    -1,   186,    -1,  2152,    41,
      -1,   191,    -1,    -1,    -1,    -1,    48,    -1,   275,    -1,
      -1,   278,    -1,    -1,    -1,    -1,    -1,   284,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1736,    -1,    -1,    -1,
      -1,    73,  1742,    -1,    -1,    -1,   226,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1757,  1758,  1759,
      -1,  1761,  1762,  1763,  1764,    -1,    -1,  1767,  1768,  1769,
    1770,  1771,  1772,  1773,  1774,  1775,  1776,  1777,    -1,    -1,
      -1,    -1,   339,    -1,    -1,    -1,    -1,    -1,     8,    -1,
      -1,    11,  2236,  2237,    -1,    -1,  2240,  1797,    -1,    -1,
     280,  1801,  1802,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1815,  1816,  1817,  1818,    -1,
    1820,    41,    -1,    -1,    -1,    -1,    -1,    -1,    48,    -1,
      -1,    -1,    -1,  2277,  2278,    -1,   393,    -1,    -1,    -1,
     172,    -1,    -1,    -1,    -1,    -1,    -1,  2291,    -1,    -1,
      -1,    -1,    -1,    73,   186,    -1,    -1,    -1,    -1,   191,
      -1,    -1,   419,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     427,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     212,   213,    -1,    -1,    -1,    -1,   443,    -1,   445,   446,
     370,    -1,  1892,    -1,   226,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   142,    -1,    -1,   482,    -1,    -1,   485,   486,
     487,   263,    -1,    -1,   266,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,     3,
      -1,   283,   172,    -1,     8,  2399,    -1,    11,    -1,    -1,
      -1,    -1,    16,    17,    18,    -1,   186,  2411,    -1,    -1,
      -1,   191,    -1,    -1,     8,    -1,    -1,    11,  2422,    33,
      -1,    -1,    36,    -1,    -1,    -1,    -1,    41,   468,    -1,
      -1,    -1,    -1,  2437,    48,   475,   476,   477,   478,   479,
     480,    -1,    -1,    -1,    -1,  2005,   226,    41,    -1,  2009,
    2010,    -1,  2012,    -1,    48,  2015,  2016,  2017,  2018,    73,
      -1,    -1,  2022,  2023,  2024,  2025,  2026,  2027,  2028,  2029,
    2030,  2031,  2032,  2033,    -1,    -1,    -1,    -1,   370,    73,
      -1,    -1,    -1,    23,    -1,  2045,    -1,    -1,  2048,    29,
    2050,    -1,    -1,    -1,  2054,    -1,    36,  2057,  2058,    -1,
     280,  2061,  2062,    -1,    -1,    -1,    -1,    -1,    -1,  2513,
      -1,    -1,    -1,    -1,    -1,    55,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2544,    -1,  2102,    -1,    -1,    -1,    -1,    -1,   142,  2109,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   172,  2563,
    2564,    -1,  2122,    -1,    -1,   105,    -1,    -1,    -1,    -1,
      -1,    -1,   186,    -1,    -1,    -1,   468,   191,   172,   471,
     472,   473,    -1,   475,   476,   477,   478,   479,   480,    -1,
     370,    -1,   186,    -1,   134,    -1,   488,   191,   212,   213,
      -1,    -1,    -1,    -1,    -1,    -1,  2610,    -1,    -1,    -1,
      -1,    -1,   226,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   226,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   263,
      -1,    -1,   266,   193,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2221,    -1,    -1,    -1,  2225,   280,    -1,  2672,   283,
    2230,  2231,  2232,    -1,    -1,  2235,    -1,    -1,  2238,  2239,
      -1,    -1,    -1,  2243,    -1,    -1,   280,    -1,   468,    -1,
      -1,    -1,    -1,    -1,    -1,   475,   476,   477,   478,   479,
     480,   241,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   249,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   261,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   282,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2311,   292,    -1,    -1,    -1,   370,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2329,
      -1,    -1,    -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   332,    -1,    -1,    -1,   336,   337,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2375,  2376,    -1,    -1,   359,
    2380,  2381,  2382,    -1,    -1,   365,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   379,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   468,  2415,  2416,   471,   472,   473,
      -1,   475,   476,   477,   478,   479,   480,    -1,  2428,    -1,
      -1,    -1,    -1,    -1,   468,    -1,    -1,    -1,    -1,    -1,
    2440,   475,   476,   477,   478,   479,   480,    -1,    -1,    -1,
     430,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,  2485,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
      -1,    -1,    -1,  2503,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,  2522,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,  2536,    68,    69,    70,
      71,    72,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,   129,  2599,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,  2613,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,   166,    -1,   168,   169,   170,
     171,   172,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,   200,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
      -1,    -1,   223,   224,   225,   226,    -1,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,    -1,   276,   277,    -1,    -1,   280,
     281,   282,    -1,    -1,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
      -1,   302,   303,   304,   305,   306,   307,   308,   309,   310,
      -1,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,    -1,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,    -1,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,    -1,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,    -1,
     391,   392,    -1,   394,   395,   396,   397,   398,   399,   400,
      -1,   402,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,    -1,    -1,
     421,   422,   423,   424,   425,   426,    -1,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,    -1,    -1,   444,    -1,    -1,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,    -1,    -1,
      -1,    -1,    -1,    -1,   475,   476,   477,    -1,    -1,    -1,
      -1,    -1,    -1,   484,   485,    -1,    -1,    -1,   489,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,   166,    -1,   168,   169,   170,   171,   172,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,   200,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,    -1,    -1,   223,
     224,   225,   226,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,    -1,   276,   277,    -1,    -1,   280,   281,   282,    -1,
      -1,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,    -1,   302,   303,
     304,   305,   306,   307,   308,   309,   310,    -1,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,    -1,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,    -1,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,    -1,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,    -1,   402,   403,
      -1,    -1,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,    -1,    -1,   421,   422,   423,
     424,   425,   426,    -1,   428,   429,   430,   431,   432,   433,
     434,    -1,   436,   437,   438,   439,   440,   441,    -1,    -1,
     444,    -1,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,    -1,   470,    -1,    -1,    -1,
      -1,   475,   476,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     484,   485,    -1,    -1,    -1,   489,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,   166,
      -1,   168,   169,   170,   171,   172,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,   200,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,    -1,    -1,   223,   224,   225,   226,
      -1,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,    -1,   276,
     277,    -1,    -1,   280,   281,   282,    -1,    -1,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,    -1,   302,   303,   304,   305,   306,
     307,   308,   309,   310,    -1,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,    -1,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,    -1,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,    -1,   402,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,    -1,    -1,   421,   422,   423,   424,   425,   426,
      -1,   428,   429,   430,   431,   432,   433,   434,    -1,   436,
     437,   438,   439,   440,   441,    -1,    -1,   444,    -1,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,    -1,   470,    -1,    -1,    -1,    -1,   475,   476,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   484,    -1,    -1,
      -1,    -1,   489,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,   172,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
     200,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,    -1,   222,   223,   224,   225,   226,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,    -1,   276,   277,    -1,    -1,
     280,   281,   282,    -1,    -1,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,    -1,   302,   303,   304,   305,   306,   307,   308,   309,
     310,    -1,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,    -1,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,    -1,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,    -1,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
      -1,   391,   392,    -1,   394,   395,   396,   397,   398,   399,
     400,    -1,   402,   403,    -1,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,    -1,
      -1,   421,   422,   423,   424,   425,   426,    -1,   428,   429,
     430,   431,   432,   433,   434,    -1,   436,   437,   438,   439,
     440,   441,    -1,    -1,   444,    -1,    -1,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,    -1,
      -1,    -1,    -1,    -1,    -1,   475,   476,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   484,    -1,    -1,    -1,    -1,   489,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,   166,    -1,   168,   169,   170,   171,   172,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,   200,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,    -1,    -1,
     223,   224,   225,   226,    -1,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,    -1,   276,   277,    -1,    -1,   280,   281,   282,
      -1,    -1,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,   305,   306,   307,   308,   309,   310,    -1,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,    -1,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,    -1,   391,   392,
      -1,   394,   395,   396,   397,   398,   399,   400,    -1,   402,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,    -1,    -1,   421,   422,
     423,   424,   425,   426,    -1,   428,   429,   430,   431,   432,
     433,   434,    -1,   436,   437,   438,   439,   440,   441,    -1,
      -1,   444,    -1,    -1,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,    -1,    -1,    -1,    -1,
      -1,    -1,   475,   476,   477,    -1,    -1,    -1,    -1,    -1,
      -1,   484,    -1,    -1,    -1,    -1,   489,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,    -1,    -1,   223,   224,   225,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,    -1,
     276,   277,    -1,    -1,   280,   281,   282,    -1,    -1,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,    -1,   302,   303,   304,   305,
     306,   307,   308,   309,   310,    -1,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,    -1,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,    -1,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,    -1,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,    -1,   391,   392,    -1,   394,   395,
     396,   397,   398,   399,   400,    -1,   402,   403,    -1,    -1,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,    -1,    -1,   421,   422,   423,   424,   425,
     426,    -1,   428,   429,   430,   431,   432,   433,   434,    -1,
     436,   437,   438,   439,   440,   441,    -1,    -1,   444,    -1,
      -1,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,    -1,    -1,    -1,    -1,    -1,    -1,   475,
     476,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   484,    -1,
      -1,    -1,    -1,   489,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,   166,    -1,   168,
     169,   170,   171,   172,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,   200,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,    -1,    -1,   223,   224,   225,   226,    -1,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,    -1,   276,   277,    -1,
      -1,   280,   281,   282,    -1,    -1,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,    -1,   302,   303,   304,   305,   306,   307,   308,
     309,   310,    -1,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,    -1,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,    -1,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,    -1,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,    -1,   391,   392,    -1,   394,   395,   396,   397,   398,
     399,   400,    -1,   402,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
      -1,    -1,   421,   422,   423,   424,   425,   426,    -1,   428,
     429,   430,   431,   432,   433,   434,    -1,   436,   437,   438,
     439,   440,   441,    -1,    -1,   444,    -1,    -1,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
      -1,    -1,    -1,    -1,    -1,    -1,   475,   476,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   484,   485,    -1,    -1,    -1,
     489,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,   166,    -1,   168,   169,   170,   171,
     172,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,   200,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,    -1,
      -1,   223,   224,   225,   226,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,    -1,   276,   277,    -1,    -1,   280,   281,
     282,    -1,    -1,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,    -1,
     302,   303,   304,   305,   306,   307,   308,   309,   310,    -1,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,    -1,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,    -1,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,    -1,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,    -1,   391,
     392,    -1,   394,   395,   396,   397,   398,   399,   400,    -1,
     402,   403,    -1,    -1,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,    -1,    -1,   421,
     422,   423,   424,   425,   426,    -1,   428,   429,   430,   431,
     432,   433,   434,    -1,   436,   437,   438,   439,   440,   441,
      -1,    -1,   444,    -1,    -1,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,    -1,    -1,    -1,
      -1,    -1,    -1,   475,   476,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   484,   485,    -1,    -1,    -1,   489,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,   166,    -1,   168,   169,   170,   171,   172,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,   200,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,    -1,    -1,   223,   224,
     225,   226,    -1,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
      -1,   276,   277,    -1,    -1,   280,   281,   282,    -1,    -1,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,    -1,   302,   303,   304,
     305,   306,   307,   308,   309,   310,    -1,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,    -1,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
      -1,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,    -1,   391,   392,    -1,   394,
     395,   396,   397,   398,   399,   400,    -1,   402,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,    -1,    -1,   421,   422,   423,   424,
     425,   426,    -1,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,    -1,    -1,   444,
      -1,    -1,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,    -1,    -1,    -1,    -1,    -1,    -1,
     475,   476,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   484,
      -1,    -1,    -1,    -1,   489,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,   172,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,   200,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,    -1,    -1,   223,   224,   225,   226,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,    -1,   276,   277,
      -1,    -1,   280,   281,   282,    -1,    -1,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,    -1,   302,   303,   304,   305,   306,   307,
     308,   309,   310,    -1,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,    -1,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
      -1,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,    -1,   391,   392,    -1,   394,   395,   396,   397,
     398,   399,   400,    -1,   402,   403,    -1,    -1,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,    -1,    -1,   421,   422,   423,   424,   425,   426,    -1,
     428,   429,   430,   431,   432,   433,   434,    -1,   436,   437,
     438,   439,   440,   441,    -1,    -1,   444,    -1,    -1,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,    -1,    -1,    -1,    -1,    -1,    -1,   475,   476,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   484,    -1,    -1,    -1,
      -1,   489,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,   166,    -1,   168,   169,   170,
     171,   172,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,   200,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
      -1,    -1,   223,   224,   225,   226,    -1,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,    -1,   276,   277,    -1,    -1,   280,
     281,   282,    -1,    -1,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
      -1,   302,   303,   304,   305,   306,   307,   308,   309,   310,
      -1,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,    -1,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,    -1,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,    -1,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,    -1,
     391,   392,    -1,   394,   395,   396,   397,   398,   399,   400,
      -1,   402,   403,    -1,    -1,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,    -1,    -1,
     421,   422,   423,   424,   425,   426,    -1,   428,   429,   430,
     431,   432,   433,   434,    -1,   436,   437,   438,   439,   440,
     441,    -1,    -1,   444,    -1,    -1,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,    -1,    -1,
      -1,    -1,    -1,    -1,   475,   476,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   484,    -1,    -1,    -1,    -1,   489,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,   166,    -1,   168,   169,   170,   171,   172,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,   200,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,    -1,    -1,   223,
     224,   225,   226,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,    -1,   276,   277,    -1,    -1,   280,   281,   282,    -1,
      -1,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,    -1,   302,   303,
     304,   305,   306,   307,   308,   309,   310,    -1,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,    -1,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,    -1,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,    -1,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,    -1,   391,   392,    -1,
     394,   395,   396,   397,   398,   399,   400,    -1,   402,   403,
      -1,    -1,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,    -1,    -1,   421,   422,   423,
     424,   425,   426,    -1,   428,   429,   430,   431,   432,   433,
     434,    -1,   436,   437,   438,   439,   440,   441,    -1,    -1,
     444,    -1,    -1,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,    -1,    -1,    -1,    -1,    -1,
      -1,   475,   476,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     484,    -1,    -1,    -1,    -1,   489,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,   166,
      -1,   168,   169,   170,   171,   172,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,   200,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,    -1,    -1,   223,   224,   225,   226,
      -1,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,    -1,   276,
     277,    -1,    -1,   280,   281,   282,    -1,    -1,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,    -1,   302,   303,   304,   305,   306,
     307,   308,   309,   310,    -1,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,    -1,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,    -1,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,    -1,   391,   392,    -1,   394,   395,   396,
     397,   398,   399,   400,    -1,   402,   403,    -1,    -1,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,    -1,    -1,   421,   422,   423,   424,   425,   426,
      -1,   428,   429,   430,   431,   432,   433,   434,    -1,   436,
     437,   438,   439,   440,   441,    -1,    -1,   444,    -1,    -1,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,    -1,    -1,    -1,    -1,    -1,    -1,   475,   476,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   484,    -1,    -1,
      -1,    -1,   489,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,   166,    -1,   168,   169,
     170,   171,   172,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
     200,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,    -1,    -1,   223,   224,   225,   226,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,    -1,   276,   277,    -1,    -1,
     280,   281,   282,    -1,    -1,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,    -1,   302,   303,   304,   305,   306,   307,   308,   309,
     310,    -1,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,    -1,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,    -1,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,    -1,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
      -1,   391,   392,    -1,   394,   395,   396,   397,   398,   399,
     400,    -1,   402,   403,    -1,    -1,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,    -1,
      -1,   421,   422,   423,   424,   425,   426,    -1,   428,   429,
     430,   431,   432,   433,   434,    -1,   436,   437,   438,   439,
     440,   441,    -1,    -1,   444,    -1,    -1,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,    -1,
      -1,    -1,    -1,    -1,    -1,   475,   476,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   484,    -1,    -1,    -1,    -1,   489,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,   166,    -1,   168,   169,   170,   171,   172,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,   200,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,    -1,    -1,
     223,   224,   225,   226,    -1,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,    -1,   276,   277,    -1,    -1,   280,   281,   282,
      -1,    -1,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,   305,   306,   307,   308,   309,   310,    -1,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,    -1,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,    -1,   391,   392,
      -1,   394,   395,   396,   397,   398,   399,   400,    -1,   402,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,    -1,    -1,   421,   422,
     423,   424,   425,   426,    -1,   428,   429,   430,   431,   432,
     433,   434,    -1,   436,   437,   438,   439,   440,   441,    -1,
      -1,   444,    -1,    -1,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,    -1,    -1,    -1,    -1,
      -1,    -1,   475,   476,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   484,    -1,    -1,    -1,    -1,   489,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,    -1,    -1,   223,   224,   225,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,    -1,
     276,   277,    -1,    -1,   280,   281,   282,    -1,    -1,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,    -1,   302,   303,   304,   305,
     306,   307,   308,   309,   310,    -1,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,    -1,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,    -1,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,    -1,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,    -1,   391,   392,    -1,   394,   395,
     396,   397,   398,   399,   400,    -1,   402,   403,    -1,    -1,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,    -1,    -1,   421,   422,   423,   424,   425,
     426,    -1,   428,   429,   430,   431,   432,   433,   434,    -1,
     436,   437,   438,   439,   440,   441,    -1,    -1,   444,    -1,
      -1,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,    -1,    -1,    -1,    -1,    -1,    -1,   475,
     476,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   484,    -1,
      -1,    -1,    -1,   489,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,   166,    -1,   168,
     169,   170,   171,   172,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,   200,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,    -1,    -1,   223,   224,   225,   226,    -1,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,    -1,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,    -1,   276,   277,    -1,
      -1,   280,   281,   282,    -1,    -1,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,    -1,   302,   303,   304,   305,   306,   307,   308,
     309,   310,    -1,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,    -1,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,    -1,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,    -1,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,    -1,   391,   392,    -1,   394,   395,   396,   397,   398,
     399,   400,    -1,   402,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
      -1,    -1,   421,   422,   423,   424,   425,   426,    -1,   428,
     429,   430,   431,   432,   433,   434,    -1,   436,   437,   438,
     439,   440,   441,    -1,    -1,   444,    -1,    -1,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   475,   476,    -1,    -1,
       3,     4,     5,     6,     7,   484,     9,    10,    -1,    -1,
     489,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,   166,    -1,   168,   169,   170,   171,   172,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,   200,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,    -1,    -1,
     223,   224,   225,   226,    -1,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
      -1,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,    -1,   276,   277,    -1,    -1,   280,   281,   282,
      -1,    -1,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,   305,   306,   307,   308,   309,   310,    -1,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,    -1,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,    -1,   391,   392,
      -1,   394,   395,   396,   397,   398,   399,   400,    -1,   402,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,    -1,    -1,   421,   422,
     423,   424,   425,   426,    -1,   428,   429,   430,   431,   432,
     433,   434,    -1,   436,   437,   438,   439,   440,   441,    -1,
      -1,   444,    -1,    -1,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   475,   476,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   484,    -1,    -1,    -1,    -1,   489,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,   213,   214,   215,
     216,   217,   218,   219,   220,    -1,    -1,   223,   224,   225,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,    -1,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,    -1,
     276,   277,    -1,    -1,   280,   281,   282,    -1,    -1,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,    -1,   302,   303,   304,   305,
     306,   307,   308,   309,   310,    -1,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,    -1,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,    -1,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,    -1,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,    -1,   391,   392,    -1,   394,   395,
     396,   397,   398,   399,   400,    -1,   402,   403,    -1,    -1,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,    -1,    -1,   421,   422,   423,   424,   425,
     426,    -1,   428,   429,   430,   431,   432,   433,   434,    -1,
     436,   437,   438,   439,   440,   441,    -1,    -1,   444,    -1,
      -1,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   475,
     476,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   484,    -1,
      -1,    -1,    -1,   489,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,   166,    -1,   168,
     169,   170,   171,   172,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,   200,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,   214,   215,   216,   217,   218,
     219,   220,    -1,    -1,   223,   224,   225,   226,    -1,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,    -1,   264,   265,    -1,   267,   268,
     269,   270,   271,   272,   273,   274,    -1,   276,   277,    -1,
      -1,   280,   281,   282,    -1,    -1,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,    -1,   302,   303,   304,   305,   306,   307,   308,
     309,   310,    -1,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,    -1,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,    -1,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,    -1,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,    -1,   391,   392,    -1,   394,   395,   396,   397,   398,
     399,   400,    -1,   402,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
      -1,    -1,   421,   422,   423,   424,   425,   426,    -1,   428,
     429,   430,   431,   432,   433,   434,    -1,   436,   437,   438,
     439,   440,   441,    -1,    -1,   444,    -1,    -1,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
      -1,    -1,    -1,    -1,    -1,    -1,   475,   476,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   484,    -1,    -1,    -1,    -1,
     489,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    -1,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
      -1,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,   166,    -1,   168,   169,   170,   171,
      -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,   200,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,   214,   215,   216,   217,   218,   219,   220,    -1,
      -1,   223,   224,   225,    -1,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,    -1,   264,   265,    -1,   267,   268,   269,   270,   271,
     272,   273,   274,    -1,   276,   277,    -1,    -1,   280,   281,
     282,    -1,    -1,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,    -1,
     302,   303,   304,   305,   306,   307,   308,   309,   310,    -1,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,    -1,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,    -1,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,    -1,   371,
     372,   373,   374,    -1,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,    -1,   391,
     392,    -1,   394,   395,   396,   397,   398,   399,   400,    -1,
     402,   403,    -1,    -1,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,    -1,    -1,   421,
     422,   423,   424,   425,   426,    -1,   428,   429,   430,   431,
     432,   433,   434,    -1,   436,   437,   438,   439,   440,   441,
      -1,    -1,   444,    -1,    -1,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,    -1,    -1,    -1,    -1,
      -1,    -1,     3,   475,   476,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   484,    -1,    -1,    -1,    -1,   489,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    36,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    93,    94,    95,    96,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,    -1,    -1,   168,   169,   170,
     171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,   200,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,   214,   215,   216,   217,   218,   219,   220,
      -1,    -1,   223,   224,   225,    -1,    -1,   228,   229,   230,
      -1,    -1,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,    -1,   264,   265,    -1,   267,    -1,   269,   270,
     271,   272,   273,   274,    -1,   276,   277,    -1,    -1,   280,
     281,   282,    -1,    -1,   285,   286,    -1,   288,    -1,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
      -1,   302,   303,   304,   305,   306,   307,   308,   309,   310,
      -1,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,    -1,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,    -1,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,    -1,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,    -1,
     391,   392,    -1,   394,   395,   396,   397,   398,   399,   400,
      -1,   402,   403,    -1,    -1,   406,   407,   408,   409,   410,
      -1,   412,   413,   414,   415,   416,   417,   418,    -1,    -1,
     421,   422,   423,   424,   425,    -1,    -1,   428,   429,   430,
     431,   432,   433,   434,    -1,   436,    -1,   438,   439,   440,
     441,    -1,    -1,   444,    -1,    -1,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,    -1,    -1,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   485,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
      -1,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,    -1,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,   166,    -1,   168,   169,   170,   171,   172,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,   200,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,    -1,   223,
     224,   225,   226,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,    -1,
     264,   265,   266,   267,    -1,   269,   270,   271,   272,   273,
     274,    -1,   276,   277,    -1,   279,   280,   281,   282,    -1,
      -1,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,    -1,   302,   303,
     304,   305,   306,   307,   308,   309,   310,    -1,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,    -1,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,    -1,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,    -1,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,    -1,   402,   403,
      -1,    -1,   406,   407,   408,   409,   410,    -1,   412,   413,
     414,   415,   416,   417,   418,    -1,    -1,   421,   422,   423,
     424,   425,   426,    -1,   428,   429,   430,   431,   432,   433,
     434,    -1,   436,   437,   438,   439,   440,   441,    -1,    -1,
     444,    -1,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,    -1,     3,   470,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     484,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,   166,    -1,
     168,   169,   170,   171,   172,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,   200,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,    -1,   223,   224,   225,   226,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,   266,   267,
      -1,   269,   270,   271,   272,   273,   274,    -1,   276,   277,
      -1,   279,   280,   281,   282,    -1,    -1,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,    -1,   302,   303,   304,   305,   306,   307,
     308,   309,   310,    -1,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,    -1,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
      -1,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,    -1,   391,   392,    -1,   394,   395,   396,   397,
     398,   399,   400,    -1,   402,   403,    -1,    -1,   406,   407,
     408,   409,   410,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,    -1,   421,   422,   423,   424,   425,   426,    -1,
     428,   429,   430,   431,   432,   433,   434,    -1,   436,   437,
     438,   439,   440,   441,    -1,    -1,   444,    -1,    -1,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
      -1,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   484,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,    -1,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,    -1,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,   166,    -1,   168,   169,   170,   171,
     172,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,   200,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,    -1,
      -1,   223,   224,   225,   226,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,    -1,   264,   265,   266,   267,    -1,   269,   270,   271,
     272,   273,   274,    -1,   276,   277,    -1,    -1,   280,   281,
     282,    -1,    -1,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,    -1,
     302,   303,   304,   305,   306,   307,   308,   309,   310,    -1,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,    -1,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,    -1,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,    -1,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,    -1,   391,
     392,    -1,   394,   395,   396,   397,   398,   399,   400,    -1,
     402,   403,    -1,    -1,   406,   407,   408,   409,   410,    -1,
     412,   413,   414,   415,   416,   417,   418,    -1,    -1,   421,
     422,   423,   424,   425,   426,    -1,   428,   429,   430,   431,
     432,   433,   434,    -1,   436,   437,   438,   439,   440,   441,
      -1,    -1,   444,    -1,    -1,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,    -1,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   484,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,    -1,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,    -1,    -1,   223,   224,   225,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,    -1,   264,   265,
     266,   267,    -1,   269,   270,   271,   272,   273,   274,    -1,
     276,   277,    -1,    -1,   280,   281,   282,    -1,    -1,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,    -1,   302,   303,   304,   305,
     306,   307,   308,   309,   310,    -1,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,    -1,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,    -1,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,    -1,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,    -1,   391,   392,    -1,   394,   395,
     396,   397,   398,   399,   400,    -1,   402,   403,    -1,    -1,
     406,   407,   408,   409,   410,    -1,   412,   413,   414,   415,
     416,   417,   418,    -1,    -1,   421,   422,   423,   424,   425,
     426,    -1,   428,   429,   430,   431,   432,   433,   434,    -1,
     436,   437,   438,   439,   440,   441,    -1,    -1,   444,    -1,
      -1,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,    -1,     3,     4,     5,    -1,    -1,    -1,     9,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   484,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    93,    94,    95,    96,    -1,    -1,    -1,
     100,    -1,    -1,    -1,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,    -1,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,   166,    -1,   168,   169,
     170,   171,   172,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
     200,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,    -1,    -1,   223,   224,   225,   226,    -1,   228,   229,
     230,    -1,    -1,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,    -1,   264,   265,   266,   267,    -1,   269,
     270,   271,   272,   273,   274,    -1,   276,   277,   278,    -1,
     280,   281,   282,    -1,    -1,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,    -1,   302,   303,   304,   305,   306,   307,   308,   309,
     310,    -1,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,    -1,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,    -1,   359,
     360,   361,   362,   363,    -1,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,    -1,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
      -1,   391,   392,    -1,   394,   395,   396,   397,   398,   399,
     400,    -1,   402,   403,    -1,    -1,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,    -1,
      -1,   421,   422,   423,   424,   425,    -1,    -1,   428,   429,
     430,   431,   432,   433,   434,    -1,   436,   437,   438,   439,
     440,   441,    -1,    -1,   444,    -1,    -1,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,    -1,     3,
      -1,    -1,    -1,    -1,    -1,   475,   476,   477,    -1,    -1,
      -1,    -1,    -1,    -1,   484,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    31,    32,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    93,
      94,    95,    96,    -1,    -1,    -1,   100,    -1,    -1,    -1,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
      -1,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,    -1,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,   166,    -1,   168,   169,   170,   171,   172,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,   200,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,    -1,    -1,   223,
     224,   225,   226,    -1,   228,   229,   230,    -1,    -1,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,    -1,
     264,   265,   266,   267,    -1,   269,   270,   271,   272,   273,
     274,    -1,   276,   277,    -1,    -1,   280,   281,   282,    -1,
      -1,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,    -1,   302,   303,
     304,   305,   306,   307,   308,   309,   310,    -1,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,    -1,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
      -1,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,    -1,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,    -1,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,    -1,   402,   403,
      -1,    -1,   406,   407,   408,   409,   410,    -1,   412,   413,
     414,   415,   416,   417,   418,    -1,    -1,   421,   422,   423,
     424,   425,    -1,    -1,   428,   429,   430,   431,   432,   433,
     434,    -1,   436,   437,   438,   439,   440,   441,    -1,    -1,
     444,    -1,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,    -1,     3,   470,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     484,    19,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    -1,    94,    95,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,
      -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,
     218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,    -1,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,   267,
      -1,   269,   270,   271,   272,   273,   274,    -1,   276,   277,
      -1,    -1,   280,   281,   282,    -1,    -1,   285,   286,    -1,
     288,    -1,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,    -1,   302,   303,   304,   305,   306,   307,
     308,   309,   310,    -1,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,    -1,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,    -1,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,    -1,   391,   392,   393,   394,    -1,   396,   397,
     398,   399,   400,    -1,   402,   403,    -1,    -1,   406,   407,
     408,   409,   410,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,    -1,   421,   422,   423,   424,   425,    -1,    -1,
     428,   429,   430,   431,   432,   433,   434,    -1,   436,    -1,
     438,   439,   440,   441,    -1,    -1,   444,    -1,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
      -1,     3,   470,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   484,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,    -1,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,    -1,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,
      -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,    -1,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,   214,    -1,   216,   217,   218,   219,   220,    -1,
      -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,
      -1,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,    -1,   258,   259,   260,   261,
     262,    -1,   264,   265,    -1,   267,    -1,   269,   270,   271,
     272,   273,   274,    -1,   276,   277,    -1,    -1,   280,   281,
     282,    -1,    -1,   285,   286,    -1,   288,    -1,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,    -1,
     302,   303,   304,   305,   306,   307,   308,   309,   310,    -1,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,    -1,   340,   341,
      -1,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,    -1,   365,   366,   367,   368,   369,    -1,   371,
     372,   373,   374,    -1,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,    -1,   391,
     392,   393,   394,    -1,   396,   397,   398,   399,   400,    -1,
     402,   403,    -1,    -1,   406,   407,   408,   409,   410,    -1,
     412,   413,   414,   415,   416,   417,   418,    -1,    -1,   421,
     422,   423,   424,   425,    -1,    -1,   428,   429,   430,   431,
     432,   433,   434,    -1,   436,    -1,   438,   439,   440,   441,
      -1,    -1,   444,    -1,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,    -1,     3,   470,     5,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   484,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    -1,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    -1,    94,    95,
      96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,    -1,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
      -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,    -1,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,
     216,   217,   218,   219,   220,    -1,    -1,   223,    -1,   225,
      -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,    -1,   258,   259,   260,   261,   262,    -1,   264,   265,
      -1,   267,    -1,   269,   270,   271,   272,   273,   274,    -1,
     276,   277,    -1,    -1,   280,   281,   282,    -1,    -1,   285,
     286,    -1,   288,    -1,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,    -1,   302,   303,   304,   305,
     306,   307,   308,   309,   310,    -1,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,    -1,   340,   341,    -1,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,    -1,   359,   360,   361,   362,   363,    -1,   365,
     366,   367,   368,   369,    -1,   371,   372,   373,   374,    -1,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,    -1,   391,   392,    -1,   394,    -1,
     396,   397,   398,   399,   400,    -1,   402,   403,    -1,    -1,
     406,   407,   408,   409,   410,    -1,   412,   413,   414,   415,
     416,   417,   418,    -1,    -1,   421,   422,   423,   424,   425,
      -1,    -1,   428,   429,   430,   431,   432,   433,   434,    -1,
     436,    -1,   438,   439,   440,   441,    -1,    -1,   444,    -1,
      -1,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,    -1,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   484,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    -1,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,    -1,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,    -1,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,
     170,   171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
      -1,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,   219,
     220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,
     230,    -1,    -1,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,    -1,   258,   259,
     260,   261,   262,    -1,   264,   265,    -1,   267,    -1,   269,
     270,   271,   272,   273,   274,    -1,   276,   277,    -1,    -1,
     280,   281,   282,    -1,    -1,   285,   286,    -1,   288,    -1,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,    -1,   302,   303,   304,   305,   306,   307,   308,   309,
     310,    -1,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,    -1,
     340,   341,    -1,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,    -1,   359,
     360,   361,   362,   363,    -1,   365,   366,   367,   368,   369,
      -1,   371,   372,   373,   374,    -1,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
      -1,   391,   392,    -1,   394,    -1,   396,   397,   398,   399,
     400,    -1,   402,   403,    -1,    -1,   406,   407,   408,   409,
     410,    -1,   412,   413,   414,   415,   416,   417,   418,    -1,
      -1,   421,   422,   423,   424,   425,    -1,    -1,   428,   429,
     430,   431,   432,   433,   434,    -1,   436,    -1,   438,   439,
     440,   441,    -1,    -1,   444,    -1,    -1,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,    -1,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   484,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    -1,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    -1,
      94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
      -1,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,    -1,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,    -1,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
     214,    -1,   216,   217,   218,   219,   220,    -1,    -1,   223,
      -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,    -1,   258,   259,   260,   261,   262,    -1,
     264,   265,    -1,   267,    -1,   269,   270,   271,   272,   273,
     274,    -1,   276,   277,    -1,    -1,   280,   281,   282,    -1,
      -1,   285,   286,    -1,   288,    -1,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,    -1,   302,   303,
     304,   305,   306,   307,   308,   309,   310,    -1,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,    -1,   340,   341,    -1,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,    -1,   359,   360,   361,   362,   363,
      -1,   365,   366,   367,   368,   369,    -1,   371,   372,   373,
     374,    -1,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,    -1,   391,   392,    -1,
     394,    -1,   396,   397,   398,   399,   400,    -1,   402,   403,
      -1,    -1,   406,   407,   408,   409,   410,    -1,   412,   413,
     414,   415,   416,   417,   418,    -1,    -1,   421,   422,   423,
     424,   425,    -1,    -1,   428,   429,   430,   431,   432,   433,
     434,    -1,   436,    -1,   438,   439,   440,   441,    -1,    -1,
     444,    -1,    -1,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,    -1,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     484,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    -1,    94,    95,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,
      -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,
     218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,    -1,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,   267,
      -1,   269,   270,   271,   272,   273,   274,    -1,   276,   277,
      -1,    -1,   280,   281,   282,    -1,    -1,   285,   286,    -1,
     288,    -1,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,    -1,   302,   303,   304,   305,   306,   307,
     308,   309,   310,    -1,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,    -1,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
      -1,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,    -1,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,    -1,   391,   392,    -1,   394,    -1,   396,   397,
     398,   399,   400,    -1,   402,   403,    -1,    -1,   406,   407,
     408,   409,   410,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,    -1,   421,   422,   423,   424,   425,    -1,    -1,
     428,   429,   430,   431,   432,   433,   434,    -1,   436,    -1,
     438,   439,   440,   441,    -1,    -1,   444,    -1,    -1,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
      -1,    -1,    -1,    -1,     3,     4,     5,    -1,    -1,     8,
       9,    -1,    -1,    -1,    -1,    -1,   484,    16,    17,    18,
      19,    20,    21,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    31,    32,    33,    34,    35,    36,    37,    38,
      39,    40,    41,    42,    43,    44,    45,    46,    47,    -1,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    -1,    73,    74,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    86,    87,    88,
      89,    90,    91,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     129,   130,   131,   132,   133,   134,   135,   136,   137,   138,
     139,   140,   141,   142,   143,   144,   145,   146,   147,   148,
      -1,   150,   151,   152,   153,    -1,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,    -1,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,    -1,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
      -1,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,    -1,   287,   288,
     289,    -1,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,    -1,   305,   306,    -1,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
      -1,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,    -1,
     409,    -1,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   464,   465,   466,   467,    -1,
       3,    -1,   471,   472,   473,     8,   475,   476,   477,   478,
     479,   480,    -1,    16,    17,    18,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,    -1,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,   267,    -1,   269,   270,   271,   272,
     273,   274,    -1,   276,   277,    -1,    -1,   280,   281,   282,
      -1,    -1,   285,   286,    -1,   288,    -1,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,   305,   306,   307,   308,   309,   310,    -1,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,    -1,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,    -1,   391,   392,
      -1,   394,    -1,   396,   397,   398,   399,   400,    -1,   402,
     403,    -1,    -1,   406,   407,   408,   409,   410,    -1,   412,
     413,   414,   415,   416,   417,   418,    -1,    -1,   421,   422,
     423,   424,   425,    -1,    -1,   428,   429,   430,   431,   432,
     433,   434,    -1,   436,    -1,   438,   439,   440,   441,    -1,
      -1,   444,    -1,    -1,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,    -1,    -1,    -1,   471,   472,
     473,    -1,   475,   476,   477,   478,   479,   480,     8,    -1,
      -1,    11,    -1,    -1,    -1,    -1,    16,    17,    18,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,    11,
      -1,    -1,    -1,    33,    16,    17,    18,    -1,    -1,    -1,
      -1,    41,    -1,    -1,     8,    -1,    -1,    11,    48,    -1,
      -1,    33,    16,    17,    18,    -1,    -1,    -1,    -1,    41,
      -1,    -1,    -1,    -1,    -1,    -1,    48,    -1,    -1,    33,
      -1,    -1,     8,    73,    -1,    11,    -1,    41,    -1,    -1,
      16,    17,    18,    -1,    48,    -1,    -1,    -1,    -1,    -1,
       8,    73,    -1,    11,    -1,    -1,    -1,    33,    16,    17,
      18,    -1,    -1,    -1,    -1,    41,    -1,    -1,     8,    73,
      -1,    11,    48,    -1,    -1,    33,    16,    17,    18,    -1,
      -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,
      48,    -1,    -1,    33,    -1,    -1,    -1,    73,    -1,    -1,
      -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,    48,    -1,
      -1,    -1,    -1,    -1,    -1,    73,     8,    -1,    -1,    11,
      -1,    -1,    -1,    -1,    16,    17,    18,    -1,    -1,    -1,
      -1,    -1,   172,    73,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    33,    -1,    -1,    -1,    -1,   186,    -1,    -1,    41,
     172,   191,    -1,    -1,    -1,    -1,    48,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   186,    -1,    -1,    -1,   172,   191,
      -1,    -1,   212,   213,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    73,   186,    -1,    -1,    -1,   226,   191,    -1,    -1,
     212,   213,    -1,    -1,    -1,    -1,   172,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   226,    -1,    -1,    -1,   212,   213,
     186,    -1,    -1,    -1,   172,   191,    -1,    -1,    -1,    -1,
      -1,    -1,   226,   263,    -1,    -1,   266,    -1,   186,    -1,
      -1,    -1,   172,   191,    -1,    -1,   212,   213,    -1,    -1,
     280,   263,    -1,   283,   266,    -1,   186,    -1,    -1,    -1,
     226,   191,    -1,    -1,   212,   213,    -1,    -1,   280,   263,
      -1,   283,   266,    -1,    -1,    -1,    -1,    -1,   226,    -1,
      -1,    -1,   212,   213,    -1,    -1,   280,    -1,    -1,   283,
     172,    -1,    -1,    -1,    -1,    -1,   226,   263,    -1,    -1,
     266,    -1,    -1,    -1,   186,    -1,    -1,    -1,    -1,   191,
      -1,    -1,    -1,    -1,   280,   263,    -1,   283,   266,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     212,   213,   280,   263,    -1,   283,   266,    -1,    -1,    -1,
     370,    -1,    -1,    -1,   226,    -1,    -1,    -1,    -1,    -1,
     280,    -1,    -1,   283,    -1,    -1,    -1,    -1,   370,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,
      -1,   263,    -1,    -1,   266,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,   280,    -1,
      11,   283,    -1,    -1,   370,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   370,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      41,    -1,    -1,    -1,    -1,    -1,    -1,    48,   468,    -1,
     370,   471,   472,   473,    -1,   475,   476,   477,   478,   479,
     480,    -1,    -1,    -1,    -1,   485,   468,    -1,    -1,   471,
     472,   473,    73,   475,   476,   477,   478,   479,   480,    -1,
      -1,    -1,    -1,   485,   468,    -1,    -1,   471,   472,   473,
      -1,   475,   476,   477,   478,   479,   480,    -1,   370,    -1,
      -1,   485,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   468,    -1,    -1,   471,   472,   473,    -1,   475,
     476,   477,   478,   479,   480,    -1,    -1,    -1,    -1,   485,
     468,    -1,    -1,   471,   472,   473,    -1,   475,   476,   477,
     478,   479,   480,    -1,    -1,    -1,    -1,   485,   468,    -1,
      -1,   471,   472,   473,    -1,   475,   476,   477,   478,   479,
     480,    -1,    -1,    -1,    -1,   485,    -1,    -1,    -1,     8,
      -1,   172,    11,    -1,    -1,    -1,    -1,    16,    17,    18,
      -1,    -1,    -1,    -1,     8,   186,    -1,    11,    -1,    -1,
     191,    -1,    -1,    -1,    33,    -1,   468,    -1,    -1,   471,
     472,   473,    41,   475,   476,   477,   478,   479,   480,    48,
      -1,     8,    -1,   485,    11,    -1,    -1,    41,    -1,    16,
      17,    18,    -1,    -1,    48,   226,    -1,    -1,    -1,     8,
      -1,    -1,    11,    -1,    73,    -1,    33,    16,    17,    18,
      -1,    -1,    -1,    -1,    41,    -1,    -1,     8,    -1,    73,
      11,    48,    -1,    -1,    33,    16,    17,    18,    -1,    -1,
      -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,    48,
      -1,    -1,    33,    -1,    -1,    -1,    73,    -1,    -1,   280,
      41,    -1,    -1,    -1,    -1,    -1,    -1,    48,    -1,    -1,
      -1,    -1,    -1,    -1,    73,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    73,    -1,    -1,    -1,    -1,    -1,   142,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   172,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   186,   172,    -1,
      -1,    -1,   191,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   186,    -1,    -1,    -1,    -1,   191,    -1,   370,
      -1,    -1,    -1,   212,   213,   172,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   226,    -1,   186,
      -1,    -1,    -1,   172,   191,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   226,    -1,    -1,    -1,    -1,   186,    -1,    -1,
      -1,   172,   191,    -1,    -1,   212,   213,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   263,   186,    -1,   266,    -1,   226,
     191,    -1,    -1,   212,   213,    -1,    -1,    -1,    -1,    -1,
      -1,   280,    -1,    -1,   283,    -1,    -1,   226,    -1,    -1,
      -1,   212,   213,    -1,    -1,    -1,   280,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   226,   263,   468,    -1,   266,
      -1,    -1,    -1,    -1,   475,   476,   477,   478,   479,   480,
      -1,    -1,    -1,   280,   263,    -1,   283,   266,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   280,   263,    -1,   283,   266,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,
      -1,    -1,   283,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   370,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   370,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   370,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   370,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   468,
      -1,    -1,   471,   472,   473,    -1,   475,   476,   477,   478,
     479,   480,    -1,    -1,   468,    -1,   485,    -1,    -1,    -1,
      -1,   475,   476,   477,   478,   479,   480,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   468,    -1,    -1,   471,   472,   473,    -1,   475,   476,
     477,   478,   479,   480,    -1,    -1,    -1,    -1,   485,   468,
      -1,    -1,   471,   472,   473,    -1,   475,   476,   477,   478,
     479,   480,    -1,    -1,    -1,    -1,   485,   468,     3,    -1,
     471,   472,   473,    -1,   475,   476,   477,   478,   479,   480,
      -1,    -1,   483,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   477,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    -1,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,    -1,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,    -1,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,
     170,   171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
      -1,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,   219,
     220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,
     230,    -1,    -1,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,    -1,   258,   259,
     260,   261,   262,    -1,   264,   265,    -1,   267,    -1,   269,
     270,   271,   272,   273,   274,    -1,   276,   277,    -1,    -1,
     280,   281,   282,    -1,    -1,   285,   286,    -1,   288,    -1,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,    -1,   302,   303,   304,   305,   306,   307,   308,   309,
     310,    -1,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,    -1,
     340,   341,    -1,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,    -1,   359,
     360,   361,   362,   363,    -1,   365,   366,   367,   368,   369,
      -1,   371,   372,   373,   374,    -1,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
      -1,   391,   392,    -1,   394,    -1,   396,   397,   398,   399,
     400,    -1,   402,   403,    -1,    -1,   406,   407,   408,   409,
     410,    -1,   412,   413,   414,   415,   416,   417,   418,    -1,
      -1,   421,   422,   423,   424,   425,    -1,    -1,   428,   429,
     430,   431,   432,   433,   434,    -1,   436,    -1,   438,   439,
     440,   441,    -1,    -1,   444,    -1,    -1,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,     3,     4,
       5,    -1,    -1,    -1,     9,    -1,    -1,   477,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    93,    94,
      95,    96,    -1,    -1,    -1,   100,    -1,    -1,    -1,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,   166,    -1,   168,   169,   170,   171,   172,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,   200,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,    -1,    -1,   223,   224,
     225,   226,    -1,   228,   229,   230,    -1,    -1,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,   266,   267,    -1,   269,   270,   271,   272,   273,   274,
      -1,   276,   277,   278,    -1,   280,   281,   282,    -1,    -1,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,    -1,   302,   303,   304,
     305,   306,   307,   308,   309,   310,    -1,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,    -1,   359,   360,   361,   362,   363,    -1,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
      -1,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,    -1,   391,   392,    -1,   394,
     395,   396,   397,   398,   399,   400,    -1,   402,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,    -1,    -1,   421,   422,   423,   424,
     425,    -1,    -1,   428,   429,   430,   431,   432,   433,   434,
      -1,   436,   437,   438,   439,   440,   441,    -1,    -1,   444,
      -1,    -1,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,     3,     4,     5,    -1,    -1,    -1,     9,
     475,   476,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    93,    94,    95,    96,    -1,    -1,    -1,
     100,    -1,    -1,    -1,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,   166,    -1,   168,   169,
     170,   171,   172,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
     200,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,    -1,    -1,   223,   224,   225,   226,    -1,   228,   229,
     230,    -1,    -1,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,    -1,   264,   265,   266,   267,    -1,   269,
     270,   271,   272,   273,   274,    -1,   276,   277,   278,    -1,
     280,   281,   282,    -1,    -1,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,    -1,   302,   303,   304,   305,   306,   307,   308,   309,
     310,    -1,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,    -1,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,    -1,   359,
     360,   361,   362,   363,    -1,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,    -1,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
      -1,   391,   392,    -1,   394,   395,   396,   397,   398,   399,
     400,    -1,   402,   403,    -1,    -1,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,    -1,
      -1,   421,   422,   423,   424,   425,    -1,    -1,   428,   429,
     430,   431,   432,   433,   434,    -1,   436,   437,   438,   439,
     440,   441,    -1,    -1,   444,    -1,    -1,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,     3,     4,
       5,    -1,    -1,    -1,     9,   475,   476,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    93,    94,
      95,    96,    -1,    -1,    -1,   100,    -1,    -1,    -1,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,   166,    -1,   168,   169,   170,   171,   172,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,   200,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,    -1,    -1,   223,   224,
     225,   226,    -1,   228,   229,   230,    -1,    -1,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,   266,   267,    -1,   269,   270,   271,   272,   273,   274,
      -1,   276,   277,   278,    -1,   280,   281,   282,    -1,    -1,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,    -1,   302,   303,   304,
     305,   306,   307,   308,   309,   310,    -1,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,    -1,   359,   360,   361,   362,   363,    -1,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
      -1,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,    -1,   391,   392,    -1,   394,
     395,   396,   397,   398,   399,   400,    -1,   402,   403,    -1,
      -1,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,    -1,    -1,   421,   422,   423,   424,
     425,    -1,    -1,   428,   429,   430,   431,   432,   433,   434,
      -1,   436,   437,   438,   439,   440,   441,    -1,    -1,   444,
      -1,    -1,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,    -1,     8,    -1,    -1,    11,    -1,    -1,
     475,   476,    16,    17,    18,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    33,
      16,    17,    18,    37,    -1,    -1,    -1,    41,    -1,    -1,
       8,    -1,    -1,    11,    48,    -1,    -1,    33,    16,    17,
      18,    -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,
      -1,    -1,    48,    -1,    -1,    33,    -1,    -1,     8,    73,
      -1,    11,    -1,    41,    -1,    -1,    16,    17,    18,    -1,
      48,    -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,
      -1,    -1,    -1,    33,    -1,    -1,    36,    -1,    -1,    -1,
      -1,    41,    -1,    -1,     8,    73,    -1,    11,    48,    -1,
      -1,    -1,    16,    17,    18,    -1,    -1,    -1,    -1,   123,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,
      -1,    -1,    -1,    73,    -1,    -1,    -1,    41,    -1,    -1,
      -1,    -1,    -1,    -1,    48,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    -1,
      16,    17,    18,    -1,    -1,    -1,    -1,    -1,   172,    73,
      -1,    -1,    -1,    -1,    -1,    -1,   162,    33,    -1,    -1,
      36,   167,   186,    -1,    -1,    41,   172,   191,    -1,    -1,
      -1,    -1,    48,   161,    -1,    -1,    -1,    -1,    -1,    -1,
     186,    -1,    -1,    -1,   172,   191,    -1,    -1,   212,   213,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    73,   186,    -1,
      -1,    -1,   226,   191,    -1,    -1,   212,   213,    -1,    -1,
      -1,    -1,   172,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     226,    -1,    -1,    -1,   212,   213,   186,    -1,    -1,    -1,
      -1,   191,    -1,    -1,    -1,    -1,    -1,    -1,   226,   263,
      -1,    -1,   266,    -1,    -1,    -1,    -1,    -1,   172,    -1,
      -1,    -1,   212,   213,    -1,    -1,   280,   263,    -1,   283,
     266,    -1,   186,    -1,    -1,    -1,   226,   191,    -1,    -1,
      -1,    -1,    -1,    -1,   280,   263,    -1,   283,   266,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   212,   213,
      -1,    -1,   280,    -1,    -1,   283,   172,    -1,    -1,    -1,
      -1,    -1,   226,   263,    -1,    -1,   266,    -1,    -1,    -1,
     186,    -1,    -1,    -1,    -1,   191,    -1,    -1,   306,    -1,
     280,    -1,    -1,   283,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   212,   213,    -1,   263,
      -1,    -1,   266,    -1,    -1,    -1,   370,    -1,    -1,    -1,
     226,    -1,    -1,    -1,    -1,    21,   280,    -1,    -1,   283,
       8,    -1,    -1,    11,   370,    -1,    -1,    -1,    16,    17,
      18,    -1,    -1,    -1,    -1,    -1,    -1,   301,    -1,    -1,
      -1,    -1,   370,    -1,    -1,    33,    -1,   263,    -1,    -1,
     266,    -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,
      48,    -1,    -1,   427,   280,    -1,    -1,   283,    74,    -1,
     370,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    89,    -1,    73,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   468,    -1,   370,   471,   472,   473,
      -1,   475,   476,   477,   478,   479,   480,    -1,    -1,    -1,
      -1,    -1,   468,    -1,    -1,   471,   472,   473,    -1,   475,
     476,   477,   478,   479,   480,    -1,    -1,   143,    -1,    -1,
     468,    -1,    -1,   471,   472,   473,   152,   475,   476,   477,
     478,   479,   480,    -1,   370,    -1,     8,    -1,   164,    11,
      -1,    -1,    -1,   169,    16,    17,    18,    -1,   468,    -1,
      -1,   471,   472,   473,    -1,   475,   476,   477,   478,   479,
     480,    33,    -1,    -1,   172,    -1,    -1,    -1,   194,    41,
      -1,    -1,    -1,    -1,    -1,    -1,    48,    -1,   186,    -1,
      -1,    -1,    -1,   191,   468,    -1,    -1,   471,   472,   473,
      -1,   475,   476,   477,   478,   479,   480,    -1,    -1,    -1,
      -1,    73,    -1,    -1,   212,   213,    -1,    -1,    -1,    -1,
      -1,   237,    -1,    -1,   240,    -1,    -1,    -1,   226,    -1,
       8,    -1,    -1,    11,    -1,    -1,    -1,    -1,    16,    17,
      18,    -1,   468,    -1,    -1,   471,   472,   473,    -1,   475,
     476,   477,   478,   479,   480,    33,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    41,    -1,   263,    -1,    -1,   266,    -1,
      48,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   280,    -1,    -1,   283,    -1,   303,     8,    -1,
      -1,    11,    -1,    -1,    -1,    73,    16,    17,    18,    -1,
      -1,   317,    -1,    -1,    -1,   167,    -1,    -1,     8,    -1,
     172,    11,    -1,    33,    -1,    -1,    16,    17,    18,    -1,
      -1,    41,    -1,    -1,   186,    -1,    -1,    23,    48,   191,
      -1,    -1,   348,    29,    -1,   351,    -1,    -1,    -1,    -1,
      36,    41,    -1,   359,    -1,    -1,   362,    -1,    48,    -1,
     212,   213,    -1,    73,    -1,    -1,    -1,    -1,    -1,    55,
      -1,    -1,    -1,    -1,   226,   381,    -1,    -1,    -1,    -1,
      -1,    -1,   370,    73,    -1,    -1,    -1,   393,    -1,    -1,
      -1,    -1,    -1,    -1,   400,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   409,   172,    -1,    -1,    -1,    -1,    -1,
      -1,   263,    -1,   401,   266,    -1,    -1,    -1,   186,   105,
      -1,    -1,    -1,   191,    -1,    -1,    -1,    -1,   280,    -1,
      -1,   283,    -1,   439,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   212,   213,    -1,    -1,   134,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   226,    -1,
      -1,    -1,   172,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   186,    -1,    -1,    -1,
     468,   191,   172,   471,   472,   473,    -1,   475,   476,   477,
     478,   479,   480,    -1,    -1,   263,   186,    -1,   266,    -1,
      -1,   191,   212,   213,    -1,    -1,    -1,   193,    -1,    -1,
      -1,    -1,   280,    -1,    -1,   283,   226,    -1,   370,    -1,
      -1,    -1,   212,   213,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   226,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   263,    -1,   241,   266,    -1,    -1,    -1,
      -1,    -1,    -1,   249,    -1,    -1,    -1,    -1,    -1,    -1,
     280,    -1,    -1,    -1,    -1,   261,   266,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     280,    -1,    -1,    -1,    -1,    -1,   282,    -1,    -1,    -1,
      -1,    -1,   370,    -1,    -1,    -1,   292,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   468,    -1,    -1,   471,
     472,   473,    -1,   475,   476,   477,   478,   479,   480,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   332,    -1,    -1,    -1,
     336,   337,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     370,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   359,    -1,    -1,    -1,    -1,    -1,   365,
     370,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   379,    -1,    -1,    -1,    -1,    -1,    -1,
     468,    -1,    -1,   471,   472,   473,    -1,   475,   476,   477,
     478,   479,   480,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   430,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   468,    -1,
      -1,   471,   472,   473,    -1,   475,   476,   477,   478,   479,
     480,    -1,    -1,    -1,    -1,     3,    -1,     5,   468,    -1,
      -1,   471,   472,   473,    -1,   475,   476,   477,   478,   479,
     480,    19,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    29,    30,    31,    32,    33,    34,    35,    36,    37,
      38,    39,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
      88,    89,    90,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
     138,   139,   140,   141,   142,   143,   144,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
      33,    34,    35,    36,    37,    38,    39,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    86,    87,    88,    89,    90,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   138,   139,   140,   141,   142,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    29,    30,    31,    32,    33,    34,    35,    36,    37,
      38,    39,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
      88,    89,    90,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
     138,   139,   140,   141,   142,   143,   144,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,   166,    -1,   168,   169,   170,   171,   172,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,   200,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,    -1,    -1,
     223,   224,   225,   226,    -1,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
      -1,   264,   265,   266,   267,    -1,   269,   270,   271,   272,
     273,   274,    -1,   276,   277,    -1,    -1,   280,   281,   282,
      -1,    -1,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,   305,   306,   307,   308,   309,   310,    -1,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,    -1,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,    -1,   391,   392,
      -1,   394,   395,   396,   397,   398,   399,   400,    -1,   402,
     403,    -1,    -1,   406,   407,   408,   409,   410,    -1,   412,
     413,   414,   415,   416,   417,   418,    -1,    -1,   421,   422,
     423,   424,   425,   426,    -1,   428,   429,   430,   431,   432,
     433,   434,    -1,   436,   437,   438,   439,   440,   441,    -1,
      -1,   444,    -1,    -1,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,     3,    -1,     5,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    93,    94,    95,    96,    -1,
      -1,    -1,   100,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,   166,    -1,
     168,   169,   170,   171,   172,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,   200,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,    -1,    -1,   223,   224,   225,   226,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,   266,   267,
      -1,   269,   270,   271,   272,   273,   274,    -1,   276,   277,
     278,    -1,   280,   281,   282,    -1,    -1,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,    -1,   302,   303,   304,   305,   306,   307,
     308,   309,   310,    -1,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,    -1,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
      -1,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,    -1,   391,   392,    -1,   394,   395,   396,   397,
     398,   399,   400,    -1,   402,   403,    -1,    -1,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,    -1,    -1,   421,   422,   423,   424,   425,    -1,    -1,
     428,   429,   430,   431,   432,   433,   434,    -1,   436,   437,
     438,   439,   440,   441,    -1,    -1,   444,    -1,    -1,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    31,    32,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      93,    94,    95,    96,    -1,    -1,    -1,   100,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,   166,    -1,   168,   169,   170,   171,   172,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,   200,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,    -1,    -1,
     223,   224,   225,   226,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
      -1,   264,   265,   266,   267,    -1,   269,   270,   271,   272,
     273,   274,    -1,   276,   277,    -1,    -1,   280,   281,   282,
      -1,    -1,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,   305,   306,   307,   308,   309,   310,    -1,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,    -1,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,    -1,   391,   392,
      -1,   394,   395,   396,   397,   398,   399,   400,    -1,   402,
     403,    -1,    -1,   406,   407,   408,   409,   410,    -1,   412,
     413,   414,   415,   416,   417,   418,    -1,    -1,   421,   422,
     423,   424,   425,    -1,    -1,   428,   429,   430,   431,   432,
     433,   434,    -1,   436,   437,   438,   439,   440,   441,    -1,
      -1,   444,    -1,    -1,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    93,    94,    95,    96,    -1,
      -1,    -1,   100,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,   166,    -1,
     168,   169,   170,   171,   172,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,   200,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,    -1,    -1,   223,   224,   225,   226,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,   266,   267,
      -1,   269,   270,   271,   272,   273,   274,    -1,   276,   277,
      -1,    -1,   280,   281,   282,    -1,    -1,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,    -1,   302,   303,   304,   305,   306,   307,
     308,   309,   310,    -1,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,    -1,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
      -1,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,    -1,   391,   392,    -1,   394,   395,   396,   397,
     398,   399,   400,    -1,   402,   403,    -1,    -1,   406,   407,
     408,   409,   410,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,    -1,   421,   422,   423,   424,   425,    -1,    -1,
     428,   429,   430,   431,   432,   433,   434,    -1,   436,   437,
     438,   439,   440,   441,    -1,    -1,   444,    -1,    -1,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      -1,    -1,    75,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    85,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,   164,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,    -1,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,   267,    -1,   269,   270,   271,   272,
     273,   274,    -1,   276,   277,    -1,    -1,   280,   281,   282,
      -1,    -1,   285,   286,    -1,   288,    -1,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,    -1,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,    -1,   391,   392,
      -1,   394,    -1,   396,   397,   398,   399,   400,    -1,   402,
     403,    -1,    -1,   406,   407,   408,   409,   410,    -1,   412,
     413,   414,   415,   416,   417,   418,    -1,   420,   421,   422,
     423,   424,   425,    -1,    -1,   428,   429,   430,   431,   432,
     433,   434,    -1,   436,    -1,   438,   439,   440,   441,    -1,
      -1,   444,    -1,    -1,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    85,    86,    87,
      88,    89,    90,    91,    -1,    -1,    94,    95,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,   164,   165,    -1,    -1,
      -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,
     218,   219,   220,    -1,    -1,   223,    -1,   225,   226,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,    -1,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,   267,
      -1,   269,   270,   271,   272,   273,   274,    -1,   276,   277,
      -1,    -1,   280,   281,   282,    -1,    -1,   285,   286,    -1,
     288,    -1,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,    -1,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,    -1,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
      -1,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,    -1,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,    -1,   391,   392,    -1,   394,    -1,   396,   397,
     398,   399,   400,    -1,   402,   403,    -1,    -1,   406,   407,
     408,   409,   410,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,   420,   421,   422,   423,   424,   425,    -1,    -1,
     428,   429,   430,   431,   432,   433,   434,    -1,   436,    -1,
     438,   439,   440,   441,    -1,    -1,   444,    -1,    -1,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    31,    32,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,    -1,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,   267,    -1,   269,   270,   271,   272,
     273,   274,    -1,   276,   277,    -1,    -1,   280,   281,   282,
      -1,    -1,   285,   286,    -1,   288,    -1,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,   305,   306,   307,   308,   309,   310,    -1,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,    -1,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,    -1,   391,   392,
      -1,   394,    -1,   396,   397,   398,   399,   400,    -1,   402,
     403,    -1,    -1,   406,   407,   408,   409,   410,    -1,   412,
     413,   414,   415,   416,   417,   418,    -1,    -1,   421,   422,
     423,   424,   425,    -1,    -1,   428,   429,   430,   431,   432,
     433,   434,    -1,   436,    -1,   438,   439,   440,   441,    -1,
      -1,   444,    -1,    -1,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,     3,     4,    -1,    -1,    -1,
      -1,     9,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    -1,    94,    95,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,
      -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,
     218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,    -1,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,   267,
      -1,   269,   270,   271,   272,   273,   274,    -1,   276,   277,
      -1,    -1,   280,   281,   282,    -1,    -1,   285,   286,    -1,
     288,    -1,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,    -1,   302,   303,   304,   305,   306,   307,
     308,   309,   310,    -1,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,    -1,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
      -1,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,    -1,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,    -1,   391,   392,    -1,   394,    -1,   396,   397,
     398,   399,   400,    -1,   402,   403,    -1,    -1,   406,   407,
     408,   409,   410,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,    -1,   421,   422,   423,   424,   425,    -1,    -1,
     428,   429,   430,   431,   432,   433,   434,    -1,   436,    -1,
     438,   439,   440,   441,    -1,    -1,   444,    -1,    -1,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,    -1,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,   267,    -1,   269,   270,   271,   272,
     273,   274,    -1,   276,   277,    -1,    -1,   280,   281,   282,
      -1,    -1,   285,   286,    -1,   288,    -1,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,   305,   306,   307,   308,   309,   310,    -1,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,    -1,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,    -1,   391,   392,
      -1,   394,    -1,   396,   397,   398,   399,   400,    -1,   402,
     403,    -1,    -1,   406,   407,   408,   409,   410,    -1,   412,
     413,   414,   415,   416,   417,   418,    -1,    -1,   421,   422,
     423,   424,   425,    -1,    -1,   428,   429,   430,   431,   432,
     433,   434,    -1,   436,    -1,   438,   439,   440,   441,    -1,
      -1,   444,    -1,    -1,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    -1,    94,    95,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,
      -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,
     218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,    -1,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,   267,
      -1,   269,   270,   271,   272,   273,   274,    -1,   276,   277,
      -1,    -1,   280,   281,   282,    -1,    -1,   285,   286,    -1,
     288,    -1,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,    -1,   302,   303,   304,   305,   306,   307,
     308,   309,   310,    -1,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,    -1,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
      -1,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,    -1,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,    -1,   391,   392,    -1,   394,    -1,   396,   397,
     398,   399,   400,    -1,   402,   403,    -1,    -1,   406,   407,
     408,   409,   410,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,    -1,   421,   422,   423,   424,   425,    -1,    -1,
     428,   429,   430,   431,   432,   433,   434,    -1,   436,    -1,
     438,   439,   440,   441,    -1,    -1,   444,    -1,    -1,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,    -1,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,   267,    -1,   269,   270,   271,   272,
     273,   274,    -1,   276,   277,    -1,   279,   280,   281,   282,
      -1,    -1,   285,   286,    -1,   288,    -1,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,   305,   306,   307,   308,   309,   310,    -1,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,    -1,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,    -1,   391,   392,
      -1,   394,    -1,   396,   397,   398,   399,   400,    -1,   402,
     403,    -1,    -1,   406,   407,   408,   409,   410,    -1,   412,
     413,   414,   415,   416,   417,   418,    -1,    -1,   421,   422,
     423,   424,   425,    -1,    -1,   428,   429,   430,   431,   432,
     433,   434,    -1,   436,    -1,   438,   439,   440,   441,    -1,
      -1,   444,    -1,    -1,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    -1,    94,    95,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,
      -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,
     218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,    -1,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,   267,
      -1,   269,   270,   271,   272,   273,   274,    -1,   276,   277,
      -1,   279,   280,   281,   282,    -1,    -1,   285,   286,    -1,
     288,    -1,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,    -1,   302,   303,   304,   305,   306,   307,
     308,   309,   310,    -1,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,    -1,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
      -1,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,    -1,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,    -1,   391,   392,    -1,   394,    -1,   396,   397,
     398,   399,   400,    -1,   402,   403,    -1,    -1,   406,   407,
     408,   409,   410,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,    -1,   421,   422,   423,   424,   425,    -1,    -1,
     428,   429,   430,   431,   432,   433,   434,    -1,   436,    -1,
     438,   439,   440,   441,    -1,    -1,   444,    -1,    -1,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,    -1,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,   267,    -1,   269,   270,   271,   272,
     273,   274,    -1,   276,   277,    -1,    -1,   280,   281,   282,
      -1,    -1,   285,   286,    -1,   288,    -1,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,   305,   306,   307,   308,   309,   310,    -1,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,    -1,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,    -1,   391,   392,
      -1,   394,    -1,   396,   397,   398,   399,   400,    -1,   402,
     403,    -1,    -1,   406,   407,   408,   409,   410,    -1,   412,
     413,   414,   415,   416,   417,   418,    -1,    -1,   421,   422,
     423,   424,   425,    -1,    -1,   428,   429,   430,   431,   432,
     433,   434,    -1,   436,    -1,   438,   439,   440,   441,    -1,
      -1,   444,    -1,    -1,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    -1,    94,    95,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,
      -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,
     218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,    -1,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,   267,
      -1,   269,   270,   271,   272,   273,   274,    -1,   276,   277,
      -1,    -1,   280,   281,   282,    -1,    -1,   285,   286,    -1,
     288,    -1,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,    -1,   302,   303,   304,   305,   306,   307,
     308,   309,   310,    -1,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,    -1,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
      -1,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,    -1,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,    -1,   391,   392,   393,   394,    -1,   396,   397,
     398,   399,   400,    -1,   402,   403,    -1,    -1,   406,   407,
     408,   409,   410,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,    -1,   421,   422,   423,   424,   425,    -1,    -1,
     428,   429,   430,   431,   432,   433,   434,    -1,   436,    -1,
     438,   439,   440,   441,    -1,    -1,   444,    -1,    -1,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    36,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,    -1,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,   267,    -1,   269,   270,   271,   272,
     273,   274,    -1,   276,   277,    -1,    -1,   280,   281,   282,
      -1,    -1,   285,   286,    -1,   288,    -1,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,   305,   306,   307,   308,   309,   310,    -1,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,    -1,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,    -1,   391,   392,
      -1,   394,    -1,   396,   397,   398,   399,   400,    -1,   402,
     403,    -1,    -1,   406,   407,   408,   409,   410,    -1,   412,
     413,   414,   415,   416,   417,   418,    -1,    -1,   421,   422,
     423,   424,   425,    -1,    -1,   428,   429,   430,   431,   432,
     433,   434,    -1,   436,    -1,   438,   439,   440,   441,    -1,
      -1,   444,    -1,    -1,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    36,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    -1,    94,    95,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,
      -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,
     218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,    -1,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,   267,
      -1,   269,   270,   271,   272,   273,   274,    -1,   276,   277,
      -1,    -1,   280,   281,   282,    -1,    -1,   285,   286,    -1,
     288,    -1,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,    -1,   302,   303,   304,   305,   306,   307,
     308,   309,   310,    -1,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,    -1,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
      -1,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,    -1,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,    -1,   391,   392,    -1,   394,    -1,   396,   397,
     398,   399,   400,    -1,   402,   403,    -1,    -1,   406,   407,
     408,   409,   410,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,    -1,   421,   422,   423,   424,   425,    -1,    -1,
     428,   429,   430,   431,   432,   433,   434,    -1,   436,    -1,
     438,   439,   440,   441,    -1,    -1,   444,    -1,    -1,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
       3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,    -1,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,   267,    -1,   269,   270,   271,   272,
     273,   274,    -1,   276,   277,    -1,    -1,   280,   281,   282,
      -1,    -1,   285,   286,    -1,   288,    -1,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,   305,   306,   307,   308,   309,   310,    -1,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,    -1,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,    -1,   391,   392,
      -1,   394,    -1,   396,   397,   398,   399,   400,    -1,   402,
     403,    -1,    -1,   406,   407,   408,   409,   410,    -1,   412,
     413,   414,   415,   416,   417,   418,    -1,    -1,   421,   422,
     423,   424,   425,    -1,    -1,   428,   429,   430,   431,   432,
     433,   434,    -1,   436,    -1,   438,   439,   440,   441,    -1,
      -1,   444,    -1,    -1,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    -1,    94,    95,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,
      -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,
     218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,    -1,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,   267,
      -1,   269,   270,   271,   272,   273,   274,    -1,   276,   277,
      -1,    -1,   280,   281,   282,    -1,    -1,   285,   286,    -1,
     288,    -1,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,    -1,   302,   303,   304,   305,   306,   307,
     308,   309,   310,    -1,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,    -1,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
      -1,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,    -1,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,    -1,   391,   392,    -1,   394,    -1,   396,   397,
     398,   399,   400,    -1,   402,   403,    -1,    -1,   406,   407,
     408,   409,   410,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,    -1,   421,   422,   423,   424,   425,    -1,    -1,
     428,   429,   430,   431,   432,   433,   434,    -1,   436,    -1,
     438,   439,   440,   441,    -1,    -1,   444,    -1,    -1,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,    -1,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,   267,    -1,   269,   270,   271,   272,
     273,   274,    -1,   276,   277,    -1,    -1,   280,   281,   282,
      -1,    -1,   285,   286,    -1,   288,    -1,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,   305,   306,   307,   308,   309,   310,    -1,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,    -1,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,    -1,   391,   392,
      -1,   394,    -1,   396,   397,   398,   399,   400,    -1,   402,
     403,    -1,    -1,   406,   407,   408,   409,   410,    -1,   412,
     413,   414,   415,   416,   417,   418,    -1,    -1,   421,   422,
     423,   424,   425,    -1,    -1,   428,   429,   430,   431,   432,
     433,   434,    -1,   436,    -1,   438,   439,   440,   441,    -1,
      -1,   444,    -1,    -1,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    -1,    94,    95,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,
      -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,
     218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,    -1,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,   267,
      -1,   269,   270,   271,   272,   273,   274,    -1,   276,   277,
      -1,    -1,   280,   281,   282,    -1,    -1,   285,   286,    -1,
     288,    -1,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,    -1,   302,   303,   304,   305,   306,   307,
     308,   309,   310,    -1,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,    -1,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
      -1,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,    -1,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,    -1,   391,   392,    -1,   394,    -1,   396,   397,
     398,   399,   400,    -1,   402,   403,    -1,    -1,   406,   407,
     408,   409,   410,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,    -1,   421,   422,   423,   424,   425,    -1,    -1,
     428,   429,   430,   431,   432,   433,   434,    -1,   436,    -1,
     438,   439,   440,   441,    -1,    -1,   444,    -1,    -1,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,    -1,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,   267,    -1,   269,   270,   271,   272,
     273,   274,    -1,   276,   277,    -1,    -1,   280,   281,   282,
      -1,    -1,   285,   286,    -1,   288,    -1,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,   305,   306,   307,   308,   309,   310,    -1,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,    -1,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,    -1,   391,   392,
      -1,   394,    -1,   396,   397,   398,   399,   400,    -1,   402,
     403,    -1,    -1,   406,   407,   408,   409,   410,    -1,   412,
     413,   414,   415,   416,   417,   418,    -1,    -1,   421,   422,
     423,   424,   425,    -1,    -1,   428,   429,   430,   431,   432,
     433,   434,    -1,   436,    -1,   438,   439,   440,   441,    -1,
      -1,   444,    -1,    -1,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    -1,    94,    95,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,
      -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,
     218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,    -1,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,   267,
      -1,   269,   270,   271,   272,   273,   274,    -1,   276,   277,
      -1,    -1,   280,   281,   282,    -1,    -1,   285,   286,    -1,
     288,    -1,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,    -1,   302,   303,   304,   305,   306,   307,
     308,   309,   310,    -1,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,    -1,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
      -1,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,    -1,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,    -1,   391,   392,    -1,   394,    -1,   396,   397,
     398,   399,   400,    -1,   402,   403,    -1,    -1,   406,   407,
     408,   409,   410,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,    -1,   421,   422,   423,   424,   425,    -1,    -1,
     428,   429,   430,   431,   432,   433,   434,    -1,   436,    -1,
     438,   439,   440,   441,    -1,    -1,   444,    -1,    -1,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,    -1,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,   267,    -1,   269,   270,   271,   272,
     273,   274,    -1,   276,   277,    -1,    -1,   280,   281,   282,
      -1,    -1,   285,   286,    -1,   288,    -1,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,   305,   306,   307,   308,   309,   310,    -1,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,    -1,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,    -1,   391,   392,
      -1,   394,    -1,   396,   397,   398,   399,   400,    -1,   402,
     403,    -1,    -1,   406,   407,   408,   409,   410,    -1,   412,
     413,   414,   415,   416,   417,   418,    -1,    -1,   421,   422,
     423,   424,   425,    -1,    -1,   428,   429,   430,   431,   432,
     433,   434,    -1,   436,    -1,   438,   439,   440,   441,    -1,
      -1,   444,    -1,    -1,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    -1,    94,    95,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,
      -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,
     218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,    -1,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,   267,
      -1,   269,   270,   271,   272,   273,   274,    -1,   276,   277,
      -1,    -1,   280,   281,   282,    -1,    -1,   285,   286,    -1,
     288,    -1,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,    -1,   302,   303,   304,   305,   306,   307,
     308,   309,   310,    -1,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,    -1,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
      -1,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,    -1,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,    -1,   391,   392,    -1,   394,    -1,   396,   397,
     398,   399,   400,    -1,   402,   403,    -1,    -1,   406,   407,
     408,   409,   410,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,    -1,   421,   422,   423,   424,   425,    -1,    -1,
     428,   429,   430,   431,   432,   433,   434,    -1,   436,    -1,
     438,   439,   440,   441,    -1,    -1,   444,    -1,    -1,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,    -1,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,   267,    -1,   269,   270,   271,   272,
     273,   274,    -1,   276,   277,    -1,    -1,   280,   281,   282,
      -1,    -1,   285,   286,    -1,   288,    -1,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,   305,   306,   307,   308,   309,   310,    -1,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,    -1,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,    -1,   391,   392,
      -1,   394,    -1,   396,   397,   398,   399,   400,    -1,   402,
     403,    -1,    -1,   406,   407,   408,   409,   410,    -1,   412,
     413,   414,   415,   416,   417,   418,    -1,    -1,   421,   422,
     423,   424,   425,    -1,    -1,   428,   429,   430,   431,   432,
     433,   434,    -1,   436,    -1,   438,   439,   440,   441,    -1,
      -1,   444,    -1,    -1,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    -1,    94,    95,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,
      -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,
     218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,    -1,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,   267,
      -1,   269,   270,   271,   272,   273,   274,    -1,   276,   277,
      -1,    -1,   280,   281,   282,    -1,    -1,   285,   286,    -1,
     288,    -1,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,    -1,   302,   303,   304,   305,   306,   307,
     308,   309,   310,    -1,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,    -1,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
      -1,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,    -1,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,    -1,   391,   392,    -1,   394,    -1,   396,   397,
     398,   399,   400,    -1,   402,   403,    -1,    -1,   406,   407,
     408,   409,   410,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,    -1,   421,   422,   423,   424,   425,    -1,    -1,
     428,   429,   430,   431,   432,   433,   434,    -1,   436,    -1,
     438,   439,   440,   441,    -1,    -1,   444,    -1,    -1,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,    -1,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,   267,    -1,   269,   270,   271,   272,
     273,   274,    -1,   276,   277,    -1,    -1,   280,   281,   282,
      -1,    -1,   285,   286,    -1,   288,    -1,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,   305,   306,   307,   308,   309,   310,    -1,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,    -1,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,    -1,   391,   392,
      -1,   394,    -1,   396,   397,   398,   399,   400,    -1,   402,
     403,    -1,    -1,   406,   407,   408,   409,   410,    -1,   412,
     413,   414,   415,   416,   417,   418,    -1,    -1,   421,   422,
     423,   424,   425,    -1,    -1,   428,   429,   430,   431,   432,
     433,   434,    -1,   436,    -1,   438,   439,   440,   441,    -1,
      -1,   444,    -1,    -1,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    -1,    94,    95,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,
      -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,
     218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,    -1,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,   267,
      -1,   269,   270,   271,   272,   273,   274,    -1,   276,   277,
      -1,    -1,   280,   281,   282,    -1,    -1,   285,   286,    -1,
     288,    -1,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,    -1,   302,   303,   304,   305,   306,   307,
     308,   309,   310,    -1,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,    -1,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
      -1,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,    -1,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,    -1,   391,   392,    -1,   394,    -1,   396,   397,
     398,   399,   400,    -1,   402,   403,    -1,    -1,   406,   407,
     408,   409,   410,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,    -1,   421,   422,   423,   424,   425,    -1,    -1,
     428,   429,   430,   431,   432,   433,   434,    -1,   436,    -1,
     438,   439,   440,   441,    -1,    -1,   444,    -1,    -1,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,    -1,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,   267,    -1,   269,   270,   271,   272,
     273,   274,    -1,   276,   277,    -1,    -1,   280,   281,   282,
      -1,    -1,   285,   286,    -1,   288,    -1,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,   305,   306,   307,   308,   309,   310,    -1,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,    -1,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,    -1,   391,   392,
      -1,   394,    -1,   396,   397,   398,   399,   400,    -1,   402,
     403,    -1,    -1,   406,   407,   408,   409,   410,    -1,   412,
     413,   414,   415,   416,   417,   418,    -1,    -1,   421,   422,
     423,   424,   425,    -1,    -1,   428,   429,   430,   431,   432,
     433,   434,    -1,   436,    -1,   438,   439,   440,   441,    -1,
      -1,   444,    -1,    -1,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    -1,    94,    95,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,
      -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,
     218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,    -1,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,   267,
      -1,   269,   270,   271,   272,   273,   274,    -1,   276,   277,
      -1,    -1,   280,   281,   282,    -1,    -1,   285,   286,    -1,
     288,    -1,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,    -1,   302,   303,   304,   305,   306,   307,
     308,   309,   310,    -1,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,    -1,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
      -1,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,    -1,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,    -1,   391,   392,    -1,   394,    -1,   396,   397,
     398,   399,   400,    -1,   402,   403,    -1,    -1,   406,   407,
     408,   409,   410,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,    -1,   421,   422,   423,   424,   425,    -1,    -1,
     428,   429,   430,   431,   432,   433,   434,    -1,   436,    -1,
     438,   439,   440,   441,    -1,    -1,   444,    -1,    -1,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    36,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,    -1,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,   267,    -1,   269,   270,   271,   272,
     273,   274,    -1,   276,   277,    -1,    -1,   280,   281,   282,
      -1,    -1,   285,   286,    -1,   288,    -1,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,   305,   306,   307,   308,   309,   310,    -1,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,    -1,   359,   360,   361,   362,
     363,    -1,    -1,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,    -1,   391,   392,
      -1,   394,    -1,   396,   397,   398,   399,   400,    -1,   402,
     403,    -1,    -1,   406,   407,   408,   409,   410,    -1,   412,
     413,   414,   415,   416,   417,   418,    -1,    -1,   421,   422,
     423,   424,   425,    -1,    -1,   428,   429,   430,   431,   432,
     433,   434,    -1,   436,    -1,   438,   439,   440,   441,    -1,
      -1,   444,    -1,    -1,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    -1,    94,    95,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,
      -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,
     218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,    -1,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,   267,
      -1,   269,   270,   271,   272,   273,   274,    -1,   276,   277,
      -1,    -1,   280,   281,   282,    -1,    -1,   285,   286,    -1,
     288,    -1,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,    -1,   302,   303,   304,   305,   306,   307,
     308,   309,   310,    -1,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,    -1,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
      -1,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,    -1,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,    -1,   391,   392,    -1,   394,    -1,   396,   397,
     398,   399,   400,    -1,   402,   403,    -1,    -1,   406,   407,
     408,   409,   410,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,    -1,   421,   422,   423,   424,   425,    -1,    -1,
     428,   429,   430,   431,   432,   433,   434,    -1,   436,    -1,
     438,   439,   440,   441,    -1,    -1,   444,    -1,    -1,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,    -1,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,   267,    -1,   269,   270,   271,   272,
     273,   274,    -1,   276,   277,    -1,    -1,   280,   281,   282,
      -1,    -1,   285,   286,    -1,   288,    -1,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,   305,   306,   307,   308,   309,   310,    -1,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,    -1,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,    -1,   391,   392,
      -1,   394,    -1,   396,   397,   398,   399,   400,    -1,   402,
     403,    -1,    -1,   406,   407,   408,   409,   410,    -1,   412,
     413,   414,   415,   416,   417,   418,    -1,    -1,   421,   422,
     423,   424,   425,    -1,    -1,   428,   429,   430,   431,   432,
     433,   434,    -1,   436,    -1,   438,   439,   440,   441,    -1,
      -1,   444,    -1,    -1,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    -1,    94,    95,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,
      -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,
     218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,    -1,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,   267,
      -1,   269,   270,   271,   272,   273,   274,    -1,   276,   277,
      -1,    -1,   280,   281,   282,    -1,    -1,   285,   286,    -1,
     288,    -1,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,    -1,   302,   303,   304,   305,   306,   307,
     308,   309,   310,    -1,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,    -1,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
      -1,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,    -1,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,    -1,   391,   392,    -1,   394,    -1,   396,   397,
     398,   399,   400,    -1,   402,   403,    -1,    -1,   406,   407,
     408,   409,   410,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,    -1,   421,   422,   423,   424,   425,    -1,    -1,
     428,   429,   430,   431,   432,   433,   434,    -1,   436,    -1,
     438,   439,   440,   441,    -1,    -1,   444,    -1,    -1,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,    -1,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,   267,    -1,   269,   270,   271,   272,
     273,   274,    -1,   276,   277,    -1,    -1,   280,   281,   282,
      -1,    -1,   285,   286,    -1,   288,    -1,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,   305,   306,   307,   308,   309,   310,    -1,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,    -1,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,    -1,   391,   392,
      -1,   394,    -1,   396,   397,   398,   399,   400,    -1,   402,
     403,    -1,    -1,   406,   407,   408,   409,   410,    -1,   412,
     413,   414,   415,   416,   417,   418,    -1,    -1,   421,   422,
     423,   424,   425,    -1,    -1,   428,   429,   430,   431,   432,
     433,   434,    -1,   436,    -1,   438,   439,   440,   441,    -1,
      -1,   444,    -1,    -1,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    -1,    94,    95,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,
      -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,
     218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,    -1,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,   267,
      -1,   269,   270,   271,   272,   273,   274,    -1,   276,   277,
      -1,    -1,   280,   281,   282,    -1,    -1,   285,   286,    -1,
     288,    -1,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,    -1,   302,   303,   304,   305,   306,   307,
     308,   309,   310,    -1,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,    -1,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
      -1,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,    -1,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,    -1,   391,   392,    -1,   394,    -1,   396,   397,
     398,   399,   400,    -1,   402,   403,    -1,    -1,   406,   407,
     408,   409,   410,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,    -1,   421,   422,   423,   424,   425,    -1,    -1,
     428,   429,   430,   431,   432,   433,   434,    -1,   436,    -1,
     438,   439,   440,   441,    -1,    -1,   444,    -1,    -1,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,    -1,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,   267,    -1,   269,   270,   271,   272,
     273,   274,    -1,   276,   277,    -1,    -1,   280,   281,   282,
      -1,    -1,   285,   286,    -1,   288,    -1,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,   305,   306,   307,   308,   309,   310,    -1,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,    -1,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,    -1,   391,   392,
      -1,   394,    -1,   396,   397,   398,   399,   400,    -1,   402,
     403,    -1,    -1,   406,   407,   408,   409,   410,    -1,   412,
     413,   414,   415,   416,   417,   418,    -1,    -1,   421,   422,
     423,   424,   425,    -1,    -1,   428,   429,   430,   431,   432,
     433,   434,    -1,   436,    -1,   438,   439,   440,   441,    -1,
      -1,   444,    -1,    -1,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      -1,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    -1,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    93,    94,    95,    96,    -1,
      -1,    -1,   100,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,    -1,   150,   151,   152,   153,    -1,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,   166,    -1,
     168,   169,   170,   171,   172,   173,    -1,   175,    -1,    -1,
     178,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,   200,    -1,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,    -1,    -1,   223,   224,   225,   226,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,    -1,    -1,   264,   265,   266,   267,
      -1,    -1,   270,   271,   272,   273,   274,    -1,   276,   277,
      -1,    -1,   280,   281,   282,    -1,    -1,   285,    -1,   287,
     288,   289,    -1,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,    -1,   302,   303,    -1,   305,   306,    -1,
     308,   309,   310,    -1,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,    -1,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
      -1,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,    -1,    -1,   391,   392,    -1,   394,   395,   396,   397,
     398,   399,   400,    -1,   402,   403,    -1,    -1,   406,   407,
      -1,   409,    -1,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,    -1,   421,   422,   423,   424,   425,    -1,    -1,
     428,   429,   430,   431,   432,    -1,   434,    -1,   436,   437,
     438,   439,   440,   441,    -1,    -1,   444,    -1,    -1,   447,
     448,   449,   450,   451,   452,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   464,   465,   466,   467,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    -1,    94,    95,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,
      -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,
     218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,    -1,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,   267,
      -1,   269,   270,   271,   272,   273,   274,    -1,   276,   277,
      -1,    -1,   280,   281,   282,    -1,    -1,   285,   286,    -1,
     288,    -1,   290,   291,   292,   293,   294,   295,   296,    -1,
     298,   299,   300,    -1,   302,   303,   304,   305,   306,   307,
     308,   309,   310,    -1,   312,   313,   314,   315,   316,   317,
     318,    -1,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,    -1,   340,   341,    -1,   343,   344,   345,   346,    -1,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
      -1,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,    -1,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,    -1,   391,   392,    -1,   394,    -1,   396,   397,
     398,   399,   400,    -1,   402,   403,    -1,    -1,   406,   407,
     408,   409,   410,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,    -1,   421,   422,   423,   424,   425,    -1,    -1,
     428,   429,   430,   431,   432,   433,   434,    -1,   436,    -1,
     438,   439,   440,   441,    -1,    -1,   444,    -1,    -1,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    -1,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    -1,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      93,    94,    95,    96,    -1,    -1,    -1,   100,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,    -1,   150,   151,   152,
     153,    -1,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,   166,    -1,   168,   169,   170,   171,   172,
     173,    -1,   175,    -1,    -1,   178,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,   200,    -1,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,    -1,    -1,
     223,   224,   225,   226,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,    -1,
      -1,   264,   265,   266,   267,    -1,    -1,   270,   271,   272,
     273,   274,    -1,   276,   277,    -1,    -1,   280,   281,   282,
      -1,    -1,   285,    -1,   287,   288,   289,    -1,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,    -1,   305,   306,    -1,   308,   309,   310,    -1,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,    -1,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,    -1,   359,   360,   361,   362,
     363,    -1,   365,    -1,   367,   368,   369,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,    -1,   388,    -1,    -1,   391,   392,
      -1,   394,   395,   396,   397,   398,   399,   400,    -1,   402,
     403,    -1,    -1,   406,   407,    -1,   409,    -1,    -1,   412,
     413,   414,   415,   416,   417,   418,    -1,    -1,   421,   422,
     423,   424,   425,    -1,    -1,   428,   429,   430,   431,   432,
      -1,   434,    -1,   436,   437,   438,   439,   440,   441,    -1,
      -1,   444,    -1,    -1,   447,   448,   449,   450,   451,   452,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   464,   465,   466,   467
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    19,    29,    31,    32,    47,    56,    68,    79,    90,
      92,   110,   124,   134,   140,   148,   150,   151,   190,   229,
     305,   308,   336,   344,   358,   365,   369,   379,   393,   428,
     433,   446,   470,   484,   492,   493,   494,   495,   506,   507,
     509,   513,   527,   528,   530,   532,   539,   541,   587,   593,
     596,   597,   614,   615,   616,   617,   618,   619,   663,   790,
     793,   796,   803,   804,   805,   806,   807,   814,   818,   824,
     826,   831,   835,   836,   839,   840,   842,   843,   845,   406,
     449,   540,   194,   351,   359,   393,   439,   540,     3,    19,
      20,    21,    22,    23,    24,    25,    26,    28,    29,    30,
      38,    39,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    54,    55,    56,    57,    58,    59,
      62,    63,    64,    65,    66,    68,    69,    70,    71,    72,
      74,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      86,    87,    88,    89,    90,    91,    93,    94,    95,    96,
     100,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   115,   117,   118,   119,   120,   121,   122,   124,   125,
     126,   127,   128,   131,   132,   133,   134,   135,   137,   138,
     139,   141,   142,   143,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   156,   158,   159,   160,   161,   163,
     165,   166,   168,   169,   170,   171,   172,   173,   175,   177,
     178,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   192,   193,   194,   195,   196,   197,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   209,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   223,   224,
     225,   226,   228,   229,   230,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   264,   265,   266,   267,   269,
     270,   271,   272,   273,   274,   276,   277,   280,   281,   282,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   359,
     360,   361,   362,   363,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   391,   392,
     394,   395,   396,   397,   398,   399,   400,   402,   403,   406,
     407,   408,   409,   410,   412,   413,   414,   415,   416,   417,
     418,   421,   422,   423,   424,   425,   428,   429,   430,   431,
     432,   433,   434,   436,   437,   438,   439,   440,   441,   444,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   719,   777,   781,   783,   848,   849,   850,   540,    50,
     484,   609,   169,   173,   230,   237,   283,   351,   397,   399,
     420,   423,   585,   594,   802,     3,    27,   308,   775,   781,
     848,    21,    74,    89,   143,   152,   164,   169,   194,   237,
     240,   303,   317,   348,   351,   359,   362,   381,   393,   400,
     409,   439,   588,   589,   592,   540,   775,    92,   437,   484,
     509,   596,   614,   810,   814,   831,   845,   107,   107,     5,
     780,   825,   781,   775,    27,   402,   406,   781,   837,   838,
     841,   540,    27,   129,   626,   627,   230,   351,   363,   402,
     819,   820,   841,   540,   279,   674,   773,   781,   168,   484,
     828,   484,   324,   620,   621,   775,   620,   615,   616,   619,
       0,   487,   119,   204,   425,   144,   208,   284,   419,   628,
     629,   615,   617,   618,   488,   437,   808,    27,   402,   406,
     433,   614,   841,   185,   773,   775,   185,   773,   185,   674,
     185,   773,   484,   482,   486,   764,   766,   509,   596,   614,
     792,   831,   773,   397,   399,   397,   399,   334,   185,   781,
     324,   359,   393,   439,   773,   194,    27,   775,   242,   409,
     106,   393,   439,   354,   185,   590,   781,   784,   185,   774,
     775,   185,   775,   484,   531,   585,   810,     3,   811,   813,
     814,   816,   817,   848,   849,   850,   808,   780,   780,   473,
     484,   484,   791,   467,   214,   486,   278,     4,     6,     7,
       8,     9,    10,    49,    51,    52,    60,    61,    64,    65,
      72,    74,    97,    98,    99,   100,   101,   102,   103,   111,
     112,   114,   133,   149,   154,   155,   160,   206,   207,   209,
     231,   232,   256,   258,   263,   268,   269,   271,   280,   290,
     304,   321,   346,   364,   373,   389,   402,   403,   408,   410,
     411,   426,   434,   468,   475,   476,   477,   484,   489,   615,
     689,   692,   695,   696,   697,   699,   700,   701,   702,   704,
     705,   716,   718,   719,   720,   722,   735,   736,   740,   758,
     763,   770,   771,   777,   778,   779,   780,   781,   769,   770,
     819,   780,   819,   467,   167,   404,   473,   484,   773,   477,
     766,     3,   166,   168,   437,   814,   827,   829,   166,   830,
     716,   744,   620,   488,   484,   786,   485,   485,   494,   167,
     210,   674,   832,    27,   129,   625,   625,    54,   625,   157,
     162,   227,   275,   634,   636,   637,   656,   658,   659,   660,
     628,   629,   484,   773,   467,   214,   149,    23,    29,   134,
     282,   332,   336,   365,   430,   500,   503,   504,   332,   149,
      36,    55,   105,   193,   241,   249,   261,   292,   332,   337,
     359,   365,   379,   503,   533,   536,   149,   332,   365,   503,
     149,   332,   365,   503,    27,   129,   435,   477,   485,   716,
     745,   746,   783,   787,   716,   765,     3,    27,    31,    32,
      33,    34,    35,    36,    37,    40,    53,    60,    61,    67,
      73,    75,    85,    92,    97,    98,    99,   101,   102,   103,
     114,   116,   123,   129,   130,   136,   140,   144,   155,   157,
     162,   164,   167,   174,   176,   179,   191,   198,   208,   210,
     221,   222,   227,   231,   232,   263,   268,   275,   278,   279,
     283,   284,   301,   311,   326,   339,   358,   364,   375,   390,
     393,   401,   404,   405,   411,   419,   420,   426,   427,   435,
     442,   443,   445,   446,   477,   776,   788,   848,   849,   850,
     851,   764,   485,   484,   575,   585,   263,   794,   439,   185,
     773,   185,   773,   847,   773,   484,   595,    81,   799,   450,
      82,   126,   295,   398,   149,    58,   338,   488,   591,   486,
     785,   149,   488,   591,   149,   278,   744,   393,   485,   488,
       4,   155,   278,   411,   475,   476,   535,   538,   779,   780,
     809,   811,   812,   815,   810,   484,   604,   608,   535,   815,
     821,   823,   745,     3,    49,    51,    52,    64,    65,   111,
     112,   160,   206,   207,   209,   256,   258,   271,   321,   346,
     366,   373,   387,   402,   403,   434,   685,   686,   688,   690,
     692,   694,   696,   697,   698,   700,   701,   704,   705,   747,
     783,   848,    36,   225,   781,   484,   767,   436,   703,   716,
     762,   484,   703,   703,   484,   162,   484,   484,   484,   691,
     691,   307,   615,   484,   484,   693,   484,   484,    64,    65,
     703,   716,   484,   691,   484,   484,   484,   484,   484,   448,
     470,   484,   706,   484,   706,   484,   484,   716,   716,   716,
     615,   716,   744,   767,   766,   780,   484,   484,   779,   780,
       3,     8,    11,    16,    17,    18,    33,    36,    41,    48,
      73,   172,   186,   191,   212,   213,   226,   263,   266,   280,
     283,   370,   468,   471,   472,   473,   475,   476,   477,   478,
     479,   480,   738,   739,   740,   742,   447,   723,    15,   289,
     716,    15,   210,   488,   622,   484,   780,   766,   622,     3,
     114,   230,   535,   705,   780,   822,    96,   114,   823,   114,
     823,   773,   485,   488,   808,   485,   488,   621,   774,    36,
     832,   511,   773,    36,   781,   365,   617,   617,   630,   631,
     716,   617,   159,   260,   650,   216,   261,   320,   368,   425,
      27,   645,   716,   475,   476,   646,   647,   716,   718,   656,
     657,   637,   636,   634,   635,   162,   659,   273,   661,   634,
     656,   744,   786,   225,   773,    67,    75,    85,   164,   185,
     311,   420,   556,   566,   581,   781,    75,    85,   508,    85,
     508,   484,   404,   484,   554,   236,   423,   554,    85,   488,
     404,   773,   688,   535,    54,   537,   535,   535,   105,   241,
     249,    54,   404,   446,   470,   534,   254,   351,   534,   536,
     674,    85,   404,   508,   351,   773,   404,   351,   745,   745,
     746,   485,   488,   628,   629,    13,    14,   483,   490,   404,
     574,   579,   781,   446,   607,   324,   439,   149,    92,   528,
     541,   795,   796,   843,   773,   263,   529,   533,   263,   484,
     575,    36,   575,   485,   745,    36,   185,   569,   781,   800,
     590,   784,   776,   486,   774,   775,   775,   784,   485,   185,
     773,   847,   810,   816,     4,   779,     4,   779,   606,   613,
     788,    50,    94,   120,   138,   142,   163,   166,   180,   268,
     276,   318,   610,   488,   485,   488,   688,   484,    35,   687,
     108,   109,   182,   183,   243,   244,   245,   246,   247,   248,
     251,   252,   355,   356,   464,   465,   484,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   485,   488,   691,   785,
     792,   744,   764,   484,   442,   759,   760,   716,   744,   484,
     779,   779,   744,     3,   707,   708,   709,   710,   711,   712,
     713,   714,   748,   749,   780,   779,   779,   779,   703,   703,
     716,     8,    16,    17,    18,   471,   472,   473,   475,   476,
     477,   478,   479,   480,   738,   743,   781,   716,   750,   475,
     476,   484,   717,   718,   740,   752,   763,   485,   744,   716,
     744,   753,   402,   402,   779,   779,   716,    53,   167,   222,
     405,   716,   744,   756,   485,   488,   779,   716,   715,   715,
     686,   716,   716,   716,   716,     5,   788,   789,   402,    40,
     390,   768,   784,   716,   716,   484,   615,   757,   129,   155,
     263,   268,   273,   411,   421,   716,   268,   484,   716,   404,
      48,   172,   186,   191,   226,   370,   716,   716,   716,   716,
     716,   716,   716,   716,   716,   716,    27,    34,   375,   737,
     176,   158,   724,   716,   346,   484,   736,   716,   173,   230,
     393,   397,   399,   423,   623,   773,   771,   167,   664,   745,
     664,   484,   780,   485,   773,   827,   773,   835,   716,   485,
     484,   427,   834,   114,   291,   484,   510,   614,    36,   781,
     484,   515,   524,   526,   781,   488,    37,   123,   427,   632,
     346,   347,   475,   476,   647,   649,   718,   368,   216,   279,
     488,     4,   648,   779,   648,   346,   347,   649,   772,   773,
     267,   372,   662,   657,   635,   485,   332,   503,   484,   185,
     566,   775,   216,   263,   216,   427,   484,   559,   686,   775,
     781,   185,   775,   185,   781,    23,   134,   365,   499,   502,
     549,   564,   788,   775,   558,   578,   788,   775,   500,   775,
     332,   365,   503,   533,   535,   784,   775,   535,   784,   775,
     535,   332,   365,   503,   775,   775,   775,   775,   332,   365,
     503,   775,   775,   628,   628,   628,   435,   746,   485,   716,
     716,   716,   765,   316,   603,   485,   488,   276,   167,   404,
     598,   439,   773,   781,   585,   484,   149,   149,   226,   556,
     566,   570,   573,   582,   584,   781,   446,   448,   561,   148,
     614,   446,   801,   485,   716,   263,   278,   591,   776,   591,
     278,   591,   263,    36,   485,   488,   477,   484,   535,   605,
     815,    36,   602,   780,   602,   263,   268,   318,   602,   602,
     821,    35,   687,   684,   781,   482,   482,   779,   404,   404,
     404,   404,   686,   691,   485,   744,   716,   136,   760,   761,
      36,   485,   716,   485,   485,   485,   485,   167,   485,   485,
     485,   488,   485,   486,   301,   751,   485,   717,   717,   716,
      11,    16,    17,    18,   191,   212,   280,   471,   472,   473,
     475,   476,   477,   478,   479,   480,   740,   717,   485,   485,
     162,   167,   754,   755,   485,   467,   467,   485,   485,    36,
     756,   744,   756,   756,   167,   485,   767,   716,   485,   485,
     467,   717,   717,   142,   744,   167,   129,   155,   268,   273,
     411,   421,   484,   142,   743,   716,   390,   768,   716,   757,
     716,   404,   484,   615,   484,   484,   288,   728,   397,   399,
     397,   399,   773,   393,   624,   624,   624,   221,   347,   484,
     615,   665,   666,   667,   674,   675,   719,   721,   722,   781,
     443,   680,   628,   680,   779,   715,   786,   792,   665,   443,
     833,   433,   392,   426,   519,   514,   523,   781,   278,   516,
     781,   520,   526,   488,   664,   473,   767,   631,   280,   738,
     741,   469,   633,     4,   779,   649,   279,   425,   646,   488,
     235,   404,   716,   263,   581,   484,   149,   484,   559,   194,
     579,   542,   282,   552,   542,    23,   134,   336,   337,   365,
     496,   497,   498,   504,   505,   149,   591,   149,   591,   549,
     564,   549,   485,   488,   545,   780,   485,   488,   473,   486,
     404,   351,    85,   404,   508,   351,   404,   404,   404,   351,
     485,   485,   485,   746,   483,   382,   383,   612,   780,   574,
     603,   773,   575,   794,   393,   579,   773,   773,   847,   773,
     485,   488,   276,   554,   276,   278,   553,   775,   446,   846,
     554,    36,   149,   773,   784,   149,   606,   600,   611,   815,
     780,   780,   268,   579,   477,   579,   780,   780,   482,   485,
     488,   686,   779,   483,   779,   485,   708,   710,   711,   712,
     711,   712,   712,   485,   401,   716,   140,   686,   485,   716,
     716,   743,   716,   754,   686,   717,   717,   717,   717,   129,
     263,   273,   717,   717,   717,   717,   717,   717,   717,   717,
     717,   717,   716,   716,   755,   754,   706,   706,   686,   485,
     485,   485,   744,   485,   715,   716,    33,    33,   716,   485,
     716,   167,   484,   747,   716,   485,   142,   717,   717,   142,
     142,   716,   716,   629,   443,   484,   729,   781,   624,   624,
     624,   624,   773,   773,   773,   615,   675,   167,   615,   666,
     667,    36,   668,   669,   781,   488,    93,   168,   200,   215,
     224,   257,   342,   671,   669,    36,   668,   670,   781,   470,
     679,   766,   716,   176,   651,   485,   651,   485,   485,   716,
     339,   518,   432,   485,   488,   767,    83,   518,   485,   488,
     515,   833,   716,   484,   633,   159,   220,   279,   773,   775,
     485,   149,   579,   566,   579,   542,   569,   485,   116,   198,
     261,   263,   565,   484,   576,   171,   114,   184,   263,   554,
     534,   106,   114,   171,   263,   381,   384,   536,   554,   365,
     498,   414,   775,   781,   502,   578,   262,   280,   366,   475,
     476,   535,   543,   580,   686,   741,   780,   783,   851,   788,
     775,   775,   775,   775,   775,   775,   775,   775,   775,   775,
     628,   534,   612,   484,   801,   185,   773,   485,   529,   484,
      36,   563,   561,   570,    79,   531,   106,   261,   614,   569,
     427,   798,   591,   847,   485,   488,   579,   779,   781,   483,
     483,   716,   485,   485,   755,   167,   129,   273,   484,   485,
     716,   716,   716,   747,   485,   716,    33,    33,   716,   716,
     142,   485,   485,   716,   730,   781,   773,   773,   773,   773,
     669,   670,   484,   485,     5,   781,   782,   395,   642,   643,
     484,   666,   215,   287,   672,   666,   672,   215,   671,   672,
     215,   643,   484,   781,   643,   484,   285,    54,   179,   655,
     780,   655,   780,   770,   614,   291,   614,   514,   278,   484,
     512,   473,   526,   518,   743,   542,   566,   485,   485,   446,
     572,   117,   187,   196,   116,   429,   549,   567,    67,    73,
      85,   114,   116,   171,   198,   263,   268,   311,   326,   420,
     547,   548,   560,    30,    54,   586,   185,   268,   535,   716,
     586,   268,   475,   476,   538,   781,   686,   591,   591,   783,
     785,   473,   404,   404,   485,   604,   427,   599,   601,   579,
      36,   263,   484,   801,   573,   148,   614,   146,   192,   553,
     119,   134,   310,   846,   106,   446,   844,   278,   781,   797,
     484,    36,   611,   483,   686,   717,   167,   484,   747,   485,
     716,   716,   716,   485,   297,   731,   676,   677,   721,   668,
     484,     4,     9,   638,   640,   641,   781,   774,   666,   278,
     427,   673,   666,   215,   666,   681,   682,   781,   484,   681,
     781,   484,   652,   653,   654,   716,   716,   445,   725,   725,
     519,    85,   484,   517,   525,   721,   781,   130,   716,   485,
     326,   572,   484,   562,   542,   485,   488,   484,   784,   775,
     717,   586,   117,   187,   116,   268,   216,   773,   572,   114,
      36,   149,    73,   683,   785,   479,   543,   775,   775,   534,
     121,   485,   614,   149,    36,   485,   775,   846,    27,    78,
      86,   115,   184,   195,   381,   384,   557,   557,   347,   347,
      59,    67,   230,   773,   525,   717,   747,   485,    54,   628,
     485,   488,    36,   678,   774,   300,   479,   300,   347,   479,
     484,   484,   485,   716,   484,   666,   673,   485,   488,   686,
     681,   485,   485,   488,   726,   727,   781,   427,   639,   639,
     432,   775,   716,   485,   488,    73,   521,   521,   264,   425,
     773,   542,   568,   571,   788,   549,   716,   263,   548,    36,
     572,   575,   184,   784,   427,   501,   479,   414,   604,   780,
     801,   844,   773,   614,   561,   531,    67,   281,    67,   798,
     485,   485,   744,   319,   347,   732,   679,   676,   484,   485,
     781,   638,   774,   682,   683,   485,   653,   488,    36,   349,
     614,   485,   680,   517,   784,   522,   784,   522,   365,   575,
     485,   488,   473,   485,   184,   239,   583,   484,   544,   716,
     414,    36,   484,   844,   553,   846,   281,   281,   484,   801,
      48,    96,   416,   716,   733,   734,   733,   485,   681,   485,
     488,   485,   485,   727,   729,   641,   521,   632,   632,   524,
     583,   571,   543,   261,   555,   544,   168,   296,   371,   278,
     550,   551,   577,   533,   614,   525,   680,   734,   346,   161,
     306,   161,   306,   485,     9,   333,   644,   522,   633,   633,
     680,   551,   196,   119,   425,   278,   577,   278,   550,   485,
     844,   485,    33,   485,   484,   632,   542,    58,   261,   338,
     365,   546,   546,   801,   734,     9,   633,    22,   114,   268,
     680,   485
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */

#define YYFAIL		goto yyerrlab

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)					\
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    {								\
      yychar = (Token);						\
      yylval = (Value);						\
      yytoken = YYTRANSLATE (yychar);				\
      YYPOPSTACK (1);						\
      goto yybackup;						\
    }								\
  else								\
    {								\
      yyerror (&yylloc, yyscanner, YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (YYID (0))


#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#define YYRHSLOC(Rhs, K) ((Rhs)[K])
#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)				\
    do									\
      if (YYID (N))                                                    \
	{								\
	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
	}								\
      else								\
	{								\
	  (Current).first_line   = (Current).last_line   =		\
	    YYRHSLOC (Rhs, 0).last_line;				\
	  (Current).first_column = (Current).last_column =		\
	    YYRHSLOC (Rhs, 0).last_column;				\
	}								\
    while (YYID (0))
#endif


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
#  define YY_LOCATION_PRINT(File, Loc)			\
     fprintf (File, "%d.%d-%d.%d",			\
	      (Loc).first_line, (Loc).first_column,	\
	      (Loc).last_line,  (Loc).last_column)
# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */

#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, &yylloc, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval, &yylloc, yyscanner)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (YYID (0))

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
do {									  \
  if (yydebug)								  \
    {									  \
      YYFPRINTF (stderr, "%s ", Title);					  \
      yy_symbol_print (stderr,						  \
		  Type, Value, Location, yyscanner); \
      YYFPRINTF (stderr, "\n");						  \
    }									  \
} while (YYID (0))


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (!yyvaluep)
    return;
  YYUSE (yylocationp);
  YYUSE (yyscanner);
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# else
  YYUSE (yyoutput);
# endif
  switch (yytype)
    {
      default:
	break;
    }
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
#else
static void
yy_stack_print (bottom, top)
    yytype_int16 *bottom;
    yytype_int16 *top;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (; bottom <= top; ++bottom)
    YYFPRINTF (stderr, " %d", *bottom);
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (YYID (0))


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_reduce_print (YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, core_yyscan_t yyscanner)
#else
static void
yy_reduce_print (yyvsp, yylsp, yyrule, yyscanner)
    YYSTYPE *yyvsp;
    YYLTYPE *yylsp;
    int yyrule;
    core_yyscan_t yyscanner;
#endif
{
  int yynrhs = yyr2[yyrule];
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
	     yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      fprintf (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
		       &(yyvsp[(yyi + 1) - (yynrhs)])
		       , &(yylsp[(yyi + 1) - (yynrhs)])		       , yyscanner);
      fprintf (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (yyvsp, yylsp, Rule, yyscanner); \
} while (YYID (0))

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif



#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static YYSIZE_T
yystrlen (const char *yystr)
#else
static YYSIZE_T
yystrlen (yystr)
    const char *yystr;
#endif
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static char *
yystpcpy (char *yydest, const char *yysrc)
#else
static char *
yystpcpy (yydest, yysrc)
    char *yydest;
    const char *yysrc;
#endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into YYRESULT an error message about the unexpected token
   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
   including the terminating null byte.  If YYRESULT is null, do not
   copy anything; just return the number of bytes that would be
   copied.  As a special case, return 0 if an ordinary "syntax error"
   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
   size calculation.  */
static YYSIZE_T
yysyntax_error (char *yyresult, int yystate, int yychar)
{
  int yyn = yypact[yystate];

  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
    return 0;
  else
    {
      int yytype = YYTRANSLATE (yychar);
      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
      YYSIZE_T yysize = yysize0;
      YYSIZE_T yysize1;
      int yysize_overflow = 0;
      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
      int yyx;

# if 0
      /* This is so xgettext sees the translatable formats that are
	 constructed on the fly.  */
      YY_("syntax error, unexpected %s");
      YY_("syntax error, unexpected %s, expecting %s");
      YY_("syntax error, unexpected %s, expecting %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
# endif
      char *yyfmt;
      char const *yyf;
      static char const yyunexpected[] = "syntax error, unexpected %s";
      static char const yyexpecting[] = ", expecting %s";
      static char const yyor[] = " or %s";
      char yyformat[sizeof yyunexpected
		    + sizeof yyexpecting - 1
		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
		       * (sizeof yyor - 1))];
      char const *yyprefix = yyexpecting;

      /* Start YYX at -YYN if negative to avoid negative indexes in
	 YYCHECK.  */
      int yyxbegin = yyn < 0 ? -yyn : 0;

      /* Stay within bounds of both yycheck and yytname.  */
      int yychecklim = YYLAST - yyn + 1;
      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
      int yycount = 1;

      yyarg[0] = yytname[yytype];
      yyfmt = yystpcpy (yyformat, yyunexpected);

      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
	  {
	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
	      {
		yycount = 1;
		yysize = yysize0;
		yyformat[sizeof yyunexpected - 1] = '\0';
		break;
	      }
	    yyarg[yycount++] = yytname[yyx];
	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
	    yysize_overflow |= (yysize1 < yysize);
	    yysize = yysize1;
	    yyfmt = yystpcpy (yyfmt, yyprefix);
	    yyprefix = yyor;
	  }

      yyf = YY_(yyformat);
      yysize1 = yysize + yystrlen (yyf);
      yysize_overflow |= (yysize1 < yysize);
      yysize = yysize1;

      if (yysize_overflow)
	return YYSIZE_MAXIMUM;

      if (yyresult)
	{
	  /* Avoid sprintf, as that infringes on the user's name space.
	     Don't have undefined behavior even if the translation
	     produced a string with the wrong number of "%s"s.  */
	  char *yyp = yyresult;
	  int yyi = 0;
	  while ((*yyp = *yyf) != '\0')
	    {
	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
		{
		  yyp += yytnamerr (yyp, yyarg[yyi++]);
		  yyf += 2;
		}
	      else
		{
		  yyp++;
		  yyf++;
		}
	    }
	}
      return yysize;
    }
}
#endif /* YYERROR_VERBOSE */


/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, core_yyscan_t yyscanner)
#else
static void
yydestruct (yymsg, yytype, yyvaluep, yylocationp, yyscanner)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
    YYLTYPE *yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (yyscanner);

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
	break;
    }
}


/* Prevent warnings from -Wmissing-prototypes.  */

#ifdef YYPARSE_PARAM
#if defined __STDC__ || defined __cplusplus
int yyparse (void *YYPARSE_PARAM);
#else
int yyparse ();
#endif
#else /* ! YYPARSE_PARAM */
#if defined __STDC__ || defined __cplusplus
int yyparse (core_yyscan_t yyscanner);
#else
int yyparse ();
#endif
#endif /* ! YYPARSE_PARAM */






/*----------.
| yyparse.  |
`----------*/

#ifdef YYPARSE_PARAM
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void *YYPARSE_PARAM)
#else
int
yyparse (YYPARSE_PARAM)
    void *YYPARSE_PARAM;
#endif
#else /* ! YYPARSE_PARAM */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (core_yyscan_t yyscanner)
#else
int
yyparse (yyscanner)
    core_yyscan_t yyscanner;
#endif
#endif
{
  /* The look-ahead symbol.  */
int yychar;

/* The semantic value of the look-ahead symbol.  */
YYSTYPE yylval;

/* Number of syntax errors so far.  */
int yynerrs;
/* Location data for the look-ahead symbol.  */
YYLTYPE yylloc;

  int yystate;
  int yyn;
  int yyresult;
  /* Number of tokens to shift before error messages enabled.  */
  int yyerrstatus;
  /* Look-ahead token as an internal (translated) token number.  */
  int yytoken = 0;
#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

  /* Three stacks and their tools:
     `yyss': related to states,
     `yyvs': related to semantic values,
     `yyls': related to locations.

     Refer to the stacks thru separate pointers, to allow yyoverflow
     to reallocate them elsewhere.  */

  /* The state stack.  */
  yytype_int16 yyssa[YYINITDEPTH];
  yytype_int16 *yyss = yyssa;
  yytype_int16 *yyssp;

  /* The semantic value stack.  */
  YYSTYPE yyvsa[YYINITDEPTH];
  YYSTYPE *yyvs = yyvsa;
  YYSTYPE *yyvsp;

  /* The location stack.  */
  YYLTYPE yylsa[YYINITDEPTH];
  YYLTYPE *yyls = yylsa;
  YYLTYPE *yylsp;
  /* The locations where the error started and ended.  */
  YYLTYPE yyerror_range[2];

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  YYSIZE_T yystacksize = YYINITDEPTH;

  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY;		/* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */

  yyssp = yyss;
  yyvsp = yyvs;
  yylsp = yyls;
#if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  /* Initialize the default location before parsing starts.  */
  yylloc.first_line   = yylloc.last_line   = 1;
  yylloc.first_column = yylloc.last_column = 0;
#endif

  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack.  Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	yytype_int16 *yyss1 = yyss;
	YYLTYPE *yyls1 = yyls;

	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),
		    &yyls1, yysize * sizeof (*yylsp),
		    &yystacksize);
	yyls = yyls1;
	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	yytype_int16 *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss);
	YYSTACK_RELOCATE (yyvs);
	YYSTACK_RELOCATE (yyls);
#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     look-ahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to look-ahead token.  */
  yyn = yypact[yystate];
  if (yyn == YYPACT_NINF)
    goto yydefault;

  /* Not known => get a look-ahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yyn == 0 || yyn == YYTABLE_NINF)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the look-ahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token unless it is eof.  */
  if (yychar != YYEOF)
    yychar = YYEMPTY;

  yystate = yyn;
  *++yyvsp = yylval;
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 457 "third_party/libpg_query/grammar/grammar.y"
    {
				pg_yyget_extra(yyscanner)->parsetree = (yyvsp[(1) - (1)].list);
			;}
    break;

  case 3:
#line 473 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (3)].list) != NIL)
					{
						/* update length of previous stmt */
						updateRawStmtEnd(llast_node(PGRawStmt, (yyvsp[(1) - (3)].list)), (yylsp[(2) - (3)]));
					}
					if ((yyvsp[(3) - (3)].node) != NULL)
						(yyval.list) = lappend((yyvsp[(1) - (3)].list), makeRawStmt((yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]) + 1));
					else
						(yyval.list) = (yyvsp[(1) - (3)].list);
				;}
    break;

  case 4:
#line 485 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (1)].node) != NULL)
						(yyval.list) = list_make1(makeRawStmt((yyvsp[(1) - (1)].node), 0));
					else
						(yyval.list) = NIL;
				;}
    break;

  case 38:
#line 527 "third_party/libpg_query/grammar/grammar.y"
    { (yyval.node) = NULL; ;}
    break;

  case 39:
#line 10 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 40:
#line 19 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 41:
#line 28 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 42:
#line 37 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 43:
#line 46 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 44:
#line 55 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 45:
#line 64 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 46:
#line 73 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 47:
#line 86 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 48:
#line 88 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 49:
#line 93 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(3) - (3)].node); ;}
    break;

  case 50:
#line 94 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 51:
#line 100 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 52:
#line 104 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 53:
#line 108 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					if (strcmp((yyvsp[(2) - (2)].defelt)->defname, "as") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "restart") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "owned_by") == 0)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("sequence option \"%s\" not supported here", (yyvsp[(2) - (2)].defelt)->defname),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
				;}
    break;

  case 54:
#line 119 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("generated", (PGNode *) makeInteger((yyvsp[(3) - (3)].ival)), (yylsp[(1) - (3)]));
				;}
    break;

  case 55:
#line 127 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 56:
#line 131 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 57:
#line 140 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(2) - (2)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 58:
#line 149 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(5) - (5)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 59:
#line 158 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(3) - (3)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 60:
#line 167 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(6) - (6)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 61:
#line 176 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ColumnDefault;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (yyvsp[(4) - (4)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 62:
#line 185 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 63:
#line 193 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 64:
#line 201 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStatistics;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeInteger((yyvsp[(6) - (6)].ival));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 65:
#line 210 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 66:
#line 219 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 67:
#line 228 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStorage;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeString((yyvsp[(6) - (6)].str));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 68:
#line 237 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);

					c->contype = PG_CONSTR_IDENTITY;
					c->generated_when = (yyvsp[(6) - (9)].ival);
					c->options = (yyvsp[(9) - (9)].list);
					c->location = (yylsp[(5) - (9)]);

					n->subtype = PG_AT_AddIdentity;
					n->name = (yyvsp[(3) - (9)].str);
					n->def = (PGNode *) c;

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 69:
#line 254 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetIdentity;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 70:
#line 263 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (5)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 71:
#line 272 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (7)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 72:
#line 281 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 73:
#line 291 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 74:
#line 304 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGColumnDef *def = makeNode(PGColumnDef);
					n->subtype = PG_AT_AlterColumnType;
					n->name = (yyvsp[(3) - (8)].str);
					n->def = (PGNode *) def;
					/* We only use these fields of the PGColumnDef node */
					def->typeName = (yyvsp[(6) - (8)].typnam);
					def->collClause = (PGCollateClause *) (yyvsp[(7) - (8)].node);
					def->raw_default = (yyvsp[(8) - (8)].node);
					def->location = (yylsp[(3) - (8)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 75:
#line 319 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AlterColumnGenericOptions;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 76:
#line 328 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddConstraint;
					n->def = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 77:
#line 336 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);
					n->subtype = PG_AT_AlterConstraint;
					n->def = (PGNode *) c;
					c->contype = PG_CONSTR_FOREIGN; /* others not supported, yet */
					c->conname = (yyvsp[(3) - (4)].str);
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "ALTER CONSTRAINT statement",
									&c->deferrable,
									&c->initdeferred,
									NULL, NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 78:
#line 351 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ValidateConstraint;
					n->name = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 79:
#line 359 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 80:
#line 369 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 81:
#line 379 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 82:
#line 386 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetUnLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 83:
#line 393 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 84:
#line 401 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 85:
#line 408 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_GenericOptions;
					n->def = (PGNode *)(yyvsp[(1) - (1)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 86:
#line 418 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 87:
#line 419 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 88:
#line 425 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(1) - (1)].defelt);
				;}
    break;

  case 89:
#line 429 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_SET;
				;}
    break;

  case 90:
#line 434 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_ADD;
				;}
    break;

  case 91:
#line 439 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElemExtended(NULL, (yyvsp[(2) - (2)].str), NULL, DEFELEM_DROP, (yylsp[(2) - (2)]));
				;}
    break;

  case 92:
#line 446 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 93:
#line 447 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 94:
#line 452 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 95:
#line 456 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 1; ;}
    break;

  case 96:
#line 457 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 0; ;}
    break;

  case 97:
#line 8 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(2) - (2)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 98:
#line 14 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(3) - (3)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 99:
#line 20 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 100:
#line 26 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 101:
#line 7 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SCHEMA;
					n->subname = (yyvsp[(3) - (6)].str);
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 102:
#line 16 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 103:
#line 26 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 104:
#line 36 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 105:
#line 46 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 106:
#line 56 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 107:
#line 66 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 108:
#line 76 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 109:
#line 86 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 110:
#line 96 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 111:
#line 107 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 112:
#line 118 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 113:
#line 128 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 114:
#line 140 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = COLUMN; ;}
    break;

  case 115:
#line 141 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = 0; ;}
    break;

  case 116:
#line 10 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(5) - (7)].istmt)->relation = (yyvsp[(4) - (7)].range);
					(yyvsp[(5) - (7)].istmt)->onConflictClause = (yyvsp[(6) - (7)].onconflict);
					(yyvsp[(5) - (7)].istmt)->returningList = (yyvsp[(7) - (7)].list);
					(yyvsp[(5) - (7)].istmt)->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *) (yyvsp[(5) - (7)].istmt);
				;}
    break;

  case 117:
#line 22 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 118:
#line 28 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->override = (yyvsp[(2) - (4)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 119:
#line 35 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (4)].list);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 120:
#line 41 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (7)].list);
					(yyval.istmt)->override = (yyvsp[(5) - (7)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(7) - (7)].node);
				;}
    break;

  case 121:
#line 48 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = NULL;
				;}
    break;

  case 122:
#line 58 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 123:
#line 62 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].range)->alias = makeAlias((yyvsp[(3) - (3)].str), NIL);
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 124:
#line 71 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = (yyvsp[(2) - (4)].list);
					(yyval.infer)->whereClause = (yyvsp[(4) - (4)].node);
					(yyval.infer)->conname = NULL;
					(yyval.infer)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 125:
#line 80 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = NIL;
					(yyval.infer)->whereClause = NULL;
					(yyval.infer)->conname = (yyvsp[(3) - (3)].str);
					(yyval.infer)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 126:
#line 88 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = NULL;
				;}
    break;

  case 127:
#line 95 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = (yyvsp[(1) - (1)].with); ;}
    break;

  case 128:
#line 96 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = NULL; ;}
    break;

  case 129:
#line 102 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 130:
#line 114 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].target)->val = (PGNode *) (yyvsp[(3) - (3)].node);
					(yyval.list) = list_make1((yyvsp[(1) - (3)].target));
				;}
    break;

  case 131:
#line 119 "third_party/libpg_query/grammar/statements/insert.y"
    {
					int ncolumns = list_length((yyvsp[(2) - (5)].list));
					int i = 1;
					PGListCell *col_cell;

					/* Create a PGMultiAssignRef source for each target */
					foreach(col_cell, (yyvsp[(2) - (5)].list))
					{
						PGResTarget *res_col = (PGResTarget *) lfirst(col_cell);
						PGMultiAssignRef *r = makeNode(PGMultiAssignRef);

						r->source = (PGNode *) (yyvsp[(5) - (5)].node);
						r->colno = i;
						r->ncolumns = ncolumns;
						res_col->val = (PGNode *) r;
						i++;
					}

					(yyval.list) = (yyvsp[(2) - (5)].list);
				;}
    break;

  case 132:
#line 144 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_UPDATE;
					(yyval.onconflict)->infer = (yyvsp[(3) - (8)].infer);
					(yyval.onconflict)->targetList = (yyvsp[(7) - (8)].list);
					(yyval.onconflict)->whereClause = (yyvsp[(8) - (8)].node);
					(yyval.onconflict)->location = (yylsp[(1) - (8)]);
				;}
    break;

  case 133:
#line 154 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_NOTHING;
					(yyval.onconflict)->infer = (yyvsp[(3) - (5)].infer);
					(yyval.onconflict)->targetList = NIL;
					(yyval.onconflict)->whereClause = NULL;
					(yyval.onconflict)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 134:
#line 163 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = NULL;
				;}
    break;

  case 135:
#line 170 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = (yyvsp[(1) - (5)].str);
					(yyval.ielem)->expr = NULL;
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 136:
#line 181 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(1) - (5)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 137:
#line 192 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(2) - (7)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(4) - (7)].list);
					(yyval.ielem)->opclass = (yyvsp[(5) - (7)].list);
					(yyval.ielem)->ordering = (yyvsp[(6) - (7)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(7) - (7)].nullorder);
				;}
    break;

  case 138:
#line 206 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 139:
#line 207 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 140:
#line 213 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = PG_OVERRIDING_USER_VALUE; ;}
    break;

  case 141:
#line 214 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = OVERRIDING_SYSTEM_VALUE; ;}
    break;

  case 142:
#line 219 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 143:
#line 220 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].target)); ;}
    break;

  case 144:
#line 226 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 145:
#line 227 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 146:
#line 231 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 147:
#line 232 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 148:
#line 238 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 149:
#line 240 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 150:
#line 245 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 151:
#line 246 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_concat((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].list)); ;}
    break;

  case 152:
#line 250 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].ielem)); ;}
    break;

  case 153:
#line 251 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].ielem)); ;}
    break;

  case 154:
#line 257 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;	/* upper production sets this */
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 155:
#line 8 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_NOTHING;
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 156:
#line 15 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_ASSIGNMENT;
					n->name = (yyvsp[(2) - (4)].str);
					n->args = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 157:
#line 23 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_CALL;
					n->name = (yyvsp[(2) - (5)].str);
					n->args = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 158:
#line 10 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(4) - (5)].range)->relpersistence = (yyvsp[(2) - (5)].ival);
					n->sequence = (yyvsp[(4) - (5)].range);
					n->options = (yyvsp[(5) - (5)].list);
					n->ownerId = InvalidOid;
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 159:
#line 20 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(7) - (8)].range)->relpersistence = (yyvsp[(2) - (8)].ival);
					n->sequence = (yyvsp[(7) - (8)].range);
					n->options = (yyvsp[(8) - (8)].list);
					n->ownerId = InvalidOid;
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 160:
#line 32 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 161:
#line 33 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = NIL; ;}
    break;

  case 162:
#line 8 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(2) - (3)].str);
					n->params = (yyvsp[(3) - (3)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 163:
#line 16 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(7) - (9)].str);
					n->params = (yyvsp[(8) - (9)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(4) - (9)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = false;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (9)].into)->rel->relpersistence = (yyvsp[(2) - (9)].ival);
					(yyvsp[(4) - (9)].into)->skipData = !((yyvsp[(9) - (9)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 164:
#line 33 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(10) - (12)].str);
					n->params = (yyvsp[(11) - (12)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(7) - (12)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = true;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (12)].into)->rel->relpersistence = (yyvsp[(2) - (12)].ival);
					(yyvsp[(7) - (12)].into)->skipData = !((yyvsp[(12) - (12)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 165:
#line 51 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 166:
#line 52 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = NIL; ;}
    break;

  case 167:
#line 10 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(3) - (4)].range);
					n->options = (yyvsp[(4) - (4)].list);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 168:
#line 18 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(5) - (6)].range);
					n->options = (yyvsp[(6) - (6)].list);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 169:
#line 29 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 170:
#line 30 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 171:
#line 34 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 172:
#line 35 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 173:
#line 36 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 174:
#line 41 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(1) - (1)].str)); ;}
    break;

  case 175:
#line 42 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(2) - (2)].str)); ;}
    break;

  case 176:
#line 44 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.value) = makeFloat((yyvsp[(2) - (2)].str));
					doNegateFloat((yyval.value));
				;}
    break;

  case 177:
#line 48 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeInteger((yyvsp[(1) - (1)].ival)); ;}
    break;

  case 178:
#line 53 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("as", (PGNode *)(yyvsp[(2) - (2)].typnam), (yylsp[(1) - (2)]));
				;}
    break;

  case 179:
#line 57 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cache", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 180:
#line 61 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 181:
#line 65 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(false), (yylsp[(1) - (2)]));
				;}
    break;

  case 182:
#line 69 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("increment", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 183:
#line 73 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 184:
#line 77 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 185:
#line 81 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 186:
#line 85 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 187:
#line 89 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("owned_by", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 188:
#line 93 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					/* not documented, only used by pg_dump */
					(yyval.defelt) = makeDefElem("sequence_name", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 189:
#line 98 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("start", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 190:
#line 102 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 191:
#line 106 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 192:
#line 112 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 193:
#line 113 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 194:
#line 117 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 195:
#line 118 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = + (yyvsp[(2) - (2)].ival); ;}
    break;

  case 196:
#line 119 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = - (yyvsp[(2) - (2)].ival); ;}
    break;

  case 197:
#line 3 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 198:
#line 10 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_BEGIN;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 199:
#line 16 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_START;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 200:
#line 22 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 201:
#line 29 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 202:
#line 36 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 203:
#line 45 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 204:
#line 46 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 205:
#line 47 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 206:
#line 9 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(4) - (9)].range)->relpersistence = (yyvsp[(2) - (9)].ival);
					n->relation = (yyvsp[(4) - (9)].range);
					n->tableElts = (yyvsp[(6) - (9)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(8) - (9)].list);
					n->oncommit = (yyvsp[(9) - (9)].oncommit);
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 207:
#line 24 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(7) - (12)].range)->relpersistence = (yyvsp[(2) - (12)].ival);
					n->relation = (yyvsp[(7) - (12)].range);
					n->tableElts = (yyvsp[(9) - (12)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(11) - (12)].list);
					n->oncommit = (yyvsp[(12) - (12)].oncommit);
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 208:
#line 41 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 209:
#line 43 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * We must complain about conflicting options.
					 * We could, but choose not to, complain about redundant
					 * options (ie, where $2's bit is already set in $1).
					 */
					int		newspec = (yyvsp[(1) - (2)].ival) | (yyvsp[(2) - (2)].ival);

					/* special message for this case */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED)) == (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("constraint declared INITIALLY DEFERRED must be DEFERRABLE"),
								 parser_errposition((yylsp[(2) - (2)]))));
					/* generic message for other conflicts */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE)) == (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE) ||
						(newspec & (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED)) == (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("conflicting constraint properties"),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.ival) = newspec;
				;}
    break;

  case 210:
#line 69 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].typnam); ;}
    break;

  case 211:
#line 70 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 212:
#line 71 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].list); ;}
    break;

  case 213:
#line 72 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].value); ;}
    break;

  case 214:
#line 73 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 215:
#line 74 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 216:
#line 78 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 217:
#line 79 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 218:
#line 84 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 219:
#line 89 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_NOACTION; ;}
    break;

  case 220:
#line 90 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_RESTRICT; ;}
    break;

  case 221:
#line 91 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_CASCADE; ;}
    break;

  case 222:
#line 92 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETNULL; ;}
    break;

  case 223:
#line 93 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETDEFAULT; ;}
    break;

  case 224:
#line 99 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 225:
#line 105 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 226:
#line 106 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 227:
#line 108 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * Note: the PGCollateClause is momentarily included in
					 * the list built by ColQualList, but we split it out
					 * again in SplitColQualList.
					 */
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 228:
#line 125 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NOTNULL;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 229:
#line 132 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NULL;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 230:
#line 139 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (2)]);
					n->keys = NULL;
					n->options = (yyvsp[(2) - (2)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 231:
#line 149 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NULL;
					n->options = (yyvsp[(3) - (3)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 232:
#line 159 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->is_no_inherit = (yyvsp[(5) - (5)].boolean);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					n->skip_validation = false;
					n->initially_valid = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 233:
#line 171 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_DEFAULT;
					n->location = (yylsp[(1) - (2)]);
					n->raw_expr = (yyvsp[(2) - (2)].node);
					n->cooked_expr = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 234:
#line 180 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_IDENTITY;
					n->generated_when = (yyvsp[(2) - (5)].ival);
					n->options = (yyvsp[(5) - (5)].list);
					n->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 235:
#line 189 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (5)]);
					n->pktable			= (yyvsp[(2) - (5)].range);
					n->fk_attrs			= NIL;
					n->pk_attrs			= (yyvsp[(3) - (5)].list);
					n->fk_matchtype		= (yyvsp[(4) - (5)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(5) - (5)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(5) - (5)].ival) & 0xFF);
					n->skip_validation  = false;
					n->initially_valid  = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 236:
#line 208 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 237:
#line 214 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 238:
#line 220 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (1)].ival) << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 239:
#line 222 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | ((yyvsp[(1) - (1)].ival) & 0xFF); ;}
    break;

  case 240:
#line 224 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (2)].ival) << 8) | ((yyvsp[(2) - (2)].ival) & 0xFF); ;}
    break;

  case 241:
#line 226 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(2) - (2)].ival) << 8) | ((yyvsp[(1) - (2)].ival) & 0xFF); ;}
    break;

  case 242:
#line 228 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 243:
#line 233 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 244:
#line 234 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 245:
#line 238 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = ONCOMMIT_DROP; ;}
    break;

  case 246:
#line 239 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_DELETE_ROWS; ;}
    break;

  case 247:
#line 240 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_PRESERVE_ROWS; ;}
    break;

  case 248:
#line 241 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_NOOP; ;}
    break;

  case 249:
#line 246 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 250:
#line 250 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = true; ;}
    break;

  case 251:
#line 251 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = false; ;}
    break;

  case 252:
#line 257 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 253:
#line 263 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 254:
#line 268 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_COMMENTS; ;}
    break;

  case 255:
#line 269 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_CONSTRAINTS; ;}
    break;

  case 256:
#line 270 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_DEFAULTS; ;}
    break;

  case 257:
#line 271 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_IDENTITY; ;}
    break;

  case 258:
#line 272 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_INDEXES; ;}
    break;

  case 259:
#line 273 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STATISTICS; ;}
    break;

  case 260:
#line 274 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STORAGE; ;}
    break;

  case 261:
#line 275 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_ALL; ;}
    break;

  case 262:
#line 281 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 263:
#line 282 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 264:
#line 286 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
    break;

  case 265:
#line 292 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRABLE;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 266:
#line 299 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_NOT_DEFERRABLE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 267:
#line 306 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRED;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 268:
#line 313 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_IMMEDIATE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 269:
#line 324 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 270:
#line 325 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(true), (yylsp[(1) - (2)]))); ;}
    break;

  case 271:
#line 326 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(false), (yylsp[(1) - (2)]))); ;}
    break;

  case 272:
#line 327 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 273:
#line 331 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 274:
#line 336 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 275:
#line 337 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) & ~(yyvsp[(3) - (3)].ival); ;}
    break;

  case 276:
#line 338 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 277:
#line 343 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 278:
#line 348 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_DEFERRABLE; ;}
    break;

  case 279:
#line 349 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_DEFERRABLE; ;}
    break;

  case 280:
#line 350 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_IMMEDIATE; ;}
    break;

  case 281:
#line 351 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_DEFERRED; ;}
    break;

  case 282:
#line 352 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_VALID; ;}
    break;

  case 283:
#line 353 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NO_INHERIT; ;}
    break;

  case 284:
#line 359 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (4)].str);
					n->typeName = (yyvsp[(2) - (4)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collOid = InvalidOid;
					n->fdwoptions = (yyvsp[(3) - (4)].list);
					SplitColQualList((yyvsp[(4) - (4)].list), &n->constraints, &n->collClause,
									 yyscanner);
					n->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 285:
#line 382 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 286:
#line 386 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 287:
#line 392 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 288:
#line 393 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 289:
#line 397 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 290:
#line 401 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 291:
#line 402 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 292:
#line 403 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 293:
#line 408 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 294:
#line 412 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 295:
#line 419 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 296:
#line 420 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 297:
#line 425 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 298:
#line 426 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 299:
#line 431 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str));
				;}
    break;

  case 300:
#line 438 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 301:
#line 439 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 302:
#line 444 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 303:
#line 445 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 304:
#line 449 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 305:
#line 455 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 306:
#line 459 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 307:
#line 463 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (5)].str), (yyvsp[(3) - (5)].str), (PGNode *) (yyvsp[(5) - (5)].node),
											 PG_DEFELEM_UNSPEC, (yylsp[(1) - (5)]));
				;}
    break;

  case 308:
#line 468 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str), NULL, PG_DEFELEM_UNSPEC, (yylsp[(1) - (3)]));
				;}
    break;

  case 309:
#line 475 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 310:
#line 476 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 311:
#line 480 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 312:
#line 482 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (4)].str)), (yyvsp[(2) - (4)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 313:
#line 488 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(2) - (5)].str)), (yyvsp[(3) - (5)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->setof = true;
					(yyval.typnam)->location = (yylsp[(2) - (5)]);
				;}
    break;

  case 314:
#line 499 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					processCASbits((yyvsp[(5) - (5)].ival), (yylsp[(5) - (5)]), "CHECK",
								   NULL, NULL, &n->skip_validation,
								   &n->is_no_inherit, yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 315:
#line 513 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (6)]);
					n->keys = (yyvsp[(3) - (6)].list);
					n->options = (yyvsp[(5) - (6)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(6) - (6)].ival), (yylsp[(6) - (6)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 316:
#line 526 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(2) - (3)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(3) - (3)].ival), (yylsp[(3) - (3)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 317:
#line 541 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (7)]);
					n->keys = (yyvsp[(4) - (7)].list);
					n->options = (yyvsp[(6) - (7)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(7) - (7)].ival), (yylsp[(7) - (7)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 318:
#line 554 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (4)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(3) - (4)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 319:
#line 569 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (11)]);
					n->pktable			= (yyvsp[(7) - (11)].range);
					n->fk_attrs			= (yyvsp[(4) - (11)].list);
					n->pk_attrs			= (yyvsp[(8) - (11)].list);
					n->fk_matchtype		= (yyvsp[(9) - (11)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(10) - (11)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(10) - (11)].ival) & 0xFF);
					processCASbits((yyvsp[(11) - (11)].ival), (yylsp[(11) - (11)]), "FOREIGN KEY",
								   &n->deferrable, &n->initdeferred,
								   &n->skip_validation, NULL,
								   yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 320:
#line 591 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 321:
#line 595 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 322:
#line 602 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_FULL;
			;}
    break;

  case 323:
#line 606 "third_party/libpg_query/grammar/statements/create.y"
    {
				ereport(ERROR,
						(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
						 errmsg("MATCH PARTIAL not yet implemented"),
						 parser_errposition((yylsp[(1) - (2)]))));
				(yyval.ival) = PG_FKCONSTR_MATCH_PARTIAL;
			;}
    break;

  case 324:
#line 614 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 325:
#line 618 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 326:
#line 626 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGTableLikeClause *n = makeNode(PGTableLikeClause);
					n->relation = (yyvsp[(2) - (3)].range);
					n->options = (yyvsp[(3) - (3)].ival);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 327:
#line 635 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 328:
#line 636 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 329:
#line 637 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 330:
#line 638 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 331:
#line 640 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 332:
#line 647 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 333:
#line 653 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_UNLOGGED; ;}
    break;

  case 334:
#line 654 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = RELPERSISTENCE_PERMANENT; ;}
    break;

  case 335:
#line 659 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_ATTRIBUTE_IDENTITY_ALWAYS; ;}
    break;

  case 336:
#line 660 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ATTRIBUTE_IDENTITY_BY_DEFAULT; ;}
    break;

  case 337:
#line 10 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 338:
#line 20 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 339:
#line 30 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 340:
#line 40 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 341:
#line 50 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->objects = list_make1(lappend((yyvsp[(5) - (6)].list), makeString((yyvsp[(3) - (6)].str))));
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 342:
#line 60 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (8)].objtype);
					n->objects = list_make1(lappend((yyvsp[(7) - (8)].list), makeString((yyvsp[(5) - (8)].str))));
					n->behavior = (yyvsp[(8) - (8)].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 343:
#line 73 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TABLE; ;}
    break;

  case 344:
#line 74 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SEQUENCE; ;}
    break;

  case 345:
#line 75 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 346:
#line 76 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 347:
#line 77 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_VIEW; ;}
    break;

  case 348:
#line 78 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_MATVIEW; ;}
    break;

  case 349:
#line 79 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_INDEX; ;}
    break;

  case 350:
#line 80 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_TABLE; ;}
    break;

  case 351:
#line 81 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_COLLATION; ;}
    break;

  case 352:
#line 82 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_CONVERSION; ;}
    break;

  case 353:
#line 83 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_STATISTIC_EXT; ;}
    break;

  case 354:
#line 84 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSPARSER; ;}
    break;

  case 355:
#line 85 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSDICTIONARY; ;}
    break;

  case 356:
#line 86 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSTEMPLATE; ;}
    break;

  case 357:
#line 87 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSCONFIGURATION; ;}
    break;

  case 358:
#line 92 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_ACCESS_METHOD; ;}
    break;

  case 359:
#line 93 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EVENT_TRIGGER; ;}
    break;

  case 360:
#line 94 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EXTENSION; ;}
    break;

  case 361:
#line 95 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FDW; ;}
    break;

  case 362:
#line 96 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_PUBLICATION; ;}
    break;

  case 363:
#line 97 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SCHEMA; ;}
    break;

  case 364:
#line 98 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_SERVER; ;}
    break;

  case 365:
#line 103 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 366:
#line 104 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 367:
#line 109 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_CASCADE; ;}
    break;

  case 368:
#line 110 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; ;}
    break;

  case 369:
#line 111 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; /* default */ ;}
    break;

  case 370:
#line 116 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_POLICY; ;}
    break;

  case 371:
#line 117 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_RULE; ;}
    break;

  case 372:
#line 118 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TRIGGER; ;}
    break;

  case 373:
#line 8 "third_party/libpg_query/grammar/statements/create_function.y"
    {
					PGCreateFunctionStmt *n = makeNode(PGCreateFunctionStmt);
					n->name = (yyvsp[(3) - (6)].range);
					n->params = (yyvsp[(4) - (6)].list);
					n->function = (yyvsp[(6) - (6)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 376:
#line 24 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = NIL;
			;}
    break;

  case 377:
#line 28 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = (yyvsp[(2) - (3)].list);
			;}
    break;

  case 378:
#line 12 "third_party/libpg_query/grammar/statements/update.y"
    {
					PGUpdateStmt *n = makeNode(PGUpdateStmt);
					n->relation = (yyvsp[(3) - (8)].range);
					n->targetList = (yyvsp[(5) - (8)].list);
					n->fromClause = (yyvsp[(6) - (8)].list);
					n->whereClause = (yyvsp[(7) - (8)].node);
					n->returningList = (yyvsp[(8) - (8)].list);
					n->withClause = (yyvsp[(1) - (8)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 379:
#line 3 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = (yyvsp[(3) - (11)].range);
					n->query = NULL;
					n->attlist = (yyvsp[(4) - (11)].list);
					n->is_from = (yyvsp[(6) - (11)].boolean);
					n->is_program = (yyvsp[(7) - (11)].boolean);
					n->filename = (yyvsp[(8) - (11)].str);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(8) - (11)]))));

					n->options = NIL;
					/* Concatenate user-supplied flags */
					if ((yyvsp[(2) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(2) - (11)].defelt));
					if ((yyvsp[(5) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(5) - (11)].defelt));
					if ((yyvsp[(9) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(9) - (11)].defelt));
					if ((yyvsp[(11) - (11)].list))
						n->options = list_concat(n->options, (yyvsp[(11) - (11)].list));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 380:
#line 31 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = NULL;
					n->query = (yyvsp[(3) - (9)].node);
					n->attlist = NIL;
					n->is_from = false;
					n->is_program = (yyvsp[(6) - (9)].boolean);
					n->filename = (yyvsp[(7) - (9)].str);
					n->options = (yyvsp[(9) - (9)].list);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(5) - (9)]))));

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 381:
#line 53 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 382:
#line 54 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 383:
#line 60 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(2) - (3)]));
				;}
    break;

  case 384:
#line 63 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 385:
#line 69 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 386:
#line 73 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 387:
#line 80 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 388:
#line 81 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 389:
#line 85 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 390:
#line 86 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 391:
#line 91 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 392:
#line 92 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 393:
#line 96 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 394:
#line 97 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 395:
#line 102 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 396:
#line 103 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 397:
#line 104 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeNode(PGAStar); ;}
    break;

  case 398:
#line 105 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (3)].list); ;}
    break;

  case 399:
#line 106 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = NULL; ;}
    break;

  case 400:
#line 112 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 401:
#line 120 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (2)]));
				;}
    break;

  case 402:
#line 123 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 403:
#line 128 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 404:
#line 129 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = NIL; ;}
    break;

  case 405:
#line 135 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 406:
#line 138 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 407:
#line 144 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 408:
#line 148 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 409:
#line 152 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("freeze", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 410:
#line 156 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 411:
#line 160 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("null", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 412:
#line 164 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("csv"), (yylsp[(1) - (1)]));
				;}
    break;

  case 413:
#line 168 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("header", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 414:
#line 172 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("quote", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 415:
#line 176 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("escape", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 416:
#line 180 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 417:
#line 184 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)makeNode(PGAStar), (yylsp[(1) - (3)]));
				;}
    break;

  case 418:
#line 188 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_not_null", (PGNode *)(yyvsp[(4) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 419:
#line 192 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_null", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 420:
#line 196 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("encoding", (PGNode *)makeString((yyvsp[(2) - (2)].str)), (yylsp[(1) - (2)]));
				;}
    break;

  case 421:
#line 203 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 422:
#line 209 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 423:
#line 210 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 424:
#line 211 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 425:
#line 217 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 426:
#line 221 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 429:
#line 52 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 430:
#line 53 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 431:
#line 68 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 432:
#line 70 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list), NIL,
										NULL, NULL, NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (2)].node);
				;}
    break;

  case 433:
#line 77 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(3) - (4)].list),
										(PGNode*) list_nth((yyvsp[(4) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 434:
#line 85 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(4) - (4)].list),
										(PGNode*) list_nth((yyvsp[(3) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(3) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 435:
#line 93 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (2)].node), NULL, NIL,
										NULL, NULL,
										(yyvsp[(1) - (2)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 436:
#line 101 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].list), NIL,
										NULL, NULL,
										(yyvsp[(1) - (3)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (3)].node);
				;}
    break;

  case 437:
#line 109 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(4) - (5)].list),
										(PGNode*) list_nth((yyvsp[(5) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(5) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 438:
#line 117 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(5) - (5)].list),
										(PGNode*) list_nth((yyvsp[(4) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 439:
#line 127 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 440:
#line 128 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 441:
#line 158 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->targetList = (yyvsp[(3) - (10)].list);
					n->intoClause = (yyvsp[(4) - (10)].into);
					n->fromClause = (yyvsp[(5) - (10)].list);
					n->whereClause = (yyvsp[(6) - (10)].node);
					n->groupClause = (yyvsp[(7) - (10)].list);
					n->havingClause = (yyvsp[(8) - (10)].node);
					n->windowClause = (yyvsp[(9) - (10)].list);
					n->sampleOptions = (yyvsp[(10) - (10)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 442:
#line 173 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->distinctClause = (yyvsp[(2) - (10)].list);
					n->targetList = (yyvsp[(3) - (10)].list);
					n->intoClause = (yyvsp[(4) - (10)].into);
					n->fromClause = (yyvsp[(5) - (10)].list);
					n->whereClause = (yyvsp[(6) - (10)].node);
					n->groupClause = (yyvsp[(7) - (10)].list);
					n->havingClause = (yyvsp[(8) - (10)].node);
					n->windowClause = (yyvsp[(9) - (10)].list);
					n->sampleOptions = (yyvsp[(10) - (10)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 443:
#line 186 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 444:
#line 188 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* same as SELECT * FROM relation_expr */
					PGColumnRef *cr = makeNode(PGColumnRef);
					PGResTarget *rt = makeNode(PGResTarget);
					PGSelectStmt *n = makeNode(PGSelectStmt);

					cr->fields = list_make1(makeNode(PGAStar));
					cr->location = -1;

					rt->name = NULL;
					rt->indirection = NIL;
					rt->val = (PGNode *)cr;
					rt->location = -1;

					n->targetList = list_make1(rt);
					n->fromClause = list_make1((yyvsp[(2) - (2)].range));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 445:
#line 207 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_UNION, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 446:
#line 211 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_INTERSECT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 447:
#line 215 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_EXCEPT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 448:
#line 232 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 449:
#line 239 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 450:
#line 246 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(3) - (3)].list);
				(yyval.with)->recursive = true;
				(yyval.with)->location = (yylsp[(1) - (3)]);
			;}
    break;

  case 451:
#line 255 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 452:
#line 256 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 453:
#line 260 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGCommonTableExpr *n = makeNode(PGCommonTableExpr);
				n->ctename = (yyvsp[(1) - (6)].str);
				n->aliascolnames = (yyvsp[(2) - (6)].list);
				n->ctequery = (yyvsp[(5) - (6)].node);
				n->location = (yylsp[(1) - (6)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 454:
#line 272 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(2) - (2)].range);
					(yyval.into)->colNames = NIL;
					(yyval.into)->options = NIL;
					(yyval.into)->onCommit = PG_ONCOMMIT_NOOP;
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;
				;}
    break;

  case 455:
#line 282 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.into) = NULL; ;}
    break;

  case 456:
#line 291 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 457:
#line 296 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 458:
#line 301 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 459:
#line 306 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 460:
#line 311 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 461:
#line 319 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 462:
#line 327 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_UNLOGGED;
				;}
    break;

  case 463:
#line 332 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 464:
#line 337 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 465:
#line 343 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 466:
#line 344 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 467:
#line 348 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 468:
#line 349 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 469:
#line 350 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 470:
#line 357 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(NIL); ;}
    break;

  case 471:
#line 358 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 472:
#line 362 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL;;}
    break;

  case 473:
#line 363 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 474:
#line 367 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 475:
#line 368 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 476:
#line 372 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 477:
#line 376 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].sortby)); ;}
    break;

  case 478:
#line 377 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].sortby)); ;}
    break;

  case 479:
#line 381 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (4)].node);
					(yyval.sortby)->sortby_dir = SORTBY_USING;
					(yyval.sortby)->sortby_nulls = (yyvsp[(4) - (4)].nullorder);
					(yyval.sortby)->useOp = (yyvsp[(3) - (4)].list);
					(yyval.sortby)->location = (yylsp[(3) - (4)]);
				;}
    break;

  case 480:
#line 390 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (3)].node);
					(yyval.sortby)->sortby_dir = (yyvsp[(2) - (3)].sortorder);
					(yyval.sortby)->sortby_nulls = (yyvsp[(3) - (3)].nullorder);
					(yyval.sortby)->useOp = NIL;
					(yyval.sortby)->location = -1;		/* no operator */
				;}
    break;

  case 481:
#line 400 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_ASC; ;}
    break;

  case 482:
#line 401 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DESC; ;}
    break;

  case 483:
#line 402 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DEFAULT; ;}
    break;

  case 484:
#line 405 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_FIRST; ;}
    break;

  case 485:
#line 406 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_LAST; ;}
    break;

  case 486:
#line 407 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_DEFAULT; ;}
    break;

  case 487:
#line 411 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(2) - (2)].node), (yyvsp[(1) - (2)].node)); ;}
    break;

  case 488:
#line 412 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 489:
#line 413 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL, (yyvsp[(1) - (1)].node)); ;}
    break;

  case 490:
#line 414 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (1)].node), NULL); ;}
    break;

  case 491:
#line 418 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 492:
#line 419 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL,NULL); ;}
    break;

  case 493:
#line 424 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 494:
#line 426 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Disabled because it was too confusing, bjm 2002-02-18 */
					ereport(ERROR,
							(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("LIMIT #,# syntax is not supported"),
							 errhint("Use separate LIMIT and OFFSET clauses."),
							 parser_errposition((yylsp[(1) - (4)]))));
				;}
    break;

  case 495:
#line 442 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(3) - (5)].node); ;}
    break;

  case 496:
#line 444 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst(1, -1); ;}
    break;

  case 497:
#line 449 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 498:
#line 452 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 499:
#line 460 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
		;}
    break;

  case 500:
#line 464 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
		;}
    break;

  case 501:
#line 468 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
		;}
    break;

  case 502:
#line 472 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
		;}
    break;

  case 503:
#line 476 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (1)].ival)), false);
		;}
    break;

  case 504:
#line 480 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), false);
		;}
    break;

  case 505:
#line 487 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(3) - (3)].node);
				;}
    break;

  case 506:
#line 491 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 507:
#line 498 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 508:
#line 499 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 509:
#line 504 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSampleOptions((yyvsp[(3) - (5)].node), (yyvsp[(1) - (5)].str), (yyvsp[(5) - (5)].ival), (yylsp[(1) - (5)]));
				;}
    break;

  case 510:
#line 508 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (1)].node), NULL, -1, (yylsp[(1) - (1)]));
		;}
    break;

  case 511:
#line 512 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (4)].node), (yyvsp[(3) - (4)].str), -1, (yylsp[(1) - (4)]));
		;}
    break;

  case 512:
#line 516 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (6)].node), (yyvsp[(3) - (6)].str), (yyvsp[(5) - (6)].ival), (yylsp[(1) - (6)]));
		;}
    break;

  case 513:
#line 523 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 514:
#line 529 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 515:
#line 530 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 516:
#line 535 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(3) - (4)].ival); ;}
    break;

  case 517:
#line 536 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = -1; ;}
    break;

  case 518:
#line 540 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 519:
#line 542 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* LIMIT ALL is represented as a NULL constant */
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 520:
#line 549 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 521:
#line 569 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 522:
#line 571 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 523:
#line 573 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 524:
#line 577 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival),(yylsp[(1) - (1)])); ;}
    break;

  case 525:
#line 578 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str),(yylsp[(1) - (1)])); ;}
    break;

  case 526:
#line 582 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 527:
#line 583 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 528:
#line 586 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 529:
#line 587 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 530:
#line 612 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 531:
#line 613 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 532:
#line 617 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 533:
#line 618 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].node)); ;}
    break;

  case 534:
#line 622 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 535:
#line 623 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 536:
#line 628 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_EMPTY, NIL, (yylsp[(1) - (2)]));
				;}
    break;

  case 537:
#line 640 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 538:
#line 641 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 539:
#line 645 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 540:
#line 646 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 541:
#line 650 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 542:
#line 651 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 543:
#line 655 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 544:
#line 656 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 545:
#line 661 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGLockingClause *n = makeNode(PGLockingClause);
					n->lockedRels = (yyvsp[(2) - (3)].list);
					n->strength = (yyvsp[(1) - (3)].lockstrength);
					n->waitPolicy = (yyvsp[(3) - (3)].lockwaitpolicy);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 546:
#line 671 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = LCS_FORUPDATE; ;}
    break;

  case 547:
#line 672 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORNOKEYUPDATE; ;}
    break;

  case 548:
#line 673 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORSHARE; ;}
    break;

  case 549:
#line 674 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORKEYSHARE; ;}
    break;

  case 550:
#line 678 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 551:
#line 679 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 552:
#line 684 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = LockWaitError; ;}
    break;

  case 553:
#line 685 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitSkip; ;}
    break;

  case 554:
#line 686 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitBlock; ;}
    break;

  case 555:
#line 696 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->valuesLists = list_make1((yyvsp[(3) - (4)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 556:
#line 702 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = (PGSelectStmt *) (yyvsp[(1) - (5)].node);
					n->valuesLists = lappend(n->valuesLists, (yyvsp[(4) - (5)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 557:
#line 719 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 558:
#line 720 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 559:
#line 724 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 560:
#line 725 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 561:
#line 732 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(1) - (3)].range)->alias = (yyvsp[(2) - (3)].alias);
					(yyvsp[(1) - (3)].range)->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) (yyvsp[(1) - (3)].range);
				;}
    break;

  case 562:
#line 738 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(1) - (3)].node);
					n->alias = (PGAlias*) linitial((yyvsp[(2) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(2) - (3)].list));
					n->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 563:
#line 746 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(2) - (3)].node);
					n->lateral = true;
					n->alias = (PGAlias*) linitial((yyvsp[(3) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(3) - (3)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 564:
#line 754 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = false;
					n->subquery = (yyvsp[(1) - (3)].node);
					n->alias = (yyvsp[(2) - (3)].alias);
					n->sample = (yyvsp[(3) - (3)].node);
					/*
					 * The SQL spec does not permit a subselect
					 * (<derived_table>) without an alias clause,
					 * so we don't either.  This avoids the problem
					 * of needing to invent a unique refname for it.
					 * That could be surmounted if there's sufficient
					 * popular demand, but for now let's just implement
					 * the spec and see if anyone complains.
					 * However, it does seem like a good idea to emit
					 * an error message that's better than "syntax error".
					 */
					if ((yyvsp[(2) - (3)].alias) == NULL)
					{
						if (IsA((yyvsp[(1) - (3)].node), PGSelectStmt) &&
							((PGSelectStmt *) (yyvsp[(1) - (3)].node))->valuesLists)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("VALUES in FROM must have an alias"),
									 errhint("For example, FROM (VALUES ...) [AS] foo."),
									 parser_errposition((yylsp[(1) - (3)]))));
						else
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("subquery in FROM must have an alias"),
									 errhint("For example, FROM (SELECT ...) [AS] foo."),
									 parser_errposition((yylsp[(1) - (3)]))));
					}
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 565:
#line 790 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = true;
					n->subquery = (yyvsp[(2) - (3)].node);
					n->alias = (yyvsp[(3) - (3)].alias);
					n->sample = NULL;
					/* same comment as above */
					if ((yyvsp[(3) - (3)].alias) == NULL)
					{
						if (IsA((yyvsp[(2) - (3)].node), PGSelectStmt) &&
							((PGSelectStmt *) (yyvsp[(2) - (3)].node))->valuesLists)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("VALUES in FROM must have an alias"),
									 errhint("For example, FROM (VALUES ...) [AS] foo."),
									 parser_errposition((yylsp[(2) - (3)]))));
						else
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("subquery in FROM must have an alias"),
									 errhint("For example, FROM (SELECT ...) [AS] foo."),
									 parser_errposition((yylsp[(2) - (3)]))));
					}
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 566:
#line 816 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) (yyvsp[(1) - (1)].jexpr);
				;}
    break;

  case 567:
#line 820 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(2) - (4)].jexpr)->alias = (yyvsp[(4) - (4)].alias);
					(yyval.node) = (PGNode *) (yyvsp[(2) - (4)].jexpr);
				;}
    break;

  case 568:
#line 846 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.jexpr) = (yyvsp[(2) - (3)].jexpr);
				;}
    break;

  case 569:
#line 850 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* CROSS JOIN is same as unqualified inner join */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL;
					n->quals = NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 570:
#line 863 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(2) - (5)].jtype);
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(4) - (5)].node);
					if ((yyvsp[(5) - (5)].node) != NULL && IsA((yyvsp[(5) - (5)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(5) - (5)].node); /* USING clause */
					else
						n->quals = (yyvsp[(5) - (5)].node); /* ON clause */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 571:
#line 877 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(3) - (4)].node);
					if ((yyvsp[(4) - (4)].node) != NULL && IsA((yyvsp[(4) - (4)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(4) - (4)].node); /* USING clause */
					else
						n->quals = (yyvsp[(4) - (4)].node); /* ON clause */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 572:
#line 892 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(3) - (5)].jtype);
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(5) - (5)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 573:
#line 904 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 574:
#line 920 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.alias)->colnames = (yyvsp[(4) - (5)].list);
				;}
    break;

  case 575:
#line 926 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (2)].str);
				;}
    break;

  case 576:
#line 931 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.alias)->colnames = (yyvsp[(3) - (4)].list);
				;}
    break;

  case 577:
#line 937 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (1)].str);
				;}
    break;

  case 578:
#line 943 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = (yyvsp[(1) - (1)].alias); ;}
    break;

  case 579:
#line 944 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = NULL; ;}
    break;

  case 580:
#line 953 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (1)].alias), NIL);
				;}
    break;

  case 581:
#line 957 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 582:
#line 961 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.list) = list_make2(a, (yyvsp[(4) - (5)].list));
				;}
    break;

  case 583:
#line 967 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.list) = list_make2(a, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 584:
#line 973 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, NIL);
				;}
    break;

  case 585:
#line 978 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_FULL; ;}
    break;

  case 586:
#line 979 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_LEFT; ;}
    break;

  case 587:
#line 980 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_RIGHT; ;}
    break;

  case 588:
#line 981 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_INNER; ;}
    break;

  case 589:
#line 985 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 590:
#line 986 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 591:
#line 998 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) (yyvsp[(3) - (4)].list); ;}
    break;

  case 592:
#line 999 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 593:
#line 1005 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, implicitly */
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 594:
#line 1012 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, explicitly */
					(yyval.range) = (yyvsp[(1) - (2)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 595:
#line 1019 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance */
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 596:
#line 1026 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance, SQL99-style syntax */
					(yyval.range) = (yyvsp[(3) - (4)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 597:
#line 1058 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(2) - (2)].boolean);
					n->is_rowsfrom = false;
					n->functions = list_make1(list_make2((yyvsp[(1) - (2)].node), NIL));
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 598:
#line 1069 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(6) - (6)].boolean);
					n->is_rowsfrom = true;
					n->functions = (yyvsp[(4) - (6)].list);
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 599:
#line 1082 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 600:
#line 1086 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 601:
#line 1087 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 602:
#line 1090 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 603:
#line 1091 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 604:
#line 1094 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 605:
#line 1095 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 606:
#line 1100 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 607:
#line 1101 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 608:
#line 1107 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 609:
#line 1111 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 610:
#line 1117 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (3)].str);
					n->typeName = (yyvsp[(2) - (3)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collClause = (PGCollateClause *) (yyvsp[(3) - (3)].node);
					n->collOid = InvalidOid;
					n->constraints = NIL;
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 611:
#line 1138 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 612:
#line 1145 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 613:
#line 1158 "third_party/libpg_query/grammar/statements/select.y"
    {
             (yyval.list) = list_make1(list_make2(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].typnam)));
            ;}
    break;

  case 614:
#line 1161 "third_party/libpg_query/grammar/statements/select.y"
    {
             (yyval.list) = lappend((yyvsp[(1) - (4)].list), list_make2(makeString((yyvsp[(3) - (4)].str)), (yyvsp[(4) - (4)].typnam)));
            ;}
    break;

  case 617:
#line 1168 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 618:
#line 1173 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->setof = true;
				;}
    break;

  case 619:
#line 1180 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (5)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(4) - (5)].ival)));
				;}
    break;

  case 620:
#line 1185 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (6)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(5) - (6)].ival)));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 621:
#line 1191 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
				;}
    break;

  case 622:
#line 1196 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 623:
#line 1201 "third_party/libpg_query/grammar/statements/select.y"
    {
               (yyval.typnam) = SystemTypeName("struct");
               (yyval.typnam)->typmods = (yyvsp[(3) - (4)].list);
               (yyval.typnam)->location = (yylsp[(1) - (4)]);
			;}
    break;

  case 624:
#line 1210 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeInteger(-1)); ;}
    break;

  case 625:
#line 1212 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (4)].list), makeInteger((yyvsp[(3) - (4)].ival))); ;}
    break;

  case 626:
#line 1214 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = NIL; ;}
    break;

  case 627:
#line 1218 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 628:
#line 1219 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 629:
#line 1220 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 630:
#line 1221 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 631:
#line 1222 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 632:
#line 1224 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 633:
#line 1229 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (4)].typnam);
					(yyval.typnam)->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											 makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
				;}
    break;

  case 634:
#line 1248 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 635:
#line 1249 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 636:
#line 1250 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 637:
#line 1251 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 638:
#line 1263 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = makeTypeName((yyvsp[(1) - (2)].str));
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 639:
#line 1269 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(2) - (3)].list)));
					(yyval.typnam)->typmods = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 640:
#line 1276 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 641:
#line 1277 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 642:
#line 1284 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 643:
#line 1289 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 644:
#line 1294 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int2");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 645:
#line 1299 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int8");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 646:
#line 1304 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 647:
#line 1309 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (2)].typnam);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 648:
#line 1314 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float8");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 649:
#line 1319 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 650:
#line 1325 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 651:
#line 1331 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 652:
#line 1337 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("bool");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 653:
#line 1344 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Check FLOAT() precision limits assuming IEEE floating
					 * types - thomas 1997-09-18
					 */
					if ((yyvsp[(2) - (3)].ival) < 1)
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be at least 1 bit"),
								 parser_errposition((yylsp[(2) - (3)]))));
					else if ((yyvsp[(2) - (3)].ival) <= 24)
						(yyval.typnam) = SystemTypeName("float4");
					else if ((yyvsp[(2) - (3)].ival) <= 53)
						(yyval.typnam) = SystemTypeName("float8");
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be less than 54 bits"),
								 parser_errposition((yylsp[(2) - (3)]))));
				;}
    break;

  case 654:
#line 1365 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
				;}
    break;

  case 655:
#line 1375 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 656:
#line 1379 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 657:
#line 1387 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 658:
#line 1391 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 659:
#line 1399 "third_party/libpg_query/grammar/statements/select.y"
    {
					const char *typname;

					typname = (yyvsp[(2) - (5)].boolean) ? "varbit" : "bit";
					(yyval.typnam) = SystemTypeName(typname);
					(yyval.typnam)->typmods = (yyvsp[(4) - (5)].list);
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 660:
#line 1411 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* bit defaults to bit(1), varbit to no limit */
					if ((yyvsp[(2) - (2)].boolean))
					{
						(yyval.typnam) = SystemTypeName("varbit");
					}
					else
					{
						(yyval.typnam) = SystemTypeName("bit");
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					}
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 661:
#line 1432 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 662:
#line 1436 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 663:
#line 1442 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 664:
#line 1446 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Length was not specified so allow to be unrestricted.
					 * This handles problems with fixed-length (bpchar) strings
					 * which in column definitions must default to a length
					 * of one, but should not be constrained if the length
					 * was not specified.
					 */
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 665:
#line 1459 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (4)].conststr));
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 666:
#line 1467 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (1)].conststr));
					/* char defaults to char(1), varchar to no limit */
					if (strcmp((yyvsp[(1) - (1)].conststr), "bpchar") == 0)
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 667:
#line 1477 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 668:
#line 1479 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 669:
#line 1481 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "varchar"; ;}
    break;

  case 670:
#line 1483 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 671:
#line 1485 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 672:
#line 1487 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 673:
#line 1491 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 674:
#line 1492 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 675:
#line 1500 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 676:
#line 1509 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 677:
#line 1517 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 678:
#line 1526 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 679:
#line 1537 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("interval");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 680:
#line 1544 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 681:
#line 1545 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 682:
#line 1546 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 699:
#line 1575 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR), (yylsp[(1) - (1)]))); ;}
    break;

  case 700:
#line 1577 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MONTH), (yylsp[(1) - (1)]))); ;}
    break;

  case 701:
#line 1579 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY), (yylsp[(1) - (1)]))); ;}
    break;

  case 702:
#line 1581 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR), (yylsp[(1) - (1)]))); ;}
    break;

  case 703:
#line 1583 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE), (yylsp[(1) - (1)]))); ;}
    break;

  case 704:
#line 1585 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 705:
#line 1587 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MILLISECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 706:
#line 1589 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MICROSECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 707:
#line 1591 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR) |
												 INTERVAL_MASK(MONTH), (yylsp[(1) - (3)])));
				;}
    break;

  case 708:
#line 1596 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR), (yylsp[(1) - (3)])));
				;}
    break;

  case 709:
#line 1601 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 710:
#line 1607 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 711:
#line 1614 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 712:
#line 1619 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 713:
#line 1625 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 714:
#line 1630 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 715:
#line 1661 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 716:
#line 1664 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), (yylsp[(2) - (3)])); ;}
    break;

  case 717:
#line 1666 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = (yyvsp[(1) - (3)].node);
					n->collname = (yyvsp[(3) - (3)].list);
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 718:
#line 1674 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("timezone"),
											   list_make2((yyvsp[(5) - (5)].node), (yyvsp[(1) - (5)].node)),
											   (yylsp[(2) - (5)]));
				;}
    break;

  case 719:
#line 1689 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 720:
#line 1691 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 721:
#line 1693 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 722:
#line 1695 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 723:
#line 1697 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 724:
#line 1699 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 725:
#line 1701 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 726:
#line 1703 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 727:
#line 1705 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 728:
#line 1707 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 729:
#line 1709 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 730:
#line 1711 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 731:
#line 1713 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 732:
#line 1715 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 733:
#line 1718 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 734:
#line 1720 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 735:
#line 1722 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 736:
#line 1725 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeAndExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 737:
#line 1727 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeOrExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 738:
#line 1729 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 739:
#line 1731 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 740:
#line 1734 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_GLOB, "~~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 741:
#line 1739 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 742:
#line 1744 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make3((yyvsp[(1) - (5)].node), (yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 743:
#line 1751 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "!~~",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 744:
#line 1756 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make3((yyvsp[(1) - (6)].node), (yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 745:
#line 1763 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 746:
#line 1768 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make2((yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 747:
#line 1776 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 748:
#line 1781 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 749:
#line 1790 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (4)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (4)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (4)].node), (PGNode *) n, (yylsp[(2) - (4)]));
				;}
    break;

  case 750:
#line 1798 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 751:
#line 1806 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (5)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 752:
#line 1814 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
											   (yylsp[(2) - (7)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (7)].node), (PGNode *) n, (yylsp[(2) - (7)]));
				;}
    break;

  case 753:
#line 1832 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 754:
#line 1840 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 755:
#line 1848 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 756:
#line 1856 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 757:
#line 1864 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 758:
#line 1871 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("row"), (yyvsp[(1) - (1)].list), (yylsp[(1) - (1)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 759:
#line 1876 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGLambdaFunction *n = makeNode(PGLambdaFunction);
				n->parameters = (yyvsp[(1) - (3)].list);
				n->function = (yyvsp[(3) - (3)].node);
				n->location = (yylsp[(2) - (3)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 760:
#line 1884 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGLambdaFunction *n = makeNode(PGLambdaFunction);
				n->parameters = list_make1((yyvsp[(1) - (3)].node));
				n->function = (yyvsp[(3) - (3)].node);
				n->location = (yylsp[(2) - (3)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 761:
#line 1892 "third_party/libpg_query/grammar/statements/select.y"
    {
					if (list_length((yyvsp[(1) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on left side of OVERLAPS expression"),
								 parser_errposition((yylsp[(1) - (3)]))));
					if (list_length((yyvsp[(3) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on right side of OVERLAPS expression"),
								 parser_errposition((yylsp[(3) - (3)]))));
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlaps"),
											   list_concat((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)),
											   (yylsp[(2) - (3)]));
				;}
    break;

  case 762:
#line 1908 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = PG_IS_TRUE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 763:
#line 1916 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_TRUE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 764:
#line 1924 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_FALSE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 765:
#line 1932 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_FALSE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 766:
#line 1940 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_UNKNOWN;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 767:
#line 1948 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_UNKNOWN;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 768:
#line 1956 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 769:
#line 1960 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 770:
#line 1964 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 771:
#line 1968 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 772:
#line 1972 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN,
												   "BETWEEN",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 773:
#line 1980 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN,
												   "NOT BETWEEN",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 774:
#line 1988 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN_SYM,
												   "BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 775:
#line 1996 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN_SYM,
												   "NOT BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 776:
#line 2004 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(3) - (3)].node), PGSubLink))
					{
						/* generate foo = ANY (subquery) */
						PGSubLink *n = (PGSubLink *) (yyvsp[(3) - (3)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (3)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (3)]);
						(yyval.node) = (PGNode *)n;
					}
					else
					{
						/* generate scalar IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
					}
				;}
    break;

  case 777:
#line 2024 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(4) - (4)].node), PGSubLink))
					{
						/* generate NOT (foo = ANY (subquery)) */
						/* Make an = ANY node */
						PGSubLink *n = (PGSubLink *) (yyvsp[(4) - (4)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (4)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (4)]);
						/* Stick a NOT on top; must have same parse location */
						(yyval.node) = makeNotExpr((PGNode *) n, (yylsp[(2) - (4)]));
					}
					else
					{
						/* generate scalar NOT IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "<>", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
					}
				;}
    break;

  case 778:
#line 2046 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = (yyvsp[(3) - (4)].subquerytype);
					n->subLinkId = 0;
					n->testexpr = (yyvsp[(1) - (4)].node);
					n->operName = (yyvsp[(2) - (4)].list);
					n->subselect = (yyvsp[(4) - (4)].node);
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 779:
#line 2057 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(3) - (6)].subquerytype) == PG_ANY_SUBLINK)
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ANY, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
					else
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ALL, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 780:
#line 2064 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * The SQL spec only allows DEFAULT in "contextually typed
					 * expressions", but for us, it's easier to allow it in
					 * any a_expr and then throw error during parse analysis
					 * if it's in an inappropriate context.  This way also
					 * lets us say something smarter than "syntax error".
					 */
					PGSetToDefault *n = makeNode(PGSetToDefault);
					/* parse analysis will fill in the rest */
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 781:
#line 2089 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 782:
#line 2091 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), (yylsp[(2) - (3)])); ;}
    break;

  case 783:
#line 2093 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 784:
#line 2095 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 785:
#line 2097 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 786:
#line 2099 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 787:
#line 2101 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 788:
#line 2103 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 789:
#line 2105 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 790:
#line 2107 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 791:
#line 2109 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 792:
#line 2111 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 793:
#line 2113 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 794:
#line 2115 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 795:
#line 2117 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 796:
#line 2119 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 797:
#line 2121 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 798:
#line 2123 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 799:
#line 2125 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 800:
#line 2127 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 801:
#line 2131 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 802:
#line 2135 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 803:
#line 2139 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 804:
#line 2152 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 805:
#line 2153 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 806:
#line 2155 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeParamRef(0, (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeParamRef(0, (yylsp[(1) - (2)]));
				;}
    break;

  case 807:
#line 2167 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGParamRef *p = makeNode(PGParamRef);
					p->number = (yyvsp[(1) - (2)].ival);
					p->location = (yylsp[(1) - (2)]);
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (PGNode *) p;
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = (PGNode *) p;
				;}
    break;

  case 808:
#line 2182 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(4) - (4)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(2) - (4)].node);
						n->indirection = check_indirection((yyvsp[(4) - (4)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else
						(yyval.node) = (yyvsp[(2) - (4)].node);
				;}
    break;

  case 809:
#line 2194 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 810:
#line 2196 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 811:
#line 2198 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (1)].node);
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 812:
#line 2209 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Because the select_with_parens nonterminal is designed
					 * to "eat" as many levels of parens as possible, the
					 * '(' a_expr ')' opt_indirection production above will
					 * fail to match a sub-SELECT with indirection decoration;
					 * the sub-SELECT won't be regarded as an a_expr as long
					 * as there are parens around it.  To support applying
					 * subscripting or field selection to a sub-SELECT result,
					 * we need this redundant-looking production.
					 */
					PGSubLink *n = makeNode(PGSubLink);
					PGAIndirection *a = makeNode(PGAIndirection);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					a->arg = (PGNode *)n;
					a->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.node) = (PGNode *)a;
				;}
    break;

  case 813:
#line 2233 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXISTS_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(2) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 814:
#line 2246 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall((yyvsp[(1) - (3)].list), NIL, (yylsp[(1) - (3)]));
				;}
    break;

  case 815:
#line 2250 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (5)].list), (yyvsp[(3) - (5)].list), (yylsp[(1) - (5)]));
					n->agg_order = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 816:
#line 2256 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), list_make1((yyvsp[(4) - (6)].node)), (yylsp[(1) - (6)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(5) - (6)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 817:
#line 2263 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (8)].list), lappend((yyvsp[(3) - (8)].list), (yyvsp[(6) - (8)].node)), (yylsp[(1) - (8)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(7) - (8)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 818:
#line 2270 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(4) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(5) - (6)].list);
					/* Ideally we'd mark the PGFuncCall node to indicate
					 * "must be an aggregate", but there's no provision
					 * for that in PGFuncCall at the moment.
					 */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 819:
#line 2280 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(4) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(5) - (6)].list);
					n->agg_distinct = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 820:
#line 2287 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * We consider AGGREGATE(*) to invoke a parameterless
					 * aggregate.  This does the right thing for COUNT(*),
					 * and there are no other aggregates in SQL that accept
					 * '*' as parameter.
					 *
					 * The PGFuncCall node is also marked agg_star = true,
					 * so that later processing can detect what the argument
					 * really was.
					 */
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (4)].list), NIL, (yylsp[(1) - (4)]));
					n->agg_star = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 821:
#line 2315 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = (PGFuncCall *) (yyvsp[(1) - (4)].node);
					/*
					 * The order clause for WITHIN GROUP and the one for
					 * plain-aggregate ORDER BY share a field, so we have to
					 * check here that at most one is present.  We also check
					 * for DISTINCT and VARIADIC here to give a better error
					 * location.  Other consistency checks are deferred to
					 * parse analysis.
					 */
					if ((yyvsp[(2) - (4)].list) != NIL)
					{
						if (n->agg_order != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use multiple ORDER BY clauses with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->agg_distinct)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use DISTINCT with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->func_variadic)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use VARIADIC with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						n->agg_order = (yyvsp[(2) - (4)].list);
						n->agg_within_group = true;
					}
					n->agg_filter = (yyvsp[(3) - (4)].node);
					n->over = (yyvsp[(4) - (4)].windef);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 822:
#line 2350 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 823:
#line 2360 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 824:
#line 2361 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 825:
#line 2369 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("pg_collation_for"),
											   list_make1((yyvsp[(4) - (5)].node)),
											   (yylsp[(1) - (5)]));
				;}
    break;

  case 826:
#line 2375 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_DATE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 827:
#line 2379 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 828:
#line 2383 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 829:
#line 2387 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 830:
#line 2391 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 831:
#line 2395 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 832:
#line 2399 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 833:
#line 2403 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 834:
#line 2407 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 835:
#line 2411 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_ROLE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 836:
#line 2415 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 837:
#line 2419 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_SESSION_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 838:
#line 2423 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 839:
#line 2427 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_CATALOG, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 840:
#line 2431 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_SCHEMA, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 841:
#line 2435 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), (yylsp[(1) - (6)])); ;}
    break;

  case 842:
#line 2437 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("date_part"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 843:
#line 2441 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* overlay(A PLACING B FROM C FOR D) is converted to
					 * overlay(A, B, C, D)
					 * overlay(A PLACING B FROM C) is converted to
					 * overlay(A, B, C)
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlay"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 844:
#line 2450 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* position(A in B) is converted to position(B, A) */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("position"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 845:
#line 2455 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* substring(A from B for C) is converted to
					 * substring(A, B, C) - thomas 2000-11-28
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("substring"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 846:
#line 2462 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* TREAT(expr AS target) converts expr of a particular type to target,
					 * which is defined to be a subtype of the original expression.
					 * In SQL99, this is intended for use with structured UDTs,
					 * but let's make this a generally useful form allowing stronger
					 * coercions than are handled by implicit casting.
					 *
					 * Convert SystemTypeName() to SystemFuncName() even though
					 * at the moment they result in the same thing.
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName(((PGValue *)llast((yyvsp[(5) - (6)].typnam)->names))->val.str),
												list_make1((yyvsp[(3) - (6)].node)),
												(yylsp[(1) - (6)]));
				;}
    break;

  case 847:
#line 2477 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* various trim expressions are defined in SQL
					 * - thomas 1997-07-19
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 848:
#line 2484 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("ltrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 849:
#line 2488 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("rtrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 850:
#line 2492 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 851:
#line 2496 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NULLIF, "=", (yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(1) - (6)]));
				;}
    break;

  case 852:
#line 2500 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCoalesceExpr *c = makeNode(PGCoalesceExpr);
					c->args = (yyvsp[(3) - (4)].list);
					c->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 853:
#line 2513 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 854:
#line 2514 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 855:
#line 2518 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(4) - (5)].node); ;}
    break;

  case 856:
#line 2519 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 857:
#line 2527 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 858:
#line 2528 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 859:
#line 2532 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].windef)); ;}
    break;

  case 860:
#line 2534 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].windef)); ;}
    break;

  case 861:
#line 2539 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(3) - (3)].windef);
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.windef) = n;
				;}
    break;

  case 862:
#line 2547 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = (yyvsp[(2) - (2)].windef); ;}
    break;

  case 863:
#line 2549 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = (yyvsp[(2) - (2)].str);
					n->refname = NULL;
					n->partitionClause = NIL;
					n->orderClause = NIL;
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.windef) = n;
				;}
    break;

  case 864:
#line 2562 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = NULL; ;}
    break;

  case 865:
#line 2567 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = NULL;
					n->refname = (yyvsp[(2) - (6)].str);
					n->partitionClause = (yyvsp[(3) - (6)].list);
					n->orderClause = (yyvsp[(4) - (6)].list);
					/* copy relevant fields of opt_frame_clause */
					n->frameOptions = (yyvsp[(5) - (6)].windef)->frameOptions;
					n->startOffset = (yyvsp[(5) - (6)].windef)->startOffset;
					n->endOffset = (yyvsp[(5) - (6)].windef)->endOffset;
					n->location = (yylsp[(1) - (6)]);
					(yyval.windef) = n;
				;}
    break;

  case 866:
#line 2592 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 867:
#line 2593 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 868:
#line 2596 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 869:
#line 2597 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 870:
#line 2609 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_RANGE;
					if (n->frameOptions & (FRAMEOPTION_START_VALUE_PRECEDING |
										   FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("RANGE PRECEDING is only supported with UNBOUNDED"),
								 parser_errposition((yylsp[(1) - (2)]))));
					if (n->frameOptions & (FRAMEOPTION_START_VALUE_FOLLOWING |
										   FRAMEOPTION_END_VALUE_FOLLOWING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("RANGE FOLLOWING is only supported with UNBOUNDED"),
								 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.windef) = n;
				;}
    break;

  case 871:
#line 2627 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_ROWS;
					(yyval.windef) = n;
				;}
    break;

  case 872:
#line 2633 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 873:
#line 2643 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(1) - (1)].windef);
					/* reject invalid cases */
					if (n->frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(1) - (1)]))));
					if (n->frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot end with current row"),
								 parser_errposition((yylsp[(1) - (1)]))));
					n->frameOptions |= FRAMEOPTION_END_CURRENT_ROW;
					(yyval.windef) = n;
				;}
    break;

  case 874:
#line 2660 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n1 = (yyvsp[(2) - (4)].windef);
					PGWindowDef *n2 = (yyvsp[(4) - (4)].windef);
					/* form merged options */
					int		frameOptions = n1->frameOptions;
					/* shift converts START_ options to END_ options */
					frameOptions |= n2->frameOptions << 1;
					frameOptions |= FRAMEOPTION_BETWEEN;
					/* reject invalid cases */
					if (frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(2) - (4)]))));
					if (frameOptions & FRAMEOPTION_END_UNBOUNDED_PRECEDING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame end cannot be UNBOUNDED PRECEDING"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_CURRENT_ROW) &&
						(frameOptions & FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from current row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING) &&
						(frameOptions & (FRAMEOPTION_END_VALUE_PRECEDING |
										 FRAMEOPTION_END_CURRENT_ROW)))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					n1->frameOptions = frameOptions;
					n1->endOffset = n2->startOffset;
					(yyval.windef) = n1;
				;}
    break;

  case 875:
#line 2705 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_PRECEDING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 876:
#line 2713 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_FOLLOWING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 877:
#line 2721 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_CURRENT_ROW;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 878:
#line 2729 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_PRECEDING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 879:
#line 2737 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_FOLLOWING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 880:
#line 2757 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 881:
#line 2758 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 882:
#line 2761 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 883:
#line 2762 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(2) - (5)].list), (yyvsp[(4) - (5)].node)); ;}
    break;

  case 884:
#line 2765 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 885:
#line 2766 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 886:
#line 2767 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ALL_SUBLINK; ;}
    break;

  case 887:
#line 2770 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 888:
#line 2771 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) (yyvsp[(1) - (1)].conststr); ;}
    break;

  case 889:
#line 2774 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "+"; ;}
    break;

  case 890:
#line 2775 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "-"; ;}
    break;

  case 891:
#line 2776 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "*"; ;}
    break;

  case 892:
#line 2777 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "/"; ;}
    break;

  case 893:
#line 2778 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "%"; ;}
    break;

  case 894:
#line 2779 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "^"; ;}
    break;

  case 895:
#line 2780 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<"; ;}
    break;

  case 896:
#line 2781 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">"; ;}
    break;

  case 897:
#line 2782 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "="; ;}
    break;

  case 898:
#line 2783 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<="; ;}
    break;

  case 899:
#line 2784 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">="; ;}
    break;

  case 900:
#line 2785 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<>"; ;}
    break;

  case 901:
#line 2789 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 902:
#line 2791 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 903:
#line 2796 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 904:
#line 2798 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 905:
#line 2803 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 906:
#line 2805 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 907:
#line 2807 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~")); ;}
    break;

  case 908:
#line 2809 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~")); ;}
    break;

  case 909:
#line 2811 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~~")); ;}
    break;

  case 910:
#line 2813 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~~")); ;}
    break;

  case 911:
#line 2815 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~*")); ;}
    break;

  case 912:
#line 2817 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~*")); ;}
    break;

  case 913:
#line 2831 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 914:
#line 2833 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 915:
#line 2837 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 916:
#line 2841 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 917:
#line 2848 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 918:
#line 2852 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 919:
#line 2858 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 920:
#line 2862 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 921:
#line 2871 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 922:
#line 2881 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 923:
#line 2882 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 924:
#line 2887 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(makeStringConst((yyvsp[(1) - (3)].str), (yylsp[(1) - (3)])), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 925:
#line 2890 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 926:
#line 2897 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 927:
#line 2898 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "year"; ;}
    break;

  case 928:
#line 2899 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "month"; ;}
    break;

  case 929:
#line 2900 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "day"; ;}
    break;

  case 930:
#line 2901 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "hour"; ;}
    break;

  case 931:
#line 2902 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "minute"; ;}
    break;

  case 932:
#line 2903 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "second"; ;}
    break;

  case 933:
#line 2904 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "millisecond"; ;}
    break;

  case 934:
#line 2905 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "microsecond"; ;}
    break;

  case 935:
#line 2906 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 936:
#line 2917 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make4((yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].node), (yyvsp[(3) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 937:
#line 2921 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 938:
#line 2928 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 939:
#line 2934 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(3) - (3)].node), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 940:
#line 2935 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 941:
#line 2952 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 942:
#line 2956 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* not legal per SQL99, but might as well allow it */
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yyvsp[(2) - (3)].node));
				;}
    break;

  case 943:
#line 2961 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 944:
#line 2965 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Since there are no cases where this syntax allows
					 * a textual FOR value, we forcibly cast the argument
					 * to int4.  The possible matches in pg_proc are
					 * substring(text,int4) and substring(text,text),
					 * and we don't want the parser to choose the latter,
					 * which it is likely to do if the second argument
					 * is unknown or doesn't have an implicit cast to int4.
					 */
					(yyval.list) = list_make3((yyvsp[(1) - (2)].node), makeIntConst(1, -1),
									makeTypeCast((yyvsp[(2) - (2)].node),
												 SystemTypeName("int4"), -1));
				;}
    break;

  case 945:
#line 2980 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 946:
#line 2984 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 947:
#line 2988 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 948:
#line 2991 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 949:
#line 2994 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(3) - (3)].list), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 950:
#line 2995 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 951:
#line 2996 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 952:
#line 3000 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subselect = (yyvsp[(1) - (1)].node);
					/* other fields will be filled later */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 953:
#line 3006 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *)(yyvsp[(2) - (3)].list); ;}
    break;

  case 954:
#line 3017 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseExpr *c = makeNode(PGCaseExpr);
					c->casetype = InvalidOid; /* not analyzed yet */
					c->arg = (PGExpr *) (yyvsp[(2) - (5)].node);
					c->args = (yyvsp[(3) - (5)].list);
					c->defresult = (PGExpr *) (yyvsp[(4) - (5)].node);
					c->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 955:
#line 3030 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 956:
#line 3031 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 957:
#line 3036 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseWhen *w = makeNode(PGCaseWhen);
					w->expr = (PGExpr *) (yyvsp[(2) - (4)].node);
					w->result = (PGExpr *) (yyvsp[(4) - (4)].node);
					w->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)w;
				;}
    break;

  case 958:
#line 3046 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 959:
#line 3047 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 960:
#line 3050 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 961:
#line 3051 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 962:
#line 3055 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (1)].str), NIL, (yylsp[(1) - (1)]), yyscanner);
				;}
    break;

  case 963:
#line 3059 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].list), (yylsp[(1) - (2)]), yyscanner);
				;}
    break;

  case 964:
#line 3066 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(2) - (2)].str));
				;}
    break;

  case 965:
#line 3070 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeNode(PGAStar);
				;}
    break;

  case 966:
#line 3074 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = false;
					ai->lidx = NULL;
					ai->uidx = (yyvsp[(2) - (3)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 967:
#line 3082 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = true;
					ai->lidx = (yyvsp[(2) - (5)].node);
					ai->uidx = (yyvsp[(4) - (5)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 968:
#line 3092 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 969:
#line 3093 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 970:
#line 3097 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 971:
#line 3098 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 972:
#line 3102 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 973:
#line 3103 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 976:
#line 3117 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 977:
#line 3118 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 978:
#line 3122 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 979:
#line 3123 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 980:
#line 3127 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(3) - (3)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (3)].node);
					(yyval.target)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 981:
#line 3143 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(2) - (2)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (2)].node);
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 982:
#line 3151 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (1)].node);
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 983:
#line 3159 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnRef *n = makeNode(PGColumnRef);
					n->fields = list_make1(makeNode(PGAStar));
					n->location = (yylsp[(1) - (1)]);

					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)n;
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 984:
#line 3180 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].range)); ;}
    break;

  case 985:
#line 3181 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].range)); ;}
    break;

  case 986:
#line 3193 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = makeRangeVar(NULL, (yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 987:
#line 3197 "third_party/libpg_query/grammar/statements/select.y"
    {
					check_qualified_name((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.range) = makeRangeVar(NULL, NULL, (yylsp[(1) - (2)]));
					switch (list_length((yyvsp[(2) - (2)].list)))
					{
						case 1:
							(yyval.range)->catalogname = NULL;
							(yyval.range)->schemaname = (yyvsp[(1) - (2)].str);
							(yyval.range)->relname = strVal(linitial((yyvsp[(2) - (2)].list)));
							break;
						case 2:
							(yyval.range)->catalogname = (yyvsp[(1) - (2)].str);
							(yyval.range)->schemaname = strVal(linitial((yyvsp[(2) - (2)].list)));
							(yyval.range)->relname = strVal(lsecond((yyvsp[(2) - (2)].list)));
							break;
						default:
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("improper qualified name (too many dotted names): %s",
											NameListToString(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)))),
									 parser_errposition((yylsp[(1) - (2)]))));
							break;
					}
				;}
    break;

  case 988:
#line 3224 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 989:
#line 3226 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 990:
#line 3230 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 991:
#line 3232 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 992:
#line 3243 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 993:
#line 3245 "third_party/libpg_query/grammar/statements/select.y"
    {
						(yyval.list) = check_func_name(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)),
											 yyscanner);
					;}
    break;

  case 994:
#line 3256 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival), (yylsp[(1) - (1)]));
				;}
    break;

  case 995:
#line 3260 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 996:
#line 3264 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 997:
#line 3268 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 998:
#line 3272 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* This is a bit constant per SQL99:
					 * Without Feature F511, "BIT data type",
					 * a <general literal> shall not be a
					 * <bit string literal> or a <hex string literal>.
					 */
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 999:
#line 3281 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic type 'literal' syntax */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (2)].list));
					t->location = (yylsp[(1) - (2)]);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), t);
				;}
    break;

  case 1000:
#line 3288 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic syntax with a type modifier */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (6)].list));
					PGListCell *lc;

					/*
					 * We must use func_arg_list and opt_sort_clause in the
					 * production to avoid reduce/reduce conflicts, but we
					 * don't actually wish to allow PGNamedArgExpr in this
					 * context, nor ORDER BY.
					 */
					foreach(lc, (yyvsp[(3) - (6)].list))
					{
						PGNamedArgExpr *arg = (PGNamedArgExpr *) lfirst(lc);

						if (IsA(arg, PGNamedArgExpr))
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have parameter name"),
									 parser_errposition(arg->location)));
					}
					if ((yyvsp[(4) - (6)].list) != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have ORDER BY"),
									 parser_errposition((yylsp[(4) - (6)]))));

					t->typmods = (yyvsp[(3) - (6)].list);
					t->location = (yylsp[(1) - (6)]);
					(yyval.node) = makeStringConstCast((yyvsp[(6) - (6)].str), (yylsp[(6) - (6)]), t);
				;}
    break;

  case 1001:
#line 3320 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), (yyvsp[(1) - (2)].typnam));
				;}
    break;

  case 1002:
#line 3324 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(3) - (5)].node), (yylsp[(3) - (5)]), (yyvsp[(5) - (5)].list));
				;}
    break;

  case 1003:
#line 3328 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].ival), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 1004:
#line 3332 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 1005:
#line 3336 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(true, (yylsp[(1) - (1)]));
				;}
    break;

  case 1006:
#line 3340 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(false, (yylsp[(1) - (1)]));
				;}
    break;

  case 1007:
#line 3344 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 1008:
#line 3349 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1009:
#line 3350 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1010:
#line 3366 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1011:
#line 3367 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1012:
#line 3368 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1013:
#line 3371 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1014:
#line 3372 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1015:
#line 3377 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1016:
#line 3378 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1017:
#line 3379 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1018:
#line 3382 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1019:
#line 3383 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 1020:
#line 3387 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
    break;

  case 1021:
#line 3389 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1022:
#line 3393 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1023:
#line 3394 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1025:
#line 3405 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1026:
#line 3406 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1027:
#line 3407 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1028:
#line 3408 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1029:
#line 3409 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1030:
#line 3412 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1031:
#line 3413 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1032:
#line 8 "third_party/libpg_query/grammar/statements/prepare.y"
    {
					PGPrepareStmt *n = makeNode(PGPrepareStmt);
					n->name = (yyvsp[(2) - (5)].str);
					n->argtypes = (yyvsp[(3) - (5)].list);
					n->query = (yyvsp[(5) - (5)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1033:
#line 18 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1034:
#line 19 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1039:
#line 8 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not both */
					n->schemaname = (yyvsp[(3) - (4)].str);
					n->schemaElts = (yyvsp[(4) - (4)].list);
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1040:
#line 17 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not here */
					n->schemaname = (yyvsp[(6) - (7)].str);
					if ((yyvsp[(7) - (7)].list) != NIL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("CREATE SCHEMA IF NOT EXISTS cannot include schema elements"),
								 parser_errposition((yylsp[(7) - (7)]))));
					n->schemaElts = (yyvsp[(7) - (7)].list);
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1041:
#line 35 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					if ((yyloc) < 0)			/* see comments for YYLLOC_DEFAULT */
						(yyloc) = (yylsp[(2) - (2)]);
					(yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 1042:
#line 41 "third_party/libpg_query/grammar/statements/create_schema.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1047:
#line 11 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (13)].boolean);
					n->concurrent = (yyvsp[(4) - (13)].boolean);
					n->idxname = (yyvsp[(5) - (13)].str);
					n->relation = (yyvsp[(7) - (13)].range);
					n->accessMethod = (yyvsp[(8) - (13)].str);
					n->indexParams = (yyvsp[(10) - (13)].list);
					n->options = (yyvsp[(12) - (13)].list);
					n->whereClause = (yyvsp[(13) - (13)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1048:
#line 36 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (16)].boolean);
					n->concurrent = (yyvsp[(4) - (16)].boolean);
					n->idxname = (yyvsp[(8) - (16)].str);
					n->relation = (yyvsp[(10) - (16)].range);
					n->accessMethod = (yyvsp[(11) - (16)].str);
					n->indexParams = (yyvsp[(13) - (16)].list);
					n->options = (yyvsp[(15) - (16)].list);
					n->whereClause = (yyvsp[(16) - (16)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1049:
#line 62 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1050:
#line 66 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
    break;

  case 1051:
#line 67 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (char*) DEFAULT_INDEX_TYPE; ;}
    break;

  case 1052:
#line 72 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1053:
#line 73 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1054:
#line 78 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1055:
#line 79 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = NULL; ;}
    break;

  case 1056:
#line 83 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1057:
#line 84 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1058:
#line 89 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1059:
#line 90 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1060:
#line 8 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1061:
#line 17 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1062:
#line 26 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1063:
#line 35 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1064:
#line 44 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1065:
#line 53 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1066:
#line 6 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1067:
#line 8 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGExportStmt *n = makeNode(PGExportStmt);
					n->filename = (yyvsp[(3) - (4)].str);
					n->options = NIL;
					if ((yyvsp[(4) - (4)].list)) {
						n->options = list_concat(n->options, (yyvsp[(4) - (4)].list));
					}
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1068:
#line 21 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGImportStmt *n = makeNode(PGImportStmt);
					n->filename = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1069:
#line 10 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(2) - (2)].node);
					n->options = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1070:
#line 17 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(4) - (4)].node);
					n->options = list_make1(makeDefElem("analyze", NULL, (yylsp[(2) - (4)])));
					if ((yyvsp[(3) - (4)].boolean))
						n->options = lappend(n->options,
											 makeDefElem("verbose", NULL, (yylsp[(3) - (4)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1071:
#line 27 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(3) - (3)].node);
					n->options = list_make1(makeDefElem("verbose", NULL, (yylsp[(2) - (3)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1072:
#line 34 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(5) - (5)].node);
					n->options = (yyvsp[(3) - (5)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1073:
#line 44 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1074:
#line 45 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1075:
#line 50 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 1076:
#line 51 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 1077:
#line 52 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1083:
#line 65 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1084:
#line 66 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1085:
#line 67 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1086:
#line 68 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1087:
#line 73 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1088:
#line 74 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1089:
#line 80 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 1090:
#line 84 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 1091:
#line 91 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1092:
#line 92 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1093:
#line 97 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "true"; ;}
    break;

  case 1094:
#line 98 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "false"; ;}
    break;

  case 1095:
#line 99 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "on"; ;}
    break;

  case 1096:
#line 105 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1097:
#line 111 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 1098:
#line 118 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1099:
#line 119 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "analyze"; ;}
    break;

  case 1100:
#line 11 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(2) - (2)].vsetstmt);
					n->is_local = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1101:
#line 17 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->is_local = true;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1102:
#line 23 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->is_local = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1103:
#line 32 "third_party/libpg_query/grammar/statements/variable_set.y"
    {(yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt);;}
    break;

  case 1104:
#line 34 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_CURRENT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1105:
#line 42 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "timezone";
					if ((yyvsp[(3) - (3)].node) != NULL)
						n->args = list_make1((yyvsp[(3) - (3)].node));
					else
						n->kind = VAR_SET_DEFAULT;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1106:
#line 53 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "search_path";
					n->args = list_make1(makeStringConst((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)])));
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1107:
#line 65 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1108:
#line 73 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1109:
#line 81 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1110:
#line 88 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1111:
#line 98 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)])); ;}
    break;

  case 1112:
#line 100 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1113:
#line 106 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1114:
#line 110 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1115:
#line 114 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (3)].typnam);
					if ((yyvsp[(3) - (3)].list) != NIL)
					{
						PGAConst *n = (PGAConst *) linitial((yyvsp[(3) - (3)].list));
						if ((n->val.val.ival & ~(INTERVAL_MASK(HOUR) | INTERVAL_MASK(MINUTE))) != 0)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("time zone interval must be HOUR or HOUR TO MINUTE"),
									 parser_errposition((yylsp[(3) - (3)]))));
					}
					t->typmods = (yyvsp[(3) - (3)].list);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
				;}
    break;

  case 1116:
#line 129 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (5)].typnam);
					t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.node) = makeStringConstCast((yyvsp[(5) - (5)].str), (yylsp[(5) - (5)]), t);
				;}
    break;

  case 1117:
#line 135 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1118:
#line 136 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1119:
#line 137 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1120:
#line 141 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1121:
#line 142 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 1122:
#line 8 "third_party/libpg_query/grammar/statements/load.y"
    {
					PGLoadStmt *n = makeNode(PGLoadStmt);
					n->filename = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1123:
#line 16 "third_party/libpg_query/grammar/statements/load.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1124:
#line 9 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (4)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1125:
#line 23 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(5) - (5)].range);
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1126:
#line 37 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = (PGVacuumStmt *) (yyvsp[(5) - (5)].node);
					n->options |= PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1127:
#line 49 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (4)].ival);
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1128:
#line 57 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (6)].ival);
					n->relation = (yyvsp[(5) - (6)].range);
					n->va_cols = (yyvsp[(6) - (6)].list);
					if (n->va_cols != NIL)	/* implies analyze */
						n->options |= PG_VACOPT_ANALYZE;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1129:
#line 70 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_ANALYZE; ;}
    break;

  case 1130:
#line 71 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_VERBOSE; ;}
    break;

  case 1131:
#line 72 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FREEZE; ;}
    break;

  case 1132:
#line 73 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FULL; ;}
    break;

  case 1133:
#line 75 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					if (strcmp((yyvsp[(1) - (1)].str), "disable_page_skipping") == 0)
						(yyval.ival) = PG_VACOPT_DISABLE_PAGE_SKIPPING;
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("unrecognized VACUUM option \"%s\"", (yyvsp[(1) - (1)].str)),
									 parser_errposition((yylsp[(1) - (1)]))));
				;}
    break;

  case 1134:
#line 87 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1135:
#line 88 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1136:
#line 93 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1137:
#line 94 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 1138:
#line 98 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1139:
#line 99 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1140:
#line 9 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGDeleteStmt *n = makeNode(PGDeleteStmt);
					n->relation = (yyvsp[(4) - (7)].range);
					n->usingClause = (yyvsp[(5) - (7)].list);
					n->whereClause = (yyvsp[(6) - (7)].node);
					n->returningList = (yyvsp[(7) - (7)].list);
					n->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1141:
#line 22 "third_party/libpg_query/grammar/statements/delete.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 1142:
#line 26 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(2) - (2)].str);
					(yyvsp[(1) - (2)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (2)].range);
				;}
    break;

  case 1143:
#line 33 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(3) - (3)].str);
					(yyvsp[(1) - (3)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 1144:
#line 43 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1145:
#line 44 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1146:
#line 50 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1147:
#line 51 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1148:
#line 10 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (2)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1149:
#line 20 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(3) - (4)].range);
					n->va_cols = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1150:
#line 2 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (2)].vsetstmt); ;}
    break;

  case 1151:
#line 8 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (yyvsp[(1) - (1)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1152:
#line 15 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET_ALL;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1153:
#line 24 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt); ;}
    break;

  case 1154:
#line 26 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "timezone";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1155:
#line 33 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "transaction_isolation";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1156:
#line 3 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowSelectStmt *n = makeNode(PGVariableShowSelectStmt);
				n->stmt = (yyvsp[(2) - (2)].node);
				n->name = (char*) "select";
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1157:
#line 11 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1158:
#line 17 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "timezone";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1159:
#line 23 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "transaction_isolation";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1160:
#line 29 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "all";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1163:
#line 39 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1164:
#line 41 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = psprintf("%s.%s", (yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str)); ;}
    break;

  case 1165:
#line 7 "third_party/libpg_query/grammar/statements/call.y"
    {
					PGCallStmt *n = makeNode(PGCallStmt);
					n->func = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1166:
#line 10 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(4) - (9)].range);
					n->view->relpersistence = (yyvsp[(2) - (9)].ival);
					n->aliases = (yyvsp[(5) - (9)].list);
					n->query = (yyvsp[(8) - (9)].node);
					n->replace = false;
					n->options = (yyvsp[(6) - (9)].list);
					n->withCheckOption = (yyvsp[(9) - (9)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1167:
#line 23 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(6) - (11)].range);
					n->view->relpersistence = (yyvsp[(4) - (11)].ival);
					n->aliases = (yyvsp[(7) - (11)].list);
					n->query = (yyvsp[(10) - (11)].node);
					n->replace = true;
					n->options = (yyvsp[(8) - (11)].list);
					n->withCheckOption = (yyvsp[(11) - (11)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1168:
#line 36 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(5) - (12)].range);
					n->view->relpersistence = (yyvsp[(2) - (12)].ival);
					n->aliases = (yyvsp[(7) - (12)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(11) - (12)].node));
					n->replace = false;
					n->options = (yyvsp[(9) - (12)].list);
					n->withCheckOption = (yyvsp[(12) - (12)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(12) - (12)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1169:
#line 54 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(7) - (14)].range);
					n->view->relpersistence = (yyvsp[(4) - (14)].ival);
					n->aliases = (yyvsp[(9) - (14)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(13) - (14)].node));
					n->replace = true;
					n->options = (yyvsp[(11) - (14)].list);
					n->withCheckOption = (yyvsp[(14) - (14)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(14) - (14)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1170:
#line 74 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1171:
#line 75 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1172:
#line 76 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_LOCAL_CHECK_OPTION; ;}
    break;

  case 1173:
#line 77 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_NO_CHECK_OPTION; ;}
    break;

  case 1174:
#line 12 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(6) - (7)].node);
					ctas->into = (yyvsp[(4) - (7)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = false;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (7)].into)->rel->relpersistence = (yyvsp[(2) - (7)].ival);
					(yyvsp[(4) - (7)].into)->skipData = !((yyvsp[(7) - (7)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1175:
#line 25 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(9) - (10)].node);
					ctas->into = (yyvsp[(7) - (10)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = true;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (10)].into)->rel->relpersistence = (yyvsp[(2) - (10)].ival);
					(yyvsp[(7) - (10)].into)->skipData = !((yyvsp[(10) - (10)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1176:
#line 41 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1177:
#line 42 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1178:
#line 43 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1179:
#line 49 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(1) - (4)].range);
					(yyval.into)->colNames = (yyvsp[(2) - (4)].list);
					(yyval.into)->options = (yyvsp[(3) - (4)].list);
					(yyval.into)->onCommit = (yyvsp[(4) - (4)].oncommit);
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;		/* might get changed later */
				;}
    break;


/* Line 1267 of yacc.c.  */
#line 22868 "third_party/libpg_query/grammar/grammar_out.cpp"
      default: break;
    }
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, yyscanner, YY_("syntax error"));
#else
      {
	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
	  {
	    YYSIZE_T yyalloc = 2 * yysize;
	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
	    if (yymsg != yymsgbuf)
	      YYSTACK_FREE (yymsg);
	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
	    if (yymsg)
	      yymsg_alloc = yyalloc;
	    else
	      {
		yymsg = yymsgbuf;
		yymsg_alloc = sizeof yymsgbuf;
	      }
	  }

	if (0 < yysize && yysize <= yymsg_alloc)
	  {
	    (void) yysyntax_error (yymsg, yystate, yychar);
	    yyerror (&yylloc, yyscanner, yymsg);
	  }
	else
	  {
	    yyerror (&yylloc, yyscanner, YY_("syntax error"));
	    if (yysize != 0)
	      goto yyexhaustedlab;
	  }
      }
#endif
    }

  yyerror_range[0] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse look-ahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
	{
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
	}
      else
	{
	  yydestruct ("Error: discarding",
		      yytoken, &yylval, &yylloc, yyscanner);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse look-ahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[0] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule which action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (yyn != YYPACT_NINF)
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;

      yyerror_range[0] = *yylsp;
      yydestruct ("Error: popping",
		  yystos[yystate], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  *++yyvsp = yylval;

  yyerror_range[1] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the look-ahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, (yyerror_range - 1), 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#ifndef yyoverflow
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, yyscanner, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEOF && yychar != YYEMPTY)
     yydestruct ("Cleanup: discarding lookahead",
		 yytoken, &yylval, &yylloc, yyscanner);
  /* Do not reclaim the symbols of the rule which action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  /* Make sure YYID is used.  */
  return YYID (yyresult);
}


#line 67 "third_party/libpg_query/grammar/statements/create_as.y"


#line 1 "third_party/libpg_query/grammar/grammar.cpp"
/*
 * The signature of this function is required by bison.  However, we
 * ignore the passed yylloc and instead use the last token position
 * available from the scanner.
 */
static void
base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner, const char *msg)
{
	parser_yyerror(msg);
}

static PGRawStmt *
makeRawStmt(PGNode *stmt, int stmt_location)
{
	PGRawStmt    *rs = makeNode(PGRawStmt);

	rs->stmt = stmt;
	rs->stmt_location = stmt_location;
	rs->stmt_len = 0;			/* might get changed later */
	return rs;
}

/* Adjust a PGRawStmt to reflect that it doesn't run to the end of the string */
static void
updateRawStmtEnd(PGRawStmt *rs, int end_location)
{
	/*
	 * If we already set the length, don't change it.  This is for situations
	 * like "select foo ;; select bar" where the same statement will be last
	 * in the string for more than one semicolon.
	 */
	if (rs->stmt_len > 0)
		return;

	/* OK, update length of PGRawStmt */
	rs->stmt_len = end_location - rs->stmt_location;
}

static PGNode *
makeColumnRef(char *colname, PGList *indirection,
			  int location, core_yyscan_t yyscanner)
{
	/*
	 * Generate a PGColumnRef node, with an PGAIndirection node added if there
	 * is any subscripting in the specified indirection list.  However,
	 * any field selection at the start of the indirection list must be
	 * transposed into the "fields" part of the PGColumnRef node.
	 */
	PGColumnRef  *c = makeNode(PGColumnRef);
	int		nfields = 0;
	PGListCell *l;

	c->location = location;
	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAIndices))
		{
			PGAIndirection *i = makeNode(PGAIndirection);

			if (nfields == 0)
			{
				/* easy case - all indirection goes to PGAIndirection */
				c->fields = list_make1(makeString(colname));
				i->indirection = check_indirection(indirection, yyscanner);
			}
			else
			{
				/* got to split the list in two */
				i->indirection = check_indirection(list_copy_tail(indirection,
																  nfields),
												   yyscanner);
				indirection = list_truncate(indirection, nfields);
				c->fields = lcons(makeString(colname), indirection);
			}
			i->arg = (PGNode *) c;
			return (PGNode *) i;
		}
		else if (IsA(lfirst(l), PGAStar))
		{
			/* We only allow '*' at the end of a PGColumnRef */
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
		nfields++;
	}
	/* No subscripting, so all indirection gets added to field list */
	c->fields = lcons(makeString(colname), indirection);
	return (PGNode *) c;
}

static PGNode *
makeTypeCast(PGNode *arg, PGTypeName *tpname, int location)
{
	PGTypeCast *n = makeNode(PGTypeCast);
	n->arg = arg;
	n->typeName = tpname;
	n->location = location;
	return (PGNode *) n;
}

static PGNode *
makeStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeStringConstCast(char *str, int location, PGTypeName *tpname)
{
	PGNode *s = makeStringConst(str, location);

	return makeTypeCast(s, tpname, -1);
}

static PGNode *
makeIntervalNode(char *str, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGString;
	n->sval = str;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;

}

static PGNode *
makeIntervalNode(int val, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGInteger;
	n->ival = val;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeIntervalNode(PGNode *arg, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGAExpr;
	n->eval = arg;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeSampleSize(PGValue *sample_size, bool is_percentage) {
	PGSampleSize *n = makeNode(PGSampleSize);

	n->sample_size = *sample_size;
	n->is_percentage = is_percentage;

	return (PGNode *)n;
}

static PGNode *
makeSampleOptions(PGNode *sample_size, char *method, int seed, int location) {
	PGSampleOptions *n = makeNode(PGSampleOptions);

	n->sample_size = sample_size;
	n->method = method;
	n->seed = seed;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeIntConst(int val, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGInteger;
	n->val.val.ival = val;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeFloatConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGFloat;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeBitStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGBitString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeNullAConst(int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGNull;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeAConst(PGValue *v, int location)
{
	PGNode *n;

	switch (v->type)
	{
		case T_PGFloat:
			n = makeFloatConst(v->val.str, location);
			break;

		case T_PGInteger:
			n = makeIntConst(v->val.ival, location);
			break;

		case T_PGString:
		default:
			n = makeStringConst(v->val.str, location);
			break;
	}

	return n;
}

/* makeBoolAConst()
 * Create an PGAConst string node and put it inside a boolean cast.
 */
static PGNode *
makeBoolAConst(bool state, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = (state ? (char*) "t" : (char*) "f");
	n->location = location;

	return makeTypeCast((PGNode *)n, SystemTypeName("bool"), -1);
}

/* check_qualified_name --- check the result of qualified_name production
 *
 * It's easiest to let the grammar production for qualified_name allow
 * subscripts and '*', which we then must reject here.
 */
static void
check_qualified_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
}

/* check_func_name --- check the result of func_name production
 *
 * It's easiest to let the grammar production for func_name allow subscripts
 * and '*', which we then must reject here.
 */
static PGList *
check_func_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
	return names;
}

/* check_indirection --- check the result of indirection production
 *
 * We only allow '*' at the end of the list, but it's hard to enforce that
 * in the grammar, so do it here.
 */
static PGList *
check_indirection(PGList *indirection, core_yyscan_t yyscanner)
{
	PGListCell *l;

	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAStar))
		{
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
	}
	return indirection;
}

/* makeParamRef
 * Creates a new PGParamRef node
 */
static PGNode* makeParamRef(int number, int location)
{
	PGParamRef *p = makeNode(PGParamRef);
	p->number = number;
	p->location = location;
	return (PGNode *) p;
}

static PGNode *
makeParamRefCast(int number, int location, PGTypeName *tpname)
{
	PGNode *p = makeParamRef(number, location);
	return makeTypeCast(p, tpname, -1);
}

/* insertSelectOptions()
 * Insert ORDER BY, etc into an already-constructed SelectStmt.
 *
 * This routine is just to avoid duplicating code in PGSelectStmt productions.
 */
static void
insertSelectOptions(PGSelectStmt *stmt,
					PGList *sortClause, PGList *lockingClause,
					PGNode *limitOffset, PGNode *limitCount,
					PGWithClause *withClause,
					core_yyscan_t yyscanner)
{
	Assert(IsA(stmt, PGSelectStmt));

	/*
	 * Tests here are to reject constructs like
	 *	(SELECT foo ORDER BY bar) ORDER BY baz
	 */
	if (sortClause)
	{
		if (stmt->sortClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple ORDER BY clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) sortClause))));
		stmt->sortClause = sortClause;
	}
	/* We can handle multiple locking clauses, though */
	stmt->lockingClause = list_concat(stmt->lockingClause, lockingClause);
	if (limitOffset)
	{
		if (stmt->limitOffset)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple OFFSET clauses not allowed"),
					 parser_errposition(exprLocation(limitOffset))));
		stmt->limitOffset = limitOffset;
	}
	if (limitCount)
	{
		if (stmt->limitCount)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple LIMIT clauses not allowed"),
					 parser_errposition(exprLocation(limitCount))));
		stmt->limitCount = limitCount;
	}
	if (withClause)
	{
		if (stmt->withClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple WITH clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) withClause))));
		stmt->withClause = withClause;
	}
}

static PGNode *
makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg)
{
	PGSelectStmt *n = makeNode(PGSelectStmt);

	n->op = op;
	n->all = all;
	n->larg = (PGSelectStmt *) larg;
	n->rarg = (PGSelectStmt *) rarg;
	return (PGNode *) n;
}

/* SystemFuncName()
 * Build a properly-qualified reference to a built-in function.
 */
PGList *
SystemFuncName(const char *name)
{
	return list_make2(makeString(DEFAULT_SCHEMA), makeString(name));
}

/* SystemTypeName()
 * Build a properly-qualified reference to a built-in type.
 *
 * typmod is defaulted, but may be changed afterwards by caller.
 * Likewise for the location.
 */
PGTypeName *
SystemTypeName(const char *name)
{
	return makeTypeNameFromNameList(list_make2(makeString(DEFAULT_SCHEMA),
											   makeString(name)));
}

/* doNegate()
 * Handle negation of a numeric constant.
 *
 * Formerly, we did this here because the optimizer couldn't cope with
 * indexquals that looked like "var = -4" --- it wants "var = const"
 * and a unary minus operator applied to a constant didn't qualify.
 * As of Postgres 7.0, that problem doesn't exist anymore because there
 * is a constant-subexpression simplifier in the optimizer.  However,
 * there's still a good reason for doing this here, which is that we can
 * postpone committing to a particular internal representation for simple
 * negative constants.	It's better to leave "-123.456" in string form
 * until we know what the desired type is.
 */
static PGNode *
doNegate(PGNode *n, int location)
{
	if (IsA(n, PGAConst))
	{
		PGAConst *con = (PGAConst *)n;

		/* report the constant's location as that of the '-' sign */
		con->location = location;

		if (con->val.type == T_PGInteger)
		{
			con->val.val.ival = -con->val.val.ival;
			return n;
		}
		if (con->val.type == T_PGFloat)
		{
			doNegateFloat(&con->val);
			return n;
		}
	}

	return (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", NULL, n, location);
}

static void
doNegateFloat(PGValue *v)
{
	char   *oldval = v->val.str;

	Assert(IsA(v, PGFloat));
	if (*oldval == '+')
		oldval++;
	if (*oldval == '-')
		v->val.str = oldval+1;	/* just strip the '-' */
	else
		v->val.str = psprintf("-%s", oldval);
}

static PGNode *
makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a AND b AND c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_AND_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_AND_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a OR b OR c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_OR_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_OR_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeNotExpr(PGNode *expr, int location)
{
	return (PGNode *) makeBoolExpr(PG_NOT_EXPR, list_make1(expr), location);
}

static PGNode *
makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod, int location)
{
	PGSQLValueFunction *svf = makeNode(PGSQLValueFunction);

	svf->op = op;
	/* svf->type will be filled during parse analysis */
	svf->typmod = typmod;
	svf->location = location;
	return (PGNode *) svf;
}

/* Separate PGConstraint nodes from COLLATE clauses in a */
static void
SplitColQualList(PGList *qualList,
				 PGList **constraintList, PGCollateClause **collClause,
				 core_yyscan_t yyscanner)
{
	PGListCell   *cell;
	PGListCell   *prev;
	PGListCell   *next;

	*collClause = NULL;
	prev = NULL;
	for (cell = list_head(qualList); cell; cell = next)
	{
		PGNode   *n = (PGNode *) lfirst(cell);

		next = lnext(cell);
		if (IsA(n, PGConstraint))
		{
			/* keep it in list */
			prev = cell;
			continue;
		}
		if (IsA(n, PGCollateClause))
		{
			PGCollateClause *c = (PGCollateClause *) n;

			if (*collClause)
				ereport(ERROR,
						(errcode(PG_ERRCODE_SYNTAX_ERROR),
						 errmsg("multiple COLLATE clauses not allowed"),
						 parser_errposition(c->location)));
			*collClause = c;
		}
		else
			elog(ERROR, "unexpected node type %d", (int) n->type);
		/* remove non-Constraint nodes from qualList */
		qualList = list_delete_cell(qualList, cell, prev);
	}
	*constraintList = qualList;
}

/*
 * Process result of ConstraintAttributeSpec, and set appropriate bool flags
 * in the output command node.  Pass NULL for any flags the particular
 * command doesn't support.
 */
static void
processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner)
{
	/* defaults */
	if (deferrable)
		*deferrable = false;
	if (initdeferred)
		*initdeferred = false;
	if (not_valid)
		*not_valid = false;

	if (cas_bits & (CAS_DEFERRABLE | CAS_INITIALLY_DEFERRED))
	{
		if (deferrable)
			*deferrable = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_INITIALLY_DEFERRED)
	{
		if (initdeferred)
			*initdeferred = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NOT_VALID)
	{
		if (not_valid)
			*not_valid = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NOT VALID",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NO_INHERIT)
	{
		if (no_inherit)
			*no_inherit = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NO INHERIT",
							constrType),
					 parser_errposition(location)));
	}
}

/*----------
 * Recursive view transformation
 *
 * Convert
 *
 *     CREATE RECURSIVE VIEW relname (aliases) AS query
 *
 * to
 *
 *     CREATE VIEW relname (aliases) AS
 *         WITH RECURSIVE relname (aliases) AS (query)
 *         SELECT aliases FROM relname
 *
 * Actually, just the WITH ... part, which is then inserted into the original
 * view as the query.
 * ----------
 */
static PGNode *
makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query)
{
	PGSelectStmt *s = makeNode(PGSelectStmt);
	PGWithClause *w = makeNode(PGWithClause);
	PGCommonTableExpr *cte = makeNode(PGCommonTableExpr);
	PGList	   *tl = NIL;
	PGListCell   *lc;

	/* create common table expression */
	cte->ctename = relname;
	cte->aliascolnames = aliases;
	cte->ctequery = query;
	cte->location = -1;

	/* create WITH clause and attach CTE */
	w->recursive = true;
	w->ctes = list_make1(cte);
	w->location = -1;

	/* create target list for the new SELECT from the alias list of the
	 * recursive view specification */
	foreach (lc, aliases)
	{
		PGResTarget *rt = makeNode(PGResTarget);

		rt->name = NULL;
		rt->indirection = NIL;
		rt->val = makeColumnRef(strVal(lfirst(lc)), NIL, -1, 0);
		rt->location = -1;

		tl = lappend(tl, rt);
	}

	/* create new SELECT combining WITH clause, target list, and fake FROM
	 * clause */
	s->withClause = w;
	s->targetList = tl;
	s->fromClause = list_make1(makeRangeVar(NULL, relname, -1));

	return (PGNode *) s;
}

/* parser_init()
 * Initialize to parse one query string
 */
void
parser_init(base_yy_extra_type *yyext)
{
	yyext->parsetree = NIL;		/* in case grammar forgets to set it */
}

#undef yyparse
#undef yylex
#undef yyerror
#undef yylval
#undef yychar
#undef yydebug
#undef yynerrs
#undef yylloc

} // namespace duckdb_libpgquery
