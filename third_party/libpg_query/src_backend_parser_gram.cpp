/* A Bison parser, made by GNU Bison 2.3.  */

/* Skeleton implementation for Bison's Yacc-like parsers in C

   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.3"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Using locations.  */
#define YYLSP_NEEDED 1

/* Substitute the variable and function names.  */
#define yyparse base_yyparse
#define yylex   base_yylex
#define yyerror base_yyerror
#define yylval  base_yylval
#define yychar  base_yychar
#define yydebug base_yydebug
#define yynerrs base_yynerrs
#define yylloc base_yylloc

/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     IDENT = 258,
     FCONST = 259,
     SCONST = 260,
     BCONST = 261,
     XCONST = 262,
     Op = 263,
     ICONST = 264,
     PARAM = 265,
     TYPECAST = 266,
     DOT_DOT = 267,
     COLON_EQUALS = 268,
     EQUALS_GREATER = 269,
     LAMBDA_ARROW = 270,
     LESS_EQUALS = 271,
     GREATER_EQUALS = 272,
     NOT_EQUALS = 273,
     ABORT_P = 274,
     ABSOLUTE_P = 275,
     ACCESS = 276,
     ACTION = 277,
     ADD_P = 278,
     ADMIN = 279,
     AFTER = 280,
     AGGREGATE = 281,
     ALL = 282,
     ALSO = 283,
     ALTER = 284,
     ALWAYS = 285,
     ANALYSE = 286,
     ANALYZE = 287,
     AND = 288,
     ANY = 289,
     ARRAY = 290,
     AS = 291,
     ASC_P = 292,
     ASSERTION = 293,
     ASSIGNMENT = 294,
     ASYMMETRIC = 295,
     AT = 296,
     ATTACH = 297,
     ATTRIBUTE = 298,
     AUTHORIZATION = 299,
     BACKWARD = 300,
     BEFORE = 301,
     BEGIN_P = 302,
     BETWEEN = 303,
     BIGINT = 304,
     BINARY = 305,
     BIT = 306,
     BOOLEAN_P = 307,
     BOTH = 308,
     BY = 309,
     CACHE = 310,
     CALL_P = 311,
     CALLED = 312,
     CASCADE = 313,
     CASCADED = 314,
     CASE = 315,
     CAST = 316,
     CATALOG_P = 317,
     CHAIN = 318,
     CHAR_P = 319,
     CHARACTER = 320,
     CHARACTERISTICS = 321,
     CHECK_P = 322,
     CHECKPOINT = 323,
     CLASS = 324,
     CLOSE = 325,
     CLUSTER = 326,
     COALESCE = 327,
     COLLATE = 328,
     COLLATION = 329,
     COLUMN = 330,
     COLUMNS = 331,
     COMMENT = 332,
     COMMENTS = 333,
     COMMIT = 334,
     COMMITTED = 335,
     CONCURRENTLY = 336,
     CONFIGURATION = 337,
     CONFLICT = 338,
     CONNECTION = 339,
     CONSTRAINT = 340,
     CONSTRAINTS = 341,
     CONTENT_P = 342,
     CONTINUE_P = 343,
     CONVERSION_P = 344,
     COPY = 345,
     COST = 346,
     CREATE_P = 347,
     CROSS = 348,
     CSV = 349,
     CUBE = 350,
     CURRENT_P = 351,
     CURRENT_CATALOG = 352,
     CURRENT_DATE = 353,
     CURRENT_ROLE = 354,
     CURRENT_SCHEMA = 355,
     CURRENT_TIME = 356,
     CURRENT_TIMESTAMP = 357,
     CURRENT_USER = 358,
     CURSOR = 359,
     CYCLE = 360,
     DATA_P = 361,
     DATABASE = 362,
     DAY_P = 363,
     DAYS_P = 364,
     DEALLOCATE = 365,
     DEC = 366,
     DECIMAL_P = 367,
     DECLARE = 368,
     DEFAULT = 369,
     DEFAULTS = 370,
     DEFERRABLE = 371,
     DEFERRED = 372,
     DEFINER = 373,
     DELETE_P = 374,
     DELIMITER = 375,
     DELIMITERS = 376,
     DEPENDS = 377,
     DESC_P = 378,
     DESCRIBE = 379,
     DETACH = 380,
     DICTIONARY = 381,
     DISABLE_P = 382,
     DISCARD = 383,
     DISTINCT = 384,
     DO = 385,
     DOCUMENT_P = 386,
     DOMAIN_P = 387,
     DOUBLE_P = 388,
     DROP = 389,
     EACH = 390,
     ELSE = 391,
     ENABLE_P = 392,
     ENCODING = 393,
     ENCRYPTED = 394,
     END_P = 395,
     ENUM_P = 396,
     ESCAPE = 397,
     EVENT = 398,
     EXCEPT = 399,
     EXCLUDE = 400,
     EXCLUDING = 401,
     EXCLUSIVE = 402,
     EXECUTE = 403,
     EXISTS = 404,
     EXPLAIN = 405,
     EXPORT_P = 406,
     EXTENSION = 407,
     EXTERNAL = 408,
     EXTRACT = 409,
     FALSE_P = 410,
     FAMILY = 411,
     FETCH = 412,
     FILTER = 413,
     FIRST_P = 414,
     FLOAT_P = 415,
     FOLLOWING = 416,
     FOR = 417,
     FORCE = 418,
     FOREIGN = 419,
     FORWARD = 420,
     FREEZE = 421,
     FROM = 422,
     FULL = 423,
     FUNCTION = 424,
     FUNCTIONS = 425,
     GENERATED = 426,
     GLOB = 427,
     GLOBAL = 428,
     GRANT = 429,
     GRANTED = 430,
     GROUP_P = 431,
     GROUPING = 432,
     HANDLER = 433,
     HAVING = 434,
     HEADER_P = 435,
     HOLD = 436,
     HOUR_P = 437,
     HOURS_P = 438,
     IDENTITY_P = 439,
     IF_P = 440,
     ILIKE = 441,
     IMMEDIATE = 442,
     IMMUTABLE = 443,
     IMPLICIT_P = 444,
     IMPORT_P = 445,
     IN_P = 446,
     INCLUDING = 447,
     INCREMENT = 448,
     INDEX = 449,
     INDEXES = 450,
     INHERIT = 451,
     INHERITS = 452,
     INITIALLY = 453,
     INLINE_P = 454,
     INNER_P = 455,
     INOUT = 456,
     INPUT_P = 457,
     INSENSITIVE = 458,
     INSERT = 459,
     INSTEAD = 460,
     INT_P = 461,
     INTEGER = 462,
     INTERSECT = 463,
     INTERVAL = 464,
     INTO = 465,
     INVOKER = 466,
     IS = 467,
     ISNULL = 468,
     ISOLATION = 469,
     JOIN = 470,
     KEY = 471,
     LABEL = 472,
     LANGUAGE = 473,
     LARGE_P = 474,
     LAST_P = 475,
     LATERAL_P = 476,
     LEADING = 477,
     LEAKPROOF = 478,
     LEFT = 479,
     LEVEL = 480,
     LIKE = 481,
     LIMIT = 482,
     LISTEN = 483,
     LOAD = 484,
     LOCAL = 485,
     LOCALTIME = 486,
     LOCALTIMESTAMP = 487,
     LOCATION = 488,
     LOCK_P = 489,
     LOCKED = 490,
     LOGGED = 491,
     MACRO = 492,
     MAP = 493,
     MAPPING = 494,
     MATCH = 495,
     MATERIALIZED = 496,
     MAXVALUE = 497,
     METHOD = 498,
     MICROSECOND_P = 499,
     MICROSECONDS_P = 500,
     MILLISECOND_P = 501,
     MILLISECONDS_P = 502,
     MINUTE_P = 503,
     MINUTES_P = 504,
     MINVALUE = 505,
     MODE = 506,
     MONTH_P = 507,
     MONTHS_P = 508,
     MOVE = 509,
     NAME_P = 510,
     NAMES = 511,
     NATIONAL = 512,
     NATURAL = 513,
     NCHAR = 514,
     NEW = 515,
     NEXT = 516,
     NO = 517,
     NONE = 518,
     NOT = 519,
     NOTHING = 520,
     NOTIFY = 521,
     NOTNULL = 522,
     NOWAIT = 523,
     NULL_P = 524,
     NULLIF = 525,
     NULLS_P = 526,
     NUMERIC = 527,
     OBJECT_P = 528,
     OF = 529,
     OFF = 530,
     OFFSET = 531,
     OIDS = 532,
     OLD = 533,
     ON = 534,
     ONLY = 535,
     OPERATOR = 536,
     OPTION = 537,
     OPTIONS = 538,
     OR = 539,
     ORDER = 540,
     ORDINALITY = 541,
     OUT_P = 542,
     OUTER_P = 543,
     OVER = 544,
     OVERLAPS = 545,
     OVERLAY = 546,
     OVERRIDING = 547,
     OWNED = 548,
     OWNER = 549,
     PARALLEL = 550,
     PARSER = 551,
     PARTIAL = 552,
     PARTITION = 553,
     PASSING = 554,
     PASSWORD = 555,
     PERCENT = 556,
     PLACING = 557,
     PLANS = 558,
     POLICY = 559,
     POSITION = 560,
     PRAGMA_P = 561,
     PRECEDING = 562,
     PRECISION = 563,
     PREPARE = 564,
     PREPARED = 565,
     PRESERVE = 566,
     PRIMARY = 567,
     PRIOR = 568,
     PRIVILEGES = 569,
     PROCEDURAL = 570,
     PROCEDURE = 571,
     PROGRAM = 572,
     PUBLICATION = 573,
     QUOTE = 574,
     RANGE = 575,
     READ_P = 576,
     REAL = 577,
     REASSIGN = 578,
     RECHECK = 579,
     RECURSIVE = 580,
     REF = 581,
     REFERENCES = 582,
     REFERENCING = 583,
     REFRESH = 584,
     REINDEX = 585,
     RELATIVE_P = 586,
     RELEASE = 587,
     RENAME = 588,
     REPEATABLE = 589,
     REPLACE = 590,
     REPLICA = 591,
     RESET = 592,
     RESTART = 593,
     RESTRICT = 594,
     RETURNING = 595,
     RETURNS = 596,
     REVOKE = 597,
     RIGHT = 598,
     ROLE = 599,
     ROLLBACK = 600,
     ROLLUP = 601,
     ROW = 602,
     ROWS = 603,
     RULE = 604,
     SAMPLE = 605,
     SAVEPOINT = 606,
     SCHEMA = 607,
     SCHEMAS = 608,
     SCROLL = 609,
     SEARCH = 610,
     SECOND_P = 611,
     SECONDS_P = 612,
     SECURITY = 613,
     SELECT = 614,
     SEQUENCE = 615,
     SEQUENCES = 616,
     SERIALIZABLE = 617,
     SERVER = 618,
     SESSION = 619,
     SESSION_USER = 620,
     SET = 621,
     SETOF = 622,
     SETS = 623,
     SHARE = 624,
     SHOW = 625,
     SIMILAR = 626,
     SIMPLE = 627,
     SKIP = 628,
     SMALLINT = 629,
     SNAPSHOT = 630,
     SOME = 631,
     SQL_P = 632,
     STABLE = 633,
     STANDALONE_P = 634,
     START = 635,
     STATEMENT = 636,
     STATISTICS = 637,
     STDIN = 638,
     STDOUT = 639,
     STORAGE = 640,
     STRICT_P = 641,
     STRIP_P = 642,
     STRUCT = 643,
     SUBSCRIPTION = 644,
     SUBSTRING = 645,
     SYMMETRIC = 646,
     SYSID = 647,
     SYSTEM_P = 648,
     TABLE = 649,
     TABLES = 650,
     TABLESAMPLE = 651,
     TABLESPACE = 652,
     TEMP = 653,
     TEMPLATE = 654,
     TEMPORARY = 655,
     TEXT_P = 656,
     THEN = 657,
     TIME = 658,
     TIMESTAMP = 659,
     TO = 660,
     TRAILING = 661,
     TRANSACTION = 662,
     TRANSFORM = 663,
     TREAT = 664,
     TRIGGER = 665,
     TRIM = 666,
     TRUE_P = 667,
     TRUNCATE = 668,
     TRUSTED = 669,
     TRY_CAST = 670,
     TYPE_P = 671,
     TYPES_P = 672,
     UNBOUNDED = 673,
     UNCOMMITTED = 674,
     UNENCRYPTED = 675,
     UNION = 676,
     UNIQUE = 677,
     UNKNOWN = 678,
     UNLISTEN = 679,
     UNLOGGED = 680,
     UNTIL = 681,
     UPDATE = 682,
     USER = 683,
     USING = 684,
     VACUUM = 685,
     VALID = 686,
     VALIDATE = 687,
     VALIDATOR = 688,
     VALUE_P = 689,
     VALUES = 690,
     VARCHAR = 691,
     VARIADIC = 692,
     VARYING = 693,
     VERBOSE = 694,
     VERSION_P = 695,
     VIEW = 696,
     VIEWS = 697,
     VOLATILE = 698,
     WHEN = 699,
     WHERE = 700,
     WHITESPACE_P = 701,
     WINDOW = 702,
     WITH = 703,
     WITHIN = 704,
     WITHOUT = 705,
     WORK = 706,
     WRAPPER = 707,
     WRITE_P = 708,
     XML_P = 709,
     XMLATTRIBUTES = 710,
     XMLCONCAT = 711,
     XMLELEMENT = 712,
     XMLEXISTS = 713,
     XMLFOREST = 714,
     XMLNAMESPACES = 715,
     XMLPARSE = 716,
     XMLPI = 717,
     XMLROOT = 718,
     XMLSERIALIZE = 719,
     XMLTABLE = 720,
     YEAR_P = 721,
     YEARS_P = 722,
     YES_P = 723,
     ZONE = 724,
     NOT_LA = 725,
     NULLS_LA = 726,
     WITH_LA = 727,
     POSTFIXOP = 728,
     UMINUS = 729
   };
#endif
/* Tokens.  */
#define IDENT 258
#define FCONST 259
#define SCONST 260
#define BCONST 261
#define XCONST 262
#define Op 263
#define ICONST 264
#define PARAM 265
#define TYPECAST 266
#define DOT_DOT 267
#define COLON_EQUALS 268
#define EQUALS_GREATER 269
#define LAMBDA_ARROW 270
#define LESS_EQUALS 271
#define GREATER_EQUALS 272
#define NOT_EQUALS 273
#define ABORT_P 274
#define ABSOLUTE_P 275
#define ACCESS 276
#define ACTION 277
#define ADD_P 278
#define ADMIN 279
#define AFTER 280
#define AGGREGATE 281
#define ALL 282
#define ALSO 283
#define ALTER 284
#define ALWAYS 285
#define ANALYSE 286
#define ANALYZE 287
#define AND 288
#define ANY 289
#define ARRAY 290
#define AS 291
#define ASC_P 292
#define ASSERTION 293
#define ASSIGNMENT 294
#define ASYMMETRIC 295
#define AT 296
#define ATTACH 297
#define ATTRIBUTE 298
#define AUTHORIZATION 299
#define BACKWARD 300
#define BEFORE 301
#define BEGIN_P 302
#define BETWEEN 303
#define BIGINT 304
#define BINARY 305
#define BIT 306
#define BOOLEAN_P 307
#define BOTH 308
#define BY 309
#define CACHE 310
#define CALL_P 311
#define CALLED 312
#define CASCADE 313
#define CASCADED 314
#define CASE 315
#define CAST 316
#define CATALOG_P 317
#define CHAIN 318
#define CHAR_P 319
#define CHARACTER 320
#define CHARACTERISTICS 321
#define CHECK_P 322
#define CHECKPOINT 323
#define CLASS 324
#define CLOSE 325
#define CLUSTER 326
#define COALESCE 327
#define COLLATE 328
#define COLLATION 329
#define COLUMN 330
#define COLUMNS 331
#define COMMENT 332
#define COMMENTS 333
#define COMMIT 334
#define COMMITTED 335
#define CONCURRENTLY 336
#define CONFIGURATION 337
#define CONFLICT 338
#define CONNECTION 339
#define CONSTRAINT 340
#define CONSTRAINTS 341
#define CONTENT_P 342
#define CONTINUE_P 343
#define CONVERSION_P 344
#define COPY 345
#define COST 346
#define CREATE_P 347
#define CROSS 348
#define CSV 349
#define CUBE 350
#define CURRENT_P 351
#define CURRENT_CATALOG 352
#define CURRENT_DATE 353
#define CURRENT_ROLE 354
#define CURRENT_SCHEMA 355
#define CURRENT_TIME 356
#define CURRENT_TIMESTAMP 357
#define CURRENT_USER 358
#define CURSOR 359
#define CYCLE 360
#define DATA_P 361
#define DATABASE 362
#define DAY_P 363
#define DAYS_P 364
#define DEALLOCATE 365
#define DEC 366
#define DECIMAL_P 367
#define DECLARE 368
#define DEFAULT 369
#define DEFAULTS 370
#define DEFERRABLE 371
#define DEFERRED 372
#define DEFINER 373
#define DELETE_P 374
#define DELIMITER 375
#define DELIMITERS 376
#define DEPENDS 377
#define DESC_P 378
#define DESCRIBE 379
#define DETACH 380
#define DICTIONARY 381
#define DISABLE_P 382
#define DISCARD 383
#define DISTINCT 384
#define DO 385
#define DOCUMENT_P 386
#define DOMAIN_P 387
#define DOUBLE_P 388
#define DROP 389
#define EACH 390
#define ELSE 391
#define ENABLE_P 392
#define ENCODING 393
#define ENCRYPTED 394
#define END_P 395
#define ENUM_P 396
#define ESCAPE 397
#define EVENT 398
#define EXCEPT 399
#define EXCLUDE 400
#define EXCLUDING 401
#define EXCLUSIVE 402
#define EXECUTE 403
#define EXISTS 404
#define EXPLAIN 405
#define EXPORT_P 406
#define EXTENSION 407
#define EXTERNAL 408
#define EXTRACT 409
#define FALSE_P 410
#define FAMILY 411
#define FETCH 412
#define FILTER 413
#define FIRST_P 414
#define FLOAT_P 415
#define FOLLOWING 416
#define FOR 417
#define FORCE 418
#define FOREIGN 419
#define FORWARD 420
#define FREEZE 421
#define FROM 422
#define FULL 423
#define FUNCTION 424
#define FUNCTIONS 425
#define GENERATED 426
#define GLOB 427
#define GLOBAL 428
#define GRANT 429
#define GRANTED 430
#define GROUP_P 431
#define GROUPING 432
#define HANDLER 433
#define HAVING 434
#define HEADER_P 435
#define HOLD 436
#define HOUR_P 437
#define HOURS_P 438
#define IDENTITY_P 439
#define IF_P 440
#define ILIKE 441
#define IMMEDIATE 442
#define IMMUTABLE 443
#define IMPLICIT_P 444
#define IMPORT_P 445
#define IN_P 446
#define INCLUDING 447
#define INCREMENT 448
#define INDEX 449
#define INDEXES 450
#define INHERIT 451
#define INHERITS 452
#define INITIALLY 453
#define INLINE_P 454
#define INNER_P 455
#define INOUT 456
#define INPUT_P 457
#define INSENSITIVE 458
#define INSERT 459
#define INSTEAD 460
#define INT_P 461
#define INTEGER 462
#define INTERSECT 463
#define INTERVAL 464
#define INTO 465
#define INVOKER 466
#define IS 467
#define ISNULL 468
#define ISOLATION 469
#define JOIN 470
#define KEY 471
#define LABEL 472
#define LANGUAGE 473
#define LARGE_P 474
#define LAST_P 475
#define LATERAL_P 476
#define LEADING 477
#define LEAKPROOF 478
#define LEFT 479
#define LEVEL 480
#define LIKE 481
#define LIMIT 482
#define LISTEN 483
#define LOAD 484
#define LOCAL 485
#define LOCALTIME 486
#define LOCALTIMESTAMP 487
#define LOCATION 488
#define LOCK_P 489
#define LOCKED 490
#define LOGGED 491
#define MACRO 492
#define MAP 493
#define MAPPING 494
#define MATCH 495
#define MATERIALIZED 496
#define MAXVALUE 497
#define METHOD 498
#define MICROSECOND_P 499
#define MICROSECONDS_P 500
#define MILLISECOND_P 501
#define MILLISECONDS_P 502
#define MINUTE_P 503
#define MINUTES_P 504
#define MINVALUE 505
#define MODE 506
#define MONTH_P 507
#define MONTHS_P 508
#define MOVE 509
#define NAME_P 510
#define NAMES 511
#define NATIONAL 512
#define NATURAL 513
#define NCHAR 514
#define NEW 515
#define NEXT 516
#define NO 517
#define NONE 518
#define NOT 519
#define NOTHING 520
#define NOTIFY 521
#define NOTNULL 522
#define NOWAIT 523
#define NULL_P 524
#define NULLIF 525
#define NULLS_P 526
#define NUMERIC 527
#define OBJECT_P 528
#define OF 529
#define OFF 530
#define OFFSET 531
#define OIDS 532
#define OLD 533
#define ON 534
#define ONLY 535
#define OPERATOR 536
#define OPTION 537
#define OPTIONS 538
#define OR 539
#define ORDER 540
#define ORDINALITY 541
#define OUT_P 542
#define OUTER_P 543
#define OVER 544
#define OVERLAPS 545
#define OVERLAY 546
#define OVERRIDING 547
#define OWNED 548
#define OWNER 549
#define PARALLEL 550
#define PARSER 551
#define PARTIAL 552
#define PARTITION 553
#define PASSING 554
#define PASSWORD 555
#define PERCENT 556
#define PLACING 557
#define PLANS 558
#define POLICY 559
#define POSITION 560
#define PRAGMA_P 561
#define PRECEDING 562
#define PRECISION 563
#define PREPARE 564
#define PREPARED 565
#define PRESERVE 566
#define PRIMARY 567
#define PRIOR 568
#define PRIVILEGES 569
#define PROCEDURAL 570
#define PROCEDURE 571
#define PROGRAM 572
#define PUBLICATION 573
#define QUOTE 574
#define RANGE 575
#define READ_P 576
#define REAL 577
#define REASSIGN 578
#define RECHECK 579
#define RECURSIVE 580
#define REF 581
#define REFERENCES 582
#define REFERENCING 583
#define REFRESH 584
#define REINDEX 585
#define RELATIVE_P 586
#define RELEASE 587
#define RENAME 588
#define REPEATABLE 589
#define REPLACE 590
#define REPLICA 591
#define RESET 592
#define RESTART 593
#define RESTRICT 594
#define RETURNING 595
#define RETURNS 596
#define REVOKE 597
#define RIGHT 598
#define ROLE 599
#define ROLLBACK 600
#define ROLLUP 601
#define ROW 602
#define ROWS 603
#define RULE 604
#define SAMPLE 605
#define SAVEPOINT 606
#define SCHEMA 607
#define SCHEMAS 608
#define SCROLL 609
#define SEARCH 610
#define SECOND_P 611
#define SECONDS_P 612
#define SECURITY 613
#define SELECT 614
#define SEQUENCE 615
#define SEQUENCES 616
#define SERIALIZABLE 617
#define SERVER 618
#define SESSION 619
#define SESSION_USER 620
#define SET 621
#define SETOF 622
#define SETS 623
#define SHARE 624
#define SHOW 625
#define SIMILAR 626
#define SIMPLE 627
#define SKIP 628
#define SMALLINT 629
#define SNAPSHOT 630
#define SOME 631
#define SQL_P 632
#define STABLE 633
#define STANDALONE_P 634
#define START 635
#define STATEMENT 636
#define STATISTICS 637
#define STDIN 638
#define STDOUT 639
#define STORAGE 640
#define STRICT_P 641
#define STRIP_P 642
#define STRUCT 643
#define SUBSCRIPTION 644
#define SUBSTRING 645
#define SYMMETRIC 646
#define SYSID 647
#define SYSTEM_P 648
#define TABLE 649
#define TABLES 650
#define TABLESAMPLE 651
#define TABLESPACE 652
#define TEMP 653
#define TEMPLATE 654
#define TEMPORARY 655
#define TEXT_P 656
#define THEN 657
#define TIME 658
#define TIMESTAMP 659
#define TO 660
#define TRAILING 661
#define TRANSACTION 662
#define TRANSFORM 663
#define TREAT 664
#define TRIGGER 665
#define TRIM 666
#define TRUE_P 667
#define TRUNCATE 668
#define TRUSTED 669
#define TRY_CAST 670
#define TYPE_P 671
#define TYPES_P 672
#define UNBOUNDED 673
#define UNCOMMITTED 674
#define UNENCRYPTED 675
#define UNION 676
#define UNIQUE 677
#define UNKNOWN 678
#define UNLISTEN 679
#define UNLOGGED 680
#define UNTIL 681
#define UPDATE 682
#define USER 683
#define USING 684
#define VACUUM 685
#define VALID 686
#define VALIDATE 687
#define VALIDATOR 688
#define VALUE_P 689
#define VALUES 690
#define VARCHAR 691
#define VARIADIC 692
#define VARYING 693
#define VERBOSE 694
#define VERSION_P 695
#define VIEW 696
#define VIEWS 697
#define VOLATILE 698
#define WHEN 699
#define WHERE 700
#define WHITESPACE_P 701
#define WINDOW 702
#define WITH 703
#define WITHIN 704
#define WITHOUT 705
#define WORK 706
#define WRAPPER 707
#define WRITE_P 708
#define XML_P 709
#define XMLATTRIBUTES 710
#define XMLCONCAT 711
#define XMLELEMENT 712
#define XMLEXISTS 713
#define XMLFOREST 714
#define XMLNAMESPACES 715
#define XMLPARSE 716
#define XMLPI 717
#define XMLROOT 718
#define XMLSERIALIZE 719
#define XMLTABLE 720
#define YEAR_P 721
#define YEARS_P 722
#define YES_P 723
#define ZONE 724
#define NOT_LA 725
#define NULLS_LA 726
#define WITH_LA 727
#define POSTFIXOP 728
#define UMINUS 729




/* Copy the first part of user declarations.  */
#line 1 "third_party/libpg_query/grammar/grammar.y.tmp"

#line 1 "third_party/libpg_query/grammar/grammar.hpp"
/*#define YYDEBUG 1*/
/*-------------------------------------------------------------------------
 *
 * gram.y
 *	  POSTGRESQL BISON rules/actions
 *
 * Portions Copyright (c) 1996-2017, PostgreSQL Global Development PGGroup
 * Portions Copyright (c) 1994, Regents of the University of California
 *
 *
 * IDENTIFICATION
 *	  src/backend/parser/gram.y
 *
 * HISTORY
 *	  AUTHOR			DATE			MAJOR EVENT
 *	  Andrew Yu			Sept, 1994		POSTQUEL to SQL conversion
 *	  Andrew Yu			Oct, 1994		lispy code conversion
 *
 * NOTES
 *	  CAPITALS are used to represent terminal symbols.
 *	  non-capitals are used to represent non-terminals.
 *
 *	  In general, nothing in this file should initiate database accesses
 *	  nor depend on changeable state (such as SET variables).  If you do
 *	  database accesses, your code will fail when we have aborted the
 *	  current transaction and are just parsing commands to find the next
 *	  ROLLBACK or COMMIT.  If you make use of SET variables, then you
 *	  will do the wrong thing in multi-query strings like this:
 *			SET constraint_exclusion TO off; SELECT * FROM foo;
 *	  because the entire string is parsed by gram.y before the SET gets
 *	  executed.  Anything that depends on the database or changeable state
 *	  should be handled during parse analysis so that it happens at the
 *	  right time not the wrong time.
 *
 * WARNINGS
 *	  If you use a list, make sure the datum is a node so that the printing
 *	  routines work.
 *
 *	  Sometimes we assign constants to makeStrings. Make sure we don't free
 *	  those.
 *
 *-------------------------------------------------------------------------
 */
#include "pg_functions.hpp"
#include <string.h>

#include <ctype.h>
#include <limits.h>

#include "nodes/makefuncs.hpp"
#include "nodes/nodeFuncs.hpp"
#include "parser/gramparse.hpp"
#include "parser/parser.hpp"
#include "utils/datetime.hpp"

namespace duckdb_libpgquery {
#define DEFAULT_SCHEMA "main"

/*
 * Location tracking support --- simpler than bison's default, since we only
 * want to track the start position not the end position of each nonterminal.
 */
#define YYLLOC_DEFAULT(Current, Rhs, N) \
	do { \
		if ((N) > 0) \
			(Current) = (Rhs)[1]; \
		else \
			(Current) = (-1); \
	} while (0)

/*
 * The above macro assigns -1 (unknown) as the parse location of any
 * nonterminal that was reduced from an empty rule, or whose leftmost
 * component was reduced from an empty rule.  This is problematic
 * for nonterminals defined like
 *		OptFooList: / * EMPTY * / { ... } | OptFooList Foo { ... } ;
 * because we'll set -1 as the location during the first reduction and then
 * copy it during each subsequent reduction, leaving us with -1 for the
 * location even when the list is not empty.  To fix that, do this in the
 * action for the nonempty rule(s):
 *		if (@$ < 0) @$ = @2;
 * (Although we have many nonterminals that follow this pattern, we only
 * bother with fixing @$ like this when the nonterminal's parse location
 * is actually referenced in some rule.)
 *
 * A cleaner answer would be to make YYLLOC_DEFAULT scan all the Rhs
 * locations until it's found one that's not -1.  Then we'd get a correct
 * location for any nonterminal that isn't entirely empty.  But this way
 * would add overhead to every rule reduction, and so far there's not been
 * a compelling reason to pay that overhead.
 */

/*
 * Bison doesn't allocate anything that needs to live across parser calls,
 * so we can easily have it use palloc instead of malloc.  This prevents
 * memory leaks if we error out during parsing.  Note this only works with
 * bison >= 2.0.  However, in bison 1.875 the default is to use alloca()
 * if possible, so there's not really much problem anyhow, at least if
 * you're building with gcc.
 */
#define YYMALLOC palloc
#define YYFREE   pfree
#define YYINITDEPTH 1000

/* yields an integer bitmask of these flags: */
#define CAS_NOT_DEFERRABLE			0x01
#define CAS_DEFERRABLE				0x02
#define CAS_INITIALLY_IMMEDIATE		0x04
#define CAS_INITIALLY_DEFERRED		0x08
#define CAS_NOT_VALID				0x10
#define CAS_NO_INHERIT				0x20


#define parser_yyerror(msg)  scanner_yyerror(msg, yyscanner)
#define parser_errposition(pos)  scanner_errposition(pos, yyscanner)

static void base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner,
						 const char *msg);
static PGRawStmt *makeRawStmt(PGNode *stmt, int stmt_location);
static void updateRawStmtEnd(PGRawStmt *rs, int end_location);
static PGNode *makeColumnRef(char *colname, PGList *indirection,
						   int location, core_yyscan_t yyscanner);
static PGNode *makeTypeCast(PGNode *arg, PGTypeName *tpname, int trycast, int location);
static PGNode *makeStringConst(char *str, int location);
static PGNode *makeStringConstCast(char *str, int location, PGTypeName *tpname);
static PGNode *makeIntervalNode(char *str, int location, PGList *typmods);
static PGNode *makeIntervalNode(int val, int location, PGList *typmods);
static PGNode *makeIntervalNode(PGNode *arg, int location, PGList *typmods);
static PGNode *makeSampleSize(PGValue *sample_size, bool is_percentage);
static PGNode *makeSampleOptions(PGNode *sample_size, char *method, int seed, int location);
static PGNode *makeIntConst(int val, int location);
static PGNode *makeFloatConst(char *str, int location);
static PGNode *makeBitStringConst(char *str, int location);
static PGNode *makeNullAConst(int location);
static PGNode *makeAConst(PGValue *v, int location);
static PGNode *makeBoolAConst(bool state, int location);
static PGNode *makeParamRef(int number, int location);
static PGNode *makeParamRefCast(int number, int location, PGTypeName *tpname);
static void check_qualified_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_func_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_indirection(PGList *indirection, core_yyscan_t yyscanner);
static void insertSelectOptions(PGSelectStmt *stmt,
								PGList *sortClause, PGList *lockingClause,
								PGNode *limitOffset, PGNode *limitCount,
								PGWithClause *withClause,
								core_yyscan_t yyscanner);
static PGNode *makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg);
static PGNode *doNegate(PGNode *n, int location);
static void doNegateFloat(PGValue *v);
static PGNode *makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeNotExpr(PGNode *expr, int location);
static PGNode *makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod,
								  int location);
static void SplitColQualList(PGList *qualList,
							 PGList **constraintList, PGCollateClause **collClause,
							 core_yyscan_t yyscanner);
static void processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner);
static PGNode *makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query);



/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* Enabling the token table.  */
#ifndef YYTOKEN_TABLE
# define YYTOKEN_TABLE 0
#endif

#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE
#line 14 "third_party/libpg_query/grammar/grammar.y"
{
	core_YYSTYPE		core_yystype;
	/* these fields must match core_YYSTYPE: */
	int					ival;
	char				*str;
	const char			*keyword;
	const char          *conststr;

	char				chr;
	bool				boolean;
	PGJoinType			jtype;
	PGDropBehavior		dbehavior;
	PGOnCommitAction		oncommit;
	PGList				*list;
	PGNode				*node;
	PGValue				*value;
	PGObjectType			objtype;
	PGTypeName			*typnam;
	PGObjectWithArgs		*objwithargs;
	PGDefElem				*defelt;
	PGSortBy				*sortby;
	PGWindowDef			*windef;
	PGJoinExpr			*jexpr;
	PGIndexElem			*ielem;
	PGAlias				*alias;
	PGRangeVar			*range;
	PGIntoClause			*into;
	PGWithClause			*with;
	PGInferClause			*infer;
	PGOnConflictClause	*onconflict;
	PGAIndices			*aind;
	PGResTarget			*target;
	PGInsertStmt			*istmt;
	PGVariableSetStmt		*vsetstmt;
	PGOverridingKind       override;
	PGSortByDir            sortorder;
	PGSortByNulls          nullorder;
	PGLockClauseStrength lockstrength;
	PGLockWaitPolicy lockwaitpolicy;
	PGSubLinkType subquerytype;
	PGViewCheckOption viewcheckoption;
}
/* Line 193 of yacc.c.  */
#line 1261 "third_party/libpg_query/grammar/grammar_out.cpp"
	YYSTYPE;
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
# define YYSTYPE_IS_TRIVIAL 1
#endif

#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif


/* Copy the second part of user declarations.  */


/* Line 216 of yacc.c.  */
#line 1286 "third_party/libpg_query/grammar/grammar_out.cpp"

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#elif (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
typedef signed char yytype_int8;
#else
typedef short int yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(msgid) dgettext ("bison-runtime", msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(msgid) msgid
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(e) ((void) (e))
#else
# define YYUSE(e) /* empty */
#endif

/* Identity function, used to suppress warnings about constant conditions.  */
#ifndef lint
# define YYID(n) (n)
#else
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static int
YYID (int i)
#else
static int
YYID (i)
    int i;
#endif
{
  return i;
}
#endif

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#     ifndef _STDLIB_H
#      define _STDLIB_H 1
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined _STDLIB_H \
       && ! ((defined YYMALLOC || defined malloc) \
	     && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef _STDLIB_H
#    define _STDLIB_H 1
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
	 || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
	     && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss;
  YYSTYPE yyvs;
    YYLTYPE yyls;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(To, From, Count) \
      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
#  else
#   define YYCOPY(To, From, Count)		\
      do					\
	{					\
	  YYSIZE_T yyi;				\
	  for (yyi = 0; yyi < (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (YYID (0))
#  endif
# endif

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack)					\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack, Stack, yysize);				\
	Stack = &yyptr->Stack;						\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))

#endif

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  580
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   48686

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  496
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  372
/* YYNRULES -- Number of rules.  */
#define YYNRULES  1756
/* YYNRULES -- Number of states.  */
#define YYNSTATES  2880

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   729

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,   493,     2,   481,     2,     2,
     486,   487,   479,   477,   490,   478,   488,   480,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   495,   489,
     473,   475,   474,   494,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,   484,     2,   485,   482,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   491,     2,   492,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   476,   483
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const yytype_uint16 yyprhs[] =
{
       0,     0,     3,     5,     9,    11,    13,    15,    17,    19,
      21,    23,    25,    27,    29,    31,    33,    35,    37,    39,
      41,    43,    45,    47,    49,    51,    53,    55,    57,    59,
      61,    63,    65,    67,    69,    71,    73,    75,    77,    79,
      80,    85,    92,    97,   104,   109,   116,   121,   128,   130,
     133,   137,   140,   142,   146,   149,   153,   155,   159,   162,
     168,   172,   179,   184,   191,   198,   205,   211,   217,   224,
     234,   239,   245,   253,   260,   265,   274,   279,   282,   287,
     291,   298,   303,   306,   309,   312,   315,   317,   320,   321,
     323,   326,   329,   332,   334,   338,   343,   346,   347,   350,
     354,   357,   361,   370,   372,   373,   375,   379,   386,   393,
     402,   409,   418,   425,   434,   441,   450,   459,   470,   479,
     490,   492,   493,   501,   503,   508,   513,   521,   524,   526,
     530,   535,   539,   540,   542,   543,   546,   550,   556,   565,
     571,   572,   578,   584,   592,   595,   596,   598,   600,   602,
     606,   609,   610,   612,   613,   615,   619,   621,   625,   627,
     631,   634,   637,   642,   648,   654,   663,   665,   666,   670,
     680,   693,   697,   698,   703,   710,   712,   715,   717,   719,
     720,   722,   725,   728,   730,   733,   736,   738,   741,   745,
     748,   751,   754,   757,   761,   765,   769,   771,   775,   777,
     778,   780,   783,   786,   789,   792,   795,   798,   801,   804,
     806,   808,   809,   819,   832,   833,   836,   838,   840,   842,
     844,   846,   848,   852,   853,   855,   858,   860,   862,   865,
     868,   872,   874,   876,   879,   882,   884,   887,   891,   897,
     900,   906,   912,   915,   919,   921,   923,   926,   929,   930,
     935,   936,   940,   945,   950,   951,   955,   958,   959,   963,
     965,   967,   969,   971,   973,   975,   977,   979,   981,   983,
     987,   991,   993,   996,   999,  1002,  1005,  1008,  1011,  1012,
    1016,  1020,  1024,  1025,  1027,  1030,  1032,  1035,  1038,  1041,
    1044,  1049,  1051,  1055,  1057,  1061,  1063,  1065,  1067,  1069,
    1073,  1075,  1078,  1079,  1081,  1082,  1084,  1088,  1089,  1092,
    1093,  1097,  1101,  1103,  1109,  1113,  1115,  1119,  1121,  1126,
    1132,  1138,  1145,  1149,  1157,  1162,  1174,  1176,  1180,  1183,
    1186,  1189,  1190,  1194,  1196,  1198,  1201,  1204,  1207,  1210,
    1212,  1213,  1215,  1218,  1225,  1230,  1237,  1242,  1249,  1258,
    1260,  1262,  1264,  1266,  1268,  1271,  1273,  1276,  1278,  1280,
    1282,  1286,  1290,  1294,  1298,  1301,  1304,  1306,  1310,  1312,
    1314,  1316,  1318,  1322,  1324,  1326,  1327,  1329,  1331,  1333,
    1340,  1342,  1344,  1347,  1351,  1360,  1372,  1382,  1384,  1386,
    1390,  1391,  1393,  1397,  1399,  1400,  1402,  1403,  1405,  1406,
    1408,  1412,  1414,  1416,  1418,  1422,  1423,  1426,  1429,  1430,
    1433,  1434,  1436,  1437,  1439,  1441,  1443,  1447,  1451,  1453,
    1455,  1459,  1463,  1467,  1471,  1476,  1480,  1483,  1485,  1487,
    1489,  1491,  1493,  1497,  1499,  1501,  1505,  1509,  1511,  1514,
    1519,  1524,  1527,  1531,  1537,  1543,  1545,  1547,  1558,  1569,
    1571,  1574,  1579,  1584,  1589,  1592,  1595,  1599,  1601,  1605,
    1612,  1615,  1616,  1620,  1624,  1629,  1634,  1639,  1644,  1648,
    1651,  1653,  1655,  1656,  1658,  1660,  1661,  1663,  1669,  1671,
    1672,  1674,  1675,  1679,  1681,  1685,  1690,  1694,  1696,  1698,
    1699,  1702,  1705,  1706,  1709,  1712,  1714,  1716,  1718,  1719,
    1722,  1727,  1733,  1738,  1741,  1745,  1748,  1751,  1754,  1757,
    1759,  1762,  1766,  1767,  1769,  1770,  1776,  1778,  1783,  1790,
    1793,  1795,  1796,  1801,  1802,  1804,  1806,  1808,  1810,  1813,
    1816,  1818,  1820,  1822,  1824,  1826,  1828,  1832,  1833,  1835,
    1839,  1841,  1843,  1846,  1849,  1850,  1852,  1856,  1858,  1859,
    1861,  1864,  1868,  1871,  1876,  1879,  1883,  1886,  1887,  1889,
    1892,  1893,  1898,  1904,  1907,  1908,  1910,  1914,  1918,  1922,
    1926,  1930,  1934,  1936,  1941,  1945,  1950,  1956,  1961,  1967,
    1972,  1978,  1981,  1986,  1988,  1990,  1991,  1993,  1998,  2004,
    2009,  2010,  2013,  2016,  2019,  2021,  2023,  2024,  2029,  2032,
    2034,  2037,  2040,  2045,  2048,  2055,  2058,  2060,  2064,  2069,
    2070,  2073,  2074,  2077,  2078,  2080,  2084,  2088,  2091,  2092,
    2095,  2100,  2102,  2104,  2107,  2111,  2117,  2124,  2127,  2131,
    2137,  2143,  2147,  2152,  2153,  2155,  2157,  2159,  2161,  2163,
    2166,  2171,  2173,  2175,  2177,  2179,  2182,  2186,  2187,  2189,
    2191,  2193,  2195,  2197,  2200,  2203,  2206,  2209,  2212,  2214,
    2218,  2219,  2221,  2223,  2225,  2227,  2233,  2236,  2238,  2240,
    2242,  2244,  2249,  2251,  2254,  2257,  2259,  2263,  2267,  2270,
    2272,  2273,  2279,  2282,  2288,  2291,  2293,  2297,  2301,  2302,
    2304,  2306,  2308,  2310,  2312,  2314,  2316,  2318,  2320,  2322,
    2324,  2326,  2328,  2330,  2332,  2334,  2336,  2338,  2340,  2342,
    2344,  2346,  2348,  2350,  2354,  2358,  2362,  2366,  2370,  2374,
    2378,  2379,  2381,  2385,  2389,  2395,  2398,  2401,  2405,  2409,
    2413,  2417,  2421,  2425,  2429,  2433,  2437,  2441,  2445,  2449,
    2453,  2456,  2459,  2463,  2467,  2470,  2473,  2477,  2481,  2487,
    2492,  2499,  2503,  2509,  2514,  2521,  2526,  2533,  2539,  2547,
    2551,  2554,  2559,  2563,  2566,  2568,  2572,  2576,  2580,  2584,
    2588,  2592,  2597,  2601,  2606,  2610,  2615,  2621,  2628,  2635,
    2643,  2650,  2658,  2665,  2673,  2677,  2682,  2687,  2694,  2696,
    2701,  2703,  2707,  2710,  2713,  2717,  2721,  2725,  2729,  2733,
    2737,  2741,  2745,  2749,  2753,  2757,  2761,  2765,  2768,  2771,
    2777,  2784,  2791,  2799,  2801,  2803,  2806,  2809,  2812,  2817,
    2819,  2822,  2824,  2827,  2830,  2834,  2840,  2847,  2856,  2863,
    2870,  2875,  2880,  2882,  2884,  2886,  2892,  2894,  2896,  2901,
    2903,  2908,  2910,  2915,  2917,  2922,  2924,  2926,  2928,  2930,
    2932,  2934,  2941,  2948,  2953,  2958,  2963,  2968,  2975,  2981,
    2987,  2993,  2998,  3005,  3010,  3016,  3017,  3023,  3024,  3027,
    3028,  3030,  3034,  3038,  3041,  3044,  3045,  3052,  3054,  3055,
    3059,  3060,  3063,  3066,  3067,  3069,  3074,  3077,  3080,  3083,
    3086,  3089,  3094,  3098,  3100,  3106,  3110,  3112,  3116,  3118,
    3120,  3122,  3124,  3126,  3128,  3130,  3132,  3134,  3136,  3138,
    3140,  3142,  3144,  3146,  3148,  3150,  3152,  3157,  3159,  3164,
    3166,  3171,  3173,  3176,  3178,  3181,  3183,  3186,  3188,  3192,
    3194,  3198,  3200,  3201,  3203,  3207,  3209,  3213,  3217,  3219,
    3223,  3227,  3228,  3230,  3232,  3234,  3236,  3238,  3240,  3242,
    3244,  3246,  3248,  3253,  3257,  3260,  3264,  3265,  3269,  3273,
    3276,  3279,  3281,  3282,  3285,  3288,  3292,  3295,  3297,  3299,
    3303,  3309,  3311,  3314,  3319,  3322,  3323,  3325,  3326,  3328,
    3331,  3334,  3337,  3341,  3347,  3349,  3350,  3352,  3355,  3356,
    3359,  3361,  3362,  3364,  3365,  3367,  3371,  3375,  3378,  3380,
    3382,  3384,  3388,  3390,  3393,  3395,  3399,  3401,  3403,  3405,
    3408,  3410,  3412,  3415,  3417,  3419,  3422,  3429,  3432,  3438,
    3442,  3446,  3448,  3450,  3452,  3454,  3456,  3458,  3460,  3462,
    3464,  3466,  3468,  3470,  3472,  3474,  3476,  3478,  3480,  3482,
    3484,  3486,  3489,  3492,  3496,  3500,  3501,  3503,  3505,  3507,
    3509,  3511,  3513,  3515,  3521,  3525,  3526,  3528,  3530,  3532,
    3534,  3539,  3547,  3550,  3551,  3553,  3555,  3557,  3559,  3573,
    3590,  3592,  3595,  3596,  3598,  3599,  3601,  3602,  3605,  3606,
    3608,  3609,  3616,  3625,  3632,  3641,  3648,  3657,  3660,  3662,
    3667,  3671,  3674,  3679,  3683,  3689,  3691,  3692,  3694,  3696,
    3697,  3699,  3701,  3703,  3705,  3707,  3709,  3711,  3713,  3715,
    3717,  3719,  3723,  3725,  3727,  3729,  3731,  3733,  3735,  3738,
    3740,  3742,  3745,  3749,  3753,  3755,  3759,  3763,  3766,  3770,
    3774,  3778,  3782,  3784,  3786,  3788,  3790,  3794,  3800,  3802,
    3804,  3806,  3808,  3812,  3815,  3817,  3822,  3828,  3834,  3839,
    3846,  3848,  3850,  3852,  3854,  3856,  3858,  3859,  3861,  3865,
    3867,  3868,  3876,  3878,  3881,  3885,  3888,  3889,  3892,  3893,
    3896,  3901,  3904,  3906,  3908,  3910,  3913,  3917,  3920,  3923,
    3927,  3932,  3935,  3937,  3939,  3941,  3945,  3948,  3958,  3970,
    3983,  3998,  4002,  4007,  4012,  4013,  4021,  4032,  4035,  4039,
    4040,  4045,  4047,  4049,  4051,  4053,  4055,  4057,  4059,  4061,
    4063,  4065,  4067,  4069,  4071,  4073,  4075,  4077,  4079,  4081,
    4083,  4085,  4087,  4089,  4091,  4093,  4095,  4097,  4099,  4101,
    4103,  4105,  4107,  4109,  4111,  4113,  4115,  4117,  4119,  4121,
    4123,  4125,  4127,  4129,  4131,  4133,  4135,  4137,  4139,  4141,
    4143,  4145,  4147,  4149,  4151,  4153,  4155,  4157,  4159,  4161,
    4163,  4165,  4167,  4169,  4171,  4173,  4175,  4177,  4179,  4181,
    4183,  4185,  4187,  4189,  4191,  4193,  4195,  4197,  4199,  4201,
    4203,  4205,  4207,  4209,  4211,  4213,  4215,  4217,  4219,  4221,
    4223,  4225,  4227,  4229,  4231,  4233,  4235,  4237,  4239,  4241,
    4243,  4245,  4247,  4249,  4251,  4253,  4255,  4257,  4259,  4261,
    4263,  4265,  4267,  4269,  4271,  4273,  4275,  4277,  4279,  4281,
    4283,  4285,  4287,  4289,  4291,  4293,  4295,  4297,  4299,  4301,
    4303,  4305,  4307,  4309,  4311,  4313,  4315,  4317,  4319,  4321,
    4323,  4325,  4327,  4329,  4331,  4333,  4335,  4337,  4339,  4341,
    4343,  4345,  4347,  4349,  4351,  4353,  4355,  4357,  4359,  4361,
    4363,  4365,  4367,  4369,  4371,  4373,  4375,  4377,  4379,  4381,
    4383,  4385,  4387,  4389,  4391,  4393,  4395,  4397,  4399,  4401,
    4403,  4405,  4407,  4409,  4411,  4413,  4415,  4417,  4419,  4421,
    4423,  4425,  4427,  4429,  4431,  4433,  4435,  4437,  4439,  4441,
    4443,  4445,  4447,  4449,  4451,  4453,  4455,  4457,  4459,  4461,
    4463,  4465,  4467,  4469,  4471,  4473,  4475,  4477,  4479,  4481,
    4483,  4485,  4487,  4489,  4491,  4493,  4495,  4497,  4499,  4501,
    4503,  4505,  4507,  4509,  4511,  4513,  4515,  4517,  4519,  4521,
    4523,  4525,  4527,  4529,  4531,  4533,  4535,  4537,  4539,  4541,
    4543,  4545,  4547,  4549,  4551,  4553,  4555,  4557,  4559,  4561,
    4563,  4565,  4567,  4569,  4571,  4573,  4575,  4577,  4579,  4581,
    4583,  4585,  4587,  4589,  4591,  4593,  4595,  4597,  4599,  4601,
    4603,  4605,  4607,  4609,  4611,  4613,  4615,  4617,  4619,  4621,
    4623,  4625,  4627,  4629,  4631,  4633,  4635,  4637,  4639,  4641,
    4643,  4645,  4647,  4649,  4651,  4653,  4655,  4657,  4659,  4661,
    4663,  4665,  4667,  4669,  4671,  4673,  4675,  4677,  4679,  4681,
    4683,  4685,  4687,  4689,  4691,  4693,  4695,  4697,  4699,  4701,
    4703,  4705,  4707,  4709,  4711,  4713,  4715,  4717,  4719,  4721,
    4723,  4725,  4727,  4729,  4731,  4733,  4735,  4737,  4739,  4741,
    4743,  4745,  4747,  4749,  4751,  4753,  4755,  4757,  4759,  4761,
    4763,  4765,  4767,  4769,  4771,  4773,  4775,  4777,  4779,  4781,
    4783,  4785,  4787,  4789,  4791,  4793,  4795,  4797,  4799,  4801,
    4803,  4805,  4807,  4809,  4811,  4813,  4815,  4817,  4819,  4821,
    4823,  4825,  4827,  4829,  4831,  4833,  4835,  4837,  4839,  4841,
    4843,  4845,  4847,  4849,  4851,  4853,  4855,  4857,  4859,  4861,
    4863,  4865,  4867,  4869,  4871,  4873,  4875,  4877,  4879,  4881,
    4883,  4885,  4887,  4889,  4891,  4893,  4895,  4897,  4899,  4901,
    4903,  4905,  4907,  4909,  4911,  4913,  4915,  4917,  4919,  4921,
    4923,  4925,  4927,  4929,  4931,  4933,  4935,  4937,  4939,  4941,
    4943,  4945,  4947,  4949,  4951,  4953,  4955,  4957,  4959,  4961,
    4963,  4965,  4967,  4969,  4971,  4973,  4975,  4977,  4979,  4981,
    4983,  4985,  4987,  4989,  4991,  4993,  4995,  4997,  4999,  5001,
    5003,  5005,  5007,  5009,  5011,  5013,  5015,  5017,  5019,  5021,
    5023,  5025,  5027,  5029,  5031,  5033,  5035,  5037,  5039,  5041,
    5043,  5045,  5047,  5049,  5051,  5053,  5055,  5057,  5059,  5061,
    5063,  5065,  5067,  5069,  5071,  5073,  5075,  5077,  5079,  5081,
    5083,  5085,  5087,  5089,  5091,  5093,  5095,  5097,  5099,  5101,
    5103,  5105,  5107,  5109,  5111,  5113,  5115,  5117,  5119,  5121,
    5123,  5125,  5127,  5129,  5131,  5133,  5135,  5137,  5139,  5141,
    5143,  5145,  5147,  5149,  5151,  5153,  5155
};

/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
static const yytype_int16 yyrhs[] =
{
     497,     0,    -1,   498,    -1,   498,   489,   499,    -1,   499,
      -1,   816,    -1,   540,    -1,   500,    -1,   848,    -1,   855,
      -1,   817,    -1,   605,    -1,   858,    -1,   512,    -1,   601,
      -1,   806,    -1,   536,    -1,   549,    -1,   511,    -1,   844,
      -1,   595,    -1,   538,    -1,   820,    -1,   818,    -1,   819,
      -1,   809,    -1,   517,    -1,   837,    -1,   535,    -1,   803,
      -1,   515,    -1,   622,    -1,   547,    -1,   604,    -1,   839,
      -1,   849,    -1,   831,    -1,   852,    -1,   856,    -1,    -1,
      29,   394,   682,   508,    -1,    29,   394,   185,   149,   682,
     508,    -1,    29,   194,   784,   508,    -1,    29,   194,   185,
     149,   784,   508,    -1,    29,   360,   784,   508,    -1,    29,
     360,   185,   149,   784,   508,    -1,    29,   441,   784,   508,
      -1,    29,   441,   185,   149,   784,   508,    -1,   503,    -1,
     501,   503,    -1,   366,   114,   724,    -1,   134,   114,    -1,
     338,    -1,   338,   542,   543,    -1,   366,   544,    -1,   366,
     171,   594,    -1,   507,    -1,   504,   490,   507,    -1,    23,
     574,    -1,    23,   185,   264,   149,   574,    -1,    23,    75,
     574,    -1,    23,    75,   185,   264,   149,   574,    -1,    29,
     516,   792,   502,    -1,    29,   516,   792,   134,   264,   269,
      -1,    29,   516,   792,   366,   264,   269,    -1,    29,   516,
     792,   366,   382,   546,    -1,    29,   516,   792,   366,   562,
      -1,    29,   516,   792,   337,   562,    -1,    29,   516,   792,
     366,   385,   792,    -1,    29,   516,   792,    23,   171,   594,
      36,   184,   552,    -1,    29,   516,   792,   501,    -1,    29,
     516,   792,   134,   184,    -1,    29,   516,   792,   134,   184,
     185,   149,    -1,   134,   516,   185,   149,   792,   599,    -1,
     134,   516,   792,   599,    -1,    29,   516,   792,   510,   416,
     694,   691,   506,    -1,    29,   516,   792,   509,    -1,    23,
     564,    -1,    29,    85,   786,   550,    -1,   432,    85,   786,
      -1,   134,    85,   185,   149,   786,   599,    -1,   134,    85,
     786,   599,    -1,   366,   236,    -1,   366,   425,    -1,   366,
     562,    -1,   337,   562,    -1,   509,    -1,   429,   724,    -1,
      -1,   557,    -1,   366,   557,    -1,    23,   557,    -1,   134,
     572,    -1,   505,    -1,   508,   490,   505,    -1,   283,   486,
     504,   487,    -1,   366,   106,    -1,    -1,   110,   786,    -1,
     110,   309,   786,    -1,   110,    27,    -1,   110,   309,    27,
      -1,    92,   416,   797,    36,   141,   486,   513,   487,    -1,
     514,    -1,    -1,   791,    -1,   514,   490,   791,    -1,    29,
     352,   786,   333,   405,   786,    -1,    29,   394,   682,   333,
     405,   786,    -1,    29,   394,   185,   149,   682,   333,   405,
     786,    -1,    29,   360,   784,   333,   405,   786,    -1,    29,
     360,   185,   149,   784,   333,   405,   786,    -1,    29,   441,
     784,   333,   405,   786,    -1,    29,   441,   185,   149,   784,
     333,   405,   786,    -1,    29,   194,   784,   333,   405,   786,
      -1,    29,   194,   185,   149,   784,   333,   405,   786,    -1,
      29,   394,   682,   333,   516,   786,   405,   786,    -1,    29,
     394,   185,   149,   682,   333,   516,   786,   405,   786,    -1,
      29,   394,   682,   333,    85,   786,   405,   786,    -1,    29,
     394,   185,   149,   682,   333,    85,   786,   405,   786,    -1,
      75,    -1,    -1,   521,   204,   210,   519,   518,   524,   526,
      -1,   622,    -1,   292,   527,   434,   622,    -1,   486,   531,
     487,   622,    -1,   486,   531,   487,   292,   527,   434,   622,
      -1,   114,   435,    -1,   784,    -1,   784,    36,   792,    -1,
     486,   533,   487,   688,    -1,   279,    85,   786,    -1,    -1,
     627,    -1,    -1,   792,   778,    -1,   534,   475,   724,    -1,
     486,   528,   487,   475,   724,    -1,   279,    83,   520,   130,
     427,   366,   532,   688,    -1,   279,    83,   520,   130,   265,
      -1,    -1,   792,   529,   530,   640,   641,    -1,   729,   529,
     530,   640,   641,    -1,   486,   724,   487,   529,   530,   640,
     641,    -1,   340,   781,    -1,    -1,   428,    -1,   393,    -1,
     534,    -1,   528,   490,   534,    -1,    73,   797,    -1,    -1,
     797,    -1,    -1,   522,    -1,   531,   490,   522,    -1,   523,
      -1,   532,   490,   523,    -1,   525,    -1,   533,   490,   525,
      -1,   792,   778,    -1,   306,   792,    -1,   306,   792,   475,
     836,    -1,   306,   792,   486,   756,   487,    -1,    92,   593,
     360,   784,   537,    -1,    92,   593,   360,   185,   264,   149,
     784,   537,    -1,   541,    -1,    -1,   148,   786,   539,    -1,
      92,   593,   394,   860,    36,   148,   786,   539,   859,    -1,
      92,   593,   394,   185,   264,   149,   860,    36,   148,   786,
     539,   859,    -1,   486,   754,   487,    -1,    -1,    29,   360,
     784,   541,    -1,    29,   360,   185,   149,   784,   541,    -1,
     544,    -1,   541,   544,    -1,   448,    -1,   472,    -1,    -1,
       4,    -1,   477,     4,    -1,   478,     4,    -1,   546,    -1,
      36,   696,    -1,    55,   543,    -1,   105,    -1,   262,   105,
      -1,   193,   545,   543,    -1,   242,   543,    -1,   250,   543,
      -1,   262,   242,    -1,   262,   250,    -1,   293,    54,   797,
      -1,   360,   255,   797,    -1,   380,   542,   543,    -1,   338,
      -1,   338,   542,   543,    -1,    54,    -1,    -1,   790,    -1,
     477,   790,    -1,   478,   790,    -1,    19,   548,    -1,    47,
     548,    -1,   380,   548,    -1,    79,   548,    -1,   140,   548,
      -1,   345,   548,    -1,   451,    -1,   407,    -1,    -1,    92,
     593,   394,   784,   486,   581,   487,   569,   561,    -1,    92,
     593,   394,   185,   264,   149,   784,   486,   581,   487,   569,
     561,    -1,    -1,   550,   573,    -1,   588,    -1,   867,    -1,
     751,    -1,   543,    -1,   791,    -1,   263,    -1,   486,   541,
     487,    -1,    -1,   791,    -1,   262,    22,    -1,   339,    -1,
      58,    -1,   366,   269,    -1,   366,   114,    -1,    85,   786,
     556,    -1,   556,    -1,   568,    -1,    73,   797,    -1,   264,
     269,    -1,   269,    -1,   422,   580,    -1,   312,   216,   580,
      -1,    67,   486,   724,   487,   563,    -1,   114,   725,    -1,
     171,   594,    36,   184,   552,    -1,   327,   784,   583,   591,
     559,    -1,   572,   553,    -1,   279,   427,   554,    -1,   558,
      -1,   585,    -1,   558,   585,    -1,   585,   558,    -1,    -1,
     283,   486,   575,   487,    -1,    -1,   279,    79,   134,    -1,
     279,    79,   119,   348,    -1,   279,    79,   311,   348,    -1,
      -1,   486,   566,   487,    -1,   262,   196,    -1,    -1,    85,
     786,   589,    -1,   589,    -1,    78,    -1,    86,    -1,   115,
      -1,   184,    -1,   195,    -1,   382,    -1,   385,    -1,    27,
      -1,   586,    -1,   566,   490,   586,    -1,   429,   194,   577,
      -1,   116,    -1,   264,   116,    -1,   198,   117,    -1,   198,
     187,    -1,   448,   562,    -1,   448,   277,    -1,   450,   277,
      -1,    -1,   486,   576,   487,    -1,   571,   192,   565,    -1,
     571,   146,   565,    -1,    -1,   801,    -1,   264,   116,    -1,
     116,    -1,   198,   187,    -1,   198,   117,    -1,   264,   431,
      -1,   262,   196,    -1,   792,   694,   560,   584,    -1,   557,
      -1,   575,   490,   557,    -1,   579,    -1,   576,   490,   579,
      -1,   792,    -1,   574,    -1,   592,    -1,   564,    -1,   801,
     475,   551,    -1,   801,    -1,   448,   570,    -1,    -1,   590,
      -1,    -1,   792,    -1,   486,   587,   487,    -1,    -1,   584,
     555,    -1,    -1,   279,   119,   554,    -1,   801,   475,   551,
      -1,   801,    -1,   801,   488,   801,   475,   551,    -1,   801,
     488,   801,    -1,   582,    -1,   587,   490,   582,    -1,   694,
      -1,   794,   798,   481,   416,    -1,   367,   794,   798,   481,
     416,    -1,    67,   486,   724,   487,   550,    -1,   422,   486,
     587,   487,   580,   550,    -1,   422,   567,   550,    -1,   312,
     216,   486,   587,   487,   580,   550,    -1,   312,   216,   567,
     550,    -1,   164,   216,   486,   587,   487,   327,   784,   583,
     591,   559,   550,    -1,   578,    -1,   590,   490,   578,    -1,
     240,   168,    -1,   240,   297,    -1,   240,   372,    -1,    -1,
     226,   784,   571,    -1,   400,    -1,   398,    -1,   230,   400,
      -1,   230,   398,    -1,   173,   400,    -1,   173,   398,    -1,
     425,    -1,    -1,    30,    -1,    54,   114,    -1,   134,   596,
     185,   149,   598,   599,    -1,   134,   596,   598,   599,    -1,
     134,   597,   185,   149,   785,   599,    -1,   134,   597,   785,
     599,    -1,   134,   600,   786,   279,   797,   599,    -1,   134,
     600,   185,   149,   786,   279,   797,   599,    -1,   394,    -1,
     360,    -1,   169,    -1,   237,    -1,   441,    -1,   241,   441,
      -1,   194,    -1,   164,   394,    -1,    74,    -1,    89,    -1,
     382,    -1,   401,   355,   296,    -1,   401,   355,   126,    -1,
     401,   355,   399,    -1,   401,   355,    82,    -1,    21,   243,
      -1,   143,   410,    -1,   152,    -1,   164,   106,   452,    -1,
     318,    -1,   352,    -1,   363,    -1,   797,    -1,   598,   490,
     797,    -1,    58,    -1,   339,    -1,    -1,   304,    -1,   349,
      -1,   410,    -1,    92,   602,   784,   603,    36,   724,    -1,
     169,    -1,   237,    -1,   486,   487,    -1,   486,   756,   487,
      -1,   521,   427,   845,   366,   532,   672,   846,   526,    -1,
      90,   617,   784,   583,   615,   606,   611,   620,   607,   542,
     612,    -1,    90,   486,   805,   487,   405,   611,   620,   542,
     612,    -1,   167,    -1,   405,    -1,   609,   121,   791,    -1,
      -1,   619,    -1,   608,   490,   619,    -1,   429,    -1,    -1,
      36,    -1,    -1,   317,    -1,    -1,   616,    -1,   486,   621,
     487,    -1,   828,    -1,   543,    -1,   479,    -1,   486,   608,
     487,    -1,    -1,   801,   613,    -1,   448,   277,    -1,    -1,
     616,   618,    -1,    -1,    50,    -1,    -1,    50,    -1,   277,
      -1,   166,    -1,   120,   610,   791,    -1,   269,   610,   791,
      -1,    94,    -1,   180,    -1,   319,   610,   791,    -1,   142,
     610,   791,    -1,   163,   319,   587,    -1,   163,   319,   479,
      -1,   163,   264,   269,   587,    -1,   163,   269,   587,    -1,
     138,   791,    -1,   828,    -1,   791,    -1,   383,    -1,   384,
      -1,   614,    -1,   621,   490,   614,    -1,   624,    -1,   623,
      -1,   486,   624,   487,    -1,   486,   623,   487,    -1,   626,
      -1,   625,   637,    -1,   625,   636,   664,   643,    -1,   625,
     636,   642,   665,    -1,   627,   625,    -1,   627,   625,   637,
      -1,   627,   625,   636,   664,   643,    -1,   627,   625,   636,
     642,   665,    -1,   626,    -1,   623,    -1,   359,   635,   780,
     630,   672,   688,   659,   663,   733,   647,    -1,   359,   634,
     781,   630,   672,   688,   659,   663,   733,   647,    -1,   671,
      -1,   394,   682,    -1,   625,   421,   633,   625,    -1,   625,
     208,   633,   625,    -1,   625,   144,   633,   625,    -1,   448,
     628,    -1,   472,   628,    -1,   448,   325,   628,    -1,   629,
      -1,   628,   490,   629,    -1,   786,   799,    36,   486,   805,
     487,    -1,   210,   631,    -1,    -1,   400,   632,   784,    -1,
     398,   632,   784,    -1,   230,   400,   632,   784,    -1,   230,
     398,   632,   784,    -1,   173,   400,   632,   784,    -1,   173,
     398,   632,   784,    -1,   425,   632,   784,    -1,   394,   784,
      -1,   784,    -1,   394,    -1,    -1,    27,    -1,   129,    -1,
      -1,   129,    -1,   129,   279,   486,   754,   487,    -1,    27,
      -1,    -1,   637,    -1,    -1,   285,    54,   638,    -1,   639,
      -1,   638,   490,   639,    -1,   724,   429,   751,   641,    -1,
     724,   640,   641,    -1,    37,    -1,   123,    -1,    -1,   471,
     159,    -1,   471,   220,    -1,    -1,   644,   645,    -1,   645,
     644,    -1,   644,    -1,   645,    -1,   642,    -1,    -1,   227,
     653,    -1,   227,   653,   490,   654,    -1,   157,   658,   655,
     657,   280,    -1,   157,   658,   657,   280,    -1,   276,   654,
      -1,   276,   655,   657,    -1,     4,   481,    -1,     9,   481,
      -1,     4,   301,    -1,     9,   301,    -1,     9,    -1,     9,
     348,    -1,   429,   350,   649,    -1,    -1,   792,    -1,    -1,
     648,   486,   646,   487,   652,    -1,   646,    -1,   646,   486,
     792,   487,    -1,   646,   486,   792,   490,     9,   487,    -1,
     396,   649,    -1,   650,    -1,    -1,   334,   486,     9,   487,
      -1,    -1,   724,    -1,    27,    -1,   724,    -1,   726,    -1,
     477,   656,    -1,   478,   656,    -1,   790,    -1,     4,    -1,
     347,    -1,   348,    -1,   159,    -1,   261,    -1,   176,    54,
     660,    -1,    -1,   661,    -1,   660,   490,   661,    -1,   724,
      -1,   662,    -1,   486,   487,    -1,   179,   724,    -1,    -1,
     666,    -1,   162,   321,   280,    -1,   664,    -1,    -1,   667,
      -1,   666,   667,    -1,   668,   669,   670,    -1,   162,   427,
      -1,   162,   262,   216,   427,    -1,   162,   369,    -1,   162,
     216,   369,    -1,   274,   783,    -1,    -1,   268,    -1,   373,
     235,    -1,    -1,   435,   486,   754,   487,    -1,   671,   490,
     486,   754,   487,    -1,   167,   673,    -1,    -1,   674,    -1,
     673,   490,   674,    -1,   682,   677,   651,    -1,   683,   678,
     651,    -1,   221,   683,   678,    -1,   623,   677,   651,    -1,
     221,   623,   677,    -1,   675,    -1,   486,   675,   487,   676,
      -1,   486,   675,   487,    -1,   674,    93,   215,   674,    -1,
     674,   679,   215,   674,   681,    -1,   674,   215,   674,   681,
      -1,   674,   258,   679,   215,   674,    -1,   674,   258,   215,
     674,    -1,    36,   792,   486,   785,   487,    -1,    36,   793,
      -1,   792,   486,   785,   487,    -1,   792,    -1,   676,    -1,
      -1,   676,    -1,    36,   486,   689,   487,    -1,    36,   792,
     486,   689,   487,    -1,   792,   486,   689,   487,    -1,    -1,
     168,   680,    -1,   224,   680,    -1,   343,   680,    -1,   200,
      -1,   288,    -1,    -1,   429,   486,   785,   487,    -1,   279,
     724,    -1,   784,    -1,   784,   479,    -1,   280,   784,    -1,
     280,   486,   784,   487,    -1,   729,   687,    -1,   348,   167,
     486,   685,   487,   687,    -1,   729,   686,    -1,   684,    -1,
     685,   490,   684,    -1,    36,   486,   689,   487,    -1,    -1,
     472,   286,    -1,    -1,   445,   724,    -1,    -1,   690,    -1,
     689,   490,   690,    -1,   792,   694,   691,    -1,    73,   797,
      -1,    -1,   792,   694,    -1,   692,   490,   792,   694,    -1,
     347,    -1,   388,    -1,   696,   695,    -1,   367,   696,   695,
      -1,   696,    35,   484,   790,   485,    -1,   367,   696,    35,
     484,   790,   485,    -1,   696,    35,    -1,   367,   696,    35,
      -1,   693,   486,   692,   487,   695,    -1,   238,   486,   758,
     487,   695,    -1,   695,   484,   485,    -1,   695,   484,   790,
     485,    -1,    -1,   698,    -1,   700,    -1,   702,    -1,   706,
      -1,   712,    -1,   713,   723,    -1,   713,   486,   790,   487,
      -1,   700,    -1,   703,    -1,   707,    -1,   712,    -1,   796,
     699,    -1,   486,   754,   487,    -1,    -1,   206,    -1,   207,
      -1,   374,    -1,    49,    -1,   322,    -1,   160,   701,    -1,
     133,   308,    -1,   112,   699,    -1,   111,   699,    -1,   272,
     699,    -1,    52,    -1,   486,   790,   487,    -1,    -1,   704,
      -1,   705,    -1,   704,    -1,   705,    -1,    51,   711,   486,
     754,   487,    -1,    51,   711,    -1,   708,    -1,   709,    -1,
     708,    -1,   709,    -1,   710,   486,   790,   487,    -1,   710,
      -1,    65,   711,    -1,    64,   711,    -1,   436,    -1,   257,
      65,   711,    -1,   257,    64,   711,    -1,   259,   711,    -1,
     438,    -1,    -1,   404,   486,   790,   487,   714,    -1,   404,
     714,    -1,   403,   486,   790,   487,   714,    -1,   403,   714,
      -1,   209,    -1,   472,   403,   469,    -1,   450,   403,   469,
      -1,    -1,   466,    -1,   467,    -1,   252,    -1,   253,    -1,
     108,    -1,   109,    -1,   182,    -1,   183,    -1,   248,    -1,
     249,    -1,   356,    -1,   357,    -1,   246,    -1,   247,    -1,
     244,    -1,   245,    -1,   715,    -1,   716,    -1,   717,    -1,
     718,    -1,   719,    -1,   720,    -1,   721,    -1,   722,    -1,
     715,   405,   716,    -1,   717,   405,   718,    -1,   717,   405,
     719,    -1,   717,   405,   720,    -1,   718,   405,   719,    -1,
     718,   405,   720,    -1,   719,   405,   720,    -1,    -1,   726,
      -1,   724,    11,   694,    -1,   724,    73,   797,    -1,   724,
      41,   403,   469,   724,    -1,   477,   724,    -1,   478,   724,
      -1,   724,   477,   724,    -1,   724,   478,   724,    -1,   724,
     479,   724,    -1,   724,   480,   724,    -1,   724,   481,   724,
      -1,   724,   482,   724,    -1,   724,   473,   724,    -1,   724,
     474,   724,    -1,   724,   475,   724,    -1,   724,    16,   724,
      -1,   724,    17,   724,    -1,   724,    18,   724,    -1,   724,
     750,   724,    -1,   750,   724,    -1,   724,   750,    -1,   724,
      33,   724,    -1,   724,   284,   724,    -1,   264,   724,    -1,
     470,   724,    -1,   724,   172,   724,    -1,   724,   226,   724,
      -1,   724,   226,   724,   142,   724,    -1,   724,   470,   226,
     724,    -1,   724,   470,   226,   724,   142,   724,    -1,   724,
     186,   724,    -1,   724,   186,   724,   142,   724,    -1,   724,
     470,   186,   724,    -1,   724,   470,   186,   724,   142,   724,
      -1,   724,   371,   405,   724,    -1,   724,   371,   405,   724,
     142,   724,    -1,   724,   470,   371,   405,   724,    -1,   724,
     470,   371,   405,   724,   142,   724,    -1,   724,   212,   269,
      -1,   724,   213,    -1,   724,   212,   264,   269,    -1,   724,
     264,   269,    -1,   724,   267,    -1,   744,    -1,   491,   746,
     492,    -1,   484,   755,   485,    -1,   744,    15,   724,    -1,
     774,    15,   724,    -1,   744,   290,   744,    -1,   724,   212,
     412,    -1,   724,   212,   264,   412,    -1,   724,   212,   155,
      -1,   724,   212,   264,   155,    -1,   724,   212,   423,    -1,
     724,   212,   264,   423,    -1,   724,   212,   129,   167,   724,
      -1,   724,   212,   264,   129,   167,   724,    -1,   724,   212,
     274,   486,   758,   487,    -1,   724,   212,   264,   274,   486,
     758,   487,    -1,   724,    48,   779,   725,    33,   724,    -1,
     724,   470,    48,   779,   725,    33,   724,    -1,   724,    48,
     391,   725,    33,   724,    -1,   724,   470,    48,   391,   725,
      33,   724,    -1,   724,   191,   768,    -1,   724,   470,   191,
     768,    -1,   724,   752,   747,   623,    -1,   724,   752,   747,
     486,   724,   487,    -1,   114,    -1,    35,   484,   755,   485,
      -1,   726,    -1,   725,    11,   694,    -1,   477,   725,    -1,
     478,   725,    -1,   725,   477,   725,    -1,   725,   478,   725,
      -1,   725,   479,   725,    -1,   725,   480,   725,    -1,   725,
     481,   725,    -1,   725,   482,   725,    -1,   725,   473,   725,
      -1,   725,   474,   725,    -1,   725,   475,   725,    -1,   725,
      16,   725,    -1,   725,    17,   725,    -1,   725,    18,   725,
      -1,   725,   750,   725,    -1,   750,   725,    -1,   725,   750,
      -1,   725,   212,   129,   167,   725,    -1,   725,   212,   264,
     129,   167,   725,    -1,   725,   212,   274,   486,   758,   487,
      -1,   725,   212,   264,   274,   486,   758,   487,    -1,   774,
      -1,   789,    -1,   493,     9,    -1,   494,   778,    -1,    10,
     778,    -1,   486,   724,   487,   778,    -1,   769,    -1,   728,
     778,    -1,   623,    -1,   623,   777,    -1,   149,   623,    -1,
     788,   486,   487,    -1,   788,   486,   756,   636,   487,    -1,
     788,   486,   437,   757,   636,   487,    -1,   788,   486,   756,
     490,   437,   757,   636,   487,    -1,   788,   486,    27,   756,
     636,   487,    -1,   788,   486,   129,   756,   636,   487,    -1,
     788,   486,   479,   487,    -1,   727,   731,   732,   736,    -1,
     730,    -1,   727,    -1,   730,    -1,    74,   162,   486,   724,
     487,    -1,    98,    -1,   101,    -1,   101,   486,   790,   487,
      -1,   102,    -1,   102,   486,   790,   487,    -1,   231,    -1,
     231,   486,   790,   487,    -1,   232,    -1,   232,   486,   790,
     487,    -1,    99,    -1,   103,    -1,   365,    -1,   428,    -1,
      97,    -1,   100,    -1,    61,   486,   724,    36,   694,   487,
      -1,   415,   486,   724,    36,   694,   487,    -1,   154,   486,
     759,   487,    -1,   291,   486,   761,   487,    -1,   305,   486,
     763,   487,    -1,   390,   486,   764,   487,    -1,   409,   486,
     724,    36,   694,   487,    -1,   411,   486,    53,   767,   487,
      -1,   411,   486,   222,   767,   487,    -1,   411,   486,   406,
     767,   487,    -1,   411,   486,   767,   487,    -1,   270,   486,
     724,   490,   724,   487,    -1,    72,   486,   754,   487,    -1,
     449,   176,   486,   637,   487,    -1,    -1,   158,   486,   445,
     724,   487,    -1,    -1,   447,   734,    -1,    -1,   735,    -1,
     734,   490,   735,    -1,   792,    36,   737,    -1,   289,   737,
      -1,   289,   792,    -1,    -1,   486,   738,   739,   636,   740,
     487,    -1,   792,    -1,    -1,   298,    54,   754,    -1,    -1,
     320,   741,    -1,   348,   741,    -1,    -1,   742,    -1,    48,
     742,    33,   742,    -1,   418,   307,    -1,   418,   161,    -1,
      96,   347,    -1,   724,   307,    -1,   724,   161,    -1,   347,
     486,   754,   487,    -1,   347,   486,   487,    -1,   743,    -1,
     486,   754,   490,   724,   487,    -1,   793,   495,   724,    -1,
     745,    -1,   746,   490,   745,    -1,    34,    -1,   376,    -1,
      27,    -1,     8,    -1,   749,    -1,   477,    -1,   478,    -1,
     479,    -1,   480,    -1,   481,    -1,   482,    -1,   473,    -1,
     474,    -1,   475,    -1,    16,    -1,    17,    -1,    18,    -1,
       8,    -1,   281,   486,   753,   487,    -1,   748,    -1,   281,
     486,   753,   487,    -1,   748,    -1,   281,   486,   753,   487,
      -1,   226,    -1,   470,   226,    -1,   172,    -1,   470,   172,
      -1,   186,    -1,   470,   186,    -1,   748,    -1,   792,   488,
     753,    -1,   724,    -1,   754,   490,   724,    -1,   754,    -1,
      -1,   757,    -1,   756,   490,   757,    -1,   724,    -1,   800,
      13,   724,    -1,   800,    14,   724,    -1,   694,    -1,   758,
     490,   694,    -1,   760,   167,   724,    -1,    -1,     3,    -1,
     715,    -1,   716,    -1,   717,    -1,   718,    -1,   719,    -1,
     720,    -1,   721,    -1,   722,    -1,   791,    -1,   724,   762,
     765,   766,    -1,   724,   762,   765,    -1,   302,   724,    -1,
     725,   191,   725,    -1,    -1,   724,   765,   766,    -1,   724,
     766,   765,    -1,   724,   765,    -1,   724,   766,    -1,   754,
      -1,    -1,   167,   724,    -1,   162,   724,    -1,   724,   167,
     754,    -1,   167,   754,    -1,   754,    -1,   623,    -1,   486,
     754,   487,    -1,    60,   773,   770,   772,   140,    -1,   771,
      -1,   770,   771,    -1,   444,   724,   402,   724,    -1,   136,
     724,    -1,    -1,   724,    -1,    -1,   792,    -1,   792,   777,
      -1,   488,   787,    -1,   488,   479,    -1,   484,   724,   485,
      -1,   484,   776,   495,   776,   485,    -1,   724,    -1,    -1,
     775,    -1,   777,   775,    -1,    -1,   778,   775,    -1,    40,
      -1,    -1,   781,    -1,    -1,   782,    -1,   781,   490,   782,
      -1,   724,    36,   802,    -1,   724,     3,    -1,   724,    -1,
     479,    -1,   784,    -1,   783,   490,   784,    -1,   793,    -1,
     792,   777,    -1,   786,    -1,   785,   490,   786,    -1,   792,
      -1,   801,    -1,   795,    -1,   792,   777,    -1,   790,    -1,
       4,    -1,   791,   778,    -1,     6,    -1,     7,    -1,   788,
     791,    -1,   788,   486,   756,   636,   487,   791,    -1,   697,
     791,    -1,   713,   486,   724,   487,   723,    -1,   713,   790,
     723,    -1,   713,   791,   723,    -1,   412,    -1,   155,    -1,
     269,    -1,     9,    -1,     5,    -1,     3,    -1,   861,    -1,
     862,    -1,   792,    -1,     5,    -1,     3,    -1,   861,    -1,
     866,    -1,     3,    -1,   861,    -1,   863,    -1,     3,    -1,
     861,    -1,   864,    -1,   792,    -1,   792,   798,    -1,   488,
     787,    -1,   798,   488,   787,    -1,   486,   785,   487,    -1,
      -1,   794,    -1,     3,    -1,   865,    -1,   861,    -1,   867,
      -1,   801,    -1,     5,    -1,   309,   786,   804,    36,   805,
      -1,   486,   758,   487,    -1,    -1,   622,    -1,   517,    -1,
     604,    -1,   844,    -1,    92,   352,   792,   807,    -1,    92,
     352,   185,   264,   149,   792,   807,    -1,   807,   808,    -1,
      -1,   549,    -1,   809,    -1,   536,    -1,   856,    -1,    92,
     815,   194,   812,   813,   279,   784,   811,   486,   533,   487,
     814,   688,    -1,    92,   815,   194,   812,   185,   264,   149,
     577,   279,   784,   811,   486,   533,   487,   814,   688,    -1,
     792,    -1,   429,   810,    -1,    -1,    81,    -1,    -1,   577,
      -1,    -1,   448,   562,    -1,    -1,   422,    -1,    -1,    29,
     394,   682,   366,   352,   786,    -1,    29,   394,   185,   149,
     682,   366,   352,   786,    -1,    29,   360,   784,   366,   352,
     786,    -1,    29,   360,   185,   149,   784,   366,   352,   786,
      -1,    29,   441,   784,   366,   352,   786,    -1,    29,   441,
     185,   149,   784,   366,   352,   786,    -1,   163,    68,    -1,
      68,    -1,   151,   107,   791,   612,    -1,   190,   107,   791,
      -1,   150,   823,    -1,   150,   827,   821,   823,    -1,   150,
     439,   823,    -1,   150,   486,   826,   487,   823,    -1,   439,
      -1,    -1,   828,    -1,   543,    -1,    -1,   622,    -1,   517,
      -1,   604,    -1,   844,    -1,   858,    -1,     3,    -1,   861,
      -1,   865,    -1,   824,    -1,   791,    -1,   829,    -1,   826,
     490,   829,    -1,    32,    -1,    31,    -1,   412,    -1,   155,
      -1,   279,    -1,   825,    -1,   830,   822,    -1,   824,    -1,
     827,    -1,   366,   832,    -1,   366,   230,   832,    -1,   366,
     364,   832,    -1,   833,    -1,   854,   167,    96,    -1,   403,
     469,   835,    -1,   352,   791,    -1,   854,   405,   836,    -1,
     854,   475,   836,    -1,   854,   405,   114,    -1,   854,   475,
     114,    -1,   828,    -1,   543,    -1,   791,    -1,     3,    -1,
     713,   791,   723,    -1,   713,   486,   790,   487,   791,    -1,
     543,    -1,   114,    -1,   230,    -1,   834,    -1,   836,   490,
     834,    -1,   229,   838,    -1,   791,    -1,   430,   841,   843,
     821,    -1,   430,   841,   843,   821,   784,    -1,   430,   841,
     843,   821,   848,    -1,   430,   486,   842,   487,    -1,   430,
     486,   842,   487,   784,   799,    -1,   827,    -1,   439,    -1,
     166,    -1,   168,    -1,     3,    -1,   168,    -1,    -1,   840,
      -1,   842,   490,   840,    -1,   166,    -1,    -1,   521,   119,
     167,   845,   847,   846,   526,    -1,   682,    -1,   682,   792,
      -1,   682,    36,   792,    -1,   445,   724,    -1,    -1,   429,
     673,    -1,    -1,   827,   821,    -1,   827,   821,   784,   799,
      -1,   337,   851,    -1,   854,    -1,    27,    -1,   850,    -1,
     403,   469,    -1,   407,   214,   225,    -1,   853,   622,    -1,
     853,   854,    -1,   853,   403,   469,    -1,   853,   407,   214,
     225,    -1,   853,    27,    -1,   370,    -1,   124,    -1,   792,
      -1,   854,   488,   792,    -1,    56,   727,    -1,    92,   593,
     441,   784,   583,   814,    36,   622,   857,    -1,    92,   284,
     335,   593,   441,   784,   583,   814,    36,   622,   857,    -1,
      92,   593,   325,   441,   784,   486,   587,   487,   814,    36,
     622,   857,    -1,    92,   284,   335,   593,   325,   441,   784,
     486,   587,   487,   814,    36,   622,   857,    -1,   448,    67,
     282,    -1,   448,    59,    67,   282,    -1,   448,   230,    67,
     282,    -1,    -1,    92,   593,   394,   860,    36,   622,   859,
      -1,    92,   593,   394,   185,   264,   149,   860,    36,   622,
     859,    -1,   448,   106,    -1,   448,   262,   106,    -1,    -1,
     784,   583,   569,   561,    -1,    19,    -1,    20,    -1,    21,
      -1,    22,    -1,    23,    -1,    24,    -1,    25,    -1,    26,
      -1,    28,    -1,    29,    -1,    30,    -1,    38,    -1,    39,
      -1,    41,    -1,    42,    -1,    43,    -1,    45,    -1,    46,
      -1,    47,    -1,    54,    -1,    55,    -1,    56,    -1,    57,
      -1,    58,    -1,    59,    -1,    62,    -1,    63,    -1,    66,
      -1,    68,    -1,    69,    -1,    70,    -1,    71,    -1,    76,
      -1,    77,    -1,    78,    -1,    79,    -1,    80,    -1,    82,
      -1,    83,    -1,    84,    -1,    86,    -1,    87,    -1,    88,
      -1,    89,    -1,    90,    -1,    91,    -1,    94,    -1,    95,
      -1,    96,    -1,   104,    -1,   105,    -1,   106,    -1,   107,
      -1,   108,    -1,   109,    -1,   110,    -1,   113,    -1,   115,
      -1,   117,    -1,   118,    -1,   119,    -1,   120,    -1,   121,
      -1,   122,    -1,   124,    -1,   125,    -1,   126,    -1,   127,
      -1,   128,    -1,   131,    -1,   132,    -1,   133,    -1,   134,
      -1,   135,    -1,   137,    -1,   138,    -1,   139,    -1,   141,
      -1,   142,    -1,   143,    -1,   145,    -1,   146,    -1,   147,
      -1,   148,    -1,   150,    -1,   151,    -1,   152,    -1,   153,
      -1,   156,    -1,   158,    -1,   159,    -1,   161,    -1,   163,
      -1,   165,    -1,   169,    -1,   170,    -1,   171,    -1,   173,
      -1,   175,    -1,   178,    -1,   180,    -1,   181,    -1,   182,
      -1,   183,    -1,   184,    -1,   185,    -1,   187,    -1,   188,
      -1,   189,    -1,   190,    -1,   192,    -1,   193,    -1,   194,
      -1,   195,    -1,   196,    -1,   197,    -1,   199,    -1,   202,
      -1,   203,    -1,   204,    -1,   205,    -1,   211,    -1,   214,
      -1,   216,    -1,   217,    -1,   218,    -1,   219,    -1,   220,
      -1,   223,    -1,   225,    -1,   228,    -1,   229,    -1,   230,
      -1,   233,    -1,   234,    -1,   235,    -1,   236,    -1,   237,
      -1,   239,    -1,   240,    -1,   241,    -1,   242,    -1,   243,
      -1,   244,    -1,   245,    -1,   246,    -1,   247,    -1,   248,
      -1,   249,    -1,   250,    -1,   251,    -1,   252,    -1,   253,
      -1,   254,    -1,   255,    -1,   256,    -1,   260,    -1,   261,
      -1,   262,    -1,   265,    -1,   266,    -1,   268,    -1,   271,
      -1,   273,    -1,   274,    -1,   275,    -1,   277,    -1,   278,
      -1,   281,    -1,   282,    -1,   283,    -1,   286,    -1,   289,
      -1,   292,    -1,   293,    -1,   294,    -1,   295,    -1,   296,
      -1,   297,    -1,   298,    -1,   299,    -1,   300,    -1,   301,
      -1,   303,    -1,   304,    -1,   306,    -1,   307,    -1,   309,
      -1,   310,    -1,   311,    -1,   313,    -1,   314,    -1,   315,
      -1,   316,    -1,   317,    -1,   318,    -1,   319,    -1,   320,
      -1,   321,    -1,   323,    -1,   324,    -1,   325,    -1,   326,
      -1,   328,    -1,   329,    -1,   330,    -1,   331,    -1,   332,
      -1,   333,    -1,   334,    -1,   335,    -1,   336,    -1,   337,
      -1,   338,    -1,   339,    -1,   341,    -1,   342,    -1,   344,
      -1,   345,    -1,   346,    -1,   348,    -1,   349,    -1,   350,
      -1,   351,    -1,   352,    -1,   353,    -1,   354,    -1,   355,
      -1,   356,    -1,   357,    -1,   358,    -1,   360,    -1,   361,
      -1,   362,    -1,   363,    -1,   364,    -1,   366,    -1,   368,
      -1,   369,    -1,   370,    -1,   372,    -1,   373,    -1,   375,
      -1,   377,    -1,   378,    -1,   379,    -1,   380,    -1,   381,
      -1,   382,    -1,   383,    -1,   384,    -1,   385,    -1,   386,
      -1,   387,    -1,   389,    -1,   392,    -1,   393,    -1,   395,
      -1,   397,    -1,   398,    -1,   399,    -1,   400,    -1,   401,
      -1,   407,    -1,   408,    -1,   410,    -1,   413,    -1,   414,
      -1,   416,    -1,   417,    -1,   418,    -1,   419,    -1,   420,
      -1,   423,    -1,   424,    -1,   425,    -1,   426,    -1,   427,
      -1,   430,    -1,   431,    -1,   432,    -1,   433,    -1,   434,
      -1,   438,    -1,   440,    -1,   441,    -1,   442,    -1,   443,
      -1,   446,    -1,   449,    -1,   450,    -1,   451,    -1,   452,
      -1,   453,    -1,   454,    -1,   466,    -1,   467,    -1,   468,
      -1,   469,    -1,    48,    -1,    49,    -1,    51,    -1,    52,
      -1,    64,    -1,    65,    -1,    72,    -1,   111,    -1,   112,
      -1,   149,    -1,   154,    -1,   160,    -1,   177,    -1,   201,
      -1,   206,    -1,   207,    -1,   209,    -1,   238,    -1,   257,
      -1,   259,    -1,   263,    -1,   270,    -1,   272,    -1,   287,
      -1,   291,    -1,   305,    -1,   308,    -1,   322,    -1,   347,
      -1,   367,    -1,   374,    -1,   388,    -1,   390,    -1,   403,
      -1,   404,    -1,   409,    -1,   411,    -1,   415,    -1,   435,
      -1,   436,    -1,   455,    -1,   456,    -1,   457,    -1,   458,
      -1,   459,    -1,   460,    -1,   461,    -1,   462,    -1,   463,
      -1,   464,    -1,   465,    -1,    44,    -1,    50,    -1,    74,
      -1,    81,    -1,    93,    -1,   100,    -1,   166,    -1,   168,
      -1,   172,    -1,   186,    -1,   200,    -1,   212,    -1,   213,
      -1,   215,    -1,   224,    -1,   226,    -1,   238,    -1,   258,
      -1,   267,    -1,   288,    -1,   290,    -1,   343,    -1,   371,
      -1,   388,    -1,   396,    -1,   439,    -1,    44,    -1,    50,
      -1,    74,    -1,    81,    -1,    93,    -1,   100,    -1,   166,
      -1,   168,    -1,   172,    -1,   186,    -1,   200,    -1,   212,
      -1,   213,    -1,   215,    -1,   224,    -1,   226,    -1,   258,
      -1,   267,    -1,   288,    -1,   290,    -1,   343,    -1,   371,
      -1,   396,    -1,   415,    -1,   439,    -1,    48,    -1,    49,
      -1,    51,    -1,    52,    -1,    65,    -1,    64,    -1,    72,
      -1,   111,    -1,   112,    -1,   149,    -1,   154,    -1,   160,
      -1,   177,    -1,   201,    -1,   207,    -1,   209,    -1,   206,
      -1,   238,    -1,   257,    -1,   259,    -1,   263,    -1,   270,
      -1,   272,    -1,   287,    -1,   291,    -1,   305,    -1,   308,
      -1,   322,    -1,   347,    -1,   367,    -1,   374,    -1,   388,
      -1,   390,    -1,   403,    -1,   404,    -1,   409,    -1,   411,
      -1,   415,    -1,   435,    -1,   436,    -1,   455,    -1,   456,
      -1,   457,    -1,   458,    -1,   459,    -1,   460,    -1,   461,
      -1,   462,    -1,   463,    -1,   464,    -1,   465,    -1,    44,
      -1,    50,    -1,    74,    -1,    81,    -1,    93,    -1,   100,
      -1,   166,    -1,   168,    -1,   172,    -1,   186,    -1,   200,
      -1,   212,    -1,   213,    -1,   215,    -1,   224,    -1,   226,
      -1,   238,    -1,   258,    -1,   267,    -1,   288,    -1,   290,
      -1,   343,    -1,   371,    -1,   388,    -1,   396,    -1,   415,
      -1,   439,    -1,    27,    -1,    31,    -1,    32,    -1,    33,
      -1,    34,    -1,    35,    -1,    36,    -1,    37,    -1,    40,
      -1,    53,    -1,    60,    -1,    61,    -1,    67,    -1,    73,
      -1,    75,    -1,    85,    -1,    92,    -1,    97,    -1,    98,
      -1,    99,    -1,   101,    -1,   102,    -1,   103,    -1,   114,
      -1,   116,    -1,   123,    -1,   129,    -1,   130,    -1,   136,
      -1,   140,    -1,   144,    -1,   155,    -1,   157,    -1,   162,
      -1,   164,    -1,   167,    -1,   174,    -1,   176,    -1,   179,
      -1,   191,    -1,   198,    -1,   208,    -1,   210,    -1,   221,
      -1,   222,    -1,   227,    -1,   231,    -1,   232,    -1,   264,
      -1,   269,    -1,   276,    -1,   279,    -1,   280,    -1,   284,
      -1,   285,    -1,   302,    -1,   312,    -1,   327,    -1,   340,
      -1,   359,    -1,   365,    -1,   376,    -1,   391,    -1,   394,
      -1,   402,    -1,   405,    -1,   406,    -1,   412,    -1,   421,
      -1,   422,    -1,   428,    -1,   429,    -1,   437,    -1,   444,
      -1,   445,    -1,   447,    -1,   448,    -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,   461,   461,   477,   489,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   533,
       9,    18,    27,    36,    45,    54,    63,    72,    85,    87,
      93,    94,    99,   103,   107,   118,   126,   130,   139,   148,
     157,   166,   175,   184,   192,   200,   209,   218,   227,   236,
     253,   262,   271,   280,   290,   303,   318,   327,   335,   350,
     358,   368,   378,   385,   392,   400,   407,   418,   419,   424,
     428,   433,   438,   446,   447,   452,   456,   457,     7,    13,
      19,    25,     7,    17,    18,    21,    23,     6,    15,    25,
      35,    45,    55,    65,    75,    85,    95,   106,   117,   127,
     140,   141,     8,    21,    27,    34,    40,    47,    57,    61,
      70,    79,    88,    95,    96,   101,   113,   118,   143,   153,
     163,   169,   180,   191,   206,   207,   213,   214,   219,   220,
     226,   227,   231,   232,   237,   239,   245,   246,   250,   251,
     256,     7,    14,    22,     9,    19,    32,    33,     7,    14,
      31,    51,    52,     9,    17,    29,    30,    34,    35,    36,
      41,    42,    43,    48,    52,    56,    60,    64,    68,    72,
      76,    80,    84,    88,    92,    97,   101,   105,   112,   113,
     117,   118,   119,     2,     9,    15,    21,    28,    35,    45,
      46,    47,     7,    21,    41,    42,    69,    70,    71,    72,
      73,    74,    78,    79,    84,    89,    90,    91,    92,    93,
      98,   105,   106,   107,   124,   131,   138,   148,   158,   170,
     179,   188,   207,   214,   219,   221,   223,   225,   228,   233,
     234,   238,   239,   240,   241,   246,   250,   251,   256,   263,
     268,   269,   270,   271,   272,   273,   274,   275,   281,   282,
     286,   291,   298,   305,   312,   324,   325,   326,   327,   331,
     336,   337,   338,   343,   348,   349,   350,   351,   352,   353,
     358,   381,   385,   392,   393,   397,   401,   402,   403,   407,
     411,   419,   420,   425,   426,   430,   438,   439,   444,   445,
     449,   454,   458,   462,   467,   475,   476,   480,   481,   487,
     498,   511,   525,   539,   553,   567,   590,   594,   601,   605,
     613,   618,   625,   635,   636,   637,   638,   639,   646,   653,
     654,   659,   660,     9,    19,    29,    39,    49,    59,    73,
      74,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    86,    87,    92,    93,    94,    95,    96,    97,
      98,   103,   104,   109,   110,   111,   116,   117,   118,     7,
      18,    19,    23,    27,     7,     1,    30,    53,    54,    59,
      63,    68,    72,    80,    81,    85,    86,    91,    92,    96,
      97,   102,   103,   104,   105,   106,   111,   119,   123,   128,
     129,   134,   138,   143,   147,   151,   155,   159,   163,   167,
     171,   175,   179,   183,   187,   191,   195,   203,   209,   210,
     211,   216,   220,    47,    48,    52,    53,    68,    69,    76,
      84,    92,   100,   108,   116,   127,   128,   155,   170,   186,
     187,   206,   210,   214,   231,   238,   245,   255,   256,   259,
     271,   282,   290,   295,   300,   305,   310,   318,   326,   331,
     336,   343,   344,   348,   349,   350,   357,   358,   362,   363,
     367,   368,   372,   376,   377,   380,   389,   400,   401,   402,
     405,   406,   407,   411,   412,   413,   414,   418,   419,   423,
     425,   441,   443,   448,   451,   459,   463,   467,   471,   475,
     479,   486,   491,   498,   499,   503,   507,   511,   515,   522,
     529,   530,   535,   536,   540,   541,   549,   569,   570,   572,
     577,   578,   582,   583,   586,   587,   612,   613,   617,   618,
     622,   623,   627,   640,   641,   645,   646,   650,   651,   655,
     656,   660,   671,   672,   673,   674,   678,   679,   684,   685,
     686,   695,   701,   719,   720,   724,   725,   731,   737,   745,
     753,   789,   815,   819,   845,   849,   862,   876,   891,   903,
     919,   925,   930,   936,   943,   944,   952,   956,   960,   966,
     973,   978,   979,   980,   981,   985,   986,   998,   999,  1004,
    1011,  1018,  1025,  1057,  1068,  1081,  1086,  1087,  1090,  1091,
    1094,  1095,  1100,  1101,  1106,  1110,  1116,  1137,  1145,  1158,
    1161,  1165,  1165,  1167,  1172,  1179,  1184,  1190,  1195,  1201,
    1207,  1216,  1218,  1221,  1225,  1226,  1227,  1228,  1229,  1230,
    1235,  1255,  1256,  1257,  1258,  1269,  1283,  1284,  1290,  1295,
    1300,  1305,  1310,  1315,  1320,  1325,  1331,  1337,  1343,  1350,
    1372,  1381,  1385,  1393,  1397,  1405,  1417,  1438,  1442,  1448,
    1452,  1465,  1473,  1483,  1485,  1487,  1489,  1491,  1493,  1498,
    1499,  1506,  1515,  1523,  1532,  1543,  1551,  1552,  1553,  1557,
    1557,  1560,  1560,  1563,  1563,  1566,  1566,  1569,  1569,  1572,
    1572,  1575,  1575,  1578,  1578,  1581,  1583,  1585,  1587,  1589,
    1591,  1593,  1595,  1597,  1602,  1607,  1613,  1620,  1625,  1631,
    1637,  1668,  1670,  1672,  1680,  1695,  1697,  1699,  1701,  1703,
    1705,  1707,  1709,  1711,  1713,  1715,  1717,  1719,  1721,  1724,
    1726,  1728,  1731,  1733,  1735,  1737,  1740,  1745,  1750,  1757,
    1762,  1769,  1774,  1782,  1787,  1796,  1804,  1812,  1820,  1838,
    1846,  1854,  1862,  1870,  1878,  1882,  1886,  1890,  1898,  1906,
    1922,  1930,  1938,  1946,  1954,  1962,  1970,  1974,  1978,  1982,
    1986,  1994,  2002,  2010,  2018,  2038,  2060,  2071,  2078,  2092,
    2108,  2110,  2112,  2114,  2116,  2118,  2120,  2122,  2124,  2126,
    2128,  2130,  2132,  2134,  2136,  2138,  2140,  2142,  2144,  2146,
    2150,  2154,  2158,  2172,  2173,  2174,  2181,  2193,  2208,  2220,
    2222,  2234,  2245,  2269,  2282,  2286,  2292,  2299,  2306,  2316,
    2323,  2351,  2386,  2397,  2398,  2405,  2411,  2415,  2419,  2423,
    2427,  2431,  2435,  2439,  2443,  2447,  2451,  2455,  2459,  2463,
    2467,  2471,  2473,  2475,  2479,  2488,  2493,  2500,  2515,  2522,
    2526,  2530,  2534,  2538,  2552,  2553,  2557,  2558,  2566,  2567,
    2571,  2572,  2577,  2585,  2587,  2601,  2604,  2631,  2632,  2635,
    2636,  2647,  2665,  2672,  2681,  2698,  2743,  2751,  2759,  2767,
    2775,  2796,  2797,  2800,  2801,  2805,  2815,  2816,  2818,  2819,
    2820,  2823,  2824,  2827,  2828,  2829,  2830,  2831,  2832,  2833,
    2834,  2835,  2836,  2837,  2838,  2841,  2843,  2848,  2850,  2855,
    2857,  2859,  2861,  2863,  2865,  2867,  2869,  2883,  2885,  2889,
    2893,  2900,  2905,  2912,  2916,  2922,  2926,  2935,  2946,  2947,
    2951,  2955,  2962,  2963,  2964,  2965,  2966,  2967,  2968,  2969,
    2970,  2971,  2981,  2985,  2992,  2999,  3000,  3016,  3020,  3025,
    3029,  3044,  3049,  3053,  3056,  3059,  3060,  3061,  3064,  3071,
    3081,  3095,  3096,  3100,  3111,  3112,  3115,  3116,  3119,  3123,
    3130,  3134,  3138,  3146,  3157,  3158,  3162,  3163,  3167,  3168,
    3171,  3172,  3182,  3183,  3187,  3188,  3191,  3207,  3215,  3223,
    3245,  3246,  3257,  3261,  3288,  3290,  3295,  3297,  3307,  3310,
    3321,  3325,  3329,  3341,  3345,  3354,  3361,  3393,  3397,  3401,
    3405,  3409,  3413,  3417,  3423,  3424,  3440,  3441,  3442,  3445,
    3446,  3452,  3453,  3454,  3457,  3458,  3459,  3462,  3463,  3464,
    3467,  3468,  3471,  3473,  3478,  3479,  3482,  3490,  3491,  3492,
    3493,  3496,  3497,     7,    18,    19,    23,    24,    25,    26,
       7,    16,    34,    41,    46,    47,    48,    49,     8,    33,
      62,    66,    67,    72,    73,    78,    79,    83,    84,    89,
      90,     7,    16,    25,    34,    43,    52,     5,    11,     7,
      20,     9,    16,    26,    33,    44,    45,    50,    51,    52,
      57,    58,    59,    60,    61,    65,    66,    67,    72,    73,
      78,    82,    90,    91,    96,    97,    98,   104,   109,   117,
     118,    10,    16,    22,    32,    33,    41,    52,    64,    72,
      80,    87,    97,    99,   105,   109,   113,   128,   135,   136,
     137,   141,   142,     7,    16,     8,    22,    36,    48,    56,
      70,    71,    72,    73,    74,    87,    88,    93,    94,    98,
      99,     7,    21,    25,    32,    43,    44,    50,    51,     9,
      19,     2,     7,    14,    24,    25,    32,     3,    10,    16,
      22,    28,    37,    37,    39,    40,     6,     8,    21,    34,
      52,    74,    75,    76,    77,    11,    24,    41,    42,    43,
      48,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    63,    63,    63,    63,    63,    63,    63,    63,    63,
      63,    63,    63,    63,    63,    63,    63,    63,    63,    63,
      63,    63,    63,    63,    63,    63,    63,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    65,    65,    65,    65,    65,    65,    65,    65,
      65,    65,    65,    65,    65,    65,    65,    65,    65,    65,
      65,    65,    65,    65,    65,    65,    65,    65,    65,    65,
      65,    65,    65,    65,    65,    65,    65,    65,    65,    65,
      65,    65,    65,    65,    65,    65,    65,    65,    65,    65,
      65,    65,    65,    66,    66,    66,    66,    66,    66,    66,
      66,    66,    66,    66,    66,    66,    66,    66,    66,    66,
      66,    66,    66,    66,    66,    66,    66,    66,    66,    66,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "IDENT", "FCONST", "SCONST", "BCONST",
  "XCONST", "Op", "ICONST", "PARAM", "TYPECAST", "DOT_DOT", "COLON_EQUALS",
  "EQUALS_GREATER", "LAMBDA_ARROW", "LESS_EQUALS", "GREATER_EQUALS",
  "NOT_EQUALS", "ABORT_P", "ABSOLUTE_P", "ACCESS", "ACTION", "ADD_P",
  "ADMIN", "AFTER", "AGGREGATE", "ALL", "ALSO", "ALTER", "ALWAYS",
  "ANALYSE", "ANALYZE", "AND", "ANY", "ARRAY", "AS", "ASC_P", "ASSERTION",
  "ASSIGNMENT", "ASYMMETRIC", "AT", "ATTACH", "ATTRIBUTE", "AUTHORIZATION",
  "BACKWARD", "BEFORE", "BEGIN_P", "BETWEEN", "BIGINT", "BINARY", "BIT",
  "BOOLEAN_P", "BOTH", "BY", "CACHE", "CALL_P", "CALLED", "CASCADE",
  "CASCADED", "CASE", "CAST", "CATALOG_P", "CHAIN", "CHAR_P", "CHARACTER",
  "CHARACTERISTICS", "CHECK_P", "CHECKPOINT", "CLASS", "CLOSE", "CLUSTER",
  "COALESCE", "COLLATE", "COLLATION", "COLUMN", "COLUMNS", "COMMENT",
  "COMMENTS", "COMMIT", "COMMITTED", "CONCURRENTLY", "CONFIGURATION",
  "CONFLICT", "CONNECTION", "CONSTRAINT", "CONSTRAINTS", "CONTENT_P",
  "CONTINUE_P", "CONVERSION_P", "COPY", "COST", "CREATE_P", "CROSS", "CSV",
  "CUBE", "CURRENT_P", "CURRENT_CATALOG", "CURRENT_DATE", "CURRENT_ROLE",
  "CURRENT_SCHEMA", "CURRENT_TIME", "CURRENT_TIMESTAMP", "CURRENT_USER",
  "CURSOR", "CYCLE", "DATA_P", "DATABASE", "DAY_P", "DAYS_P", "DEALLOCATE",
  "DEC", "DECIMAL_P", "DECLARE", "DEFAULT", "DEFAULTS", "DEFERRABLE",
  "DEFERRED", "DEFINER", "DELETE_P", "DELIMITER", "DELIMITERS", "DEPENDS",
  "DESC_P", "DESCRIBE", "DETACH", "DICTIONARY", "DISABLE_P", "DISCARD",
  "DISTINCT", "DO", "DOCUMENT_P", "DOMAIN_P", "DOUBLE_P", "DROP", "EACH",
  "ELSE", "ENABLE_P", "ENCODING", "ENCRYPTED", "END_P", "ENUM_P", "ESCAPE",
  "EVENT", "EXCEPT", "EXCLUDE", "EXCLUDING", "EXCLUSIVE", "EXECUTE",
  "EXISTS", "EXPLAIN", "EXPORT_P", "EXTENSION", "EXTERNAL", "EXTRACT",
  "FALSE_P", "FAMILY", "FETCH", "FILTER", "FIRST_P", "FLOAT_P",
  "FOLLOWING", "FOR", "FORCE", "FOREIGN", "FORWARD", "FREEZE", "FROM",
  "FULL", "FUNCTION", "FUNCTIONS", "GENERATED", "GLOB", "GLOBAL", "GRANT",
  "GRANTED", "GROUP_P", "GROUPING", "HANDLER", "HAVING", "HEADER_P",
  "HOLD", "HOUR_P", "HOURS_P", "IDENTITY_P", "IF_P", "ILIKE", "IMMEDIATE",
  "IMMUTABLE", "IMPLICIT_P", "IMPORT_P", "IN_P", "INCLUDING", "INCREMENT",
  "INDEX", "INDEXES", "INHERIT", "INHERITS", "INITIALLY", "INLINE_P",
  "INNER_P", "INOUT", "INPUT_P", "INSENSITIVE", "INSERT", "INSTEAD",
  "INT_P", "INTEGER", "INTERSECT", "INTERVAL", "INTO", "INVOKER", "IS",
  "ISNULL", "ISOLATION", "JOIN", "KEY", "LABEL", "LANGUAGE", "LARGE_P",
  "LAST_P", "LATERAL_P", "LEADING", "LEAKPROOF", "LEFT", "LEVEL", "LIKE",
  "LIMIT", "LISTEN", "LOAD", "LOCAL", "LOCALTIME", "LOCALTIMESTAMP",
  "LOCATION", "LOCK_P", "LOCKED", "LOGGED", "MACRO", "MAP", "MAPPING",
  "MATCH", "MATERIALIZED", "MAXVALUE", "METHOD", "MICROSECOND_P",
  "MICROSECONDS_P", "MILLISECOND_P", "MILLISECONDS_P", "MINUTE_P",
  "MINUTES_P", "MINVALUE", "MODE", "MONTH_P", "MONTHS_P", "MOVE", "NAME_P",
  "NAMES", "NATIONAL", "NATURAL", "NCHAR", "NEW", "NEXT", "NO", "NONE",
  "NOT", "NOTHING", "NOTIFY", "NOTNULL", "NOWAIT", "NULL_P", "NULLIF",
  "NULLS_P", "NUMERIC", "OBJECT_P", "OF", "OFF", "OFFSET", "OIDS", "OLD",
  "ON", "ONLY", "OPERATOR", "OPTION", "OPTIONS", "OR", "ORDER",
  "ORDINALITY", "OUT_P", "OUTER_P", "OVER", "OVERLAPS", "OVERLAY",
  "OVERRIDING", "OWNED", "OWNER", "PARALLEL", "PARSER", "PARTIAL",
  "PARTITION", "PASSING", "PASSWORD", "PERCENT", "PLACING", "PLANS",
  "POLICY", "POSITION", "PRAGMA_P", "PRECEDING", "PRECISION", "PREPARE",
  "PREPARED", "PRESERVE", "PRIMARY", "PRIOR", "PRIVILEGES", "PROCEDURAL",
  "PROCEDURE", "PROGRAM", "PUBLICATION", "QUOTE", "RANGE", "READ_P",
  "REAL", "REASSIGN", "RECHECK", "RECURSIVE", "REF", "REFERENCES",
  "REFERENCING", "REFRESH", "REINDEX", "RELATIVE_P", "RELEASE", "RENAME",
  "REPEATABLE", "REPLACE", "REPLICA", "RESET", "RESTART", "RESTRICT",
  "RETURNING", "RETURNS", "REVOKE", "RIGHT", "ROLE", "ROLLBACK", "ROLLUP",
  "ROW", "ROWS", "RULE", "SAMPLE", "SAVEPOINT", "SCHEMA", "SCHEMAS",
  "SCROLL", "SEARCH", "SECOND_P", "SECONDS_P", "SECURITY", "SELECT",
  "SEQUENCE", "SEQUENCES", "SERIALIZABLE", "SERVER", "SESSION",
  "SESSION_USER", "SET", "SETOF", "SETS", "SHARE", "SHOW", "SIMILAR",
  "SIMPLE", "SKIP", "SMALLINT", "SNAPSHOT", "SOME", "SQL_P", "STABLE",
  "STANDALONE_P", "START", "STATEMENT", "STATISTICS", "STDIN", "STDOUT",
  "STORAGE", "STRICT_P", "STRIP_P", "STRUCT", "SUBSCRIPTION", "SUBSTRING",
  "SYMMETRIC", "SYSID", "SYSTEM_P", "TABLE", "TABLES", "TABLESAMPLE",
  "TABLESPACE", "TEMP", "TEMPLATE", "TEMPORARY", "TEXT_P", "THEN", "TIME",
  "TIMESTAMP", "TO", "TRAILING", "TRANSACTION", "TRANSFORM", "TREAT",
  "TRIGGER", "TRIM", "TRUE_P", "TRUNCATE", "TRUSTED", "TRY_CAST", "TYPE_P",
  "TYPES_P", "UNBOUNDED", "UNCOMMITTED", "UNENCRYPTED", "UNION", "UNIQUE",
  "UNKNOWN", "UNLISTEN", "UNLOGGED", "UNTIL", "UPDATE", "USER", "USING",
  "VACUUM", "VALID", "VALIDATE", "VALIDATOR", "VALUE_P", "VALUES",
  "VARCHAR", "VARIADIC", "VARYING", "VERBOSE", "VERSION_P", "VIEW",
  "VIEWS", "VOLATILE", "WHEN", "WHERE", "WHITESPACE_P", "WINDOW", "WITH",
  "WITHIN", "WITHOUT", "WORK", "WRAPPER", "WRITE_P", "XML_P",
  "XMLATTRIBUTES", "XMLCONCAT", "XMLELEMENT", "XMLEXISTS", "XMLFOREST",
  "XMLNAMESPACES", "XMLPARSE", "XMLPI", "XMLROOT", "XMLSERIALIZE",
  "XMLTABLE", "YEAR_P", "YEARS_P", "YES_P", "ZONE", "NOT_LA", "NULLS_LA",
  "WITH_LA", "'<'", "'>'", "'='", "POSTFIXOP", "'+'", "'-'", "'*'", "'/'",
  "'%'", "'^'", "UMINUS", "'['", "']'", "'('", "')'", "'.'", "';'", "','",
  "'{'", "'}'", "'#'", "'?'", "':'", "$accept", "stmtblock", "stmtmulti",
  "stmt", "AlterTableStmt", "alter_identity_column_option_list",
  "alter_column_default", "alter_identity_column_option",
  "alter_generic_option_list", "alter_table_cmd", "alter_using",
  "alter_generic_option_elem", "alter_table_cmds", "alter_generic_options",
  "opt_set_data", "DeallocateStmt", "CreateEnumStmt", "opt_enum_val_list",
  "enum_val_list", "RenameStmt", "opt_column", "InsertStmt", "insert_rest",
  "insert_target", "opt_conf_expr", "opt_with_clause",
  "insert_column_item", "set_clause", "opt_on_conflict", "index_elem",
  "returning_clause", "override_kind", "set_target_list", "opt_collate",
  "opt_class", "insert_column_list", "set_clause_list", "index_params",
  "set_target", "PragmaStmt", "CreateSeqStmt", "OptSeqOptList",
  "ExecuteStmt", "execute_param_clause", "AlterSeqStmt", "SeqOptList",
  "opt_with", "NumericOnly", "SeqOptElem", "opt_by", "SignedIconst",
  "TransactionStmt", "opt_transaction", "CreateStmt",
  "ConstraintAttributeSpec", "def_arg", "OptParenthesizedSeqOptList",
  "generic_option_arg", "key_action", "ColConstraint", "ColConstraintElem",
  "generic_option_elem", "key_update", "key_actions",
  "create_generic_options", "OnCommitOption", "reloptions",
  "opt_no_inherit", "TableConstraint", "TableLikeOption", "reloption_list",
  "ExistingIndex", "ConstraintAttr", "OptWith", "definition",
  "TableLikeOptionList", "generic_option_name", "ConstraintAttributeElem",
  "columnDef", "generic_option_list", "def_list", "index_name",
  "TableElement", "def_elem", "opt_definition", "OptTableElementList",
  "columnElem", "opt_column_list", "ColQualList", "key_delete",
  "reloption_elem", "columnList", "func_type", "ConstraintElem",
  "TableElementList", "key_match", "TableLikeClause", "OptTemp",
  "generated_when", "DropStmt", "drop_type_any_name", "drop_type_name",
  "any_name_list", "opt_drop_behavior", "drop_type_name_on_any_name",
  "CreateFunctionStmt", "macro_alias", "param_list", "UpdateStmt",
  "CopyStmt", "copy_from", "copy_delimiter", "copy_generic_opt_arg_list",
  "opt_using", "opt_as", "opt_program", "copy_options",
  "copy_generic_opt_arg", "copy_generic_opt_elem", "opt_oids",
  "copy_opt_list", "opt_binary", "copy_opt_item",
  "copy_generic_opt_arg_list_item", "copy_file_name",
  "copy_generic_opt_list", "SelectStmt", "select_with_parens",
  "select_no_parens", "select_clause", "simple_select", "with_clause",
  "cte_list", "common_table_expr", "into_clause", "OptTempTableName",
  "opt_table", "all_or_distinct", "distinct_clause", "opt_all_clause",
  "opt_sort_clause", "sort_clause", "sortby_list", "sortby",
  "opt_asc_desc", "opt_nulls_order", "select_limit", "opt_select_limit",
  "limit_clause", "offset_clause", "sample_count", "sample_clause",
  "opt_sample_func", "tablesample_entry", "tablesample_clause",
  "opt_tablesample_clause", "opt_repeatable_clause", "select_limit_value",
  "select_offset_value", "select_fetch_first_value", "I_or_F_const",
  "row_or_rows", "first_or_next", "group_clause", "group_by_list",
  "group_by_item", "empty_grouping_set", "having_clause",
  "for_locking_clause", "opt_for_locking_clause", "for_locking_items",
  "for_locking_item", "for_locking_strength", "locked_rels_list",
  "opt_nowait_or_skip", "values_clause", "from_clause", "from_list",
  "table_ref", "joined_table", "alias_clause", "opt_alias_clause",
  "func_alias_clause", "join_type", "join_outer", "join_qual",
  "relation_expr", "func_table", "rowsfrom_item", "rowsfrom_list",
  "opt_col_def_list", "opt_ordinality", "where_clause",
  "TableFuncElementList", "TableFuncElement", "opt_collate_clause",
  "colid_type_list", "RowOrStruct", "Typename", "opt_array_bounds",
  "SimpleTypename", "ConstTypename", "GenericType", "opt_type_modifiers",
  "Numeric", "opt_float", "Bit", "ConstBit", "BitWithLength",
  "BitWithoutLength", "Character", "ConstCharacter", "CharacterWithLength",
  "CharacterWithoutLength", "character", "opt_varying", "ConstDatetime",
  "ConstInterval", "opt_timezone", "year_keyword", "month_keyword",
  "day_keyword", "hour_keyword", "minute_keyword", "second_keyword",
  "millisecond_keyword", "microsecond_keyword", "opt_interval", "a_expr",
  "b_expr", "c_expr", "func_application", "func_expr",
  "func_expr_windowless", "func_expr_common_subexpr",
  "within_group_clause", "filter_clause", "window_clause",
  "window_definition_list", "window_definition", "over_clause",
  "window_specification", "opt_existing_window_name",
  "opt_partition_clause", "opt_frame_clause", "frame_extent",
  "frame_bound", "qualified_row", "row", "dict_arg", "dict_arguments",
  "sub_type", "all_Op", "MathOp", "qual_Op", "qual_all_Op", "subquery_Op",
  "any_operator", "expr_list", "opt_expr_list", "func_arg_list",
  "func_arg_expr", "type_list", "extract_list", "extract_arg",
  "overlay_list", "overlay_placing", "position_list", "substr_list",
  "substr_from", "substr_for", "trim_list", "in_expr", "case_expr",
  "when_clause_list", "when_clause", "case_default", "case_arg",
  "columnref", "indirection_el", "opt_slice_bound", "indirection",
  "opt_indirection", "opt_asymmetric", "opt_target_list", "target_list",
  "target_el", "qualified_name_list", "qualified_name", "name_list",
  "name", "attr_name", "func_name", "AexprConst", "Iconst", "Sconst",
  "ColId", "ColIdOrString", "type_function_name", "function_name_token",
  "type_name_token", "any_name", "attrs", "opt_name_list", "param_name",
  "ColLabel", "ColLabelOrString", "PrepareStmt", "prep_type_clause",
  "PreparableStmt", "CreateSchemaStmt", "OptSchemaEltList", "schema_stmt",
  "IndexStmt", "access_method", "access_method_clause", "opt_concurrently",
  "opt_index_name", "opt_reloptions", "opt_unique",
  "AlterObjectSchemaStmt", "CheckPointStmt", "ExportStmt", "ImportStmt",
  "ExplainStmt", "opt_verbose", "explain_option_arg", "ExplainableStmt",
  "NonReservedWord", "NonReservedWord_or_Sconst", "explain_option_list",
  "analyze_keyword", "opt_boolean_or_string", "explain_option_elem",
  "explain_option_name", "VariableSetStmt", "set_rest", "generic_set",
  "var_value", "zone_value", "var_list", "LoadStmt", "file_name",
  "VacuumStmt", "vacuum_option_elem", "opt_full", "vacuum_option_list",
  "opt_freeze", "DeleteStmt", "relation_expr_opt_alias",
  "where_or_current_clause", "using_clause", "AnalyzeStmt",
  "VariableResetStmt", "generic_reset", "reset_rest", "VariableShowStmt",
  "show_or_describe", "var_name", "CallStmt", "ViewStmt",
  "opt_check_option", "CreateAsStmt", "opt_with_data", "create_as_target",
  "unreserved_keyword", "col_name_keyword", "func_name_keyword",
  "type_name_keyword", "other_keyword", "type_func_name_keyword",
  "reserved_keyword", 0
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,    60,    62,    61,   728,    43,    45,    42,
      47,    37,    94,   729,    91,    93,    40,    41,    46,    59,
      44,   123,   125,    35,    63,    58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   496,   497,   498,   498,   499,   499,   499,   499,   499,
     499,   499,   499,   499,   499,   499,   499,   499,   499,   499,
     499,   499,   499,   499,   499,   499,   499,   499,   499,   499,
     499,   499,   499,   499,   499,   499,   499,   499,   499,   499,
     500,   500,   500,   500,   500,   500,   500,   500,   501,   501,
     502,   502,   503,   503,   503,   503,   504,   504,   505,   505,
     505,   505,   505,   505,   505,   505,   505,   505,   505,   505,
     505,   505,   505,   505,   505,   505,   505,   505,   505,   505,
     505,   505,   505,   505,   505,   505,   505,   506,   506,   507,
     507,   507,   507,   508,   508,   509,   510,   510,   511,   511,
     511,   511,   512,   513,   513,   514,   514,   515,   515,   515,
     515,   515,   515,   515,   515,   515,   515,   515,   515,   515,
     516,   516,   517,   518,   518,   518,   518,   518,   519,   519,
     520,   520,   520,   521,   521,   522,   523,   523,   524,   524,
     524,   525,   525,   525,   526,   526,   527,   527,   528,   528,
     529,   529,   530,   530,   531,   531,   532,   532,   533,   533,
     534,   535,   535,   535,   536,   536,   537,   537,   538,   538,
     538,   539,   539,   540,   540,   541,   541,   542,   542,   542,
     543,   543,   543,   543,   544,   544,   544,   544,   544,   544,
     544,   544,   544,   544,   544,   544,   544,   544,   545,   545,
     546,   546,   546,   547,   547,   547,   547,   547,   547,   548,
     548,   548,   549,   549,   550,   550,   551,   551,   551,   551,
     551,   551,   552,   552,   553,   554,   554,   554,   554,   554,
     555,   555,   555,   555,   556,   556,   556,   556,   556,   556,
     556,   556,   557,   558,   559,   559,   559,   559,   559,   560,
     560,   561,   561,   561,   561,   562,   563,   563,   564,   564,
     565,   565,   565,   565,   565,   565,   565,   565,   566,   566,
     567,   568,   568,   568,   568,   569,   569,   569,   569,   570,
     571,   571,   571,   572,   573,   573,   573,   573,   573,   573,
     574,   575,   575,   576,   576,   577,   578,   578,   578,   579,
     579,   580,   580,   581,   581,   582,   583,   583,   584,   584,
     585,   586,   586,   586,   586,   587,   587,   588,   588,   588,
     589,   589,   589,   589,   589,   589,   590,   590,   591,   591,
     591,   591,   592,   593,   593,   593,   593,   593,   593,   593,
     593,   594,   594,   595,   595,   595,   595,   595,   595,   596,
     596,   596,   596,   596,   596,   596,   596,   596,   596,   596,
     596,   596,   596,   596,   597,   597,   597,   597,   597,   597,
     597,   598,   598,   599,   599,   599,   600,   600,   600,   601,
     602,   602,   603,   603,   604,   605,   605,   606,   606,   607,
     607,   608,   608,   609,   609,   610,   610,   611,   611,   612,
     612,   613,   613,   613,   613,   613,   614,   615,   615,   616,
     616,   617,   617,   618,   618,   618,   618,   618,   618,   618,
     618,   618,   618,   618,   618,   618,   618,   619,   620,   620,
     620,   621,   621,   622,   622,   623,   623,   624,   624,   624,
     624,   624,   624,   624,   624,   625,   625,   626,   626,   626,
     626,   626,   626,   626,   627,   627,   627,   628,   628,   629,
     630,   630,   631,   631,   631,   631,   631,   631,   631,   631,
     631,   632,   632,   633,   633,   633,   634,   634,   635,   635,
     636,   636,   637,   638,   638,   639,   639,   640,   640,   640,
     641,   641,   641,   642,   642,   642,   642,   643,   643,   644,
     644,   644,   644,   645,   645,   646,   646,   646,   646,   646,
     646,   647,   647,   648,   648,   649,   649,   649,   649,   650,
     651,   651,   652,   652,   653,   653,   654,   655,   655,   655,
     656,   656,   657,   657,   658,   658,   659,   659,   660,   660,
     661,   661,   662,   663,   663,   664,   664,   665,   665,   666,
     666,   667,   668,   668,   668,   668,   669,   669,   670,   670,
     670,   671,   671,   672,   672,   673,   673,   674,   674,   674,
     674,   674,   674,   674,   675,   675,   675,   675,   675,   675,
     676,   676,   676,   676,   677,   677,   678,   678,   678,   678,
     678,   679,   679,   679,   679,   680,   680,   681,   681,   682,
     682,   682,   682,   683,   683,   684,   685,   685,   686,   686,
     687,   687,   688,   688,   689,   689,   690,   691,   691,   692,
     692,   693,   693,   694,   694,   694,   694,   694,   694,   694,
     694,   695,   695,   695,   696,   696,   696,   696,   696,   696,
     696,   697,   697,   697,   697,   698,   699,   699,   700,   700,
     700,   700,   700,   700,   700,   700,   700,   700,   700,   701,
     701,   702,   702,   703,   703,   704,   705,   706,   706,   707,
     707,   708,   709,   710,   710,   710,   710,   710,   710,   711,
     711,   712,   712,   712,   712,   713,   714,   714,   714,   715,
     715,   716,   716,   717,   717,   718,   718,   719,   719,   720,
     720,   721,   721,   722,   722,   723,   723,   723,   723,   723,
     723,   723,   723,   723,   723,   723,   723,   723,   723,   723,
     723,   724,   724,   724,   724,   724,   724,   724,   724,   724,
     724,   724,   724,   724,   724,   724,   724,   724,   724,   724,
     724,   724,   724,   724,   724,   724,   724,   724,   724,   724,
     724,   724,   724,   724,   724,   724,   724,   724,   724,   724,
     724,   724,   724,   724,   724,   724,   724,   724,   724,   724,
     724,   724,   724,   724,   724,   724,   724,   724,   724,   724,
     724,   724,   724,   724,   724,   724,   724,   724,   724,   724,
     725,   725,   725,   725,   725,   725,   725,   725,   725,   725,
     725,   725,   725,   725,   725,   725,   725,   725,   725,   725,
     725,   725,   725,   726,   726,   726,   726,   726,   726,   726,
     726,   726,   726,   726,   727,   727,   727,   727,   727,   727,
     727,   728,   728,   729,   729,   730,   730,   730,   730,   730,
     730,   730,   730,   730,   730,   730,   730,   730,   730,   730,
     730,   730,   730,   730,   730,   730,   730,   730,   730,   730,
     730,   730,   730,   730,   731,   731,   732,   732,   733,   733,
     734,   734,   735,   736,   736,   736,   737,   738,   738,   739,
     739,   740,   740,   740,   741,   741,   742,   742,   742,   742,
     742,   743,   743,   744,   744,   745,   746,   746,   747,   747,
     747,   748,   748,   749,   749,   749,   749,   749,   749,   749,
     749,   749,   749,   749,   749,   750,   750,   751,   751,   752,
     752,   752,   752,   752,   752,   752,   752,   753,   753,   754,
     754,   755,   755,   756,   756,   757,   757,   757,   758,   758,
     759,   759,   760,   760,   760,   760,   760,   760,   760,   760,
     760,   760,   761,   761,   762,   763,   763,   764,   764,   764,
     764,   764,   764,   765,   766,   767,   767,   767,   768,   768,
     769,   770,   770,   771,   772,   772,   773,   773,   774,   774,
     775,   775,   775,   775,   776,   776,   777,   777,   778,   778,
     779,   779,   780,   780,   781,   781,   782,   782,   782,   782,
     783,   783,   784,   784,   785,   785,   786,   787,   788,   788,
     789,   789,   789,   789,   789,   789,   789,   789,   789,   789,
     789,   789,   789,   789,   790,   791,   792,   792,   792,   793,
     793,   794,   794,   794,   795,   795,   795,   796,   796,   796,
     797,   797,   798,   798,   799,   799,   800,   801,   801,   801,
     801,   802,   802,   803,   804,   804,   805,   805,   805,   805,
     806,   806,   807,   807,   808,   808,   808,   808,   809,   809,
     810,   811,   811,   812,   812,   813,   813,   814,   814,   815,
     815,   816,   816,   816,   816,   816,   816,   817,   817,   818,
     819,   820,   820,   820,   820,   821,   821,   822,   822,   822,
     823,   823,   823,   823,   823,   824,   824,   824,   825,   825,
     826,   826,   827,   827,   828,   828,   828,   828,   829,   830,
     830,   831,   831,   831,   832,   832,   832,   832,   833,   833,
     833,   833,   834,   834,   835,   835,   835,   835,   835,   835,
     835,   836,   836,   837,   838,   839,   839,   839,   839,   839,
     840,   840,   840,   840,   840,   841,   841,   842,   842,   843,
     843,   844,   845,   845,   845,   846,   846,   847,   847,   848,
     848,   849,   850,   850,   851,   851,   851,   852,   852,   852,
     852,   852,   853,   853,   854,   854,   855,   856,   856,   856,
     856,   857,   857,   857,   857,   858,   858,   859,   859,   859,
     860,   861,   861,   861,   861,   861,   861,   861,   861,   861,
     861,   861,   861,   861,   861,   861,   861,   861,   861,   861,
     861,   861,   861,   861,   861,   861,   861,   861,   861,   861,
     861,   861,   861,   861,   861,   861,   861,   861,   861,   861,
     861,   861,   861,   861,   861,   861,   861,   861,   861,   861,
     861,   861,   861,   861,   861,   861,   861,   861,   861,   861,
     861,   861,   861,   861,   861,   861,   861,   861,   861,   861,
     861,   861,   861,   861,   861,   861,   861,   861,   861,   861,
     861,   861,   861,   861,   861,   861,   861,   861,   861,   861,
     861,   861,   861,   861,   861,   861,   861,   861,   861,   861,
     861,   861,   861,   861,   861,   861,   861,   861,   861,   861,
     861,   861,   861,   861,   861,   861,   861,   861,   861,   861,
     861,   861,   861,   861,   861,   861,   861,   861,   861,   861,
     861,   861,   861,   861,   861,   861,   861,   861,   861,   861,
     861,   861,   861,   861,   861,   861,   861,   861,   861,   861,
     861,   861,   861,   861,   861,   861,   861,   861,   861,   861,
     861,   861,   861,   861,   861,   861,   861,   861,   861,   861,
     861,   861,   861,   861,   861,   861,   861,   861,   861,   861,
     861,   861,   861,   861,   861,   861,   861,   861,   861,   861,
     861,   861,   861,   861,   861,   861,   861,   861,   861,   861,
     861,   861,   861,   861,   861,   861,   861,   861,   861,   861,
     861,   861,   861,   861,   861,   861,   861,   861,   861,   861,
     861,   861,   861,   861,   861,   861,   861,   861,   861,   861,
     861,   861,   861,   861,   861,   861,   861,   861,   861,   861,
     861,   861,   861,   861,   861,   861,   861,   861,   861,   861,
     861,   861,   861,   861,   861,   861,   861,   861,   861,   861,
     861,   861,   861,   861,   861,   861,   861,   861,   861,   861,
     861,   861,   861,   861,   861,   861,   861,   861,   861,   861,
     861,   861,   861,   861,   861,   861,   861,   861,   861,   861,
     861,   861,   861,   861,   861,   861,   861,   861,   861,   861,
     862,   862,   862,   862,   862,   862,   862,   862,   862,   862,
     862,   862,   862,   862,   862,   862,   862,   862,   862,   862,
     862,   862,   862,   862,   862,   862,   862,   862,   862,   862,
     862,   862,   862,   862,   862,   862,   862,   862,   862,   862,
     862,   862,   862,   862,   862,   862,   862,   862,   862,   862,
     862,   863,   863,   863,   863,   863,   863,   863,   863,   863,
     863,   863,   863,   863,   863,   863,   863,   863,   863,   863,
     863,   863,   863,   863,   863,   863,   863,   864,   864,   864,
     864,   864,   864,   864,   864,   864,   864,   864,   864,   864,
     864,   864,   864,   864,   864,   864,   864,   864,   864,   864,
     864,   864,   865,   865,   865,   865,   865,   865,   865,   865,
     865,   865,   865,   865,   865,   865,   865,   865,   865,   865,
     865,   865,   865,   865,   865,   865,   865,   865,   865,   865,
     865,   865,   865,   865,   865,   865,   865,   865,   865,   865,
     865,   865,   865,   865,   865,   865,   865,   865,   865,   865,
     865,   865,   865,   866,   866,   866,   866,   866,   866,   866,
     866,   866,   866,   866,   866,   866,   866,   866,   866,   866,
     866,   866,   866,   866,   866,   866,   866,   866,   866,   866,
     867,   867,   867,   867,   867,   867,   867,   867,   867,   867,
     867,   867,   867,   867,   867,   867,   867,   867,   867,   867,
     867,   867,   867,   867,   867,   867,   867,   867,   867,   867,
     867,   867,   867,   867,   867,   867,   867,   867,   867,   867,
     867,   867,   867,   867,   867,   867,   867,   867,   867,   867,
     867,   867,   867,   867,   867,   867,   867,   867,   867,   867,
     867,   867,   867,   867,   867,   867,   867,   867,   867,   867,
     867,   867,   867,   867,   867,   867,   867
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       4,     6,     4,     6,     4,     6,     4,     6,     1,     2,
       3,     2,     1,     3,     2,     3,     1,     3,     2,     5,
       3,     6,     4,     6,     6,     6,     5,     5,     6,     9,
       4,     5,     7,     6,     4,     8,     4,     2,     4,     3,
       6,     4,     2,     2,     2,     2,     1,     2,     0,     1,
       2,     2,     2,     1,     3,     4,     2,     0,     2,     3,
       2,     3,     8,     1,     0,     1,     3,     6,     6,     8,
       6,     8,     6,     8,     6,     8,     8,    10,     8,    10,
       1,     0,     7,     1,     4,     4,     7,     2,     1,     3,
       4,     3,     0,     1,     0,     2,     3,     5,     8,     5,
       0,     5,     5,     7,     2,     0,     1,     1,     1,     3,
       2,     0,     1,     0,     1,     3,     1,     3,     1,     3,
       2,     2,     4,     5,     5,     8,     1,     0,     3,     9,
      12,     3,     0,     4,     6,     1,     2,     1,     1,     0,
       1,     2,     2,     1,     2,     2,     1,     2,     3,     2,
       2,     2,     2,     3,     3,     3,     1,     3,     1,     0,
       1,     2,     2,     2,     2,     2,     2,     2,     2,     1,
       1,     0,     9,    12,     0,     2,     1,     1,     1,     1,
       1,     1,     3,     0,     1,     2,     1,     1,     2,     2,
       3,     1,     1,     2,     2,     1,     2,     3,     5,     2,
       5,     5,     2,     3,     1,     1,     2,     2,     0,     4,
       0,     3,     4,     4,     0,     3,     2,     0,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     3,
       3,     1,     2,     2,     2,     2,     2,     2,     0,     3,
       3,     3,     0,     1,     2,     1,     2,     2,     2,     2,
       4,     1,     3,     1,     3,     1,     1,     1,     1,     3,
       1,     2,     0,     1,     0,     1,     3,     0,     2,     0,
       3,     3,     1,     5,     3,     1,     3,     1,     4,     5,
       5,     6,     3,     7,     4,    11,     1,     3,     2,     2,
       2,     0,     3,     1,     1,     2,     2,     2,     2,     1,
       0,     1,     2,     6,     4,     6,     4,     6,     8,     1,
       1,     1,     1,     1,     2,     1,     2,     1,     1,     1,
       3,     3,     3,     3,     2,     2,     1,     3,     1,     1,
       1,     1,     3,     1,     1,     0,     1,     1,     1,     6,
       1,     1,     2,     3,     8,    11,     9,     1,     1,     3,
       0,     1,     3,     1,     0,     1,     0,     1,     0,     1,
       3,     1,     1,     1,     3,     0,     2,     2,     0,     2,
       0,     1,     0,     1,     1,     1,     3,     3,     1,     1,
       3,     3,     3,     3,     4,     3,     2,     1,     1,     1,
       1,     1,     3,     1,     1,     3,     3,     1,     2,     4,
       4,     2,     3,     5,     5,     1,     1,    10,    10,     1,
       2,     4,     4,     4,     2,     2,     3,     1,     3,     6,
       2,     0,     3,     3,     4,     4,     4,     4,     3,     2,
       1,     1,     0,     1,     1,     0,     1,     5,     1,     0,
       1,     0,     3,     1,     3,     4,     3,     1,     1,     0,
       2,     2,     0,     2,     2,     1,     1,     1,     0,     2,
       4,     5,     4,     2,     3,     2,     2,     2,     2,     1,
       2,     3,     0,     1,     0,     5,     1,     4,     6,     2,
       1,     0,     4,     0,     1,     1,     1,     1,     2,     2,
       1,     1,     1,     1,     1,     1,     3,     0,     1,     3,
       1,     1,     2,     2,     0,     1,     3,     1,     0,     1,
       2,     3,     2,     4,     2,     3,     2,     0,     1,     2,
       0,     4,     5,     2,     0,     1,     3,     3,     3,     3,
       3,     3,     1,     4,     3,     4,     5,     4,     5,     4,
       5,     2,     4,     1,     1,     0,     1,     4,     5,     4,
       0,     2,     2,     2,     1,     1,     0,     4,     2,     1,
       2,     2,     4,     2,     6,     2,     1,     3,     4,     0,
       2,     0,     2,     0,     1,     3,     3,     2,     0,     2,
       4,     1,     1,     2,     3,     5,     6,     2,     3,     5,
       5,     3,     4,     0,     1,     1,     1,     1,     1,     2,
       4,     1,     1,     1,     1,     2,     3,     0,     1,     1,
       1,     1,     1,     2,     2,     2,     2,     2,     1,     3,
       0,     1,     1,     1,     1,     5,     2,     1,     1,     1,
       1,     4,     1,     2,     2,     1,     3,     3,     2,     1,
       0,     5,     2,     5,     2,     1,     3,     3,     0,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     3,     3,     3,     3,     3,     3,
       0,     1,     3,     3,     5,     2,     2,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       2,     2,     3,     3,     2,     2,     3,     3,     5,     4,
       6,     3,     5,     4,     6,     4,     6,     5,     7,     3,
       2,     4,     3,     2,     1,     3,     3,     3,     3,     3,
       3,     4,     3,     4,     3,     4,     5,     6,     6,     7,
       6,     7,     6,     7,     3,     4,     4,     6,     1,     4,
       1,     3,     2,     2,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     2,     2,     5,
       6,     6,     7,     1,     1,     2,     2,     2,     4,     1,
       2,     1,     2,     2,     3,     5,     6,     8,     6,     6,
       4,     4,     1,     1,     1,     5,     1,     1,     4,     1,
       4,     1,     4,     1,     4,     1,     1,     1,     1,     1,
       1,     6,     6,     4,     4,     4,     4,     6,     5,     5,
       5,     4,     6,     4,     5,     0,     5,     0,     2,     0,
       1,     3,     3,     2,     2,     0,     6,     1,     0,     3,
       0,     2,     2,     0,     1,     4,     2,     2,     2,     2,
       2,     4,     3,     1,     5,     3,     1,     3,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     4,     1,     4,     1,
       4,     1,     2,     1,     2,     1,     2,     1,     3,     1,
       3,     1,     0,     1,     3,     1,     3,     3,     1,     3,
       3,     0,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     4,     3,     2,     3,     0,     3,     3,     2,
       2,     1,     0,     2,     2,     3,     2,     1,     1,     3,
       5,     1,     2,     4,     2,     0,     1,     0,     1,     2,
       2,     2,     3,     5,     1,     0,     1,     2,     0,     2,
       1,     0,     1,     0,     1,     3,     3,     2,     1,     1,
       1,     3,     1,     2,     1,     3,     1,     1,     1,     2,
       1,     1,     2,     1,     1,     2,     6,     2,     5,     3,
       3,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     2,     2,     3,     3,     0,     1,     1,     1,     1,
       1,     1,     1,     5,     3,     0,     1,     1,     1,     1,
       4,     7,     2,     0,     1,     1,     1,     1,    13,    16,
       1,     2,     0,     1,     0,     1,     0,     2,     0,     1,
       0,     6,     8,     6,     8,     6,     8,     2,     1,     4,
       3,     2,     4,     3,     5,     1,     0,     1,     1,     0,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     3,     1,     1,     1,     1,     1,     1,     2,     1,
       1,     2,     3,     3,     1,     3,     3,     2,     3,     3,
       3,     3,     1,     1,     1,     1,     3,     5,     1,     1,
       1,     1,     3,     2,     1,     4,     5,     5,     4,     6,
       1,     1,     1,     1,     1,     1,     0,     1,     3,     1,
       0,     7,     1,     2,     3,     2,     0,     2,     0,     2,
       4,     2,     1,     1,     1,     2,     3,     2,     2,     3,
       4,     2,     1,     1,     1,     3,     2,     9,    11,    12,
      14,     3,     4,     4,     0,     7,    10,     2,     3,     0,
       4,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1
};

/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
     134,   211,     0,  1113,  1112,   211,     0,  1088,   211,   412,
     340,     0,  1183,     0,   211,     0,   134,     0,     0,     0,
       0,     0,     0,     0,   211,   479,     0,  1182,   211,     0,
    1156,     0,     0,     0,     0,     0,     2,     4,     7,    18,
      13,    30,    26,     0,    28,    16,    21,     6,    32,    17,
      20,    14,    33,    11,    31,   446,   433,   481,   445,   133,
     449,    29,    15,    25,     5,    10,    23,    24,    22,  1096,
      36,    27,    34,    19,     8,    35,    37,     0,     9,    38,
      12,   210,   209,   203,     0,     0,     0,     0,     0,   204,
    1026,  1201,  1202,  1203,  1204,  1205,  1206,  1207,  1208,  1209,
    1210,  1211,  1212,  1213,  1214,  1215,  1216,  1551,  1217,  1218,
    1219,  1500,  1501,  1552,  1502,  1503,  1220,  1221,  1222,  1223,
    1224,  1225,  1226,  1227,  1504,  1505,  1228,  1229,  1230,  1231,
    1232,  1506,  1553,  1233,  1234,  1235,  1236,  1237,  1554,  1238,
    1239,  1240,  1241,  1242,  1243,  1244,  1245,  1246,  1555,  1247,
    1248,  1249,  1556,  1250,  1251,  1252,  1253,  1254,  1255,  1256,
    1507,  1508,  1257,  1258,  1259,  1260,  1261,  1262,  1263,  1264,
    1265,  1266,  1267,  1268,  1269,  1270,  1271,  1272,  1273,  1274,
    1275,  1276,  1277,  1278,  1279,  1280,  1281,  1282,  1283,  1284,
    1509,  1285,  1286,  1287,  1288,  1510,  1289,  1290,  1291,  1511,
    1292,  1293,  1294,  1557,  1558,  1295,  1296,  1297,  1559,  1298,
    1299,  1512,  1300,  1301,  1302,  1303,  1304,  1305,  1306,  1560,
    1307,  1308,  1309,  1310,  1311,  1312,  1313,  1314,  1315,  1316,
    1317,  1561,  1513,  1318,  1319,  1320,  1321,  1514,  1515,  1516,
    1322,  1562,  1563,  1323,  1564,  1324,  1325,  1326,  1327,  1328,
    1329,  1565,  1330,  1566,  1331,  1332,  1333,  1334,  1335,  1336,
    1337,  1338,  1517,  1339,  1340,  1341,  1342,  1343,  1344,  1345,
    1346,  1347,  1348,  1349,  1350,  1351,  1352,  1353,  1354,  1355,
    1356,  1518,  1568,  1519,  1357,  1358,  1359,  1520,  1360,  1361,
    1569,  1362,  1521,  1363,  1522,  1364,  1365,  1366,  1367,  1368,
    1369,  1370,  1371,  1372,  1523,  1570,  1373,  1571,  1524,  1374,
    1375,  1376,  1377,  1378,  1379,  1380,  1381,  1382,  1383,  1384,
    1385,  1525,  1386,  1387,  1526,  1388,  1389,  1390,  1391,  1392,
    1393,  1394,  1395,  1396,  1397,  1398,  1399,  1527,  1400,  1401,
    1402,  1403,  1404,  1405,  1406,  1407,  1408,  1409,  1410,  1411,
    1412,  1413,  1414,  1415,  1416,  1417,  1572,  1418,  1419,  1420,
    1528,  1421,  1422,  1423,  1424,  1425,  1426,  1427,  1428,  1429,
    1430,  1431,  1432,  1433,  1434,  1435,  1436,  1437,  1529,  1438,
    1439,  1440,  1573,  1441,  1442,  1530,  1443,  1444,  1445,  1446,
    1447,  1448,  1449,  1450,  1451,  1452,  1453,  1454,  1531,  1455,
    1532,  1456,  1457,  1458,  1575,  1459,  1460,  1461,  1462,  1463,
    1533,  1534,  1464,  1465,  1535,  1466,  1536,  1467,  1468,  1537,
    1469,  1470,  1471,  1472,  1473,  1474,  1475,  1476,  1477,  1478,
    1479,  1480,  1481,  1482,  1483,  1538,  1539,  1484,  1576,  1485,
    1486,  1487,  1488,  1489,  1490,  1491,  1492,  1493,  1494,  1495,
    1540,  1541,  1542,  1543,  1544,  1545,  1546,  1547,  1548,  1549,
    1550,  1496,  1497,  1498,  1499,  1186,     0,     0,  1008,  1027,
    1028,  1036,   206,   411,   134,     0,   380,     0,     0,   381,
       0,     0,   334,   333,     0,  1079,   339,     0,     0,     0,
    1026,   100,  1517,  1388,  1531,    98,  1006,  1027,     0,   357,
     358,     0,   366,     0,   351,   355,   352,     0,   376,   368,
     377,   369,   350,   370,   359,   349,     0,   378,   353,     0,
       0,     0,   207,   172,   340,   134,     0,  1101,  1102,  1100,
    1091,  1096,  1103,  1104,     0,  1087,     0,  1025,  1144,  1143,
     161,  1055,  1173,  1533,  1464,  1184,  1174,  1171,  1172,   208,
     478,   476,     0,   993,  1333,  1425,  1436,  1533,  1121,  1124,
       0,   205,  1030,     0,   450,   599,  1029,  1002,  1155,     0,
    1160,     0,  1402,   454,   457,  1045,   455,   446,     0,     0,
       1,   134,     0,     0,     0,   475,   475,     0,   475,     0,
     438,   446,   441,   445,     0,  1095,  1169,  1181,  1533,  1464,
    1538,  1177,  1178,  1306,     0,     0,  1306,     0,  1306,     0,
    1306,     0,     0,   985,     0,   986,  1009,  1057,  1058,  1056,
       0,  1059,   307,   338,   337,   336,   335,   340,  1306,  1063,
    1040,     0,     0,     0,     0,     0,     0,  1074,   101,    99,
     364,   365,     0,   356,   354,     0,  1306,   375,   371,  1306,
     375,  1004,  1306,     0,     0,   168,     0,  1093,  1105,  1602,
    1603,  1604,  1605,  1607,  1606,  1608,  1609,  1610,  1611,  1612,
    1613,  1614,  1615,  1618,  1616,  1617,  1619,  1620,  1621,  1622,
    1623,  1624,  1625,  1626,  1627,  1628,  1629,  1630,  1631,  1632,
    1633,  1634,  1635,  1636,  1637,  1638,  1639,  1640,  1641,  1642,
    1643,  1644,  1645,  1646,  1647,  1648,  1649,  1650,  1651,  1652,
    1119,     0,  1120,  1110,  1099,  1106,  1107,   134,   410,  1090,
       0,     0,     0,     0,  1175,     0,     0,     0,  1011,  1013,
    1014,   915,  1024,   988,     0,  1501,  1502,  1503,   977,     0,
    1504,  1505,  1506,  1553,   849,   836,   845,   850,   837,   839,
     846,  1507,  1508,   788,  1272,  1509,  1510,  1022,  1511,  1514,
    1515,  1516,   841,   843,  1518,  1519,     0,  1023,  1521,  1522,
    1369,  1524,  1525,  1527,  1528,   847,  1530,  1532,  1533,  1534,
    1535,  1536,  1021,  1537,   848,  1539,     0,     0,     0,   999,
     932,     0,     0,     0,   988,   821,     0,   641,   642,   663,
     664,   643,   669,   670,   672,   644,     0,   998,   721,   865,
     988,   832,   893,   764,     0,   819,   813,   461,   994,     0,
     814,  1010,   988,   978,   461,   992,  1122,  1127,  1123,     0,
       0,     0,     0,     0,   601,   600,  1003,  1154,  1152,  1153,
    1151,  1150,  1157,     0,  1159,  1096,   929,     0,   456,     0,
       0,     0,   436,   435,     3,     0,     0,  1162,     0,   473,
     474,     0,     0,     0,     0,     0,     0,     0,     0,   548,
     495,   496,   498,   545,   549,   557,     0,   442,     0,  1045,
    1179,     0,     0,     0,   121,   121,     0,     0,     0,     0,
       0,    93,    42,    86,     0,     0,     0,     0,   186,   199,
       0,     0,     0,     0,     0,   196,     0,     0,   179,    44,
     173,   175,     0,   121,     0,    40,     0,     0,     0,    46,
    1026,     0,  1551,  1552,  1553,  1554,  1555,   850,     0,  1557,
    1558,  1559,  1560,  1561,  1562,  1563,  1564,  1565,  1566,  1517,
    1568,  1569,  1570,  1571,  1572,  1573,  1531,  1575,  1537,     0,
    1576,     0,   824,   935,   481,   933,  1046,     0,  1027,  1033,
     984,     0,  1047,  1680,  1681,  1682,  1683,  1684,  1685,  1686,
    1687,  1688,  1689,  1690,  1691,  1692,  1693,  1694,  1695,  1696,
    1697,  1698,  1699,  1700,  1701,  1702,  1703,  1704,  1705,  1706,
    1707,  1708,  1709,  1710,  1711,  1712,  1713,  1714,  1715,  1716,
    1717,  1718,  1719,  1720,  1721,  1722,  1723,  1724,  1725,  1726,
    1727,  1728,  1729,  1730,  1731,  1732,  1733,  1734,  1735,  1736,
    1737,  1738,  1739,  1740,  1741,  1742,  1743,  1744,  1745,  1746,
    1747,  1748,  1749,  1750,  1751,  1640,  1752,  1753,  1754,  1755,
    1756,   981,   980,  1007,  1049,  1048,  1050,   987,     0,     0,
     408,     0,     0,  1060,     0,  1041,     0,     0,  1306,   167,
    1306,   307,     0,   307,     0,     0,  1073,  1076,   367,   363,
     361,   360,   362,     0,   373,   374,     0,   344,     0,     0,
     346,     0,     0,     0,     0,   134,     0,   180,  1115,  1116,
    1114,     0,     0,  1098,   183,   200,  1109,  1118,  1108,  1117,
    1097,  1092,     0,  1089,   399,  1133,  1132,  1141,   162,     0,
    1037,  1577,   651,  1578,   680,   658,   680,   680,  1579,  1580,
    1581,  1582,   647,   647,   660,  1583,  1584,  1585,  1586,  1587,
     648,   649,   685,  1588,  1589,  1590,  1591,  1592,     0,     0,
    1593,   680,  1594,   647,  1595,  1596,   652,  1597,   621,     0,
    1598,   650,   622,  1599,   688,   688,  1600,   675,  1601,     0,
     938,   633,   634,   635,   636,   661,   662,   637,   667,   668,
     638,   720,     0,   647,  1038,  1039,   134,  1176,  1185,     0,
     817,   932,   679,   666,   976,     0,     0,   674,   673,     0,
       0,     0,     0,     0,   656,   655,   654,   823,   941,     0,
     653,     0,     0,   680,   680,   678,   744,     0,   657,     0,
       0,   956,     0,   962,     0,     0,     0,   684,     0,   682,
       0,     0,     0,   745,   725,   726,   931,     0,   821,   929,
       0,   896,     0,  1029,     0,   815,   816,   822,  1017,     0,
       0,   720,   720,   997,   915,     0,   912,   913,   914,     0,
       0,     0,   991,     0,   923,   925,     0,     0,   760,   921,
       0,   763,     0,     0,     0,     0,   909,   910,   911,   903,
     904,   905,   906,   907,   908,   919,   902,   741,     0,     0,
     867,   820,     0,     0,   740,     0,     0,     0,   564,     0,
    1015,  1012,   979,   564,  1135,  1139,  1140,  1138,     0,  1134,
    1126,  1125,  1130,  1128,  1131,  1129,     0,  1148,     0,  1145,
     561,     0,   458,     0,     0,  1168,     0,   128,     0,  1163,
       0,   453,   452,   482,   483,   489,   451,   534,   535,     0,
       0,     0,     0,   554,   552,   525,   499,   524,     0,     0,
     503,     0,   526,   721,   547,   440,   493,   494,   497,   439,
       0,   550,     0,   560,   548,   498,     0,  1170,  1180,     0,
       0,     0,     0,     0,  1306,     0,     0,    77,    58,   259,
       0,   120,     0,     0,     0,     0,     0,     0,     0,    85,
      82,    83,    84,     0,     0,     0,     0,   184,   185,   198,
       0,   189,   190,   187,   191,   192,     0,     0,   177,   178,
       0,     0,     0,     0,   176,     0,     0,     0,     0,     0,
       0,     0,     0,   481,   481,   481,   830,     0,     0,   480,
       0,     0,   982,   985,   398,   315,     0,   305,     0,     0,
       0,     0,     0,   340,  1066,  1064,  1062,  1065,  1067,  1042,
       0,     0,     0,     0,   164,   166,     0,   304,   278,     0,
    1078,   382,     0,     0,  1306,  1075,   295,     0,   375,   372,
     375,  1005,     0,   375,   171,  1306,   307,     0,  1094,  1111,
     181,   201,   182,   202,   431,     0,   405,   413,   418,   396,
       0,   396,     0,   415,   419,   396,   414,   396,   409,     0,
     163,     0,     0,   633,     0,   627,   623,   693,   694,   695,
     696,   703,   704,   701,   702,   697,   698,   691,   692,   699,
     700,   689,   690,     0,   705,   706,   707,   708,   709,   710,
     711,   712,   639,  1054,     0,   645,  1053,     0,   989,     0,
       0,     0,   975,   971,     0,     0,     0,     0,     0,     0,
     942,   943,   944,   945,   946,   947,   948,   949,   950,     0,
       0,   951,     0,     0,     0,   677,   676,     0,   901,   912,
     913,   914,   909,   910,   911,   903,   904,   905,   906,   907,
     908,   927,     0,     0,     0,     0,     0,     0,     0,     0,
     790,     0,     0,   813,   892,     0,   929,   961,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   929,   967,
       0,     0,   766,   988,     0,     0,   765,     0,     0,     0,
    1019,  1020,   722,   736,   737,   738,   742,  1052,  1051,   996,
       0,   990,     0,     0,   723,   746,   751,     0,   968,   784,
       0,   772,     0,   759,     0,   770,   774,   747,   762,     0,
     743,     0,   991,   924,   926,     0,   922,     0,   733,   734,
     735,   727,   728,   729,   730,   731,   732,   739,   900,   898,
     899,     0,     0,     0,   875,   767,     0,     0,   769,   768,
    1298,  1333,     0,   472,   472,   472,   460,   470,   995,     0,
     613,   481,   613,     0,   720,   602,  1045,  1158,  1146,  1147,
     930,  1044,   134,     0,  1166,     0,     0,     0,   140,   123,
       0,  1164,     0,   156,   564,     0,   988,     0,   487,   488,
       0,   492,  1528,  1421,     0,     0,     0,     0,   527,   555,
       0,   546,     0,  1011,   528,  1010,   529,   532,   533,   504,
     556,  1000,   558,     0,   551,   444,   443,   562,     0,    43,
       0,  1306,    60,     0,     0,     0,     0,     0,     0,   214,
     250,   214,    97,  1306,   375,  1306,   375,  1205,  1273,  1437,
       0,    56,    89,     0,   283,   114,     0,   268,   312,    79,
      94,   107,     0,     0,    45,   174,   188,   193,   110,   197,
     194,  1083,   195,   121,     0,    41,     0,   108,     0,  1081,
       0,     0,    47,   112,  1085,     0,     0,     0,     0,   934,
     825,   936,   937,   984,     0,   397,     0,   306,     0,   407,
     387,   388,   398,     0,   307,  1063,     0,  1043,   104,     0,
       0,     0,     0,   298,   296,   326,     0,   303,   297,   305,
       0,     0,   254,     0,  1199,     0,     0,   383,   379,     0,
       0,   343,   345,     0,   347,     0,     0,   400,     0,   403,
       0,   402,   406,   401,   395,     0,   426,     0,     0,     0,
       0,     0,     0,  1142,     0,   628,   624,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   939,   477,   789,     0,
       0,     0,   972,     0,     0,   863,     0,   838,   840,   646,
     853,     0,   659,   842,   844,     0,   916,     0,     0,     0,
     854,   792,   793,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     808,   807,   855,   891,     0,     0,   959,   960,   856,   687,
     686,   688,   688,     0,     0,   966,     0,     0,     0,   861,
       0,   818,   930,   897,   895,   671,   720,     0,     0,     0,
       0,     0,     0,     0,   773,   761,     0,   771,   775,     0,
       0,     0,   755,     0,     0,   753,   785,   749,     0,     0,
     786,     0,     0,     0,   831,   472,   472,   472,   472,   469,
     471,     0,     0,     0,     0,  1421,     0,   585,   563,   565,
     572,   585,   590,   833,   611,   834,  1029,     0,   537,     0,
     537,     0,  1136,  1149,     0,  1167,     0,   145,   127,   147,
     146,     0,   154,     0,   988,     0,   145,   129,     0,   148,
       0,  1166,     0,   160,   484,     0,   917,   492,     0,   486,
     531,   530,     0,   502,   553,   500,     0,   559,     0,     0,
       0,   258,     0,     0,     0,   214,     0,     0,   322,     0,
     309,    78,     0,     0,     0,    52,     0,    70,    62,    48,
      76,     0,     0,    81,     0,    74,    91,    92,    90,    95,
       0,   242,   224,   255,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   828,   829,   826,
     481,   983,   429,   430,   179,   428,   316,     0,     0,  1078,
    1061,     0,     0,   103,   105,     0,   167,   307,     0,   282,
     278,     0,   276,   275,   277,     0,  1200,   172,     0,  1195,
    1077,     0,     0,  1072,   375,     0,   432,     0,   391,   427,
     416,   421,     0,   425,   423,   422,   417,   420,   633,     0,
     633,     0,   619,     0,   631,     0,   640,   713,   714,   715,
     716,   717,   718,   719,   665,     0,   974,   970,     0,   835,
     940,     0,   928,   954,   953,   791,   803,   804,   805,   955,
       0,     0,     0,   800,   801,   802,   794,   795,   796,   797,
     798,   799,   806,   964,   963,   957,   958,   683,   681,     0,
     858,   859,   860,   965,     0,   894,  1018,   724,     0,     0,
     752,   969,   776,     0,     0,     0,   748,   916,     0,     0,
       0,     0,     0,   757,     0,     0,     0,   878,   873,   874,
       0,     0,     0,     0,   463,   462,   468,   585,   590,     0,
     446,     0,   572,     0,   584,   521,   583,     0,     0,   596,
     594,     0,   596,     0,   596,     0,   521,     0,   586,   521,
     583,     0,   603,  1003,   612,     0,   544,   825,   544,     0,
     459,  1165,     0,  1161,     0,     0,     0,   135,   132,   122,
       0,     0,   157,   145,   136,     0,   485,   490,   491,   501,
    1001,   115,   214,     0,     0,    59,     0,   324,   270,   302,
     285,     0,     0,     0,   215,     0,   290,     0,    51,    71,
       0,    67,     0,    96,     0,     0,     0,     0,     0,    54,
      66,     0,    49,     0,   375,   375,    57,   269,  1037,  1577,
    1578,  1579,  1580,  1581,  1582,  1583,  1584,  1585,  1586,  1587,
    1588,  1589,  1590,  1591,  1592,  1669,  1593,   221,  1594,  1369,
    1595,  1596,  1597,     0,  1598,   622,  1599,  1600,  1601,   903,
     904,   219,   311,   216,   317,   218,   220,     0,  1038,   217,
     314,   111,  1084,     0,   109,     0,  1082,   118,   116,   113,
    1086,     0,   410,   390,     0,     0,  1306,     0,   102,     0,
    1078,   165,   304,     0,   332,   254,   327,     0,  1199,  1197,
       0,  1194,     0,     0,     0,   348,     0,   404,     0,   424,
     630,     0,   629,     0,   625,   632,   973,   851,   862,   952,
       0,     0,     0,     0,   857,   852,   782,   780,   777,     0,
     778,   756,     0,     0,   754,   750,     0,   787,   864,     0,
     880,   877,   467,   466,   465,   464,   571,   569,     0,   574,
    1029,   581,   514,   520,   570,     0,   566,     0,   595,   591,
       0,   592,     0,     0,   593,     0,   567,     0,  1029,   568,
       0,   610,     0,     0,   869,  1016,   869,  1137,   144,   124,
       0,   125,   155,     0,     0,     0,     0,   149,   384,     0,
     320,    61,     0,   302,     0,   214,   287,   286,   289,   284,
     288,   291,     0,     0,     0,     0,     0,   271,     0,     0,
       0,   235,     0,     0,   302,   308,   231,   232,   341,     0,
       0,     0,    63,    53,    50,    55,    64,     0,     0,    65,
      68,   618,    80,    73,  1669,  1676,     0,     0,     0,     0,
       0,   827,   386,   393,   179,     0,     0,     0,     0,   304,
     106,     0,     0,     0,  1199,     0,     0,   212,     0,   251,
       0,   169,  1198,     0,  1187,     0,  1070,  1071,     0,     0,
     392,   626,   620,   809,     0,     0,     0,   779,   783,   781,
     758,   866,     0,   481,   606,     0,   609,   573,     0,     0,
     509,   516,     0,   519,   513,     0,   575,     0,     0,   577,
     579,     0,     0,     0,   614,     0,     0,     0,  1006,     0,
     536,   538,   541,   540,   543,     0,   512,   512,     0,     0,
       0,   158,     0,   151,   151,     0,   137,   918,     0,   214,
       0,   301,   321,   249,     0,     0,   233,     0,   239,     0,
     273,   274,   272,   234,   302,   307,   236,   342,     0,    72,
       0,    88,     0,     0,   313,   119,   117,   410,     0,  1078,
    1194,     0,     0,   278,   172,  1196,   267,   260,   261,   262,
     263,   264,   265,   266,   281,   280,   252,   253,     0,     0,
       0,  1072,     0,   810,     0,   811,     0,   883,   611,     0,
       0,   605,     0,   507,   505,   508,   510,   506,     0,     0,
     582,   598,     0,   578,   576,   587,     0,   618,     0,   589,
     542,     0,   868,   870,     0,     0,   448,   447,     0,   131,
       0,   613,     0,     0,   153,   153,   139,     0,   307,   323,
       0,   293,   300,   292,     0,     0,   230,     0,   237,   331,
     223,   617,     0,    75,     0,   318,   385,   389,     0,  1188,
       0,  1194,   254,  1199,     0,  1191,     0,     0,  1078,   812,
     879,     0,     0,     0,   604,   607,     0,   580,     0,     0,
       0,   615,   616,   588,   539,     0,     0,   514,   126,   151,
     130,   159,   150,   489,   152,   489,     0,   331,   279,     0,
       0,   257,   223,     0,   248,     0,    69,    87,   319,     0,
     304,  1189,   213,   170,  1192,  1193,     0,   613,  1500,  1249,
    1471,     0,   881,   884,   882,   876,     0,   517,     0,   523,
     597,   871,   872,   511,   153,   492,   492,   613,   248,   294,
     299,     0,   238,   240,   328,   329,   330,     0,   244,   241,
     245,     0,  1194,     0,  1068,     0,   888,   887,   886,   890,
     889,   608,     0,     0,   515,   489,   142,   141,   138,   214,
     256,     0,     0,     0,   246,     0,   247,   222,  1190,  1078,
       0,   518,     0,   492,   325,   227,     0,   226,     0,   310,
     243,   613,   885,     0,   143,   225,   229,   228,  1069,   522
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    35,    36,    37,    38,  2057,  2058,  2059,  1760,   891,
    2733,  1761,   892,   893,  2061,    39,    40,  2102,  2103,    41,
    1373,   527,  1698,  1316,  2475,    43,  2012,  1703,  2016,  2611,
    2263,  2011,  2018,  2714,  2773,  2013,  1704,  2612,  1705,    44,
      45,  1444,    46,   655,    47,  1445,  1400,  1105,   911,  1390,
    1094,    48,    83,    49,  2048,  2352,  2786,  2071,  2869,  2505,
    2506,  1762,  2828,  2829,  2050,  2116,  1382,  2822,  1823,  2664,
    1766,  1749,  2507,  1832,  2621,  2384,  1763,  2294,  1824,  2492,
    2720,  1455,  1825,  2721,  2485,  1826,  1425,  1448,  2296,  2830,
    1767,  1426,  2353,  1369,  1827,  2784,  1828,   487,  2510,    50,
     519,   520,   647,  1077,   521,    51,   488,  1065,   528,    53,
    1812,  2534,  2127,  2535,  1855,  1806,  1103,  1852,  1474,  1429,
    1104,   475,  1488,  2128,  2094,  1475,   529,   795,    56,    57,
      58,   579,   573,   574,  1288,  1676,  1981,   861,   552,   553,
     589,  1419,  1323,  1324,  1711,  2029,  1348,  1349,   870,   871,
    2581,  2706,  2582,  2583,  2443,  2444,  2844,  1336,  1340,  1341,
    1724,  1717,  1329,  2256,  2600,  2601,  2602,  2464,  1344,  1345,
     873,   874,   875,  1353,  1734,    60,  1680,  1988,  1989,  1990,
    2234,  2235,  2249,  2245,  2449,  2589,  1991,  1992,  2574,  2575,
    2681,  2252,  1998,  2593,  2594,  2641,  1867,  1159,  1160,  1496,
    1161,   796,  1162,  1194,   797,  1200,  1164,   798,   799,   800,
    1167,   801,   802,   803,   804,  1183,   805,   806,  1217,  1514,
    1515,  1516,  1517,  1518,  1519,  1520,  1521,  1522,   846,  1579,
     808,   809,   810,  1994,   811,  1280,  1664,  2606,  2702,  2703,
    1974,  2218,  2430,  2573,  2753,  2802,  2803,   812,   813,  1231,
    1232,  1661,  1275,  1276,   814,  2355,  1278,  1572,  1599,  1227,
     954,   955,  1172,  1549,  1550,  1575,  1899,  1582,  1588,  1926,
    1927,  1600,  1629,   815,  1532,  1533,  1883,  1185,   816,   615,
     961,   616,  1180,  1623,   824,   817,   818,  1730,   565,  2585,
     651,  1042,   819,   820,   821,   822,   823,   567,   956,   468,
    1173,  2774,  1055,   851,   957,  1764,  1619,    61,   723,   620,
      62,  1053,  1436,    63,  2557,  2394,  1067,  1457,  1836,   489,
      64,    65,    66,    67,    68,   596,  1097,   530,  1098,  1099,
     711,    69,  1106,   713,   714,    70,   558,   559,  1107,  1300,
    1108,    71,   539,    72,   842,   570,   843,   845,   532,   858,
    2007,  1694,    74,    75,   546,   547,    76,    77,   560,    78,
      79,  2554,   533,  2119,  1062,   497,   470,   471,  1175,  1045,
     959,  1046
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -2510
static const int yypact[] =
{
    4337,  -112,   942, -2510, -2510,  -112, 30034, -2510,  -112,    42,
    1881, 34704, -2510,  5229,  -112, 40775,   318,   300,   267,   428,
     550, 40775, 40775, 35171,  -112,   244, 41242, -2510,  -112, 32369,
     -44,   125, 41709, 40775,  1259,   630,   173, -2510, -2510, -2510,
   -2510, -2510, -2510,    90, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510,    95, -2510,    92,   155,   -95,
     238, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,   305,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, 19821, -2510, -2510,
   -2510, -2510, -2510, -2510, 35638, 40775, 36105, 32836, 36572, -2510,
     146, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510,   147, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,   160, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510,   303,   512, -2510,   161,
   -2510, -2510, -2510, -2510,  1259, 37039, -2510,  -108,   485, -2510,
     415, 42176, -2510, -2510, 40775, -2510, -2510,   -58, 37039,   570,
   -2510, -2510, -2510, 37506, -2510, -2510, -2510, -2510,   564, -2510,
   -2510,   424, -2510,    67, -2510, -2510, -2510,   443, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510,   514, -2510, -2510, 42643,
   43110, 43577, -2510,   410,   701,   853, 19353, -2510, -2510, -2510,
   -2510,   305, -2510, -2510,   550, -2510,   550, -2510, -2510, -2510,
      54,   441, -2510,   480,   741, -2510, -2510, -2510,   487, -2510,
   -2510,   714,  7718,  7718, 44044,   550, 44044,   532, -2510, -2510,
      35, -2510, -2510, 20757, -2510,   526,   512, -2510, -2510,   218,
     852, 10670, 40775,   538, -2510,   536,   538,   611,   627,   -95,
   -2510,  4337,   951,   913, 32369,   252,   252,  1092,   252,   794,
     803, -2510,  1276, -2510,   666, -2510, 37039, -2510,   703,   964,
     125, -2510,   487,  1040,   798,   880,  1089,  4001,  1101,   857,
    1120,  1196,  5750, 10670, 24638, -2510,   512, -2510, -2510, -2510,
     735, -2510,   789, -2510, -2510, -2510, -2510,   701,  1016, -2510,
     815,  1250,   866, 37973, 38440, 37039,   825,  1210, -2510, -2510,
   -2510, -2510,   875, -2510, -2510,   264,  1169,    43, -2510,  1218,
      48, -2510,  1224,  1109, 10670, -2510,   990, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510,   125, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510,  -134, -2510, -2510, 26506, -2510, -2510,   853,   907, -2510,
   26506, 11162, 46846,  1366, -2510,  1181, 40775,   922, -2510, -2510,
   -2510, -2510, -2510, -2510,   932,  1416,    76,  1425, 10670,   949,
      76,    76,   958,  1292, -2510, -2510, -2510,   164,   980,   992,
   -2510,   165,   165, -2510,  1172,  1008,  1027, -2510,   166,  1502,
    1510,    91,  1031,  1050,   245,    76, 10670, -2510,  1061,   165,
    1070,  1094,  1099,  1529,  1129, -2510,  1573,  1134,   137,   148,
    1136,  1140, -2510,  1143, -2510,   167, 10670, 10670, 10670, -2510,
   10670,  6734, 37039,  1646, -2510,   512,   550, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510,  1174, -2510,   136,  4853, -2510,  1209,
   -2510, -2510, -2510,   203, 10670, -2510,  1650,   -49, -2510,   169,
   -2510, -2510, -2510,   512,  1458,  1180, -2510, -2510, -2510,   228,
    1576, 25572, 26039, 37039, -2510, -2510,   512, -2510, -2510, -2510,
   -2510, -2510, -2510,   329, -2510,   305, 27657,   431,   538, 40775,
   40775,  1643, -2510, -2510, -2510, 32369, 37039, 44511,  1314, -2510,
   -2510,   -95,   -95, 10670,   -95,   413,    75,  8210, 11654,  1519,
    1406,   140,   469,  1521, -2510,  1412,   794,   803, 10670,   536,
   -2510,  1459, 37039, 30501,   598,   755,  1202,  1286,  1204,   -21,
    1607, -2510,  1203, -2510,  1291, 37039, 48217,   181, -2510,  1644,
     181,   181,   274,  1652,  1309,   192,  1449,   453,  -161,  1203,
    2846, -2510, 32369,    69,   543,  1203, 37039,  1310,   700,  1203,
      99, 11162,   745,   969,   681,  1025,  1069,   109, 11162,  1119,
    1182,  1189,  1285,  1308,  1324,  1337,  1387,  1436,  1447,   114,
    1474,  1486,  1509,  1528,  1541,  1611,   135,  1620,   133, 11162,
    1623,  1231, -2510, 27657,   -62, -2510, -2510,  1628,   145, -2510,
   24170,  1225, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,  1316, 40775,
    1275,   -82,  1580,  1640, 28633,  1245,  1594, 37039,  1472,  2846,
    1473,  1252,  1703,   789,  8702,  1705, -2510, 44978, -2510, -2510,
   -2510, -2510, -2510, 40775, -2510, -2510, 40775, -2510, 40775, 40775,
   -2510, 40775, 40775,   530, 38907,   853, 33303, -2510, -2510, -2510,
   -2510,   672,   850, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, 28633, -2510,  1822, -2510, -2510, -2510,  1253,   651,
   -2510, -2510, -2510, -2510,  1312, -2510,  1312,  1312, -2510, -2510,
   -2510, -2510,  1260,  1260,  1262, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,  1270,   245,
   -2510,  1312, -2510,  1260, -2510, -2510, -2510, -2510, -2510, 48217,
   -2510, -2510, -2510, -2510,   356,   587, -2510, -2510, -2510,  1271,
   -2510,  1724, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510,  4262,   663,  1260, -2510, -2510,  1259, -2510, -2510, 10670,
     512, 10670, -2510,  1278, 27657,  1317, 10670, -2510, -2510, 10670,
    1279,  1753,  1753, 10670, -2510, -2510, -2510, -2510,  1860,  1753,
   -2510,  1753,  1753,  1312,  1312, -2510, 27481, 10670, -2510, 23100,
   10670, 14606,  9194, 10670,  1363,  1365,  1753, -2510,  1753, -2510,
   10670,  7226, 10670, 27481,  1759,  1759,  1284,  1297,  1598,  5194,
    1293, -2510,   450, -2510,  1295, -2510,   512,   512, -2510,  1753,
   10670,  4445,  4445, -2510,   105, 46846, 10670, 10670, 10670, 10670,
   28166,  1382,    97, 40775, 10670, 10670,  1300,   847, -2510, 10670,
    1518, -2510,  1302, 10670,  1386,   129, 10670, 10670, 10670, 10670,
   10670, 10670, 10670, 10670, 10670, -2510, -2510, 16068,   172,  1617,
    1636,   512, 10670,   -77,   316, 10670, 33770,  7718,  1629,  5750,
   -2510,   512,   104,  1629, -2510, -2510, -2510, -2510,   170, -2510,
   -2510, -2510, -2510,  1253, -2510,  1253,  1313, 37039,   218, 31902,
   -2510, 10670, -2510,   671,  1321,  1373,    12,  1772, 40775, -2510,
   21693,  1587, -2510,  1320, -2510, 26969,  1587, -2510, -2510, 15084,
    1440,  1605,  1534, -2510, -2510, -2510,  1332, 27657, 12146, 12146,
   -2510,   898, 27657,  1296, -2510, -2510, -2510, -2510, -2510, -2510,
     831, -2510, 37039,   459,  1519,   469,   684, -2510, -2510,  1290,
    1340, 45445, 40775,  1608,  1563,  1612,  -141, -2510, -2510, -2510,
   46846, -2510, 40775, 40775, 45912, 46379, 29100, 40775, 28633, -2510,
   -2510, -2510, -2510, 40775,  1021, 40775,  4776, -2510, -2510, -2510,
     181, -2510, -2510, -2510, -2510, -2510, 40775, 40775, -2510, -2510,
     181, 40775, 40775,   181, -2510,  1516, 40775, 40775, 40775, 40775,
    1817, 40775, 40775,   -31,   -31,  1544, -2510,  9686,  1345, -2510,
   10670, 10670, -2510, 10670,  1520, -2510,   689, -2510,  1561,    25,
    1400, 37039, 40775,  1232, -2510, -2510, -2510, -2510, -2510, -2510,
   28633,  1359,  1361,  1699, -2510,  2846,  1701, 30968,   644,   893,
    1403, -2510,   698, 10670,  1588, -2510, -2510,  1577,    43, -2510,
      48, -2510,  1579,    77, -2510,  1591,   789,  1823, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510,   737, 18885, -2510, -2510,  1825,
     550,  1825,   499, -2510, -2510,  1825, -2510,  1825, -2510, 26506,
   -2510, 11162, 46846,  1831, 40775,  1383,  1384, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510,  1753,  1464, -2510,  1465,  1466,  1468, -2510,
   -2510, -2510, -2510, -2510, 46846, -2510, -2510,   746, -2510,  1391,
   10670, 10670,    20, -2510, 27033,   787, 10670,  1390,  1394,   795,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,  1397,
    1719, -2510,  1401,  1404,  1407, -2510, -2510,  4514, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510,  1417,  1399, 27069,  1428, 14606, 14606,  6734,   917,
   -2510, 14606,  1430, -2510, -2510,   805, 26987,  1284,  1434,  1424,
    1453,  1437,  1438, 27153, 10178, 10670, 10178, 10178, 27385,  1284,
    1441, 27520, -2510, -2510, 10670, 37039, -2510, 10670,  1443,  5238,
   -2510, -2510, -2510,  3801,  3801,  3801, 27481, -2510, -2510, -2510,
    1462, -2510, 14606, 14606, -2510,  1558,  2538,  6734, -2510, -2510,
    1730, -2510,   716, -2510,  1450, -2510, -2510,  2667, -2510, 23100,
    2382, 10670,   141, -2510, 10670,  1300, 10670,  1498,  3801,  3801,
    3801,   205,   205,   122,   122,   122,   776,   316, -2510, -2510,
   -2510,  1451,  1452,  1454,  1654, 27657,  1129, 10670, -2510, 27657,
     724,   744, 37039,  3036,  3456,  4676, -2510, -2510, -2510, 17481,
    1488,   -62,  1488,  1753,  4445, -2510,   536, -2510, -2510, -2510,
   27657, -2510,  1259, 17481,  1490,  1512,   363, 20289,  1666, -2510,
   40775, -2510, 40775, -2510,   -24,  1475, -2510, 10670, -2510, -2510,
    2787,  1478,  1672,  1675,   861,   861,   898,  1679, -2510, -2510,
    1538, -2510, 10670,  1299, -2510,  1301, -2510, -2510, -2510, -2510,
    1471, -2510, -2510,  1732, -2510, -2510, -2510, -2510,  1565,  1203,
   10670,  1707, -2510,    58,  1487,  1826,   314,  1780, 40775, -2510,
    1694, -2510,   111,  1830,    77,  1832,    77, 28633, 28633, 28633,
     830, -2510, -2510,   550, -2510, -2510,   839, -2510,   204, -2510,
   -2510, -2510,  1581,   768,  1203,  2846, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510,   113,   804,  1203,  1584, -2510,  1593, -2510,
    1596,   883,  1203, -2510, -2510,  1495,  1497,  1500, 11162, -2510,
   -2510, 27657, 27657, 27657,  1514, -2510,   103, -2510, 40775, -2510,
   -2510, -2510,  1520, 37039,   789, -2510,   601, -2510,   550, 40775,
   37039, 37039, 37039, -2510, -2510, -2510,  1517,  1513, -2510, 46846,
     -94,  1729,  1728, 40775,  1564,  1204,  1975, -2510, 27657,  1864,
   37039, -2510, -2510, 40775, -2510,  1865,  1259, -2510, 28633, -2510,
   31435, -2510, -2510, -2510, -2510,   550, -2510,   550,  1751, 40775,
   25105,   550,   550, -2510,   870,  1539,  1384,   872, 46846,  1753,
      81,  1535,  1410,  1170,  1024,  1319, -2510, -2510, -2510,   887,
   27566, 10670, -2510,  1885, 46846, -2510, 23575, -2510, -2510, -2510,
   -2510, 10670, -2510, -2510, -2510, 10670, -2510, 23100, 10670,  1866,
   -2510,  2020,  2020,  5194, 46846, 14606, 14606, 14606, 14606,   447,
    1070, 14606, 14606, 14606, 14606, 14606, 14606, 14606, 14606, 14606,
   15576,   688, -2510, -2510, 10670, 10670,  1872,  1866, -2510, -2510,
   -2510,   351,   351, 46846,  1557,  1284,  1562,  1566, 10670, -2510,
   46846,   512, 23593, -2510, 27657, -2510,  4445, 10670,  1298,  1338,
   10670,   888, 10670,  1878, -2510, -2510,  1569, -2510, -2510, 46846,
   10670,  1571,  3585, 14606, 14606,  3606, -2510,  3726, 10670,  6734,
   -2510,  1544,  1606, 22161, -2510,  1658,  1658,  1658,  1658, -2510,
   -2510, 37039, 37039, 37039, 17949,  1893, 17013, 39374,  1572,   729,
   -2510, 39374, 39841, -2510,  1589, -2510,   512, 10670,  1887,  1585,
    1887,  1586, -2510, -2510,  1592,  1572, 10670,  1727, -2510, -2510,
   -2510,  1637, -2510,   920, -2510,  1991,  1727, -2510,   938, -2510,
   21693,  1490, 10670,   512, -2510,  1590, -2510,  1478,   144, -2510,
   -2510, -2510,  1798, -2510, -2510, -2510, 37039, -2510, 40775, 23611,
    1932, -2510, 40775, 40775, 40775, -2510, 40775,   952,   588,  1597,
   -2510,   588,  1917,   535,  1204,   192,  4159,   -53, -2510, -2510,
   -2510,  1673, 40775, -2510, 40775, -2510, -2510, -2510, -2510, -2510,
   29100, -2510, -2510, -2510, 28633, 22632, 28633, 40775, 40775, 40775,
   40775, 40775, 40775, 40775, 40775, 40775, 40775, -2510, -2510, -2510,
    1544, -2510, -2510, -2510,  -161, -2510, -2510,   103,  1604,  1403,
    1640, 40308,  1610,  1602, -2510,   953,  2846,  1609,  2057, -2510,
     644, 30968, -2510, -2510, -2510,  2015, -2510,   410,   260, -2510,
   -2510,  1259, 40775,  1669,    77, 37039, -2510,   961, -2510, -2510,
   -2510, -2510, 40775,  1613, -2510,  1613, -2510, -2510, -2510,  1753,
   -2510, 40775, -2510,  1625, -2510,  1630, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, 10670, 27657, -2510,  1615, -2510,
   27657, 23639, -2510, 27657,  1872, -2510,  2501,  2501,  2501,   534,
    1947,   270,  1634,  2501,  2501,  2501,   186,   186,    86,    86,
      86,  2020,   688, 27657, 27657, -2510, -2510, -2510, -2510,  1635,
   -2510, -2510, -2510,  1284,  1638, -2510, -2510,   296, 10670, 10670,
    1558, -2510, 27702, 10670, 46846,   968,  1558,   193, 10670,  3102,
    5016, 10670, 10670,  4277, 23657,  1639, 10670, 47298, -2510, -2510,
   37039, 37039, 37039, 37039, -2510, -2510, -2510, 39374, 39841,  1641,
   16544,   729,  1645, 37039, -2510,  1720,  1648, 17481,  1908,  1842,
   -2510, 17481,  1842,    57,  1842,  1916,  1720, 21225, -2510,  1720,
    1651,  1850, -2510,   478, 27657,  2084,  1964,   550,  1964,   550,
   -2510, 27657,  7718, -2510,  1259,   862, 40775,   512,   -69, -2510,
    1670, 40775, -2510,  1727, 27657, 23100, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, 40775,   987, -2510,  1002,   588, -2510,  1696,
   -2510,   191,  1950,     0, -2510, 28633,  3243,   289, -2510,  1962,
    1882, -2510,   181, -2510, 10670,   289,  1883,   194, 40775, -2510,
   -2510,  2587, -2510, 46846,    77,    77, -2510, -2510,  1665,  1667,
    1668,  1671,  1674,  1676,  1678,  1681,  1682,  1683,  1684,  1686,
    1687,  1688,  1689,  1690,  1691,  1270,  1692, -2510,  1697,  1590,
    1698,  1700,  1702, 47765,  1706,  1708,  1711,  1712,  1715,   672,
     850, -2510, -2510, -2510, -2510, -2510, -2510,   815,  1716, -2510,
    1685, -2510, -2510,  1756, -2510,  1777, -2510, -2510, -2510, -2510,
   -2510,  1680,   907,    68, 40775,  2122,  1920,  1709, -2510,   550,
    1403, -2510, 30968,   941,   120,  1728, -2510,   100,  1564, -2510,
    2083,  1743,  1928, 40775,  1722, -2510,  2173, -2510, 31435,  1613,
    1384,  1726,  1384, 46846, -2510, -2510, 27657, -2510, -2510, -2510,
   14606,  2045,  1733, 46846, -2510, -2510,  1558,  1558, 27702,  1006,
   -2510,  1558, 10670, 10670,  1558,  1558, 10670, -2510, -2510, 23675,
    1915, -2510, -2510, -2510, -2510, -2510, -2510, -2510, 29567, 39374,
    1734, -2510, 34237, -2510, -2510, 40775,   729, 17481, -2510, -2510,
     624, -2510, 17481,  1999, -2510, 17481, -2510, 40775,  1735, -2510,
   40775, -2510, 12638, 10670,  1768, -2510,  1768, -2510,  1180, -2510,
     363, -2510, -2510,  2137, 18417,  2093, 10670, -2510, -2510,  1737,
     588, -2510,  1898,  1696,  1740, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510,  1018,  1741, 40775, 40775, 14606, -2510,   289,   201,
     132, -2510,  2013, 37039,  1696, -2510, -2510, -2510, -2510,  2116,
    2196,  2088, -2510, -2510, 27657, -2510, -2510,  1753,  1753, -2510,
   -2510,  2165, -2510, -2510, -2510, -2510,   815,   400, 22632, 40775,
   40775, -2510, -2510, -2510,  -161,  2119,  1019,  1259,  2092, 30968,
   -2510,  2206,  1757, 40775,  1564,   911,   911, -2510,  1897, -2510,
    1902, -2510, -2510,   209, -2510, 37039, -2510, -2510, 18417,  1259,
   -2510, -2510, -2510,  2682, 14606, 46846,  1041, -2510,  1558,  1558,
    1558, -2510,  2192,  1544, -2510,  1048,  2216, -2510, 40775,   -88,
     -73,  1767,  1773, -2510, -2510,  1053, -2510, 10670,  1774, -2510,
   -2510, 17481,   624,  1059, -2510, 46846, 40775,  1073, 46846,  6242,
    1764, -2510, -2510, 27657, 27657, 40775,  1829,  1829,  1828, 40775,
   10670, -2510,  1077,  2190,    37,   -25, 27657, -2510, 37039, -2510,
   28633, -2510,   588, -2510, 28633, 10670, -2510,    53,   534,  2228,
   -2510, -2510, -2510, -2510,  1696,   789, -2510, -2510,  2085, -2510,
   40775,  1838,   435,  1854, -2510, -2510, -2510,   907,   550,  1403,
    1743, 37039,  1259,   644,   410, -2510, -2510, -2510, -2510, -2510,
   -2510, -2510, -2510, -2510, -2510, -2510, -2510, -2510,  2204,  1992,
    2208,  1669,  1078,  2682,  1087, -2510, 10670,   -15,  1589, 29567,
    1790, -2510,  1097, -2510, -2510, -2510, -2510, -2510, 40775,   975,
   -2510, 27657, 40775, -2510, -2510, -2510, 40775,  2165,  1105, -2510,
   -2510, 12638,  1787, -2510,  2242,  1930, -2510, -2510,  1259, -2510,
   23986,  1488, 18417, 40775, 40775, 40775, -2510,  1918,   789,   588,
    1113, -2510,  1807, -2510, 24152,  2014, -2510,  2101, -2510,  2046,
    1801, -2510, 10670, -2510,  1875, -2510, -2510, -2510,  2256, -2510,
    1808,  1743,  1728,  1564,  2011, -2510,  2017,  1809,  1403, -2510,
    1284, 13130, 13130,  1814, -2510, -2510, 40775, -2510,  1117,  1815,
    1118, -2510, -2510, -2510, -2510, 40775,  1810, 34237, -2510,  2190,
   -2510, -2510, -2510,   221, -2510,   221, 21693,  2046, -2510, 28633,
   22632,  2043,  1801,   406,  2029,  2846, -2510, 27657, -2510,  1259,
   30968, -2510, -2510, -2510, -2510, -2510, 18417,  1488, 14114,  1965,
     197, 27005, -2510, -2510, -2510, -2510,  1123, -2510,  2302,  1979,
   -2510, -2510, -2510, -2510, 40775,  1478,  1478,  -184,  2029, -2510,
   -2510,  2118, -2510, -2510, -2510, -2510, -2510,   107,  2036, -2510,
    2037,  1409,  1743,  1124, -2510,  2284, -2510, -2510, -2510, -2510,
   -2510, -2510,  1837,  1833, -2510,   221, -2510, -2510, -2510, -2510,
   -2510,   106,   106,  2199, -2510,  1901, -2510, -2510, -2510,  1403,
   13622, -2510,  2320,  1478,   588, -2510,  2308, -2510,   116, -2510,
   -2510,  1488, -2510,  1845, -2510, -2510, -2510, -2510, -2510, -2510
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -2510, -2510, -2510,  1754, -2510, -2510, -2510,   277, -2510,   954,
   -2510,   266,  -518,   589, -2510, -2510, -2510, -2510, -2510, -2510,
    -842,    16, -2510, -2510, -2510, -2510,    73,   320, -2510,  -370,
   -1772,  -127, -2510, -2372, -2462, -2510,  -430, -2346, -1646, -2510,
   -1015,   241, -2510, -2030, -2510,  -598,  -895,  -693,  -908, -2510,
      41, -2510,  1467, -1014, -1715, -2342,  -431, -2510,  -500, -2510,
    -269, -1704,  -469,  -456, -2510, -2274,  -836, -2510,  1480,  -182,
   -2510,   619, -2510, -2041, -2510, -2510,   608, -2510,  -852, -2510,
   -2510, -1790,   256,  -411, -2231, -2279,   561,  -617, -2510,  -458,
     297, -1681, -2510,   629, -2510,  -404, -2510,  -496, -2036, -2510,
   -2510, -2510,  1303,  -605, -2510, -2510, -2510, -2510,    33, -2510,
   -2510, -2510, -2510, -2510,  -535,   562, -2190, -2510,   529, -2510,
   -2510, -2510, -2510,   -20,   284, -2510,     8,   972,   -30,     2,
      15,    32,    46,  1533,  1559, -2510, -1242,   640, -2510, -2510,
    -578,   -51, -2510,   677, -2491, -1969,  -413,  1032,  1515,  1524,
    -301,  -218, -2510,  -371, -2510, -1087, -2510, -2510,   679,  1074,
   -1232, -1224, -2510,   402, -2510,  -296, -2510,   150,  -409,  1052,
   -2510,  1536, -2510, -2510, -2510, -2510, -1199,   717, -1916,   425,
   -1912, -1791,   184,   171,  -899,  -179,    18,   434,  -260, -2510,
   -2510,  -256, -1660, -2300,  -271,  -270, -2510, -2510, -1186, -1418,
    -872, -2510, -2510,  -654,  -347, -2510, -2510, -2510,  1343,  1568,
   -2510, -2510,  1582,  1762, -2510,  -393,  1855,   556,  -750,  1228,
   -1141,  1230, -1144, -1136, -1133,  1233,  1236, -1169,  2882, -1493,
    -851,     6, -2510, -2317, -1428, -2510, -2510,   -37, -2510,  -330,
   -2510,  -329, -2510, -2510, -2510,  -316, -2509, -2510,  1155,   834,
   -2510, -2510, -1184, -2510,  3016,   733, -2510, -1573,  -552,  1264,
    -635,  -905, -1465, -2510, -2510, -2510, -2510, -2510, -2510, -1124,
   -1712,  -492,   802, -2510, -2510,   916, -2510, -2510, -1006,  -601,
    1028,  -540,  -759,   808, -2510,  -543,  1165, -2510,  2033,  -519,
    1961,  -955,    24, -2510,  -638,   278,   948,  -774, -2029, -2510,
   -2510,  -477, -2128,  -830, -2510,  -611, -2510, -2510, -2510, -1099,
   -2510,   648, -2510, -1013, -2510,  -212, -2510, -2510, -2039, -2510,
   -2510, -2510, -2510, -2510, -2510,  -369, -2510,  -457,  -448, -2510,
   -2510,     4,  -703,  1379, -2510, -2510,   807, -2510,   977, -2510,
     846, -2510, -2510, -2510,  1159, -2510, -2510, -2510,    34,  1614,
     451, -2510,  1164, -2510, -2510, -2510, -2510, -2510,   257, -2510,
   -1012, -1972,    64, -2270, -1047,    -6, -2510, -2510, -2510,  -503,
   -2510, -2025
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If zero, do what YYDEFACT says.
   If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -1680
static const yytype_int16 yytable[] =
{
     469,   650,  1404,  1043,   578,  1050,   590,   631,    54,   910,
     825,  1100,   465,  1403,   876,  1047,    42,  1343,  1234,   847,
     531,  1093,  2000,   716,  1387,  1571,   836,  1864,   656,  1219,
     466,  1368,    59,    52,    73,  1236,  2051,  1467,  1434,  1435,
    1437,  1438,   648,  1375,  1415,  1080,  2357,   564,    59,  1357,
    2359,  1281,  1379,  2066,  1544,  2068,  2019,  1542,  2276,  1612,
    2375,   592,  1545,  1291,    80,  1546,  1961,  2047,   657,  2385,
    2231,  1408,  1610,  1611,   593,  1866,  1095,  1526,   710,   576,
    2248,  -680,  1095,  1901,  1902,   601,  1109,  2388,  1921,   909,
     732,   915,   473,   919,  1682,  -434,  -685,  1904,  1195,  1439,
    -685,  1074,  1083,  2542, -1034,   609,  1074,  1726,   537, -1009,
    2713,  2547, -1031, -1031, -1556,  1208,  2489,  1729,  2551, -1567,
    2493,  2576, -1658, -1658,   568,  1360,  1695, -1669, -1669,  1948,
    1949,  1051,  -901,  1245,  2052,  1074,  1297,  1621,  2105,  -901,
   -1574,   537,  -688,  1679,  1371,   732, -1678, -1678, -1676, -1676,
   -1035, -1034, -1567,  -688,  1406,  -437,  1881,  2613, -1032, -1032,
    2597,  1286,   717,  1251,  2865, -1574, -1035,  2496,  1241, -1556,
    -647,  -660,  -675,   642,   537,   537,   869,  1642,  2133,  2135,
     872,  1621,  2532,  2112,  1750,  1087,  2644,  -434,  1371,  -394,
     732,  1095,  1810,  1095,  1095,  1253,  -179,  1904,  2079,  1658,
    2246,  -179,   830,   732,  1388,  1583,  1659,  1391,  1392,   582,
    2473,   716,  2672,  2683,  2185,  1380,  1245,   716,  1282,  2548,
    -920,   837,  1363,   587,  2498,  2239,  2851,  -920,  2685,  2527,
    2876,  1294,  1087,   537,  2549,  1047,   585,   732,  1226,  1230,
    2716,  2613,  2715,  1430,  2269,  2053,  1251,  -437,  2632,     3,
       4,  1995,  2619,  2775,   587,  1237,  2288,  2240,  1708,  1095,
    1101,  1997,  1095,  1095,    25,  1995,  2545,   632,  2668,  2515,
    1666,   550,  2452,  2636,  2655,  2686,  2669,  1493,  1253,   859,
     548,  2242,  2815,  1292,  2816,  2055,  1413,  1398,  1747,  2835,
     623,  1330,   624,  1414,   583,    81,  2698,   865,   538,    29,
     586,  1643,   633,  2277,  1696,  2751,  2020,  1245,  2486,  1203,
    1204,  1399,  2546,  2311,  2526,  1644,  2248,  2725,  2630,  2508,
    1645,  2446,  2501,  1583,  2162,  2450,  1356,  1245,   716,   716,
    2287,  1313,  2392,  2752,   602,   535,   634,  1331,  1876,    82,
      31,  2541,  1295,  2509,  1709,  1748,  1069,  1187,  1188,     3,
       4,  2872,  2845,  1085,  2863,  1646,  1086,  1251,  2837,  1431,
    1580,  2284,  2576,  2286,  2278,  2502,  2389,   867,  2866,  1253,
    1365,    25,  1205,   551,  -434,  1163,  1418,   587,  2487,  1393,
    2503,   860,  1075,   635,   838,  2877,   839,  1075,  2631,  1253,
    1070,    34,  1378,  2684,   886,  2613,  1332,  2814,  2642,  2411,
    2244,  2633,  2717,  2728,  1381,  1219,    29,   534,  2687,  1667,
     524,  2550,  2166,  2167,  2168,  2169,  1075,  2474,  2173,  2174,
    2175,  2176,  2177,  2178,  2179,  2180,  2181,  2182,  1417,  1452,
    1811,  2490,  1982,  1983,  -437,  -434,  2436,  1132,  2820,  2670,
     831,  1287,   569,  1043,  1333,  2867,  1450,    31,  2054,  2055,
    2833,  2399,  2409,  1471,  1473,  1571,  2806,  2736,  1296,  1491,
      32,   643,  2629,  1354,  1531,  1378,  2020,  1355,  2792,  1195,
    2209,  2210,  2868,  2793,  1407,  2504,  1309,  2056,  1718,  2613,
    1366,  -901,   619,  1726,    33,  1817,  2092,  2093,  1622,  1208,
     617,  1476,  2032,  1283,  2205,  -437,   578,  2533,  1697,  2357,
    1647,  2478,  1334,  2359,  2838,  2021,    59,   618,   621,  1742,
     832,  2542,  1799,   588,  1182,  2002,  1394,   584,  2080,  1525,
     715,   613,  2390,   726,  1395,   614,  2026,  2577,   474,   720,
     712,  2586,  1963,  1076,  2852,   536,  2590,  1404,  1079,  2592,
     721,   877,   731,  -434,  2412,  1904,   469,   469,  1660,  1163,
    1905,  1906,  1907,  1537,  1538,   537,  1995,    59,  1995,  1460,
    1071,  1552,  -680,  1553,  1554,   469,  2144,  2480,  1919,  -920,
    1583,  1583,  1327,   841,  2824,  1583,  2170,  -685,  1591,  1528,
    1592,   592,  -434,   716,  -434, -1034,  1799,  1214,   613,    54,
   -1009,  2491,   614,  2004,   593, -1556,   648,    42,  1214,  1459,
   -1567,  1608,   857,  -437,  1274,  1463,   958,   469,  1044,  1215,
    2738,   571,  2742,    59,    52,    73,  1583,  1583,   848,  1222,
    1215, -1574,  1240,  1216,  2743,  2477,   865,  1527,  1468,  1226,
     580, -1035, -1034, -1567,  1218,  1528,  1047,  1535,   710,  1618,
    1398,  1539,  -437,  1750,  -437,    80, -1574, -1035,   469,  2298,
   -1556,  1193,  1199,  -675,  1681,  1289,  1683,   840,  1091,  1092,
    1585,  1587,   581,  1072,  1399,  1916,  1917,  1918,  1919,  -179,
    -179,  2517,  2518,  1371,  1328,  2693,  1470,    25,  2739,  2075,
    1528,   732,  2142,  1372,  1271,  1272,  1273,  1274,  1237,  1380,
    1528,  1047,  2076,  2536, -1655, -1655,   867,  1776,  2158,  1904,
    1725,  1725,  2479,  2825,  2290,  1091,  1092,  1779,   715,  2797,
    1782,  2171,    29,  1571,   715,   958,  1174,  2238,  2165,  2299,
    2400,  2172,  2402,  1187,  1188,  1580,  1580,  1732,   594,  2148,
    1580,  2147,   469,  2220,  2221,  2222,  2223,  2149,  2151,  2419,
    2150,  2152,  2153,  1747,   595,   868,  1909,  2189,  1205,    59,
     627,  2357,  1095,    31,  2194,  2359,  2009,   525, -1653, -1653,
     469,   578,  1095,  1858,   637,  1095,    32,  1768,  1859,  2791,
    2622,  1580,  1580,  1853,  2108,  2164,  1624,  2196,  2826,  1380,
     469,   469,   469,  1851,   469,   469,  2291,  1245,  1775,   612,
      33,  2010,  2239,  1269,  1270,  1271,  1272,  1273,  1274,  2300,
    2044,  1214,  1163,  2186,   526,  1402,  1214,   640,   469,  1995,
    1555,  1556,   718,  1995,   719,  1910,  1307,  1251,  1860,  1308,
    2871,   883,  2238,  1215,  2240,   715,   715,   884,  1215,  1043,
    1371,  1234,  1733,   827,   641,  1795,  1796,  1797,  1095,  2241,
    1374,  1739,  1216,  1190,  1941,  1953,  2846,  2847,  2242,  1253,
    2292,  1095,  2293,  1841,  1472,  1842,  2003,   469,  1844,   732,
    2858,   469,   469,  1321,  1322,  2030,  1326,  1404,  1774,   645,
     732,  1954,   469,   857,   477,  1871,   593,   593,  1381,   593,
     883,  2643,  2243,   625,   644,   626,   884,  1785,  1440,  2354,
    1174,  2026,  1792,  2090,  2874,  1409,   654,  2239,  1163,  1583,
    1583,  1583,  1583,  2587,  2719,  1583,  1583,  1583,  1583,  1583,
    1583,  1583,  1583,  1583,  1583,   958,  2734,  2563,  1310,  1777,
    2723,  1311,   958,  1440,  1780,   731,   632,   722,  1904,  2240,
    1405,   478,   885,  1905,  1906,  1907,  1380,  1816,  2656,  1378,
    1605,  2081,  1606,   958,  2241,   524,  1857,  2023,  2566,   724,
    1861,   865,  1862,  2242,   467,   725,   866,  1583,  1583,   496,
    -480,   633,   613,   496, -1009,  -480,   614,  2244,  1381,   540,
     496,   545,    55,   716,   545,   726,  1630,   566,  1879,  2579,
     496,   496, -1654, -1654,  2580,  1955,   716,  2243,    55,  2657,
    1956,   885,  1096,   727,  2113,  2101,   613,  2658,  1096,  2120,
     614,   829,  1631,  2628,  1380,   835,   577,  1911,  1912,  1913,
    1995,  1914,  1915,  1916,  1917,  1918,  1919,  1464,   844,  1995,
    1311,   867,   850,  1163,  1995,   545,  2659,  1995,   849,  1378,
    -480,   591,   566,   496,   566,   566,   566,  1214, -1656, -1656,
    1380,  1833,   635,  1935,   883,  2001,  1995,  1330,  1044,    55,
     884,  2770,  1412,  2588,  1580,  1580,  1580,  1580,   958,  1215,
    1580,  1580,  1580,  1580,  1580,  1580,  1580,  1580,  1580,  1580,
     868,  2673,  2244,  1218,  1238,  1951,  2031,  2031,  2396,  -480,
     715,   886, -1657, -1657,  1242,  1434,  1435,  1437,  1438,  2543,
     712,  1571,  1830,  1331,  1831,  2660,  1044,  1290,   852,   482,
    2674,   483,  1934,  1999,  1936,  1937,  2661,  1299,  1908,  1096,
    1096,  1632,  1580,  1580,   853,  1230,  1633,    59,   855,  1380,
    2078,  1634,  1975,   856,  1976,  1381,   486,  2521,  1957,  1909,
    1995,   887, -1659, -1659,  2864,   888,    84,  2834,  1490,  1958,
     886,  1491,  1977,  1174,  1978,  1163,   863,  2129,  2309,  2063,
    1523,  2065,   878,  1524,  2470,   885,  2082,  2848,  1691,  2456,
    2302,  1079,  2459,  1995,   889,  1914,  1915,  1916,  1917,  1918,
    1919,  1737,   880,   469,  1311,   469,  1807,  1163,   881,  1808,
     469,  2187,  2188,   469,   619,  1837,  1378,   469,  1491,   882,
     913,  2285,   617,  1381,   888, -1660, -1660,  2099,  1910,  2372,
    1333,   469, -1661, -1661,   469,   469,   469,   469,    59,   618,
     621,  2878,    25,   894,   469,   469,   469,  2562,  2301,   883,
    2310,    25,  1048,   914,  1847,   884,   862,  1848,   864,  1381,
     890,  2143,  2145,  1877,   469,  2086,  1311,  1476,   895,  1174,
     469,   469,   469,   469,  1044,  1727,  1728,    29,   469,   469,
     912,  1995,    25,   469,  1378,  2267,    29,   469,  1334,  1635,
     469,   469,   469,   469,   469,   469,   469,   469,   469,   916,
    1636,   469,  1505,  1506,  1885,  1049,   469,  1311,  1171,   469,
    1052,   469,  1889,   958,  1995,  1311,  1056,    29,    31,   890,
    1378,  1066,  1923,  2662,    85,  1311,  2663,    31, -1662, -1662,
      25,    32,    86,  1054,   886,   469,   731,  1057,  1381,  1904,
      32,  1064,   841,   883,  1905,  1906,  1907,  2069,  1073,   884,
    2070, -1663, -1663,   469,  1699,    33,  2073,  1068,    31,  2074,
     885,  2198,   469,   469,    33,    29,    87, -1664, -1664,    34,
    1528,    32,  2354,  2451,  2026,  2454,   731,   716,    34,  1904,
   -1665, -1665,  1499,  1500,  1905,  1906,  1907,  2138,   888,  2140,
    1524,   826,  2141,   828,  1174,    33,  2124,  1078,  1995,  1378,
    1044,  2199,  1044,  1081,  2154,  2201,    31,  1311,  1311,    34,
    1509,  1510,  2351,    88,  1084,  1298,  2193,   889,  1082,    32,
    1911,  1912,  1913,  1102,  1914,  1915,  1916,  1917,  1918,  1919,
   -1666, -1666,  1176,  2309,  1583,   477,  1177,  2265,  1179,  2697,
    2266,   958,  2697,    33,   469,   469,  1181,   469,  1505,  1506,
     585,  -651,  1528,   566,   885,  2270, -1080,    34,  2271,   629,
    -658,  2481,   630,  -481,  1044,  1186,   566,  1095,  -481,  2289,
    2380,   496,  1808,  1808,  1189,   896,    55,   469,  2397, -1667,
   -1667,  2398,  1171,   890,  1190,  2420,  2253,  1834,  1524,  2441,
   -1668, -1668,   478,  1768,   897,  2360,  1191,   630,   496,   496,
     715,  1493,    89,  2441,  2482,   472,  1551,  1808,  1192,   886,
    1196,   522,  1163,   715,   586,   958,  1174, -1670, -1670,  2483,
    1583,   549,  1808,  2567,    34,   561,  1524,    55,   577, -1671,
   -1671,  2401,   545,  -481,   545,  2623,  2649,  -648,  2624,  1808,
    1909,   566,  2371,  1198,   898,  -649,   480,  1201,  1174,  2395,
     496,  1163, -1672, -1672,   469,   469,  1509,  1510,  2675,   917,
     469,  1524,   566,   888,  -652,  2678,  1202,  1163,  2679,   883,
    2690, -1673, -1673,  1079,   566,   884,  2695,  1207,   578,  2696,
    1909,   591,  -481,    55, -1674, -1674,  1209,  1163,  1583,  1580,
    2699,   587,   918,  2696,  2711,  2748,  1244,  2712,  2712,  1245,
     469,   469,   469,   886,  2749,   469,  1684,  1524,  -650,  1910,
    1210,   566,   566,   566,  2757,  1211,  1163,  1079,   469,   469,
     469,   469,  2763,  1163,  2354,  2696,  2026,   578,   469,  1251,
    2778,   469,   899,  2779,  2807,  2810, -1680,  2808,  1079,  2513,
    2841,  2859,  1163,  2696,  2712,  1212,   469,   469,    25,  1910,
    1213,   469,  1220,  1738, -1675, -1675,  1221,   888,   890,  1222,
     482,  1253,   483, -1677, -1677,   469, -1679, -1679,   469,  2647,
     469,  1420,  1421,  -527,  -527,  1580,  -531,  -531,  -530,  -530,
     885,   900,  1047,    29,   485,  1235,   889,   486,  1279,   901,
    1239,   469,  1507,  1508,  1095,  1285,  1528,   578,  1286,  1095,
    1287,   902,  1301,   469,  1178,  1509,  1510,  1303,  1305,  1314,
    1320,   866,   868,  1350,  1358,  1993,  1352,   469,  1376,    55,
    1378,  1377,  1383,  1384,    31,  2129,  1385,   588,  1389,  1993,
     619,   469,   903,   466,  1401,  1171,  1396,    32,   617,  2522,
    2523,  1471,  1473,  1580,  1397,  1411,   469,   466,  1416,  2468,
    1423,  1424,   890,  1428,    59,   618,   621,  1197,  1163,  1432,
   -1680,    33,  1433,  1440,   469,  1441,  1443,  1446,  1447,  1449,
    1233,  1453,  -446,  1489, -1680,    34,  1193,   905,  1199, -1680,
    1182,  1044,  1044,  1044,  1096,  -446,  1492,  1494,  1856,  1495,
    -446,  1531,   732,  1228,  1530,  1536,  1589,  1096,  1590,   906,
    1245,  1911,  1912,  1913,  1311,  1914,  1915,  1916,  1917,  1918,
    1919,   566,  1602,  1604, -1680,  1620,  1627,  1638,  1639,   908,
    1607,  1641,   958,  1662,  1663,   586,  1679,   496,   496,   886,
    1685,  1171,  1693,   566,   566,  1319,  -446,  1692,  1700,  1719,
    1707,  1911,  1912,  1913,  1721,  1914,  1915,  1916,  1917,  1918,
    1919,  1720,  1722,  1174,  1744,  -446,  1740,  1745,  1746,   587,
     566,  1370,  1800,   591,   591,  2351,   591,  1805,  1809,  1262,
     883,  1813,  1044,   566,   715,  1818,   884,  1819,  1820,  1783,
    1821,  1835,  1839,   888,  1834,  1845,  1840,  1163,  1843,  1846,
     566,  1854,  1174,  1540,   566,   537,  1865,  1869,  1870,  1872,
    1873,  1874,  1477,  1875,  -446,   469,  1878,  1887,  1174,  1471,
    1473,  1888,  1784,  -446,  1890,   469,  1891,  1897,  1892,   469,
    1095,  1893,   469,  1929,  1894,   716,  2857,  1952,  1174,   469,
     469,   469,   469,  1968,  1896,   469,   469,   469,   469,   469,
     469,   469,   469,   469,   469,  1900,  1478,  1922,   469,   469,
    2215,  1928,  1930,  1404,  1931,  1932,  1171,  1174,  1939, -1680,
    1945,  1947,   469,  1997,  1174,  2006,  1959,  1969,  1971,   578,
    1972,   469,  1479,  1973,   469,  2015,   469,  2008,   890,  2028,
    2022,   885,  -532,  1174,   469,  -533,   578,   469,   469,  2033,
    1480,  2036,   469,   469,  1481,  2034,  1163,  2037,  1497,  1498,
    2038,  2040,   495,  2042,  2046,  2043,   523,  2049,   469,  2062,
     469,  2064,  2087,   541,  2088,  1482,  2077,  2089,  1483,  2083,
    1993,   469,  1993,   575,   575,  2677,  1163,  1427,  2084,  2091,
     469,  2085,  1484,  2111,  2110,   566,  2114,  2115,   466,  2722,
     466,  2121,  2118,  2122,  2125,  1456,   469,  2626,  2729,  -446,
    2132,   630,  2146,  2139,   630,  2157,   496,   496, -1680,   496,
     630,  1904,   566,  1925,  1924,  1269,  1270,  1271,  1272,  1273,
    1274,  2072,  1499,  1500,  2190,  2203,   605,  1230,  1171,  2191,
     476,  2216,  1980,  2192,   477,  2204,  1163,    55,  2207,  2682,
    2229,  2251,  2237,  2255,  1044,  1165,  1163,  2262,  1044,  2358,
    1044,  2264,  2257,  2259,  2268, -1080,  2275,  2682,  2279,  2260,
    1171,  2283,   613,  2295,  2095,   852,   614,  2351,  2297,  2313,
    2374,  1485,  2379,  2383,  2387,  2382,  2104,  2378,  2393,  1486,
     886,  2777,  2407,  1808,  1501,  1502,  1503,  1504,  1505,  1506,
    2404,   478,  1507,  1508,  2410,  2405,  2442,   604,   479,   607,
    2413,   611,  2414,  2447,  2750,  2415,  2428,  2438,  1096,  2391,
    2448,  2455,  2439,  2130,  2445,  2131,  2461,  2460,  2462,  2136,
    2137,  1487,  1095,  2463,  2484,  2476,  2488,  2511,    55,   469,
    1790,  2512,  2516, -1031,   888, -1653, -1654,  1573,  2537, -1655,
    2528,  2529, -1656,  2731, -1657,   480, -1658,  2531,  2722, -1659,
   -1660, -1661, -1662,  2760, -1663, -1664, -1665, -1666, -1667, -1668,
   -1670,  1163,  2530,  1791,  2538, -1671, -1672,  2831, -1673,  2552,
   -1674,  2553,   469,   469, -1675,  2539, -1676,   469,  1174, -1677,
   -1678,   630,   469, -1679, -1032,   469,   469,  2555,  2558,  2559,
     469,  2561,  2564,  2572,  2591,  2605,  1509,  1510,  1163,  2565,
    2578,  2596,  2609,  2615,  2617,  2618,  2620,  2625,  1628,  2634,
    2637,   469,  2638,   481,   566,   469,  2772,  2639,  2640,  1165,
    2648,  2651,  2652,  1993,  2653,  2666,  2676,  1993,  1163,   890,
    2667,  1163,  2680,  2688,  2701,   566,   469,   566,  2705,  2689,
    2692,   466,  2708,  2713,  2727,   466,  1701,  2732,  1706,  2730,
    2735,  2744,  2469,  2471,  2745,  2746,  2756,  2765,  2766,   482,
    2767,   483,  2780,  2633,  2776,  2782,  2783,  2785,    55,  1044,
    1166,  2788,  2789,  2794,  2790,  2796,  2217,   484,   469,  2795,
     566,  2805,  2809,   485,  1168,  2821,   486,  1174,  2827,  1370,
     496,  2842,  2836,  2843,  2850,  2853,  2855,  2860,  2851,  2862,
     496,  1752,   496,  1756,  2861,   496,  1511,  1512,  2852,  2873,
    2875,   496,  2879,   496,  2312,   854,  2316,  2358,  1770,  2472,
    2272,  2060,  2771,  2608,   630,   496,  2817,  2381,  2519,   630,
     496,  2823,  2870,  2356,   496,   496,   496,   496,  2726,   496,
     496,  2856,  2849,  1367,  2665,  2045,  2067,  2386,  2819,  2096,
    2854,  2317,  2041,  2818,  2097,  2095,  1458,  2126,  2560,   566,
    1815,  2373,  1312,  1293,  2024,  1171,  1347,  1736,  2759,  2707,
    1244,  2544,   715,  1245,  1346,  1829,  2813,  1174,  1246,  1247,
    1248,  2035,  2258,  1716,   469,  2764,  1735,  1174,  2466,  1351,
    2005,  2232,  2437,  2694,  2453,  1249,   469,   469,  2228,  2755,
     469,    55,  2754,  1251,  1171,  2761,  1541,  2762,  1543,  2607,
    1252,  1547,   469,  1163,  1548,  2811,  2804,  2812,  1668,  1943,
    1171,   469,  1868,  2027,  1993,  1529,   469,  1966,  1882,   469,
    1964,  1804,  1678,  1993,   639,  1253,   469,   469,  1993,  2747,
    1171,  1993,   466,  2100,  1166,  1469,  1863,  1687,   469,  1315,
     469,   466,  2273,  1689,     0,     0,   466,     0,  1168,   466,
    1993,     0,   653,     0,  1169,     0,     0,     0,     0,  1171,
     469,     0,  1165,     0,     0,     0,  1171,     0,   466,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   622,   731,
       0,     0,  1904,     0,     0,  1171,     0, -1680, -1680, -1680,
       0,   636,  2358,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   575,     0,  2465,     0,  2467,     0,     0,
       0,     0,     0,     0,     0,  2650,  1244,     0,     0,  1245,
    1228,     0,   469,  1233,  1254,     0,     0,     0,   469,  1174,
       0,     0,     0,     0,  1993,     0,     0,  2544,  1255,   578,
       0,     0,     0,  1256,     0,     0,     0,  1170,     0,  1251,
       0,   469,   466,     0,     0,   469, -1680,  1573,  1165,  1174,
       0,     0,  1174,   469,  1257,  1258,   834,  1993,     0,  1228,
       0,     0,     0,     0,   469,     0,     0,     0,  1259,     0,
       0,  1253,     0,     0,  1044,   466,     0,  1628,  1044,   469,
     566,     0,     0,   896,     0,     0,     0,  1996,     0,   879,
       0,  1171,     0,  1970,     0,     0,     0,     0,     0,     0,
       0,  1996,   897,     0,     0,  2014,  1260,     0,  2017,  1261,
    1706,  1987,     0,     0,     0,     0,     0,  2540,  1169,     0,
    2741,     0,     0,  1262,    55,  1987,  1059,  1061,  1063,   577,
     469,     0,     0,   469,     0,  1244,  1096,     0,  1245,     0,
    1950,     0,     0,     0,     0,  1993,     0,     0,     0,     0,
     731,     0,   898,  1904,     0,   469,  1427,     0,  1905,  1906,
    1907,     0,     0,   466,     0,     0,   469,     0,  1251,     0,
   -1680,     0,     0,  1165,     0, -1680,  2768,  1166,  1993,     0,
       0,     0,     0,     0, -1680,     0,   469,     0,     0, -1680,
       0,  1168,     0,     0,     0,     0,   466,     0,     0,     0,
    1253,     0,     0,     0,     0,   469,   469,     0,     0,     0,
       0,  1170,     0,  1264,     0,     0,  1427,     0,  2305,     0,
    1171,   566,     0,     0, -1680,     0,     0,  1427,   566,   566,
     566,     0,     0,  1044,  2358,     0,     0,     0,     0,     0,
     899,   496,  1910,     0,     0,     0,     0,     0,   566,     0,
     469,   630,   469,     0,     0,  1558,     0,  2832,     0,     0,
       0,     0,  1993,  1559,  1560,  1561,  2356,  1427,  1427,  1960,
     575,     0,     0,  1166,     0,     0,     0,     0,    55,  1262,
     466,     0,     0,     0,     0,     0,     0,  1168,     0,   900,
       0,     0,     0,     0,     0,  1165,     0,   901,     0, -1680,
       0,     0,     0,     0,     0,  1573,     0,     0,     0,   902,
       0,     0,  1265, -1680,   469,  1266,  1267,  1268, -1680,  1269,
    1270,  1271,  1272,  1273,  1274,     0,  1306,  1165,     0,  1171,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     903,     0,   896,     0,     0,     0,     0,     0,     0,  1317,
       0,     0,     0, -1680, -1680,     0,     0,     0,     0,  1171,
       0,   897,     0,     0,     0,     0,     0,     0,     0, -1680,
       0,  1169,     0,     0,     0,  1359,     0,     0,     0,     0,
       0,  2219,     0,     0,     0,   905,  2737,     0,  1386,   566,
     566,   566,   467,     0,  1996,  2236,     0,     0,  1166,  2236,
    2250,  1228,     0,     0,     0,     0,     0,   906,  1262,  1410,
       0,   898,  1168,     0,     0,     0,  2227,     0,  2230,  1171,
       0,     0,     0,  1910,     0,     0,     0,   908,  1706,  1171,
       0,     0,     0,     0, -1680, -1680, -1680,     0,  1914,  1915,
    1916,  1917,  1918,  1919,   566,     0,   496,     0,     0,     0,
    1427,  1370,  1427,     0,  1456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1170,     0,     0,  1169, -1680,     0,
     496,     0,  2315,     0,     0,  1269,  1270,  1271,  1272,  1273,
    1274,     0,     0,     0,     0,   496,   496,   496,   496,   496,
     496,   496,   496,   496,   496,     0, -1460,     0, -1680,   899,
    1461,     0,  1462,     0,     0,     0,     0,     0,     0,   566,
       0,     0,     0,     0,     0,     0,     0,     0,  2356,  1370,
    1166,     0,     0,     0,     0,     0,     0,     0,  2025,     0,
    1456,     0,     0,   566,  1168,     0,     0,     0,     0,     0,
    1427,     0,     0,     0,  1171,     0,     0,     0,   900,  2403,
    1442,     0,  1166,    55,     0,     0,   901,     0,     0,     0,
    1170,     0,     0,     0,     0,     0,  1168,     0,   902,     0,
     731,     0,     0,  1904,     0,     0,     0,  1466,  1905,  1906,
    1907,  1171,     0,     0,     0,     0,     0,     0, -1460,     0,
       0,     0,  1169,     0,     0,  2422,     0, -1680,     0,   903,
       0,     0,     0,     0,  1269,  1270,  1271,  1272,  1273,  1274,
       0,  1171,     0,     0,  1171,  1911,  1912,  1913,     0,  1914,
    1915,  1916,  1917,  1918,  1919,  2431,     0,     0,   566,   566,
     566,   566,  1165,     0,     0,  2236,  2250,     0,  2236,     0,
   -1460,  2440,     0,     0,   905,  1996,     0,     0,     0,  1996,
       0,     0,     0, -1460,     0,  2458,     0,     0, -1460,     0,
       0,     0,     0, -1460,     0,     0,   906,     0,     0,  1987,
       0,  1165, -1460,  1987,  2014, -1460,     0,     0,     0,  1706,
       0,     0,     0,  1573,     0,  1170,   908,  1165,     0,     0,
       0,  1370,     0,     0,     0,     0,    55,    55,     0,     0,
       0,     0,     0,     0, -1460,     0,     0,  1165,     0,     0,
       0,     0,     0,     0,  1169,     0,  2520,     0,     0,     0,
    1562,  1563,  1564, -1460,  1565,  1566,  1567,  1568,  1569,  1570,
       0,     0,     0,     0,     0,     0,  1165,     0,     0,     0,
       0,     0,     0,  1165,     0,     0,  1169,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1165,     0,     0,     0,     0,     0,     0,     0,
    2493,     0, -1460,     0,  1909, -1460,  2494,     0,     0,  1677,
       0, -1460,  1427,  1743,     0,     0,     0,     0,  2495,     0,
    1829,     0,     0,  1751,     0,  1754,  1171,     0,  1765,     0,
    1686,  2556,  1688,     0,  1769,     0,  1771,  1170,     0,     0,
       0,     0,     0,     0,     0,    55,     0,  2496,  1778,  2497,
       0,     0,     0,  1781,     0,     0,     0,  1786,  1787,  1788,
    1789,     0,  1793,  1794,     0,     0, -1460,     0,     0,  1170,
       0,     0,     0,  1910,     0,  1731,   467,  2236,     0,     0,
    2584,     0,     0,   496,     0,  1996,     0,  1166,     0,     0,
    1996,     0,     0,  1996,     0,  2595,     0,     0,  2598,     0,
       0,  1168,     0,     0,  2498,     0,     0,     0,  1165,  1987,
       0,     0,  2614,     0,  1987,     0,     0,  1987,     0,     0,
    1980,     0,     0,     0,   807,   807,  1166,     0,     0,     0,
       0,  2499,   630,   496,     0,     0,     0,     0,     0,     0,
    1168,   566,  1166,     0,     0,     0, -1462, -1460,     0,     0,
       0,     0,     0,     0,  1814, -1460,  1168,     0,     0,     0,
       0,     0,  1166,     0,     0,     0,     0,   496,   496,     0,
       0, -1460,     0, -1460, -1460,     0,  1168,  1370,     0,     0,
       0,   496,     0,     0,   953,   960,     0,     0,     0,     0,
       0,  1166,     0,   566,     0,     0,  2614,  2500,  1166,    55,
       0,     0,  2501,     0,     0,  1168,     0,     0,     0,     0,
   -1460,     0,  1168, -1460, -1460, -1460,   496,  1166,     0,     0,
       0,    55,     0,     0,     0,     0,     0,     0,     0,  1996,
       0,  1168,     0,     0,  2598,     0,     0,  1165, -1462,     0,
       0,     0,     0,  2704,     0,  2502,     0,   496,     0,     0,
       0,     0,     0,  1987,     0,     0,   566,     0,     0,     0,
    2503,  1228,     0,     0,     0,  1911,  1912,  1913,     0,  1914,
    1915,  1916,  1917,  1918,  1919,     0,     0,     0,   630,     0,
       0,  1169,     0,  1244,     0,     0,  1245,     0,     0,   566,
   -1462,     0,     0,   953,     0,     0,     0,     0,     0,     0,
       0,     0,     0, -1462,  1244,     0,     0,  1245, -1462,     0,
    1184,     0,     0, -1462,    55,     0,  1251,   467,     0,     0,
    1169,     0, -1462, -1680,     0, -1462,  2758,     0,     0,     0,
     496,     0,     0,  1166,  2595,     0,  1169,  1251,  1206,     0,
       0,     0,     0,     0, -1680,     0,  1165,  1168,  1253,     0,
    2614,   630,   630,   630, -1462,  2504,  1169,     0,  1223,  1224,
    1225,     0,     0,  1229,     0,     0,     0,     0,     0,  1253,
      55,     0,     0, -1462,  1170,     0,  1165,     0,     0,     0,
       0,     0,     0,     0,     0,  1169,  1284,     0,     0,     0,
       0,     0,  1169,     0,  2595,  1979,     0,     0,     0,     0,
       0,     0,     0,  2704,     0,  2584,     0,     0,     0,     0,
       0,  1169,     0,  1170,  1706,     0,     0,  2208,     0,     0,
       0,     0, -1462,     0,  1244, -1462,     0,  1245,  1370,  1170,
       0, -1462,     0,     0,  2614,  1325,  1165,     0,  2211,  1337,
    1342,     0,     0,     0,     0,     0,  1165, -1680,     0,  1170,
       0,    55,   630,     0,     0,     0,     0,  1251,     0,     0,
       0, -1680,  1166,     0, -1680,     0, -1680,     0, -1680,     0,
       0,     0,     0,     0,     0,     0,  1168,     0,  1170,     0,
       0,     0, -1680,     0,  2117,  1170, -1462, -1680,     0,  1253,
       0,     0,     0,   953,     0,     0,     0,     0,     0,  1244,
     953, -1680,  1245,     0,  1170,     0,     0, -1680, -1680, -1680,
       0,     0,     0,  1277,     0,     0,     0,     0,     0,     0,
       0,   953, -1680,     0,     0,     0,     0,  1169,     0,     0,
       0,     0,  1251,     0,     0,     0,  2098,     0,     0,  1252,
    1980,     0,     0,  2106,  2107,  2109,     0,     0,     0,     0,
       0,     0,  1277,     0,     0,     0,  1262,     0,  2212,     0,
       0,  1165,     0,  2123,  1253,     0,     0, -1462,     0,     0,
       0,  1166,     0,     0,     0, -1462,     0,  1262,     0,     0,
       0,     0,     0,     0,     0,  1168,     0,     0, -1680,     0,
       0, -1462,     0, -1462, -1462,     0,     0,     0,  1165,     0,
       0,  1166, -1680,     0,     0,     0,     0, -1680,     0,     0,
       0,     0,     0,     0,     0,  1168,     0,     0,     0,     0,
    1170,     0,     0,     0,     0,     0,     0,     0,  1165,     0,
   -1462,  1165,     0, -1462, -1462, -1462,   953,     0,     0,     0,
       0,     0, -1680,     0,     0,     0, -1680,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1169,     0,     0,  1277,
       0,  1166,     0,  1254,     0,     0,  1277, -1680,     0,     0,
       0,  1166,     0,     0,     0,  1168,     0,  1255,     0,     0,
       0,     0,  1256,     0,     0,  1168,     0,     0,     0,  2281,
       0,     0,     0,     0,     0,     0,     0,  1262,     0,     0,
       0,     0,     0,     0,  2224,  2225,  2226,     0,     0,     0,
       0,     0,     0,  2314,   883,     0,     0,  1259,     0,     0,
     884,     0,     0,     0,     0,     0,     0,   896,  2361,  2362,
    2363,  2364,  2365,  2366,  2367,  2368,  2369,  2370,     0,     0,
       0,     0,     0,     0,     0, -1680,   897,     0,     0,  1170,
       0,     0,  1269,  1270,  1271,  1272,  1273,  1274,  1534,  2280,
       0,     0,     0,     0,     0,  1169, -1680,     0,     0,     0,
       0,     0,  1262,  1269,  1270,  1271,  1272,  1273,  1274,  1557,
       0,     0,  1574,     0,     0,  1586,  1166, -1680,     0,     0,
       0,     0,  1593,  1598,  1601,  1169,   898,     0,     0,     0,
    1168,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1609,  1165,     0,     0,     0,     0,  1613,  1614,
    1615,  1616,     0,  1166,  2377,   885,  1625,  1626,     0,     0,
       0,  1637,     0,     0,     0,  1640,     0,  1168,  1648,  1649,
    1650,  1651,  1652,  1653,  1654,  1655,  1656,     0,  1466,  1657,
       0,     0,     0,  1166,  1665,  1169,  1166,  1669,  1170,   807,
       0,   953,  1264,     0,     0,  1169,     0,  1168,     0,     0,
    1168,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1690,   899,   896, -1680,     0,  1170,     0,
    1277,     0,     0,  1269,  1270,  1271,  1272,  1273,  1274,     0,
       0,     0,     0,     0,   897,     0,     0,     0,     0,     0,
    1224,  1225,  1277,     0,     0,     0,     0,  1581,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1277,
    1277,  1277,     0,   900,     0,  1277,     0,     0,     0,     0,
       0,   901,     0,  2432,  2433,  2434,  2435,     0,  1170,     0,
       0,     0,     0,   902,   898,  2303,     0,     0,  1170,     0,
       0,  1265,     0,  2304, -1680, -1680, -1680,     0,  1269,  1270,
    1271,  1272,  1273,  1274,   886,  1244,     0,     0,  1245,     0,
    1169,     0,     0,     0,   903,     0,     0,     0,     0,   953,
    1277,     0,  1801,  1802,     0,  1803,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1251,     0,
       0,     0,     0,     0,     0, -1680,     0,  1169,     0,     0,
    2305,     0,     0,     0,   904,  1838,     0,   -39,   888,   905,
       0,  1277,     0,     0,     0,     0,     0,     0,  1166,     0,
    1253,     0,   899,  1277,     0,     0,     1,  1169,  1277,     0,
    1169,   906,  1168,     0,     0,     0,     2,   907,     3,     4,
    1497,  1498,     0,   953,     0,     0,     0,     0,     0,     0,
       0,   908,     0,  1170,     5,     0,     0,     0,     0,     0,
       0,     0,     0,     6,     0,     0,     0,     0,     0,     0,
       0,   900,     0,     0,     0,     7,     0,     0,     0,   901,
       0,     0,     0,  1880,     0,     0,     8,     0,  1886,  2426,
    1170,   902,     0,  2306,     0,     0,     0,     9,     0,    10,
       0,     0,     0,   890,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1499,  1500,     0,    11,     0, -1680,
    1170,     0,   903,  1170,     0,     0,  2627,     0,     0,     0,
    1903,    12,     0, -1680,     0,     0,     0,     0, -1680,     0,
       0,    13,     0,     0,     0,     0,  1598,    14,  1598,  1598,
       0,     0,     0,     0,     0,    15,  1942,    16,    17,  1944,
    2645,  2646,     0,     0,     0,     0,     0,   905,     0,     0,
      18,     0,     0, -1680,  2654,     0,  1501,  1502,  1503,  1504,
    1505,  1506,     0,     0,  1507,  1508,     0,     0,     0,   906,
       0,     0,  1244,  1962,     0,  1245,  1965,    19,  1967,     0,
    1246,  1247,  1248,     0,     0,     0,  2635,     0,     0,   908,
       0,  2307,  1169,     0,  2308,     0,     0,  1249,     0,     0,
    1277,     0,     0,  1497,  1498,  1251,     0,     0,  1262,     0,
       0,     0,  1252,     0,     0,     0,    20,     0,     0,     0,
    2709,     0,     0,  1277,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1253,  2671,  1325,
    1277,     0,  1581,  1581,     0,  1920,     0,  1581,     0,     0,
       0,     0,  1277,     0,  1342,     0,     0,     0,     0,  1277,
       0,     0,     0,     0,  1277,     0,     0,  1277,  1509,  1510,
       0,     0,  2039,     0,     0,  1277,     0,  1499,  1500,  1277,
    1277,  1277,  1277,     0,     0,  1170,     0,     0,  1581,  1581,
       0,  1277,  1277,    21,     0,  1378,    22,     0, -1680,     0,
       0,  2718,     0,  1277,     0,     0,  1277,     0,     0,     0,
       0,     0,     0,     0,  1277,  1277,  1277,  1277,  1277,  1277,
    1277,  1277,  1277,  1277,    23,     0, -1476,     0,     0,     0,
     953,  1277,    24,     0,  2740,  1277,  1254,     0,     0,  1501,
    1502,  1503,  1504,  1505,  1506,     0,    25,  1507,  1508,     0,
    1255,     0,     0,    26,     0,  1256,  1277,    27,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    28,     0,     0,
       0,     0,     0,     0,     0,     0,  1257,  1258,  1511,  1512,
       0,    29,     0,     0,     0,     0,     0,     0,     0,     0,
    1259,     0,     0,     0,     0,     0,     0, -1680,  1513,     0,
       0,     0,     0,     0,  1269,  1270,  1271,  1272,  1273,  1274,
       0,     0,     0,  2156,     0,     0,     0,    30, -1476,     0,
       0,     0,    31,  2160,     0,     0,     0,  2161,  1260,     0,
    2163,  1261,     0,     0,     0,    32,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1262,     0,     0,  1263,   883,
       0,  1509,  1510,     0,     0,   884,  2183,  2184,     0,    33,
       0,     0,   896,     0,     0,     0,     0,  1277,  1277,  1277,
   -1476,     0,     0,    34,     0,     0,   -39,     0,     0,  2197,
       0,   897,  2200, -1476,  2202,     0,     0,     0, -1476,     0,
       0,     0,  2206, -1476,     0,     0,     0,     0,     0,     0,
    2213,  2214, -1476,     0,  1277, -1476,  1243,     0,     0,     0,
       0,  1244,     0,     0,  1245,     0,     0,     0,     0,  1246,
    1247,  1248,     0,     0,     0,     0,     0,     0,     0,  2254,
       0,   898,     0,     0, -1476,  1264,  1249,     0,  2261,  1250,
       0,     0,     0,     0,  1251,     0,  1277,     0,     0,     0,
       0,  1252,  1277, -1476,  2274,     0,     0,     0,     0,     0,
     885,  1511,  1512,     0,     0,     0,     0,  1920,  1920,  1277,
       0,  1581,  1581,  1581,  1581,     0,  1253,  1581,  1581,  1581,
    1581,  1581,  1581,  1581,  1581,  1581,  1581,  1920,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0, -1476,     0,     0, -1476,     0,     0,  1277,     0,
    1277, -1476,     0,     0,  1920,  1920,     0,     0,     0,   899,
       0,     0,     0,     0,     0,     0,     0,     0,  1277,  1581,
    1581,  1277,     0,  1277,  1265,     0,     0,  1266,  1267,  1268,
       0,  1269,  1270,  1271,  1272,  1273,  1274,     0,     0,     0,
       0,     0,     0,     0,  1895,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0, -1476,     0,   900,     0,
       0,     0,     0,     0,   731,  1254,   901,  1904,     0,     0,
       0,     0,  1905,  1906,  1907,     0,     0,  2406,   902,  1255,
       0,     0,     0,     0,  1256,     0,     0,     0,     0,  2423,
       0,     0,     0,     0,     0,  1277,     0,     0,     0,   886,
       0,     0,     0,     0,     0,  1257,  1258,     0,     0,   903,
    1980,     0,     0,     0,     0,     0,     0,     0,     0,  1259,
    2416,  2417,     0,     0,     0,  2418,     0,     0,     0,     0,
    2421,     0,     0,  2424,  2425,     0,     0, -1476,  2429,     0,
       0,     0,     0,     0,     0, -1476,     0,     0,     0,  1772,
       0,     0,     0,   888,   905,     0,     0,  1260,     0,     0,
    1261, -1476,     0, -1476, -1476,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1262,     0,   906,  1263,     0,     0,
       0,     0,  1773,     0,   807,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   908,     0,     0,     0,
   -1476,     0,     0, -1476, -1476, -1476,     0,     0,     0,     0,
       0,     0,  1277,     0,     0,     0,  1277,  1277,     0,  1277,
       0,     0,  1920,  1920,  1920,  1920,  2514,     0,     0,  1920,
    1920,  1920,  1920,  1920,  1920,  1920,  1920,  1920,  1920,  1277,
    1277,     0,  1244,     0,     0,  1245,     0,     0,   890,     0,
    1246,  1247,  1248,  1277,     0,     0,  1277,     0,  1277,     0,
       0,     0,  1277,     0,  1264,  1920,  1920,  1249,  1909,  1277,
    1277,     0,     0,     0,     0,  1251,     0,     0,     0,     0,
       0,     0,  1252,     0,     0,     0,  1244,     0,     0,  1245,
     498,     0,     0,     0,  1246,  1247,  1248,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1253,     0,     0,
    1277,  1249,     0,     0,     0,     0,     0,  1277,     0,  1251,
       0,     0,     0,     0,     0,     0,  1252,     0,     0,     0,
    1277,     0,     0,     0,     0,     0,     0,  1910,     0,     0,
       0,     0,     0,   499,  2568,  2569,     0,     0,  2570,     0,
       0,  1253,     0,     0,     0,     0,     0,     0,   500,     0,
       0,     0,     0,  1265,     0,     0,  1266,  1267,  1268,     0,
    1269,  1270,  1271,  1272,  1273,  1274,     0,     0,     0,     0,
       0,     0,     0,     0,  2603,  2604,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2616,     0,
       0,     0,     0,     0,     0,     0,  1254,     0,     0,     0,
       0,     0,   501,     0,     0,     0,     0,     0,     0,     0,
    1255,   502,     0,     0,     0,  1256,     0,     0,     0,     0,
       0,     0,     0,   503,     0,     0,     0,     0,   504,     0,
       0,     0,     0,     0,     0,     0,  1257,  1258,     0,     0,
    1254,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1259,     0,  1277,   505,  1255,     0,  1581,     0,     0,  1256,
       0,     0,  1277,  1277,  1277,     0,     0,  1277,     0,     0,
    1277,  1277,     0,     0,     0,  1277,     0,     0,     0,     0,
    1257,  1258,     0,     0,     0,     0,     0,     0,  1260,     0,
       0,  1261,     0,     0,  1259,     0,   506,     0,     0,  2691,
     507,     0,     0,     0,     0,  1262,     0,     0,  1263,     0,
       0,  1229,     0,     0,     0,     0,     0,     0,     0,  1911,
    1912,  1913,  2710,  1914,  1915,  1916,  1917,  1918,  1919,     0,
       0,     0,  1260,     0,     0,  1261,     0,  2724,     0,     0,
       0,     0,  1581,     0,     0,     0,     0,     0,     0,  1262,
       0,     0,  1263,     0,     0,     0,     0,     0,     0,     0,
    1277,     0,     0,   508,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   509,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1264,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   510,  1920,
    1581,   511,     0,  2603,  1277,  1277,  1277,     0,     0,   512,
       0,     0,   513,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1264,
       0,   514,     0,     0,  2787,     0,     0,     0,     0,  1277,
    1277,     0,     0,   515,     0,     0,     0,     0,     0,     0,
     516,     0,  1277,  2801,  2801,     0,     0,     0,     0,   517,
       0,     0,     0,     0,  1920,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1265,     0,     0,  1266,  1267,  1268,
     518,  1269,  1270,  1271,  1272,  1273,  1274,     0,     0,     0,
    2801,  1603,     0,     0,     0,     0,     0,     0,     0,  1920,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1277,  1265,     0,
       0,  1266,  1267,  1268,     0,  1269,  1270,  1271,  1272,  1273,
    1274,     0,     0,     0,     0,  1946,  1277,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1277,     0,  2801,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   920,   728,   537,   729,   730,   731,   732,
     733,     0,     0,     0,     0,     0,     0,     0,     0,    91,
      92,    93,    94,    95,    96,    97,    98,   921,    99,   100,
     101,     0,     0,     0,     0,   734,     0,     0,   102,   103,
       0,   104,   105,   106,   922,   108,   109,   110,   111,   735,
     923,   736,   737,  1277,   116,   117,   118,   119,   120,   121,
     738,   739,   122,   123,   740,   741,   126,  1277,   127,   128,
     129,   130,   742,     0,   924,     0,   133,   134,   135,   136,
     137,   925,   139,   140,   141,     0,   142,   143,   144,   145,
     146,   147,     0,   926,   149,   150,   151,   744,   745,   746,
     927,   748,   749,   750,   153,   154,   155,   156,   157,   158,
     159,   751,   752,   162,   753,   163,     0,   164,   165,   166,
     167,   168,   169,     0,   170,   171,   172,   173,   174,   928,
       0,   175,   176,   754,   178,   179,     0,   180,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,   189,   755,
     191,   192,   193,   194,   756,   757,   196,     0,   197,   198,
     758,   200,     0,   201,     0,   202,   929,     0,   930,   205,
     206,   207,   931,   209,     0,   210,     0,   211,   212,     0,
     213,   214,   215,   216,   217,   218,   932,   220,   221,   222,
     223,     0,   224,   225,   226,   227,   228,   229,     0,   230,
     933,   232,   233,   234,   235,   236,   759,   760,     0,   761,
       0,   240,   934,   935,   243,   936,   245,   246,   247,   248,
     249,     0,     0,   250,   937,   252,   938,     0,   254,   255,
     256,   762,   763,   257,   258,   259,   260,   261,   939,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   764,   940,   765,
     284,   285,   286,   287,   766,   288,   289,   941,   291,   767,
     768,   293,   769,   295,   296,   297,     0,   298,   299,     0,
       0,   770,   301,   302,     0,     0,   303,   304,   942,   306,
     943,   771,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,     0,   319,   320,   772,   322,   323,   324,   325,
     326,   327,     0,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   773,   338,   339,   340,   341,     0,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
       0,   354,   355,   944,   357,   358,   359,   774,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,     0,
     372,   373,   374,   375,   376,   775,   377,   378,   379,   380,
     381,   945,   383,   384,   776,   386,     0,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   946,   399,
     777,     0,   401,   402,     0,   403,   947,   405,   406,   407,
     408,   409,     0,   778,   779,     0,     0,   412,   413,   780,
     415,   781,   782,   417,   418,   948,   420,   421,   422,   423,
     424,     0,     0,   425,   426,   427,   428,   429,   784,     0,
     430,   431,   432,   433,   434,   435,   785,   949,   437,   950,
     439,   440,   441,   442,     0,     0,   443,     0,     0,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     786,     0,     0,     0,     0,     0,     0,   787,   788,   951,
       0,     0,     0,     0,   790,     0,   791,   952,     0,     0,
       0,   792,     0,   793,   794,    90,   728,   537,   729,   730,
     731,   732,   733,     0,     0,     0,     0,     0,     0,     0,
       0,    91,    92,    93,    94,    95,    96,    97,    98,     0,
      99,   100,   101,     0,     0,     0,     0,   734,     0,     0,
     102,   103,     0,   104,   105,   106,   107,   108,   109,   110,
     111,   735,   113,   736,   737,     0,   116,   117,   118,   119,
     120,   121,   738,   739,   122,   123,   740,   741,   126,     0,
     127,   128,   129,   130,   742,     0,   743,     0,   133,   134,
     135,   136,   137,   138,   139,   140,   141,     0,   142,   143,
     144,   145,   146,   147,     0,   148,   149,   150,   151,   744,
     745,   746,   747,   748,   749,   750,   153,   154,   155,   156,
     157,   158,   159,   751,   752,   162,   753,   163,     0,   164,
     165,   166,   167,   168,   169,     0,   170,   171,   172,   173,
     174,     0,     0,   175,   176,   754,   178,   179,     0,   180,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
     189,   755,   191,   192,   193,   194,   756,   757,   196,     0,
     197,   198,   758,   200,     0,   201,     0,   202,   203,     0,
     204,   205,   206,   207,   208,   209,     0,   210,     0,   211,
     212,     0,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,     0,   224,   225,   226,   227,   228,   229,
       0,   230,   231,   232,   233,   234,   235,   236,   759,   760,
       0,   761,     0,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,     0,   250,   251,   252,   253,     0,
     254,   255,   256,   762,   763,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   764,
     282,   765,   284,   285,   286,   287,   766,   288,   289,   290,
     291,   767,   768,   293,   769,   295,   296,   297,     0,   298,
     299,     0,     0,   770,   301,   302,     0,     0,   303,   304,
     305,   306,   307,   771,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,     0,   319,   320,   772,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   773,   338,   339,   340,   341,     0,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,     0,   354,   355,   356,   357,   358,   359,   774,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,    25,   372,   373,   374,   375,   376,   775,   377,   378,
     379,   380,   381,   382,   383,   384,   776,   386,     0,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   777,     0,   401,   402,    29,   403,   404,   405,
     406,   407,   408,   409,     0,   778,   779,     0,     0,   412,
     413,   780,   415,   781,   782,   417,   418,   783,   420,   421,
     422,   423,   424,     0,     0,   425,   426,   427,   428,   429,
     784,     0,   430,   431,   432,   433,   434,   600,   785,     0,
     437,   438,   439,   440,   441,   442,     0,     0,   443,     0,
      32,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   786,     0,    33,     0,     0,     0,     0,   787,
     788,     0,     0,     0,     0,     0,   790,     0,   791,  2700,
       0,     0,     0,   792,     0,   793,   794,    90,   728,   537,
     729,   730,   731,   732,   733,     0,     0,     0,     0,     0,
       0,     0,     0,    91,    92,    93,    94,    95,    96,    97,
      98,     0,    99,   100,   101,     0,     0,     0,     0,   734,
       0,     0,   102,   103,     0,   104,   105,   106,   107,   108,
     109,   110,   111,   735,   113,   736,   737,     0,   116,   117,
     118,   119,   120,   121,   738,   739,   122,   123,   740,   741,
     126,     0,   127,   128,   129,   130,   742,     0,   743,     0,
     133,   134,   135,   136,   137,   138,   139,   140,   141,     0,
     142,   143,   144,   145,   146,   147,     0,   148,   149,   150,
     151,   744,   745,   746,   747,   748,   749,   750,   153,   154,
     155,   156,   157,   158,   159,   751,   752,   162,   753,   163,
       0,   164,   165,   166,   167,   168,   169,     0,   170,   171,
     172,   173,   174,     0,     0,   175,   176,   754,   178,   179,
       0,   180,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,   189,   755,   191,   192,   193,   194,   756,   757,
     196,     0,   197,   198,   758,   200,     0,   201,     0,   202,
     203,     0,   204,   205,   206,   207,   208,   209,     0,   210,
       0,   211,   212,     0,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,     0,   224,   225,   226,   227,
     228,   229,     0,   230,   231,   232,   233,   234,   235,   236,
     759,   760,     0,   761,     0,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,     0,   250,   251,   252,
     253,     0,   254,   255,   256,   762,   763,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   764,   282,   765,   284,   285,   286,   287,   766,   288,
     289,   290,   291,   767,   768,   293,   769,   295,   296,   297,
       0,   298,   299,     0,     0,   770,   301,   302,     0,     0,
     303,   304,   305,   306,   307,   771,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,     0,   319,   320,   772,
     322,   323,   324,   325,   326,   327,     0,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   773,   338,   339,   340,
     341,     0,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,     0,   354,   355,   356,   357,   358,
     359,   774,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,    25,   372,   373,   374,   375,   376,   775,
     377,   378,   379,   380,   381,   382,   383,   384,   776,   386,
       0,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   777,     0,   401,   402,    29,   403,
     404,   405,   406,   407,   408,   409,     0,   778,   779,     0,
       0,   412,   413,   780,   415,   781,   782,   417,   418,   783,
     420,   421,   422,   423,   424,     0,     0,   425,   426,   427,
     428,   429,   784,     0,   430,   431,   432,   433,   434,   600,
     785,     0,   437,   438,   439,   440,   441,   442,     0,     0,
     443,     0,    32,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   786,     0,    33,     0,     0,     0,
       0,   787,   788,     0,     0,     0,     0,     0,   790,     0,
     791,     0,     0,     0,     0,   792,     0,   793,   794,    90,
     728,   537,   729,   730,   731,   732,   733,     0,     0,     0,
       0,     0,     0,     0,     0,    91,    92,    93,    94,    95,
      96,    97,    98,     0,    99,   100,   101,     0,     0,     0,
       0,   734,     0,     0,   102,   103,     0,   104,   105,   106,
     107,   108,   109,   110,   111,   735,   113,   736,   737,  1594,
     116,   117,   118,   119,   120,   121,   738,   739,   122,   123,
     740,   741,   126,     0,   127,   128,   129,   130,   742,     0,
     743,     0,   133,   134,   135,   136,   137,   138,   139,   140,
     141,     0,   142,   143,   144,   145,   146,   147,     0,   148,
     149,   150,   151,   744,   745,   746,   747,   748,   749,   750,
     153,   154,   155,   156,   157,   158,   159,   751,   752,   162,
     753,   163,     0,   164,   165,   166,   167,   168,   169,     0,
     170,   171,   172,   173,   174,     0,     0,   175,   176,   754,
     178,   179,     0,   180,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,   189,   755,   191,   192,   193,   194,
     756,   757,   196,     0,   197,   198,   758,   200,     0,   201,
       0,   202,   203,  1595,   204,   205,   206,   207,   208,   209,
       0,   210,     0,   211,   212,     0,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,     0,   224,   225,
     226,   227,   228,   229,     0,   230,   231,   232,   233,   234,
     235,   236,   759,   760,     0,   761,     0,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,  1596,   250,
     251,   252,   253,     0,   254,   255,   256,   762,   763,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   764,   282,   765,   284,   285,   286,   287,
     766,   288,   289,   290,   291,   767,   768,   293,   769,   295,
     296,   297,     0,   298,   299,     0,     0,   770,   301,   302,
       0,     0,   303,   304,   305,   306,   307,   771,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,     0,   319,
     320,   772,   322,   323,   324,   325,   326,   327,     0,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   773,   338,
     339,   340,   341,     0,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,     0,   354,   355,   356,
     357,   358,   359,   774,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,     0,   372,   373,   374,   375,
     376,   775,   377,   378,   379,   380,   381,   382,   383,   384,
     776,   386,     0,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   777,     0,   401,   402,
       0,   403,   404,   405,   406,   407,   408,   409,     0,   778,
     779,     0,  1597,   412,   413,   780,   415,   781,   782,   417,
     418,   783,   420,   421,   422,   423,   424,     0,     0,   425,
     426,   427,   428,   429,   784,     0,   430,   431,   432,   433,
     434,   435,   785,     0,   437,   438,   439,   440,   441,   442,
       0,     0,   443,     0,     0,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   786,     0,     0,     0,
       0,     0,     0,   787,   788,     0,     0,     0,     0,     0,
     790,     0,   791,     0,     0,     0,     0,   792,     0,   793,
     794,    90,   728,   537,   729,   730,   731,   732,   733,     0,
       0,     0,     0,     0,     0,     0,     0,    91,    92,    93,
      94,    95,    96,    97,    98,     0,    99,   100,   101,     0,
       0,     0,     0,   734,     0,     0,   102,   103,     0,   104,
     105,   106,   107,   108,   109,   110,   111,   735,   113,   736,
     737,     0,   116,   117,   118,   119,   120,   121,   738,   739,
     122,   123,   740,   741,   126,     0,   127,   128,   129,   130,
     742,     0,   743,     0,   133,   134,   135,   136,   137,   138,
     139,   140,   141,     0,   142,   143,   144,   145,   146,   147,
       0,   148,   149,   150,   151,   744,   745,   746,   747,   748,
     749,   750,   153,   154,   155,   156,   157,   158,   159,   751,
     752,   162,   753,   163,     0,   164,   165,   166,   167,   168,
     169,     0,   170,   171,   172,   173,   174,     0,     0,   175,
     176,   754,   178,   179,     0,   180,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,   189,   755,   191,   192,
     193,   194,   756,   757,   196,     0,   197,   198,   758,   200,
       0,   201,     0,   202,   203,     0,   204,   205,   206,   207,
     208,   209,     0,   210,     0,   211,   212,     0,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,     0,
     224,   225,   226,   227,   228,   229,     0,   230,   231,   232,
     233,   234,   235,   236,   759,   760,     0,   761,     0,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
       0,   250,   251,   252,   253,     0,   254,   255,   256,   762,
     763,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   764,   282,   765,   284,   285,
     286,   287,   766,   288,   289,   290,   291,   767,   768,   293,
     769,   295,   296,   297,     0,   298,   299,     0,     0,   770,
     301,   302,     0,     0,   303,   304,   305,   306,   307,   771,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
       0,   319,   320,   772,   322,   323,   324,   325,   326,   327,
       0,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     773,   338,   339,   340,   341,     0,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,     0,   354,
     355,   356,   357,   358,   359,   774,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,     0,   372,   373,
     374,   375,   376,   775,   377,   378,   379,   380,   381,   382,
     383,   384,   776,   386,     0,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   777,     0,
     401,   402,     0,   403,   404,   405,   406,   407,   408,   409,
       0,   778,   779,     0,     0,   412,   413,   780,   415,   781,
     782,   417,   418,   783,   420,   421,   422,   423,   424,     0,
       0,   425,   426,   427,   428,   429,   784,     0,   430,   431,
     432,   433,   434,   435,   785,     0,   437,   438,   439,   440,
     441,   442,     0,     0,   443,     0,     0,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   786,     0,
       0,     0,     0,     0,     0,   787,   788,   789,     0,     0,
       0,     0,   790,     0,   791,     0,     0,     0,     0,   792,
       0,   793,   794,    90,   728,   537,   729,   730,   731,   732,
     733,     0,     0,     0,     0,     0,     0,     0,     0,    91,
      92,    93,    94,    95,    96,    97,    98,  1335,    99,   100,
     101,     0,     0,     0,     0,   734,     0,     0,   102,   103,
       0,   104,   105,   106,   107,   108,   109,   110,   111,   735,
     113,   736,   737,     0,   116,   117,   118,   119,   120,   121,
     738,   739,   122,   123,   740,   741,   126,     0,   127,   128,
     129,   130,   742,     0,   743,     0,   133,   134,   135,   136,
     137,   138,   139,   140,   141,     0,   142,   143,   144,   145,
     146,   147,     0,   148,   149,   150,   151,   744,   745,   746,
     747,   748,   749,   750,   153,   154,   155,   156,   157,   158,
     159,   751,   752,   162,   753,   163,     0,   164,   165,   166,
     167,   168,   169,     0,   170,   171,   172,   173,   174,     0,
       0,   175,   176,   754,   178,   179,     0,   180,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,   189,   755,
     191,   192,   193,   194,   756,   757,   196,     0,   197,   198,
     758,   200,     0,   201,     0,   202,   203,     0,   204,   205,
     206,   207,   208,   209,     0,   210,     0,   211,   212,     0,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,     0,   224,   225,   226,   227,   228,   229,     0,   230,
     231,   232,   233,   234,   235,   236,   759,   760,     0,   761,
       0,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,     0,   250,   251,   252,   253,     0,   254,   255,
     256,   762,   763,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   764,   282,   765,
     284,   285,   286,   287,   766,   288,   289,   290,   291,   767,
     768,   293,   769,   295,   296,   297,     0,   298,   299,     0,
       0,   770,   301,   302,     0,     0,   303,   304,   305,   306,
     307,   771,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,     0,   319,   320,   772,   322,   323,   324,   325,
     326,   327,     0,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   773,   338,   339,   340,   341,     0,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
       0,   354,   355,   356,   357,   358,   359,   774,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,     0,
     372,   373,   374,   375,   376,   775,   377,   378,   379,   380,
     381,   382,   383,   384,   776,   386,     0,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     777,     0,   401,   402,     0,   403,   404,   405,   406,   407,
     408,   409,     0,   778,   779,     0,     0,   412,   413,   780,
     415,   781,   782,   417,   418,   783,   420,   421,   422,   423,
     424,     0,     0,   425,   426,   427,   428,   429,   784,     0,
     430,   431,   432,   433,   434,   435,   785,     0,   437,   438,
     439,   440,   441,   442,     0,     0,   443,     0,     0,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     786,     0,     0,     0,     0,     0,     0,   787,   788,     0,
       0,     0,     0,     0,   790,     0,   791,     0,     0,     0,
       0,   792,     0,   793,   794,   920,   728,   537,   729,   730,
     731,   732,   733,     0,     0,     0,     0,     0,     0,     0,
       0,    91,    92,    93,    94,    95,    96,    97,    98,     0,
      99,   100,   101,     0,     0,     0,     0,   734,     0,     0,
     102,   103,     0,   104,   105,   106,   922,   108,   109,   110,
     111,   735,   923,   736,   737,     0,   116,   117,   118,   119,
     120,   121,   738,   739,   122,   123,   740,   741,   126,     0,
     127,   128,   129,   130,   742,     0,   924,     0,   133,   134,
     135,   136,   137,   925,   139,   140,   141,     0,   142,   143,
     144,   145,   146,   147,     0,   926,   149,   150,   151,   744,
     745,   746,   927,   748,   749,   750,   153,   154,   155,   156,
     157,   158,   159,   751,   752,   162,   753,   163,     0,   164,
     165,   166,   167,   168,   169,     0,   170,   171,   172,   173,
     174,     0,     0,   175,   176,   754,   178,   179,     0,   180,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
     189,   755,   191,   192,   193,   194,   756,   757,   196,     0,
     197,   198,   758,   200,     0,   201,     0,   202,   929,     0,
     930,   205,   206,   207,   931,   209,     0,   210,     0,   211,
     212,     0,   213,   214,   215,   216,   217,   218,   932,   220,
     221,   222,   223,     0,   224,   225,   226,   227,   228,   229,
       0,   230,   933,   232,   233,   234,   235,   236,   759,   760,
       0,   761,     0,   240,   934,   935,   243,   936,   245,   246,
     247,   248,   249,     0,     0,   250,   937,   252,   938,     0,
     254,   255,   256,   762,   763,   257,   258,   259,   260,   261,
     939,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   764,
     940,   765,   284,   285,   286,   287,   766,   288,   289,   941,
     291,   767,   768,   293,   769,   295,   296,   297,     0,   298,
     299,     0,     0,   770,   301,   302,     0,     0,   303,   304,
     942,   306,   943,   771,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,     0,   319,   320,   772,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   773,   338,   339,   340,   341,     0,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,     0,   354,   355,   944,   357,   358,   359,   774,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,     0,   372,   373,   374,   375,   376,   775,   377,   378,
     379,   380,   381,   945,   383,   384,   776,   386,     0,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     946,   399,   777,     0,   401,   402,     0,   403,   947,   405,
     406,   407,   408,   409,     0,   778,   779,     0,     0,   412,
     413,   780,   415,   781,   782,   417,   418,   948,   420,   421,
     422,   423,   424,     0,     0,   425,   426,   427,   428,   429,
     784,     0,   430,   431,   432,   433,   434,   435,   785,     0,
     437,   950,   439,   440,   441,   442,     0,     0,   443,     0,
       0,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   786,     0,     0,     0,     0,     0,     0,   787,
     788,     0,     0,     0,     0,     0,   790,     0,   791,  1451,
       0,     0,     0,   792,     0,   793,   794,    90,   728,   537,
     729,   730,   731,   732,   733,     0,     0,     0,     0,     0,
       0,     0,     0,    91,    92,    93,    94,    95,    96,    97,
      98,     0,    99,   100,   101,     0,     0,     0,     0,   734,
       0,     0,   102,   103,     0,   104,   105,   106,   107,   108,
     109,   110,   111,   735,   113,   736,   737,     0,   116,   117,
     118,   119,   120,   121,   738,   739,   122,   123,   740,   741,
     126,     0,   127,   128,   129,   130,   742,     0,   743,     0,
     133,   134,   135,   136,   137,   138,   139,   140,   141,     0,
     142,   143,   144,   145,   146,   147,     0,   148,   149,   150,
     151,   744,   745,   746,   747,   748,   749,   750,   153,   154,
     155,   156,   157,   158,   159,   751,   752,   162,   753,   163,
       0,   164,   165,   166,   167,   168,   169,     0,   170,   171,
     172,   173,   174,     0,     0,   175,   176,   754,   178,   179,
       0,   180,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,   189,   755,   191,   192,   193,   194,   756,   757,
     196,     0,   197,   198,   758,   200,     0,   201,     0,   202,
     203,     0,   204,   205,   206,   207,   208,   209,     0,   210,
       0,   211,   212,     0,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,     0,   224,   225,   226,   227,
     228,   229,     0,   230,   231,   232,   233,   234,   235,   236,
     759,   760,     0,   761,     0,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,     0,   250,   251,   252,
     253,     0,   254,   255,   256,   762,   763,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   764,   282,   765,   284,   285,   286,   287,   766,   288,
     289,   290,   291,   767,   768,   293,   769,   295,   296,   297,
       0,   298,   299,     0,     0,   770,   301,   302,     0,     0,
     303,   304,   305,   306,   307,   771,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,     0,   319,   320,   772,
     322,   323,   324,   325,   326,   327,     0,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   773,   338,   339,   340,
     341,     0,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,     0,   354,   355,   356,   357,   358,
     359,   774,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,     0,   372,   373,   374,   375,   376,   775,
     377,   378,   379,   380,   381,   382,   383,   384,   776,   386,
       0,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   777,     0,   401,   402,     0,   403,
     404,   405,   406,   407,   408,   409,     0,   778,   779,     0,
       0,   412,   413,   780,   415,   781,   782,   417,   418,   783,
     420,   421,   422,   423,   424,     0,     0,   425,   426,   427,
     428,   429,   784,     0,   430,   431,   432,   433,   434,   435,
     785,     0,   437,   438,   439,   440,   441,   442,     0,     0,
     443,     0,     0,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   786,     0,     0,     0,     0,     0,
       0,   787,   788,     0,     0,     0,     0,     0,   790,     0,
     791,  1584,     0,     0,     0,   792,     0,   793,   794,   920,
     728,   537,   729,   730,   731,   732,   733,     0,     0,     0,
       0,     0,     0,     0,     0,    91,    92,    93,    94,    95,
      96,    97,    98,     0,    99,   100,   101,     0,     0,     0,
       0,   734,     0,     0,   102,   103,     0,   104,   105,   106,
     922,   108,   109,   110,   111,   735,   923,   736,   737,     0,
     116,   117,   118,   119,   120,   121,   738,   739,   122,   123,
     740,   741,   126,     0,   127,   128,   129,   130,   742,     0,
     924,     0,   133,   134,   135,   136,   137,   925,   139,   140,
     141,     0,   142,   143,   144,   145,   146,   147,     0,   926,
     149,   150,   151,   744,   745,   746,   927,   748,   749,   750,
     153,   154,   155,   156,   157,   158,   159,   751,   752,   162,
     753,   163,     0,   164,   165,   166,   167,   168,   169,     0,
     170,   171,   172,   173,   174,     0,     0,   175,   176,   754,
     178,   179,     0,   180,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,   189,   755,   191,   192,   193,   194,
     756,   757,   196,     0,   197,   198,   758,   200,     0,   201,
       0,   202,   929,     0,   930,   205,   206,   207,   931,   209,
       0,   210,     0,   211,   212,     0,   213,   214,   215,   216,
     217,   218,   932,   220,   221,   222,   223,     0,   224,   225,
     226,   227,   228,   229,     0,   230,   933,   232,   233,   234,
     235,   236,   759,   760,     0,   761,     0,   240,   934,   935,
     243,   936,   245,   246,   247,   248,   249,     0,     0,   250,
     937,   252,   938,     0,   254,   255,   256,   762,   763,   257,
     258,   259,   260,   261,   939,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   764,   940,   765,   284,   285,   286,   287,
     766,   288,   289,   941,   291,   767,   768,   293,   769,   295,
     296,   297,     0,   298,   299,     0,     0,   770,   301,   302,
       0,     0,   303,   304,   942,   306,   943,   771,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,     0,   319,
     320,   772,   322,   323,   324,   325,   326,   327,     0,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   773,   338,
     339,   340,   341,     0,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,     0,   354,   355,   944,
     357,   358,   359,   774,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,     0,   372,   373,   374,   375,
     376,   775,   377,   378,   379,   380,   381,   945,   383,   384,
     776,   386,     0,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   946,   399,   777,     0,   401,   402,
       0,   403,   947,   405,   406,   407,   408,   409,     0,   778,
     779,     0,     0,   412,   413,   780,   415,   781,   782,   417,
     418,   948,   420,   421,   422,   423,   424,     0,     0,   425,
     426,   427,   428,   429,   784,     0,   430,   431,   432,   433,
     434,   435,   785,  1798,   437,   950,   439,   440,   441,   442,
       0,     0,   443,     0,     0,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   786,     0,     0,     0,
       0,     0,     0,   787,   788,     0,     0,     0,     0,     0,
     790,     0,   791,     0,     0,     0,     0,   792,     0,   793,
     794,    90,   728,   537,   729,   730,   731,   732,   733,     0,
       0,     0,     0,     0,     0,     0,     0,    91,    92,    93,
      94,    95,    96,    97,    98,     0,    99,   100,   101,     0,
       0,     0,     0,   734,     0,     0,   102,   103,     0,   104,
     105,   106,   107,   108,   109,   110,   111,   735,   113,   736,
     737,     0,   116,   117,   118,   119,   120,   121,   738,   739,
     122,   123,   740,   741,   126,     0,   127,   128,   129,   130,
     742,     0,   743,     0,   133,   134,   135,   136,   137,   138,
     139,   140,   141,     0,   142,   143,   144,   145,   146,   147,
       0,   148,   149,   150,   151,   744,   745,   746,   747,   748,
     749,   750,   153,   154,   155,   156,   157,   158,   159,   751,
     752,   162,   753,   163,     0,   164,   165,   166,   167,   168,
     169,     0,   170,   171,   172,   173,   174,     0,     0,   175,
     176,   754,   178,   179,     0,   180,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,   189,   755,   191,   192,
     193,   194,   756,   757,   196,     0,   197,   198,   758,   200,
       0,   201,     0,   202,   203,  1595,   204,   205,   206,   207,
     208,   209,     0,   210,     0,   211,   212,     0,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,     0,
     224,   225,   226,   227,   228,   229,     0,   230,   231,   232,
     233,   234,   235,   236,   759,   760,     0,   761,     0,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
       0,   250,   251,   252,   253,     0,   254,   255,   256,   762,
     763,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   764,   282,   765,   284,   285,
     286,   287,   766,   288,   289,   290,   291,   767,   768,   293,
     769,   295,   296,   297,     0,   298,   299,     0,     0,   770,
     301,   302,     0,     0,   303,   304,   305,   306,   307,   771,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
       0,   319,   320,   772,   322,   323,   324,   325,   326,   327,
       0,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     773,   338,   339,   340,   341,     0,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,     0,   354,
     355,   356,   357,   358,   359,   774,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,     0,   372,   373,
     374,   375,   376,   775,   377,   378,   379,   380,   381,   382,
     383,   384,   776,   386,     0,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   777,     0,
     401,   402,     0,   403,   404,   405,   406,   407,   408,   409,
       0,   778,   779,     0,     0,   412,   413,   780,   415,   781,
     782,   417,   418,   783,   420,   421,   422,   423,   424,     0,
       0,   425,   426,   427,   428,   429,   784,     0,   430,   431,
     432,   433,   434,   435,   785,     0,   437,   438,   439,   440,
     441,   442,     0,     0,   443,     0,     0,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   786,     0,
       0,     0,     0,     0,     0,   787,   788,     0,     0,     0,
       0,     0,   790,     0,   791,     0,     0,     0,     0,   792,
       0,   793,   794,    90,   728,   537,   729,   730,   731,   732,
     733,     0,     0,     0,     0,     0,     0,     0,     0,    91,
      92,    93,    94,    95,    96,    97,    98,     0,    99,   100,
     101,     0,     0,     0,     0,   734,     0,     0,   102,   103,
       0,   104,   105,   106,   107,   108,   109,   110,   111,   735,
     113,   736,   737,     0,   116,   117,   118,   119,   120,   121,
     738,   739,   122,   123,   740,   741,   126,     0,   127,   128,
     129,   130,   742,     0,   743,     0,   133,   134,   135,   136,
     137,   138,   139,   140,   141,     0,   142,   143,   144,   145,
     146,   147,     0,   148,   149,   150,   151,   744,   745,   746,
     747,   748,   749,   750,   153,   154,   155,   156,   157,   158,
     159,   751,   752,   162,   753,   163,     0,   164,   165,   166,
     167,   168,   169,     0,   170,   171,   172,   173,   174,     0,
       0,   175,   176,   754,   178,   179,     0,   180,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,   189,   755,
     191,   192,   193,   194,   756,   757,   196,     0,   197,   198,
     758,   200,     0,   201,     0,   202,   203,     0,   204,   205,
     206,   207,   208,   209,     0,   210,     0,   211,   212,     0,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,     0,   224,   225,   226,   227,   228,   229,     0,   230,
     231,   232,   233,   234,   235,   236,   759,   760,     0,   761,
       0,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,     0,   250,   251,   252,   253,     0,   254,   255,
     256,   762,   763,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   764,   282,   765,
     284,   285,   286,   287,   766,   288,   289,   290,   291,   767,
     768,   293,   769,   295,   296,   297,     0,   298,   299,     0,
       0,   770,   301,   302,     0,     0,   303,   304,   305,   306,
     307,   771,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,     0,   319,   320,   772,   322,   323,   324,   325,
     326,   327,     0,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   773,   338,   339,   340,   341,     0,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
       0,   354,   355,   356,   357,   358,   359,   774,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,     0,
     372,   373,   374,   375,   376,   775,   377,   378,   379,   380,
     381,   382,   383,   384,   776,   386,     0,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     777,     0,   401,   402,     0,   403,   404,   405,   406,   407,
     408,   409,     0,   778,   779,     0,     0,   412,   413,   780,
     415,   781,   782,   417,   418,   783,   420,   421,   422,   423,
     424,     0,     0,   425,   426,   427,   428,   429,   784,     0,
     430,   431,   432,   433,   434,   435,   785,     0,   437,   438,
     439,   440,   441,   442,     0,     0,   443,     0,     0,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     786,     0,     0,     0,     0,     0,     0,   787,   788,     0,
       0,     0,     0,     0,   790,     0,   791,     0,     0,     0,
       0,   792,     0,   793,   794,   920,   728,   537,   729,   730,
     731,   732,   733,     0,     0,     0,     0,     0,     0,     0,
       0,    91,    92,    93,    94,    95,    96,    97,    98,     0,
      99,   100,   101,     0,     0,     0,     0,   734,     0,     0,
     102,   103,     0,   104,   105,   106,   922,   108,   109,   110,
     111,   735,   923,   736,   737,     0,   116,   117,   118,   119,
     120,   121,   738,   739,   122,   123,   740,   741,   126,     0,
     127,   128,   129,   130,   742,     0,   924,     0,   133,   134,
     135,   136,   137,   925,   139,   140,   141,     0,   142,   143,
     144,   145,   146,   147,     0,   926,   149,   150,   151,   744,
     745,   746,   927,   748,   749,   750,   153,   154,   155,   156,
     157,   158,   159,   751,   752,   162,   753,   163,     0,   164,
     165,   166,   167,   168,   169,     0,   170,   171,   172,   173,
     174,     0,     0,   175,   176,   754,   178,   179,     0,   180,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
     189,   755,   191,   192,   193,   194,   756,   757,   196,     0,
     197,   198,   758,   200,     0,   201,     0,   202,   929,     0,
     930,   205,   206,   207,   931,   209,     0,   210,     0,   211,
     212,     0,   213,   214,   215,   216,   217,   218,   932,   220,
     221,   222,   223,     0,   224,   225,   226,   227,   228,   229,
       0,   230,   933,   232,   233,   234,   235,   236,   759,   760,
       0,   761,     0,   240,   934,   935,   243,   936,   245,   246,
     247,   248,   249,     0,     0,   250,   937,   252,   938,     0,
     254,   255,   256,   762,   763,   257,   258,   259,   260,   261,
     939,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   764,
     940,   765,   284,   285,   286,   287,   766,   288,   289,   941,
     291,   767,   768,   293,   769,   295,   296,   297,     0,   298,
     299,     0,     0,   770,   301,   302,     0,     0,   303,   304,
     942,   306,   943,   771,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,     0,   319,   320,   772,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   773,   338,   339,   340,   341,     0,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,     0,   354,   355,   944,   357,   358,   359,   774,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,     0,   372,   373,   374,   375,   376,   775,   377,   378,
     379,   380,   381,   945,   383,   384,   776,   386,     0,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     946,   399,   777,     0,   401,   402,     0,   403,   947,   405,
     406,   407,   408,   409,     0,   778,   779,     0,     0,   412,
     413,   780,   415,   781,   782,   417,   418,   948,   420,   421,
     422,   423,   424,     0,     0,   425,   426,   427,   428,   429,
     784,     0,   430,   431,   432,   433,   434,   435,   785,     0,
     437,   950,   439,   440,   441,   442,     0,     0,   443,     0,
       0,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   786,     0,     0,     0,     0,     0,     0,   787,
     788,     0,     0,     0,     0,     0,   790,     0,   791,     0,
       0,     0,     0,   792,     0,   793,   794,    90,   728,   537,
     729,   730,   731,   732,   733,     0,     0,     0,     0,     0,
       0,     0,     0,    91,    92,    93,    94,    95,    96,    97,
      98,     0,    99,   100,   101,     0,     0,     0,     0,   734,
       0,     0,   102,   103,     0,   104,   105,   106,   107,   108,
     109,   110,   111,   735,   113,   736,   737,     0,   116,   117,
     118,   119,   120,   121,   738,   739,   122,   123,   740,   741,
     126,     0,   127,   128,   129,   130,   742,     0,   743,     0,
     133,   134,   135,   136,   137,   138,   139,   140,   141,     0,
     142,   143,   144,   145,   146,   147,     0,   148,   149,   150,
     151,   744,   745,   746,   747,   748,   749,   750,   153,   154,
     155,   156,   157,   158,   159,   751,   752,   162,   753,   163,
       0,   164,   165,   166,   167,   168,   169,     0,   170,   171,
     172,   173,   174,     0,     0,   175,   176,   754,   178,   179,
       0,   180,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,   189,   755,   191,   192,   193,   194,   756,   757,
     196,     0,   197,   198,   758,   200,     0,   201,     0,   202,
     203,     0,   204,   205,   206,   207,   208,   209,     0,   210,
       0,   211,   212,     0,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,     0,   224,   225,   226,   227,
     228,   229,     0,   230,   231,   232,   233,   234,   235,   236,
     759,   760,     0,   761,     0,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,     0,   250,   251,   252,
     253,     0,   254,   255,   256,   762,   763,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   764,   282,   765,   284,   285,   286,   287,   766,   288,
     289,   290,   291,   767,   768,   293,   769,   295,   296,   297,
       0,   298,   299,     0,     0,   770,   301,   302,     0,     0,
     303,   304,   305,   306,   307,   771,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,     0,   319,   320,   772,
     322,   323,   324,   325,   326,   327,     0,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   773,   338,   339,   340,
     341,     0,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,     0,   354,   355,   356,   357,   358,
     359,   774,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,     0,   372,   373,   374,   375,   376,   775,
     377,   378,   379,   380,   381,   382,   383,   384,   776,   386,
       0,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   777,     0,   401,   402,     0,   403,
     404,   405,   406,   407,   408,   409,     0,   778,   779,     0,
       0,   412,   413,   780,   415,   781,   782,   417,   418,   783,
     420,   421,   422,   423,   424,     0,     0,   425,   426,   427,
     428,   429,   784,     0,   430,   431,   432,   433,   434,   435,
     785,     0,   437,   438,   439,   440,   441,   442,     0,     0,
     443,     0,     0,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   786,     0,     0,     0,     0,     0,
       0,  1338,  1339,     0,     0,     0,     0,     0,   790,     0,
     791,     0,     0,     0,     0,   792,     0,   793,   794,    90,
    1723,   537,   729,   730,   731,   732,   733,     0,     0,     0,
       0,     0,     0,     0,     0,    91,    92,    93,    94,    95,
      96,    97,    98,     0,    99,   100,   101,     0,     0,     0,
       0,   734,     0,     0,   102,   103,     0,   104,   105,   106,
     107,   108,   109,   110,   111,   735,   113,   736,   737,     0,
     116,   117,   118,   119,   120,   121,   738,   739,   122,   123,
     740,   741,   126,     0,   127,   128,   129,   130,   742,     0,
     743,     0,   133,   134,   135,   136,   137,   138,   139,   140,
     141,     0,   142,   143,   144,   145,   146,   147,     0,   148,
     149,   150,   151,   744,   745,   746,   747,   748,   749,   750,
     153,   154,   155,   156,   157,   158,   159,   751,   752,   162,
     753,   163,     0,   164,   165,   166,   167,   168,   169,     0,
     170,   171,   172,   173,   174,     0,     0,   175,   176,   754,
     178,   179,     0,   180,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,   189,   755,   191,   192,   193,   194,
     756,   757,   196,     0,   197,   198,   758,   200,     0,   201,
       0,   202,   203,     0,   204,   205,   206,   207,   208,   209,
       0,   210,     0,   211,   212,     0,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,     0,   224,   225,
     226,   227,   228,   229,     0,   230,   231,   232,   233,   234,
     235,   236,   759,   760,     0,   761,     0,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,     0,   250,
     251,   252,   253,     0,   254,   255,   256,   762,   763,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   764,   282,   765,   284,   285,   286,   287,
     766,   288,   289,   290,   291,   767,   768,   293,   769,   295,
     296,   297,     0,   298,   299,     0,     0,   770,   301,   302,
       0,     0,   303,   304,   305,   306,   307,   771,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,     0,   319,
     320,   772,   322,   323,   324,   325,   326,   327,     0,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   773,   338,
     339,   340,   341,     0,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,     0,   354,   355,   356,
     357,   358,   359,   774,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,     0,   372,   373,   374,   375,
     376,   775,   377,   378,   379,   380,   381,   382,   383,   384,
     776,   386,     0,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   777,     0,   401,   402,
       0,   403,   404,   405,   406,   407,   408,   409,     0,   778,
     779,     0,     0,   412,   413,   780,   415,   781,   782,   417,
     418,   783,   420,   421,   422,   423,   424,     0,     0,   425,
     426,   427,   428,   429,   784,     0,   430,   431,   432,   433,
     434,   435,   785,     0,   437,   438,   439,   440,   441,   442,
       0,     0,   443,     0,     0,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   786,     0,     0,     0,
       0,     0,     0,   787,   788,     0,     0,     0,     0,     0,
     790,     0,   791,     0,     0,     0,     0,   792,     0,   793,
     794,    90,   728,   537,   729,   730,   731,   732,   733,     0,
       0,     0,     0,     0,     0,     0,     0,    91,    92,    93,
      94,    95,    96,    97,    98,     0,    99,   100,   101,     0,
       0,     0,     0,   734,     0,     0,   102,   103,     0,   104,
     105,   106,   107,   108,   109,   110,   111,   735,   113,   736,
     737,     0,   116,   117,   118,   119,   120,   121,   738,   739,
     122,   123,   740,   741,   126,     0,   127,   128,   129,   130,
     742,     0,   743,     0,   133,   134,   135,   136,   137,   138,
     139,   140,   141,     0,   142,   143,   144,   145,   146,   147,
       0,   148,   149,   150,   151,   744,   745,   746,   747,   748,
     749,   750,   153,   154,   155,   156,   157,   158,   159,   751,
     752,   162,   753,   163,     0,   164,   165,   166,   167,   168,
     169,     0,   170,   171,   172,   173,   174,     0,     0,   175,
     176,   754,   178,   179,     0,   180,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,   189,   755,   191,   192,
     193,   194,   756,   757,   196,     0,   197,   198,   758,   200,
       0,   201,     0,   202,   203,     0,   204,   205,   206,   207,
     208,   209,     0,   210,     0,   211,   212,     0,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,     0,
     224,   225,   226,   227,   228,   229,     0,   230,   231,   232,
     233,   234,   235,   236,   759,   760,     0,   761,     0,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
       0,   250,   251,   252,   253,     0,   254,   255,   256,   762,
     763,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   764,   282,   765,   284,   285,
     286,   287,   766,   288,   289,   290,   291,   767,   768,   293,
     769,   295,   296,   297,     0,   298,   299,     0,     0,   770,
     301,   302,     0,     0,   303,   304,   305,   306,   307,   771,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
       0,   319,   320,   772,   322,   323,   324,   325,   326,   327,
       0,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     773,   338,   339,   340,   341,     0,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,     0,   354,
     355,   356,   357,   358,   359,   774,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,     0,   372,   373,
     374,   375,   376,   775,   377,   378,   379,   380,   381,   382,
     383,   384,   776,   386,     0,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   777,     0,
     401,   402,     0,   403,   404,   405,   406,   407,   408,   409,
       0,   778,   779,     0,     0,   412,   413,   780,   415,   781,
     782,   417,   418,   783,   420,   421,   422,   423,   424,     0,
       0,   425,   426,   427,   428,   429,   784,     0,   430,   431,
     432,   433,   434,   435,   785,     0,   437,   438,   439,   440,
     441,   442,     0,     0,   443,     0,     0,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   786,     0,
       0,     0,     0,     0,     0,   787,   788,     0,     0,     0,
       0,     0,   790,     0,  2599,     0,     0,     0,     0,   792,
       0,   793,   794,    90,   728,   537,   729,   730,   731,   732,
     733,     0,     0,     0,     0,     0,     0,     0,     0,    91,
      92,    93,    94,    95,    96,    97,    98,     0,    99,   100,
     101,     0,     0,     0,     0,   734,     0,     0,   102,   103,
       0,   104,   105,   106,   107,   108,   109,   110,  2798,   735,
     113,   736,   737,     0,   116,   117,   118,   119,   120,   121,
     738,   739,   122,   123,   740,   741,   126,     0,   127,   128,
     129,   130,   742,     0,   743,     0,   133,   134,   135,   136,
     137,   138,   139,   140,   141,     0,   142,   143,   144,   145,
     146,   147,     0,   148,   149,   150,  2799,   744,   745,   746,
     747,   748,   749,   750,   153,   154,   155,   156,   157,   158,
     159,   751,   752,   162,   753,   163,     0,   164,   165,   166,
     167,   168,   169,     0,   170,   171,   172,   173,   174,     0,
       0,   175,   176,   754,   178,   179,     0,   180,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,   189,   755,
     191,   192,   193,   194,   756,   757,   196,     0,   197,   198,
     758,   200,     0,   201,     0,   202,   203,     0,   204,   205,
     206,   207,   208,   209,     0,   210,     0,   211,   212,     0,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,     0,   224,   225,   226,   227,   228,   229,     0,   230,
     231,   232,   233,   234,   235,   236,   759,   760,     0,   761,
       0,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,     0,   250,   251,   252,   253,     0,   254,   255,
     256,   762,   763,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   764,   282,   765,
     284,   285,   286,   287,   766,   288,   289,   290,   291,   767,
     768,   293,   769,   295,   296,   297,     0,   298,   299,     0,
       0,   770,   301,   302,     0,     0,   303,   304,   305,   306,
     307,   771,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,     0,   319,   320,   772,   322,   323,   324,   325,
     326,   327,     0,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   773,   338,   339,   340,   341,     0,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
       0,   354,   355,   356,   357,   358,   359,   774,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,     0,
     372,   373,   374,   375,   376,   775,   377,   378,   379,   380,
     381,   382,   383,   384,   776,   386,     0,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     777,     0,   401,   402,     0,   403,   404,   405,   406,   407,
     408,   409,     0,   778,   779,     0,     0,   412,   413,   780,
     415,   781,   782,   417,   418,   783,   420,   421,  2800,   423,
     424,     0,     0,   425,   426,   427,   428,   429,   784,     0,
     430,   431,   432,   433,   434,   435,   785,     0,   437,   438,
     439,   440,   441,   442,     0,     0,   443,     0,     0,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     786,     0,     0,     0,     0,     0,     0,   787,   788,     0,
       0,     0,     0,     0,   790,     0,   791,     0,     0,     0,
       0,   792,     0,   793,   794,    90,   728,   537,   729,   730,
     731,   732,   733,     0,     0,     0,     0,     0,     0,     0,
       0,    91,    92,    93,    94,    95,    96,    97,    98,     0,
      99,   100,   101,     0,     0,     0,     0,   734,     0,     0,
     102,   103,     0,   104,   105,   106,   107,   108,   109,   110,
     111,   735,   113,   736,   737,     0,   116,   117,   118,   119,
     120,   121,   738,   739,   122,   123,   740,   741,   126,     0,
     127,   128,   129,   130,   742,     0,   743,     0,   133,   134,
     135,   136,   137,   138,   139,   140,   141,     0,   142,   143,
     144,   145,   146,   147,     0,   148,   149,   150,  2799,   744,
     745,   746,   747,   748,   749,   750,   153,   154,   155,   156,
     157,   158,   159,   751,   752,   162,   753,   163,     0,   164,
     165,   166,   167,   168,   169,     0,   170,   171,   172,   173,
     174,     0,     0,   175,   176,   754,   178,   179,     0,   180,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
     189,   755,   191,   192,   193,   194,   756,   757,   196,     0,
     197,   198,   758,   200,     0,   201,     0,   202,   203,     0,
     204,   205,   206,   207,   208,   209,     0,   210,     0,   211,
     212,     0,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,     0,   224,   225,   226,   227,   228,   229,
       0,   230,   231,   232,   233,   234,   235,   236,   759,   760,
       0,   761,     0,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,     0,   250,   251,   252,   253,     0,
     254,   255,   256,   762,   763,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   764,
     282,   765,   284,   285,   286,   287,   766,   288,   289,   290,
     291,   767,   768,   293,   769,   295,   296,   297,     0,   298,
     299,     0,     0,   770,   301,   302,     0,     0,   303,   304,
     305,   306,   307,   771,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,     0,   319,   320,   772,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   773,   338,   339,   340,   341,     0,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,     0,   354,   355,   356,   357,   358,   359,   774,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,     0,   372,   373,   374,   375,   376,   775,   377,   378,
     379,   380,   381,   382,   383,   384,   776,   386,     0,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   777,     0,   401,   402,     0,   403,   404,   405,
     406,   407,   408,   409,     0,   778,   779,     0,     0,   412,
     413,   780,   415,   781,   782,   417,   418,   783,   420,   421,
    2800,   423,   424,     0,     0,   425,   426,   427,   428,   429,
     784,     0,   430,   431,   432,   433,   434,   435,   785,     0,
     437,   438,   439,   440,   441,   442,     0,     0,   443,     0,
       0,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   786,     0,     0,     0,     0,     0,     0,   787,
     788,     0,     0,     0,     0,     0,   790,     0,   791,     0,
       0,     0,     0,   792,     0,   793,   794,    90,   728,   537,
     729,   730,   731,   732,   733,     0,     0,     0,     0,     0,
       0,     0,     0,    91,    92,    93,    94,    95,    96,    97,
      98,     0,    99,   100,   101,     0,     0,     0,     0,   734,
       0,     0,   102,   103,     0,   104,   105,   106,   107,   108,
     109,   110, -1680,   735,   113,   736,   737,     0,   116,   117,
     118,   119,   120,   121,   738,   739,   122,   123,   740,   741,
     126,     0,   127,   128,   129,   130,   742,     0,   743,     0,
     133,   134,   135,   136,   137,   138,   139,   140,   141,     0,
     142,   143,   144,   145,   146,   147,     0,   148,   149,   150,
    2799,   744,   745,   746,   747,   748,   749,   750,   153,   154,
     155,   156,   157,   158,   159,   751,   752,   162,   753,   163,
       0,   164,   165,   166,   167,   168,   169,     0,   170,   171,
     172,   173,   174,     0,     0,   175,   176,   754,   178,   179,
       0,   180,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,   189,   755,   191,   192,   193,   194,   756,   757,
     196,     0,   197,   198,   758,   200,     0,   201,     0,   202,
     203,     0,   204,   205,   206,   207, -1680,   209,     0,   210,
       0,   211,   212,     0,   213,   214,   215,   216,   217,   218,
   -1680,   220,   221,   222,   223,     0,   224,   225,   226,   227,
     228,   229,     0,   230,   231,   232,   233,   234,   235,   236,
     759,   760,     0,   761,     0,   240,     0,     0,   243,   244,
     245,   246,   247,   248,   249,     0,     0,   250,   251,   252,
   -1680,     0,   254,   255,   256,   762,   763,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   764,   282,   765,   284,   285,   286,   287,     0,   288,
     289,     0,   291,   767,   768,   293,   769,   295,   296,   297,
       0,   298,   299,     0,     0,   770,   301,   302,     0,     0,
     303,   304,   305,   306,   307,   771,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,     0,   319,   320,   772,
     322,   323,   324,   325,   326,   327,     0,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   773,   338,   339,   340,
     341,     0,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,     0,   354,   355,   356,   357,   358,
     359,   774,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,     0,   372,   373,   374,   375,   376,   775,
     377,   378,   379,   380,   381, -1680,   383,   384,   776,   386,
       0,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   777,     0,   401,   402,     0,   403,
     404,   405,   406,   407,   408,   409,     0,   778,   779,     0,
       0,   412,   413,   780,   415,   781,   782,   417,   418,   783,
     420,   421,  2800,   423,   424,     0,     0,   425,   426,   427,
     428,   429,   784,     0,   430,   431,   432,   433,   434,   435,
     785,     0,   437,   438,   439,   440,   441,   442,     0,     0,
     443,     0,     0,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464, -1680,     0,     0,     0,     0,     0,
       0,   787,   788,     0,     0,     0,     0,     0,   790,     0,
     791,     0,     0,     0,     0,   792,     0,   793,   794,    90,
     728,   537,   729,   730,   731,   732,   733,     0,     0,     0,
       0,     0,     0,     0,     0,    91,    92,    93,    94,    95,
      96,    97,    98,     0,    99,   100,   101,     0,     0,     0,
       0,     0,     0,     0,   102,   103,     0,   104,   105,   106,
     107,   108,   109,   110,   111,   735,   113,   736,   737,     0,
     116,   117,   118,   119,   120,   121,   738,   739,   122,   123,
     740,   741,   126,     0,   127,   128,   129,   130,   742,     0,
     743,     0,   133,   134,   135,   136,   137,   138,   139,   140,
     141,     0,   142,   143,   144,   145,   146,   147,     0,   148,
     149,   150,   151,   744,   745,   746,   747,   748,   749,   750,
     153,   154,   155,   156,   157,   158,   159,   751,   752,   162,
       0,   163,     0,   164,   165,   166,   167,   168,   169,     0,
     170,   171,   172,   173,   174,     0,     0,   175,   176,   754,
     178,   179,     0,   180,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,   189,   755,   191,   192,   193,   194,
     756,   757,   196,     0,   197,   198,   758,   200,     0,   201,
       0,   202,   203,     0,   204,   205,   206,   207,   208,   209,
       0,   210,     0,   211,   212,     0,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,     0,   224,   225,
     226,   227,   228,   229,     0,   230,   231,   232,   233,   234,
     235,   236,   759,   760,     0,   761,     0,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,     0,   250,
     251,   252,   253,     0,   254,   255,   256,   762,   763,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   764,   282,   765,   284,   285,   286,   287,
       0,   288,   289,   290,   291,   767,   768,   293,   769,   295,
     296,   297,     0,   298,   299,     0,     0,   770,   301,   302,
       0,     0,   303,   304,   305,   306,   307,   771,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,     0,   319,
     320,   772,   322,   323,   324,   325,   326,   327,     0,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   773,   338,
     339,   340,   341,     0,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,     0,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,     0,   372,   373,   374,   375,
     376,   775,   377,   378,   379,   380,   381,   382,   383,   384,
     776,   386,     0,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   777,     0,   401,   402,
       0,   403,   404,   405,   406,   407,   408,   409,     0,   778,
     779,     0,     0,   412,   413,   780,   415,   781,   782,   417,
     418,   783,   420,   421,   422,   423,   424,     0,     0,   425,
     426,   427,   428,   429,   784,     0,   430,   431,   432,   433,
     434,   435,   785,     0,   437,   438,   439,   440,   441,   442,
       0,     0,   443,     0,     0,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,     0,     0,     0,     0,
       0,     0,     0,  1576,  1577,     0,     0,    90,   728,   537,
     729,   730,  1578,   732,   733,     0,     0,     0,     0,   793,
     794,     0,     0,    91,    92,    93,    94,    95,    96,    97,
      98,     0,    99,   100,   101,     0,     0,     0,     0,     0,
       0,     0,   102,   103,     0,   104,   105,   106,   107,   108,
     109,   110,   111,   735,   113,   736,   737,     0,   116,   117,
     118,   119,   120,   121,   738,   739,   122,   123,   740,   741,
     126,     0,   127,   128,   129,   130,   742,     0,   743,     0,
     133,   134,   135,   136,   137,   138,   139,   140,   141,     0,
     142,   143,   144,   145,   146,   147,     0,   148,   149,   150,
     151,   744,   745,   746,   747,   748,   749,   750,   153,   154,
     155,   156,   157,   158,   159,   751,   752,   162,     0,   163,
       0,   164,   165,   166,   167,   168,   169,     0,   170,   171,
     172,   173,   174,     0,     0,   175,   176,   754,   178,   179,
       0,   180,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,   189,   755,   191,   192,   193,   194,   756,   757,
     196,     0,   197,   198,   758,   200,     0,   201,     0,   202,
     203,     0,   204,   205,   206,   207,   208,   209,     0,   210,
       0,   211,   212,     0,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,     0,   224,   225,   226,   227,
     228,   229,     0,   230,   231,   232,   233,   234,   235,   236,
     759,   760,     0,   761,     0,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,     0,   250,   251,   252,
     253,     0,   254,   255,   256,   762,   763,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   764,   282,   765,   284,   285,   286,   287,     0,   288,
     289,   290,   291,   767,   768,   293,   769,   295,   296,   297,
       0,   298,   299,     0,     0,   300,   301,   302,     0,     0,
     303,   304,   305,   306,   307,   771,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,     0,   319,   320,   772,
     322,   323,   324,   325,   326,   327,     0,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   773,   338,   339,   340,
     341,     0,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,     0,   354,   355,   356,   357,   358,
     359,  1712,  1713,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,     0,   372,   373,   374,   375,   376,   775,
     377,   378,   379,   380,   381,   382,   383,   384,   776,   386,
       0,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   777,     0,   401,   402,     0,   403,
     404,   405,   406,   407,   408,   409,     0,   778,   779,     0,
       0,   412,   413,   780,   415,   781,   782,   417,   418,   783,
     420,   421,   422,   423,   424,     0,     0,   425,   426,   427,
     428,   429,   784,     0,   430,   431,   432,   433,   434,   435,
     785,     0,   437,   438,   439,   440,   441,   442,     0,     0,
     443,     0,     0,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,     0,     0,     0,     0,     0,     0,
       0,  1714,  1715,     0,     0,     0,     0,     0,     0,     0,
    1578,     0,     0,     0,     0,     0,     0,   793,   794,    90,
     728,   537,   729,   730,   731,   732,   733,     0,     0,     0,
       0,     0,     0,     0,     0,    91,    92,    93,    94,    95,
      96,    97,    98,     0,    99,   100,   101,     0,     0,     0,
       0,     0,     0,     0,   102,   103,     0,   104,   105,   106,
     107,   108,   109,   110,   111,   735,   113,   736,   737,     0,
     116,   117,   118,   119,   120,   121,   738,   739,   122,   123,
     740,   741,   126,     0,   127,   128,   129,   130,   742,     0,
     743,     0,   133,   134,   135,   136,   137,   138,   139,   140,
     141,     0,   142,   143,   144,   145,   146,   147,     0,   148,
     149,   150,   151,   744,   745,   746,   747,   748,   749,   750,
     153,   154,   155,   156,   157,   158,   159,   751,   752,   162,
       0,   163,     0,   164,   165,   166,   167,   168,   169,     0,
     170,   171,   172,   173,   174,     0,     0,   175,   176,   754,
     178,   179,     0,   180,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,   189,   755,   191,   192,   193,   194,
     756,   757,   196,     0,   197,   198,   758,   200,     0,   201,
       0,   202,   203,     0,   204,   205,   206,   207,   208,   209,
       0,   210,     0,   211,   212,     0,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,     0,   224,   225,
     226,   227,   228,   229,     0,   230,   231,   232,   233,   234,
     235,   236,   759,   760,     0,   761,     0,   240,     0,   242,
     243,   244,   245,   246,   247,   248,   249,     0,     0,   250,
     251,   252,   253,     0,   254,   255,   256,   762,   763,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   764,   282,   765,   284,   285,   286,   287,
       0,   288,   289,   290,   291,   767,   768,   293,   769,   295,
     296,   297,     0,   298,   299,     0,     0,   770,   301,   302,
       0,     0,   303,   304,   305,   306,   307,   771,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,     0,   319,
     320,   772,   322,   323,   324,   325,   326,   327,     0,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   773,   338,
     339,   340,   341,     0,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,     0,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,     0,   372,   373,   374,   375,
     376,   775,   377,   378,   379,   380,   381,   382,   383,   384,
     776,   386,     0,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   777,     0,   401,   402,
       0,   403,   404,   405,   406,   407,   408,   409,     0,   778,
     779,     0,     0,   412,   413,   780,   415,   781,   782,   417,
     418,   783,   420,   421,   422,   423,   424,     0,     0,   425,
     426,   427,   428,   429,   784,     0,   430,   431,   432,   433,
     434,   435,   785,     0,   437,   438,   439,   440,   441,   442,
       0,     0,   443,     0,     0,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,     0,     0,     0,     0,
       0,     0,     0,  1576,  1577,     0,     0,     0,     0,     0,
       0,     0,  1578,     0,     0,     0,     0,     0,     0,   793,
     794,    90,   728,   537,   729,   730,   731,   732,   733,     0,
       0,     0,     0,     0,     0,     0,     0,    91,    92,    93,
      94,    95,    96,    97,    98,     0,    99,   100,   101,     0,
       0,     0,     0,   734,     0,     0,   102,   103,     0,   104,
     105,   106,   107,   108,   109,   110,     0,   735,   113,   736,
     737,     0,   116,   117,   118,   119,   120,   121,   738,   739,
     122,   123,   740,   741,   126,     0,   127,   128,   129,   130,
     742,     0,   743,     0,   133,   134,   135,   136,   137,   138,
     139,   140,   141,     0,   142,   143,   144,   145,   146,   147,
       0,   148,   149,   150,   151,   744,   745,   746,   747,   748,
     749,   750,   153,   154,   155,   156,   157,   158,   159,   751,
     752,   162,   753,   163,     0,   164,   165,   166,   167,   168,
     169,     0,   170,   171,   172,   173,   174,     0,     0,   175,
     176,   754,   178,   179,     0,   180,   181,   182,     0,   183,
       0,   185,     0,   186,   187,   188,   189,   755,   191,   192,
     193,   194,   756,   757,   196,     0,   197,   198,   758,   200,
       0,   201,     0,   202,   203,     0,   204,   205,   206,   207,
       0,   209,     0,   210,     0,   211,   212,     0,   213,   214,
     215,   216,   217,   218,     0,   220,   221,   222,   223,     0,
     224,   225,   226,   227,   228,   229,     0,   230,   231,   232,
     233,   234,   235,   236,   759,   760,     0,   761,     0,   240,
       0,     0,   243,   244,   245,   246,   247,   248,   249,     0,
       0,   250,   251,   252,     0,     0,   254,   255,   256,   762,
     763,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   764,   282,   765,   284,   285,
     286,   287,     0,   288,   289,     0,   291,   767,   768,   293,
     769,   295,   296,   297,     0,   298,   299,     0,     0,   770,
     301,   302,     0,     0,   303,   304,   305,   306,   307,   771,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
       0,   319,   320,   772,   322,   323,   324,   325,   326,   327,
       0,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     773,   338,   339,   340,   341,     0,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,     0,   354,
     355,   356,   357,   358,   359,   774,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,     0,   372,   373,
     374,   375,   376,   775,   377,   378,   379,   380,   381,     0,
     383,   384,   776,   386,     0,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   777,     0,
     401,   402,     0,   403,   404,   405,   406,   407,   408,   409,
       0,   778,   779,     0,     0,   412,   413,   780,   415,   781,
     782,   417,   418,   783,   420,   421,   422,   423,   424,     0,
       0,   425,   426,   427,   428,   429,   784,     0,   430,   431,
     432,   433,   434,   435,   785,     0,   437,   438,   439,   440,
     441,   442,     0,     0,   443,     0,     0,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,     0,     0,
       0,     0,     0,     0,     0,   787,   788,   490,     0,     0,
       0,     0,   790,     0,   791,     0,     0,     0,     0,   792,
       0,   793,   794,    91,    92,    93,    94,    95,    96,    97,
      98,     0,    99,   100,   101,     0,     0,     0,     0,     0,
    2233,     0,   102,   103,     0,   104,   105,   106,     0,   108,
     109,   110,   111,   112,     0,   114,   115,     0,   116,   117,
     118,   119,   120,   121,     0,     0,   122,   123,   124,   125,
     126,     0,   127,   128,   129,   130,   131,     0,     0,     0,
     133,   134,   135,   136,   137,     0,   139,   140,   141,     0,
     142,   143,   144,   145,   146,   147,     0,  -585,   149,   150,
     151,     0,     0,     0,     0,     0,     0,     0,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,     0,   163,
       0,   164,   165,   166,   167,   168,   169,     0,   170,   171,
     172,   173,   174,     0,     0,   175,   176,   177,   178,   179,
       0,   180,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,     0,
     196,     0,   197,   198,   199,   200,     0,   201,     0,   202,
       0,     0,  -585,   205,   206,   207,     0,   209,     0,   210,
       0,   211,   212,     0,   213,   214,   215,   216,   217,   218,
       0,   220,   221,   222,   223,     0,   224,   225,   226,   227,
     228,   229,     0,   230,  -585,   232,   233,   234,   235,   236,
     237,   238,     0,   239,     0,   240,     0,     0,   243,  -585,
     245,   246,   247,   248,   249,     0,     0,   250,  -585,   252,
       0,     0,   254,   255,   256,     0,     0,   257,   258,   259,
     260,   261,   492,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,  -585,   283,   284,   285,   286,   287,     0,   288,
     289,     0,   291,     0,   292,   293,   294,   295,   296,   297,
       0,   298,   299,     0,     0,   300,   301,   302,     0,     0,
     303,   304,     0,   306,     0,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,     0,   319,   320,   321,
     322,   323,   324,   325,   326,   327,     0,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,     0,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,     0,   354,   355,  -585,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,     0,   372,   373,   374,   375,   376,     0,
     377,   378,   379,   380,   381,     0,   383,   384,   385,   386,
       0,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   494,   399,   400,     0,   401,   402,     0,   403,
    -585,   405,   406,   407,   408,   409,     0,   410,   411,     0,
       0,   412,   413,   414,   415,   416,     0,   417,   418,   419,
     420,   421,   422,   423,   424,     0,     0,   425,   426,   427,
     428,   429,     0,     0,   430,   431,   432,   433,   434,   435,
     436,     0,   437,     0,   439,   440,   441,   442,     0,     0,
     443,     0,     0,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,     0,     0,    90,     0,   562,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   852,    91,    92,    93,    94,    95,    96,    97,    98,
       0,    99,   100,   101,     0,     0,     0,     0,     0,     0,
       0,   102,   103,     0,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,     0,   116,   117,   118,
     119,   120,   121,     0,   739,   122,   123,   124,   125,   126,
       0,   127,   128,   129,   130,   742,     0,   743,     0,   133,
     134,   135,   136,   137,   138,   139,   140,   141,     0,   142,
     143,   144,   145,   146,   147,     0,   148,   149,   150,   151,
     744,   745,   746,   747,   748,   749,   750,   153,   154,   155,
     156,   157,   158,   159,   160,   161,   162,     0,   163,     0,
     164,   165,   166,   167,   168,   169,     0,   170,   171,   172,
     173,   174,     0,     0,   175,   176,   177,   178,   179,     0,
     180,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   756,     0,   196,
       0,   197,   198,   199,   200,     0,   201,     0,   202,   203,
       0,   204,   205,   206,   207,   208,   209,     0,   210,     0,
     211,   212,     0,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,     0,   224,   225,   226,   227,   228,
     229,     0,   230,   231,   232,   233,   234,   235,   236,   237,
     238,     0,   239,     0,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,  1984,     0,   250,   251,   252,   253,
       0,   254,   255,   256,   762,   763,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,     0,   288,   289,
     290,   291,     0,   768,   293,   294,   295,   296,   297,     0,
     298,   299,     0,   563,   300,   301,   302,     0,     0,   303,
     304,   305,   306,   307,   771,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,     0,   319,   320,   772,   322,
     323,   324,   325,   326,   327,     0,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
       0,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,     0,   354,   355,   356,   357,   358,   359,
     360,  1985,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,    25,   372,   373,   374,   375,   376,   775,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,     0,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   777,     0,   401,   402,    29,   403,   404,
     405,   406,   407,   408,   409,     0,   410,   411,     0,     0,
     412,   413,   780,   415,   781,     0,   417,   418,   783,   420,
     421,   422,   423,   424,     0,     0,   425,   426,   427,   428,
     429,   784,     0,   430,   431,   432,   433,   434,   600,   436,
       0,   437,   438,   439,   440,   441,   442,     0,     0,   443,
       0,    32,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,     0,    90,    33,   562,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1986,
      91,    92,    93,    94,    95,    96,    97,    98,     0,    99,
     100,   101,     0,     0,     0,     0,     0,     0,     0,   102,
     103,     0,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,     0,   116,   117,   118,   119,   120,
     121,     0,   739,   122,   123,   124,   125,   126,     0,   127,
     128,   129,   130,   742,     0,   743,     0,   133,   134,   135,
     136,   137,   138,   139,   140,   141,     0,   142,   143,   144,
     145,   146,   147,     0,   148,   149,   150,   151,   744,   745,
     746,   747,   748,   749,   750,   153,   154,   155,   156,   157,
     158,   159,   160,   161,   162,     0,   163,     0,   164,   165,
     166,   167,   168,   169,     0,   170,   171,   172,   173,   174,
       0,     0,   175,   176,   177,   178,   179,     0,   180,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   756,     0,   196,     0,   197,
     198,   199,   200,     0,   201,     0,   202,   203,     0,   204,
     205,   206,   207,   208,   209,     0,   210,     0,   211,   212,
       0,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,     0,   224,   225,   226,   227,   228,   229,     0,
     230,   231,   232,   233,   234,   235,   236,   237,   238,     0,
     239,     0,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,  1984,     0,   250,   251,   252,   253,     0,   254,
     255,   256,   762,   763,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,     0,   288,   289,   290,   291,
       0,   768,   293,   294,   295,   296,   297,     0,   298,   299,
       0,   563,   300,   301,   302,     0,     0,   303,   304,   305,
     306,   307,   771,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,     0,   319,   320,   772,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,     0,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,     0,   354,   355,   356,   357,   358,   359,   360,  1985,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
       0,   372,   373,   374,   375,   376,   775,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   777,     0,   401,   402,     0,   403,   404,   405,   406,
     407,   408,   409,     0,   410,   411,     0,     0,   412,   413,
     780,   415,   781,     0,   417,   418,   783,   420,   421,   422,
     423,   424,     0,     0,   425,   426,   427,   428,   429,   784,
       0,   430,   431,   432,   433,   434,   435,   436,     0,   437,
     438,   439,   440,   441,   442,     0,     0,   443,     0,     0,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,     0,    90,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1986,    91,    92,
      93,    94,    95,    96,    97,    98,     0,    99,   100,   101,
       0,     0,     0,     0,     0,     0,     0,   102,   103,     0,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,     0,   116,   117,   118,   119,   120,   121,     0,
     739,   122,   123,   124,   125,   126,     0,   127,   128,   129,
     130,   742,     0,   743,     0,   133,   134,   135,   136,   137,
     138,   139,   140,   141,     0,   142,   143,   144,   145,   146,
     147,     0,   148,   149,   150,   151,   744,   745,   746,   747,
     748,   749,   750,   153,   154,   155,   156,   157,   158,   159,
     160,   161,   162,     0,   163,     0,   164,   165,   166,   167,
     168,   169,     0,   170,   171,   172,   173,   174,     0,     0,
     175,   176,   177,   178,   179,     0,   180,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   756,     0,   196,     0,   197,   198,   199,
     200,     0,   201,     0,   202,   203,     0,   204,   205,   206,
     207,   208,   209,     0,   210,     0,   211,   212,     0,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
       0,   224,   225,   226,   227,   228,   229,     0,   230,   231,
     232,   233,   234,   235,   236,   237,   238,     0,   239,     0,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
       0,     0,   250,   251,   252,   253,     0,   254,   255,   256,
     762,   763,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,     0,   288,   289,   290,   291,     0,   768,
     293,   294,   295,   296,   297,     0,   298,   299,     0,     0,
     300,   301,   302,     0,     0,   303,   304,   305,   306,   307,
     771,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,     0,   319,   320,   772,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,     0,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,     0,
     354,   355,   356,   357,   358,   359,   360,  1985,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,     0,   372,
     373,   374,   375,   376,   775,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   777,
       0,   401,   402,     0,   403,   404,   405,   406,   407,   408,
     409,     0,   410,   411,     0,     0,   412,   413,   780,   415,
     781,     0,   417,   418,   783,   420,   421,   422,   423,   424,
       0,     0,   425,   426,   427,   428,   429,   784,     0,   430,
     431,   432,   433,   434,   435,   436,     0,   437,   438,   439,
     440,   441,   442,     0,     0,   443,     0,     0,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,     0,
      90,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    34,    91,    92,    93,    94,
      95,    96,    97,    98,     0,    99,   100,   101,     0,     0,
       0,     0,     0,     0,     0,   102,   103,     0,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
       0,   116,   117,   118,   119,   120,   121,     0,   739,   122,
     123,   124,   125,   126,     0,   127,   128,   129,   130,   742,
       0,   743,     0,   133,   134,   135,   136,   137,   138,   139,
     140,   141,     0,   142,   143,   144,   145,   146,   147,     0,
     148,   149,   150,   151,   744,   745,   746,   747,   748,   749,
     750,   153,   154,   155,   156,   157,   158,   159,   160,   161,
     162,     0,   163,     0,   164,   165,   166,   167,   168,   169,
       0,   170,   171,   172,   173,   174,     0,     0,   175,   176,
     177,   178,   179,     0,   180,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   756,     0,   196,     0,   197,   198,   199,   200,     0,
     201,     0,   202,   203,     0,   204,   205,   206,   207,   208,
     209,     0,   210,     0,   211,   212,     0,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,     0,   224,
     225,   226,   227,   228,   229,     0,   230,   231,   232,   233,
     234,   235,   236,   237,   238,     0,   239,     0,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,     0,     0,
     250,   251,   252,   253,     0,   254,   255,   256,   762,   763,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,     0,   288,   289,   290,   291,     0,   768,   293,   294,
     295,   296,   297,     0,   298,   299,     0,     0,   300,   301,
     302,     0,     0,   303,   304,   305,   306,   307,   771,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,     0,
     319,   320,   772,   322,   323,   324,   325,   326,   327,     0,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,     0,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,     0,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,     0,   372,   373,   374,
     375,   376,   775,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,     0,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   777,     0,   401,
     402,     0,   403,   404,   405,   406,   407,   408,   409,     0,
     410,   411,     0,     0,   412,   413,   780,   415,   781,     0,
     417,   418,   783,   420,   421,   422,   423,   424,     0,     0,
     425,   426,   427,   428,   429,   784,     0,   430,   431,   432,
     433,   434,   435,   436,     0,   437,   438,   439,   440,   441,
     442,     0,     0,   443,     0,     0,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,     0,   658,  1087,
     537,     0,     0,     0,   732,     0,     0,     0,     0,     0,
       0,     0,     0,  2610,    91,    92,    93,    94,    95,    96,
      97,    98,     0,    99,   100,   101,     0,     0,     0,     0,
       0,     0,     0,   102,   103,     0,   104,   105,   106,     0,
     108,   109,   110,   659,   660,     0,   661,   662,     0,   116,
     117,   118,   119,   120,   121,     0,     0,   122,   123,   663,
     664,   126,     0,   127,   128,   129,   130,   665,     0,     0,
       0,   133,   134,   135,   136,   137,     0,   139,   140,   141,
       0,   142,   143,   144,   145,   146,   147,     0,     0,   149,
     150,   151,     0,     0,     0,     0,     0,     0,     0,   153,
     154,   155,   156,   157,   158,   159,   666,   667,   162,     0,
     163,     0,   164,   165,   166,   167,   168,   169,     0,   170,
     171,   172,   173,   174,     0,     0,   175,   176,   177,   178,
     179,     0,   180,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,   189,   668,   191,   192,   193,   194,   669,
    1088,   196,     0,   197,   198,   670,   200,     0,   201,     0,
     202,     0,     0,     0,   205,   206,   207,     0,   209,     0,
     210,     0,   671,   212,     0,   213,   214,   215,   216,   217,
     218,     0,   220,   221,   222,   223,     0,   224,   225,   226,
     227,   228,   229,     0,   230,     0,   672,   233,   234,   235,
     236,   673,   674,     0,   675,     0,   240,     0,     0,   243,
       0,   245,   246,   247,   248,   249,     0,     0,   250,     0,
     252,     0,     0,   254,   255,   256,     0,     0,   257,   258,
     259,   260,   261,   676,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   677,     0,   678,   284,   285,   286,   679,     0,
     288,   289,     0,   291,     0,   680,   293,   681,   295,   296,
     297,     0,   298,   299,  1089,     0,   300,   301,   302,     0,
       0,   303,   682,     0,   306,     0,   683,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,     0,   319,   320,
     684,   322,   323,   685,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   686,   338,   339,
     340,   341,     0,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,     0,   354,   355,     0,   357,
     358,   359,   687,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,     0,   372,   373,   374,   375,   376,
       0,   377,   688,   379,   380,   381,     0,   383,   384,   689,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   690,   399,   691,     0,   401,   402,     0,
     403,     0,   405,   406,   407,   408,   409,     0,   692,   693,
       0,     0,   412,   413,   694,   415,   695,  1090,   417,   418,
     696,   420,   421,   422,   423,   424,     0,     0,   425,   426,
     427,   428,   429,     0,     0,   430,   431,   432,   433,   434,
    1035,   698,     0,   437,     0,   439,   440,   441,   442,     0,
       0,   443,     0,     0,   444,   445,   446,   447,   448,   449,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   461,   462,   463,   464,     0,   658,     0,     0,     0,
       0,     0,  1091,  1092,  1849,     0,     0,     0,     0,     0,
       0,  1850,    91,    92,    93,    94,    95,    96,    97,    98,
       0,    99,   100,   101,     3,     4,     0,     0,     0,     0,
       0,   102,   103,     0,   104,   105,   106,     0,   108,   109,
     110,   659,   660,     0,   661,   662,     0,   116,   117,   118,
     119,   120,   121,     0,     0,   122,   123,   663,   664,   126,
       0,   127,   128,   129,   130,   665,     0,     0,     0,   133,
     134,   135,   136,   137,     0,   139,   140,   141,     0,   142,
     143,   144,   145,   146,   147,     0,     0,   149,   150,   151,
       0,     0,     0,     0,     0,     0,     0,   153,   154,   155,
     156,   157,   158,   159,   666,   667,   162,     0,   163,     0,
     164,   165,   166,   167,   168,   169,     0,   170,   171,   172,
     173,   174,     0,     0,   175,   176,   177,   178,   179,     0,
     180,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,   189,   668,   191,   192,   193,   194,   669,     0,   196,
       0,   197,   198,   670,   200,     0,   201,     0,   202,     0,
       0,     0,   205,   206,   207,     0,   209,     0,   210,     0,
     671,   212,     0,   213,   214,   215,   216,   217,   218,     0,
     220,   221,   222,   223,     0,   224,   225,   226,   227,   228,
     229,     0,   230,     0,   672,   233,   234,   235,   236,   673,
     674,     0,   675,     0,   240,     0,     0,   243,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,   252,     0,
       0,   254,   255,   256,     0,     0,   257,   258,   259,   260,
     261,   676,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     677,     0,   678,   284,   285,   286,   679,     0,   288,   289,
       0,   291,     0,   680,   293,   681,   295,   296,   297,     0,
     298,   299,     0,     0,   300,   301,   302,     0,     0,   303,
     682,     0,   306,     0,   683,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,     0,   319,   320,   684,   322,
     323,   685,   325,   326,   327,     0,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   686,   338,   339,   340,   341,
       0,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,     0,   354,   355,     0,   357,   358,   359,
     687,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,    25,   372,   373,   374,   375,   376,     0,   377,
     688,   379,   380,   381,     0,   383,   384,   689,   386,     0,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   690,   399,   691,     0,   401,   402,    29,   403,     0,
     405,   406,   407,   408,   409,     0,   692,   693,     0,     0,
     412,   413,   694,   415,   695,     0,   417,   418,   696,   420,
     421,   422,   423,   424,     0,     0,   425,   426,   427,   428,
     429,     0,     0,   430,   431,   432,   433,   434,   697,   698,
       0,   437,     0,   439,   440,   441,   442,     0,     0,   443,
       0,    32,   444,   445,   446,   447,   448,   449,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   461,
     462,   463,   464,     0,   490,    33,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    34,
      91,    92,    93,    94,    95,    96,    97,    98,   597,    99,
     100,   101,     0,     0,     0,     0,     0,     0,     0,   102,
     103,     0,   104,   105,   106,     0,   108,   109,   110,   111,
     112,     0,   114,   115,     0,   116,   117,   118,   119,   120,
     121,     0,     0,   122,   123,   124,   125,   126,     0,   127,
     128,   129,   130,   131,     0,     0,     0,   133,   134,   135,
     136,   137,     0,   139,   140,   141,     0,   142,   143,   144,
     145,   146,   147,     0,     0,   149,   150,   151,     0,     0,
       0,     0,     0,     0,     0,   153,   154,   155,   156,   157,
     158,   159,   160,   161,   162,     0,   163,     0,   164,   165,
     166,   167,   168,   169,     0,   170,   171,   172,   173,   174,
       0,     0,   175,   176,   177,   178,   179,     0,   180,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,     0,   196,     0,   197,
     198,   199,   200,     0,   201,     0,   202,     0,     0,     0,
     205,   206,   207,     0,   209,     0,   210,     0,   211,   212,
       0,   213,   214,   215,   216,   217,   218,     0,   220,   221,
     222,   223,     0,   224,   225,   226,   227,   228,   229,     0,
     230,     0,   232,   233,   234,   235,   236,   237,   238,     0,
     239,     0,   240,     0,     0,   243,     0,   245,   246,   247,
     248,   249,     0,     0,   250,     0,   252,     0,     0,   254,
     255,   256,     0,     0,   257,   258,   259,   260,   261,   492,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,     0,
     283,   284,   285,   286,   287,     0,   288,   289,     0,   291,
       0,   292,   293,   294,   295,   296,   297,     0,   298,   299,
       0,     0,   300,   301,   302,     0,     0,   303,   304,     0,
     306,     0,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,     0,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,     0,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,     0,   354,   355,     0,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
      25,   372,   373,   374,   375,   376,     0,   377,   378,   379,
     380,   381,     0,   383,   384,   385,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   494,
     399,   400,     0,   401,   402,    29,   403,     0,   405,   406,
     407,   408,   409,     0,   598,   411,     0,     0,   599,   413,
     414,   415,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,     0,     0,   425,   426,   427,   428,   429,     0,
       0,   430,   431,   432,   433,   434,   600,   436,     0,   437,
       0,   439,   440,   441,   442,     0,     0,   443,     0,    32,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,     0,   490,    33,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    34,    91,    92,
      93,    94,    95,    96,    97,    98,     0,    99,   100,   101,
       0,     0,     0,     0,     0,     0,     0,   102,   103,     0,
     104,   105,   106,     0,   108,   109,   110,   111,   112,     0,
     114,   115,     0,   116,   117,   118,   119,   120,   121,     0,
       0,   122,   123,   124,   125,   126,     0,   127,   128,   129,
     130,   131,     0,     0,     0,   133,   134,   135,   136,   137,
       0,   139,   140,   141,     0,   142,   143,   144,   145,   146,
     147,     0,     0,   149,   150,   151,     0,     0,     0,     0,
       0,     0,     0,   153,   154,   155,   156,   157,   158,   159,
     160,   161,   162,     0,   163,     0,   164,   165,   166,   167,
     168,   169,     0,   170,   171,   172,   173,   174,     0,     0,
     175,   176,   177,   178,   179,     0,   180,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,     0,   196,     0,   197,   198,   199,
     200,     0,   201,     0,   202,     0,     0,     0,   205,   206,
     207,     0,   209,     0,   210,     0,   211,   212,     0,   213,
     214,   215,   216,   217,   218,     0,   220,   221,   222,   223,
       0,   224,   225,   226,   227,   228,   229,     0,   230,     0,
     232,   233,   234,   235,   236,   237,   238,     0,   239,     0,
     240,     0,     0,   243,     0,   245,   246,   247,   248,   249,
       0,     0,   250,     0,   252,     0,     0,   254,   255,   256,
       0,     0,   257,   258,   259,   260,   261,   492,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,     0,   283,   284,
     285,   286,   287,     0,   288,   289,     0,   291,     0,   292,
     293,   294,   295,   296,   297,     0,   298,   299,     0,     0,
     300,   301,   302,     0,     0,   303,   304,     0,   306,     0,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,     0,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,     0,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,     0,
     354,   355,     0,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,    25,   372,
     373,   374,   375,   376,     0,   377,   378,   379,   380,   381,
       0,   383,   384,   385,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   494,   399,   400,
       0,   401,   402,    29,   403,     0,   405,   406,   407,   408,
     409,     0,   410,   411,     0,     0,   412,   413,   414,   415,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   424,
       0,     0,   425,   426,   427,   428,   429,     0,     0,   430,
     431,   432,   433,   434,   600,   436,     0,   437,     0,   439,
     440,   441,   442,     0,     0,   443,     0,    32,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,     0,
     490,    33,   562,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    34,    91,    92,    93,    94,
      95,    96,    97,    98,     0,    99,   100,   101,     0,     0,
       0,     0,     0,     0,     0,   102,   103,     0,   104,   105,
     106,     0,   108,   109,   110,   111,   112,     0,   114,   115,
       0,   116,   117,   118,   119,   120,   121,     0,     0,   122,
     123,   124,   125,   126,     0,   127,   128,   129,   130,   131,
       0,     0,     0,   133,   134,   135,   136,   137,     0,   139,
     140,   141,     0,   142,   143,   144,   145,   146,   147,     0,
       0,   149,   150,   151,     0,     0,     0,     0,     0,     0,
       0,   153,   154,   155,   156,   157,   158,   159,   160,   161,
     162,     0,   163,     0,   164,   165,   166,   167,   168,   169,
       0,   170,   171,   172,   173,   174,     0,     0,   175,   176,
     177,   178,   179,     0,   180,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,     0,   196,     0,   197,   198,   199,   200,     0,
     201,     0,   202,     0,     0,     0,   205,   206,   207,     0,
     209,     0,   210,     0,   211,   212,     0,   213,   214,   215,
     216,   217,   218,     0,   220,   221,   222,   223,     0,   224,
     225,   226,   227,   228,   229,     0,   230,     0,   232,   233,
     234,   235,   236,   237,   238,     0,   239,     0,   240,     0,
       0,   243,     0,   245,   246,   247,   248,   249,     0,     0,
     250,     0,   252,     0,     0,   254,   255,   256,     0,     0,
     257,   258,   259,   260,   261,   492,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,     0,   283,   284,   285,   286,
     287,     0,   288,   289,     0,   291,     0,   292,   293,   294,
     295,   296,   297,     0,   298,   299,     0,     0,   300,   301,
     302,     0,     0,   303,   304,     0,   306,     0,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,     0,
     319,   320,   321,   322,   323,   324,   325,   326,   327,     0,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,     0,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,     0,   354,   355,
       0,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,     0,   372,   373,   374,
     375,   376,     0,   377,   378,   379,   380,   381,     0,   383,
     384,   385,   386,     0,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   494,   399,   400,     0,   401,
     402,     0,   403,     0,   405,   406,   407,   408,   409,     0,
     410,   411,     0,     0,   412,   413,   414,   415,   416,     0,
     417,   418,   419,   420,   421,   422,   423,   424,     0,     0,
     425,   426,   427,   428,   429,     0,     0,   430,   431,   432,
     433,   434,   435,   436,     0,   437,     0,   439,   440,   441,
     442,     0,     0,   443,     0,     0,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,     0,   490,     0,
     562,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   833,    91,    92,    93,    94,    95,    96,
      97,    98,     0,    99,   100,   101,     0,     0,     0,     0,
       0,     0,     0,   102,   103,     0,   104,   105,   106,     0,
     108,   109,   110,   111,   112,     0,   114,   115,     0,   116,
     117,   118,   119,   120,   121,     0,     0,   122,   123,   124,
     125,   126,     0,   127,   128,   129,   130,   131,     0,     0,
       0,   133,   134,   135,   136,   137,     0,   139,   140,   141,
       0,   142,   143,   144,   145,   146,   147,     0,     0,   149,
     150,   151,     0,     0,     0,     0,     0,     0,     0,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,     0,
     163,     0,   164,   165,   166,   167,   168,   169,     0,   170,
     171,   172,   173,   174,     0,     0,   175,   176,   177,   178,
     179,     0,   180,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
       0,   196,     0,   197,   198,   199,   200,     0,   201,     0,
     202,     0,     0,     0,   205,   206,   207,     0,   209,     0,
     210,     0,   211,   212,     0,   213,   214,   215,   216,   217,
     218,     0,   220,   221,   222,   223,     0,   224,   225,   226,
     227,   228,   229,     0,   230,     0,   232,   233,   234,   235,
     236,   237,   238,     0,   239,     0,   240,     0,     0,   243,
       0,   245,   246,   247,   248,   249,     0,     0,   250,     0,
     252,     0,     0,   254,   255,   256,     0,     0,   257,   258,
     259,   260,   261,   492,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,     0,   283,   284,   285,   286,   287,     0,
     288,   289,     0,   291,     0,   292,   293,   294,   295,   296,
     297,     0,   298,   299,     0,     0,   300,   301,   302,     0,
       0,   303,   304,     0,   306,     0,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,     0,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,     0,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,     0,   354,   355,     0,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,     0,   372,   373,   374,   375,   376,
       0,   377,   378,   379,   380,   381,     0,   383,   384,   385,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   494,   399,   400,     0,   401,   402,     0,
     403,     0,   405,   406,   407,   408,   409,     0,   410,   411,
       0,     0,   412,   413,   414,   415,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,     0,     0,   425,   426,
     427,   428,   429,     0,     0,   430,   431,   432,   433,   434,
     435,   436,     0,   437,     0,   439,   440,   441,   442,     0,
       0,   443,     0,     0,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,     0,   490,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2457,    91,    92,    93,    94,    95,    96,    97,    98,
       0,    99,   100,   101,     0,     0,     0,     0,     0,     0,
       0,   102,   103,     0,   104,   105,   106,     0,   108,   109,
     110,   111,   112,     0,   114,   115,     0,   116,   117,   118,
     119,   120,   121,     0,     0,   122,   123,   124,   125,   126,
       0,   127,   128,   129,   130,   131,     0,     0,     0,   133,
     134,   135,   136,   137,     0,   139,   140,   141,     0,   142,
     143,   144,   145,   146,   147,     0,     0,   149,   150,   151,
       0,     0,     0,     0,     0,     0,     0,   153,   154,   155,
     156,   157,   158,   159,   160,   161,   162,     0,   163,     0,
     164,   165,   166,   167,   168,   169,     0,   170,   171,   172,
     173,   174,     0,     0,   175,   176,   177,   178,   179,     0,
     180,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,     0,   196,
       0,   197,   198,   199,   200,     0,   201,     0,   202,     0,
       0,     0,   205,   206,   207,     0,   209,     0,   210,     0,
     211,   212,     0,   213,   214,   215,   216,   217,   218,     0,
     220,   221,   222,   223,     0,   224,   225,   226,   227,   228,
     229,     0,   230,     0,   232,   233,   234,   235,   236,   237,
     238,     0,   239,     0,   240,     0,     0,   243,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,   252,     0,
       0,   254,   255,   256,     0,     0,   257,   258,   259,   260,
     261,   492,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,     0,   283,   284,   285,   286,   287,     0,   288,   289,
       0,   291,     0,   292,   293,   294,   295,   296,   297,     0,
     298,   299,     0,     0,   300,   301,   302,     0,     0,   303,
     304,     0,   306,     0,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,     0,   319,   320,   321,   322,
     323,   324,   325,   326,   327,     0,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
       0,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,     0,   354,   355,     0,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,     0,   372,   373,   374,   375,   376,     0,   377,
     378,   379,   380,   381,     0,   383,   384,   385,   386,     0,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   494,   399,   400,     0,   401,   402,     0,   403,     0,
     405,   406,   407,   408,   409,     0,   410,   411,     0,     0,
     412,   413,   414,   415,   416,     0,   417,   418,   419,   420,
     421,   422,   423,   424,     0,     0,   425,   426,   427,   428,
     429,     0,     0,   430,   431,   432,   433,   434,   435,   436,
       0,   437,     0,   439,   440,   441,   442,     0,     0,   443,
       0,     0,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,     0,   490,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1702,
      91,    92,    93,    94,    95,    96,    97,    98,     0,    99,
     100,   101,     0,     0,     0,     0,     0,     0,     0,   102,
     103,     0,   104,   105,   106,     0,   108,   109,   110,   111,
     112,     0,   114,   115,     0,   116,   117,   118,   119,   120,
     121,     0,     0,   122,   123,   124,   125,   126,     0,   127,
     128,   129,   130,   131,     0,     0,     0,   133,   134,   135,
     136,   137,     0,   139,   140,   141,     0,   142,   143,   144,
     145,   146,   147,     0,     0,   149,   150,   151,     0,     0,
       0,     0,     0,     0,     0,   153,   154,   155,   156,   157,
     158,   159,   160,   161,   162,     0,   163,     0,   164,   165,
     166,   167,   168,   169,     0,   170,   171,   172,   173,   174,
       0,     0,   175,   176,   177,   178,   179,     0,   180,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,     0,   196,     0,   197,
     198,   199,   200,     0,   201,     0,   202,     0,     0,     0,
     205,   206,   207,     0,   209,     0,   210,     0,   211,   212,
       0,   213,   214,   215,   216,   217,   218,     0,   220,   221,
     222,   223,     0,   224,   225,   226,   227,   228,   229,     0,
     230,     0,   232,   233,   234,   235,   236,   237,   238,     0,
     239,     0,   240,     0,     0,   243,     0,   245,   246,   247,
     248,   249,     0,     0,   250,     0,   252,     0,     0,   254,
     255,   256,     0,     0,   257,   258,   259,   260,   261,   492,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,     0,
     283,   284,   285,   286,   287,     0,   288,   289,     0,   291,
       0,   292,   293,   294,   295,   296,   297,     0,   298,   299,
       0,     0,   300,   301,   302,     0,     0,   303,   304,     0,
     306,     0,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,     0,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,     0,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,     0,   354,   355,     0,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
       0,   372,   373,   374,   375,   376,     0,   377,   378,   379,
     380,   381,     0,   383,   384,   385,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   494,
     399,   400,     0,   401,   402,     0,   403,     0,   405,   406,
     407,   408,   409,     0,   410,   411,     0,     0,   412,   413,
     414,   415,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,     0,     0,   425,   426,   427,   428,   429,     0,
       0,   430,   431,   432,   433,   434,   435,   436,     0,   437,
       0,   439,   440,   441,   442,     0,     0,   443,     0,     0,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,     0,     0,     0,     0,  2318,  1087,   537,     0,     0,
    1558,   732,     0,     0,     0,     0,     0,  2217,  1559,  1560,
    1561,    91,    92,    93,    94,    95,    96,    97,    98,   963,
      99,   100,   101,   964,   965,   966,   967,   968,   969,   970,
     102,   103,   971,   104,   105,   106,  2319,   108,   109,   110,
       0,  1112,  2320,  1114,  1115,   972,   116,   117,   118,   119,
     120,   121,   973,   974,   122,   123,  1116,  1117,   126,   975,
     127,   128,   129,   130,     0,   976,  2321,   977,   133,   134,
     135,   136,   137,  2322,   139,   140,   141,   978,   142,   143,
     144,   145,   146,   147,   979,  2323,   149,   150,   151,   980,
     981,   982,  2324,   983,   984,   985,   153,   154,   155,   156,
     157,   158,   159,  1122,  1123,   162,   986,   163,   987,   164,
     165,   166,   167,   168,   169,   988,   170,   171,   172,   173,
     174,   989,   990,   175,   176,   754,   178,   179,   991,   180,
     181,   182,   992,   183,   184,   185,   993,   186,   187,   188,
     189,     0,   191,   192,   193,   194,     0,   994,   196,   995,
     197,   198,  1124,   200,   996,   201,   997,   202,  2325,   998,
    2326,   205,   206,   207,  2327,   209,   999,   210,  1000,     0,
     212,  1001,   213,   214,   215,   216,   217,   218,  2328,   220,
     221,   222,   223,  1002,   224,   225,   226,   227,   228,   229,
    1003,   230,  2329,     0,   233,   234,   235,   236,  1130,  1131,
    1004,  1132,  1005,   240,  2330,  2331,   243,  2332,   245,   246,
     247,   248,   249,  1006,  1007,   250,  2333,   252,  2334,  1008,
     254,   255,   256,  1009,  1010,   257,   258,   259,   260,   261,
    2335,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,  1139,
    2336,  1141,   284,   285,   286,  2337,  1011,   288,   289,  2338,
     291,  1012,     0,   293,  1143,   295,   296,   297,  1013,   298,
     299,  1014,  1015,  2339,   301,   302,  1016,  1017,   303,     0,
    2340,   306,  2341,     0,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,  1018,   319,   320,     0,   322,   323,
       0,   325,   326,   327,  1019,   328,   329,   330,   331,   332,
     333,   334,   335,   336,  1146,   338,   339,   340,   341,  1020,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,  1021,   354,   355,  2342,   357,   358,   359,  1148,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,  1022,   372,   373,   374,   375,   376,  1023,   377,  2343,
     379,   380,   381,  2344,   383,   384,  1151,   386,  1024,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
    2345,   399,     0,  1025,   401,   402,  1026,   403,  2346,   405,
     406,   407,   408,   409,  1027,  1154,  1155,  1028,  1029,   412,
     413,     0,   415,     0,  1030,   417,   418,  2347,   420,   421,
     422,   423,   424,  1031,  1032,   425,   426,   427,   428,   429,
    1033,  1034,   430,   431,   432,   433,   434,     0,  1157,  1036,
     437,  2348,   439,   440,   441,   442,  1037,  1038,   443,  1039,
    1040,   444,   445,   446,   447,   448,   449,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   461,   462,
     463,   464,     0,   490,     0,  1562,  1563,  1564,  1558,  2349,
    2350,  1567,  1568,  1569,  1570,     0,  1559,  1560,  1561,    91,
      92,    93,    94,    95,    96,    97,    98,     0,    99,   100,
     101,     0,     0,     0,     0,     0,     0,     0,   102,   103,
       0,   104,   105,   106,     0,   108,   109,   110,   111,   112,
       0,   114,   115,     0,   116,   117,   118,   119,   120,   121,
       0,     0,   122,   123,   124,   125,   126,     0,   127,   128,
     129,   130,   131,     0,     0,     0,   133,   134,   135,   136,
     137,     0,   139,   140,   141,     0,   142,   143,   144,   145,
     146,   147,     0,     0,   149,   150,   151,     0,     0,     0,
       0,     0,     0,     0,   153,   154,   155,   156,   157,   158,
     159,   160,   161,   162,     0,   163,     0,   164,   165,   166,
     167,   168,   169,     0,   170,   171,   172,   173,   174,     0,
       0,   175,   176,   177,   178,   179,     0,   180,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,     0,   196,     0,   197,   198,
     199,   200,     0,   201,     0,   202,     0,     0,     0,   205,
     206,   207,     0,   209,     0,   210,     0,   211,   212,     0,
     213,   214,   215,   216,   217,   218,     0,   220,   221,   222,
     223,     0,   224,   225,   226,   227,   228,   229,     0,   230,
       0,   232,   233,   234,   235,   236,   237,   238,     0,   239,
       0,   240,     0,     0,   243,     0,   245,   246,   247,   248,
     249,     0,     0,   250,     0,   252,     0,     0,   254,   255,
     256,     0,     0,   257,   258,   259,   260,   261,   492,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,     0,   283,
     284,   285,   286,   287,     0,   288,   289,     0,   291,     0,
     292,   293,   294,   295,   296,   297,     0,   298,   299,     0,
       0,   300,   301,   302,     0,     0,   303,   304,     0,   306,
       0,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,     0,   319,   320,   321,   322,   323,   324,   325,
     326,   327,     0,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,     0,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
       0,   354,   355,     0,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,     0,
     372,   373,   374,   375,   376,     0,   377,   378,   379,   380,
     381,     0,   383,   384,   385,   386,     0,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   494,   399,
     400,     0,   401,   402,     0,   403,     0,   405,   406,   407,
     408,   409,     0,   410,   411,     0,     0,   412,   413,   414,
     415,   416,     0,   417,   418,   419,   420,   421,   422,   423,
     424,     0,     0,   425,   426,   427,   428,   429,     0,     0,
     430,   431,   432,   433,   434,   435,   436,     0,   437,     0,
     439,   440,   441,   442,     0,     0,   443,     0,     0,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
       0,     0,     0,  1562,  1563,  1564,     0,  1565,  1566,  1567,
    1568,  1569,  1570,  1244,     0,     0,  1245,     0,     0,     0,
       0,  1246,  1247,  1248,     0,     0,     0,     0,     0,     0,
       0,  1244,     0,     0,  1245,     0,     0,     0,  1249,  1246,
    1247,  1248,     0,     0,     0,     0,  1251,     0,     0,  1244,
       0,     0,  1245,  1252,     0,     0,  1249,  1246,  1247,  1248,
       0,     0,     0,     0,  1251,     0,     0,     0,     0,     0,
       0,  1252,     0,     0,  1249,     0,     0,  1244,  1253,     0,
    1245,     0,  1251,     0,     0,  1246,  1247,  1248,     0,  1252,
       0,     0,     0,     0,     0,  1244,  1253,     0,  1245,     0,
       0,     0,  1249,  1246,  1247,  1248,     0,     0,     0,     0,
    1251,     0,     0,  1244,  1253,     0,  1245,  1252,     0,     0,
    1249,  1246,  1247,  1248,     0,     0,     0,     0,  1251,     0,
       0,     0,     0,     0,     0,  1252,     0,     0,  1249,     0,
       0,     0,  1253,     0,     0,     0,  1251,     0,     0,     0,
       0,     0,     0,  1252,     0,     0,     0,     0,     0,     0,
    1253,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1254,  1253,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1255,     0,     0,     0,  1254,  1256,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1255,
       0,     0,     0,  1254,  1256,     0,     0,  1257,  1258,     0,
       0,     0,     0,     0,     0,     0,     0,  1255,     0,     0,
       0,  1259,  1256,     0,     0,  1257,  1258,     0,     0,     0,
       0,  1254,     0,     0,     0,     0,     0,     0,     0,  1259,
       0,     0,     0,  1257,  1258,  1255,     0,     0,     0,  1254,
    1256,     0,     0,     0,     0,     0,     0,  1259,     0,  1260,
       0,     0,  1261,  1255,     0,     0,     0,  1254,  1256,     0,
       0,  1257,  1258,     0,     0,     0,  1262,  1260,     0,  1263,
    1261,  1255,     0,     0,     0,  1259,  1256,     0,     0,  1257,
    1258,     0,     0,     0,  1262,  1260,     0,  1263,  1261,     0,
       0,     0,     0,  1259,     0,     0,     0,  1257,  1258,     0,
       0,     0,  1262,     0,     0,  1263,     0,     0,     0,     0,
       0,  1259,     0,  1260,     0,     0,  1261,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1262,  1260,     0,  1263,  1261,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1262,  1260,
       0,  1263,  1261,     0,     0,     0,  1264,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1262,     0,     0,  1263,
       0,     0,     0,     0,  1264,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1264,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1244,     0,     0,  1245,     0,     0,
       0,     0,  1246,  1247,  1248,     0,     0,     0,     0,     0,
    1264,     0,     0,     0,     0,     0,     0,     0,     0,  1249,
       0,     0,     0,     0,     0,     0,     0,  1251,  1264,     0,
       0,     0,     0,     0,  1252,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1265,  1264,     0,  1266,  1267,
    1268,     0,  1269,  1270,  1271,  1272,  1273,  1274,     0,  1253,
       0,     0,  2159,  1265,     0,     0,  1266,  1267,  1268,     0,
    1269,  1270,  1271,  1272,  1273,  1274,     0,     0,     0,     0,
    2195,  1265,     0,     0,  1266,  1267,  1268,     0,  1269,  1270,
    1271,  1272,  1273,  1274,     0,     0,     0,     0,  2282,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1265,
       0,     0,  1266,  1267,  1268,     0,  1269,  1270,  1271,  1272,
    1273,  1274,     0,     0,     0,     0,  2408,  1265,     0,     0,
    1266,  1267,  1268,     0,  1269,  1270,  1271,  1272,  1273,  1274,
       0,     0,     0,     0,  2427,  1265,     0,     0,  1266,  1267,
    1268,     0,  1269,  1270,  1271,  1272,  1273,  1274,  1254,     0,
    1244,     0,  2571,  1245,     0,     0,     0,     0,  1246,  1247,
    1248,     0,  1255,     0,     0,     0,     0,  1256,  1244,     0,
       0,  1245,     0,     0,     0,  1249,  1246,  1247,  1248,     0,
       0,     0,     0,  1251,     0,     0,     0,     0,  1257,  1258,
    1252,     0,     0,  1249,     0,     0,     0,     0,     0,     0,
       0,  1251,  1259,     0,     0,     0,     0,     0,  1252,     0,
       0,     0,     0,     0,     0,  1253,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1253,     0,     0,     0,     0,     0,     0,
    1260,     0,     0,  1261,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1262,     0,     0,
    1263,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1254,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1255,     0,
       0,     0,  1254,  1256,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1255,  1264,     0,     0,
       0,  1256,     0,     0,  1257,  1258,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1259,     0,
       0,     0,  1257,  1258,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1259,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1260,     0,     0,  1261,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1262,  1260,     0,  1263,  1261,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1262,     0,     0,  1263,     0,  1265,     0,     0,  1266,
    1267,  1268,     0,  1269,  1270,  1271,  1272,  1273,  1274,     0,
       0,     0,     0,  2769,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1264,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1264,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1265,     0,     0,  1266,  1267,  1268,     0,  1269,
    1270,  1271,  1272,  1273,  1274,     0,     0,     0,     0,  2781,
    1265,   962,     0,  1266,  1267,  1268,     0,  1269,  1270,  1271,
    1272,  1273,  1274,     0,     0,  1422,     0,    91,    92,    93,
      94,    95,    96,    97,    98,   963,    99,   100,   101,   964,
     965,   966,   967,   968,   969,   970,   102,   103,   971,   104,
     105,   106,     0,   108,   109,   110,   659,   660,     0,   661,
     662,   972,   116,   117,   118,   119,   120,   121,   973,   974,
     122,   123,   663,   664,   126,   975,   127,   128,   129,   130,
     665,   976,     0,   977,   133,   134,   135,   136,   137,     0,
     139,   140,   141,   978,   142,   143,   144,   145,   146,   147,
     979,     0,   149,   150,   151,   980,   981,   982,     0,   983,
     984,   985,   153,   154,   155,   156,   157,   158,   159,   666,
     667,   162,   986,   163,   987,   164,   165,   166,   167,   168,
     169,   988,   170,   171,   172,   173,   174,   989,   990,   175,
     176,   177,   178,   179,   991,   180,   181,   182,   992,   183,
     184,   185,   993,   186,   187,   188,   189,   668,   191,   192,
     193,   194,   669,   994,   196,   995,   197,   198,   670,   200,
     996,   201,   997,   202,     0,   998,     0,   205,   206,   207,
       0,   209,   999,   210,  1000,   671,   212,  1001,   213,   214,
     215,   216,   217,   218,     0,   220,   221,   222,   223,  1002,
     224,   225,   226,   227,   228,   229,  1003,   230,     0,   672,
     233,   234,   235,   236,   673,   674,  1004,   675,  1005,   240,
       0,     0,   243,     0,   245,   246,   247,   248,   249,  1006,
    1007,   250,     0,   252,     0,  1008,   254,   255,   256,  1009,
    1010,   257,   258,   259,   260,   261,   676,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   677,     0,   678,   284,   285,
     286,   679,  1011,   288,   289,     0,   291,  1012,   680,   293,
     681,   295,   296,   297,  1013,   298,   299,  1014,  1015,   300,
     301,   302,  1016,  1017,   303,   682,     0,   306,     0,   683,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
    1018,   319,   320,   684,   322,   323,   685,   325,   326,   327,
    1019,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     686,   338,   339,   340,   341,  1020,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,  1021,   354,
     355,     0,   357,   358,   359,   687,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,  1022,   372,   373,
     374,   375,   376,  1023,   377,   688,   379,   380,   381,     0,
     383,   384,   689,   386,  1024,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   690,   399,   691,  1025,
     401,   402,  1026,   403,     0,   405,   406,   407,   408,   409,
    1027,   692,   693,  1028,  1029,   412,   413,   694,   415,   695,
    1030,   417,   418,   696,   420,   421,   422,   423,   424,  1031,
    1032,   425,   426,   427,   428,   429,  1033,  1034,   430,   431,
     432,   433,   434,  1035,   698,  1036,   437,     0,   439,   440,
     441,   442,  1037,  1038,   443,  1039,  1040,   444,   445,   446,
     447,   448,   449,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   461,   462,   463,   464,   490,     0,
       0,     0,     0,     0,     0,     0,     0,  1041,     0,     0,
       0,     0,     0,     0,    91,    92,    93,    94,    95,    96,
      97,    98,     0,    99,   100,   101,     0,     0,     0,     0,
       0,     0,     0,   102,   103,     0,   104,   105,   106,     0,
     108,   109,   110,   111,   112,     0,   114,   115,     0,   116,
     117,   118,   119,   120,   121,     0,     0,   122,   123,   124,
     125,   126,     0,   127,   128,   129,   130,   131,     0,     0,
       0,   133,   134,   135,   136,   137,     0,   139,   140,   141,
       0,   142,   143,   144,   145,   146,   147,     0,     0,   149,
     150,   151,     0,     0,     0,     0,     0,     0,     0,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,     0,
     163,     0,   164,   165,   166,   167,   168,   169,     0,   170,
     171,   172,   173,   174,     0,     0,   175,   176,   177,   178,
     179,     0,   180,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
       0,   196,     0,   197,   198,   199,   200,     0,   201,     0,
     202,     0,     0,     0,   205,   206,   207,     0,   209,     0,
     210,     0,   211,   212,     0,   213,   214,   215,   216,   217,
     218,     0,   220,   221,   222,   223,     0,   224,   225,   226,
     227,   228,   229,     0,   230,     0,   232,   233,   234,   235,
     236,   237,   238,     0,   239,     0,   240,     0,     0,   243,
       0,   245,   246,   247,   248,   249,     0,     0,   250,     0,
     252,     0,     0,   254,   255,   256,     0,     0,   257,   258,
     259,   260,   261,   492,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,     0,   283,   284,   285,   286,   287,     0,
     288,   289,     0,   291,     0,   292,   293,   294,   295,   296,
     297,     0,   298,   299,     0,     0,   300,   301,   302,     0,
       0,   303,   304,     0,   306,     0,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,     0,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,     0,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,     0,   354,   355,     0,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,     0,   372,   373,   374,   375,   376,
       0,   377,   378,   379,   380,   381,     0,   383,   384,   385,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   494,   399,   400,     0,   401,   402,     0,
     403,     0,   405,   406,   407,   408,   409,     0,   410,   411,
       0,     0,   412,   413,   414,   415,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,     0,     0,   425,   426,
     427,   428,   429,     0,     0,   430,   431,   432,   433,   434,
     435,   436,     0,   437,     0,   439,   440,   441,   442,     0,
       0,   443,     0,     0,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   658,  1087,   537,     0,     0,
       0,   732,     0,     0,  2134,     0,     0,     0,     0,     0,
       0,    91,    92,    93,    94,    95,    96,    97,    98,     0,
      99,   100,   101,     0,     0,     0,     0,     0,     0,     0,
     102,   103,     0,   104,   105,   106,     0,   108,   109,   110,
     659,   660,     0,   661,   662,     0,   116,   117,   118,   119,
     120,   121,     0,     0,   122,   123,   663,   664,   126,     0,
     127,   128,   129,   130,   665,     0,     0,     0,   133,   134,
     135,   136,   137,     0,   139,   140,   141,     0,   142,   143,
     144,   145,   146,   147,     0,     0,   149,   150,   151,     0,
       0,     0,     0,     0,     0,     0,   153,   154,   155,   156,
     157,   158,   159,   666,   667,   162,  1302,   163,     0,   164,
     165,   166,   167,   168,   169,     0,   170,   171,   172,   173,
     174,     0,     0,   175,   176,   177,   178,   179,     0,   180,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
     189,   668,   191,   192,   193,   194,   669,  1088,   196,     0,
     197,   198,   670,   200,     0,   201,     0,   202,     0,     0,
       0,   205,   206,   207,     0,   209,     0,   210,     0,   671,
     212,     0,   213,   214,   215,   216,   217,   218,     0,   220,
     221,   222,   223,     0,   224,   225,   226,   227,   228,   229,
       0,   230,     0,   672,   233,   234,   235,   236,   673,   674,
       0,   675,     0,   240,     0,     0,   243,     0,   245,   246,
     247,   248,   249,     0,     0,   250,     0,   252,     0,     0,
     254,   255,   256,     0,     0,   257,   258,   259,   260,   261,
     676,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   677,
       0,   678,   284,   285,   286,   679,     0,   288,   289,     0,
     291,     0,   680,   293,   681,   295,   296,   297,     0,   298,
     299,  1089,     0,   300,   301,   302,     0,     0,   303,   682,
       0,   306,     0,   683,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,     0,   319,   320,   684,   322,   323,
     685,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   686,   338,   339,   340,   341,     0,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,     0,   354,   355,     0,   357,   358,   359,   687,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,     0,   372,   373,   374,   375,   376,     0,   377,   688,
     379,   380,   381,     0,   383,   384,   689,   386,     0,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     690,   399,   691,     0,   401,   402,     0,   403,     0,   405,
     406,   407,   408,   409,     0,   692,   693,     0,     0,   412,
     413,   694,   415,   695,  1090,   417,   418,   696,   420,   421,
     422,   423,   424,     0,     0,   425,   426,   427,   428,   429,
       0,     0,   430,   431,   432,   433,   434,  1035,   698,     0,
     437,     0,   439,   440,   441,   442,     0,     0,   443,     0,
       0,   444,   445,   446,   447,   448,   449,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   461,   462,
     463,   464,   658,  1087,   537,     0,     0,     0,   732,  1091,
    1092,     0,     0,     0,     0,     0,     0,     0,    91,    92,
      93,    94,    95,    96,    97,    98,     0,    99,   100,   101,
       0,     0,     0,     0,     0,     0,     0,   102,   103,     0,
     104,   105,   106,     0,   108,   109,   110,   659,   660,     0,
     661,   662,     0,   116,   117,   118,   119,   120,   121,     0,
       0,   122,   123,   663,   664,   126,     0,   127,   128,   129,
     130,   665,     0,     0,     0,   133,   134,   135,   136,   137,
       0,   139,   140,   141,     0,   142,   143,   144,   145,   146,
     147,     0,     0,   149,   150,   151,     0,     0,     0,     0,
       0,     0,     0,   153,   154,   155,   156,   157,   158,   159,
     666,   667,   162,  1304,   163,     0,   164,   165,   166,   167,
     168,   169,     0,   170,   171,   172,   173,   174,     0,     0,
     175,   176,   177,   178,   179,     0,   180,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,   189,   668,   191,
     192,   193,   194,   669,  1088,   196,     0,   197,   198,   670,
     200,     0,   201,     0,   202,     0,     0,     0,   205,   206,
     207,     0,   209,     0,   210,     0,   671,   212,     0,   213,
     214,   215,   216,   217,   218,     0,   220,   221,   222,   223,
       0,   224,   225,   226,   227,   228,   229,     0,   230,     0,
     672,   233,   234,   235,   236,   673,   674,     0,   675,     0,
     240,     0,     0,   243,     0,   245,   246,   247,   248,   249,
       0,     0,   250,     0,   252,     0,     0,   254,   255,   256,
       0,     0,   257,   258,   259,   260,   261,   676,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   677,     0,   678,   284,
     285,   286,   679,     0,   288,   289,     0,   291,     0,   680,
     293,   681,   295,   296,   297,     0,   298,   299,  1089,     0,
     300,   301,   302,     0,     0,   303,   682,     0,   306,     0,
     683,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,     0,   319,   320,   684,   322,   323,   685,   325,   326,
     327,     0,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   686,   338,   339,   340,   341,     0,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,     0,
     354,   355,     0,   357,   358,   359,   687,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,     0,   372,
     373,   374,   375,   376,     0,   377,   688,   379,   380,   381,
       0,   383,   384,   689,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   690,   399,   691,
       0,   401,   402,     0,   403,     0,   405,   406,   407,   408,
     409,     0,   692,   693,     0,     0,   412,   413,   694,   415,
     695,  1090,   417,   418,   696,   420,   421,   422,   423,   424,
       0,     0,   425,   426,   427,   428,   429,     0,     0,   430,
     431,   432,   433,   434,  1035,   698,     0,   437,     0,   439,
     440,   441,   442,     0,     0,   443,     0,     0,   444,   445,
     446,   447,   448,   449,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   461,   462,   463,   464,   658,
    1087,   537,     0,     0,     0,   732,  1091,  1092,     0,     0,
       0,     0,     0,     0,     0,    91,    92,    93,    94,    95,
      96,    97,    98,     0,    99,   100,   101,     0,     0,     0,
       0,     0,     0,     0,   102,   103,     0,   104,   105,   106,
       0,   108,   109,   110,   659,   660,     0,   661,   662,     0,
     116,   117,   118,   119,   120,   121,     0,     0,   122,   123,
     663,   664,   126,     0,   127,   128,   129,   130,   665,     0,
       0,     0,   133,   134,   135,   136,   137,     0,   139,   140,
     141,     0,   142,   143,   144,   145,   146,   147,     0,     0,
     149,   150,   151,     0,     0,     0,     0,     0,     0,     0,
     153,   154,   155,   156,   157,   158,   159,   666,   667,   162,
       0,   163,     0,   164,   165,   166,   167,   168,   169,     0,
     170,   171,   172,   173,   174,     0,     0,   175,   176,   177,
     178,   179,     0,   180,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,   189,   668,   191,   192,   193,   194,
     669,  1088,   196,     0,   197,   198,   670,   200,     0,   201,
       0,   202,     0,     0,     0,   205,   206,   207,     0,   209,
       0,   210,     0,   671,   212,     0,   213,   214,   215,   216,
     217,   218,     0,   220,   221,   222,   223,     0,   224,   225,
     226,   227,   228,   229,     0,   230,     0,   672,   233,   234,
     235,   236,   673,   674,     0,   675,     0,   240,     0,     0,
     243,     0,   245,   246,   247,   248,   249,     0,     0,   250,
       0,   252,     0,     0,   254,   255,   256,     0,     0,   257,
     258,   259,   260,   261,   676,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   677,     0,   678,   284,   285,   286,   679,
       0,   288,   289,     0,   291,     0,   680,   293,   681,   295,
     296,   297,     0,   298,   299,  1089,     0,   300,   301,   302,
       0,     0,   303,   682,     0,   306,     0,   683,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,     0,   319,
     320,   684,   322,   323,   685,   325,   326,   327,     0,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   686,   338,
     339,   340,   341,     0,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,     0,   354,   355,     0,
     357,   358,   359,   687,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,     0,   372,   373,   374,   375,
     376,     0,   377,   688,   379,   380,   381,     0,   383,   384,
     689,   386,     0,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   690,   399,   691,     0,   401,   402,
       0,   403,     0,   405,   406,   407,   408,   409,     0,   692,
     693,     0,     0,   412,   413,   694,   415,   695,  1090,   417,
     418,   696,   420,   421,   422,   423,   424,     0,     0,   425,
     426,   427,   428,   429,     0,     0,   430,   431,   432,   433,
     434,  1035,   698,     0,   437,     0,   439,   440,   441,   442,
       0,     0,   443,     0,     0,   444,   445,   446,   447,   448,
     449,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   461,   462,   463,   464,     0,  1244,     0,     0,
    1245,     0,     0,  1091,  1092,  1246,  1247,  1248,     0,     0,
       0,     0,     0,     0,     0,  1244,     0,     0,  1245,     0,
       0,     0,  1249,  1246,  1247,  1248,  1708,     0,     0,     0,
    1251,     0,     0,  1244,     0,     0,  1245,  1252,     0,     0,
    1249,  1246,  1247,  1248,     0,     0,     0,     0,  1251,     0,
       0,     0,     0,     0,     0,  1252,     0,     0,  1249,     0,
       0,  1244,  1253,     0,  1245,     0,  1251,     0,     0,  1246,
    1247,  1248,     0,  1252,     0,     0,     0,     0,     0,     0,
    1253,     0,     0,     0,     0,     0,  1249,     0,     0,  1884,
       0,     0,     0,     0,  1251,     0,     0,  1244,  1253,     0,
    1245,  1252,     0,     0,     0,  1246,  1247,  1248,     0,     0,
       0,     0,  1709,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1249,     0,     0,     0,  1253,     0,     0,     0,
    1251,     0,     0,     0,     0,     0,     0,  1252,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1254,  1253,     0,     0,     0,     0,     0,     0,  1924,
       0,     0,     0,     0,  1925,  1255,     0,     0,     0,  1254,
    1256,  1244,     0,     0,  1245,     0,  2839,     0,     0,  1246,
    1247,  1248,     0,  1255,     0,     0,     0,  1254,  1256,     0,
       0,  1257,  1258,     0,     0,     0,  1249,     0,     0,  1933,
       0,  1255,     0,     0,  1251,  1259,  1256,     0,     0,  1257,
    1258,  1252,     0,     0,     0,  1254,     0,     0,     0,     0,
       0,     0,     0,  1259,     0,     0,     0,  1257,  1258,  1255,
       0,     0,     0,     0,  1256,     0,  1253,     0,     0,     0,
       0,  1259,     0,  1260,     0,     0,  1261,     0,     0,     0,
       0,  1254,     0,     0,     0,  1257,  1258,     0,     0,     0,
    1262,  1260,     0,  1263,  1261,  1255,     0,     0,     0,  1259,
    1256,     0,     0,     0,     0,     0,     0,     0,  1262,  1260,
       0,  1263,  1261,     0,     0,     0,     0,     0,     0,     0,
       0,  1257,  1258,     0,     0,     0,  1262,     0,     0,  1263,
       0,     0,     0,     0,     0,  1259,     0,  1260,     0,     0,
    1261,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2840,     0,  1262,     0,     0,  1263,     0,     0,
       0,     0,     0,     0,     0,  1254,     0,     0,     0,     0,
       0,     0,     0,  1260,     0,     0,  1261,     0,     0,  1255,
    1264,     0,     0,     0,  1256,     0,     0,     0,     0,     0,
    1262,     0,     0,  1263,     0,     0,     0,     0,  1264,     0,
       0,     0,     0,     0,     0,  1257,  1258,     0,     0,     0,
       0,  1898,     0,     0,     0,     0,  1264,     0,     0,  1259,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1244,     0,     0,  1245,     0,  1710,     0,
       0,  1246,  1247,  1248,  1264,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1260,  1249,     0,
    1261,     0,     0,     0,     0,     0,  1251,     0,     0,     0,
       0,     0,     0,  1252,  1262,     0,     0,  1263,     0,  1265,
    1264,     0,  1266,  1267,  1268,     0,  1269,  1270,  1271,  1272,
    1273,  1274,     0,     0,     0,     0,     0,  1265,  1253,     0,
    1266,  1267,  1268,     0,  1269,  1270,  1271,  1272,  1273,  1274,
       0,     0,     0,     0,     0,  1265,     0,     0,  1266,  1267,
    1268,     0,  1269,  1270,  1271,  1272,  1273,  1274,     0,  1244,
       0,     0,  1245,     0,     0,     0,     0,  1246,  1247,  1248,
       0,     0,     0,  1265,     0,     0,  1266,  1267,  1268,     0,
    1269,  1270,  1271,  1272,  1273,  1274,     0,     0,     0,     0,
       0,     0,  1251,     0,  1264,     0,     0,     0,  1244,  1252,
       0,  1245,     0,     0,     0,     0,  1246,  1247,  1248,  1265,
       0,     0,  1266,  1267,  1268,     0,  1269,  1270,  1271,  1272,
    1273,  1274,  1938,  1249,  1253,     0,  1940,  1254,     0,     0,
       0,  1251,     0,     0,     0,     0,     0,     0,  1252,     0,
       0,  1255,     0,     0,  1244,     0,  1256,  1245,     0,     0,
       0,     0,  1246,  1247,  1248,     0,     0,     0,     0,     0,
       0,     0,     0,  1253,     0,     0,     0,  1257,  1258,  1249,
       0,     0,     0,     0,     0,     0,     0,  1251,     0,     0,
       0,  1259,     0,     0,  1252,     0,     0,     0,     0,     0,
       0,     0,     0,  1265,     0,     0,  1266,  1267,  1268,     0,
    1269,  1270,  1271,  1272,  1273,  1274,     0,     0,     0,  1253,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1260,
       0,     0,  1261,  1254,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1244,  1262,  1255,  1245,  1263,
       0,     0,  1256,  1246,  1247,  1248,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1249,     0,  1254,  1257,  1258,     0,     0,     0,  1251,     0,
       0,     0,     0,     0,     0,  1252,  1255,  1259,     0,     0,
    1244,  1256,     0,  1245,     0,     0,     0,     0,  1246,  1247,
    1248,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1253,     0,  1257,  1258,     0,     0,     0,     0,  1254,     0,
       0,     0,     0,  1251,     0,  1260,  1259,     0,  1261,     0,
    1252,     0,  1255,     0,     0,     0,  1264,  1256,     0,     0,
       0,     0,  1262,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1253,     0,     0,  1257,  1258,
       0,     0,     0,     0,  1260,     0,     0,  1261,     0,     0,
       0,     0,  1259,     0,     0,     0,     0,     0,     0,     0,
       0,  1262,     0,     0,  1263,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1254,
    1260,     0,     0,  1261,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1255,     0,     0,     0,  1262,  1256,     0,
    1263,     0,  1264,     0,     0,  1265,     0,     0,  1266,  1267,
    1268,     0,  1269,  1270,  1271,  1272,  1273,  1274,     0,  1257,
    1258,     0,     0,     0,  1254,     0,     0,     0,     0,     0,
       0,     0,     0,  1259,     0,     0,     0,     0,  1255,     0,
       0,  1264,     0,  1256,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0, -1680, -1680,     0,     0,     0,     0,
       0,  1260,     0,     0,  1261,     0,     0,     0,  1259,     0,
       0,     0,     0,     0,     0,     0,     0,  1264,  1262,     0,
       0,  1263,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1265,     0,     0,  1266,  1267,  1268,     0,  1269,  1270,
    1271,  1272,  1273,  1274,     0,     0,     0,     0,  2155, -1680,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1262,     0,     0,     0,     0,     0,     0,
    1265,     0,     0,  1266,  1267,  1268,     0,  1269,  1270,  1271,
    1272,  1273,  1274,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1264,     0,
       0,     0,     0,     0,     0,     0,  1265,     0,     0,  1266,
    1267,  1268,     0,  1269,  1270,  1271,  1272,  1273,  1274,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1264,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1265,     0,     0,
    1266,  1267,  1268,     0,  1269,  1270,  1271,  1272,  1273,  1274,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   962,
       0,  1617,  1265,     0,     0,  1266,  1267,  1268,     0,  1269,
    1270,  1271,  1272,  1273,  1274,    91,    92,    93,    94,    95,
      96,    97,    98,   963,    99,   100,   101,   964,   965,   966,
     967,   968,   969,   970,   102,   103,   971,   104,   105,   106,
       0,   108,   109,   110,   659,   660,     0,   661,   662,   972,
     116,   117,   118,   119,   120,   121,   973,   974,   122,   123,
     663,   664,   126,   975,   127,   128,   129,   130,   665,   976,
       0,   977,   133,   134,   135,   136,   137,     0,   139,   140,
     141,   978,   142,   143,   144,   145,   146,   147,   979,     0,
     149,   150,   151,   980,   981,   982,     0,   983,   984,   985,
     153,   154,   155,   156,   157,   158,   159,   666,   667,   162,
     986,   163,   987,   164,   165,   166,   167,   168,   169,   988,
     170,   171,   172,   173,   174,   989,   990,   175,   176,   177,
     178,   179,   991,   180,   181,   182,   992,   183,   184,   185,
     993,   186,   187,   188,   189,   668,   191,   192,   193,   194,
     669,   994,   196,   995,   197,   198,   670,   200,   996,   201,
     997,   202,     0,   998,     0,   205,   206,   207,     0,   209,
     999,   210,  1000,   671,   212,  1001,   213,   214,   215,   216,
     217,   218,     0,   220,   221,   222,   223,  1002,   224,   225,
     226,   227,   228,   229,  1003,   230,     0,   672,   233,   234,
     235,   236,   673,   674,  1004,   675,  1005,   240,     0,     0,
     243,     0,   245,   246,   247,   248,   249,  1006,  1007,   250,
       0,   252,     0,  1008,   254,   255,   256,  1009,  1010,   257,
     258,   259,   260,   261,   676,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   677,     0,   678,   284,   285,   286,   679,
    1011,   288,   289,     0,   291,  1012,   680,   293,   681,   295,
     296,   297,  1013,   298,   299,  1014,  1015,   300,   301,   302,
    1016,  1017,   303,   682,     0,   306,     0,   683,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,  1018,   319,
     320,   684,   322,   323,   685,   325,   326,   327,  1019,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   686,   338,
     339,   340,   341,  1020,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,  1021,   354,   355,     0,
     357,   358,   359,   687,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,  1022,   372,   373,   374,   375,
     376,  1023,   377,   688,   379,   380,   381,     0,   383,   384,
     689,   386,  1024,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   690,   399,   691,  1025,   401,   402,
    1026,   403,     0,   405,   406,   407,   408,   409,  1027,   692,
     693,  1028,  1029,   412,   413,   694,   415,   695,  1030,   417,
     418,   696,   420,   421,   422,   423,   424,  1031,  1032,   425,
     426,   427,   428,   429,  1033,  1034,   430,   431,   432,   433,
     434,  1035,   698,  1036,   437,     0,   439,   440,   441,   442,
    1037,  1038,   443,  1039,  1040,   444,   445,   446,   447,   448,
     449,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   461,   462,   463,   464,   962,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    91,    92,    93,    94,    95,    96,    97,    98,
     963,    99,   100,   101,   964,   965,   966,   967,   968,   969,
     970,   102,   103,   971,   104,   105,   106,     0,   108,   109,
     110,   659,   660,     0,   661,   662,   972,   116,   117,   118,
     119,   120,   121,   973,   974,   122,   123,   663,   664,   126,
     975,   127,   128,   129,   130,   665,   976,     0,   977,   133,
     134,   135,   136,   137,     0,   139,   140,   141,   978,   142,
     143,   144,   145,   146,   147,   979,     0,   149,   150,   151,
     980,   981,   982,     0,   983,   984,   985,   153,   154,   155,
     156,   157,   158,   159,   666,   667,   162,   986,   163,   987,
     164,   165,   166,   167,   168,   169,   988,   170,   171,   172,
     173,   174,   989,   990,   175,   176,   177,   178,   179,   991,
     180,   181,   182,   992,   183,   184,   185,   993,   186,   187,
     188,   189,   668,   191,   192,   193,   194,   669,   994,   196,
     995,   197,   198,   670,   200,   996,   201,   997,   202,     0,
     998,     0,   205,   206,   207,     0,   209,   999,   210,  1000,
     671,   212,  1001,   213,   214,   215,   216,   217,   218,     0,
     220,   221,   222,   223,  1002,   224,   225,   226,   227,   228,
     229,  1003,   230,     0,   672,   233,   234,   235,   236,   673,
     674,  1004,   675,  1005,   240,     0,     0,   243,     0,   245,
     246,   247,   248,   249,  1006,  1007,   250,     0,   252,     0,
    1008,   254,   255,   256,  1009,  1010,   257,   258,   259,   260,
     261,   676,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     677,     0,   678,   284,   285,   286,   679,  1011,   288,   289,
       0,   291,  1012,   680,   293,   681,   295,   296,   297,  1013,
     298,   299,  1014,  1015,   300,   301,   302,  1016,  1017,   303,
     682,     0,   306,     0,   683,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,  1018,   319,   320,   684,   322,
     323,   685,   325,   326,   327,  1019,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   686,   338,   339,   340,   341,
    1020,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,  1021,   354,   355,     0,   357,   358,   359,
     687,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,  1022,   372,   373,   374,   375,   376,  1023,   377,
     688,   379,   380,   381,     0,   383,   384,   689,   386,  1024,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   690,   399,   691,  1025,   401,   402,  1026,   403,     0,
     405,   406,   407,   408,   409,  1027,   692,   693,  1028,  1029,
     412,   413,   694,   415,   695,  1030,   417,   418,   696,   420,
     421,   422,   423,   424,  1031,  1032,   425,   426,   427,   428,
     429,  1033,  1034,   430,   431,   432,   433,   434,  1035,   698,
    1036,   437,     0,   439,   440,   441,   442,  1037,  1038,   443,
    1039,  1040,   444,   445,   446,   447,   448,   449,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   461,
     462,   463,   464,   962,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    91,
      92,    93,    94,  1757,    96,    97,    98,   963,    99,   100,
     101,   964,   965,   966,   967,   968,   969,   970,   102,   103,
     971,   104,   105,   106,     0,   108,   109,   110,   659,   660,
       0,   661,   662,   972,   116,   117,   118,   119,   120,   121,
     973,   974,   122,   123,   663,   664,   126,   975,   127,   128,
     129,   130,   665,   976,     0,   977,   133,   134,   135,   136,
     137,     0,   139,   140,   141,   978,   142,   143,   144,   145,
     146,   147,   979,     0,   149,   150,   151,   980,   981,   982,
       0,   983,   984,   985,   153,   154,   155,   156,   157,   158,
     159,   666,   667,   162,   986,   163,   987,   164,   165,   166,
     167,   168,   169,   988,   170,   171,   172,   173,   174,   989,
     990,   175,   176,   177,  1758,   179,   991,   180,   181,   182,
     992,   183,   184,   185,   993,   186,   187,   188,   189,   668,
     191,   192,   193,   194,   669,   994,   196,   995,   197,   198,
     670,   200,   996,   201,   997,   202,     0,   998,     0,   205,
     206,   207,     0,   209,   999,   210,  1000,   671,   212,  1001,
     213,   214,   215,   216,   217,   218,     0,   220,   221,   222,
     223,  1002,   224,   225,   226,   227,   228,   229,  1003,   230,
       0,   672,   233,   234,   235,   236,   673,   674,  1004,   675,
    1005,   240,     0,     0,   243,     0,   245,   246,   247,   248,
     249,  1006,  1007,   250,     0,   252,     0,  1008,   254,   255,
     256,  1009,  1010,   257,   258,   259,   260,   261,   676,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   677,     0,   678,
     284,   285,   286,   679,  1011,   288,   289,     0,   291,  1012,
     680,   293,   681,   295,   296,   297,  1013,   298,   299,  1014,
    1015,   300,   301,   302,  1016,  1017,   303,   682,     0,   306,
       0,   683,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,  1018,   319,   320,   684,   322,   323,   685,   325,
     326,   327,  1019,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   686,   338,   339,   340,   341,  1020,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
    1021,   354,   355,     0,   357,   358,   359,   687,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,  1022,
     372,   373,   374,   375,   376,  1023,  1759,   688,   379,   380,
     381,     0,   383,   384,   689,   386,  1024,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   690,   399,
     691,  1025,   401,   402,  1026,   403,     0,   405,   406,   407,
     408,   409,  1027,   692,   693,  1028,  1029,   412,   413,   694,
     415,   695,  1030,   417,   418,   696,   420,   421,   422,   423,
     424,  1031,  1032,   425,   426,   427,   428,   429,  1033,  1034,
     430,   431,   432,   433,   434,  1035,   698,  1036,   437,     0,
     439,   440,   441,   442,  1037,  1038,   443,  1039,  1040,   444,
     445,   446,   447,   448,   449,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   461,   462,   463,   464,
      90,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    91,    92,    93,    94,
      95,    96,    97,    98,     0,    99,   100,   101,     0,     0,
       0,     0,     0,     0,     0,   102,   103,     0,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
       0,   116,   117,   118,   119,   120,   121,     0,   739,   122,
     123,   124,   125,   126,     0,   127,   128,   129,   130,   742,
       0,   743,     0,   133,   134,   135,   136,   137,   138,   139,
     140,   141,     0,   142,   143,   144,   145,   146,   147,     0,
     148,   149,   150,   151,   744,   745,   746,   747,   748,   749,
     750,   153,   154,   155,   156,   157,   158,   159,   160,   161,
     162,     0,   163,     0,   164,   165,   166,   167,   168,   169,
       0,   170,   171,   172,   173,   174,     0,     0,   175,   176,
     177,   178,   179,     0,   180,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   756,     0,   196,     0,   197,   198,   199,   200,     0,
     201,     0,   202,   203,     0,   204,   205,   206,   207,   208,
     209,     0,   210,     0,   211,   212,     0,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,     0,   224,
     225,   226,   227,   228,   229,     0,   230,   231,   232,   233,
     234,   235,   236,   237,   238,     0,   239,     0,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,     0,     0,
     250,   251,   252,   253,     0,   254,   255,   256,   762,   763,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,     0,   288,   289,   290,   291,     0,   768,   293,   294,
     295,   296,   297,     0,   298,   299,     0,     0,   300,   301,
     302,     0,     0,   303,   304,   305,   306,   307,   771,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,     0,
     319,   320,   772,   322,   323,   324,   325,   326,   327,     0,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,     0,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,     0,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,     0,   372,   373,   374,
     375,   376,   775,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,     0,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   777,     0,   401,
     402,     0,   403,   404,   405,   406,   407,   408,   409,     0,
     410,   411,     0,     0,   412,   413,   780,   415,   781,     0,
     417,   418,   783,   420,   421,   422,   423,   424,     0,     0,
     425,   426,   427,   428,   429,   784,     0,   430,   431,   432,
     433,   434,   435,   436,     0,   437,   438,   439,   440,   441,
     442,     0,     0,   443,     0,     0,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,    90,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    91,    92,    93,    94,    95,    96,    97,
      98,     0,    99,   100,   101,     0,     0,     0,     0,     0,
       0,     0,   102,   103,     0,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,     0,   116,   117,
     118,   119,   120,   121,     0,     0,   122,   123,   124,   125,
     126,     0,   127,   128,   129,   130,   131,     0,   132,     0,
     133,   134,   135,   136,   137,   138,   139,   140,   141,     0,
     142,   143,   144,   145,   146,   147,     0,   148,   149,   150,
     151,     0,     0,     0,   152,     0,     0,     0,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,     0,   163,
       0,   164,   165,   166,   167,   168,   169,     0,   170,   171,
     172,   173,   174,     0,     0,   175,   176,   177,   178,   179,
       0,   180,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,     0,
     196,     0,   197,   198,   199,   200,     0,   201,     0,   202,
     203,     0,   204,   205,   206,   207,   208,   209,     0,   210,
       0,   211,   212,     0,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,     0,   224,   225,   226,   227,
     228,   229,     0,   230,   231,   232,   233,   234,   235,   236,
     237,   238,     0,   239,     0,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,     0,   250,   251,   252,
     253,     0,   254,   255,   256,     0,     0,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,     0,   288,
     289,   290,   291,     0,   292,   293,   294,   295,   296,   297,
       0,   298,   299,     0,     0,   300,   301,   302,     0,     0,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,     0,   319,   320,   321,
     322,   323,   324,   325,   326,   327,     0,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,     0,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,     0,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,     0,   372,   373,   374,   375,   376,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
       0,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,     0,   401,   402,     0,   403,
     404,   405,   406,   407,   408,   409,     0,   410,   411,     0,
       0,   412,   413,   414,   415,   416,     0,   417,   418,   419,
     420,   421,   422,   423,   424,     0,     0,   425,   426,   427,
     428,   429,     0,     0,   430,   431,   432,   433,   434,   435,
     436,     0,   437,   438,   439,   440,   441,   442,     0,     0,
     443,     0,     0,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   490,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      91,    92,    93,    94,    95,    96,    97,    98,     0,    99,
     100,   101,     0,     0,     0,     0,     0,     0,     0,   102,
     103,     0,   104,   105,   106,     0,   108,   109,   110,   111,
     112,     0,   114,   115,     0,   116,   117,   118,   119,   120,
     121,     0,     0,   122,   123,   124,   125,   126,  1360,   127,
     128,   129,   130,   131,     0,     0,  1361,   133,   134,   135,
     136,   137,     0,   139,   140,   141,  1362,   142,   143,   144,
     145,   146,   147,     0,     0,   149,   150,   151,     0,     0,
       0,     0,     0,     0,     0,   153,   154,   155,   156,   157,
     158,   159,   160,   161,   162,     0,   163,     0,   164,   165,
     166,   167,   168,   169,     0,   170,   171,   172,   173,   174,
       0,     0,   175,   176,   177,   178,   179,     0,   180,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,     0,   196,     0,   197,
     198,   199,   200,     0,   201,  1363,   202,     0,     0,     0,
     205,   206,   207,     0,   209,     0,   210,     0,   211,   212,
       0,   213,   214,   215,   216,   217,  1364,     0,   220,   221,
     222,   223,     0,   224,   225,   226,   227,   228,   229,     0,
     230,     0,   232,   233,   234,   235,   236,   237,   238,     0,
     239,     0,   240,     0,     0,   243,     0,   245,   246,   247,
     248,   249,     0,     0,   250,     0,   252,     0,     0,   254,
     255,   256,     0,     0,   257,   258,   259,   260,   261,   492,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,     0,
     283,   284,   285,   286,   287,     0,   288,   289,     0,   291,
       0,   292,   293,   294,   295,   296,   297,     0,   298,   299,
       0,     0,   300,   301,   302,     0,     0,   303,   304,     0,
     306,     0,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,     0,   319,   320,   321,   322,   323,   324,
     325,   326,   327,  1365,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,     0,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,     0,   354,   355,     0,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
       0,   372,   373,   374,   375,   376,     0,   377,   378,   379,
     380,   381,     0,   383,   384,   385,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   494,
     399,   400,     0,   401,   402,     0,   403,     0,   405,   406,
     407,   408,   409,     0,   410,   411,     0,     0,   412,   413,
     414,   415,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,     0,  1366,   425,   426,   427,   428,   429,     0,
       0,   430,   431,   432,   433,   434,   435,   436,     0,   437,
       0,   439,   440,   441,   442,     0,     0,   443,     0,     0,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   490,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    91,    92,    93,
      94,    95,    96,    97,    98,     0,    99,   100,   101,     0,
       0,     0,     0,     0,     0,     0,   102,   103,     0,   104,
     105,   106,     0,   108,   109,   110,   111,   112,     0,   114,
     115,     0,   116,   117,   118,   119,   120,   121,     0,     0,
     122,   123,   124,   125,   126,  1360,   127,   128,   129,   130,
     131,     0,     0,     0,   133,   134,   135,   136,   137,     0,
     139,   140,   141,  1362,   142,   143,   144,   145,   146,   147,
       0,     0,   149,   150,   151,     0,     0,     0,     0,     0,
       0,     0,   153,   154,   155,   156,   157,   158,   159,   160,
     161,   162,     0,   163,     0,   164,   165,   166,   167,   168,
     169,     0,   170,   171,   172,   173,   174,     0,     0,   175,
     176,   177,   178,   179,     0,   180,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,     0,   196,     0,   197,   198,   199,   200,
       0,   201,  1363,   202,     0,     0,     0,   205,   206,   207,
       0,   209,     0,   210,     0,   211,   212,     0,   213,   214,
     215,   216,   217,   218,     0,   220,   221,   222,   223,     0,
     224,   225,   226,   227,   228,   229,     0,   230,     0,   232,
     233,   234,   235,   236,   237,   238,     0,   239,     0,   240,
       0,     0,   243,     0,   245,   246,   247,   248,   249,     0,
       0,   250,     0,   252,  1822,     0,   254,   255,   256,     0,
       0,   257,   258,   259,   260,   261,   492,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,     0,   283,   284,   285,
     286,   287,     0,   288,   289,     0,   291,     0,   292,   293,
     294,   295,   296,   297,     0,   298,   299,     0,     0,   300,
     301,   302,     0,     0,   303,   304,     0,   306,     0,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
       0,   319,   320,   321,   322,   323,   324,   325,   326,   327,
    1365,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,     0,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,     0,   354,
     355,     0,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,     0,   372,   373,
     374,   375,   376,     0,   377,   378,   379,   380,   381,     0,
     383,   384,   385,   386,     0,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   494,   399,   400,     0,
     401,   402,     0,   403,     0,   405,   406,   407,   408,   409,
       0,   410,   411,     0,     0,   412,   413,   414,   415,   416,
       0,   417,   418,   419,   420,   421,   422,   423,   424,     0,
    1366,   425,   426,   427,   428,   429,     0,     0,   430,   431,
     432,   433,   434,   435,   436,     0,   437,     0,   439,   440,
     441,   442,     0,     0,   443,     0,     0,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   658,     0,
     537,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    91,    92,    93,    94,    95,    96,
      97,    98,     0,    99,   100,   101,     0,     0,     0,     0,
       0,     0,     0,   102,   103,     0,   104,   105,   106,     0,
     108,   109,   110,   659,   660,     0,   661,   662,     0,   116,
     117,   118,   119,   120,   121,     0,     0,   122,   123,   663,
     664,   126,     0,   127,   128,   129,   130,   665,     0,     0,
       0,   133,   134,   135,   136,   137,     0,   139,   140,   141,
       0,   142,   143,   144,   145,   146,   147,     0,     0,   149,
     150,   151,     0,     0,     0,     0,     0,     0,     0,   153,
     154,   155,   156,   157,   158,   159,   666,   667,   162,     0,
     163,     0,   164,   165,   166,   167,   168,   169,     0,   170,
     171,   172,   173,   174,     0,     0,   175,   176,   177,   178,
     179,     0,   180,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,   189,   668,   191,   192,   193,   194,   669,
    1088,   196,     0,   197,   198,   670,   200,     0,   201,     0,
     202,     0,     0,     0,   205,   206,   207,     0,   209,     0,
     210,     0,   671,   212,     0,   213,   214,   215,   216,   217,
     218,     0,   220,   221,   222,   223,     0,   224,   225,   226,
     227,   228,   229,     0,   230,     0,   672,   233,   234,   235,
     236,   673,   674,     0,   675,     0,   240,     0,     0,   243,
       0,   245,   246,   247,   248,   249,     0,     0,   250,     0,
     252,     0,     0,   254,   255,   256,     0,     0,   257,   258,
     259,   260,   261,   676,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   677,     0,   678,   284,   285,   286,   679,     0,
     288,   289,     0,   291,     0,   680,   293,   681,   295,   296,
     297,     0,   298,   299,  1089,     0,   300,   301,   302,     0,
       0,   303,   682,     0,   306,     0,   683,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,     0,   319,   320,
     684,   322,   323,   685,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   686,   338,   339,
     340,   341,     0,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,     0,   354,   355,     0,   357,
     358,   359,   687,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,     0,   372,   373,   374,   375,   376,
       0,   377,   688,   379,   380,   381,     0,   383,   384,   689,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   690,   399,   691,     0,   401,   402,     0,
     403,     0,   405,   406,   407,   408,   409,     0,   692,   693,
       0,     0,   412,   413,   694,   415,   695,  1090,   417,   418,
     696,   420,   421,   422,   423,   424,     0,     0,   425,   426,
     427,   428,   429,     0,     0,   430,   431,   432,   433,   434,
    1035,   698,     0,   437,     0,   439,   440,   441,   442,     0,
       0,   443,     0,     0,   444,   445,   446,   447,   448,   449,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   461,   462,   463,   464,   490,     0,   562,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    91,    92,    93,    94,    95,    96,    97,    98,     0,
      99,   100,   101,     3,     4,     0,     0,     0,     0,     0,
     102,   103,     0,   104,   105,   106,     0,   108,   109,   110,
     111,   112,     0,   114,   115,     0,   116,   117,   118,   119,
     120,   121,     0,     0,   122,   123,   124,   125,   126,     0,
     127,   128,   129,   130,   131,     0,     0,     0,   133,   134,
     135,   136,   137,     0,   139,   140,   141,     0,   142,   143,
     144,   145,   146,   147,     0,     0,   149,   150,   151,     0,
       0,     0,     0,     0,     0,     0,   153,   154,   155,   156,
     157,   158,   159,   160,   161,   162,     0,   163,     0,   164,
     165,   166,   167,   168,   169,     0,   170,   171,   172,   173,
     174,     0,     0,   175,   176,   177,   178,   179,     0,   180,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,     0,   196,     0,
     197,   198,   199,   200,     0,   201,     0,   202,     0,     0,
       0,   205,   206,   207,     0,   209,     0,   210,     0,   211,
     212,     0,   213,   214,   215,   216,   217,   218,     0,   220,
     221,   222,   223,     0,   224,   225,   226,   227,   228,   229,
       0,   230,     0,   232,   233,   234,   235,   236,   237,   238,
       0,   239,     0,   240,     0,     0,   243,     0,   245,   246,
     247,   248,   249,     0,     0,   250,     0,   252,     0,     0,
     254,   255,   256,     0,     0,   257,   258,   259,   260,   261,
     492,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
       0,   283,   284,   285,   286,   287,     0,   288,   289,     0,
     291,     0,   292,   293,   294,   295,   296,   297,     0,   298,
     299,     0,     0,   300,   301,   302,     0,     0,   303,   304,
       0,   306,     0,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,     0,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,     0,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,     0,   354,   355,     0,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,     0,   372,   373,   374,   375,   376,     0,   377,   378,
     379,   380,   381,     0,   383,   384,   385,   386,     0,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     494,   399,   400,     0,   401,   402,     0,   403,     0,   405,
     406,   407,   408,   409,     0,   410,   411,     0,     0,   412,
     413,   414,   415,   416,     0,   417,   418,   419,   420,   421,
     422,   423,   424,     0,     0,   425,   426,   427,   428,   429,
       0,     0,   430,   431,   432,   433,   434,   435,   436,     0,
     437,     0,   439,   440,   441,   442,     0,     0,   443,     0,
       0,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   490,     0,   562,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    91,    92,
      93,    94,    95,    96,    97,    98,     0,    99,   100,   101,
       0,     0,     0,     0,     0,     0,     0,   102,   103,     0,
     104,   105,   106,     0,   108,   109,   110,   111,   112,     0,
     114,   115,     0,   116,   117,   118,   119,   120,   121,     0,
       0,   122,   123,   124,   125,   126,     0,   127,   128,   129,
     130,   131,     0,     0,     0,   133,   134,   135,   136,   137,
       0,   139,   140,   141,     0,   142,   143,   144,   145,   146,
     147,     0,     0,   149,   150,   151,     0,     0,     0,     0,
       0,     0,     0,   153,   154,   155,   156,   157,   158,   159,
     160,   161,   162,     0,   163,     0,   164,   165,   166,   167,
     168,   169,     0,   170,   171,   172,   173,   174,     0,     0,
     175,   176,   177,   178,   179,     0,   180,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,     0,   196,     0,   197,   198,   199,
     200,     0,   201,     0,   202,     0,     0,     0,   205,   206,
     207,     0,   209,     0,   210,     0,   211,   212,     0,   213,
     214,   215,   216,   217,   218,     0,   220,   221,   222,   223,
       0,   224,   225,   226,   227,   228,   229,     0,   230,     0,
     232,   233,   234,   235,   236,   237,   238,     0,   239,     0,
     240,     0,     0,   243,     0,   245,   246,   247,   248,   249,
       0,     0,   250,     0,   252,     0,     0,   254,   255,   256,
       0,     0,   257,   258,   259,   260,   261,   492,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,     0,   283,   284,
     285,   286,   287,     0,   288,   289,     0,   291,     0,   292,
     293,   294,   295,   296,   297,     0,   298,   299,     0,   563,
     300,   301,   302,     0,     0,   303,   304,     0,   306,     0,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,     0,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,     0,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,     0,
     354,   355,     0,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,     0,   372,
     373,   374,   375,   376,     0,   377,   378,   379,   380,   381,
       0,   383,   384,   385,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   494,   399,   400,
       0,   401,   402,     0,   403,     0,   405,   406,   407,   408,
     409,     0,   410,   411,     0,     0,   412,   413,   414,   415,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   424,
       0,     0,   425,   426,   427,   428,   429,     0,     0,   430,
     431,   432,   433,   434,   435,   436,     0,   437,     0,   439,
     440,   441,   442,     0,     0,   443,     0,     0,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   490,
       0,   562,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    91,    92,    93,    94,    95,
      96,    97,    98,     0,    99,   100,   101,     0,     0,     0,
       0,     0,     0,     0,   102,   103,     0,   104,   105,   106,
       0,   108,   109,   110,   111,   112,     0,   114,   115,     0,
     116,   117,   118,   119,   120,   121,     0,     0,   122,   123,
     124,   125,   126,     0,   127,   128,   129,   130,   131,     0,
       0,     0,   133,   134,   135,   136,   137,     0,   139,   140,
     141,     0,   142,   143,   144,   145,   146,   147,     0,     0,
     149,   150,   151,     0,     0,     0,     0,     0,     0,     0,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
       0,   163,     0,   164,   165,   166,   167,   168,   169,     0,
     170,   171,   172,   173,   174,     0,     0,   175,   176,   177,
     178,   179,     0,   180,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,     0,   196,     0,   197,   198,   199,   200,     0,   201,
       0,   202,     0,     0,     0,   205,   206,   207,     0,   209,
       0,   210,     0,   211,   212,     0,   213,   214,   215,   216,
     217,   608,     0,   220,   221,   222,   223,     0,   224,   225,
     226,   227,   228,   229,     0,   230,     0,   232,   233,   234,
     235,   236,   237,   238,     0,   239,     0,   240,     0,     0,
     243,     0,   245,   246,   247,   248,   249,     0,     0,   250,
       0,   252,     0,     0,   254,   255,   256,     0,     0,   257,
     258,   259,   260,   261,   492,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,     0,   283,   284,   285,   286,   287,
       0,   288,   289,     0,   291,     0,   292,   293,   294,   295,
     296,   297,     0,   298,   299,     0,   563,   300,   301,   302,
       0,     0,   303,   304,     0,   306,     0,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,     0,   319,
     320,   321,   322,   323,   324,   325,   326,   327,     0,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,     0,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,     0,   354,   355,     0,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,     0,   372,   373,   374,   375,
     376,     0,   377,   378,   379,   380,   381,     0,   383,   384,
     385,   386,     0,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   494,   399,   400,     0,   401,   402,
       0,   403,     0,   405,   406,   407,   408,   409,     0,   410,
     411,     0,     0,   412,   413,   414,   415,   416,     0,   417,
     418,   419,   420,   421,   422,   423,   424,     0,     0,   425,
     426,   427,   428,   429,     0,     0,   430,   431,   432,   433,
     434,   435,   436,     0,   437,     0,   439,   440,   441,   442,
       0,     0,   443,     0,     0,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   658,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    91,    92,    93,    94,    95,    96,    97,    98,
       0,    99,   100,   101,     3,     4,     0,     0,     0,     0,
       0,   102,   103,     0,   104,   105,   106,     0,   108,   109,
     110,   659,   660,     0,   661,   662,     0,   116,   117,   118,
     119,   120,   121,     0,     0,   122,   123,   663,   664,   126,
       0,   127,   128,   129,   130,   665,     0,     0,     0,   133,
     134,   135,   136,   137,     0,   139,   140,   141,     0,   142,
     143,   144,   145,   146,   147,     0,     0,   149,   150,   151,
       0,     0,     0,     0,     0,     0,     0,   153,   154,   155,
     156,   157,   158,   159,   666,   667,   162,     0,   163,     0,
     164,   165,   166,   167,   168,   169,     0,   170,   171,   172,
     173,   174,     0,     0,   175,   176,   177,   178,   179,     0,
     180,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,   189,   668,   191,   192,   193,   194,   669,     0,   196,
       0,   197,   198,   670,   200,     0,   201,     0,   202,     0,
       0,     0,   205,   206,   207,     0,   209,     0,   210,     0,
     671,   212,     0,   213,   214,   215,   216,   217,   218,     0,
     220,   221,   222,   223,     0,   224,   225,   226,   227,   228,
     229,     0,   230,     0,   672,   233,   234,   235,   236,   673,
     674,     0,   675,     0,   240,     0,     0,   243,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,   252,     0,
       0,   254,   255,   256,     0,     0,   257,   258,   259,   260,
     261,   676,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     677,     0,   678,   284,   285,   286,   679,     0,   288,   289,
       0,   291,     0,   680,   293,   681,   295,   296,   297,     0,
     298,   299,     0,     0,   300,   301,   302,     0,     0,   303,
     682,     0,   306,     0,   683,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,     0,   319,   320,   684,   322,
     323,   685,   325,   326,   327,     0,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   686,   338,   339,   340,   341,
       0,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,     0,   354,   355,     0,   357,   358,   359,
     687,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,     0,   372,   373,   374,   375,   376,     0,   377,
     688,   379,   380,   381,     0,   383,   384,   689,   386,     0,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   690,   399,   691,     0,   401,   402,     0,   403,     0,
     405,   406,   407,   408,   409,     0,   692,   693,     0,     0,
     412,   413,   694,   415,   695,     0,   417,   418,   696,   420,
     421,   422,   423,   424,     0,     0,   425,   426,   427,   428,
     429,     0,     0,   430,   431,   432,   433,   434,  1035,   698,
       0,   437,     0,   439,   440,   441,   442,     0,     0,   443,
       0,     0,   444,   445,   446,   447,   448,   449,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   461,
     462,   463,   464,   490,     0,   562,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    91,
      92,    93,    94,    95,    96,    97,    98,     0,    99,   100,
     101,     0,     0,     0,     0,     0,     0,     0,   102,   103,
       0,   104,   105,   106,     0,   108,   109,   110,   111,   112,
       0,   114,   115,     0,   116,   117,   118,   119,   120,   121,
       0,     0,   122,   123,   124,   125,   126,     0,   127,   128,
     129,   130,   131,     0,     0,     0,   133,   134,   135,   136,
     137,     0,   139,   140,   141,     0,   142,   143,   144,   145,
     146,   147,     0,     0,   149,   150,   151,     0,     0,     0,
       0,     0,     0,     0,   153,   154,   155,   156,   157,   158,
     159,   160,   161,   162,     0,   163,     0,   164,   165,   166,
     167,   168,   169,     0,   170,   171,   172,   173,   174,     0,
       0,   175,   176,   177,   178,   179,     0,   180,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,     0,   196,     0,   197,   198,
     199,   200,     0,   201,     0,   202,     0,     0,     0,   205,
     206,   207,     0,  1670,     0,   210,     0,   211,   212,     0,
     213,   214,   215,   216,   217,   218,     0,   220,   221,   222,
     223,     0,   224,   225,   226,   227,   228,   229,     0,   230,
       0,   232,   233,   234,   235,   236,   237,   238,     0,   239,
       0,   240,     0,     0,   243,     0,   245,   246,   247,   248,
     249,     0,     0,   250,     0,   252,     0,     0,   254,   255,
    1671,     0,     0,   257,   258,   259,   260,   261,   492,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,     0,   283,
     284,   285,   286,   287,     0,   288,   289,     0,   291,     0,
     292,   293,   294,   295,   296,   297,     0,   298,   299,     0,
       0,   300,   301,   302,     0,     0,   303,   304,     0,   306,
       0,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,     0,   319,   320,   321,   322,   323,   324,   325,
     326,   327,     0,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,     0,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
       0,   354,   355,     0,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,     0,
     372,   373,   374,   375,   376,     0,   377,   378,   379,   380,
     381,     0,   383,   384,   385,   386,     0,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   494,   399,
     400,     0,   401,   402,  1672,   403,     0,   405,  1673,   407,
    1674,   409,     0,   410,   411,     0,     0,   412,   413,   414,
     415,   416,     0,   417,   418,   419,   420,   421,   422,   423,
     424,     0,     0,   425,   426,  1675,   428,   429,     0,     0,
     430,   431,   432,   433,   434,   435,   436,     0,   437,     0,
     439,   440,   441,   442,     0,     0,   443,     0,     0,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     490,  2579,     0,     0,     0,     0,  2580,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    91,    92,    93,    94,
      95,    96,    97,    98,     0,    99,   100,   101,     0,     0,
       0,     0,     0,     0,     0,   102,   103,     0,   104,   105,
     106,     0,   108,   109,   110,   111,   112,     0,   114,   115,
       0,   116,   117,   118,   119,   120,   121,     0,     0,   122,
     123,   124,   125,   126,     0,   127,   128,   129,   130,   131,
       0,     0,     0,   133,   134,   135,   136,   137,     0,   139,
     140,   141,     0,   142,   143,   144,   145,   146,   147,     0,
       0,   149,   150,   151,     0,     0,     0,     0,     0,     0,
       0,   153,   154,   155,   156,   157,   158,   159,   160,   161,
     162,     0,   163,     0,   164,   165,   166,   167,   168,   169,
       0,   170,   171,   172,   173,   174,     0,     0,   175,   176,
     177,   178,   179,     0,   180,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,     0,   196,     0,   197,   198,   199,   200,     0,
     201,     0,   202,     0,     0,     0,   205,   206,   207,     0,
     209,     0,   210,     0,   211,   212,     0,   213,   214,   215,
     216,   217,   218,     0,   220,   221,   222,   223,     0,   224,
     225,   226,   227,   228,   229,     0,   230,     0,   232,   233,
     234,   235,   236,   237,   238,     0,   239,     0,   240,     0,
       0,   243,     0,   245,   246,   247,   248,   249,     0,     0,
     250,     0,   252,     0,     0,   254,   255,   256,     0,     0,
     257,   258,   259,   260,   261,   492,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,     0,   283,   284,   285,   286,
     287,     0,   288,   289,     0,   291,     0,   292,   293,   294,
     295,   296,   297,     0,   298,   299,     0,     0,   300,   301,
     302,     0,     0,   303,   304,     0,   306,     0,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,     0,
     319,   320,   321,   322,   323,   324,   325,   326,   327,     0,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,     0,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,     0,   354,   355,
       0,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,     0,   372,   373,   374,
     375,   376,     0,   377,   378,   379,   380,   381,     0,   383,
     384,   385,   386,     0,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   494,   399,   400,     0,   401,
     402,     0,   403,     0,   405,   406,   407,   408,   409,     0,
     410,   411,     0,     0,   412,   413,   414,   415,   416,     0,
     417,   418,   419,   420,   421,   422,   423,   424,     0,     0,
     425,   426,   427,   428,   429,     0,     0,   430,   431,   432,
     433,   434,   435,   436,     0,   437,     0,   439,   440,   441,
     442,     0,     0,   443,     0,     0,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   490,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    91,    92,    93,    94,    95,    96,    97,
      98,   491,    99,   100,   101,     0,     0,     0,     0,     0,
       0,     0,   102,   103,     0,   104,   105,   106,     0,   108,
     109,   110,   111,   112,     0,   114,   115,     0,   116,   117,
     118,   119,   120,   121,     0,     0,   122,   123,   124,   125,
     126,     0,   127,   128,   129,   130,   131,     0,     0,     0,
     133,   134,   135,   136,   137,     0,   139,   140,   141,     0,
     142,   143,   144,   145,   146,   147,     0,     0,   149,   150,
     151,     0,     0,     0,     0,     0,     0,     0,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,     0,   163,
       0,   164,   165,   166,   167,   168,   169,     0,   170,   171,
     172,   173,   174,     0,     0,   175,   176,   177,   178,   179,
       0,   180,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,     0,
     196,     0,   197,   198,   199,   200,     0,   201,     0,   202,
       0,     0,     0,   205,   206,   207,     0,   209,     0,   210,
       0,   211,   212,     0,   213,   214,   215,   216,   217,   218,
       0,   220,   221,   222,   223,     0,   224,   225,   226,   227,
     228,   229,     0,   230,     0,   232,   233,   234,   235,   236,
     237,   238,     0,   239,     0,   240,     0,     0,   243,     0,
     245,   246,   247,   248,   249,     0,     0,   250,     0,   252,
       0,     0,   254,   255,   256,     0,     0,   257,   258,   259,
     260,   261,   492,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,     0,   283,   284,   285,   286,   287,     0,   288,
     289,     0,   291,     0,   292,   293,   294,   295,   296,   297,
       0,   298,   299,     0,     0,   300,   301,   302,     0,     0,
     303,   304,     0,   306,     0,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,     0,   319,   320,   321,
     322,   323,   324,   493,   326,   327,     0,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,     0,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,     0,   354,   355,     0,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,     0,   372,   373,   374,   375,   376,     0,
     377,   378,   379,   380,   381,     0,   383,   384,   385,   386,
       0,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   494,   399,   400,     0,   401,   402,     0,   403,
       0,   405,   406,   407,   408,   409,     0,   410,   411,     0,
       0,   412,   413,   414,   415,   416,     0,   417,   418,   419,
     420,   421,   422,   423,   424,     0,     0,   425,   426,   427,
     428,   429,     0,     0,   430,   431,   432,   433,   434,   435,
     436,     0,   437,     0,   439,   440,   441,   442,     0,     0,
     443,     0,     0,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   490,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      91,    92,    93,    94,    95,    96,    97,    98,   542,    99,
     100,   101,     0,     0,     0,     0,     0,     0,     0,   102,
     103,     0,   104,   105,   106,     0,   108,   109,   110,   111,
     112,     0,   114,   115,     0,   116,   117,   118,   119,   120,
     121,     0,     0,   122,   123,   124,   125,   126,     0,   127,
     128,   129,   130,   131,     0,     0,     0,   133,   134,   135,
     136,   137,     0,   139,   140,   141,     0,   142,   143,   144,
     145,   146,   147,     0,     0,   149,   150,   151,     0,     0,
       0,     0,     0,     0,     0,   153,   154,   155,   156,   157,
     158,   159,   160,   161,   162,     0,   163,     0,   164,   165,
     166,   167,   168,   169,     0,   170,   171,   172,   173,   174,
       0,     0,   175,   176,   177,   178,   179,     0,   180,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,     0,   196,     0,   197,
     198,   199,   200,     0,   201,     0,   202,     0,     0,     0,
     205,   206,   207,     0,   209,     0,   210,     0,   211,   212,
       0,   213,   214,   215,   216,   217,   218,     0,   220,   221,
     222,   223,     0,   224,   225,   226,   227,   228,   229,     0,
     230,     0,   232,   233,   234,   235,   236,   237,   238,     0,
     239,     0,   240,     0,     0,   243,     0,   245,   246,   247,
     248,   249,     0,     0,   250,     0,   252,     0,     0,   254,
     255,   256,     0,     0,   257,   258,   259,   260,   261,   492,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,     0,
     283,   284,   285,   286,   287,     0,   288,   289,     0,   291,
       0,   292,   293,   294,   295,   296,   297,     0,   298,   299,
       0,     0,   300,   301,   302,     0,     0,   303,   304,     0,
     306,     0,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,     0,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,     0,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,     0,   354,   355,     0,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
       0,   372,   373,   374,   375,   376,     0,   377,   378,   379,
     380,   381,     0,   383,   384,   385,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   494,
     399,   400,     0,   401,   402,     0,   403,     0,   405,   406,
     407,   408,   409,     0,   543,   411,     0,     0,   544,   413,
     414,   415,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,     0,     0,   425,   426,   427,   428,   429,     0,
       0,   430,   431,   432,   433,   434,   435,   436,     0,   437,
       0,   439,   440,   441,   442,     0,     0,   443,     0,     0,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   490,     0,   562,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    91,    92,    93,
      94,    95,    96,    97,    98,     0,    99,   100,   101,     0,
       0,     0,     0,     0,     0,     0,   102,   103,     0,   104,
     105,   106,     0,   108,   109,   110,   111,   112,     0,   114,
     115,     0,   116,   117,   118,   119,   120,   121,     0,     0,
     122,   123,   124,   125,   126,     0,   127,   128,   129,   130,
     131,     0,     0,     0,   133,   134,   135,   136,   137,     0,
     139,   140,   141,     0,   142,   143,   144,   145,   146,   147,
       0,     0,   149,   150,   151,     0,     0,     0,     0,     0,
       0,     0,   153,   154,   155,   156,   157,   158,   159,   160,
     161,   162,     0,   163,     0,   164,   165,   166,   167,   168,
     169,     0,   170,   171,   172,   173,   174,     0,     0,   175,
     176,   177,   178,   179,     0,   180,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,     0,   196,     0,   197,   198,   199,   200,
       0,   201,     0,   202,     0,     0,     0,   205,   206,   207,
       0,   209,     0,   210,     0,   211,   212,     0,   213,   214,
     215,   216,   217,   603,     0,   220,   221,   222,   223,     0,
     224,   225,   226,   227,   228,   229,     0,   230,     0,   232,
     233,   234,   235,   236,   237,   238,     0,   239,     0,   240,
       0,     0,   243,     0,   245,   246,   247,   248,   249,     0,
       0,   250,     0,   252,     0,     0,   254,   255,   256,     0,
       0,   257,   258,   259,   260,   261,   492,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,     0,   283,   284,   285,
     286,   287,     0,   288,   289,     0,   291,     0,   292,   293,
     294,   295,   296,   297,     0,   298,   299,     0,     0,   300,
     301,   302,     0,     0,   303,   304,     0,   306,     0,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
       0,   319,   320,   321,   322,   323,   324,   325,   326,   327,
       0,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,     0,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,     0,   354,
     355,     0,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,     0,   372,   373,
     374,   375,   376,     0,   377,   378,   379,   380,   381,     0,
     383,   384,   385,   386,     0,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   494,   399,   400,     0,
     401,   402,     0,   403,     0,   405,   406,   407,   408,   409,
       0,   410,   411,     0,     0,   412,   413,   414,   415,   416,
       0,   417,   418,   419,   420,   421,   422,   423,   424,     0,
       0,   425,   426,   427,   428,   429,     0,     0,   430,   431,
     432,   433,   434,   435,   436,     0,   437,     0,   439,   440,
     441,   442,     0,     0,   443,     0,     0,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   490,     0,
     562,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    91,    92,    93,    94,    95,    96,
      97,    98,     0,    99,   100,   101,     0,     0,     0,     0,
       0,     0,     0,   102,   103,     0,   104,   105,   106,     0,
     108,   109,   110,   111,   112,     0,   114,   115,     0,   116,
     117,   118,   119,   120,   121,     0,     0,   122,   123,   124,
     125,   126,     0,   127,   128,   129,   130,   131,     0,     0,
       0,   133,   134,   135,   136,   137,     0,   139,   140,   141,
       0,   142,   143,   144,   145,   146,   147,     0,     0,   149,
     150,   151,     0,     0,     0,     0,     0,     0,     0,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,     0,
     163,     0,   164,   165,   166,   167,   168,   169,     0,   170,
     171,   172,   173,   174,     0,     0,   175,   176,   177,   178,
     179,     0,   180,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
       0,   196,     0,   197,   198,   199,   200,     0,   201,     0,
     202,     0,     0,     0,   205,   206,   207,     0,   209,     0,
     210,     0,   211,   212,     0,   213,   214,   215,   216,   217,
     606,     0,   220,   221,   222,   223,     0,   224,   225,   226,
     227,   228,   229,     0,   230,     0,   232,   233,   234,   235,
     236,   237,   238,     0,   239,     0,   240,     0,     0,   243,
       0,   245,   246,   247,   248,   249,     0,     0,   250,     0,
     252,     0,     0,   254,   255,   256,     0,     0,   257,   258,
     259,   260,   261,   492,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,     0,   283,   284,   285,   286,   287,     0,
     288,   289,     0,   291,     0,   292,   293,   294,   295,   296,
     297,     0,   298,   299,     0,     0,   300,   301,   302,     0,
       0,   303,   304,     0,   306,     0,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,     0,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,     0,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,     0,   354,   355,     0,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,     0,   372,   373,   374,   375,   376,
       0,   377,   378,   379,   380,   381,     0,   383,   384,   385,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   494,   399,   400,     0,   401,   402,     0,
     403,     0,   405,   406,   407,   408,   409,     0,   410,   411,
       0,     0,   412,   413,   414,   415,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,     0,     0,   425,   426,
     427,   428,   429,     0,     0,   430,   431,   432,   433,   434,
     435,   436,     0,   437,     0,   439,   440,   441,   442,     0,
       0,   443,     0,     0,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   490,     0,   562,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    91,    92,    93,    94,    95,    96,    97,    98,     0,
      99,   100,   101,     0,     0,     0,     0,     0,     0,     0,
     102,   103,     0,   104,   105,   106,     0,   108,   109,   110,
     111,   112,     0,   114,   115,     0,   116,   117,   118,   119,
     120,   121,     0,     0,   122,   123,   124,   125,   126,     0,
     127,   128,   129,   130,   131,     0,     0,     0,   133,   134,
     135,   136,   137,     0,   139,   140,   141,     0,   142,   143,
     144,   145,   146,   147,     0,     0,   149,   150,   151,     0,
       0,     0,     0,     0,     0,     0,   153,   154,   155,   156,
     157,   158,   159,   160,   161,   162,     0,   163,     0,   164,
     165,   166,   167,   168,   169,     0,   170,   171,   172,   173,
     174,     0,     0,   175,   176,   177,   178,   179,     0,   180,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,     0,   196,     0,
     197,   198,   199,   200,     0,   201,     0,   202,     0,     0,
       0,   205,   206,   207,     0,   209,     0,   210,     0,   211,
     212,     0,   213,   214,   215,   216,   217,   610,     0,   220,
     221,   222,   223,     0,   224,   225,   226,   227,   228,   229,
       0,   230,     0,   232,   233,   234,   235,   236,   237,   238,
       0,   239,     0,   240,     0,     0,   243,     0,   245,   246,
     247,   248,   249,     0,     0,   250,     0,   252,     0,     0,
     254,   255,   256,     0,     0,   257,   258,   259,   260,   261,
     492,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
       0,   283,   284,   285,   286,   287,     0,   288,   289,     0,
     291,     0,   292,   293,   294,   295,   296,   297,     0,   298,
     299,     0,     0,   300,   301,   302,     0,     0,   303,   304,
       0,   306,     0,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,     0,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,     0,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,     0,   354,   355,     0,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,     0,   372,   373,   374,   375,   376,     0,   377,   378,
     379,   380,   381,     0,   383,   384,   385,   386,     0,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     494,   399,   400,     0,   401,   402,     0,   403,     0,   405,
     406,   407,   408,   409,     0,   410,   411,     0,     0,   412,
     413,   414,   415,   416,     0,   417,   418,   419,   420,   421,
     422,   423,   424,     0,     0,   425,   426,   427,   428,   429,
       0,     0,   430,   431,   432,   433,   434,   435,   436,     0,
     437,     0,   439,   440,   441,   442,     0,     0,   443,     0,
       0,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   490,     0,   562,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    91,    92,
      93,    94,    95,    96,    97,    98,     0,    99,   100,   101,
       0,     0,     0,     0,     0,     0,     0,   102,   103,     0,
     104,   105,   106,     0,   108,   109,   110,   111,   112,     0,
     114,   115,     0,   116,   117,   118,   119,   120,   121,     0,
       0,   122,   123,   124,   125,   126,     0,   127,   128,   129,
     130,   131,     0,     0,     0,   133,   134,   135,   136,   137,
       0,   139,   140,   141,     0,   142,   143,   144,   145,   146,
     147,     0,     0,   149,   150,   151,     0,     0,     0,     0,
       0,     0,     0,   153,   154,   155,   156,   157,   158,   159,
     160,   161,   162,     0,   163,     0,   164,   165,   166,   167,
     168,   169,     0,   170,   171,   172,   173,   174,     0,     0,
     175,   176,   177,   178,   179,     0,   180,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,     0,   196,     0,   197,   198,   199,
     200,     0,   201,     0,   202,     0,     0,     0,   205,   206,
     207,     0,   209,     0,   210,     0,   211,   212,     0,   213,
     214,   215,   216,   217,   218,     0,   220,   221,   222,   223,
       0,   224,   225,   226,   227,   228,   229,     0,   230,     0,
     232,   233,   234,   235,   236,   237,   238,     0,   239,     0,
     240,     0,     0,   243,     0,   245,   246,   247,   248,   249,
       0,     0,   250,     0,   252,     0,     0,   254,   255,   256,
       0,     0,   257,   258,   259,   260,   261,   492,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,     0,   283,   284,
     285,   286,   287,     0,   288,   289,     0,   291,     0,   292,
     293,   294,   295,   296,   297,     0,   298,   299,     0,     0,
     300,   301,   302,     0,     0,   303,   304,     0,   306,     0,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,     0,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,     0,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,     0,
     354,   355,     0,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,     0,   372,
     373,   374,   375,   376,     0,   377,   378,   379,   380,   381,
       0,   383,   384,   385,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   494,   399,   400,
       0,   401,   402,     0,   403,     0,   405,   406,   407,   408,
     409,     0,   410,   411,     0,     0,   412,   413,   414,   415,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   424,
       0,     0,   425,   426,   427,   428,   429,     0,     0,   430,
     431,   432,   433,   434,   435,   436,     0,   437,     0,   439,
     440,   441,   442,     0,     0,   443,     0,     0,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   490,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    91,    92,    93,    94,    95,
      96,    97,    98,   638,    99,   100,   101,     0,     0,     0,
       0,     0,     0,     0,   102,   103,     0,   104,   105,   106,
       0,   108,   109,   110,   111,   112,     0,   114,   115,     0,
     116,   117,   118,   119,   120,   121,     0,     0,   122,   123,
     124,   125,   126,     0,   127,   128,   129,   130,   131,     0,
       0,     0,   133,   134,   135,   136,   137,     0,   139,   140,
     141,     0,   142,   143,   144,   145,   146,   147,     0,     0,
     149,   150,   151,     0,     0,     0,     0,     0,     0,     0,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
       0,   163,     0,   164,   165,   166,   167,   168,   169,     0,
     170,   171,   172,   173,   174,     0,     0,   175,   176,   177,
     178,   179,     0,   180,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,     0,   196,     0,   197,   198,   199,   200,     0,   201,
       0,   202,     0,     0,     0,   205,   206,   207,     0,   209,
       0,   210,     0,   211,   212,     0,   213,   214,   215,   216,
     217,   218,     0,   220,   221,   222,   223,     0,   224,   225,
     226,   227,   228,   229,     0,   230,     0,   232,   233,   234,
     235,   236,   237,   238,     0,   239,     0,   240,     0,     0,
     243,     0,   245,   246,   247,   248,   249,     0,     0,   250,
       0,   252,     0,     0,   254,   255,   256,     0,     0,   257,
     258,   259,   260,   261,   492,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,     0,   283,   284,   285,   286,   287,
       0,   288,   289,     0,   291,     0,   292,   293,   294,   295,
     296,   297,     0,   298,   299,     0,     0,   300,   301,   302,
       0,     0,   303,   304,     0,   306,     0,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,     0,   319,
     320,   321,   322,   323,   324,   325,   326,   327,     0,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,     0,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,     0,   354,   355,     0,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,     0,   372,   373,   374,   375,
     376,     0,   377,   378,   379,   380,   381,     0,   383,   384,
     385,   386,     0,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   494,   399,   400,     0,   401,   402,
       0,   403,     0,   405,   406,   407,   408,   409,     0,   410,
     411,     0,     0,   412,   413,   414,   415,   416,     0,   417,
     418,   419,   420,   421,   422,   423,   424,     0,     0,   425,
     426,   427,   428,   429,     0,     0,   430,   431,   432,   433,
     434,   435,   436,     0,   437,     0,   439,   440,   441,   442,
       0,     0,   443,     0,     0,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   490,     0,   562,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    91,    92,    93,    94,    95,    96,    97,    98,
       0,    99,   100,   101,     0,     0,     0,     0,     0,     0,
       0,   102,   103,     0,   104,   105,   106,     0,   108,   109,
     110,   111,   112,     0,   114,   115,     0,   116,   117,   118,
     119,   120,   121,     0,     0,   122,   123,   124,   125,   126,
       0,   127,   128,   129,   130,   131,     0,     0,     0,   133,
     134,   135,   136,   137,     0,   139,   140,   141,     0,   142,
     143,   144,   145,   146,   147,     0,     0,   149,   150,   151,
       0,     0,     0,     0,     0,     0,     0,   153,   154,   155,
     156,   157,   158,   159,   160,   161,   162,     0,   163,     0,
     164,   165,   166,   167,   168,   169,     0,   170,   171,   172,
     173,   174,     0,     0,   175,   176,   177,   178,   179,     0,
     180,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,     0,   196,
       0,   197,   198,   199,   200,     0,   201,     0,   202,     0,
       0,     0,   205,   206,   207,     0,   209,     0,   210,     0,
     211,   212,     0,   213,   214,   215,   216,   217,  1058,     0,
     220,   221,   222,   223,     0,   224,   225,   226,   227,   228,
     229,     0,   230,     0,   232,   233,   234,   235,   236,   237,
     238,     0,   239,     0,   240,     0,     0,   243,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,   252,     0,
       0,   254,   255,   256,     0,     0,   257,   258,   259,   260,
     261,   492,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,     0,   283,   284,   285,   286,   287,     0,   288,   289,
       0,   291,     0,   292,   293,   294,   295,   296,   297,     0,
     298,   299,     0,     0,   300,   301,   302,     0,     0,   303,
     304,     0,   306,     0,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,     0,   319,   320,   321,   322,
     323,   324,   325,   326,   327,     0,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
       0,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,     0,   354,   355,     0,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,     0,   372,   373,   374,   375,   376,     0,   377,
     378,   379,   380,   381,     0,   383,   384,   385,   386,     0,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   494,   399,   400,     0,   401,   402,     0,   403,     0,
     405,   406,   407,   408,   409,     0,   410,   411,     0,     0,
     412,   413,   414,   415,   416,     0,   417,   418,   419,   420,
     421,   422,   423,   424,     0,     0,   425,   426,   427,   428,
     429,     0,     0,   430,   431,   432,   433,   434,   435,   436,
       0,   437,     0,   439,   440,   441,   442,     0,     0,   443,
       0,     0,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   490,     0,   562,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    91,
      92,    93,    94,    95,    96,    97,    98,     0,    99,   100,
     101,     0,     0,     0,     0,     0,     0,     0,   102,   103,
       0,   104,   105,   106,     0,   108,   109,   110,   111,   112,
       0,   114,   115,     0,   116,   117,   118,   119,   120,   121,
       0,     0,   122,   123,   124,   125,   126,     0,   127,   128,
     129,   130,   131,     0,     0,     0,   133,   134,   135,   136,
     137,     0,   139,   140,   141,     0,   142,   143,   144,   145,
     146,   147,     0,     0,   149,   150,   151,     0,     0,     0,
       0,     0,     0,     0,   153,   154,   155,   156,   157,   158,
     159,   160,   161,   162,     0,   163,     0,   164,   165,   166,
     167,   168,   169,     0,   170,   171,   172,   173,   174,     0,
       0,   175,   176,   177,   178,   179,     0,   180,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,     0,   196,     0,   197,   198,
     199,   200,     0,   201,     0,   202,     0,     0,     0,   205,
     206,   207,     0,   209,     0,   210,     0,   211,   212,     0,
     213,   214,   215,   216,   217,  1060,     0,   220,   221,   222,
     223,     0,   224,   225,   226,   227,   228,   229,     0,   230,
       0,   232,   233,   234,   235,   236,   237,   238,     0,   239,
       0,   240,     0,     0,   243,     0,   245,   246,   247,   248,
     249,     0,     0,   250,     0,   252,     0,     0,   254,   255,
     256,     0,     0,   257,   258,   259,   260,   261,   492,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,     0,   283,
     284,   285,   286,   287,     0,   288,   289,     0,   291,     0,
     292,   293,   294,   295,   296,   297,     0,   298,   299,     0,
       0,   300,   301,   302,     0,     0,   303,   304,     0,   306,
       0,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,     0,   319,   320,   321,   322,   323,   324,   325,
     326,   327,     0,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,     0,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
       0,   354,   355,     0,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,     0,
     372,   373,   374,   375,   376,     0,   377,   378,   379,   380,
     381,     0,   383,   384,   385,   386,     0,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   494,   399,
     400,     0,   401,   402,     0,   403,     0,   405,   406,   407,
     408,   409,     0,   410,   411,     0,     0,   412,   413,   414,
     415,   416,     0,   417,   418,   419,   420,   421,   422,   423,
     424,     0,     0,   425,   426,   427,   428,   429,     0,     0,
     430,   431,   432,   433,   434,   435,   436,     0,   437,     0,
     439,   440,   441,   442,     0,     0,   443,     0,     0,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     490,     0,   562,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    91,    92,    93,    94,
      95,    96,    97,    98,     0,    99,   100,   101,     0,     0,
       0,     0,     0,     0,     0,   102,   103,     0,   104,   105,
     106,     0,   108,   109,   110,   111,   112,     0,   114,   115,
       0,   116,   117,   118,   119,   120,   121,     0,     0,   122,
     123,   124,   125,   126,     0,   127,   128,   129,   130,   131,
       0,     0,     0,   133,   134,   135,   136,   137,     0,   139,
     140,   141,     0,   142,   143,   144,   145,   146,   147,     0,
       0,   149,   150,   151,     0,     0,     0,     0,     0,     0,
       0,   153,   154,   155,   156,   157,   158,   159,   160,   161,
     162,     0,   163,     0,   164,   165,   166,   167,   168,   169,
       0,   170,   171,   172,   173,   174,     0,     0,   175,   176,
     177,   178,   179,     0,   180,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,     0,   196,     0,   197,   198,   199,   200,     0,
     201,     0,   202,     0,     0,     0,   205,   206,   207,     0,
     209,     0,   210,     0,   211,   212,     0,   213,   214,   215,
     216,   217,  1465,     0,   220,   221,   222,   223,     0,   224,
     225,   226,   227,   228,   229,     0,   230,     0,   232,   233,
     234,   235,   236,   237,   238,     0,   239,     0,   240,     0,
       0,   243,     0,   245,   246,   247,   248,   249,     0,     0,
     250,     0,   252,     0,     0,   254,   255,   256,     0,     0,
     257,   258,   259,   260,   261,   492,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,     0,   283,   284,   285,   286,
     287,     0,   288,   289,     0,   291,     0,   292,   293,   294,
     295,   296,   297,     0,   298,   299,     0,     0,   300,   301,
     302,     0,     0,   303,   304,     0,   306,     0,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,     0,
     319,   320,   321,   322,   323,   324,   325,   326,   327,     0,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,     0,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,     0,   354,   355,
       0,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,     0,   372,   373,   374,
     375,   376,     0,   377,   378,   379,   380,   381,     0,   383,
     384,   385,   386,     0,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   494,   399,   400,     0,   401,
     402,     0,   403,     0,   405,   406,   407,   408,   409,     0,
     410,   411,     0,     0,   412,   413,   414,   415,   416,     0,
     417,   418,   419,   420,   421,   422,   423,   424,     0,     0,
     425,   426,   427,   428,   429,     0,     0,   430,   431,   432,
     433,   434,   435,   436,     0,   437,     0,   439,   440,   441,
     442,     0,     0,   443,     0,     0,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   490,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    91,    92,    93,    94,    95,    96,    97,
      98,     0,    99,   100,   101,     0,     0,     0,     0,     0,
    2233,     0,   102,   103,     0,   104,   105,   106,     0,   108,
     109,   110,   111,   112,     0,   114,   115,     0,   116,   117,
     118,   119,   120,   121,     0,     0,   122,   123,   124,   125,
     126,     0,   127,   128,   129,   130,   131,     0,     0,     0,
     133,   134,   135,   136,   137,     0,   139,   140,   141,     0,
     142,   143,   144,   145,   146,   147,     0,     0,   149,   150,
     151,     0,     0,     0,     0,     0,     0,     0,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,     0,   163,
       0,   164,   165,   166,   167,   168,   169,     0,   170,   171,
     172,   173,   174,     0,     0,   175,   176,   177,   178,   179,
       0,   180,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,     0,
     196,     0,   197,   198,   199,   200,     0,   201,     0,   202,
       0,     0,     0,   205,   206,   207,     0,   209,     0,   210,
       0,   211,   212,     0,   213,   214,   215,   216,   217,   218,
       0,   220,   221,   222,   223,     0,   224,   225,   226,   227,
     228,   229,     0,   230,     0,   232,   233,   234,   235,   236,
     237,   238,     0,   239,     0,   240,     0,     0,   243,     0,
     245,   246,   247,   248,   249,     0,     0,   250,     0,   252,
       0,     0,   254,   255,   256,     0,     0,   257,   258,   259,
     260,   261,   492,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,     0,   283,   284,   285,   286,   287,     0,   288,
     289,     0,   291,     0,   292,   293,   294,   295,   296,   297,
       0,   298,   299,     0,     0,   300,   301,   302,     0,     0,
     303,   304,     0,   306,     0,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,     0,   319,   320,   321,
     322,   323,   324,   325,   326,   327,     0,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,     0,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,     0,   354,   355,     0,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,     0,   372,   373,   374,   375,   376,     0,
     377,   378,   379,   380,   381,     0,   383,   384,   385,   386,
       0,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   494,   399,   400,     0,   401,   402,     0,   403,
       0,   405,   406,   407,   408,   409,     0,   410,   411,     0,
       0,   412,   413,   414,   415,   416,     0,   417,   418,   419,
     420,   421,   422,   423,   424,     0,     0,   425,   426,   427,
     428,   429,     0,     0,   430,   431,   432,   433,   434,   435,
     436,     0,   437,     0,   439,   440,   441,   442,     0,     0,
     443,     0,     0,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   490,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      91,    92,    93,    94,    95,    96,    97,    98,     0,    99,
     100,   101,     0,     0,     0,     0,     0,  2247,     0,   102,
     103,     0,   104,   105,   106,     0,   108,   109,   110,   111,
     112,     0,   114,   115,     0,   116,   117,   118,   119,   120,
     121,     0,     0,   122,   123,   124,   125,   126,     0,   127,
     128,   129,   130,   131,     0,     0,     0,   133,   134,   135,
     136,   137,     0,   139,   140,   141,     0,   142,   143,   144,
     145,   146,   147,     0,     0,   149,   150,   151,     0,     0,
       0,     0,     0,     0,     0,   153,   154,   155,   156,   157,
     158,   159,   160,   161,   162,     0,   163,     0,   164,   165,
     166,   167,   168,   169,     0,   170,   171,   172,   173,   174,
       0,     0,   175,   176,   177,   178,   179,     0,   180,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,     0,   196,     0,   197,
     198,   199,   200,     0,   201,     0,   202,     0,     0,     0,
     205,   206,   207,     0,   209,     0,   210,     0,   211,   212,
       0,   213,   214,   215,   216,   217,   218,     0,   220,   221,
     222,   223,     0,   224,   225,   226,   227,   228,   229,     0,
     230,     0,   232,   233,   234,   235,   236,   237,   238,     0,
     239,     0,   240,     0,     0,   243,     0,   245,   246,   247,
     248,   249,     0,     0,   250,     0,   252,     0,     0,   254,
     255,   256,     0,     0,   257,   258,   259,   260,   261,   492,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,     0,
     283,   284,   285,   286,   287,     0,   288,   289,     0,   291,
       0,   292,   293,   294,   295,   296,   297,     0,   298,   299,
       0,     0,   300,   301,   302,     0,     0,   303,   304,     0,
     306,     0,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,     0,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,     0,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,     0,   354,   355,     0,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
       0,   372,   373,   374,   375,   376,     0,   377,   378,   379,
     380,   381,     0,   383,   384,   385,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   494,
     399,   400,     0,   401,   402,     0,   403,     0,   405,   406,
     407,   408,   409,     0,   410,   411,     0,     0,   412,   413,
     414,   415,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,     0,     0,   425,   426,   427,   428,   429,     0,
       0,   430,   431,   432,   433,   434,   435,   436,     0,   437,
       0,   439,   440,   441,   442,     0,     0,   443,     0,     0,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   490,     0,   562,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    91,    92,    93,
      94,    95,    96,    97,    98,     0,    99,   100,   101,     0,
       0,     0,     0,     0,     0,     0,   102,   103,     0,   104,
     105,   106,     0,   108,   109,   110,   111,   112,     0,   114,
     115,     0,   116,   117,   118,   119,   120,   121,     0,     0,
     122,   123,   124,   125,   126,     0,   127,   128,   129,   130,
     131,     0,     0,     0,   133,   134,   135,   136,   137,     0,
     139,   140,   141,     0,   142,   143,   144,   145,   146,   147,
       0,     0,   149,   150,   151,     0,     0,     0,     0,     0,
       0,     0,   153,   154,   155,   156,   157,   158,   159,   160,
     161,   162,     0,   163,     0,   164,   165,   166,   167,   168,
     169,     0,   170,   171,   172,   173,   174,     0,     0,   175,
     176,   177,   178,   179,     0,   180,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,     0,   196,     0,   197,   198,   199,   200,
       0,   201,     0,   202,     0,     0,     0,   205,   206,   207,
       0,   209,     0,   210,     0,   211,   212,     0,   213,   214,
     215,   216,   217,  2376,     0,   220,   221,   222,   223,     0,
     224,   225,   226,   227,   228,   229,     0,   230,     0,   232,
     233,   234,   235,   236,   237,   238,     0,   239,     0,   240,
       0,     0,   243,     0,   245,   246,   247,   248,   249,     0,
       0,   250,     0,   252,     0,     0,   254,   255,   256,     0,
       0,   257,   258,   259,   260,   261,   492,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,     0,   283,   284,   285,
     286,   287,     0,   288,   289,     0,   291,     0,   292,   293,
     294,   295,   296,   297,     0,   298,   299,     0,     0,   300,
     301,   302,     0,     0,   303,   304,     0,   306,     0,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
       0,   319,   320,   321,   322,   323,   324,   325,   326,   327,
       0,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,     0,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,     0,   354,
     355,     0,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,     0,   372,   373,
     374,   375,   376,     0,   377,   378,   379,   380,   381,     0,
     383,   384,   385,   386,     0,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   494,   399,   400,     0,
     401,   402,     0,   403,     0,   405,   406,   407,   408,   409,
       0,   410,   411,     0,     0,   412,   413,   414,   415,   416,
       0,   417,   418,   419,   420,   421,   422,   423,   424,     0,
       0,   425,   426,   427,   428,   429,     0,     0,   430,   431,
     432,   433,   434,   435,   436,     0,   437,     0,   439,   440,
     441,   442,     0,     0,   443,     0,     0,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   490,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    91,    92,    93,    94,    95,    96,
      97,    98,     0,    99,   100,   101,     0,     0,     0,     0,
       0,     0,     0,   102,   103,     0,   104,   105,   106,     0,
     108,   109,   110,   111,   112,     0,   114,   115,     0,   116,
     117,   118,   119,   120,   121,     0,     0,   122,   123,   124,
     125,   126,     0,   127,   128,   129,   130,   131,     0,     0,
       0,   133,   134,   135,   136,   137,     0,   139,   140,   141,
       0,   142,   143,   144,   145,   146,   147,     0,     0,   149,
     150,   151,     0,     0,     0,     0,     0,     0,     0,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,     0,
     163,     0,   164,   165,   166,   167,   168,   169,     0,   170,
     171,   172,   173,   174,     0,     0,   175,   176,   177,   178,
     179,     0,   180,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
       0,   196,     0,   197,   198,   199,   200,     0,   201,     0,
     202,     0,     0,     0,   205,   206,   207,     0,   209,     0,
     210,     0,   211,   212,     0,   213,   214,   215,   216,   217,
     218,     0,   220,   221,   222,   223,     0,   224,   225,   226,
     227,   228,   229,     0,   230,     0,   232,   233,   234,   235,
     236,   237,   238,     0,   239,     0,   240,     0,     0,   243,
       0,   245,   246,   247,   248,   249,     0,     0,   250,     0,
     252,     0,     0,   254,   255,   256,     0,     0,   257,   258,
     259,   260,   261,   492,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,     0,   283,   284,   285,   286,   287,     0,
     288,   289,     0,   291,     0,   292,   293,   294,   295,   296,
     297,     0,   298,   299,     0,     0,   300,   301,   302,     0,
       0,   303,   304,     0,   306,     0,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,     0,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,     0,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,     0,   354,   355,     0,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,     0,   372,   373,   374,   375,   376,
       0,   377,   378,   379,   380,   381,     0,   383,   384,   385,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   494,   399,   400,     0,   401,   402,     0,
     403,     0,   405,   406,   407,   408,   409,     0,   410,   411,
       0,     0,   412,   413,   414,   415,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,     0,     0,   425,   426,
     427,   428,   429,     0,     0,   430,   431,   432,   433,   434,
     435,   436,     0,   437,     0,   439,   440,   441,   442,     0,
       0,   443,     0,     0,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   490,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    91,    92,    93,    94,    95,    96,    97,    98,     0,
      99,   100,   101,     0,     0,     0,     0,     0,     0,     0,
     102,   103,     0,   104,   105,   106,     0,   108,   109,   110,
     111,   112,     0,   114,   115,     0,   116,   117,   118,   119,
     120,   121,     0,     0,   122,   123,   124,   125,   126,     0,
     127,   128,   129,   130,   131,     0,     0,     0,   133,   134,
     135,   136,   137,     0,   139,   140,   141,     0,   142,   143,
     144,   145,   146,   147,     0,     0,   149,   150,   151,     0,
       0,     0,     0,     0,     0,     0,   153,   154,   155,   156,
     157,   158,   159,   160,   161,   162,     0,   163,     0,   164,
     165,   166,   167,   168,   169,     0,   170,   171,   172,   173,
     174,     0,     0,   175,   176,   177,   178,   179,     0,   180,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,     0,   196,     0,
     197,   198,   199,   200,     0,   201,     0,   202,     0,     0,
       0,   205,   206,   207,     0,   209,     0,   210,     0,   211,
     212,     0,   213,   214,   215,   216,   217,   218,     0,   220,
     221,   222,   223,     0,   224,   225,   226,   227,   228,   229,
       0,   230,     0,   232,   233,   234,   235,   236,   237,   238,
       0,   239,     0,   240,     0,     0,   243,     0,   245,   246,
     247,   248,   249,     0,     0,   250,     0,   252,     0,     0,
     254,   255,   554,     0,     0,   257,   258,   259,   260,   261,
     492,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
       0,   283,   284,   285,   286,   287,     0,   288,   289,     0,
     291,     0,   292,   293,   294,   295,   296,   297,     0,   298,
     299,     0,     0,   300,   301,   302,     0,     0,   303,   304,
       0,   306,     0,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,     0,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,     0,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,     0,   354,   355,     0,   357,   358,   359,   360,
     361,   362,   363,   364,   555,   366,   367,   368,   369,   370,
     371,     0,   372,   373,   374,   375,   556,     0,   377,   378,
     379,   380,   381,     0,   383,   384,   385,   386,     0,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     494,   399,   400,     0,   401,   402,     0,   403,     0,   405,
     406,   407,   408,   409,     0,   557,   411,     0,     0,   412,
     413,   414,   415,   416,     0,   417,   418,   419,   420,   421,
     422,   423,   424,     0,     0,   425,   426,   427,   428,   429,
       0,     0,   430,   431,   432,   433,   434,   435,   436,     0,
     437,     0,   439,   440,   441,   442,     0,     0,   443,     0,
       0,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   490,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    91,    92,
      93,    94,    95,    96,    97,    98,     0,    99,   100,   101,
       0,     0,     0,     0,     0,     0,     0,   102,   103,     0,
     104,   105,   106,     0,   108,   109,   110,   111,   112,     0,
     114,   115,     0,   116,   117,   118,   119,   120,   121,     0,
       0,   122,   123,   124,   125,   126,     0,   127,   128,   129,
     130,   131,     0,     0,     0,   133,   134,   135,   136,   137,
       0,   139,   140,   141,     0,   142,   143,   144,   145,   146,
     147,     0,     0,   149,   150,   151,     0,     0,     0,     0,
       0,     0,     0,   153,   154,   155,   156,   157,   158,   159,
     160,   161,   162,     0,   163,     0,   164,   165,   166,   167,
     168,   169,     0,   170,   171,   172,   173,   174,     0,     0,
     175,   176,   177,   178,   179,     0,   180,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,     0,   196,     0,   197,   198,   199,
     200,     0,   201,     0,   202,     0,     0,     0,   205,   206,
     207,     0,   209,     0,   210,     0,   211,   212,     0,   213,
     214,   215,   216,   217,   218,     0,   220,   221,   222,   223,
       0,   224,   225,   226,   227,   228,   229,     0,   230,     0,
     232,   233,   234,   235,   236,   237,   238,     0,   239,     0,
     240,     0,     0,   243,     0,   245,   246,   247,   248,   249,
       0,     0,   250,     0,   252,     0,     0,   254,   255,   256,
       0,     0,   257,   258,   259,   260,   261,   492,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,     0,   283,   284,
     285,   286,   287,     0,   288,   289,     0,   291,     0,   292,
     293,   294,   295,   296,   297,     0,   298,   299,     0,     0,
     300,   301,   302,     0,     0,   303,   304,     0,   306,     0,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,     0,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   572,   341,     0,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,     0,
     354,   355,     0,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,     0,   372,
     373,   374,   375,   376,     0,   377,   378,   379,   380,   381,
       0,   383,   384,   385,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   494,   399,   400,
       0,   401,   402,     0,   403,     0,   405,   406,   407,   408,
     409,     0,   410,   411,     0,     0,   412,   413,   414,   415,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   424,
       0,     0,   425,   426,   427,   428,   429,     0,     0,   430,
     431,   432,   433,   434,   435,   436,     0,   437,     0,   439,
     440,   441,   442,     0,     0,   443,     0,     0,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   490,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    91,    92,    93,    94,    95,
      96,    97,    98,     0,    99,   100,   101,     0,     0,     0,
       0,     0,     0,     0,   102,   103,     0,   104,   105,   106,
       0,   108,   109,   110,   111,   112,     0,   114,   115,     0,
     116,   117,   118,   119,   120,   121,     0,     0,   122,   123,
     124,   125,   126,     0,   127,   128,   129,   130,   131,     0,
       0,     0,   133,   134,   135,   136,   137,     0,   139,   140,
     141,     0,   142,   143,   144,   145,   146,   147,     0,     0,
     149,   150,   151,     0,     0,     0,     0,     0,     0,     0,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
       0,   163,     0,   164,   165,   166,   167,   168,   169,     0,
     170,   171,   172,   173,   174,     0,     0,   175,   176,   177,
     178,   179,     0,   180,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,     0,   196,     0,   197,   198,   199,   200,     0,   201,
       0,   202,     0,     0,     0,   205,   206,   207,     0,   209,
       0,   210,     0,   211,   212,     0,   213,   214,   215,   216,
     217,   628,     0,   220,   221,   222,   223,     0,   224,   225,
     226,   227,   228,   229,     0,   230,     0,   232,   233,   234,
     235,   236,   237,   238,     0,   239,     0,   240,     0,     0,
     243,     0,   245,   246,   247,   248,   249,     0,     0,   250,
       0,   252,     0,     0,   254,   255,   256,     0,     0,   257,
     258,   259,   260,   261,   492,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,     0,   283,   284,   285,   286,   287,
       0,   288,   289,     0,   291,     0,   292,   293,   294,   295,
     296,   297,     0,   298,   299,     0,     0,   300,   301,   302,
       0,     0,   303,   304,     0,   306,     0,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,     0,   319,
     320,   321,   322,   323,   324,   325,   326,   327,     0,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,     0,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,     0,   354,   355,     0,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,     0,   372,   373,   374,   375,
     376,     0,   377,   378,   379,   380,   381,     0,   383,   384,
     385,   386,     0,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   494,   399,   400,     0,   401,   402,
       0,   403,     0,   405,   406,   407,   408,   409,     0,   410,
     411,     0,     0,   412,   413,   414,   415,   416,     0,   417,
     418,   419,   420,   421,   422,   423,   424,     0,     0,   425,
     426,   427,   428,   429,     0,     0,   430,   431,   432,   433,
     434,   435,   436,     0,   437,     0,   439,   440,   441,   442,
       0,     0,   443,     0,     0,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   490,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    91,    92,    93,    94,    95,    96,    97,    98,
       0,    99,   100,   101,     0,     0,     0,     0,     0,     0,
       0,   102,   103,     0,   104,   105,   106,     0,   108,   109,
     110,   111,   112,     0,   114,   115,     0,   116,   117,   118,
     119,   120,   121,     0,     0,   122,   123,   124,   125,   126,
       0,   127,   128,   129,   130,   131,     0,     0,     0,   133,
     134,   135,   136,   137,     0,   139,   140,   141,     0,   142,
     143,   144,   145,   146,   147,     0,     0,   149,   150,   151,
       0,     0,     0,     0,     0,     0,     0,   153,   154,   155,
     156,   157,   158,   159,   160,   161,   162,     0,   163,     0,
     164,   165,   166,   167,   168,   169,     0,   170,   171,   172,
     173,   174,     0,     0,   175,   176,   177,   178,   179,     0,
     180,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,     0,   196,
       0,   197,   198,   199,   200,     0,   201,     0,   202,     0,
       0,     0,   205,   206,   207,     0,   209,     0,   210,     0,
     211,   212,     0,   213,   214,   215,   216,   217,   646,     0,
     220,   221,   222,   223,     0,   224,   225,   226,   227,   228,
     229,     0,   230,     0,   232,   233,   234,   235,   236,   237,
     238,     0,   239,     0,   240,     0,     0,   243,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,   252,     0,
       0,   254,   255,   256,     0,     0,   257,   258,   259,   260,
     261,   492,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,     0,   283,   284,   285,   286,   287,     0,   288,   289,
       0,   291,     0,   292,   293,   294,   295,   296,   297,     0,
     298,   299,     0,     0,   300,   301,   302,     0,     0,   303,
     304,     0,   306,     0,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,     0,   319,   320,   321,   322,
     323,   324,   325,   326,   327,     0,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
       0,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,     0,   354,   355,     0,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,     0,   372,   373,   374,   375,   376,     0,   377,
     378,   379,   380,   381,     0,   383,   384,   385,   386,     0,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   494,   399,   400,     0,   401,   402,     0,   403,     0,
     405,   406,   407,   408,   409,     0,   410,   411,     0,     0,
     412,   413,   414,   415,   416,     0,   417,   418,   419,   420,
     421,   422,   423,   424,     0,     0,   425,   426,   427,   428,
     429,     0,     0,   430,   431,   432,   433,   434,   435,   436,
       0,   437,     0,   439,   440,   441,   442,     0,     0,   443,
       0,     0,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   490,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    91,
      92,    93,    94,    95,    96,    97,    98,     0,    99,   100,
     101,     0,     0,     0,     0,     0,     0,     0,   102,   103,
       0,   104,   105,   106,     0,   108,   109,   110,   111,   112,
       0,   114,   115,     0,   116,   117,   118,   119,   120,   121,
       0,     0,   122,   123,   124,   125,   126,     0,   127,   128,
     129,   130,   131,     0,     0,     0,   133,   134,   135,   136,
     137,     0,   139,   140,   141,     0,   142,   143,   144,   145,
     146,   147,     0,     0,   149,   150,   151,     0,     0,     0,
       0,     0,     0,     0,   153,   154,   155,   156,   157,   158,
     159,   160,   161,   162,     0,   163,     0,   164,   165,   166,
     167,   168,   169,     0,   170,   171,   172,   173,   174,     0,
       0,   175,   176,   177,   178,   179,     0,   180,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,     0,   196,     0,   197,   198,
     199,   200,     0,   201,     0,   202,     0,     0,     0,   205,
     206,   207,     0,   209,     0,   210,     0,   211,   212,     0,
     213,   214,   215,   216,   217,   649,     0,   220,   221,   222,
     223,     0,   224,   225,   226,   227,   228,   229,     0,   230,
       0,   232,   233,   234,   235,   236,   237,   238,     0,   239,
       0,   240,     0,     0,   243,     0,   245,   246,   247,   248,
     249,     0,     0,   250,     0,   252,     0,     0,   254,   255,
     256,     0,     0,   257,   258,   259,   260,   261,   492,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,     0,   283,
     284,   285,   286,   287,     0,   288,   289,     0,   291,     0,
     292,   293,   294,   295,   296,   297,     0,   298,   299,     0,
       0,   300,   301,   302,     0,     0,   303,   304,     0,   306,
       0,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,     0,   319,   320,   321,   322,   323,   324,   325,
     326,   327,     0,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,     0,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
       0,   354,   355,     0,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,     0,
     372,   373,   374,   375,   376,     0,   377,   378,   379,   380,
     381,     0,   383,   384,   385,   386,     0,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   494,   399,
     400,     0,   401,   402,     0,   403,     0,   405,   406,   407,
     408,   409,     0,   410,   411,     0,     0,   412,   413,   414,
     415,   416,     0,   417,   418,   419,   420,   421,   422,   423,
     424,     0,     0,   425,   426,   427,   428,   429,     0,     0,
     430,   431,   432,   433,   434,   435,   436,     0,   437,     0,
     439,   440,   441,   442,     0,     0,   443,     0,     0,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     490,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    91,    92,    93,    94,
      95,    96,    97,    98,     0,    99,   100,   101,     0,     0,
       0,     0,     0,     0,     0,   102,   103,     0,   104,   105,
     106,     0,   108,   109,   110,   111,   112,     0,   114,   115,
       0,   116,   117,   118,   119,   120,   121,     0,     0,   122,
     123,   124,   125,   126,     0,   127,   128,   129,   130,   131,
       0,     0,     0,   133,   134,   135,   136,   137,     0,   139,
     140,   141,     0,   142,   143,   144,   145,   146,   147,     0,
       0,   149,   150,   151,     0,     0,     0,     0,     0,     0,
       0,   153,   154,   155,   156,   157,   158,   159,   160,   161,
     162,     0,   163,     0,   164,   165,   166,   167,   168,   169,
       0,   170,   171,   172,   173,   174,     0,     0,   175,   176,
     177,   178,   179,     0,   180,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,     0,   196,     0,   197,   198,   199,   200,     0,
     201,     0,   202,     0,     0,     0,   205,   206,   207,     0,
     209,     0,   210,     0,   211,   212,     0,   213,   214,   215,
     216,   217,   652,     0,   220,   221,   222,   223,     0,   224,
     225,   226,   227,   228,   229,     0,   230,     0,   232,   233,
     234,   235,   236,   237,   238,     0,   239,     0,   240,     0,
       0,   243,     0,   245,   246,   247,   248,   249,     0,     0,
     250,     0,   252,     0,     0,   254,   255,   256,     0,     0,
     257,   258,   259,   260,   261,   492,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,     0,   283,   284,   285,   286,
     287,     0,   288,   289,     0,   291,     0,   292,   293,   294,
     295,   296,   297,     0,   298,   299,     0,     0,   300,   301,
     302,     0,     0,   303,   304,     0,   306,     0,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,     0,
     319,   320,   321,   322,   323,   324,   325,   326,   327,     0,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,     0,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,     0,   354,   355,
       0,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,     0,   372,   373,   374,
     375,   376,     0,   377,   378,   379,   380,   381,     0,   383,
     384,   385,   386,     0,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   494,   399,   400,     0,   401,
     402,     0,   403,     0,   405,   406,   407,   408,   409,     0,
     410,   411,     0,     0,   412,   413,   414,   415,   416,     0,
     417,   418,   419,   420,   421,   422,   423,   424,     0,     0,
     425,   426,   427,   428,   429,     0,     0,   430,   431,   432,
     433,   434,   435,   436,     0,   437,     0,   439,   440,   441,
     442,     0,     0,   443,     0,     0,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   490,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    91,    92,    93,    94,    95,    96,    97,
      98,     0,    99,   100,   101,     0,     0,     0,     0,     0,
       0,     0,   102,   103,     0,   104,   105,   106,     0,   108,
     109,   110,   111,   112,     0,   114,   115,     0,   116,   117,
     118,   119,   120,   121,     0,     0,   122,   123,   124,   125,
     126,     0,   127,   128,   129,   130,   131,     0,     0,     0,
     133,   134,   135,   136,   137,     0,   139,   140,   141,     0,
     142,   143,   144,   145,   146,   147,     0,     0,   149,   150,
     151,     0,     0,     0,     0,     0,     0,     0,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,     0,   163,
       0,   164,   165,   166,   167,   168,   169,     0,   170,   171,
     172,   173,   174,     0,     0,   175,   176,   177,   178,   179,
       0,   180,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,     0,
     196,     0,   197,   198,   199,   200,     0,   201,     0,   202,
       0,     0,     0,   205,   206,   207,     0,   209,     0,   210,
       0,   211,   212,     0,   213,   214,   215,   216,   217,   218,
       0,   220,   221,   222,   223,     0,   224,   225,   226,   227,
     228,   229,     0,   230,     0,   232,   233,   234,   235,   236,
     237,   238,     0,   239,     0,   240,     0,     0,   243,     0,
     245,   246,   247,   248,   249,     0,     0,   250,     0,   252,
       0,     0,   254,   255,   256,     0,     0,   257,   258,   259,
     260,   261,   492,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,     0,   283,   284,   285,   286,   287,     0,   288,
     289,     0,   291,     0,   292,   293,   294,   295,   296,   297,
       0,   298,   299,     0,     0,   300,   301,   302,     0,     0,
     303,   304,     0,   306,     0,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,     0,   319,   320,   321,
     322,   323,   324,   325,   326,   327,     0,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,     0,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,     0,   354,   355,     0,   357,   358,
     359,   360,   361,   362,   363,   364,   555,   366,   367,   368,
     369,   370,   371,     0,   372,   373,   374,   375,   376,     0,
     377,   378,   379,   380,   381,     0,   383,   384,   385,   386,
       0,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   494,   399,   400,     0,   401,   402,     0,   403,
       0,   405,   406,   407,   408,   409,     0,   557,   411,     0,
       0,   412,   413,   414,   415,   416,     0,   417,   418,   419,
     420,   421,   422,   423,   424,     0,     0,   425,   426,   427,
     428,   429,     0,     0,   430,   431,   432,   433,   434,   435,
     436,     0,   437,     0,   439,   440,   441,   442,     0,     0,
     443,     0,     0,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   490,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      91,    92,    93,    94,    95,    96,    97,    98,     0,    99,
     100,   101,     0,     0,     0,     0,     0,  1318,     0,   102,
     103,     0,   104,   105,   106,     0,   108,   109,   110,   111,
     112,     0,   114,   115,     0,   116,   117,   118,   119,   120,
     121,     0,     0,   122,   123,   124,   125,   126,     0,   127,
     128,   129,   130,   131,     0,     0,     0,   133,   134,   135,
     136,   137,     0,   139,   140,   141,     0,   142,   143,   144,
     145,   146,   147,     0,     0,   149,   150,   151,     0,     0,
       0,     0,     0,     0,     0,   153,   154,   155,   156,   157,
     158,   159,   160,   161,   162,     0,   163,     0,   164,   165,
     166,   167,   168,   169,     0,   170,   171,   172,   173,   174,
       0,     0,   175,   176,   177,   178,   179,     0,   180,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,     0,   196,     0,   197,
     198,   199,   200,     0,   201,     0,   202,     0,     0,     0,
     205,   206,   207,     0,   209,     0,   210,     0,   211,   212,
       0,   213,   214,   215,   216,   217,   218,     0,   220,   221,
     222,   223,     0,   224,   225,   226,   227,   228,   229,     0,
     230,     0,   232,   233,   234,   235,   236,   237,   238,     0,
     239,     0,   240,     0,     0,   243,     0,   245,   246,   247,
     248,   249,     0,     0,   250,     0,   252,     0,     0,   254,
     255,   256,     0,     0,   257,   258,   259,   260,   261,   492,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,     0,
     283,   284,   285,   286,   287,     0,   288,   289,     0,   291,
       0,   292,   293,   294,   295,   296,   297,     0,   298,   299,
       0,     0,   300,   301,   302,     0,     0,   303,   304,     0,
     306,     0,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,     0,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,     0,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,     0,   354,   355,     0,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
       0,   372,   373,   374,   375,   376,     0,     0,   378,   379,
     380,   381,     0,   383,   384,   385,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   494,
     399,   400,     0,   401,   402,     0,   403,     0,   405,   406,
     407,   408,   409,     0,   410,   411,     0,     0,   412,   413,
     414,   415,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,     0,     0,   425,   426,   427,   428,   429,     0,
       0,   430,   431,   432,   433,   434,   435,   436,     0,   437,
       0,   439,   440,   441,   442,     0,     0,   443,     0,     0,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   490,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    91,    92,    93,
      94,    95,    96,    97,    98,     0,    99,   100,   101,     0,
       0,     0,     0,     0,     0,     0,   102,   103,     0,   104,
     105,   106,     0,   108,   109,   110,   111,   112,     0,   114,
     115,     0,   116,   117,   118,   119,   120,   121,     0,     0,
     122,   123,   124,   125,   126,     0,   127,   128,   129,   130,
     131,     0,     0,     0,   133,   134,   135,   136,   137,     0,
     139,   140,   141,     0,   142,   143,   144,   145,   146,   147,
       0,     0,   149,   150,   151,     0,     0,     0,     0,     0,
       0,     0,   153,   154,   155,   156,   157,   158,   159,   160,
     161,   162,     0,   163,     0,   164,   165,   166,   167,   168,
     169,     0,   170,   171,   172,   173,   174,     0,     0,   175,
     176,   177,   178,   179,     0,   180,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,     0,   196,     0,   197,   198,   199,   200,
       0,   201,     0,   202,     0,     0,     0,   205,   206,   207,
       0,   209,     0,   210,     0,   211,   212,     0,   213,   214,
     215,   216,   217,  1454,     0,   220,   221,   222,   223,     0,
     224,   225,   226,   227,   228,   229,     0,   230,     0,   232,
     233,   234,   235,   236,   237,   238,     0,   239,     0,   240,
       0,     0,   243,     0,   245,   246,   247,   248,   249,     0,
       0,   250,     0,   252,     0,     0,   254,   255,   256,     0,
       0,   257,   258,   259,   260,   261,   492,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,     0,   283,   284,   285,
     286,   287,     0,   288,   289,     0,   291,     0,   292,   293,
     294,   295,   296,   297,     0,   298,   299,     0,     0,   300,
     301,   302,     0,     0,   303,   304,     0,   306,     0,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
       0,   319,   320,   321,   322,   323,   324,   325,   326,   327,
       0,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,     0,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,     0,   354,
     355,     0,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,     0,   372,   373,
     374,   375,   376,     0,   377,   378,   379,   380,   381,     0,
     383,   384,   385,   386,     0,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   494,   399,   400,     0,
     401,   402,     0,   403,     0,   405,   406,   407,   408,   409,
       0,   410,   411,     0,     0,   412,   413,   414,   415,   416,
       0,   417,   418,   419,   420,   421,   422,   423,   424,     0,
       0,   425,   426,   427,   428,   429,     0,     0,   430,   431,
     432,   433,   434,   435,   436,     0,   437,     0,   439,   440,
     441,   442,     0,     0,   443,     0,     0,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   490,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    91,    92,    93,    94,    95,    96,
      97,    98,     0,    99,   100,   101,     0,     0,     0,     0,
       0,     0,     0,   102,   103,     0,   104,   105,   106,     0,
     108,   109,   110,   111,   112,     0,   114,   115,     0,   116,
     117,   118,   119,   120,   121,     0,     0,   122,   123,   124,
     125,   126,     0,   127,   128,   129,   130,   131,     0,     0,
       0,   133,   134,   135,   136,   137,     0,   139,   140,   141,
       0,   142,   143,   144,   145,   146,   147,     0,     0,   149,
     150,   151,     0,     0,     0,     0,     0,     0,     0,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,     0,
     163,     0,   164,   165,   166,   167,   168,   169,     0,   170,
     171,   172,   173,   174,     0,     0,   175,   176,   177,   178,
     179,     0,   180,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
       0,   196,     0,   197,   198,   199,   200,     0,   201,     0,
     202,     0,     0,     0,   205,   206,   207,     0,   209,     0,
     210,     0,   211,   212,     0,   213,   214,   215,   216,   217,
    1741,     0,   220,   221,   222,   223,     0,   224,   225,   226,
     227,   228,   229,     0,   230,     0,   232,   233,   234,   235,
     236,   237,   238,     0,   239,     0,   240,     0,     0,   243,
       0,   245,   246,   247,   248,   249,     0,     0,   250,     0,
     252,     0,     0,   254,   255,   256,     0,     0,   257,   258,
     259,   260,   261,   492,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,     0,   283,   284,   285,   286,   287,     0,
     288,   289,     0,   291,     0,   292,   293,   294,   295,   296,
     297,     0,   298,   299,     0,     0,   300,   301,   302,     0,
       0,   303,   304,     0,   306,     0,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,     0,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,     0,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,     0,   354,   355,     0,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,     0,   372,   373,   374,   375,   376,
       0,   377,   378,   379,   380,   381,     0,   383,   384,   385,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   494,   399,   400,     0,   401,   402,     0,
     403,     0,   405,   406,   407,   408,   409,     0,   410,   411,
       0,     0,   412,   413,   414,   415,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,     0,     0,   425,   426,
     427,   428,   429,     0,     0,   430,   431,   432,   433,   434,
     435,   436,     0,   437,     0,   439,   440,   441,   442,     0,
       0,   443,     0,     0,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   490,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    91,    92,    93,    94,    95,    96,    97,    98,     0,
      99,   100,   101,     0,     0,     0,     0,     0,     0,     0,
     102,   103,     0,   104,   105,   106,     0,   108,   109,   110,
     111,   112,     0,   114,   115,     0,   116,   117,   118,   119,
     120,   121,     0,     0,   122,   123,   124,   125,   126,     0,
     127,   128,   129,   130,   131,     0,     0,     0,   133,   134,
     135,   136,   137,     0,   139,   140,   141,     0,   142,   143,
     144,   145,   146,   147,     0,     0,   149,   150,   151,     0,
       0,     0,     0,     0,     0,     0,   153,   154,   155,   156,
     157,   158,   159,   160,   161,   162,     0,   163,     0,   164,
     165,   166,   167,   168,   169,     0,   170,   171,   172,   173,
     174,     0,     0,   175,   176,   177,   178,   179,     0,   180,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,     0,   196,     0,
     197,   198,   199,   200,     0,   201,     0,   202,     0,     0,
       0,   205,   206,   207,     0,   209,     0,   210,     0,   211,
     212,     0,   213,   214,   215,   216,   217,  1753,     0,   220,
     221,   222,   223,     0,   224,   225,   226,   227,   228,   229,
       0,   230,     0,   232,   233,   234,   235,   236,   237,   238,
       0,   239,     0,   240,     0,     0,   243,     0,   245,   246,
     247,   248,   249,     0,     0,   250,     0,   252,     0,     0,
     254,   255,   256,     0,     0,   257,   258,   259,   260,   261,
     492,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
       0,   283,   284,   285,   286,   287,     0,   288,   289,     0,
     291,     0,   292,   293,   294,   295,   296,   297,     0,   298,
     299,     0,     0,   300,   301,   302,     0,     0,   303,   304,
       0,   306,     0,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,     0,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,     0,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,     0,   354,   355,     0,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,     0,   372,   373,   374,   375,   376,     0,   377,   378,
     379,   380,   381,     0,   383,   384,   385,   386,     0,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     494,   399,   400,     0,   401,   402,     0,   403,     0,   405,
     406,   407,   408,   409,     0,   410,   411,     0,     0,   412,
     413,   414,   415,   416,     0,   417,   418,   419,   420,   421,
     422,   423,   424,     0,     0,   425,   426,   427,   428,   429,
       0,     0,   430,   431,   432,   433,   434,   435,   436,     0,
     437,     0,   439,   440,   441,   442,     0,     0,   443,     0,
       0,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   490,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    91,    92,
      93,    94,    95,    96,    97,    98,     0,    99,   100,   101,
       0,     0,     0,     0,     0,     0,     0,   102,   103,     0,
     104,   105,   106,     0,   108,   109,   110,   111,   112,     0,
     114,   115,     0,   116,   117,   118,   119,   120,   121,     0,
       0,   122,   123,   124,   125,   126,     0,   127,   128,   129,
     130,   131,     0,     0,     0,   133,   134,   135,   136,   137,
       0,   139,   140,   141,     0,   142,   143,   144,   145,   146,
     147,     0,     0,   149,   150,   151,     0,     0,     0,     0,
       0,     0,     0,   153,   154,   155,   156,   157,   158,   159,
     160,   161,   162,     0,   163,     0,   164,   165,   166,   167,
     168,   169,     0,   170,   171,   172,   173,   174,     0,     0,
     175,   176,   177,   178,   179,     0,   180,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,     0,   196,     0,   197,   198,   199,
     200,     0,   201,     0,   202,     0,     0,     0,   205,   206,
     207,     0,   209,     0,   210,     0,   211,   212,     0,   213,
     214,   215,   216,   217,  1755,     0,   220,   221,   222,   223,
       0,   224,   225,   226,   227,   228,   229,     0,   230,     0,
     232,   233,   234,   235,   236,   237,   238,     0,   239,     0,
     240,     0,     0,   243,     0,   245,   246,   247,   248,   249,
       0,     0,   250,     0,   252,     0,     0,   254,   255,   256,
       0,     0,   257,   258,   259,   260,   261,   492,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,     0,   283,   284,
     285,   286,   287,     0,   288,   289,     0,   291,     0,   292,
     293,   294,   295,   296,   297,     0,   298,   299,     0,     0,
     300,   301,   302,     0,     0,   303,   304,     0,   306,     0,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,     0,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,     0,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,     0,
     354,   355,     0,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,     0,   372,
     373,   374,   375,   376,     0,   377,   378,   379,   380,   381,
       0,   383,   384,   385,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   494,   399,   400,
       0,   401,   402,     0,   403,     0,   405,   406,   407,   408,
     409,     0,   410,   411,     0,     0,   412,   413,   414,   415,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   424,
       0,     0,   425,   426,   427,   428,   429,     0,     0,   430,
     431,   432,   433,   434,   435,   436,     0,   437,     0,   439,
     440,   441,   442,     0,     0,   443,     0,     0,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,  1110,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    91,    92,    93,    94,    95,
      96,    97,    98,     0,    99,   100,   101,     0,     0,     0,
       0,     0,     0,     0,   102,   103,     0,   104,   105,   106,
    1111,   108,   109,   110,     0,  1112,  1113,  1114,  1115,     0,
     116,   117,   118,   119,   120,   121,     0,     0,   122,   123,
    1116,  1117,   126,     0,   127,   128,   129,   130,     0,     0,
    1118,     0,   133,   134,   135,   136,   137,  1119,   139,   140,
     141,     0,   142,   143,   144,   145,   146,   147,     0,  1120,
     149,   150,   151,     0,     0,     0,  1121,     0,     0,     0,
     153,   154,   155,   156,   157,   158,   159,  1122,  1123,   162,
       0,   163,     0,   164,   165,   166,   167,   168,   169,     0,
     170,   171,   172,   173,   174,     0,     0,   175,   176,   754,
     178,   179,     0,   180,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,   189,     0,   191,   192,   193,   194,
       0,     0,   196,     0,   197,   198,  1124,   200,     0,   201,
       0,   202,  1125,     0,  1126,   205,   206,   207,  1127,   209,
       0,   210,     0,     0,   212,     0,   213,   214,   215,   216,
     217,   218,  1128,   220,   221,   222,   223,     0,   224,   225,
     226,   227,   228,   229,     0,   230,  1129,     0,   233,   234,
     235,   236,  1130,  1131,     0,  1132,     0,   240,  1133,  1134,
     243,  1135,   245,   246,   247,   248,   249,     0,     0,   250,
    1136,   252,  1137,     0,   254,   255,   256,     0,     0,   257,
     258,   259,   260,   261,  1138,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,  1139,  1140,  1141,   284,   285,   286,     0,
       0,   288,   289,  1142,   291,     0,     0,   293,  1143,   295,
     296,   297,     0,   298,   299,     0,     0,   300,   301,   302,
       0,     0,   303,     0,  1144,   306,  1145,     0,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,     0,   319,
     320,     0,   322,   323,     0,   325,   326,   327,     0,   328,
     329,   330,   331,   332,   333,   334,   335,   336,  1146,   338,
     339,   340,   341,     0,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,     0,   354,   355,  1147,
     357,   358,   359,  1148,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,     0,   372,   373,   374,   375,
     376,     0,   377,  1149,   379,   380,   381,  1150,   383,   384,
    1151,   386,     0,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,  1152,   399,     0,     0,   401,   402,
       0,   403,  1153,   405,   406,   407,   408,   409,     0,  1154,
    1155,     0,     0,   412,   413,     0,   415,     0,     0,   417,
     418,  1156,   420,   421,   422,   423,   424,     0,     0,   425,
     426,   427,   428,   429,     0,     0,   430,   431,   432,   433,
     434,     0,  1157,     0,   437,  1158,   439,   440,   441,   442,
       0,     0,   443,     0,     0,   444,   445,   446,   447,   448,
     449,   490,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   461,   462,   463,   464,     0,    91,    92,    93,
      94,    95,    96,    97,    98,     0,    99,   100,   101,     0,
       0,     0,     0,     0,     0,     0,   102,   103,     0,   104,
     105,   106,     0,   108,   109,   110,   111,   112,     0,   114,
     115,     0,   116,   117,   118,   119,   120,   121,     0,     0,
     122,   123,   124,   125,   126,     0,   127,   128,   129,   130,
     131,     0,     0,     0,   133,   134,   135,   136,   137,     0,
     139,   140,   141,     0,   142,   143,   144,   145,   146,   147,
       0,     0,   149,   150,   151,     0,     0,     0,     0,     0,
       0,     0,   153,   154,   155,   156,   157,   158,   159,   160,
     161,   162,     0,   163,     0,   164,   165,   166,   167,   168,
     169,     0,   170,   171,   172,   173,   174,     0,     0,   175,
     176,   177,   178,   179,     0,   180,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,     0,   196,     0,   197,   198,   199,   200,
       0,   201,     0,   202,     0,     0,     0,   205,   206,   207,
       0,   209,     0,   210,     0,   211,   212,     0,   213,   214,
     215,   216,   217,   218,     0,   220,   221,   222,   223,     0,
     224,   225,   226,   227,   228,   229,     0,   230,     0,   232,
     233,   234,   235,   236,   237,   238,     0,   239,     0,   240,
       0,     0,   243,     0,   245,   246,   247,   248,   249,     0,
       0,   250,     0,   252,     0,     0,   254,   255,   256,     0,
       0,   257,   258,   259,   260,   261,   492,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,     0,   283,   284,   285,
     286,   287,     0,   288,   289,     0,   291,     0,   292,   293,
     294,   295,   296,   297,     0,   298,   299,     0,     0,   300,
     301,   302,     0,     0,   303,   304,     0,   306,     0,   308,
     309,   310,   311,   312,   313,   314,     0,   316,   317,   318,
       0,   319,   320,   321,   322,   323,   324,   325,   326,   327,
       0,   328,   329,   330,   331,   332,   333,   334,     0,   336,
     337,   338,   339,   340,   341,     0,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,     0,   354,
     355,     0,   357,   358,   359,   360,     0,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,     0,   372,   373,
     374,   375,   376,     0,   377,   378,   379,   380,   381,     0,
     383,   384,   385,   386,     0,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   494,   399,   400,     0,
     401,   402,     0,   403,     0,   405,   406,   407,   408,   409,
       0,   410,   411,     0,     0,   412,   413,   414,   415,   416,
       0,   417,   418,   419,   420,   421,   422,   423,   424,     0,
       0,   425,   426,   427,   428,   429,     0,     0,   430,   431,
     432,   433,   434,   435,   436,     0,   437,     0,   439,   440,
     441,   442,     0,     0,   443,     0,     0,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,  2318,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    91,    92,    93,    94,    95,    96,
      97,    98,     0,    99,   100,   101,     0,     0,     0,     0,
       0,     0,     0,   102,   103,     0,   104,   105,   106,  2319,
     108,   109,   110,     0,  1112,  2320,  1114,  1115,     0,   116,
     117,   118,   119,   120,   121,     0,     0,   122,   123,  1116,
    1117,   126,     0,   127,   128,   129,   130,     0,     0,  2321,
       0,   133,   134,   135,   136,   137,  2322,   139,   140,   141,
       0,   142,   143,   144,   145,   146,   147,     0,  2323,   149,
     150,   151,     0,     0,     0,  2324,     0,     0,     0,   153,
     154,   155,   156,   157,   158,   159,  1122,  1123,   162,     0,
     163,     0,   164,   165,   166,   167,   168,   169,     0,   170,
     171,   172,   173,   174,     0,     0,   175,   176,   754,   178,
     179,     0,   180,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,   189,     0,   191,   192,   193,   194,     0,
       0,   196,     0,   197,   198,  1124,   200,     0,   201,     0,
     202,  2325,     0,  2326,   205,   206,   207,  2327,   209,     0,
     210,     0,     0,   212,     0,   213,   214,   215,   216,   217,
     218,  2328,   220,   221,   222,   223,     0,   224,   225,   226,
     227,   228,   229,     0,   230,  2329,     0,   233,   234,   235,
     236,  1130,  1131,     0,  1132,     0,   240,  2330,  2331,   243,
    2332,   245,   246,   247,   248,   249,     0,     0,   250,  2333,
     252,  2334,     0,   254,   255,   256,     0,     0,   257,   258,
     259,   260,   261,  2524,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,  1139,  2336,  1141,   284,   285,   286,     0,     0,
     288,   289,  2338,   291,     0,     0,   293,  1143,   295,   296,
     297,     0,   298,   299,     0,     0,   300,   301,   302,     0,
       0,   303,     0,  2340,   306,  2341,     0,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,     0,   319,   320,
       0,   322,   323,     0,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,  1146,   338,   339,
     340,   341,     0,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,     0,   354,   355,  2342,   357,
     358,   359,     0,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,     0,   372,   373,   374,   375,   376,
       0,   377,     0,   379,   380,   381,  2344,   383,   384,  1151,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,  2525,   399,     0,     0,   401,   402,     0,
     403,  2346,   405,   406,   407,   408,   409,     0,  1154,  1155,
       0,     0,   412,   413,     0,   415,     0,     0,   417,   418,
    2347,   420,   421,   422,   423,   424,     0,     0,   425,   426,
     427,   428,   429,     0,     0,   430,   431,   432,   433,   434,
       0,  1157,     0,   437,  2348,   439,   440,   441,   442,     0,
       0,   443,     0,     0,   444,   445,   446,   447,   448,   449,
    1110,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   461,   462,   463,   464,     0,    91,    92,    93,    94,
      95,    96,    97,    98,     0,    99,   100,   101,     0,     0,
       0,     0,     0,     0,     0,   102,   103,     0,   104,   105,
     106,  1111,   108,   109,   110,     0,  1112,  1113,  1114,  1115,
       0,   116,   117,   118,   119,   120,   121,     0,     0,   122,
     123,  1116,  1117,   126,     0,   127,   128,   129,   130,     0,
       0,  1118,     0,   133,   134,   135,   136,   137,  1119,   139,
     140,   141,     0,   142,   143,   144,   145,   146,   147,     0,
    1120,   149,   150,   151,     0,     0,     0,  1121,     0,     0,
       0,   153,   154,   155,   156,   157,   158,   159,  1122,  1123,
     162,     0,   163,     0,   164,   165,   166,   167,   168,   169,
       0,   170,   171,   172,   173,   174,     0,     0,   175,   176,
     754,   178,   179,     0,   180,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,   189,     0,   191,   192,   193,
     194,     0,     0,   196,     0,   197,   198,  1124,   200,     0,
     201,     0,   202,  1125,     0,  1126,   205,   206,   207,  1127,
     209,     0,   210,     0,     0,   212,     0,   213,   214,   215,
     216,   217,   218,  1128,   220,   221,   222,   223,     0,   224,
     225,   226,   227,   228,   229,     0,   230,  1129,     0,   233,
     234,   235,   236,  1130,  1131,     0,  1132,     0,   240,  1133,
    1134,   243,  1135,   245,   246,   247,   248,   249,     0,     0,
     250,  1136,   252,  1137,     0,   254,   255,   256,     0,     0,
     257,   258,   259,   260,   261,     0,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,  1139,  1140,  1141,   284,   285,   286,
       0,     0,   288,   289,  1142,   291,     0,     0,   293,  1143,
     295,   296,   297,     0,   298,   299,     0,     0,   300,   301,
     302,     0,     0,   303,     0,  1144,   306,  1145,     0,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,     0,
     319,   320,     0,   322,   323,     0,   325,   326,   327,     0,
     328,   329,   330,   331,   332,   333,   334,   335,   336,  1146,
     338,   339,   340,   341,     0,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,     0,   354,   355,
    1147,   357,   358,   359,     0,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,     0,   372,   373,   374,
     375,   376,     0,   377,     0,   379,   380,   381,  1150,   383,
     384,  1151,   386,     0,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,     0,   399,     0,     0,   401,
     402,     0,   403,  1153,   405,   406,   407,   408,   409,     0,
    1154,  1155,     0,     0,   412,   413,     0,   415,     0,     0,
     417,   418,  1156,   420,   421,   422,   423,   424,     0,     0,
     425,   426,   427,   428,   429,     0,     0,   430,   431,   432,
     433,   434,     0,  1157,     0,   437,  1158,   439,   440,   441,
     442,     0,     0,   443,     0,     0,   444,   445,   446,   447,
     448,   449,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   461,   462,   463,   464
};

static const yytype_int16 yycheck[] =
{
       6,   520,   910,   614,    34,   622,    57,   484,     0,   607,
     553,   714,     6,   908,   592,   616,     0,   868,   792,   571,
      16,   714,  1682,   526,   896,  1209,   566,  1492,   524,   779,
       6,   883,     0,     0,     0,   794,  1751,  1084,  1053,  1053,
    1053,  1053,   519,   885,   949,   650,  2075,    29,    16,   879,
    2075,   810,   888,  1757,  1198,  1759,  1702,  1198,  2027,  1245,
    2099,    59,  1198,   822,     0,  1198,  1639,  1748,   525,  2110,
    1986,   913,  1241,  1242,    59,  1493,   714,  1176,   526,    33,
    1992,     5,   720,  1576,  1577,    77,   721,  2117,  1581,   607,
       9,   609,    50,   611,  1293,     0,     5,    11,   752,  1054,
       9,    58,   654,  2382,     5,    87,    58,  1339,     5,     5,
      73,  2385,    13,    14,     5,   769,   116,  1341,  2388,     5,
      67,  2438,    13,    14,   168,    67,   114,    13,    14,  1622,
    1623,   627,    27,    11,    23,    58,   829,    40,  1819,    34,
       5,     5,     5,   167,    75,     9,    13,    14,    13,    14,
       5,     5,     5,     5,    85,     0,   136,  2474,    13,    14,
    2460,   210,   531,    41,    58,     5,     5,   114,   806,     5,
       5,     5,     5,   106,     5,     5,   589,    48,  1859,  1860,
     589,    40,  2372,   277,  1370,     4,  2528,    92,    75,   121,
       9,   829,   167,   831,   832,    73,     4,    11,    85,    27,
    1991,     9,   167,     9,   897,  1211,    34,   900,   901,   119,
     279,   714,  2558,   301,  1926,   236,    11,   720,    15,   119,
      27,     3,   164,   285,   171,   168,   119,    34,   301,  2357,
     114,     3,     4,     5,   134,   836,   144,     9,   790,   791,
     265,  2558,  2614,   325,  2016,   134,    41,    92,   116,    31,
      32,  1679,  2483,  2715,   285,   795,  2046,   200,    37,   897,
     717,   445,   900,   901,   359,  1693,   146,   325,    59,  2305,
     347,    27,   215,  2504,  2544,   348,    67,  1149,    73,    27,
      23,   224,  2773,   823,  2775,   338,   921,   448,   429,  2798,
     398,   216,   400,   928,   204,   407,  2596,   157,    20,   394,
     208,   172,   360,   159,   292,   320,   490,    11,   117,    64,
      65,   472,   192,   366,  2343,   186,  2228,   264,   117,    30,
     191,  2237,   269,  1329,  1897,  2241,   878,    11,   831,   832,
    2045,   850,  2122,   348,    77,    68,   394,   262,  1524,   451,
     435,  2380,   114,    54,   123,   486,    82,   740,   741,    31,
      32,  2860,  2814,   487,  2845,   226,   490,    41,   161,   441,
    1211,  2042,  2679,  2044,   220,   312,   106,   227,   262,    73,
     312,   359,   765,   129,   279,   722,   954,   285,   187,   105,
     327,   129,   339,   441,   166,   269,   168,   339,   187,    73,
     126,   486,   486,   481,   283,  2712,   321,  2769,  2526,   129,
     343,   269,   427,  2634,   425,  1155,   394,   107,   481,   486,
      92,   311,  1905,  1906,  1907,  1908,   339,   486,  1911,  1912,
    1913,  1914,  1915,  1916,  1917,  1918,  1919,  1920,   490,  1064,
     405,   431,  1674,  1675,   279,   340,  2227,   209,  2780,   230,
     405,   490,   486,  1054,   369,   339,  1063,   435,   337,   338,
    2796,  2132,  2164,  1091,  1092,  1639,  2756,  2647,   230,   490,
     448,   394,  2498,   876,   444,   486,   490,   876,  2742,  1123,
    1963,  1964,   366,  2743,   405,   422,   845,   366,  1329,  2796,
     422,   376,   474,  1715,   472,  1440,   383,   384,   391,  1143,
     474,  1102,  1716,   290,  1959,   340,   526,   429,   486,  2528,
     371,  2273,   427,  2528,   307,  1704,   474,   474,   474,  1361,
     475,  2790,  1417,   421,   438,  1684,   242,   427,   405,  1173,
     526,   484,   262,   488,   250,   488,  1710,  2439,   486,   475,
     526,  2447,   391,   490,   427,   107,  2452,  1445,   490,  2455,
     486,   592,     8,   448,   274,    11,   552,   553,   376,   896,
      16,    17,    18,  1191,  1192,     5,  1984,   525,  1986,  1078,
     296,  1199,   486,  1201,  1202,   571,   485,  2282,   482,   376,
    1576,  1577,   159,   569,   168,  1581,   129,   486,  1216,  1180,
    1218,   579,   487,  1086,   489,   486,  1491,   450,   484,   581,
     486,  2295,   488,  1692,   579,   486,  1073,   581,   450,  1076,
     486,  1239,   584,   448,   482,  1082,   612,   613,   614,   472,
    2649,   486,  2653,   581,   581,   581,  1622,  1623,   572,   486,
     472,   486,   486,   486,  2654,  2271,   157,  1179,  1085,  1181,
       0,   486,   486,   486,   486,  1236,  1237,  1189,  1086,  1250,
     448,  1193,   487,  1829,   489,   581,   486,   486,   654,   114,
     486,   486,   486,   486,  1289,   486,   486,   439,   477,   478,
    1212,  1213,   489,   399,   472,   479,   480,   481,   482,   477,
     478,   477,   478,    75,   261,  2591,     4,   359,  2650,   475,
    1281,     9,  1868,    85,   479,   480,   481,   482,  1228,   236,
    1291,  1292,   488,  2374,    13,    14,   227,  1390,  1884,    11,
    1338,  1339,  2275,   297,   116,   477,   478,  1400,   714,  2748,
    1403,   264,   394,  1897,   720,   721,   722,    93,  1904,   184,
    2138,   274,  2140,  1116,  1117,  1576,  1577,   268,   490,  1873,
    1581,  1872,   738,  1975,  1976,  1977,  1978,  1873,  1874,  2204,
    1873,  1874,  1875,   429,   439,   276,   212,  1933,  1141,   717,
     335,  2780,  1390,   435,  1940,  2780,   393,   439,    13,    14,
     766,   791,  1400,   264,   194,  1403,   448,  1378,   269,  2741,
    2485,  1622,  1623,  1476,  1821,  1899,  1253,  1946,   372,   236,
     786,   787,   788,  1476,   790,   791,   198,    11,  1386,   486,
     472,   428,   168,   477,   478,   479,   480,   481,   482,   264,
     486,   450,  1149,  1927,   486,   352,   450,   243,   814,  2237,
    1203,  1204,   534,  2241,   536,   281,   487,    41,   319,   490,
    2859,    23,    93,   472,   200,   831,   832,    29,   472,  1440,
      75,  1605,   373,   555,   410,  1413,  1414,  1415,  1476,   215,
      85,  1359,   486,   162,  1603,   129,  2815,  2816,   224,    73,
     262,  1489,   264,  1458,     4,  1460,  1686,   863,  1463,     9,
    2832,   867,   868,   861,   862,     4,   864,  1775,  1386,   355,
       9,   155,   878,   855,   173,  1513,   861,   862,   425,   864,
      23,   481,   258,   398,   441,   400,    29,  1405,   488,  2075,
     896,  2075,  1410,  1798,  2863,   352,   486,   168,  1245,  1905,
    1906,  1907,  1908,   279,  2619,  1911,  1912,  1913,  1914,  1915,
    1916,  1917,  1918,  1919,  1920,   921,   481,  2410,   487,  1396,
    2624,   490,   928,   488,  1401,     8,   325,   486,    11,   200,
     912,   230,   134,    16,    17,    18,   236,  1433,    27,   486,
     490,  1783,   492,   949,   215,    92,  1481,  1706,  2413,   469,
    1485,   157,  1487,   224,     6,   214,   162,  1963,  1964,    11,
     157,   360,   484,    15,   486,   162,   488,   343,   425,    21,
      22,    23,     0,  1476,    26,   488,   129,    29,  1530,     4,
      32,    33,    13,    14,     9,   269,  1489,   258,    16,    78,
     274,   134,   714,   279,  1830,   394,   484,    86,   720,  1835,
     488,   469,   155,  2496,   236,   479,    34,   473,   474,   475,
    2438,   477,   478,   479,   480,   481,   482,   487,   166,  2447,
     490,   227,   486,  1370,  2452,    77,   115,  2455,   490,   486,
     227,    59,    84,    85,    86,    87,    88,   450,    13,    14,
     236,   148,   441,  1595,    23,  1683,  2474,   216,  1054,    77,
      29,  2711,   352,   429,  1905,  1906,  1907,  1908,  1064,   472,
    1911,  1912,  1913,  1914,  1915,  1916,  1917,  1918,  1919,  1920,
     276,  2564,   343,   486,   796,  1627,  1714,  1715,  2125,   276,
    1086,   283,    13,    14,   806,  2100,  2100,  2100,  2100,   148,
    1086,  2275,   448,   262,   450,   184,  1102,   819,   487,   398,
    2565,   400,  1594,  1681,  1596,  1597,   195,   829,   191,   831,
     832,   264,  1963,  1964,   487,  1667,   269,  1085,   167,   236,
     352,   274,   398,   210,   400,   425,   425,  2313,   412,   212,
    2558,   333,    13,    14,  2849,   337,   194,  2797,   487,   423,
     283,   490,   398,  1149,   400,  1492,    54,  1850,  2056,  1754,
     487,  1756,   486,   490,   292,   134,   352,  2817,   487,  2246,
    2055,   490,  2249,  2591,   366,   477,   478,   479,   480,   481,
     482,   487,   469,  1179,   490,  1181,   487,  1524,   214,   490,
    1186,  1931,  1932,  1189,  1176,   487,   486,  1193,   490,   149,
     333,  2043,  1176,   425,   337,    13,    14,  1814,   281,  2094,
     369,  1207,    13,    14,  1210,  1211,  1212,  1213,  1176,  1176,
    1176,  2871,   359,   333,  1220,  1221,  1222,  2403,  2054,    23,
    2056,   359,   487,   366,   487,    29,   586,   490,   588,   425,
     432,  1869,  1870,   487,  1240,   352,   490,  1848,   149,  1245,
    1246,  1247,  1248,  1249,  1250,   347,   348,   394,  1254,  1255,
     149,  2679,   359,  1259,   486,  2014,   394,  1263,   427,   412,
    1266,  1267,  1268,  1269,  1270,  1271,  1272,  1273,  1274,   149,
     423,  1277,   248,   249,   487,   486,  1282,   490,   722,  1285,
     264,  1287,   487,  1289,  2712,   490,    36,   394,   435,   432,
     486,    81,   487,   382,   352,   490,   385,   435,    13,    14,
     359,   448,   360,   488,   283,  1311,     8,   441,   425,    11,
     448,   486,  1308,    23,    16,    17,    18,   487,   149,    29,
     490,    13,    14,  1329,  1316,   472,   487,   452,   435,   490,
     134,    33,  1338,  1339,   472,   394,   394,    13,    14,   486,
    1941,   448,  2528,  2242,  2528,  2244,     8,  1850,   486,    11,
      13,    14,   182,   183,    16,    17,    18,   487,   337,   487,
     490,   554,   490,   556,  1370,   472,  1843,   149,  2796,   486,
    1376,    33,  1378,   149,   487,   487,   435,   490,   490,   486,
     356,   357,  2075,   441,   394,   829,  1938,   366,   279,   448,
     473,   474,   475,   486,   477,   478,   479,   480,   481,   482,
      13,    14,    36,  2311,  2410,   173,   225,   487,   486,  2595,
     490,  1417,  2598,   472,  1420,  1421,   484,  1423,   248,   249,
     144,     5,  2023,   475,   134,   487,   194,   486,   490,   481,
       5,  2283,   484,   157,  1440,   486,   488,  2075,   162,   487,
     487,   493,   490,   490,   486,    36,   474,  1453,   487,    13,
      14,   490,   896,   432,   162,   487,  1996,  1449,   490,  2233,
      13,    14,   230,  2074,    55,  2076,   486,   519,   520,   521,
    1476,  2343,     5,  2247,   487,     8,  1198,   490,   486,   283,
     308,    14,  1829,  1489,   208,  1491,  1492,    13,    14,   487,
    2496,    24,   490,   487,   486,    28,   490,   525,   526,    13,
      14,  2139,   554,   227,   556,   487,   487,     5,   490,   490,
     212,   563,  2090,   486,   105,     5,   284,   486,  1524,  2124,
     572,  1868,    13,    14,  1530,  1531,   356,   357,   487,   333,
    1536,   490,   584,   337,     5,   487,   486,  1884,   490,    23,
     487,    13,    14,   490,   596,    29,   487,   486,  1578,   490,
     212,   579,   276,   581,    13,    14,   486,  1904,  2564,  2410,
     487,   285,   366,   490,   487,   487,     8,   490,   490,    11,
    1576,  1577,  1578,   283,   487,  1581,  1298,   490,     5,   281,
     486,   633,   634,   635,   487,   486,  1933,   490,  1594,  1595,
    1596,  1597,   487,  1940,  2780,   490,  2780,  1627,  1604,    41,
     487,  1607,   193,   490,   487,   487,    48,   490,   490,  2302,
     487,   487,  1959,   490,   490,   486,  1622,  1623,   359,   281,
     486,  1627,   486,   333,    13,    14,   486,   337,   432,   486,
     398,    73,   400,    13,    14,  1641,    13,    14,  1644,  2534,
    1646,    13,    14,   347,   348,  2496,   347,   348,   347,   348,
     134,   242,  2253,   394,   422,     9,   366,   425,   449,   250,
     486,  1667,   252,   253,  2302,    15,  2267,  1697,   210,  2307,
     490,   262,    96,  1679,   726,   356,   357,   831,   832,    36,
     366,   162,   276,   162,   225,  1679,   274,  1693,   486,   717,
     486,   405,    85,   490,   435,  2398,   405,   421,    54,  1693,
    1692,  1707,   293,  1679,   255,  1149,    54,   448,  1692,  2314,
    2315,  2349,  2350,  2564,   405,   405,  1722,  1693,   487,  2262,
     495,   405,   432,   448,  1692,  1692,  1692,   755,  2075,   149,
     172,   472,    92,   488,  1740,   141,   264,   264,   486,    36,
     792,    36,   144,   490,   186,   486,   486,   338,   486,   191,
     438,  1757,  1758,  1759,  1476,   157,   486,   486,  1480,    35,
     162,   444,     9,   791,   486,   486,   403,  1489,   403,   360,
      11,   473,   474,   475,   490,   477,   478,   479,   480,   481,
     482,   833,   485,   490,   226,   403,   486,   269,   486,   380,
     495,   405,  1798,   176,   158,   208,   167,   849,   850,   283,
     487,  1245,   429,   855,   856,   857,   208,   486,    36,   369,
     490,   473,   474,   475,   280,   477,   478,   479,   480,   481,
     482,   216,   490,  1829,   216,   227,   486,   264,   216,   285,
     882,   883,   487,   861,   862,  2528,   864,   317,   277,   281,
      23,   441,  1848,   895,  1850,   486,    29,   486,   149,   333,
     149,   448,   264,   337,  1846,   264,   279,  2204,   279,    36,
     912,    36,  1868,     3,   916,     5,    35,   484,   484,   405,
     405,   405,    50,   405,   276,  1881,   485,   487,  1884,  2517,
    2518,   487,   366,   285,   487,  1891,   167,   488,   487,  1895,
    2528,   487,  1898,   469,   487,  2398,   487,   167,  1904,  1905,
    1906,  1907,  1908,   405,   487,  1911,  1912,  1913,  1914,  1915,
    1916,  1917,  1918,  1919,  1920,   487,    94,   487,  1924,  1925,
    1971,   487,   469,  2831,   487,   487,  1370,  1933,   487,   371,
     487,   469,  1938,   445,  1940,   445,   486,   486,   486,  1969,
     486,  1947,   120,   289,  1950,   279,  1952,   435,   432,   471,
     475,   134,   280,  1959,  1960,   280,  1986,  1963,  1964,   280,
     138,   490,  1968,  1969,   142,   427,  2313,   235,   108,   109,
     405,   264,    11,   486,   194,   149,    15,   283,  1984,   149,
    1986,   149,   487,    22,   487,   163,   405,   487,   166,   405,
    1984,  1997,  1986,    32,    33,  2573,  2343,  1049,   405,   485,
    2006,   405,   180,   490,   487,  1057,   277,   279,  1984,  2620,
    1986,    36,   448,   149,   149,  1067,  2022,  2494,  2635,   421,
     269,  1073,   487,   484,  1076,   140,  1078,  1079,   470,  1081,
    1082,    11,  1084,   167,   162,   477,   478,   479,   480,   481,
     482,  1763,   182,   183,   487,   167,    85,  2599,  1492,   487,
     169,   445,   394,   487,   173,   486,  2403,  1085,   487,  2578,
     167,   472,   490,   176,  2070,   722,  2413,   340,  2074,  2075,
    2076,   434,   487,   487,    83,   194,   486,  2596,   280,   487,
    1524,   149,   484,   486,  1806,   487,   488,  2780,   171,   416,
     486,   269,   490,    36,    79,   486,  1818,   487,   429,   277,
     283,  2718,   487,   490,   244,   245,   246,   247,   248,   249,
     485,   230,   252,   253,   167,   485,   396,    84,   237,    86,
     486,    88,   487,   215,  2676,   487,   487,   486,  1850,  2121,
     288,   215,   487,  1855,   486,  1857,   286,   486,    54,  1861,
    1862,   319,  2780,   179,   448,   475,   196,   185,  1176,  2155,
     333,   269,   269,   488,   337,   488,   488,  1209,    36,   488,
     475,   405,   488,  2640,   488,   284,   488,   487,  2779,   488,
     488,   488,   488,  2692,   488,   488,   488,   488,   488,   488,
     488,  2528,   405,   366,   264,   488,   488,  2785,   488,   106,
     488,   448,  2198,  2199,   488,   486,   488,  2203,  2204,   488,
     488,  1253,  2208,   488,   488,  2211,  2212,   279,   486,    36,
    2216,   485,   167,   298,   215,   447,   356,   357,  2565,   486,
     486,   486,    85,   130,   487,   327,   486,   486,  1256,   216,
     114,  2237,    36,   352,  1286,  2241,  2713,   149,    73,   896,
     121,   149,    36,  2237,   487,   348,    54,  2241,  2595,   432,
     348,  2598,    36,   486,   490,  1307,  2262,  1309,   429,   486,
     486,  2237,   434,    73,    36,  2241,  1318,   429,  1320,   184,
     416,    67,  2264,  2265,   282,    67,   486,   490,    36,   398,
     350,   400,   475,   269,   366,   184,   240,   486,  1316,  2295,
     722,   416,    36,   282,   486,   486,   486,   416,  2304,   282,
    1352,   487,   487,   422,   722,   262,   425,  2313,   279,  1361,
    1362,     9,   347,   334,   196,   279,   279,    33,   119,   486,
    1372,  1373,  1374,  1375,   487,  1377,   466,   467,   427,     9,
      22,  1383,   487,  1385,  2057,   581,  2070,  2343,  1384,  2266,
    2020,  1752,  2712,  2470,  1396,  1397,  2776,  2106,  2307,  1401,
    1402,  2782,  2852,  2075,  1406,  1407,  1408,  1409,  2627,  1411,
    1412,  2830,  2818,   883,  2546,  1746,  1758,  2111,  2779,  1808,
    2828,  2074,  1743,  2777,  1812,  2097,  1073,  1848,  2398,  1431,
    1432,  2097,   849,   824,  1707,  1829,   871,  1355,  2689,  2607,
       8,  2383,  2398,    11,   870,  1447,  2767,  2403,    16,    17,
      18,  1722,  2000,  1329,  2410,  2701,  1354,  2413,  2258,   873,
    1693,  1986,  2228,  2592,  2243,    33,  2422,  2423,  1984,  2679,
    2426,  1449,  2678,    41,  1868,  2696,  1198,  2697,  1198,  2466,
      48,  1198,  2438,  2780,  1198,  2765,  2752,  2766,  1283,  1605,
    1884,  2447,  1494,  1710,  2438,  1181,  2452,  1645,  1532,  2455,
    1642,  1423,  1287,  2447,   493,    73,  2462,  2463,  2452,  2671,
    1904,  2455,  2438,  1815,   896,  1086,  1489,  1308,  2474,   855,
    2476,  2447,  2021,  1309,    -1,    -1,  2452,    -1,   896,  2455,
    2474,    -1,   521,    -1,   722,    -1,    -1,    -1,    -1,  1933,
    2496,    -1,  1149,    -1,    -1,    -1,  1940,    -1,  2474,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   475,     8,
      -1,    -1,    11,    -1,    -1,  1959,    -1,    16,    17,    18,
      -1,   488,  2528,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   572,    -1,  2257,    -1,  2259,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2537,     8,    -1,    -1,    11,
    1578,    -1,  2558,  1605,   172,    -1,    -1,    -1,  2564,  2565,
      -1,    -1,    -1,    -1,  2558,    -1,    -1,  2559,   186,  2599,
      -1,    -1,    -1,   191,    -1,    -1,    -1,   722,    -1,    41,
      -1,  2587,  2558,    -1,    -1,  2591,    48,  1639,  1245,  2595,
      -1,    -1,  2598,  2599,   212,   213,   563,  2591,    -1,  1627,
      -1,    -1,    -1,    -1,  2610,    -1,    -1,    -1,   226,    -1,
      -1,    73,    -1,    -1,  2620,  2591,    -1,  1645,  2624,  2625,
    1672,    -1,    -1,    36,    -1,    -1,    -1,  1679,    -1,   596,
      -1,  2075,    -1,  1661,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1693,    55,    -1,    -1,  1697,   264,    -1,  1700,   267,
    1702,  1679,    -1,    -1,    -1,    -1,    -1,  2379,   896,    -1,
    2652,    -1,    -1,   281,  1692,  1693,   633,   634,   635,  1697,
    2676,    -1,    -1,  2679,    -1,     8,  2398,    -1,    11,    -1,
     142,    -1,    -1,    -1,    -1,  2679,    -1,    -1,    -1,    -1,
       8,    -1,   105,    11,    -1,  2701,  1748,    -1,    16,    17,
      18,    -1,    -1,  2679,    -1,    -1,  2712,    -1,    41,    -1,
     172,    -1,    -1,  1370,    -1,    48,  2708,  1149,  2712,    -1,
      -1,    -1,    -1,    -1,   186,    -1,  2732,    -1,    -1,   191,
      -1,  1149,    -1,    -1,    -1,    -1,  2712,    -1,    -1,    -1,
      73,    -1,    -1,    -1,    -1,  2751,  2752,    -1,    -1,    -1,
      -1,   896,    -1,   371,    -1,    -1,  1808,    -1,   171,    -1,
    2204,  1813,    -1,    -1,   226,    -1,    -1,  1819,  1820,  1821,
    1822,    -1,    -1,  2779,  2780,    -1,    -1,    -1,    -1,    -1,
     193,  1833,   281,    -1,    -1,    -1,    -1,    -1,  1840,    -1,
    2796,  1843,  2798,    -1,    -1,     8,    -1,  2789,    -1,    -1,
      -1,    -1,  2796,    16,    17,    18,  2528,  1859,  1860,   142,
     849,    -1,    -1,  1245,    -1,    -1,    -1,    -1,  1846,   281,
    2796,    -1,    -1,    -1,    -1,    -1,    -1,  1245,    -1,   242,
      -1,    -1,    -1,    -1,    -1,  1492,    -1,   250,    -1,   172,
      -1,    -1,    -1,    -1,    -1,  1897,    -1,    -1,    -1,   262,
      -1,    -1,   470,   186,  2860,   473,   474,   475,   191,   477,
     478,   479,   480,   481,   482,    -1,   833,  1524,    -1,  2313,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     293,    -1,    36,    -1,    -1,    -1,    -1,    -1,    -1,   856,
      -1,    -1,    -1,   226,   212,    -1,    -1,    -1,    -1,  2343,
      -1,    55,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   371,
      -1,  1149,    -1,    -1,    -1,   882,    -1,    -1,    -1,    -1,
      -1,  1973,    -1,    -1,    -1,   338,  2648,    -1,   895,  1981,
    1982,  1983,  1984,    -1,  1986,  1987,    -1,    -1,  1370,  1991,
    1992,  1969,    -1,    -1,    -1,    -1,    -1,   360,   281,   916,
      -1,   105,  1370,    -1,    -1,    -1,  1984,    -1,  1986,  2403,
      -1,    -1,    -1,   281,    -1,    -1,    -1,   380,  2020,  2413,
      -1,    -1,    -1,    -1,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,  2036,    -1,  2038,    -1,    -1,    -1,
    2042,  2043,  2044,    -1,  2046,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1149,    -1,    -1,  1245,   470,    -1,
    2062,    -1,  2064,    -1,    -1,   477,   478,   479,   480,   481,
     482,    -1,    -1,    -1,    -1,  2077,  2078,  2079,  2080,  2081,
    2082,  2083,  2084,  2085,  2086,    -1,     0,    -1,   371,   193,
    1079,    -1,  1081,    -1,    -1,    -1,    -1,    -1,    -1,  2101,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2780,  2111,
    1492,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   281,    -1,
    2122,    -1,    -1,  2125,  1492,    -1,    -1,    -1,    -1,    -1,
    2132,    -1,    -1,    -1,  2528,    -1,    -1,    -1,   242,  2141,
    1057,    -1,  1524,  2121,    -1,    -1,   250,    -1,    -1,    -1,
    1245,    -1,    -1,    -1,    -1,    -1,  1524,    -1,   262,    -1,
       8,    -1,    -1,    11,    -1,    -1,    -1,  1084,    16,    17,
      18,  2565,    -1,    -1,    -1,    -1,    -1,    -1,    92,    -1,
      -1,    -1,  1370,    -1,    -1,    33,    -1,   470,    -1,   293,
      -1,    -1,    -1,    -1,   477,   478,   479,   480,   481,   482,
      -1,  2595,    -1,    -1,  2598,   473,   474,   475,    -1,   477,
     478,   479,   480,   481,   482,  2217,    -1,    -1,  2220,  2221,
    2222,  2223,  1829,    -1,    -1,  2227,  2228,    -1,  2230,    -1,
     144,  2233,    -1,    -1,   338,  2237,    -1,    -1,    -1,  2241,
      -1,    -1,    -1,   157,    -1,  2247,    -1,    -1,   162,    -1,
      -1,    -1,    -1,   167,    -1,    -1,   360,    -1,    -1,  2237,
      -1,  1868,   176,  2241,  2266,   179,    -1,    -1,    -1,  2271,
      -1,    -1,    -1,  2275,    -1,  1370,   380,  1884,    -1,    -1,
      -1,  2283,    -1,    -1,    -1,    -1,  2264,  2265,    -1,    -1,
      -1,    -1,    -1,    -1,   208,    -1,    -1,  1904,    -1,    -1,
      -1,    -1,    -1,    -1,  1492,    -1,  2308,    -1,    -1,    -1,
     473,   474,   475,   227,   477,   478,   479,   480,   481,   482,
      -1,    -1,    -1,    -1,    -1,    -1,  1933,    -1,    -1,    -1,
      -1,    -1,    -1,  1940,    -1,    -1,  1524,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1959,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      67,    -1,   276,    -1,   212,   279,    73,    -1,    -1,  1286,
      -1,   285,  2374,  1362,    -1,    -1,    -1,    -1,    85,    -1,
    2382,    -1,    -1,  1372,    -1,  1374,  2780,    -1,  1377,    -1,
    1307,  2393,  1309,    -1,  1383,    -1,  1385,  1492,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2383,    -1,   114,  1397,   116,
      -1,    -1,    -1,  1402,    -1,    -1,    -1,  1406,  1407,  1408,
    1409,    -1,  1411,  1412,    -1,    -1,   340,    -1,    -1,  1524,
      -1,    -1,    -1,   281,    -1,  1352,  2438,  2439,    -1,    -1,
    2442,    -1,    -1,  2445,    -1,  2447,    -1,  1829,    -1,    -1,
    2452,    -1,    -1,  2455,    -1,  2457,    -1,    -1,  2460,    -1,
      -1,  1829,    -1,    -1,   171,    -1,    -1,    -1,  2075,  2447,
      -1,    -1,  2474,    -1,  2452,    -1,    -1,  2455,    -1,    -1,
     394,    -1,    -1,    -1,   552,   553,  1868,    -1,    -1,    -1,
      -1,   198,  2494,  2495,    -1,    -1,    -1,    -1,    -1,    -1,
    1868,  2503,  1884,    -1,    -1,    -1,     0,   421,    -1,    -1,
      -1,    -1,    -1,    -1,  1431,   429,  1884,    -1,    -1,    -1,
      -1,    -1,  1904,    -1,    -1,    -1,    -1,  2529,  2530,    -1,
      -1,   445,    -1,   447,   448,    -1,  1904,  2539,    -1,    -1,
      -1,  2543,    -1,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,  1933,    -1,  2555,    -1,    -1,  2558,   264,  1940,  2537,
      -1,    -1,   269,    -1,    -1,  1933,    -1,    -1,    -1,    -1,
     484,    -1,  1940,   487,   488,   489,  2578,  1959,    -1,    -1,
      -1,  2559,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2591,
      -1,  1959,    -1,    -1,  2596,    -1,    -1,  2204,    92,    -1,
      -1,    -1,    -1,  2605,    -1,   312,    -1,  2609,    -1,    -1,
      -1,    -1,    -1,  2591,    -1,    -1,  2618,    -1,    -1,    -1,
     327,  2599,    -1,    -1,    -1,   473,   474,   475,    -1,   477,
     478,   479,   480,   481,   482,    -1,    -1,    -1,  2640,    -1,
      -1,  1829,    -1,     8,    -1,    -1,    11,    -1,    -1,  2651,
     144,    -1,    -1,   721,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   157,     8,    -1,    -1,    11,   162,    -1,
     738,    -1,    -1,   167,  2652,    -1,    41,  2679,    -1,    -1,
    1868,    -1,   176,    48,    -1,   179,  2688,    -1,    -1,    -1,
    2692,    -1,    -1,  2075,  2696,    -1,  1884,    41,   766,    -1,
      -1,    -1,    -1,    -1,    48,    -1,  2313,  2075,    73,    -1,
    2712,  2713,  2714,  2715,   208,   422,  1904,    -1,   786,   787,
     788,    -1,    -1,   791,    -1,    -1,    -1,    -1,    -1,    73,
    2708,    -1,    -1,   227,  1829,    -1,  2343,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1933,   814,    -1,    -1,    -1,
      -1,    -1,  1940,    -1,  2756,  1672,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2765,    -1,  2767,    -1,    -1,    -1,    -1,
      -1,  1959,    -1,  1868,  2776,    -1,    -1,   142,    -1,    -1,
      -1,    -1,   276,    -1,     8,   279,    -1,    11,  2790,  1884,
      -1,   285,    -1,    -1,  2796,   863,  2403,    -1,   142,   867,
     868,    -1,    -1,    -1,    -1,    -1,  2413,   172,    -1,  1904,
      -1,  2789,  2814,    -1,    -1,    -1,    -1,    41,    -1,    -1,
      -1,   186,  2204,    -1,    48,    -1,   191,    -1,   172,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2204,    -1,  1933,    -1,
      -1,    -1,   186,    -1,  1833,  1940,   340,   191,    -1,    73,
      -1,    -1,    -1,   921,    -1,    -1,    -1,    -1,    -1,     8,
     928,   226,    11,    -1,  1959,    -1,    -1,    16,    17,    18,
      -1,    -1,    -1,   807,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   949,   226,    -1,    -1,    -1,    -1,  2075,    -1,    -1,
      -1,    -1,    41,    -1,    -1,    -1,  1813,    -1,    -1,    48,
     394,    -1,    -1,  1820,  1821,  1822,    -1,    -1,    -1,    -1,
      -1,    -1,   846,    -1,    -1,    -1,   281,    -1,   142,    -1,
      -1,  2528,    -1,  1840,    73,    -1,    -1,   421,    -1,    -1,
      -1,  2313,    -1,    -1,    -1,   429,    -1,   281,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2313,    -1,    -1,   172,    -1,
      -1,   445,    -1,   447,   448,    -1,    -1,    -1,  2565,    -1,
      -1,  2343,   186,    -1,    -1,    -1,    -1,   191,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2343,    -1,    -1,    -1,    -1,
    2075,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2595,    -1,
     484,  2598,    -1,   487,   488,   489,  1064,    -1,    -1,    -1,
      -1,    -1,   226,    -1,    -1,    -1,   371,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2204,    -1,    -1,   953,
      -1,  2403,    -1,   172,    -1,    -1,   960,   371,    -1,    -1,
      -1,  2413,    -1,    -1,    -1,  2403,    -1,   186,    -1,    -1,
      -1,    -1,   191,    -1,    -1,  2413,    -1,    -1,    -1,  2038,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   281,    -1,    -1,
      -1,    -1,    -1,    -1,  1981,  1982,  1983,    -1,    -1,    -1,
      -1,    -1,    -1,  2062,    23,    -1,    -1,   226,    -1,    -1,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    36,  2077,  2078,
    2079,  2080,  2081,  2082,  2083,  2084,  2085,  2086,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   470,    55,    -1,    -1,  2204,
      -1,    -1,   477,   478,   479,   480,   481,   482,  1186,  2036,
      -1,    -1,    -1,    -1,    -1,  2313,   470,    -1,    -1,    -1,
      -1,    -1,   281,   477,   478,   479,   480,   481,   482,  1207,
      -1,    -1,  1210,    -1,    -1,  1213,  2528,   371,    -1,    -1,
      -1,    -1,  1220,  1221,  1222,  2343,   105,    -1,    -1,    -1,
    2528,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1240,  2780,    -1,    -1,    -1,    -1,  1246,  1247,
    1248,  1249,    -1,  2565,  2101,   134,  1254,  1255,    -1,    -1,
      -1,  1259,    -1,    -1,    -1,  1263,    -1,  2565,  1266,  1267,
    1268,  1269,  1270,  1271,  1272,  1273,  1274,    -1,  2125,  1277,
      -1,    -1,    -1,  2595,  1282,  2403,  2598,  1285,  2313,  1287,
      -1,  1289,   371,    -1,    -1,  2413,    -1,  2595,    -1,    -1,
    2598,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1311,   193,    36,   470,    -1,  2343,    -1,
    1184,    -1,    -1,   477,   478,   479,   480,   481,   482,    -1,
      -1,    -1,    -1,    -1,    55,    -1,    -1,    -1,    -1,    -1,
    1338,  1339,  1206,    -1,    -1,    -1,    -1,  1211,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1223,
    1224,  1225,    -1,   242,    -1,  1229,    -1,    -1,    -1,    -1,
      -1,   250,    -1,  2220,  2221,  2222,  2223,    -1,  2403,    -1,
      -1,    -1,    -1,   262,   105,   106,    -1,    -1,  2413,    -1,
      -1,   470,    -1,   114,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   283,     8,    -1,    -1,    11,    -1,
    2528,    -1,    -1,    -1,   293,    -1,    -1,    -1,    -1,  1417,
    1284,    -1,  1420,  1421,    -1,  1423,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    41,    -1,
      -1,    -1,    -1,    -1,    -1,    48,    -1,  2565,    -1,    -1,
     171,    -1,    -1,    -1,   333,  1453,    -1,     0,   337,   338,
      -1,  1325,    -1,    -1,    -1,    -1,    -1,    -1,  2780,    -1,
      73,    -1,   193,  1337,    -1,    -1,    19,  2595,  1342,    -1,
    2598,   360,  2780,    -1,    -1,    -1,    29,   366,    31,    32,
     108,   109,    -1,  1491,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   380,    -1,  2528,    47,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    56,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   242,    -1,    -1,    -1,    68,    -1,    -1,    -1,   250,
      -1,    -1,    -1,  1531,    -1,    -1,    79,    -1,  1536,   142,
    2565,   262,    -1,   264,    -1,    -1,    -1,    90,    -1,    92,
      -1,    -1,    -1,   432,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   182,   183,    -1,   110,    -1,   172,
    2595,    -1,   293,  2598,    -1,    -1,  2495,    -1,    -1,    -1,
    1578,   124,    -1,   186,    -1,    -1,    -1,    -1,   191,    -1,
      -1,   134,    -1,    -1,    -1,    -1,  1594,   140,  1596,  1597,
      -1,    -1,    -1,    -1,    -1,   148,  1604,   150,   151,  1607,
    2529,  2530,    -1,    -1,    -1,    -1,    -1,   338,    -1,    -1,
     163,    -1,    -1,   226,  2543,    -1,   244,   245,   246,   247,
     248,   249,    -1,    -1,   252,   253,    -1,    -1,    -1,   360,
      -1,    -1,     8,  1641,    -1,    11,  1644,   190,  1646,    -1,
      16,    17,    18,    -1,    -1,    -1,  2503,    -1,    -1,   380,
      -1,   382,  2780,    -1,   385,    -1,    -1,    33,    -1,    -1,
    1534,    -1,    -1,   108,   109,    41,    -1,    -1,   281,    -1,
      -1,    -1,    48,    -1,    -1,    -1,   229,    -1,    -1,    -1,
    2609,    -1,    -1,  1557,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    73,  2555,  1707,
    1574,    -1,  1576,  1577,    -1,  1579,    -1,  1581,    -1,    -1,
      -1,    -1,  1586,    -1,  1722,    -1,    -1,    -1,    -1,  1593,
      -1,    -1,    -1,    -1,  1598,    -1,    -1,  1601,   356,   357,
      -1,    -1,  1740,    -1,    -1,  1609,    -1,   182,   183,  1613,
    1614,  1615,  1616,    -1,    -1,  2780,    -1,    -1,  1622,  1623,
      -1,  1625,  1626,   306,    -1,   486,   309,    -1,   371,    -1,
      -1,  2618,    -1,  1637,    -1,    -1,  1640,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1648,  1649,  1650,  1651,  1652,  1653,
    1654,  1655,  1656,  1657,   337,    -1,     0,    -1,    -1,    -1,
    1798,  1665,   345,    -1,  2651,  1669,   172,    -1,    -1,   244,
     245,   246,   247,   248,   249,    -1,   359,   252,   253,    -1,
     186,    -1,    -1,   366,    -1,   191,  1690,   370,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   380,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   212,   213,   466,   467,
      -1,   394,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     226,    -1,    -1,    -1,    -1,    -1,    -1,   470,   486,    -1,
      -1,    -1,    -1,    -1,   477,   478,   479,   480,   481,   482,
      -1,    -1,    -1,  1881,    -1,    -1,    -1,   430,    92,    -1,
      -1,    -1,   435,  1891,    -1,    -1,    -1,  1895,   264,    -1,
    1898,   267,    -1,    -1,    -1,   448,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   281,    -1,    -1,   284,    23,
      -1,   356,   357,    -1,    -1,    29,  1924,  1925,    -1,   472,
      -1,    -1,    36,    -1,    -1,    -1,    -1,  1801,  1802,  1803,
     144,    -1,    -1,   486,    -1,    -1,   489,    -1,    -1,  1947,
      -1,    55,  1950,   157,  1952,    -1,    -1,    -1,   162,    -1,
      -1,    -1,  1960,   167,    -1,    -1,    -1,    -1,    -1,    -1,
    1968,  1969,   176,    -1,  1838,   179,     3,    -1,    -1,    -1,
      -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    -1,    16,
      17,    18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1997,
      -1,   105,    -1,    -1,   208,   371,    33,    -1,  2006,    36,
      -1,    -1,    -1,    -1,    41,    -1,  1880,    -1,    -1,    -1,
      -1,    48,  1886,   227,  2022,    -1,    -1,    -1,    -1,    -1,
     134,   466,   467,    -1,    -1,    -1,    -1,  1901,  1902,  1903,
      -1,  1905,  1906,  1907,  1908,    -1,    73,  1911,  1912,  1913,
    1914,  1915,  1916,  1917,  1918,  1919,  1920,  1921,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   276,    -1,    -1,   279,    -1,    -1,  1942,    -1,
    1944,   285,    -1,    -1,  1948,  1949,    -1,    -1,    -1,   193,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1962,  1963,
    1964,  1965,    -1,  1967,   470,    -1,    -1,   473,   474,   475,
      -1,   477,   478,   479,   480,   481,   482,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   490,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   340,    -1,   242,    -1,
      -1,    -1,    -1,    -1,     8,   172,   250,    11,    -1,    -1,
      -1,    -1,    16,    17,    18,    -1,    -1,  2155,   262,   186,
      -1,    -1,    -1,    -1,   191,    -1,    -1,    -1,    -1,    33,
      -1,    -1,    -1,    -1,    -1,  2039,    -1,    -1,    -1,   283,
      -1,    -1,    -1,    -1,    -1,   212,   213,    -1,    -1,   293,
     394,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   226,
    2198,  2199,    -1,    -1,    -1,  2203,    -1,    -1,    -1,    -1,
    2208,    -1,    -1,  2211,  2212,    -1,    -1,   421,  2216,    -1,
      -1,    -1,    -1,    -1,    -1,   429,    -1,    -1,    -1,   333,
      -1,    -1,    -1,   337,   338,    -1,    -1,   264,    -1,    -1,
     267,   445,    -1,   447,   448,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   281,    -1,   360,   284,    -1,    -1,
      -1,    -1,   366,    -1,  2262,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   380,    -1,    -1,    -1,
     484,    -1,    -1,   487,   488,   489,    -1,    -1,    -1,    -1,
      -1,    -1,  2156,    -1,    -1,    -1,  2160,  2161,    -1,  2163,
      -1,    -1,  2166,  2167,  2168,  2169,  2304,    -1,    -1,  2173,
    2174,  2175,  2176,  2177,  2178,  2179,  2180,  2181,  2182,  2183,
    2184,    -1,     8,    -1,    -1,    11,    -1,    -1,   432,    -1,
      16,    17,    18,  2197,    -1,    -1,  2200,    -1,  2202,    -1,
      -1,    -1,  2206,    -1,   371,  2209,  2210,    33,   212,  2213,
    2214,    -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,
      -1,    -1,    48,    -1,    -1,    -1,     8,    -1,    -1,    11,
      21,    -1,    -1,    -1,    16,    17,    18,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,
    2254,    33,    -1,    -1,    -1,    -1,    -1,  2261,    -1,    41,
      -1,    -1,    -1,    -1,    -1,    -1,    48,    -1,    -1,    -1,
    2274,    -1,    -1,    -1,    -1,    -1,    -1,   281,    -1,    -1,
      -1,    -1,    -1,    74,  2422,  2423,    -1,    -1,  2426,    -1,
      -1,    73,    -1,    -1,    -1,    -1,    -1,    -1,    89,    -1,
      -1,    -1,    -1,   470,    -1,    -1,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2462,  2463,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2476,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   172,    -1,    -1,    -1,
      -1,    -1,   143,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     186,   152,    -1,    -1,    -1,   191,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   164,    -1,    -1,    -1,    -1,   169,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   212,   213,    -1,    -1,
     172,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     226,    -1,  2406,   194,   186,    -1,  2410,    -1,    -1,   191,
      -1,    -1,  2416,  2417,  2418,    -1,    -1,  2421,    -1,    -1,
    2424,  2425,    -1,    -1,    -1,  2429,    -1,    -1,    -1,    -1,
     212,   213,    -1,    -1,    -1,    -1,    -1,    -1,   264,    -1,
      -1,   267,    -1,    -1,   226,    -1,   237,    -1,    -1,  2587,
     241,    -1,    -1,    -1,    -1,   281,    -1,    -1,   284,    -1,
      -1,  2599,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   473,
     474,   475,  2610,   477,   478,   479,   480,   481,   482,    -1,
      -1,    -1,   264,    -1,    -1,   267,    -1,  2625,    -1,    -1,
      -1,    -1,  2496,    -1,    -1,    -1,    -1,    -1,    -1,   281,
      -1,    -1,   284,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2514,    -1,    -1,   304,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   371,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   349,  2563,
    2564,   352,    -1,  2701,  2568,  2569,  2570,    -1,    -1,   360,
      -1,    -1,   363,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   371,
      -1,   382,    -1,    -1,  2732,    -1,    -1,    -1,    -1,  2603,
    2604,    -1,    -1,   394,    -1,    -1,    -1,    -1,    -1,    -1,
     401,    -1,  2616,  2751,  2752,    -1,    -1,    -1,    -1,   410,
      -1,    -1,    -1,    -1,  2628,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   470,    -1,    -1,   473,   474,   475,
     441,   477,   478,   479,   480,   481,   482,    -1,    -1,    -1,
    2798,   487,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2673,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2691,   470,    -1,
      -1,   473,   474,   475,    -1,   477,   478,   479,   480,   481,
     482,    -1,    -1,    -1,    -1,   487,  2710,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2724,    -1,  2860,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    -1,    -1,    -1,    -1,    35,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,  2787,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,  2801,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,   129,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,   166,    -1,   168,   169,
     170,   171,   172,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
     200,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,    -1,    -1,   223,   224,   225,   226,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,    -1,   277,   278,    -1,
      -1,   281,   282,   283,    -1,    -1,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,    -1,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
      -1,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,    -1,   392,   393,    -1,   395,   396,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,    -1,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,    -1,    -1,   423,   424,   425,   426,   427,   428,    -1,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,    -1,    -1,    -1,    -1,    -1,    -1,   477,   478,   479,
      -1,    -1,    -1,    -1,   484,    -1,   486,   487,    -1,    -1,
      -1,   491,    -1,   493,   494,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,   166,    -1,
     168,   169,   170,   171,   172,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,   200,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,    -1,    -1,   223,   224,   225,   226,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,    -1,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,    -1,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,    -1,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,    -1,    -1,   423,   424,   425,   426,   427,
     428,    -1,   430,   431,   432,   433,   434,   435,   436,    -1,
     438,   439,   440,   441,   442,   443,    -1,    -1,   446,    -1,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,    -1,   472,    -1,    -1,    -1,    -1,   477,
     478,    -1,    -1,    -1,    -1,    -1,   484,    -1,   486,   487,
      -1,    -1,    -1,   491,    -1,   493,   494,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,    -1,    -1,   223,   224,   225,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,    -1,    -1,   423,   424,   425,
     426,   427,   428,    -1,   430,   431,   432,   433,   434,   435,
     436,    -1,   438,   439,   440,   441,   442,   443,    -1,    -1,
     446,    -1,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,    -1,   472,    -1,    -1,    -1,
      -1,   477,   478,    -1,    -1,    -1,    -1,    -1,   484,    -1,
     486,    -1,    -1,    -1,    -1,   491,    -1,   493,   494,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,   172,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,   200,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,    -1,   222,   223,
     224,   225,   226,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,    -1,    -1,   281,   282,   283,
      -1,    -1,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,    -1,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,    -1,   392,   393,
      -1,   395,   396,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,    -1,    -1,   423,
     424,   425,   426,   427,   428,    -1,   430,   431,   432,   433,
     434,   435,   436,    -1,   438,   439,   440,   441,   442,   443,
      -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,    -1,    -1,    -1,
      -1,    -1,    -1,   477,   478,    -1,    -1,    -1,    -1,    -1,
     484,    -1,   486,    -1,    -1,    -1,    -1,   491,    -1,   493,
     494,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,   166,    -1,   168,   169,   170,   171,
     172,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,   200,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,    -1,
      -1,   223,   224,   225,   226,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,    -1,   277,   278,    -1,    -1,   281,
     282,   283,    -1,    -1,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
      -1,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,    -1,   395,   396,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,    -1,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,    -1,
      -1,   423,   424,   425,   426,   427,   428,    -1,   430,   431,
     432,   433,   434,   435,   436,    -1,   438,   439,   440,   441,
     442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,    -1,
      -1,    -1,    -1,    -1,    -1,   477,   478,   479,    -1,    -1,
      -1,    -1,   484,    -1,   486,    -1,    -1,    -1,    -1,   491,
      -1,   493,   494,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    -1,    -1,    -1,    -1,    35,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,   166,    -1,   168,   169,
     170,   171,   172,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
     200,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,    -1,    -1,   223,   224,   225,   226,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,    -1,   277,   278,    -1,
      -1,   281,   282,   283,    -1,    -1,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,    -1,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
      -1,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,    -1,   392,   393,    -1,   395,   396,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,    -1,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,    -1,    -1,   423,   424,   425,   426,   427,   428,    -1,
     430,   431,   432,   433,   434,   435,   436,    -1,   438,   439,
     440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,    -1,    -1,    -1,    -1,    -1,    -1,   477,   478,    -1,
      -1,    -1,    -1,    -1,   484,    -1,   486,    -1,    -1,    -1,
      -1,   491,    -1,   493,   494,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,   166,    -1,
     168,   169,   170,   171,   172,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,   200,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,    -1,    -1,   223,   224,   225,   226,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,    -1,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,    -1,   392,   393,    -1,   395,   396,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,    -1,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,    -1,    -1,   423,   424,   425,   426,   427,
     428,    -1,   430,   431,   432,   433,   434,   435,   436,    -1,
     438,   439,   440,   441,   442,   443,    -1,    -1,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,    -1,    -1,    -1,    -1,    -1,    -1,   477,
     478,    -1,    -1,    -1,    -1,    -1,   484,    -1,   486,   487,
      -1,    -1,    -1,   491,    -1,   493,   494,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,    -1,    -1,   223,   224,   225,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,    -1,    -1,   423,   424,   425,
     426,   427,   428,    -1,   430,   431,   432,   433,   434,   435,
     436,    -1,   438,   439,   440,   441,   442,   443,    -1,    -1,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,    -1,    -1,    -1,    -1,    -1,
      -1,   477,   478,    -1,    -1,    -1,    -1,    -1,   484,    -1,
     486,   487,    -1,    -1,    -1,   491,    -1,   493,   494,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,   166,    -1,   168,   169,   170,   171,   172,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,   200,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,    -1,    -1,   223,
     224,   225,   226,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,    -1,    -1,   281,   282,   283,
      -1,    -1,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,    -1,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,    -1,   392,   393,
      -1,   395,   396,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,    -1,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,    -1,    -1,   423,
     424,   425,   426,   427,   428,    -1,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
      -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,    -1,    -1,    -1,
      -1,    -1,    -1,   477,   478,    -1,    -1,    -1,    -1,    -1,
     484,    -1,   486,    -1,    -1,    -1,    -1,   491,    -1,   493,
     494,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,   166,   167,   168,   169,   170,   171,
     172,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,   200,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,    -1,
      -1,   223,   224,   225,   226,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,    -1,   277,   278,    -1,    -1,   281,
     282,   283,    -1,    -1,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
      -1,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,    -1,   395,   396,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,    -1,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,    -1,
      -1,   423,   424,   425,   426,   427,   428,    -1,   430,   431,
     432,   433,   434,   435,   436,    -1,   438,   439,   440,   441,
     442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,    -1,
      -1,    -1,    -1,    -1,    -1,   477,   478,    -1,    -1,    -1,
      -1,    -1,   484,    -1,   486,    -1,    -1,    -1,    -1,   491,
      -1,   493,   494,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    35,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,   166,    -1,   168,   169,
     170,   171,   172,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
     200,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,    -1,    -1,   223,   224,   225,   226,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,    -1,   277,   278,    -1,
      -1,   281,   282,   283,    -1,    -1,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,    -1,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
      -1,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,    -1,   392,   393,    -1,   395,   396,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,    -1,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,    -1,    -1,   423,   424,   425,   426,   427,   428,    -1,
     430,   431,   432,   433,   434,   435,   436,    -1,   438,   439,
     440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,    -1,    -1,    -1,    -1,    -1,    -1,   477,   478,    -1,
      -1,    -1,    -1,    -1,   484,    -1,   486,    -1,    -1,    -1,
      -1,   491,    -1,   493,   494,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,   166,    -1,
     168,   169,   170,   171,   172,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,   200,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,    -1,    -1,   223,   224,   225,   226,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,    -1,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,    -1,   392,   393,    -1,   395,   396,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,    -1,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,    -1,    -1,   423,   424,   425,   426,   427,
     428,    -1,   430,   431,   432,   433,   434,   435,   436,    -1,
     438,   439,   440,   441,   442,   443,    -1,    -1,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,    -1,    -1,    -1,    -1,    -1,    -1,   477,
     478,    -1,    -1,    -1,    -1,    -1,   484,    -1,   486,    -1,
      -1,    -1,    -1,   491,    -1,   493,   494,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,    -1,    -1,   223,   224,   225,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,    -1,    -1,   423,   424,   425,
     426,   427,   428,    -1,   430,   431,   432,   433,   434,   435,
     436,    -1,   438,   439,   440,   441,   442,   443,    -1,    -1,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,    -1,    -1,    -1,    -1,    -1,
      -1,   477,   478,    -1,    -1,    -1,    -1,    -1,   484,    -1,
     486,    -1,    -1,    -1,    -1,   491,    -1,   493,   494,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,   166,    -1,   168,   169,   170,   171,   172,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,   200,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,    -1,    -1,   223,
     224,   225,   226,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,    -1,    -1,   281,   282,   283,
      -1,    -1,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,    -1,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,    -1,   392,   393,
      -1,   395,   396,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,    -1,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,    -1,    -1,   423,
     424,   425,   426,   427,   428,    -1,   430,   431,   432,   433,
     434,   435,   436,    -1,   438,   439,   440,   441,   442,   443,
      -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,    -1,    -1,    -1,
      -1,    -1,    -1,   477,   478,    -1,    -1,    -1,    -1,    -1,
     484,    -1,   486,    -1,    -1,    -1,    -1,   491,    -1,   493,
     494,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,   166,    -1,   168,   169,   170,   171,
     172,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,   200,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,    -1,
      -1,   223,   224,   225,   226,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,    -1,   277,   278,    -1,    -1,   281,
     282,   283,    -1,    -1,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
      -1,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,    -1,   395,   396,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,    -1,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,    -1,
      -1,   423,   424,   425,   426,   427,   428,    -1,   430,   431,
     432,   433,   434,   435,   436,    -1,   438,   439,   440,   441,
     442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,    -1,
      -1,    -1,    -1,    -1,    -1,   477,   478,    -1,    -1,    -1,
      -1,    -1,   484,    -1,   486,    -1,    -1,    -1,    -1,   491,
      -1,   493,   494,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    35,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,   166,    -1,   168,   169,
     170,   171,   172,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
     200,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,    -1,    -1,   223,   224,   225,   226,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,    -1,   277,   278,    -1,
      -1,   281,   282,   283,    -1,    -1,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,    -1,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
      -1,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,    -1,   392,   393,    -1,   395,   396,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,    -1,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,    -1,    -1,   423,   424,   425,   426,   427,   428,    -1,
     430,   431,   432,   433,   434,   435,   436,    -1,   438,   439,
     440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,    -1,    -1,    -1,    -1,    -1,    -1,   477,   478,    -1,
      -1,    -1,    -1,    -1,   484,    -1,   486,    -1,    -1,    -1,
      -1,   491,    -1,   493,   494,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,   166,    -1,
     168,   169,   170,   171,   172,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,   200,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,    -1,    -1,   223,   224,   225,   226,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,    -1,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,    -1,   392,   393,    -1,   395,   396,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,    -1,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,    -1,    -1,   423,   424,   425,   426,   427,
     428,    -1,   430,   431,   432,   433,   434,   435,   436,    -1,
     438,   439,   440,   441,   442,   443,    -1,    -1,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,    -1,    -1,    -1,    -1,    -1,    -1,   477,
     478,    -1,    -1,    -1,    -1,    -1,   484,    -1,   486,    -1,
      -1,    -1,    -1,   491,    -1,   493,   494,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,   215,
     216,   217,   218,   219,   220,    -1,    -1,   223,   224,   225,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,    -1,   268,   269,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,    -1,    -1,   423,   424,   425,
     426,   427,   428,    -1,   430,   431,   432,   433,   434,   435,
     436,    -1,   438,   439,   440,   441,   442,   443,    -1,    -1,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,    -1,    -1,    -1,    -1,    -1,
      -1,   477,   478,    -1,    -1,    -1,    -1,    -1,   484,    -1,
     486,    -1,    -1,    -1,    -1,   491,    -1,   493,   494,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
      -1,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,   166,    -1,   168,   169,   170,   171,   172,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,   200,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,    -1,    -1,   223,
     224,   225,   226,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
      -1,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,    -1,    -1,   281,   282,   283,
      -1,    -1,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,    -1,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,    -1,   392,   393,
      -1,   395,   396,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,    -1,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,    -1,    -1,   423,
     424,   425,   426,   427,   428,    -1,   430,   431,   432,   433,
     434,   435,   436,    -1,   438,   439,   440,   441,   442,   443,
      -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   477,   478,    -1,    -1,     3,     4,     5,
       6,     7,   486,     9,    10,    -1,    -1,    -1,    -1,   493,
     494,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,    -1,    -1,   223,   224,   225,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,    -1,    -1,   423,   424,   425,
     426,   427,   428,    -1,   430,   431,   432,   433,   434,   435,
     436,    -1,   438,   439,   440,   441,   442,   443,    -1,    -1,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   477,   478,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     486,    -1,    -1,    -1,    -1,    -1,    -1,   493,   494,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
      -1,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,   166,    -1,   168,   169,   170,   171,   172,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,   200,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
     214,   215,   216,   217,   218,   219,   220,    -1,    -1,   223,
     224,   225,   226,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
      -1,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,    -1,    -1,   281,   282,   283,
      -1,    -1,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,    -1,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,    -1,   392,   393,
      -1,   395,   396,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,    -1,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,    -1,    -1,   423,
     424,   425,   426,   427,   428,    -1,   430,   431,   432,   433,
     434,   435,   436,    -1,   438,   439,   440,   441,   442,   443,
      -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   477,   478,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   486,    -1,    -1,    -1,    -1,    -1,    -1,   493,
     494,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    -1,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
      -1,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,   166,    -1,   168,   169,   170,   171,
      -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,   200,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,   214,   215,   216,   217,   218,   219,   220,    -1,
      -1,   223,   224,   225,    -1,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,    -1,   265,   266,    -1,   268,   269,   270,   271,
     272,   273,   274,   275,    -1,   277,   278,    -1,    -1,   281,
     282,   283,    -1,    -1,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
      -1,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,    -1,   395,   396,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,    -1,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,    -1,
      -1,   423,   424,   425,   426,   427,   428,    -1,   430,   431,
     432,   433,   434,   435,   436,    -1,   438,   439,   440,   441,
     442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   477,   478,     3,    -1,    -1,
      -1,    -1,   484,    -1,   486,    -1,    -1,    -1,    -1,   491,
      -1,   493,   494,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      36,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    -1,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,    -1,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
      -1,    -1,   168,   169,   170,   171,    -1,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,   215,
     216,   217,   218,   219,   220,    -1,    -1,   223,   224,   225,
      -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,    -1,   268,    -1,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,    -1,   289,    -1,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,    -1,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,    -1,   413,   414,   415,
     416,   417,   418,   419,   420,    -1,    -1,   423,   424,   425,
     426,   427,    -1,    -1,   430,   431,   432,   433,   434,   435,
     436,    -1,   438,    -1,   440,   441,   442,   443,    -1,    -1,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,    -1,    -1,     3,    -1,     5,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   487,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,    -1,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,    -1,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,   166,
      -1,   168,   169,   170,   171,   172,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,   200,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,    -1,   223,   224,   225,   226,
      -1,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,    -1,   265,   266,
     267,   268,    -1,   270,   271,   272,   273,   274,   275,    -1,
     277,   278,    -1,   280,   281,   282,   283,    -1,    -1,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,    -1,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,    -1,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,    -1,   403,   404,    -1,    -1,
     407,   408,   409,   410,   411,    -1,   413,   414,   415,   416,
     417,   418,   419,   420,    -1,    -1,   423,   424,   425,   426,
     427,   428,    -1,   430,   431,   432,   433,   434,   435,   436,
      -1,   438,   439,   440,   441,   442,   443,    -1,    -1,   446,
      -1,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,    -1,     3,   472,     5,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   486,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,    -1,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,   166,    -1,   168,
     169,   170,   171,   172,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,   200,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,    -1,   223,   224,   225,   226,    -1,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,    -1,   265,   266,   267,   268,
      -1,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
      -1,   280,   281,   282,   283,    -1,    -1,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,    -1,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,    -1,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,    -1,   392,   393,    -1,   395,   396,   397,   398,
     399,   400,   401,    -1,   403,   404,    -1,    -1,   407,   408,
     409,   410,   411,    -1,   413,   414,   415,   416,   417,   418,
     419,   420,    -1,    -1,   423,   424,   425,   426,   427,   428,
      -1,   430,   431,   432,   433,   434,   435,   436,    -1,   438,
     439,   440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,    -1,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   486,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,   166,    -1,   168,   169,   170,
     171,   172,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,   200,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
      -1,    -1,   223,   224,   225,   226,    -1,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,    -1,   265,   266,   267,   268,    -1,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,    -1,    -1,
     281,   282,   283,    -1,    -1,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,    -1,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
      -1,   392,   393,    -1,   395,   396,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,   413,   414,   415,   416,   417,   418,   419,   420,
      -1,    -1,   423,   424,   425,   426,   427,   428,    -1,   430,
     431,   432,   433,   434,   435,   436,    -1,   438,   439,   440,
     441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,    -1,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   486,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,   166,    -1,   168,   169,   170,   171,   172,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,   200,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,    -1,    -1,
     223,   224,   225,   226,    -1,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,    -1,   265,   266,   267,   268,    -1,   270,   271,   272,
     273,   274,   275,    -1,   277,   278,    -1,    -1,   281,   282,
     283,    -1,    -1,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,    -1,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,    -1,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,    -1,   392,
     393,    -1,   395,   396,   397,   398,   399,   400,   401,    -1,
     403,   404,    -1,    -1,   407,   408,   409,   410,   411,    -1,
     413,   414,   415,   416,   417,   418,   419,   420,    -1,    -1,
     423,   424,   425,   426,   427,   428,    -1,   430,   431,   432,
     433,   434,   435,   436,    -1,   438,   439,   440,   441,   442,
     443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,    -1,     3,     4,
       5,    -1,    -1,    -1,     9,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   486,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    -1,    94,
      95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,    -1,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,
      -1,   216,   217,   218,   219,   220,    -1,    -1,   223,    -1,
     225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,    -1,   259,   260,   261,   262,   263,    -1,
     265,   266,    -1,   268,    -1,   270,   271,   272,   273,   274,
     275,    -1,   277,   278,   279,    -1,   281,   282,   283,    -1,
      -1,   286,   287,    -1,   289,    -1,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,    -1,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,    -1,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,    -1,   392,   393,    -1,
     395,    -1,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,    -1,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,    -1,    -1,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,    -1,   438,    -1,   440,   441,   442,   443,    -1,
      -1,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,    -1,     3,    -1,    -1,    -1,
      -1,    -1,   477,   478,   479,    -1,    -1,    -1,    -1,    -1,
      -1,   486,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    31,    32,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    -1,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    -1,    94,    95,    96,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,    -1,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,    -1,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,    -1,
      -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,    -1,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,
     217,   218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,
      -1,   228,   229,   230,    -1,    -1,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,    -1,   259,   260,   261,   262,   263,    -1,   265,   266,
      -1,   268,    -1,   270,   271,   272,   273,   274,   275,    -1,
     277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,
     287,    -1,   289,    -1,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,    -1,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,    -1,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,    -1,   392,   393,   394,   395,    -1,
     397,   398,   399,   400,   401,    -1,   403,   404,    -1,    -1,
     407,   408,   409,   410,   411,    -1,   413,   414,   415,   416,
     417,   418,   419,   420,    -1,    -1,   423,   424,   425,   426,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
      -1,   438,    -1,   440,   441,   442,   443,    -1,    -1,   446,
      -1,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,    -1,     3,   472,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   486,
      19,    20,    21,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,    -1,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,
     169,   170,   171,    -1,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,    -1,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,    -1,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,
     219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,
     229,   230,    -1,    -1,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,    -1,
     259,   260,   261,   262,   263,    -1,   265,   266,    -1,   268,
      -1,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
      -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,
     289,    -1,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,    -1,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,    -1,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,    -1,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,    -1,   392,   393,   394,   395,    -1,   397,   398,
     399,   400,   401,    -1,   403,   404,    -1,    -1,   407,   408,
     409,   410,   411,    -1,   413,   414,   415,   416,   417,   418,
     419,   420,    -1,    -1,   423,   424,   425,   426,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,    -1,   438,
      -1,   440,   441,   442,   443,    -1,    -1,   446,    -1,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,    -1,     3,   472,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   486,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,
     171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,    -1,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,   214,    -1,   216,   217,   218,   219,   220,
      -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,
      -1,    -1,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,    -1,   259,   260,
     261,   262,   263,    -1,   265,   266,    -1,   268,    -1,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,    -1,    -1,
     281,   282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,    -1,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,    -1,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
      -1,   392,   393,   394,   395,    -1,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,   413,   414,   415,   416,   417,   418,   419,   420,
      -1,    -1,   423,   424,   425,   426,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,    -1,   438,    -1,   440,
     441,   442,   443,    -1,    -1,   446,    -1,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,    -1,
       3,   472,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   486,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,    -1,   259,   260,   261,   262,
     263,    -1,   265,   266,    -1,   268,    -1,   270,   271,   272,
     273,   274,   275,    -1,   277,   278,    -1,    -1,   281,   282,
     283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,    -1,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,    -1,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,    -1,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,    -1,   392,
     393,    -1,   395,    -1,   397,   398,   399,   400,   401,    -1,
     403,   404,    -1,    -1,   407,   408,   409,   410,   411,    -1,
     413,   414,   415,   416,   417,   418,   419,   420,    -1,    -1,
     423,   424,   425,   426,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,    -1,   438,    -1,   440,   441,   442,
     443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,    -1,     3,    -1,
       5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   486,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    -1,    94,
      95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
      -1,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,    -1,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,
      -1,   216,   217,   218,   219,   220,    -1,    -1,   223,    -1,
     225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,    -1,   259,   260,   261,   262,   263,    -1,
     265,   266,    -1,   268,    -1,   270,   271,   272,   273,   274,
     275,    -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,
      -1,   286,   287,    -1,   289,    -1,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,    -1,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,    -1,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,    -1,   392,   393,    -1,
     395,    -1,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,    -1,   407,   408,   409,   410,   411,    -1,   413,   414,
     415,   416,   417,   418,   419,   420,    -1,    -1,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,    -1,   438,    -1,   440,   441,   442,   443,    -1,
      -1,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,    -1,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   486,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    -1,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    -1,    94,    95,    96,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,    -1,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,    -1,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,    -1,
      -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,    -1,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,
     217,   218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,
      -1,   228,   229,   230,    -1,    -1,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,    -1,   259,   260,   261,   262,   263,    -1,   265,   266,
      -1,   268,    -1,   270,   271,   272,   273,   274,   275,    -1,
     277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,
     287,    -1,   289,    -1,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,    -1,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,    -1,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,    -1,   392,   393,    -1,   395,    -1,
     397,   398,   399,   400,   401,    -1,   403,   404,    -1,    -1,
     407,   408,   409,   410,   411,    -1,   413,   414,   415,   416,
     417,   418,   419,   420,    -1,    -1,   423,   424,   425,   426,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
      -1,   438,    -1,   440,   441,   442,   443,    -1,    -1,   446,
      -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,    -1,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   486,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,    -1,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,
     169,   170,   171,    -1,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,    -1,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,    -1,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,
     219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,
     229,   230,    -1,    -1,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,    -1,
     259,   260,   261,   262,   263,    -1,   265,   266,    -1,   268,
      -1,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
      -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,
     289,    -1,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,    -1,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,    -1,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,    -1,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,    -1,   392,   393,    -1,   395,    -1,   397,   398,
     399,   400,   401,    -1,   403,   404,    -1,    -1,   407,   408,
     409,   410,   411,    -1,   413,   414,   415,   416,   417,   418,
     419,   420,    -1,    -1,   423,   424,   425,   426,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,    -1,   438,
      -1,   440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,    -1,    -1,    -1,    -1,     3,     4,     5,    -1,    -1,
       8,     9,    -1,    -1,    -1,    -1,    -1,   486,    16,    17,
      18,    19,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    29,    30,    31,    32,    33,    34,    35,    36,    37,
      38,    39,    40,    41,    42,    43,    44,    45,    46,    47,
      -1,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    -1,    73,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
      88,    89,    90,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
     138,   139,   140,   141,   142,   143,   144,   145,   146,   147,
     148,    -1,   150,   151,   152,   153,    -1,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   174,   175,   176,    -1,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,    -1,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,    -1,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,    -1,
     288,   289,   290,    -1,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,    -1,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,    -1,   410,    -1,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,    -1,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   466,   467,
     468,   469,    -1,     3,    -1,   473,   474,   475,     8,   477,
     478,   479,   480,   481,   482,    -1,    16,    17,    18,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    -1,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,    -1,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,    -1,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,
     170,   171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
      -1,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,   219,
     220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,
     230,    -1,    -1,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,    -1,   259,
     260,   261,   262,   263,    -1,   265,   266,    -1,   268,    -1,
     270,   271,   272,   273,   274,   275,    -1,   277,   278,    -1,
      -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,   289,
      -1,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,    -1,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
      -1,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,    -1,   392,   393,    -1,   395,    -1,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,    -1,   407,   408,   409,
     410,   411,    -1,   413,   414,   415,   416,   417,   418,   419,
     420,    -1,    -1,   423,   424,   425,   426,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,    -1,   438,    -1,
     440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
      -1,    -1,    -1,   473,   474,   475,    -1,   477,   478,   479,
     480,   481,   482,     8,    -1,    -1,    11,    -1,    -1,    -1,
      -1,    16,    17,    18,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    33,    16,
      17,    18,    -1,    -1,    -1,    -1,    41,    -1,    -1,     8,
      -1,    -1,    11,    48,    -1,    -1,    33,    16,    17,    18,
      -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,
      -1,    48,    -1,    -1,    33,    -1,    -1,     8,    73,    -1,
      11,    -1,    41,    -1,    -1,    16,    17,    18,    -1,    48,
      -1,    -1,    -1,    -1,    -1,     8,    73,    -1,    11,    -1,
      -1,    -1,    33,    16,    17,    18,    -1,    -1,    -1,    -1,
      41,    -1,    -1,     8,    73,    -1,    11,    48,    -1,    -1,
      33,    16,    17,    18,    -1,    -1,    -1,    -1,    41,    -1,
      -1,    -1,    -1,    -1,    -1,    48,    -1,    -1,    33,    -1,
      -1,    -1,    73,    -1,    -1,    -1,    41,    -1,    -1,    -1,
      -1,    -1,    -1,    48,    -1,    -1,    -1,    -1,    -1,    -1,
      73,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   172,    73,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   186,    -1,    -1,    -1,   172,   191,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   186,
      -1,    -1,    -1,   172,   191,    -1,    -1,   212,   213,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   186,    -1,    -1,
      -1,   226,   191,    -1,    -1,   212,   213,    -1,    -1,    -1,
      -1,   172,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   226,
      -1,    -1,    -1,   212,   213,   186,    -1,    -1,    -1,   172,
     191,    -1,    -1,    -1,    -1,    -1,    -1,   226,    -1,   264,
      -1,    -1,   267,   186,    -1,    -1,    -1,   172,   191,    -1,
      -1,   212,   213,    -1,    -1,    -1,   281,   264,    -1,   284,
     267,   186,    -1,    -1,    -1,   226,   191,    -1,    -1,   212,
     213,    -1,    -1,    -1,   281,   264,    -1,   284,   267,    -1,
      -1,    -1,    -1,   226,    -1,    -1,    -1,   212,   213,    -1,
      -1,    -1,   281,    -1,    -1,   284,    -1,    -1,    -1,    -1,
      -1,   226,    -1,   264,    -1,    -1,   267,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     281,   264,    -1,   284,   267,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   281,   264,
      -1,   284,   267,    -1,    -1,    -1,   371,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   281,    -1,    -1,   284,
      -1,    -1,    -1,    -1,   371,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   371,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,
      -1,    -1,    16,    17,    18,    -1,    -1,    -1,    -1,    -1,
     371,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    41,   371,    -1,
      -1,    -1,    -1,    -1,    48,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   470,   371,    -1,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,    -1,    73,
      -1,    -1,   487,   470,    -1,    -1,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,    -1,    -1,    -1,    -1,
     487,   470,    -1,    -1,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,    -1,    -1,    -1,    -1,   487,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   470,
      -1,    -1,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,    -1,    -1,    -1,    -1,   487,   470,    -1,    -1,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
      -1,    -1,    -1,    -1,   487,   470,    -1,    -1,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,   172,    -1,
       8,    -1,   487,    11,    -1,    -1,    -1,    -1,    16,    17,
      18,    -1,   186,    -1,    -1,    -1,    -1,   191,     8,    -1,
      -1,    11,    -1,    -1,    -1,    33,    16,    17,    18,    -1,
      -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,   212,   213,
      48,    -1,    -1,    33,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    41,   226,    -1,    -1,    -1,    -1,    -1,    48,    -1,
      -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    73,    -1,    -1,    -1,    -1,    -1,    -1,
     264,    -1,    -1,   267,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   281,    -1,    -1,
     284,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   172,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   186,    -1,
      -1,    -1,   172,   191,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   186,   371,    -1,    -1,
      -1,   191,    -1,    -1,   212,   213,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   226,    -1,
      -1,    -1,   212,   213,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   226,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   264,    -1,    -1,   267,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   281,   264,    -1,   284,   267,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   281,    -1,    -1,   284,    -1,   470,    -1,    -1,   473,
     474,   475,    -1,   477,   478,   479,   480,   481,   482,    -1,
      -1,    -1,    -1,   487,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   371,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   371,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   470,    -1,    -1,   473,   474,   475,    -1,   477,
     478,   479,   480,   481,   482,    -1,    -1,    -1,    -1,   487,
     470,     3,    -1,   473,   474,   475,    -1,   477,   478,   479,
     480,   481,   482,    -1,    -1,   485,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    33,    34,    35,    36,    37,    38,    39,    40,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    -1,
      82,    83,    84,    85,    86,    87,    88,    89,    90,    91,
      92,    -1,    94,    95,    96,    97,    98,    99,    -1,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   139,   140,   141,
     142,   143,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,    -1,   167,    -1,   169,   170,   171,
      -1,   173,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,    -1,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
      -1,    -1,   214,    -1,   216,   217,   218,   219,   220,   221,
     222,   223,    -1,   225,    -1,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,    -1,   259,   260,   261,
     262,   263,   264,   265,   266,    -1,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,    -1,   289,    -1,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,    -1,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,    -1,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   479,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    -1,    94,
      95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
      -1,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,    -1,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,
      -1,   216,   217,   218,   219,   220,    -1,    -1,   223,    -1,
     225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,    -1,   259,   260,   261,   262,   263,    -1,
     265,   266,    -1,   268,    -1,   270,   271,   272,   273,   274,
     275,    -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,
      -1,   286,   287,    -1,   289,    -1,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,    -1,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,    -1,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,    -1,   392,   393,    -1,
     395,    -1,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,    -1,   407,   408,   409,   410,   411,    -1,   413,   414,
     415,   416,   417,   418,   419,   420,    -1,    -1,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,    -1,   438,    -1,   440,   441,   442,   443,    -1,
      -1,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,     3,     4,     5,    -1,    -1,
      -1,     9,    -1,    -1,   479,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    -1,    94,    95,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,
      -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,
     218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
      -1,   259,   260,   261,   262,   263,    -1,   265,   266,    -1,
     268,    -1,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,   279,    -1,   281,   282,   283,    -1,    -1,   286,   287,
      -1,   289,    -1,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,    -1,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,    -1,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,    -1,   392,   393,    -1,   395,    -1,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,    -1,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,    -1,    -1,   423,   424,   425,   426,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,    -1,
     438,    -1,   440,   441,   442,   443,    -1,    -1,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,     3,     4,     5,    -1,    -1,    -1,     9,   477,
     478,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,
     171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,    -1,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,   214,    -1,   216,   217,   218,   219,   220,
      -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,
      -1,    -1,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,    -1,   259,   260,
     261,   262,   263,    -1,   265,   266,    -1,   268,    -1,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,   279,    -1,
     281,   282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,    -1,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,    -1,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
      -1,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
      -1,    -1,   423,   424,   425,   426,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,    -1,   438,    -1,   440,
     441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,     3,
       4,     5,    -1,    -1,    -1,     9,   477,   478,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    -1,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    -1,
      94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
      -1,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,    -1,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
     214,    -1,   216,   217,   218,   219,   220,    -1,    -1,   223,
      -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,    -1,   259,   260,   261,   262,   263,
      -1,   265,   266,    -1,   268,    -1,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,   279,    -1,   281,   282,   283,
      -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,    -1,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,    -1,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,    -1,   392,   393,
      -1,   395,    -1,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,    -1,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,    -1,    -1,   423,
     424,   425,   426,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,    -1,   438,    -1,   440,   441,   442,   443,
      -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,    -1,     8,    -1,    -1,
      11,    -1,    -1,   477,   478,    16,    17,    18,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,
      -1,    -1,    33,    16,    17,    18,    37,    -1,    -1,    -1,
      41,    -1,    -1,     8,    -1,    -1,    11,    48,    -1,    -1,
      33,    16,    17,    18,    -1,    -1,    -1,    -1,    41,    -1,
      -1,    -1,    -1,    -1,    -1,    48,    -1,    -1,    33,    -1,
      -1,     8,    73,    -1,    11,    -1,    41,    -1,    -1,    16,
      17,    18,    -1,    48,    -1,    -1,    -1,    -1,    -1,    -1,
      73,    -1,    -1,    -1,    -1,    -1,    33,    -1,    -1,    36,
      -1,    -1,    -1,    -1,    41,    -1,    -1,     8,    73,    -1,
      11,    48,    -1,    -1,    -1,    16,    17,    18,    -1,    -1,
      -1,    -1,   123,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    -1,    -1,    -1,    73,    -1,    -1,    -1,
      41,    -1,    -1,    -1,    -1,    -1,    -1,    48,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   172,    73,    -1,    -1,    -1,    -1,    -1,    -1,   162,
      -1,    -1,    -1,    -1,   167,   186,    -1,    -1,    -1,   172,
     191,     8,    -1,    -1,    11,    -1,   161,    -1,    -1,    16,
      17,    18,    -1,   186,    -1,    -1,    -1,   172,   191,    -1,
      -1,   212,   213,    -1,    -1,    -1,    33,    -1,    -1,    36,
      -1,   186,    -1,    -1,    41,   226,   191,    -1,    -1,   212,
     213,    48,    -1,    -1,    -1,   172,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   226,    -1,    -1,    -1,   212,   213,   186,
      -1,    -1,    -1,    -1,   191,    -1,    73,    -1,    -1,    -1,
      -1,   226,    -1,   264,    -1,    -1,   267,    -1,    -1,    -1,
      -1,   172,    -1,    -1,    -1,   212,   213,    -1,    -1,    -1,
     281,   264,    -1,   284,   267,   186,    -1,    -1,    -1,   226,
     191,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   281,   264,
      -1,   284,   267,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   212,   213,    -1,    -1,    -1,   281,    -1,    -1,   284,
      -1,    -1,    -1,    -1,    -1,   226,    -1,   264,    -1,    -1,
     267,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   307,    -1,   281,    -1,    -1,   284,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   172,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   264,    -1,    -1,   267,    -1,    -1,   186,
     371,    -1,    -1,    -1,   191,    -1,    -1,    -1,    -1,    -1,
     281,    -1,    -1,   284,    -1,    -1,    -1,    -1,   371,    -1,
      -1,    -1,    -1,    -1,    -1,   212,   213,    -1,    -1,    -1,
      -1,   302,    -1,    -1,    -1,    -1,   371,    -1,    -1,   226,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,     8,    -1,    -1,    11,    -1,   429,    -1,
      -1,    16,    17,    18,   371,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   264,    33,    -1,
     267,    -1,    -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,
      -1,    -1,    -1,    48,   281,    -1,    -1,   284,    -1,   470,
     371,    -1,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,    -1,    -1,    -1,    -1,    -1,   470,    73,    -1,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
      -1,    -1,    -1,    -1,    -1,   470,    -1,    -1,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,    -1,     8,
      -1,    -1,    11,    -1,    -1,    -1,    -1,    16,    17,    18,
      -1,    -1,    -1,   470,    -1,    -1,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,    -1,    -1,    -1,    -1,
      -1,    -1,    41,    -1,   371,    -1,    -1,    -1,     8,    48,
      -1,    11,    -1,    -1,    -1,    -1,    16,    17,    18,   470,
      -1,    -1,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,   167,    33,    73,    -1,    36,   172,    -1,    -1,
      -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,    48,    -1,
      -1,   186,    -1,    -1,     8,    -1,   191,    11,    -1,    -1,
      -1,    -1,    16,    17,    18,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    73,    -1,    -1,    -1,   212,   213,    33,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    41,    -1,    -1,
      -1,   226,    -1,    -1,    48,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   470,    -1,    -1,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,    -1,    -1,    -1,    73,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   264,
      -1,    -1,   267,   172,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,     8,   281,   186,    11,   284,
      -1,    -1,   191,    16,    17,    18,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    -1,   172,   212,   213,    -1,    -1,    -1,    41,    -1,
      -1,    -1,    -1,    -1,    -1,    48,   186,   226,    -1,    -1,
       8,   191,    -1,    11,    -1,    -1,    -1,    -1,    16,    17,
      18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      73,    -1,   212,   213,    -1,    -1,    -1,    -1,   172,    -1,
      -1,    -1,    -1,    41,    -1,   264,   226,    -1,   267,    -1,
      48,    -1,   186,    -1,    -1,    -1,   371,   191,    -1,    -1,
      -1,    -1,   281,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,   212,   213,
      -1,    -1,    -1,    -1,   264,    -1,    -1,   267,    -1,    -1,
      -1,    -1,   226,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   281,    -1,    -1,   284,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   172,
     264,    -1,    -1,   267,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   186,    -1,    -1,    -1,   281,   191,    -1,
     284,    -1,   371,    -1,    -1,   470,    -1,    -1,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,    -1,   212,
     213,    -1,    -1,    -1,   172,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   226,    -1,    -1,    -1,    -1,   186,    -1,
      -1,   371,    -1,   191,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   212,   213,    -1,    -1,    -1,    -1,
      -1,   264,    -1,    -1,   267,    -1,    -1,    -1,   226,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   371,   281,    -1,
      -1,   284,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   470,    -1,    -1,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,    -1,    -1,    -1,    -1,   402,   267,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   281,    -1,    -1,    -1,    -1,    -1,    -1,
     470,    -1,    -1,   473,   474,   475,    -1,   477,   478,   479,
     480,   481,   482,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   371,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   470,    -1,    -1,   473,
     474,   475,    -1,   477,   478,   479,   480,   481,   482,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   371,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   470,    -1,    -1,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     3,
      -1,     5,   470,    -1,    -1,   473,   474,   475,    -1,   477,
     478,   479,   480,   481,   482,    19,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    33,
      34,    35,    36,    37,    38,    39,    40,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    -1,    82,    83,
      84,    85,    86,    87,    88,    89,    90,    91,    92,    -1,
      94,    95,    96,    97,    98,    99,    -1,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   129,   130,   131,   132,   133,
     134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,    -1,   167,    -1,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,    -1,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   210,   211,    -1,    -1,
     214,    -1,   216,   217,   218,   219,   220,   221,   222,   223,
      -1,   225,    -1,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,    -1,   259,   260,   261,   262,   263,
     264,   265,   266,    -1,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,    -1,   289,    -1,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,    -1,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,    -1,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      27,    28,    29,    30,    31,    32,    33,    34,    35,    36,
      37,    38,    39,    40,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    -1,    82,    83,    84,    85,    86,
      87,    88,    89,    90,    91,    92,    -1,    94,    95,    96,
      97,    98,    99,    -1,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   129,   130,   131,   132,   133,   134,   135,   136,
     137,   138,   139,   140,   141,   142,   143,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,    -1,
     167,    -1,   169,   170,   171,    -1,   173,   174,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,    -1,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   210,   211,    -1,    -1,   214,    -1,   216,
     217,   218,   219,   220,   221,   222,   223,    -1,   225,    -1,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,    -1,   259,   260,   261,   262,   263,   264,   265,   266,
      -1,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,    -1,   289,    -1,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,    -1,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,    -1,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    33,    34,    35,    36,    37,    38,    39,
      40,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    -1,    82,    83,    84,    85,    86,    87,    88,    89,
      90,    91,    92,    -1,    94,    95,    96,    97,    98,    99,
      -1,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   129,
     130,   131,   132,   133,   134,   135,   136,   137,   138,   139,
     140,   141,   142,   143,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,    -1,   167,    -1,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
      -1,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     210,   211,    -1,    -1,   214,    -1,   216,   217,   218,   219,
     220,   221,   222,   223,    -1,   225,    -1,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,    -1,   259,
     260,   261,   262,   263,   264,   265,   266,    -1,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,    -1,   289,
      -1,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,    -1,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,    -1,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    61,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,   166,    -1,   168,   169,   170,   171,   172,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,   200,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,    -1,    -1,
     223,   224,   225,   226,    -1,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,    -1,   265,   266,   267,   268,    -1,   270,   271,   272,
     273,   274,   275,    -1,   277,   278,    -1,    -1,   281,   282,
     283,    -1,    -1,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,    -1,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,    -1,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,    -1,   392,
     393,    -1,   395,   396,   397,   398,   399,   400,   401,    -1,
     403,   404,    -1,    -1,   407,   408,   409,   410,   411,    -1,
     413,   414,   415,   416,   417,   418,   419,   420,    -1,    -1,
     423,   424,   425,   426,   427,   428,    -1,   430,   431,   432,
     433,   434,   435,   436,    -1,   438,   439,   440,   441,   442,
     443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    -1,    -1,    -1,   100,    -1,    -1,    -1,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,    -1,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,    -1,    -1,   223,   224,   225,
     226,    -1,   228,   229,   230,    -1,    -1,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,   267,   268,    -1,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,    -1,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,    -1,   413,   414,   415,
     416,   417,   418,   419,   420,    -1,    -1,   423,   424,   425,
     426,   427,    -1,    -1,   430,   431,   432,   433,   434,   435,
     436,    -1,   438,   439,   440,   441,   442,   443,    -1,    -1,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    -1,    -1,    75,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    85,    86,    87,    88,
      89,    90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,    -1,   156,    -1,   158,
     159,   160,   161,    -1,   163,   164,   165,    -1,    -1,    -1,
     169,   170,   171,    -1,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,    -1,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,    -1,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,
     219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,
     229,   230,    -1,    -1,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,    -1,
     259,   260,   261,   262,   263,    -1,   265,   266,    -1,   268,
      -1,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
      -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,
     289,    -1,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,    -1,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,    -1,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,    -1,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,    -1,   392,   393,    -1,   395,    -1,   397,   398,
     399,   400,   401,    -1,   403,   404,    -1,    -1,   407,   408,
     409,   410,   411,    -1,   413,   414,   415,   416,   417,   418,
     419,   420,    -1,   422,   423,   424,   425,   426,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,    -1,   438,
      -1,   440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,
      82,    83,    84,    85,    86,    87,    88,    89,    90,    91,
      -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,    -1,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,    -1,   156,    -1,   158,   159,   160,   161,
      -1,   163,   164,   165,    -1,    -1,    -1,   169,   170,   171,
      -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,    -1,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,   214,    -1,   216,   217,   218,   219,   220,    -1,
      -1,   223,    -1,   225,   226,    -1,   228,   229,   230,    -1,
      -1,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,    -1,   259,   260,   261,
     262,   263,    -1,   265,   266,    -1,   268,    -1,   270,   271,
     272,   273,   274,   275,    -1,   277,   278,    -1,    -1,   281,
     282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
      -1,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,    -1,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,    -1,   395,    -1,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,    -1,   407,   408,   409,   410,   411,
      -1,   413,   414,   415,   416,   417,   418,   419,   420,    -1,
     422,   423,   424,   425,   426,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,    -1,   438,    -1,   440,   441,
     442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,     3,    -1,
       5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    -1,    94,
      95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,    -1,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,
      -1,   216,   217,   218,   219,   220,    -1,    -1,   223,    -1,
     225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,    -1,   259,   260,   261,   262,   263,    -1,
     265,   266,    -1,   268,    -1,   270,   271,   272,   273,   274,
     275,    -1,   277,   278,   279,    -1,   281,   282,   283,    -1,
      -1,   286,   287,    -1,   289,    -1,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,    -1,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,    -1,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,    -1,   392,   393,    -1,
     395,    -1,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,    -1,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,    -1,    -1,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,    -1,   438,    -1,   440,   441,   442,   443,    -1,
      -1,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,     3,    -1,     5,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    -1,    94,    95,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,
      -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,
     218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
      -1,   259,   260,   261,   262,   263,    -1,   265,   266,    -1,
     268,    -1,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,
      -1,   289,    -1,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,    -1,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,    -1,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,    -1,   392,   393,    -1,   395,    -1,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,    -1,   407,
     408,   409,   410,   411,    -1,   413,   414,   415,   416,   417,
     418,   419,   420,    -1,    -1,   423,   424,   425,   426,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,    -1,
     438,    -1,   440,   441,   442,   443,    -1,    -1,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,
     171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,    -1,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,   214,    -1,   216,   217,   218,   219,   220,
      -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,
      -1,    -1,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,    -1,   259,   260,
     261,   262,   263,    -1,   265,   266,    -1,   268,    -1,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,    -1,   280,
     281,   282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,    -1,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,    -1,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
      -1,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,   413,   414,   415,   416,   417,   418,   419,   420,
      -1,    -1,   423,   424,   425,   426,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,    -1,   438,    -1,   440,
     441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,     3,
      -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    -1,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    -1,
      94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
      -1,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,    -1,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,    -1,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
     214,    -1,   216,   217,   218,   219,   220,    -1,    -1,   223,
      -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,    -1,   259,   260,   261,   262,   263,
      -1,   265,   266,    -1,   268,    -1,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,    -1,   280,   281,   282,   283,
      -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,    -1,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,    -1,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,    -1,   392,   393,
      -1,   395,    -1,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,    -1,   407,   408,   409,   410,   411,    -1,   413,
     414,   415,   416,   417,   418,   419,   420,    -1,    -1,   423,
     424,   425,   426,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,    -1,   438,    -1,   440,   441,   442,   443,
      -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    31,    32,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    -1,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    -1,    94,    95,    96,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,    -1,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,    -1,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,    -1,
      -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,    -1,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,
     217,   218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,
      -1,   228,   229,   230,    -1,    -1,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,    -1,   259,   260,   261,   262,   263,    -1,   265,   266,
      -1,   268,    -1,   270,   271,   272,   273,   274,   275,    -1,
     277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,
     287,    -1,   289,    -1,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,    -1,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,    -1,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,    -1,   392,   393,    -1,   395,    -1,
     397,   398,   399,   400,   401,    -1,   403,   404,    -1,    -1,
     407,   408,   409,   410,   411,    -1,   413,   414,   415,   416,
     417,   418,   419,   420,    -1,    -1,   423,   424,   425,   426,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
      -1,   438,    -1,   440,   441,   442,   443,    -1,    -1,   446,
      -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,     3,    -1,     5,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    -1,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,    -1,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,    -1,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,
     170,   171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
      -1,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,   219,
     220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,
     230,    -1,    -1,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,    -1,   259,
     260,   261,   262,   263,    -1,   265,   266,    -1,   268,    -1,
     270,   271,   272,   273,   274,   275,    -1,   277,   278,    -1,
      -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,   289,
      -1,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,    -1,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
      -1,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,    -1,   392,   393,   394,   395,    -1,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,    -1,   407,   408,   409,
     410,   411,    -1,   413,   414,   415,   416,   417,   418,   419,
     420,    -1,    -1,   423,   424,   425,   426,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,    -1,   438,    -1,
     440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
       3,     4,    -1,    -1,    -1,    -1,     9,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,    -1,   259,   260,   261,   262,
     263,    -1,   265,   266,    -1,   268,    -1,   270,   271,   272,
     273,   274,   275,    -1,   277,   278,    -1,    -1,   281,   282,
     283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,    -1,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,    -1,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,    -1,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,    -1,   392,
     393,    -1,   395,    -1,   397,   398,   399,   400,   401,    -1,
     403,   404,    -1,    -1,   407,   408,   409,   410,   411,    -1,
     413,   414,   415,   416,   417,   418,   419,   420,    -1,    -1,
     423,   424,   425,   426,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,    -1,   438,    -1,   440,   441,   442,
     443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    -1,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    -1,    94,    95,
      96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,    -1,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
      -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,    -1,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,
     216,   217,   218,   219,   220,    -1,    -1,   223,    -1,   225,
      -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,    -1,   259,   260,   261,   262,   263,    -1,   265,
     266,    -1,   268,    -1,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,    -1,   289,    -1,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,    -1,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
      -1,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,    -1,   413,   414,   415,
     416,   417,   418,   419,   420,    -1,    -1,   423,   424,   425,
     426,   427,    -1,    -1,   430,   431,   432,   433,   434,   435,
     436,    -1,   438,    -1,   440,   441,   442,   443,    -1,    -1,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,    -1,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,
     169,   170,   171,    -1,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,    -1,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,    -1,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,
     219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,
     229,   230,    -1,    -1,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,    -1,
     259,   260,   261,   262,   263,    -1,   265,   266,    -1,   268,
      -1,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
      -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,
     289,    -1,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,    -1,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,    -1,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,    -1,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,    -1,   392,   393,    -1,   395,    -1,   397,   398,
     399,   400,   401,    -1,   403,   404,    -1,    -1,   407,   408,
     409,   410,   411,    -1,   413,   414,   415,   416,   417,   418,
     419,   420,    -1,    -1,   423,   424,   425,   426,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,    -1,   438,
      -1,   440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,    -1,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,    -1,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,
      -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,    -1,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,   214,    -1,   216,   217,   218,   219,   220,    -1,
      -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,
      -1,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,    -1,   259,   260,   261,
     262,   263,    -1,   265,   266,    -1,   268,    -1,   270,   271,
     272,   273,   274,   275,    -1,   277,   278,    -1,    -1,   281,
     282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
      -1,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,    -1,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,    -1,   395,    -1,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,    -1,   407,   408,   409,   410,   411,
      -1,   413,   414,   415,   416,   417,   418,   419,   420,    -1,
      -1,   423,   424,   425,   426,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,    -1,   438,    -1,   440,   441,
     442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,     3,    -1,
       5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    -1,    94,
      95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
      -1,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,    -1,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,
      -1,   216,   217,   218,   219,   220,    -1,    -1,   223,    -1,
     225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,    -1,   259,   260,   261,   262,   263,    -1,
     265,   266,    -1,   268,    -1,   270,   271,   272,   273,   274,
     275,    -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,
      -1,   286,   287,    -1,   289,    -1,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,    -1,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,    -1,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,    -1,   392,   393,    -1,
     395,    -1,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,    -1,   407,   408,   409,   410,   411,    -1,   413,   414,
     415,   416,   417,   418,   419,   420,    -1,    -1,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,    -1,   438,    -1,   440,   441,   442,   443,    -1,
      -1,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,     3,    -1,     5,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    -1,    94,    95,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,
      -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,
     218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
      -1,   259,   260,   261,   262,   263,    -1,   265,   266,    -1,
     268,    -1,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,
      -1,   289,    -1,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,    -1,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,    -1,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,    -1,   392,   393,    -1,   395,    -1,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,    -1,   407,
     408,   409,   410,   411,    -1,   413,   414,   415,   416,   417,
     418,   419,   420,    -1,    -1,   423,   424,   425,   426,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,    -1,
     438,    -1,   440,   441,   442,   443,    -1,    -1,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,
     171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,    -1,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,   214,    -1,   216,   217,   218,   219,   220,
      -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,
      -1,    -1,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,    -1,   259,   260,
     261,   262,   263,    -1,   265,   266,    -1,   268,    -1,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,    -1,    -1,
     281,   282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,    -1,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,    -1,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
      -1,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,   413,   414,   415,   416,   417,   418,   419,   420,
      -1,    -1,   423,   424,   425,   426,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,    -1,   438,    -1,   440,
     441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    -1,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    -1,
      94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
      -1,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,    -1,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,    -1,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
     214,    -1,   216,   217,   218,   219,   220,    -1,    -1,   223,
      -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,    -1,   259,   260,   261,   262,   263,
      -1,   265,   266,    -1,   268,    -1,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,    -1,    -1,   281,   282,   283,
      -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,    -1,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,    -1,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,    -1,   392,   393,
      -1,   395,    -1,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,    -1,   407,   408,   409,   410,   411,    -1,   413,
     414,   415,   416,   417,   418,   419,   420,    -1,    -1,   423,
     424,   425,   426,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,    -1,   438,    -1,   440,   441,   442,   443,
      -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,     3,    -1,     5,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    -1,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    -1,    94,    95,    96,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,    -1,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,    -1,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,    -1,
      -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,    -1,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,
     217,   218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,
      -1,   228,   229,   230,    -1,    -1,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,    -1,   259,   260,   261,   262,   263,    -1,   265,   266,
      -1,   268,    -1,   270,   271,   272,   273,   274,   275,    -1,
     277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,
     287,    -1,   289,    -1,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,    -1,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,    -1,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,    -1,   392,   393,    -1,   395,    -1,
     397,   398,   399,   400,   401,    -1,   403,   404,    -1,    -1,
     407,   408,   409,   410,   411,    -1,   413,   414,   415,   416,
     417,   418,   419,   420,    -1,    -1,   423,   424,   425,   426,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
      -1,   438,    -1,   440,   441,   442,   443,    -1,    -1,   446,
      -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,     3,    -1,     5,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    -1,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,    -1,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,    -1,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,
     170,   171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
      -1,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,   219,
     220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,
     230,    -1,    -1,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,    -1,   259,
     260,   261,   262,   263,    -1,   265,   266,    -1,   268,    -1,
     270,   271,   272,   273,   274,   275,    -1,   277,   278,    -1,
      -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,   289,
      -1,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,    -1,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
      -1,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,    -1,   392,   393,    -1,   395,    -1,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,    -1,   407,   408,   409,
     410,   411,    -1,   413,   414,   415,   416,   417,   418,   419,
     420,    -1,    -1,   423,   424,   425,   426,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,    -1,   438,    -1,
     440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
       3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,    -1,   259,   260,   261,   262,
     263,    -1,   265,   266,    -1,   268,    -1,   270,   271,   272,
     273,   274,   275,    -1,   277,   278,    -1,    -1,   281,   282,
     283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,    -1,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,    -1,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,    -1,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,    -1,   392,
     393,    -1,   395,    -1,   397,   398,   399,   400,   401,    -1,
     403,   404,    -1,    -1,   407,   408,   409,   410,   411,    -1,
     413,   414,   415,   416,   417,   418,   419,   420,    -1,    -1,
     423,   424,   425,   426,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,    -1,   438,    -1,   440,   441,   442,
     443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      36,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    -1,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    -1,    94,    95,
      96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,    -1,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
      -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,    -1,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,
     216,   217,   218,   219,   220,    -1,    -1,   223,    -1,   225,
      -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,    -1,   259,   260,   261,   262,   263,    -1,   265,
     266,    -1,   268,    -1,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,    -1,   289,    -1,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,    -1,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
      -1,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,    -1,   413,   414,   415,
     416,   417,   418,   419,   420,    -1,    -1,   423,   424,   425,
     426,   427,    -1,    -1,   430,   431,   432,   433,   434,   435,
     436,    -1,   438,    -1,   440,   441,   442,   443,    -1,    -1,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    36,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,    -1,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,
     169,   170,   171,    -1,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,    -1,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,    -1,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,
     219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,
     229,   230,    -1,    -1,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,    -1,
     259,   260,   261,   262,   263,    -1,   265,   266,    -1,   268,
      -1,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
      -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,
     289,    -1,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,    -1,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,    -1,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,    -1,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,    -1,   392,   393,    -1,   395,    -1,   397,   398,
     399,   400,   401,    -1,   403,   404,    -1,    -1,   407,   408,
     409,   410,   411,    -1,   413,   414,   415,   416,   417,   418,
     419,   420,    -1,    -1,   423,   424,   425,   426,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,    -1,   438,
      -1,   440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,    -1,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,    -1,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,
      -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,    -1,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,   214,    -1,   216,   217,   218,   219,   220,    -1,
      -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,
      -1,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,    -1,   259,   260,   261,
     262,   263,    -1,   265,   266,    -1,   268,    -1,   270,   271,
     272,   273,   274,   275,    -1,   277,   278,    -1,    -1,   281,
     282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
      -1,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,    -1,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,    -1,   395,    -1,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,    -1,   407,   408,   409,   410,   411,
      -1,   413,   414,   415,   416,   417,   418,   419,   420,    -1,
      -1,   423,   424,   425,   426,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,    -1,   438,    -1,   440,   441,
     442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    -1,    94,
      95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
      -1,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,    -1,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,
      -1,   216,   217,   218,   219,   220,    -1,    -1,   223,    -1,
     225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,    -1,   259,   260,   261,   262,   263,    -1,
     265,   266,    -1,   268,    -1,   270,   271,   272,   273,   274,
     275,    -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,
      -1,   286,   287,    -1,   289,    -1,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,    -1,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,    -1,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,    -1,   392,   393,    -1,
     395,    -1,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,    -1,   407,   408,   409,   410,   411,    -1,   413,   414,
     415,   416,   417,   418,   419,   420,    -1,    -1,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,    -1,   438,    -1,   440,   441,   442,   443,    -1,
      -1,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    -1,    94,    95,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,
      -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,
     218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
      -1,   259,   260,   261,   262,   263,    -1,   265,   266,    -1,
     268,    -1,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,
      -1,   289,    -1,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,    -1,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,    -1,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,    -1,   392,   393,    -1,   395,    -1,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,    -1,   407,
     408,   409,   410,   411,    -1,   413,   414,   415,   416,   417,
     418,   419,   420,    -1,    -1,   423,   424,   425,   426,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,    -1,
     438,    -1,   440,   441,   442,   443,    -1,    -1,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,
     171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,    -1,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,   214,    -1,   216,   217,   218,   219,   220,
      -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,
      -1,    -1,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,    -1,   259,   260,
     261,   262,   263,    -1,   265,   266,    -1,   268,    -1,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,    -1,    -1,
     281,   282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,    -1,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,    -1,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
      -1,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,   413,   414,   415,   416,   417,   418,   419,   420,
      -1,    -1,   423,   424,   425,   426,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,    -1,   438,    -1,   440,
     441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    -1,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    -1,
      94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
      -1,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,    -1,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,    -1,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
     214,    -1,   216,   217,   218,   219,   220,    -1,    -1,   223,
      -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,    -1,   259,   260,   261,   262,   263,
      -1,   265,   266,    -1,   268,    -1,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,    -1,    -1,   281,   282,   283,
      -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,    -1,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,    -1,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,    -1,   392,   393,
      -1,   395,    -1,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,    -1,   407,   408,   409,   410,   411,    -1,   413,
     414,   415,   416,   417,   418,   419,   420,    -1,    -1,   423,
     424,   425,   426,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,    -1,   438,    -1,   440,   441,   442,   443,
      -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    -1,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    -1,    94,    95,    96,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,    -1,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,    -1,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,    -1,
      -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,    -1,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,
     217,   218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,
      -1,   228,   229,   230,    -1,    -1,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,    -1,   259,   260,   261,   262,   263,    -1,   265,   266,
      -1,   268,    -1,   270,   271,   272,   273,   274,   275,    -1,
     277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,
     287,    -1,   289,    -1,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,    -1,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,    -1,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,    -1,   392,   393,    -1,   395,    -1,
     397,   398,   399,   400,   401,    -1,   403,   404,    -1,    -1,
     407,   408,   409,   410,   411,    -1,   413,   414,   415,   416,
     417,   418,   419,   420,    -1,    -1,   423,   424,   425,   426,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
      -1,   438,    -1,   440,   441,   442,   443,    -1,    -1,   446,
      -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    -1,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,    -1,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,    -1,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,
     170,   171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
      -1,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,   219,
     220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,
     230,    -1,    -1,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,    -1,   259,
     260,   261,   262,   263,    -1,   265,   266,    -1,   268,    -1,
     270,   271,   272,   273,   274,   275,    -1,   277,   278,    -1,
      -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,   289,
      -1,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,    -1,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
      -1,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,    -1,   392,   393,    -1,   395,    -1,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,    -1,   407,   408,   409,
     410,   411,    -1,   413,   414,   415,   416,   417,   418,   419,
     420,    -1,    -1,   423,   424,   425,   426,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,    -1,   438,    -1,
     440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,    -1,   259,   260,   261,   262,
     263,    -1,   265,   266,    -1,   268,    -1,   270,   271,   272,
     273,   274,   275,    -1,   277,   278,    -1,    -1,   281,   282,
     283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,    -1,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,    -1,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,    -1,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,    -1,   392,
     393,    -1,   395,    -1,   397,   398,   399,   400,   401,    -1,
     403,   404,    -1,    -1,   407,   408,   409,   410,   411,    -1,
     413,   414,   415,   416,   417,   418,   419,   420,    -1,    -1,
     423,   424,   425,   426,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,    -1,   438,    -1,   440,   441,   442,
     443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    -1,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    -1,    94,    95,
      96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,    -1,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
      -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,    -1,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,
     216,   217,   218,   219,   220,    -1,    -1,   223,    -1,   225,
      -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,    -1,   259,   260,   261,   262,   263,    -1,   265,
     266,    -1,   268,    -1,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,    -1,   289,    -1,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,    -1,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
      -1,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,    -1,   413,   414,   415,
     416,   417,   418,   419,   420,    -1,    -1,   423,   424,   425,
     426,   427,    -1,    -1,   430,   431,   432,   433,   434,   435,
     436,    -1,   438,    -1,   440,   441,   442,   443,    -1,    -1,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    36,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,    -1,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,
     169,   170,   171,    -1,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,    -1,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,    -1,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,
     219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,
     229,   230,    -1,    -1,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,    -1,
     259,   260,   261,   262,   263,    -1,   265,   266,    -1,   268,
      -1,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
      -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,
     289,    -1,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,    -1,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,    -1,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,    -1,    -1,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,    -1,   392,   393,    -1,   395,    -1,   397,   398,
     399,   400,   401,    -1,   403,   404,    -1,    -1,   407,   408,
     409,   410,   411,    -1,   413,   414,   415,   416,   417,   418,
     419,   420,    -1,    -1,   423,   424,   425,   426,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,    -1,   438,
      -1,   440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,    -1,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,    -1,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,
      -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,    -1,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,   214,    -1,   216,   217,   218,   219,   220,    -1,
      -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,
      -1,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,    -1,   259,   260,   261,
     262,   263,    -1,   265,   266,    -1,   268,    -1,   270,   271,
     272,   273,   274,   275,    -1,   277,   278,    -1,    -1,   281,
     282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
      -1,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,    -1,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,    -1,   395,    -1,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,    -1,   407,   408,   409,   410,   411,
      -1,   413,   414,   415,   416,   417,   418,   419,   420,    -1,
      -1,   423,   424,   425,   426,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,    -1,   438,    -1,   440,   441,
     442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    -1,    94,
      95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
      -1,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,    -1,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,
      -1,   216,   217,   218,   219,   220,    -1,    -1,   223,    -1,
     225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,    -1,   259,   260,   261,   262,   263,    -1,
     265,   266,    -1,   268,    -1,   270,   271,   272,   273,   274,
     275,    -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,
      -1,   286,   287,    -1,   289,    -1,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,    -1,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,    -1,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,    -1,   392,   393,    -1,
     395,    -1,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,    -1,   407,   408,   409,   410,   411,    -1,   413,   414,
     415,   416,   417,   418,   419,   420,    -1,    -1,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,    -1,   438,    -1,   440,   441,   442,   443,    -1,
      -1,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    -1,    94,    95,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,
      -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,
     218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
      -1,   259,   260,   261,   262,   263,    -1,   265,   266,    -1,
     268,    -1,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,
      -1,   289,    -1,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,    -1,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,    -1,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,    -1,   392,   393,    -1,   395,    -1,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,    -1,   407,
     408,   409,   410,   411,    -1,   413,   414,   415,   416,   417,
     418,   419,   420,    -1,    -1,   423,   424,   425,   426,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,    -1,
     438,    -1,   440,   441,   442,   443,    -1,    -1,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,
     171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,    -1,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,   214,    -1,   216,   217,   218,   219,   220,
      -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,
      -1,    -1,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,    -1,   259,   260,
     261,   262,   263,    -1,   265,   266,    -1,   268,    -1,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,    -1,    -1,
     281,   282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,    -1,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,    -1,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
      -1,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,   413,   414,   415,   416,   417,   418,   419,   420,
      -1,    -1,   423,   424,   425,   426,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,    -1,   438,    -1,   440,
     441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    -1,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    -1,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    93,
      94,    95,    96,    -1,    -1,    -1,   100,    -1,    -1,    -1,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
      -1,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,    -1,   150,   151,   152,   153,
      -1,    -1,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,   166,    -1,   168,   169,   170,   171,   172,   173,
      -1,   175,    -1,    -1,   178,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,   200,    -1,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,    -1,    -1,   223,
     224,   225,   226,    -1,   228,   229,   230,    -1,    -1,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,    -1,
      -1,   265,   266,   267,   268,    -1,    -1,   271,   272,   273,
     274,   275,    -1,   277,   278,    -1,    -1,   281,   282,   283,
      -1,    -1,   286,    -1,   288,   289,   290,    -1,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,    -1,   303,
     304,    -1,   306,   307,    -1,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,    -1,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,    -1,    -1,   392,   393,
      -1,   395,   396,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,    -1,   407,   408,    -1,   410,    -1,    -1,   413,
     414,   415,   416,   417,   418,   419,   420,    -1,    -1,   423,
     424,   425,   426,   427,    -1,    -1,   430,   431,   432,   433,
     434,    -1,   436,    -1,   438,   439,   440,   441,   442,   443,
      -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   466,   467,   468,   469,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,    -1,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,    -1,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,
      -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,    -1,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,   214,    -1,   216,   217,   218,   219,   220,    -1,
      -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,
      -1,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,    -1,   259,   260,   261,
     262,   263,    -1,   265,   266,    -1,   268,    -1,   270,   271,
     272,   273,   274,   275,    -1,   277,   278,    -1,    -1,   281,
     282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,
     292,   293,   294,   295,   296,   297,    -1,   299,   300,   301,
      -1,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,    -1,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,    -1,   344,   345,   346,   347,    -1,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,    -1,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,    -1,   395,    -1,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,    -1,   407,   408,   409,   410,   411,
      -1,   413,   414,   415,   416,   417,   418,   419,   420,    -1,
      -1,   423,   424,   425,   426,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,    -1,   438,    -1,   440,   441,
     442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    -1,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    -1,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    93,    94,
      95,    96,    -1,    -1,    -1,   100,    -1,    -1,    -1,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,    -1,   150,   151,   152,   153,    -1,
      -1,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,   166,    -1,   168,   169,   170,   171,   172,   173,    -1,
     175,    -1,    -1,   178,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,   200,    -1,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,    -1,    -1,   223,   224,
     225,   226,    -1,   228,   229,   230,    -1,    -1,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,    -1,    -1,
     265,   266,   267,   268,    -1,    -1,   271,   272,   273,   274,
     275,    -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,
      -1,   286,    -1,   288,   289,   290,    -1,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,    -1,   303,   304,
      -1,   306,   307,    -1,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,    -1,   341,   342,   343,   344,
     345,   346,    -1,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
      -1,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,    -1,    -1,   392,   393,    -1,
     395,   396,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,    -1,   407,   408,    -1,   410,    -1,    -1,   413,   414,
     415,   416,   417,   418,   419,   420,    -1,    -1,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
      -1,   436,    -1,   438,   439,   440,   441,   442,   443,    -1,
      -1,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   466,   467,   468,   469,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    -1,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    -1,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      93,    94,    95,    96,    -1,    -1,    -1,   100,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,    -1,   150,   151,   152,
     153,    -1,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,   166,    -1,   168,   169,   170,   171,   172,
     173,    -1,   175,    -1,    -1,   178,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,   200,    -1,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,    -1,    -1,
     223,   224,   225,   226,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,    -1,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
      -1,    -1,   265,   266,   267,   268,    -1,    -1,   271,   272,
     273,   274,   275,    -1,   277,   278,    -1,    -1,   281,   282,
     283,    -1,    -1,   286,    -1,   288,   289,   290,    -1,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,    -1,
     303,   304,    -1,   306,   307,    -1,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,    -1,   341,   342,
     343,   344,   345,   346,    -1,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,    -1,   366,    -1,   368,   369,   370,   371,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,    -1,   389,    -1,    -1,   392,
     393,    -1,   395,   396,   397,   398,   399,   400,   401,    -1,
     403,   404,    -1,    -1,   407,   408,    -1,   410,    -1,    -1,
     413,   414,   415,   416,   417,   418,   419,   420,    -1,    -1,
     423,   424,   425,   426,   427,    -1,    -1,   430,   431,   432,
     433,   434,    -1,   436,    -1,   438,   439,   440,   441,   442,
     443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   466,   467,   468,   469
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    19,    29,    31,    32,    47,    56,    68,    79,    90,
      92,   110,   124,   134,   140,   148,   150,   151,   163,   190,
     229,   306,   309,   337,   345,   359,   366,   370,   380,   394,
     430,   435,   448,   472,   486,   497,   498,   499,   500,   511,
     512,   515,   517,   521,   535,   536,   538,   540,   547,   549,
     595,   601,   604,   605,   622,   623,   624,   625,   626,   627,
     671,   803,   806,   809,   816,   817,   818,   819,   820,   827,
     831,   837,   839,   844,   848,   849,   852,   853,   855,   856,
     858,   407,   451,   548,   194,   352,   360,   394,   441,   548,
       3,    19,    20,    21,    22,    23,    24,    25,    26,    28,
      29,    30,    38,    39,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    54,    55,    56,    57,
      58,    59,    62,    63,    64,    65,    66,    68,    69,    70,
      71,    72,    74,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    86,    87,    88,    89,    90,    91,    93,    94,
      95,    96,   100,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   115,   117,   118,   119,   120,   121,   122,
     124,   125,   126,   127,   128,   131,   132,   133,   134,   135,
     137,   138,   139,   141,   142,   143,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   156,   158,   159,   160,
     161,   163,   165,   166,   168,   169,   170,   171,   172,   173,
     175,   177,   178,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,   190,   192,   193,   194,   195,   196,   197,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   209,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     223,   224,   225,   226,   228,   229,   230,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   265,   266,
     267,   268,   270,   271,   272,   273,   274,   275,   277,   278,
     281,   282,   283,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   360,   361,   362,   363,   364,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   392,   393,   395,   396,   397,   398,   399,   400,   401,
     403,   404,   407,   408,   409,   410,   411,   413,   414,   415,
     416,   417,   418,   419,   420,   423,   424,   425,   426,   427,
     430,   431,   432,   433,   434,   435,   436,   438,   439,   440,
     441,   442,   443,   446,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   727,   788,   792,   795,   861,
     862,   863,   548,    50,   486,   617,   169,   173,   230,   237,
     284,   352,   398,   400,   416,   422,   425,   593,   602,   815,
       3,    27,   238,   309,   388,   786,   792,   861,    21,    74,
      89,   143,   152,   164,   169,   194,   237,   241,   304,   318,
     349,   352,   360,   363,   382,   394,   401,   410,   441,   596,
     597,   600,   548,   786,    92,   439,   486,   517,   604,   622,
     823,   827,   844,   858,   107,    68,   107,     5,   791,   838,
     792,   786,    27,   403,   407,   792,   850,   851,   854,   548,
      27,   129,   634,   635,   230,   352,   364,   403,   832,   833,
     854,   548,     5,   280,   682,   784,   792,   793,   168,   486,
     841,   486,   325,   628,   629,   786,   628,   623,   624,   627,
       0,   489,   119,   204,   427,   144,   208,   285,   421,   636,
     637,   623,   625,   626,   490,   439,   821,    27,   403,   407,
     435,   622,   854,   185,   784,   786,   185,   784,   185,   682,
     185,   784,   486,   484,   488,   775,   777,   517,   604,   622,
     805,   844,   784,   398,   400,   398,   400,   335,   185,   792,
     792,   797,   325,   360,   394,   441,   784,   194,    27,   786,
     243,   410,   106,   394,   441,   355,   185,   598,   797,   185,
     785,   786,   185,   786,   486,   539,   593,   823,     3,    48,
      49,    51,    52,    64,    65,    72,   111,   112,   149,   154,
     160,   177,   201,   206,   207,   209,   238,   257,   259,   263,
     270,   272,   287,   291,   305,   308,   322,   347,   367,   374,
     388,   390,   403,   404,   409,   411,   415,   435,   436,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     824,   826,   827,   829,   830,   861,   865,   821,   791,   791,
     475,   486,   486,   804,   469,   214,   488,   279,     4,     6,
       7,     8,     9,    10,    35,    49,    51,    52,    60,    61,
      64,    65,    72,    74,    97,    98,    99,   100,   101,   102,
     103,   111,   112,   114,   133,   149,   154,   155,   160,   206,
     207,   209,   231,   232,   257,   259,   264,   269,   270,   272,
     281,   291,   305,   322,   347,   365,   374,   390,   403,   404,
     409,   411,   412,   415,   428,   436,   470,   477,   478,   479,
     484,   486,   491,   493,   494,   623,   697,   700,   703,   704,
     705,   707,   708,   709,   710,   712,   713,   724,   726,   727,
     728,   730,   743,   744,   750,   769,   774,   781,   782,   788,
     789,   790,   791,   792,   780,   781,   832,   791,   832,   469,
     167,   405,   475,   486,   784,   479,   777,     3,   166,   168,
     439,   827,   840,   842,   166,   843,   724,   754,   628,   490,
     486,   799,   487,   487,   499,   167,   210,   682,   845,    27,
     129,   633,   633,    54,   633,   157,   162,   227,   276,   642,
     644,   645,   664,   666,   667,   668,   636,   637,   486,   784,
     469,   214,   149,    23,    29,   134,   283,   333,   337,   366,
     432,   505,   508,   509,   333,   149,    36,    55,   105,   193,
     242,   250,   262,   293,   333,   338,   360,   366,   380,   508,
     541,   544,   149,   333,   366,   508,   149,   333,   366,   508,
       3,    27,    44,    50,    74,    81,    93,   100,   129,   166,
     168,   172,   186,   200,   212,   213,   215,   224,   226,   238,
     258,   267,   288,   290,   343,   371,   388,   396,   415,   437,
     439,   479,   487,   724,   756,   757,   794,   800,   861,   866,
     724,   776,     3,    27,    31,    32,    33,    34,    35,    36,
      37,    40,    53,    60,    61,    67,    73,    75,    85,    92,
      97,    98,    99,   101,   102,   103,   114,   116,   123,   129,
     130,   136,   140,   144,   155,   157,   162,   164,   167,   174,
     176,   179,   191,   198,   208,   210,   221,   222,   227,   231,
     232,   264,   269,   276,   279,   280,   284,   285,   302,   312,
     327,   340,   359,   365,   376,   391,   394,   402,   405,   406,
     412,   421,   422,   428,   429,   435,   437,   444,   445,   447,
     448,   479,   787,   801,   861,   865,   867,   775,   487,   486,
     583,   593,   264,   807,   488,   798,    36,   441,   185,   784,
     185,   784,   860,   784,   486,   603,    81,   812,   452,    82,
     126,   296,   399,   149,    58,   339,   490,   599,   149,   490,
     599,   149,   279,   754,   394,   487,   490,     4,   155,   279,
     412,   477,   478,   543,   546,   790,   791,   822,   824,   825,
     828,   823,   486,   612,   616,   543,   828,   834,   836,   756,
       3,    44,    49,    50,    51,    52,    64,    65,    74,    81,
      93,   100,   111,   112,   160,   166,   168,   172,   186,   200,
     206,   207,   209,   212,   213,   215,   224,   226,   238,   257,
     258,   259,   267,   272,   288,   290,   322,   343,   347,   367,
     371,   374,   388,   396,   403,   404,   415,   436,   439,   693,
     694,   696,   698,   700,   702,   704,   705,   706,   708,   709,
     712,   713,   758,   796,   861,   864,    36,   225,   792,   486,
     778,   484,   438,   711,   724,   773,   486,   711,   711,   486,
     162,   486,   486,   486,   699,   699,   308,   623,   486,   486,
     701,   486,   486,    64,    65,   711,   724,   486,   699,   486,
     486,   486,   486,   486,   450,   472,   486,   714,   486,   714,
     486,   486,   486,   724,   724,   724,   754,   755,   623,   724,
     754,   745,   746,   792,   793,     9,   778,   777,   791,   486,
     486,   790,   791,     3,     8,    11,    16,    17,    18,    33,
      36,    41,    48,    73,   172,   186,   191,   212,   213,   226,
     264,   267,   281,   284,   371,   470,   473,   474,   475,   477,
     478,   479,   480,   481,   482,   748,   749,   750,   752,   449,
     731,   778,    15,   290,   724,    15,   210,   490,   630,   486,
     791,   778,   777,   630,     3,   114,   230,   543,   713,   791,
     835,    96,   114,   836,   114,   836,   784,   487,   490,   821,
     487,   490,   629,   785,    36,   845,   519,   784,    36,   792,
     366,   625,   625,   638,   639,   724,   625,   159,   261,   658,
     216,   262,   321,   369,   427,    27,   653,   724,   477,   478,
     654,   655,   724,   726,   664,   665,   645,   644,   642,   643,
     162,   667,   274,   669,   642,   664,   754,   799,   225,   784,
      67,    75,    85,   164,   185,   312,   422,   564,   574,   589,
     792,    75,    85,   516,    85,   516,   486,   405,   486,   562,
     236,   425,   562,    85,   490,   405,   784,   696,   543,    54,
     545,   543,   543,   105,   242,   250,    54,   405,   448,   472,
     542,   255,   352,   542,   544,   682,    85,   405,   516,   352,
     784,   405,   352,   756,   756,   757,   487,   490,   636,   637,
      13,    14,   485,   495,   405,   582,   587,   792,   448,   615,
     325,   441,   149,    92,   536,   549,   808,   809,   856,   787,
     488,   141,   784,   264,   537,   541,   264,   486,   583,    36,
     583,   487,   756,    36,   185,   577,   792,   813,   598,   797,
     785,   786,   786,   797,   487,   185,   784,   860,   823,   829,
       4,   790,     4,   790,   614,   621,   801,    50,    94,   120,
     138,   142,   163,   166,   180,   269,   277,   319,   618,   490,
     487,   490,   486,   696,   486,    35,   695,   108,   109,   182,
     183,   244,   245,   246,   247,   248,   249,   252,   253,   356,
     357,   466,   467,   486,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   487,   490,   699,   805,   754,   775,   755,
     486,   444,   770,   771,   724,   754,   486,   790,   790,   754,
       3,   715,   716,   717,   718,   719,   720,   721,   722,   759,
     760,   791,   790,   790,   790,   711,   711,   724,     8,    16,
      17,    18,   473,   474,   475,   477,   478,   479,   480,   481,
     482,   748,   753,   792,   724,   761,   477,   478,   486,   725,
     726,   750,   763,   774,   487,   754,   724,   754,   764,   403,
     403,   790,   790,   724,    53,   167,   222,   406,   724,   754,
     767,   724,   485,   487,   490,   490,   492,   495,   790,   724,
     723,   723,   694,   724,   724,   724,   724,     5,   801,   802,
     403,    40,   391,   779,   797,   724,   724,   486,   623,   768,
     129,   155,   264,   269,   274,   412,   423,   724,   269,   486,
     724,   405,    48,   172,   186,   191,   226,   371,   724,   724,
     724,   724,   724,   724,   724,   724,   724,   724,    27,    34,
     376,   747,   176,   158,   732,   724,   347,   486,   744,   724,
     173,   230,   394,   398,   400,   425,   631,   784,   782,   167,
     672,   756,   672,   486,   791,   487,   784,   840,   784,   848,
     724,   487,   486,   429,   847,   114,   292,   486,   518,   622,
      36,   792,   486,   523,   532,   534,   792,   490,    37,   123,
     429,   640,   347,   348,   477,   478,   655,   657,   726,   369,
     216,   280,   490,     4,   656,   790,   656,   347,   348,   657,
     783,   784,   268,   373,   670,   665,   643,   487,   333,   508,
     486,   185,   574,   786,   216,   264,   216,   429,   486,   567,
     694,   786,   792,   185,   786,   185,   792,    23,   134,   366,
     504,   507,   557,   572,   801,   786,   566,   586,   801,   786,
     505,   786,   333,   366,   508,   541,   543,   797,   786,   543,
     797,   786,   543,   333,   366,   508,   786,   786,   786,   786,
     333,   366,   508,   786,   786,   636,   636,   636,   437,   757,
     487,   724,   724,   724,   776,   317,   611,   487,   490,   277,
     167,   405,   606,   441,   784,   792,   593,   787,   486,   486,
     149,   149,   226,   564,   574,   578,   581,   590,   592,   792,
     448,   450,   569,   148,   622,   448,   814,   487,   724,   264,
     279,   599,   599,   279,   599,   264,    36,   487,   490,   479,
     486,   543,   613,   828,    36,   610,   791,   610,   264,   269,
     319,   610,   610,   834,   758,    35,   695,   692,   792,   484,
     484,   790,   405,   405,   405,   405,   694,   487,   485,   754,
     724,   136,   771,   772,    36,   487,   724,   487,   487,   487,
     487,   167,   487,   487,   487,   490,   487,   488,   302,   762,
     487,   725,   725,   724,    11,    16,    17,    18,   191,   212,
     281,   473,   474,   475,   477,   478,   479,   480,   481,   482,
     750,   725,   487,   487,   162,   167,   765,   766,   487,   469,
     469,   487,   487,    36,   767,   754,   767,   767,   167,   487,
      36,   778,   724,   745,   724,   487,   487,   469,   725,   725,
     142,   754,   167,   129,   155,   269,   274,   412,   423,   486,
     142,   753,   724,   391,   779,   724,   768,   724,   405,   486,
     623,   486,   486,   289,   736,   398,   400,   398,   400,   784,
     394,   632,   632,   632,   221,   348,   486,   623,   673,   674,
     675,   682,   683,   727,   729,   730,   792,   445,   688,   636,
     688,   790,   723,   799,   805,   673,   445,   846,   435,   393,
     428,   527,   522,   531,   792,   279,   524,   792,   528,   534,
     490,   672,   475,   778,   639,   281,   748,   751,   471,   641,
       4,   790,   657,   280,   427,   654,   490,   235,   405,   724,
     264,   589,   486,   149,   486,   567,   194,   587,   550,   283,
     560,   550,    23,   134,   337,   338,   366,   501,   502,   503,
     509,   510,   149,   599,   149,   599,   557,   572,   557,   487,
     490,   553,   791,   487,   490,   475,   488,   405,   352,    85,
     405,   516,   352,   405,   405,   405,   352,   487,   487,   487,
     757,   485,   383,   384,   620,   791,   582,   611,   784,   583,
     807,   394,   513,   514,   791,   587,   784,   784,   860,   784,
     487,   490,   277,   562,   277,   279,   561,   786,   448,   859,
     562,    36,   149,   784,   797,   149,   614,   608,   619,   828,
     791,   791,   269,   587,   479,   587,   791,   791,   487,   484,
     487,   490,   694,   790,   485,   790,   487,   716,   718,   719,
     720,   719,   720,   720,   487,   402,   724,   140,   694,   487,
     724,   724,   753,   724,   765,   694,   725,   725,   725,   725,
     129,   264,   274,   725,   725,   725,   725,   725,   725,   725,
     725,   725,   725,   724,   724,   766,   765,   714,   714,   694,
     487,   487,   487,   754,   694,   487,   723,   724,    33,    33,
     724,   487,   724,   167,   486,   758,   724,   487,   142,   725,
     725,   142,   142,   724,   724,   637,   445,   486,   737,   792,
     632,   632,   632,   632,   784,   784,   784,   623,   683,   167,
     623,   674,   675,    36,   676,   677,   792,   490,    93,   168,
     200,   215,   224,   258,   343,   679,   677,    36,   676,   678,
     792,   472,   687,   777,   724,   176,   659,   487,   659,   487,
     487,   724,   340,   526,   434,   487,   490,   778,    83,   526,
     487,   490,   523,   846,   724,   486,   641,   159,   220,   280,
     784,   786,   487,   149,   587,   574,   587,   550,   577,   487,
     116,   198,   262,   264,   573,   486,   584,   171,   114,   184,
     264,   562,   542,   106,   114,   171,   264,   382,   385,   544,
     562,   366,   503,   416,   786,   792,   507,   586,     3,    44,
      50,    74,    81,    93,   100,   166,   168,   172,   186,   200,
     212,   213,   215,   224,   226,   238,   258,   263,   267,   281,
     288,   290,   343,   367,   371,   388,   396,   415,   439,   477,
     478,   543,   551,   588,   694,   751,   791,   794,   861,   867,
     801,   786,   786,   786,   786,   786,   786,   786,   786,   786,
     786,   636,   542,   620,   486,   814,   185,   784,   487,   490,
     487,   537,   486,    36,   571,   569,   578,    79,   539,   106,
     262,   622,   577,   429,   811,   599,   860,   487,   490,   587,
     695,   790,   695,   792,   485,   485,   724,   487,   487,   766,
     167,   129,   274,   486,   487,   487,   724,   724,   724,   758,
     487,   724,    33,    33,   724,   724,   142,   487,   487,   724,
     738,   792,   784,   784,   784,   784,   677,   678,   486,   487,
     792,   793,   396,   650,   651,   486,   674,   215,   288,   680,
     674,   680,   215,   679,   680,   215,   651,   486,   792,   651,
     486,   286,    54,   179,   663,   791,   663,   791,   781,   622,
     292,   622,   522,   279,   486,   520,   475,   534,   526,   753,
     550,   574,   487,   487,   448,   580,   117,   187,   196,   116,
     431,   557,   575,    67,    73,    85,   114,   116,   171,   198,
     264,   269,   312,   327,   422,   555,   556,   568,    30,    54,
     594,   185,   269,   543,   724,   594,   269,   477,   478,   546,
     792,   694,   599,   599,   238,   388,   794,   798,   475,   405,
     405,   487,   612,   429,   607,   609,   587,    36,   264,   486,
     791,   814,   581,   148,   622,   146,   192,   561,   119,   134,
     311,   859,   106,   448,   857,   279,   792,   810,   486,    36,
     619,   485,   694,   725,   167,   486,   758,   487,   724,   724,
     724,   487,   298,   739,   684,   685,   729,   676,   486,     4,
       9,   646,   648,   649,   792,   785,   674,   279,   429,   681,
     674,   215,   674,   689,   690,   792,   486,   689,   792,   486,
     660,   661,   662,   724,   724,   447,   733,   733,   527,    85,
     486,   525,   533,   729,   792,   130,   724,   487,   327,   580,
     486,   570,   550,   487,   490,   486,   797,   786,   725,   594,
     117,   187,   116,   269,   216,   784,   580,   114,    36,   149,
      73,   691,   798,   481,   551,   786,   786,   542,   121,   487,
     622,   149,    36,   487,   786,   859,    27,    78,    86,   115,
     184,   195,   382,   385,   565,   565,   348,   348,    59,    67,
     230,   784,   533,   725,   758,   487,    54,   636,   487,   490,
      36,   686,   785,   301,   481,   301,   348,   481,   486,   486,
     487,   724,   486,   674,   681,   487,   490,   694,   689,   487,
     487,   490,   734,   735,   792,   429,   647,   647,   434,   786,
     724,   487,   490,    73,   529,   529,   265,   427,   784,   550,
     576,   579,   801,   557,   724,   264,   556,    36,   580,   583,
     184,   797,   429,   506,   481,   416,   612,   791,   814,   857,
     784,   622,   569,   539,    67,   282,    67,   811,   487,   487,
     754,   320,   348,   740,   687,   684,   486,   487,   792,   646,
     785,   690,   691,   487,   661,   490,    36,   350,   622,   487,
     688,   525,   797,   530,   797,   530,   366,   583,   487,   490,
     475,   487,   184,   240,   591,   486,   552,   724,   416,    36,
     486,   857,   561,   859,   282,   282,   486,   814,    48,    96,
     418,   724,   741,   742,   741,   487,   689,   487,   490,   487,
     487,   735,   737,   649,   529,   640,   640,   532,   591,   579,
     551,   262,   563,   552,   168,   297,   372,   279,   558,   559,
     585,   541,   622,   533,   688,   742,   347,   161,   307,   161,
     307,   487,     9,   334,   652,   530,   641,   641,   688,   559,
     196,   119,   427,   279,   585,   279,   558,   487,   857,   487,
      33,   487,   486,   640,   550,    58,   262,   339,   366,   554,
     554,   814,   742,     9,   641,    22,   114,   269,   688,   487
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */

#define YYFAIL		goto yyerrlab

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)					\
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    {								\
      yychar = (Token);						\
      yylval = (Value);						\
      yytoken = YYTRANSLATE (yychar);				\
      YYPOPSTACK (1);						\
      goto yybackup;						\
    }								\
  else								\
    {								\
      yyerror (&yylloc, yyscanner, YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (YYID (0))


#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#define YYRHSLOC(Rhs, K) ((Rhs)[K])
#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)				\
    do									\
      if (YYID (N))                                                    \
	{								\
	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
	}								\
      else								\
	{								\
	  (Current).first_line   = (Current).last_line   =		\
	    YYRHSLOC (Rhs, 0).last_line;				\
	  (Current).first_column = (Current).last_column =		\
	    YYRHSLOC (Rhs, 0).last_column;				\
	}								\
    while (YYID (0))
#endif


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
#  define YY_LOCATION_PRINT(File, Loc)			\
     fprintf (File, "%d.%d-%d.%d",			\
	      (Loc).first_line, (Loc).first_column,	\
	      (Loc).last_line,  (Loc).last_column)
# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */

#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, &yylloc, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval, &yylloc, yyscanner)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (YYID (0))

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
do {									  \
  if (yydebug)								  \
    {									  \
      YYFPRINTF (stderr, "%s ", Title);					  \
      yy_symbol_print (stderr,						  \
		  Type, Value, Location, yyscanner); \
      YYFPRINTF (stderr, "\n");						  \
    }									  \
} while (YYID (0))


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (!yyvaluep)
    return;
  YYUSE (yylocationp);
  YYUSE (yyscanner);
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# else
  YYUSE (yyoutput);
# endif
  switch (yytype)
    {
      default:
	break;
    }
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
#else
static void
yy_stack_print (bottom, top)
    yytype_int16 *bottom;
    yytype_int16 *top;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (; bottom <= top; ++bottom)
    YYFPRINTF (stderr, " %d", *bottom);
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (YYID (0))


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_reduce_print (YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, core_yyscan_t yyscanner)
#else
static void
yy_reduce_print (yyvsp, yylsp, yyrule, yyscanner)
    YYSTYPE *yyvsp;
    YYLTYPE *yylsp;
    int yyrule;
    core_yyscan_t yyscanner;
#endif
{
  int yynrhs = yyr2[yyrule];
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
	     yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      fprintf (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
		       &(yyvsp[(yyi + 1) - (yynrhs)])
		       , &(yylsp[(yyi + 1) - (yynrhs)])		       , yyscanner);
      fprintf (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (yyvsp, yylsp, Rule, yyscanner); \
} while (YYID (0))

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif



#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static YYSIZE_T
yystrlen (const char *yystr)
#else
static YYSIZE_T
yystrlen (yystr)
    const char *yystr;
#endif
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static char *
yystpcpy (char *yydest, const char *yysrc)
#else
static char *
yystpcpy (yydest, yysrc)
    char *yydest;
    const char *yysrc;
#endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into YYRESULT an error message about the unexpected token
   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
   including the terminating null byte.  If YYRESULT is null, do not
   copy anything; just return the number of bytes that would be
   copied.  As a special case, return 0 if an ordinary "syntax error"
   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
   size calculation.  */
static YYSIZE_T
yysyntax_error (char *yyresult, int yystate, int yychar)
{
  int yyn = yypact[yystate];

  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
    return 0;
  else
    {
      int yytype = YYTRANSLATE (yychar);
      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
      YYSIZE_T yysize = yysize0;
      YYSIZE_T yysize1;
      int yysize_overflow = 0;
      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
      int yyx;

# if 0
      /* This is so xgettext sees the translatable formats that are
	 constructed on the fly.  */
      YY_("syntax error, unexpected %s");
      YY_("syntax error, unexpected %s, expecting %s");
      YY_("syntax error, unexpected %s, expecting %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
# endif
      char *yyfmt;
      char const *yyf;
      static char const yyunexpected[] = "syntax error, unexpected %s";
      static char const yyexpecting[] = ", expecting %s";
      static char const yyor[] = " or %s";
      char yyformat[sizeof yyunexpected
		    + sizeof yyexpecting - 1
		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
		       * (sizeof yyor - 1))];
      char const *yyprefix = yyexpecting;

      /* Start YYX at -YYN if negative to avoid negative indexes in
	 YYCHECK.  */
      int yyxbegin = yyn < 0 ? -yyn : 0;

      /* Stay within bounds of both yycheck and yytname.  */
      int yychecklim = YYLAST - yyn + 1;
      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
      int yycount = 1;

      yyarg[0] = yytname[yytype];
      yyfmt = yystpcpy (yyformat, yyunexpected);

      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
	  {
	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
	      {
		yycount = 1;
		yysize = yysize0;
		yyformat[sizeof yyunexpected - 1] = '\0';
		break;
	      }
	    yyarg[yycount++] = yytname[yyx];
	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
	    yysize_overflow |= (yysize1 < yysize);
	    yysize = yysize1;
	    yyfmt = yystpcpy (yyfmt, yyprefix);
	    yyprefix = yyor;
	  }

      yyf = YY_(yyformat);
      yysize1 = yysize + yystrlen (yyf);
      yysize_overflow |= (yysize1 < yysize);
      yysize = yysize1;

      if (yysize_overflow)
	return YYSIZE_MAXIMUM;

      if (yyresult)
	{
	  /* Avoid sprintf, as that infringes on the user's name space.
	     Don't have undefined behavior even if the translation
	     produced a string with the wrong number of "%s"s.  */
	  char *yyp = yyresult;
	  int yyi = 0;
	  while ((*yyp = *yyf) != '\0')
	    {
	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
		{
		  yyp += yytnamerr (yyp, yyarg[yyi++]);
		  yyf += 2;
		}
	      else
		{
		  yyp++;
		  yyf++;
		}
	    }
	}
      return yysize;
    }
}
#endif /* YYERROR_VERBOSE */


/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, core_yyscan_t yyscanner)
#else
static void
yydestruct (yymsg, yytype, yyvaluep, yylocationp, yyscanner)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
    YYLTYPE *yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (yyscanner);

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
	break;
    }
}


/* Prevent warnings from -Wmissing-prototypes.  */

#ifdef YYPARSE_PARAM
#if defined __STDC__ || defined __cplusplus
int yyparse (void *YYPARSE_PARAM);
#else
int yyparse ();
#endif
#else /* ! YYPARSE_PARAM */
#if defined __STDC__ || defined __cplusplus
int yyparse (core_yyscan_t yyscanner);
#else
int yyparse ();
#endif
#endif /* ! YYPARSE_PARAM */






/*----------.
| yyparse.  |
`----------*/

#ifdef YYPARSE_PARAM
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void *YYPARSE_PARAM)
#else
int
yyparse (YYPARSE_PARAM)
    void *YYPARSE_PARAM;
#endif
#else /* ! YYPARSE_PARAM */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (core_yyscan_t yyscanner)
#else
int
yyparse (yyscanner)
    core_yyscan_t yyscanner;
#endif
#endif
{
  /* The look-ahead symbol.  */
int yychar;

/* The semantic value of the look-ahead symbol.  */
YYSTYPE yylval;

/* Number of syntax errors so far.  */
int yynerrs;
/* Location data for the look-ahead symbol.  */
YYLTYPE yylloc;

  int yystate;
  int yyn;
  int yyresult;
  /* Number of tokens to shift before error messages enabled.  */
  int yyerrstatus;
  /* Look-ahead token as an internal (translated) token number.  */
  int yytoken = 0;
#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

  /* Three stacks and their tools:
     `yyss': related to states,
     `yyvs': related to semantic values,
     `yyls': related to locations.

     Refer to the stacks thru separate pointers, to allow yyoverflow
     to reallocate them elsewhere.  */

  /* The state stack.  */
  yytype_int16 yyssa[YYINITDEPTH];
  yytype_int16 *yyss = yyssa;
  yytype_int16 *yyssp;

  /* The semantic value stack.  */
  YYSTYPE yyvsa[YYINITDEPTH];
  YYSTYPE *yyvs = yyvsa;
  YYSTYPE *yyvsp;

  /* The location stack.  */
  YYLTYPE yylsa[YYINITDEPTH];
  YYLTYPE *yyls = yylsa;
  YYLTYPE *yylsp;
  /* The locations where the error started and ended.  */
  YYLTYPE yyerror_range[2];

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  YYSIZE_T yystacksize = YYINITDEPTH;

  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY;		/* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */

  yyssp = yyss;
  yyvsp = yyvs;
  yylsp = yyls;
#if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  /* Initialize the default location before parsing starts.  */
  yylloc.first_line   = yylloc.last_line   = 1;
  yylloc.first_column = yylloc.last_column = 0;
#endif

  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack.  Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	yytype_int16 *yyss1 = yyss;
	YYLTYPE *yyls1 = yyls;

	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),
		    &yyls1, yysize * sizeof (*yylsp),
		    &yystacksize);
	yyls = yyls1;
	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	yytype_int16 *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss);
	YYSTACK_RELOCATE (yyvs);
	YYSTACK_RELOCATE (yyls);
#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     look-ahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to look-ahead token.  */
  yyn = yypact[yystate];
  if (yyn == YYPACT_NINF)
    goto yydefault;

  /* Not known => get a look-ahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yyn == 0 || yyn == YYTABLE_NINF)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the look-ahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token unless it is eof.  */
  if (yychar != YYEOF)
    yychar = YYEMPTY;

  yystate = yyn;
  *++yyvsp = yylval;
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 462 "third_party/libpg_query/grammar/grammar.y"
    {
				pg_yyget_extra(yyscanner)->parsetree = (yyvsp[(1) - (1)].list);
			;}
    break;

  case 3:
#line 478 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (3)].list) != NIL)
					{
						/* update length of previous stmt */
						updateRawStmtEnd(llast_node(PGRawStmt, (yyvsp[(1) - (3)].list)), (yylsp[(2) - (3)]));
					}
					if ((yyvsp[(3) - (3)].node) != NULL)
						(yyval.list) = lappend((yyvsp[(1) - (3)].list), makeRawStmt((yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]) + 1));
					else
						(yyval.list) = (yyvsp[(1) - (3)].list);
				;}
    break;

  case 4:
#line 490 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (1)].node) != NULL)
						(yyval.list) = list_make1(makeRawStmt((yyvsp[(1) - (1)].node), 0));
					else
						(yyval.list) = NIL;
				;}
    break;

  case 39:
#line 533 "third_party/libpg_query/grammar/grammar.y"
    { (yyval.node) = NULL; ;}
    break;

  case 40:
#line 10 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 41:
#line 19 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 42:
#line 28 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 43:
#line 37 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 44:
#line 46 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 45:
#line 55 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 46:
#line 64 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 47:
#line 73 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 48:
#line 86 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 49:
#line 88 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 50:
#line 93 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(3) - (3)].node); ;}
    break;

  case 51:
#line 94 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 52:
#line 100 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 53:
#line 104 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 54:
#line 108 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					if (strcmp((yyvsp[(2) - (2)].defelt)->defname, "as") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "restart") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "owned_by") == 0)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("sequence option \"%s\" not supported here", (yyvsp[(2) - (2)].defelt)->defname),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
				;}
    break;

  case 55:
#line 119 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("generated", (PGNode *) makeInteger((yyvsp[(3) - (3)].ival)), (yylsp[(1) - (3)]));
				;}
    break;

  case 56:
#line 127 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 57:
#line 131 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 58:
#line 140 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(2) - (2)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 59:
#line 149 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(5) - (5)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 60:
#line 158 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(3) - (3)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 61:
#line 167 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(6) - (6)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 62:
#line 176 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ColumnDefault;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (yyvsp[(4) - (4)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 63:
#line 185 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 64:
#line 193 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 65:
#line 201 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStatistics;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeInteger((yyvsp[(6) - (6)].ival));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 66:
#line 210 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 67:
#line 219 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 68:
#line 228 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStorage;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeString((yyvsp[(6) - (6)].str));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 69:
#line 237 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);

					c->contype = PG_CONSTR_IDENTITY;
					c->generated_when = (yyvsp[(6) - (9)].ival);
					c->options = (yyvsp[(9) - (9)].list);
					c->location = (yylsp[(5) - (9)]);

					n->subtype = PG_AT_AddIdentity;
					n->name = (yyvsp[(3) - (9)].str);
					n->def = (PGNode *) c;

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 70:
#line 254 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetIdentity;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 71:
#line 263 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (5)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 72:
#line 272 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (7)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 73:
#line 281 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 74:
#line 291 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 75:
#line 304 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGColumnDef *def = makeNode(PGColumnDef);
					n->subtype = PG_AT_AlterColumnType;
					n->name = (yyvsp[(3) - (8)].str);
					n->def = (PGNode *) def;
					/* We only use these fields of the PGColumnDef node */
					def->typeName = (yyvsp[(6) - (8)].typnam);
					def->collClause = (PGCollateClause *) (yyvsp[(7) - (8)].node);
					def->raw_default = (yyvsp[(8) - (8)].node);
					def->location = (yylsp[(3) - (8)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 76:
#line 319 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AlterColumnGenericOptions;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 77:
#line 328 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddConstraint;
					n->def = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 78:
#line 336 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);
					n->subtype = PG_AT_AlterConstraint;
					n->def = (PGNode *) c;
					c->contype = PG_CONSTR_FOREIGN; /* others not supported, yet */
					c->conname = (yyvsp[(3) - (4)].str);
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "ALTER CONSTRAINT statement",
									&c->deferrable,
									&c->initdeferred,
									NULL, NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 79:
#line 351 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ValidateConstraint;
					n->name = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 80:
#line 359 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 81:
#line 369 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 82:
#line 379 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 83:
#line 386 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetUnLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 84:
#line 393 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 85:
#line 401 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 86:
#line 408 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_GenericOptions;
					n->def = (PGNode *)(yyvsp[(1) - (1)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 87:
#line 418 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 88:
#line 419 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 89:
#line 425 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(1) - (1)].defelt);
				;}
    break;

  case 90:
#line 429 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_SET;
				;}
    break;

  case 91:
#line 434 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_ADD;
				;}
    break;

  case 92:
#line 439 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElemExtended(NULL, (yyvsp[(2) - (2)].str), NULL, DEFELEM_DROP, (yylsp[(2) - (2)]));
				;}
    break;

  case 93:
#line 446 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 94:
#line 447 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 95:
#line 452 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 96:
#line 456 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 1; ;}
    break;

  case 97:
#line 457 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 0; ;}
    break;

  case 98:
#line 8 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(2) - (2)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 99:
#line 14 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(3) - (3)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 100:
#line 20 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 101:
#line 26 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 102:
#line 8 "third_party/libpg_query/grammar/statements/create_enum.y"
    {
					PGCreateEnumStmt *n = makeNode(PGCreateEnumStmt);
					n->typeName = (yyvsp[(3) - (8)].list);
					n->vals = (yyvsp[(7) - (8)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 103:
#line 17 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 104:
#line 18 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = NIL; ;}
    break;

  case 105:
#line 22 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 106:
#line 24 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 107:
#line 7 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SCHEMA;
					n->subname = (yyvsp[(3) - (6)].str);
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 108:
#line 16 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 109:
#line 26 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 110:
#line 36 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 111:
#line 46 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 112:
#line 56 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 113:
#line 66 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 114:
#line 76 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 115:
#line 86 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 116:
#line 96 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 117:
#line 107 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 118:
#line 118 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 119:
#line 128 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 120:
#line 140 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = COLUMN; ;}
    break;

  case 121:
#line 141 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = 0; ;}
    break;

  case 122:
#line 10 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(5) - (7)].istmt)->relation = (yyvsp[(4) - (7)].range);
					(yyvsp[(5) - (7)].istmt)->onConflictClause = (yyvsp[(6) - (7)].onconflict);
					(yyvsp[(5) - (7)].istmt)->returningList = (yyvsp[(7) - (7)].list);
					(yyvsp[(5) - (7)].istmt)->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *) (yyvsp[(5) - (7)].istmt);
				;}
    break;

  case 123:
#line 22 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 124:
#line 28 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->override = (yyvsp[(2) - (4)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 125:
#line 35 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (4)].list);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 126:
#line 41 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (7)].list);
					(yyval.istmt)->override = (yyvsp[(5) - (7)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(7) - (7)].node);
				;}
    break;

  case 127:
#line 48 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = NULL;
				;}
    break;

  case 128:
#line 58 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 129:
#line 62 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].range)->alias = makeAlias((yyvsp[(3) - (3)].str), NIL);
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 130:
#line 71 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = (yyvsp[(2) - (4)].list);
					(yyval.infer)->whereClause = (yyvsp[(4) - (4)].node);
					(yyval.infer)->conname = NULL;
					(yyval.infer)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 131:
#line 80 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = NIL;
					(yyval.infer)->whereClause = NULL;
					(yyval.infer)->conname = (yyvsp[(3) - (3)].str);
					(yyval.infer)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 132:
#line 88 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = NULL;
				;}
    break;

  case 133:
#line 95 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = (yyvsp[(1) - (1)].with); ;}
    break;

  case 134:
#line 96 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = NULL; ;}
    break;

  case 135:
#line 102 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 136:
#line 114 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].target)->val = (PGNode *) (yyvsp[(3) - (3)].node);
					(yyval.list) = list_make1((yyvsp[(1) - (3)].target));
				;}
    break;

  case 137:
#line 119 "third_party/libpg_query/grammar/statements/insert.y"
    {
					int ncolumns = list_length((yyvsp[(2) - (5)].list));
					int i = 1;
					PGListCell *col_cell;

					/* Create a PGMultiAssignRef source for each target */
					foreach(col_cell, (yyvsp[(2) - (5)].list))
					{
						PGResTarget *res_col = (PGResTarget *) lfirst(col_cell);
						PGMultiAssignRef *r = makeNode(PGMultiAssignRef);

						r->source = (PGNode *) (yyvsp[(5) - (5)].node);
						r->colno = i;
						r->ncolumns = ncolumns;
						res_col->val = (PGNode *) r;
						i++;
					}

					(yyval.list) = (yyvsp[(2) - (5)].list);
				;}
    break;

  case 138:
#line 144 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_UPDATE;
					(yyval.onconflict)->infer = (yyvsp[(3) - (8)].infer);
					(yyval.onconflict)->targetList = (yyvsp[(7) - (8)].list);
					(yyval.onconflict)->whereClause = (yyvsp[(8) - (8)].node);
					(yyval.onconflict)->location = (yylsp[(1) - (8)]);
				;}
    break;

  case 139:
#line 154 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_NOTHING;
					(yyval.onconflict)->infer = (yyvsp[(3) - (5)].infer);
					(yyval.onconflict)->targetList = NIL;
					(yyval.onconflict)->whereClause = NULL;
					(yyval.onconflict)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 140:
#line 163 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = NULL;
				;}
    break;

  case 141:
#line 170 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = (yyvsp[(1) - (5)].str);
					(yyval.ielem)->expr = NULL;
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 142:
#line 181 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(1) - (5)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 143:
#line 192 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(2) - (7)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(4) - (7)].list);
					(yyval.ielem)->opclass = (yyvsp[(5) - (7)].list);
					(yyval.ielem)->ordering = (yyvsp[(6) - (7)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(7) - (7)].nullorder);
				;}
    break;

  case 144:
#line 206 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 145:
#line 207 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 146:
#line 213 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = PG_OVERRIDING_USER_VALUE; ;}
    break;

  case 147:
#line 214 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = OVERRIDING_SYSTEM_VALUE; ;}
    break;

  case 148:
#line 219 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 149:
#line 220 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].target)); ;}
    break;

  case 150:
#line 226 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 151:
#line 227 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 152:
#line 231 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 153:
#line 232 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 154:
#line 238 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 155:
#line 240 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 156:
#line 245 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 157:
#line 246 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_concat((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].list)); ;}
    break;

  case 158:
#line 250 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].ielem)); ;}
    break;

  case 159:
#line 251 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].ielem)); ;}
    break;

  case 160:
#line 257 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;	/* upper production sets this */
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 161:
#line 8 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_NOTHING;
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 162:
#line 15 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_ASSIGNMENT;
					n->name = (yyvsp[(2) - (4)].str);
					n->args = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 163:
#line 23 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_CALL;
					n->name = (yyvsp[(2) - (5)].str);
					n->args = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 164:
#line 10 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(4) - (5)].range)->relpersistence = (yyvsp[(2) - (5)].ival);
					n->sequence = (yyvsp[(4) - (5)].range);
					n->options = (yyvsp[(5) - (5)].list);
					n->ownerId = InvalidOid;
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 165:
#line 20 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(7) - (8)].range)->relpersistence = (yyvsp[(2) - (8)].ival);
					n->sequence = (yyvsp[(7) - (8)].range);
					n->options = (yyvsp[(8) - (8)].list);
					n->ownerId = InvalidOid;
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 166:
#line 32 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 167:
#line 33 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = NIL; ;}
    break;

  case 168:
#line 8 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(2) - (3)].str);
					n->params = (yyvsp[(3) - (3)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 169:
#line 16 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(7) - (9)].str);
					n->params = (yyvsp[(8) - (9)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(4) - (9)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = false;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (9)].into)->rel->relpersistence = (yyvsp[(2) - (9)].ival);
					(yyvsp[(4) - (9)].into)->skipData = !((yyvsp[(9) - (9)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 170:
#line 33 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(10) - (12)].str);
					n->params = (yyvsp[(11) - (12)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(7) - (12)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = true;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (12)].into)->rel->relpersistence = (yyvsp[(2) - (12)].ival);
					(yyvsp[(7) - (12)].into)->skipData = !((yyvsp[(12) - (12)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 171:
#line 51 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 172:
#line 52 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = NIL; ;}
    break;

  case 173:
#line 10 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(3) - (4)].range);
					n->options = (yyvsp[(4) - (4)].list);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 174:
#line 18 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(5) - (6)].range);
					n->options = (yyvsp[(6) - (6)].list);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 175:
#line 29 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 176:
#line 30 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 177:
#line 34 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 178:
#line 35 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 179:
#line 36 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 180:
#line 41 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(1) - (1)].str)); ;}
    break;

  case 181:
#line 42 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(2) - (2)].str)); ;}
    break;

  case 182:
#line 44 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.value) = makeFloat((yyvsp[(2) - (2)].str));
					doNegateFloat((yyval.value));
				;}
    break;

  case 183:
#line 48 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeInteger((yyvsp[(1) - (1)].ival)); ;}
    break;

  case 184:
#line 53 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("as", (PGNode *)(yyvsp[(2) - (2)].typnam), (yylsp[(1) - (2)]));
				;}
    break;

  case 185:
#line 57 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cache", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 186:
#line 61 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 187:
#line 65 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(false), (yylsp[(1) - (2)]));
				;}
    break;

  case 188:
#line 69 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("increment", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 189:
#line 73 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 190:
#line 77 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 191:
#line 81 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 192:
#line 85 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 193:
#line 89 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("owned_by", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 194:
#line 93 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					/* not documented, only used by pg_dump */
					(yyval.defelt) = makeDefElem("sequence_name", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 195:
#line 98 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("start", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 196:
#line 102 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 197:
#line 106 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 198:
#line 112 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 199:
#line 113 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 200:
#line 117 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 201:
#line 118 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = + (yyvsp[(2) - (2)].ival); ;}
    break;

  case 202:
#line 119 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = - (yyvsp[(2) - (2)].ival); ;}
    break;

  case 203:
#line 3 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 204:
#line 10 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_BEGIN;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 205:
#line 16 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_START;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 206:
#line 22 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 207:
#line 29 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 208:
#line 36 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 209:
#line 45 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 210:
#line 46 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 211:
#line 47 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 212:
#line 9 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(4) - (9)].range)->relpersistence = (yyvsp[(2) - (9)].ival);
					n->relation = (yyvsp[(4) - (9)].range);
					n->tableElts = (yyvsp[(6) - (9)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(8) - (9)].list);
					n->oncommit = (yyvsp[(9) - (9)].oncommit);
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 213:
#line 24 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(7) - (12)].range)->relpersistence = (yyvsp[(2) - (12)].ival);
					n->relation = (yyvsp[(7) - (12)].range);
					n->tableElts = (yyvsp[(9) - (12)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(11) - (12)].list);
					n->oncommit = (yyvsp[(12) - (12)].oncommit);
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 214:
#line 41 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 215:
#line 43 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * We must complain about conflicting options.
					 * We could, but choose not to, complain about redundant
					 * options (ie, where $2's bit is already set in $1).
					 */
					int		newspec = (yyvsp[(1) - (2)].ival) | (yyvsp[(2) - (2)].ival);

					/* special message for this case */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED)) == (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("constraint declared INITIALLY DEFERRED must be DEFERRABLE"),
								 parser_errposition((yylsp[(2) - (2)]))));
					/* generic message for other conflicts */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE)) == (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE) ||
						(newspec & (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED)) == (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("conflicting constraint properties"),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.ival) = newspec;
				;}
    break;

  case 216:
#line 69 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].typnam); ;}
    break;

  case 217:
#line 70 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 218:
#line 71 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].list); ;}
    break;

  case 219:
#line 72 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].value); ;}
    break;

  case 220:
#line 73 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 221:
#line 74 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 222:
#line 78 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 223:
#line 79 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 224:
#line 84 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 225:
#line 89 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_NOACTION; ;}
    break;

  case 226:
#line 90 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_RESTRICT; ;}
    break;

  case 227:
#line 91 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_CASCADE; ;}
    break;

  case 228:
#line 92 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETNULL; ;}
    break;

  case 229:
#line 93 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETDEFAULT; ;}
    break;

  case 230:
#line 99 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 231:
#line 105 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 232:
#line 106 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 233:
#line 108 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * Note: the PGCollateClause is momentarily included in
					 * the list built by ColQualList, but we split it out
					 * again in SplitColQualList.
					 */
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 234:
#line 125 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NOTNULL;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 235:
#line 132 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NULL;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 236:
#line 139 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (2)]);
					n->keys = NULL;
					n->options = (yyvsp[(2) - (2)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 237:
#line 149 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NULL;
					n->options = (yyvsp[(3) - (3)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 238:
#line 159 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->is_no_inherit = (yyvsp[(5) - (5)].boolean);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					n->skip_validation = false;
					n->initially_valid = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 239:
#line 171 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_DEFAULT;
					n->location = (yylsp[(1) - (2)]);
					n->raw_expr = (yyvsp[(2) - (2)].node);
					n->cooked_expr = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 240:
#line 180 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_IDENTITY;
					n->generated_when = (yyvsp[(2) - (5)].ival);
					n->options = (yyvsp[(5) - (5)].list);
					n->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 241:
#line 189 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (5)]);
					n->pktable			= (yyvsp[(2) - (5)].range);
					n->fk_attrs			= NIL;
					n->pk_attrs			= (yyvsp[(3) - (5)].list);
					n->fk_matchtype		= (yyvsp[(4) - (5)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(5) - (5)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(5) - (5)].ival) & 0xFF);
					n->skip_validation  = false;
					n->initially_valid  = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 242:
#line 208 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 243:
#line 214 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 244:
#line 220 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (1)].ival) << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 245:
#line 222 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | ((yyvsp[(1) - (1)].ival) & 0xFF); ;}
    break;

  case 246:
#line 224 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (2)].ival) << 8) | ((yyvsp[(2) - (2)].ival) & 0xFF); ;}
    break;

  case 247:
#line 226 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(2) - (2)].ival) << 8) | ((yyvsp[(1) - (2)].ival) & 0xFF); ;}
    break;

  case 248:
#line 228 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 249:
#line 233 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 250:
#line 234 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 251:
#line 238 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = ONCOMMIT_DROP; ;}
    break;

  case 252:
#line 239 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_DELETE_ROWS; ;}
    break;

  case 253:
#line 240 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_PRESERVE_ROWS; ;}
    break;

  case 254:
#line 241 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_NOOP; ;}
    break;

  case 255:
#line 246 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 256:
#line 250 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = true; ;}
    break;

  case 257:
#line 251 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = false; ;}
    break;

  case 258:
#line 257 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 259:
#line 263 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 260:
#line 268 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_COMMENTS; ;}
    break;

  case 261:
#line 269 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_CONSTRAINTS; ;}
    break;

  case 262:
#line 270 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_DEFAULTS; ;}
    break;

  case 263:
#line 271 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_IDENTITY; ;}
    break;

  case 264:
#line 272 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_INDEXES; ;}
    break;

  case 265:
#line 273 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STATISTICS; ;}
    break;

  case 266:
#line 274 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STORAGE; ;}
    break;

  case 267:
#line 275 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_ALL; ;}
    break;

  case 268:
#line 281 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 269:
#line 282 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 270:
#line 286 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
    break;

  case 271:
#line 292 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRABLE;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 272:
#line 299 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_NOT_DEFERRABLE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 273:
#line 306 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRED;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 274:
#line 313 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_IMMEDIATE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 275:
#line 324 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 276:
#line 325 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(true), (yylsp[(1) - (2)]))); ;}
    break;

  case 277:
#line 326 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(false), (yylsp[(1) - (2)]))); ;}
    break;

  case 278:
#line 327 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 279:
#line 331 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 280:
#line 336 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 281:
#line 337 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) & ~(yyvsp[(3) - (3)].ival); ;}
    break;

  case 282:
#line 338 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 283:
#line 343 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 284:
#line 348 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_DEFERRABLE; ;}
    break;

  case 285:
#line 349 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_DEFERRABLE; ;}
    break;

  case 286:
#line 350 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_IMMEDIATE; ;}
    break;

  case 287:
#line 351 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_DEFERRED; ;}
    break;

  case 288:
#line 352 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_VALID; ;}
    break;

  case 289:
#line 353 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NO_INHERIT; ;}
    break;

  case 290:
#line 359 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (4)].str);
					n->typeName = (yyvsp[(2) - (4)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collOid = InvalidOid;
					n->fdwoptions = (yyvsp[(3) - (4)].list);
					SplitColQualList((yyvsp[(4) - (4)].list), &n->constraints, &n->collClause,
									 yyscanner);
					n->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 291:
#line 382 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 292:
#line 386 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 293:
#line 392 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 294:
#line 393 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 295:
#line 397 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 296:
#line 401 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 297:
#line 402 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 298:
#line 403 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 299:
#line 408 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 300:
#line 412 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 301:
#line 419 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 302:
#line 420 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 303:
#line 425 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 304:
#line 426 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 305:
#line 431 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str));
				;}
    break;

  case 306:
#line 438 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 307:
#line 439 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 308:
#line 444 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 309:
#line 445 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 310:
#line 449 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 311:
#line 455 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 312:
#line 459 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 313:
#line 463 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (5)].str), (yyvsp[(3) - (5)].str), (PGNode *) (yyvsp[(5) - (5)].node),
											 PG_DEFELEM_UNSPEC, (yylsp[(1) - (5)]));
				;}
    break;

  case 314:
#line 468 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str), NULL, PG_DEFELEM_UNSPEC, (yylsp[(1) - (3)]));
				;}
    break;

  case 315:
#line 475 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 316:
#line 476 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 317:
#line 480 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 318:
#line 482 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (4)].str)), (yyvsp[(2) - (4)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 319:
#line 488 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(2) - (5)].str)), (yyvsp[(3) - (5)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->setof = true;
					(yyval.typnam)->location = (yylsp[(2) - (5)]);
				;}
    break;

  case 320:
#line 499 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					processCASbits((yyvsp[(5) - (5)].ival), (yylsp[(5) - (5)]), "CHECK",
								   NULL, NULL, &n->skip_validation,
								   &n->is_no_inherit, yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 321:
#line 513 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (6)]);
					n->keys = (yyvsp[(3) - (6)].list);
					n->options = (yyvsp[(5) - (6)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(6) - (6)].ival), (yylsp[(6) - (6)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 322:
#line 526 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(2) - (3)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(3) - (3)].ival), (yylsp[(3) - (3)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 323:
#line 541 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (7)]);
					n->keys = (yyvsp[(4) - (7)].list);
					n->options = (yyvsp[(6) - (7)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(7) - (7)].ival), (yylsp[(7) - (7)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 324:
#line 554 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (4)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(3) - (4)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 325:
#line 569 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (11)]);
					n->pktable			= (yyvsp[(7) - (11)].range);
					n->fk_attrs			= (yyvsp[(4) - (11)].list);
					n->pk_attrs			= (yyvsp[(8) - (11)].list);
					n->fk_matchtype		= (yyvsp[(9) - (11)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(10) - (11)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(10) - (11)].ival) & 0xFF);
					processCASbits((yyvsp[(11) - (11)].ival), (yylsp[(11) - (11)]), "FOREIGN KEY",
								   &n->deferrable, &n->initdeferred,
								   &n->skip_validation, NULL,
								   yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 326:
#line 591 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 327:
#line 595 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 328:
#line 602 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_FULL;
			;}
    break;

  case 329:
#line 606 "third_party/libpg_query/grammar/statements/create.y"
    {
				ereport(ERROR,
						(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
						 errmsg("MATCH PARTIAL not yet implemented"),
						 parser_errposition((yylsp[(1) - (2)]))));
				(yyval.ival) = PG_FKCONSTR_MATCH_PARTIAL;
			;}
    break;

  case 330:
#line 614 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 331:
#line 618 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 332:
#line 626 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGTableLikeClause *n = makeNode(PGTableLikeClause);
					n->relation = (yyvsp[(2) - (3)].range);
					n->options = (yyvsp[(3) - (3)].ival);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 333:
#line 635 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 334:
#line 636 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 335:
#line 637 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 336:
#line 638 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 337:
#line 640 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 338:
#line 647 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 339:
#line 653 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_UNLOGGED; ;}
    break;

  case 340:
#line 654 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = RELPERSISTENCE_PERMANENT; ;}
    break;

  case 341:
#line 659 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_ATTRIBUTE_IDENTITY_ALWAYS; ;}
    break;

  case 342:
#line 660 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ATTRIBUTE_IDENTITY_BY_DEFAULT; ;}
    break;

  case 343:
#line 10 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 344:
#line 20 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 345:
#line 30 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 346:
#line 40 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 347:
#line 50 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->objects = list_make1(lappend((yyvsp[(5) - (6)].list), makeString((yyvsp[(3) - (6)].str))));
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 348:
#line 60 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (8)].objtype);
					n->objects = list_make1(lappend((yyvsp[(7) - (8)].list), makeString((yyvsp[(5) - (8)].str))));
					n->behavior = (yyvsp[(8) - (8)].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 349:
#line 73 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TABLE; ;}
    break;

  case 350:
#line 74 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SEQUENCE; ;}
    break;

  case 351:
#line 75 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 352:
#line 76 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 353:
#line 77 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_VIEW; ;}
    break;

  case 354:
#line 78 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_MATVIEW; ;}
    break;

  case 355:
#line 79 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_INDEX; ;}
    break;

  case 356:
#line 80 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_TABLE; ;}
    break;

  case 357:
#line 81 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_COLLATION; ;}
    break;

  case 358:
#line 82 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_CONVERSION; ;}
    break;

  case 359:
#line 83 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_STATISTIC_EXT; ;}
    break;

  case 360:
#line 84 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSPARSER; ;}
    break;

  case 361:
#line 85 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSDICTIONARY; ;}
    break;

  case 362:
#line 86 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSTEMPLATE; ;}
    break;

  case 363:
#line 87 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSCONFIGURATION; ;}
    break;

  case 364:
#line 92 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_ACCESS_METHOD; ;}
    break;

  case 365:
#line 93 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EVENT_TRIGGER; ;}
    break;

  case 366:
#line 94 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EXTENSION; ;}
    break;

  case 367:
#line 95 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FDW; ;}
    break;

  case 368:
#line 96 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_PUBLICATION; ;}
    break;

  case 369:
#line 97 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SCHEMA; ;}
    break;

  case 370:
#line 98 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_SERVER; ;}
    break;

  case 371:
#line 103 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 372:
#line 104 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 373:
#line 109 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_CASCADE; ;}
    break;

  case 374:
#line 110 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; ;}
    break;

  case 375:
#line 111 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; /* default */ ;}
    break;

  case 376:
#line 116 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_POLICY; ;}
    break;

  case 377:
#line 117 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_RULE; ;}
    break;

  case 378:
#line 118 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TRIGGER; ;}
    break;

  case 379:
#line 8 "third_party/libpg_query/grammar/statements/create_function.y"
    {
					PGCreateFunctionStmt *n = makeNode(PGCreateFunctionStmt);
					n->name = (yyvsp[(3) - (6)].range);
					n->params = (yyvsp[(4) - (6)].list);
					n->function = (yyvsp[(6) - (6)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 382:
#line 24 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = NIL;
			;}
    break;

  case 383:
#line 28 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = (yyvsp[(2) - (3)].list);
			;}
    break;

  case 384:
#line 12 "third_party/libpg_query/grammar/statements/update.y"
    {
					PGUpdateStmt *n = makeNode(PGUpdateStmt);
					n->relation = (yyvsp[(3) - (8)].range);
					n->targetList = (yyvsp[(5) - (8)].list);
					n->fromClause = (yyvsp[(6) - (8)].list);
					n->whereClause = (yyvsp[(7) - (8)].node);
					n->returningList = (yyvsp[(8) - (8)].list);
					n->withClause = (yyvsp[(1) - (8)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 385:
#line 3 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = (yyvsp[(3) - (11)].range);
					n->query = NULL;
					n->attlist = (yyvsp[(4) - (11)].list);
					n->is_from = (yyvsp[(6) - (11)].boolean);
					n->is_program = (yyvsp[(7) - (11)].boolean);
					n->filename = (yyvsp[(8) - (11)].str);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(8) - (11)]))));

					n->options = NIL;
					/* Concatenate user-supplied flags */
					if ((yyvsp[(2) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(2) - (11)].defelt));
					if ((yyvsp[(5) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(5) - (11)].defelt));
					if ((yyvsp[(9) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(9) - (11)].defelt));
					if ((yyvsp[(11) - (11)].list))
						n->options = list_concat(n->options, (yyvsp[(11) - (11)].list));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 386:
#line 31 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = NULL;
					n->query = (yyvsp[(3) - (9)].node);
					n->attlist = NIL;
					n->is_from = false;
					n->is_program = (yyvsp[(6) - (9)].boolean);
					n->filename = (yyvsp[(7) - (9)].str);
					n->options = (yyvsp[(9) - (9)].list);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(5) - (9)]))));

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 387:
#line 53 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 388:
#line 54 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 389:
#line 60 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(2) - (3)]));
				;}
    break;

  case 390:
#line 63 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 391:
#line 69 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 392:
#line 73 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 393:
#line 80 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 394:
#line 81 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 395:
#line 85 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 396:
#line 86 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 397:
#line 91 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 398:
#line 92 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 399:
#line 96 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 400:
#line 97 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 401:
#line 102 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 402:
#line 103 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 403:
#line 104 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeNode(PGAStar); ;}
    break;

  case 404:
#line 105 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (3)].list); ;}
    break;

  case 405:
#line 106 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = NULL; ;}
    break;

  case 406:
#line 112 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 407:
#line 120 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (2)]));
				;}
    break;

  case 408:
#line 123 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 409:
#line 128 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 410:
#line 129 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = NIL; ;}
    break;

  case 411:
#line 135 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 412:
#line 138 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 413:
#line 144 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 414:
#line 148 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 415:
#line 152 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("freeze", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 416:
#line 156 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 417:
#line 160 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("null", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 418:
#line 164 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("csv"), (yylsp[(1) - (1)]));
				;}
    break;

  case 419:
#line 168 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("header", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 420:
#line 172 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("quote", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 421:
#line 176 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("escape", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 422:
#line 180 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 423:
#line 184 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)makeNode(PGAStar), (yylsp[(1) - (3)]));
				;}
    break;

  case 424:
#line 188 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_not_null", (PGNode *)(yyvsp[(4) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 425:
#line 192 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_null", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 426:
#line 196 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("encoding", (PGNode *)makeString((yyvsp[(2) - (2)].str)), (yylsp[(1) - (2)]));
				;}
    break;

  case 427:
#line 203 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 428:
#line 209 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 429:
#line 210 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 430:
#line 211 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 431:
#line 217 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 432:
#line 221 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 435:
#line 52 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 436:
#line 53 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 437:
#line 68 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 438:
#line 70 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list), NIL,
										NULL, NULL, NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (2)].node);
				;}
    break;

  case 439:
#line 77 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(3) - (4)].list),
										(PGNode*) list_nth((yyvsp[(4) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 440:
#line 85 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(4) - (4)].list),
										(PGNode*) list_nth((yyvsp[(3) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(3) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 441:
#line 93 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (2)].node), NULL, NIL,
										NULL, NULL,
										(yyvsp[(1) - (2)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 442:
#line 101 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].list), NIL,
										NULL, NULL,
										(yyvsp[(1) - (3)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (3)].node);
				;}
    break;

  case 443:
#line 109 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(4) - (5)].list),
										(PGNode*) list_nth((yyvsp[(5) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(5) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 444:
#line 117 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(5) - (5)].list),
										(PGNode*) list_nth((yyvsp[(4) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 445:
#line 127 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 446:
#line 128 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 447:
#line 158 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->targetList = (yyvsp[(3) - (10)].list);
					n->intoClause = (yyvsp[(4) - (10)].into);
					n->fromClause = (yyvsp[(5) - (10)].list);
					n->whereClause = (yyvsp[(6) - (10)].node);
					n->groupClause = (yyvsp[(7) - (10)].list);
					n->havingClause = (yyvsp[(8) - (10)].node);
					n->windowClause = (yyvsp[(9) - (10)].list);
					n->sampleOptions = (yyvsp[(10) - (10)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 448:
#line 173 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->distinctClause = (yyvsp[(2) - (10)].list);
					n->targetList = (yyvsp[(3) - (10)].list);
					n->intoClause = (yyvsp[(4) - (10)].into);
					n->fromClause = (yyvsp[(5) - (10)].list);
					n->whereClause = (yyvsp[(6) - (10)].node);
					n->groupClause = (yyvsp[(7) - (10)].list);
					n->havingClause = (yyvsp[(8) - (10)].node);
					n->windowClause = (yyvsp[(9) - (10)].list);
					n->sampleOptions = (yyvsp[(10) - (10)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 449:
#line 186 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 450:
#line 188 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* same as SELECT * FROM relation_expr */
					PGColumnRef *cr = makeNode(PGColumnRef);
					PGResTarget *rt = makeNode(PGResTarget);
					PGSelectStmt *n = makeNode(PGSelectStmt);

					cr->fields = list_make1(makeNode(PGAStar));
					cr->location = -1;

					rt->name = NULL;
					rt->indirection = NIL;
					rt->val = (PGNode *)cr;
					rt->location = -1;

					n->targetList = list_make1(rt);
					n->fromClause = list_make1((yyvsp[(2) - (2)].range));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 451:
#line 207 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_UNION, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 452:
#line 211 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_INTERSECT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 453:
#line 215 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_EXCEPT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 454:
#line 232 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 455:
#line 239 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 456:
#line 246 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(3) - (3)].list);
				(yyval.with)->recursive = true;
				(yyval.with)->location = (yylsp[(1) - (3)]);
			;}
    break;

  case 457:
#line 255 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 458:
#line 256 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 459:
#line 260 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGCommonTableExpr *n = makeNode(PGCommonTableExpr);
				n->ctename = (yyvsp[(1) - (6)].str);
				n->aliascolnames = (yyvsp[(2) - (6)].list);
				n->ctequery = (yyvsp[(5) - (6)].node);
				n->location = (yylsp[(1) - (6)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 460:
#line 272 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(2) - (2)].range);
					(yyval.into)->colNames = NIL;
					(yyval.into)->options = NIL;
					(yyval.into)->onCommit = PG_ONCOMMIT_NOOP;
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;
				;}
    break;

  case 461:
#line 282 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.into) = NULL; ;}
    break;

  case 462:
#line 291 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 463:
#line 296 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 464:
#line 301 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 465:
#line 306 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 466:
#line 311 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 467:
#line 319 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 468:
#line 327 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_UNLOGGED;
				;}
    break;

  case 469:
#line 332 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 470:
#line 337 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 471:
#line 343 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 472:
#line 344 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 473:
#line 348 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 474:
#line 349 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 475:
#line 350 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 476:
#line 357 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(NIL); ;}
    break;

  case 477:
#line 358 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 478:
#line 362 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL;;}
    break;

  case 479:
#line 363 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 480:
#line 367 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 481:
#line 368 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 482:
#line 372 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 483:
#line 376 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].sortby)); ;}
    break;

  case 484:
#line 377 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].sortby)); ;}
    break;

  case 485:
#line 381 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (4)].node);
					(yyval.sortby)->sortby_dir = SORTBY_USING;
					(yyval.sortby)->sortby_nulls = (yyvsp[(4) - (4)].nullorder);
					(yyval.sortby)->useOp = (yyvsp[(3) - (4)].list);
					(yyval.sortby)->location = (yylsp[(3) - (4)]);
				;}
    break;

  case 486:
#line 390 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (3)].node);
					(yyval.sortby)->sortby_dir = (yyvsp[(2) - (3)].sortorder);
					(yyval.sortby)->sortby_nulls = (yyvsp[(3) - (3)].nullorder);
					(yyval.sortby)->useOp = NIL;
					(yyval.sortby)->location = -1;		/* no operator */
				;}
    break;

  case 487:
#line 400 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_ASC; ;}
    break;

  case 488:
#line 401 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DESC; ;}
    break;

  case 489:
#line 402 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DEFAULT; ;}
    break;

  case 490:
#line 405 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_FIRST; ;}
    break;

  case 491:
#line 406 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_LAST; ;}
    break;

  case 492:
#line 407 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_DEFAULT; ;}
    break;

  case 493:
#line 411 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(2) - (2)].node), (yyvsp[(1) - (2)].node)); ;}
    break;

  case 494:
#line 412 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 495:
#line 413 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL, (yyvsp[(1) - (1)].node)); ;}
    break;

  case 496:
#line 414 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (1)].node), NULL); ;}
    break;

  case 497:
#line 418 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 498:
#line 419 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL,NULL); ;}
    break;

  case 499:
#line 424 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 500:
#line 426 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Disabled because it was too confusing, bjm 2002-02-18 */
					ereport(ERROR,
							(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("LIMIT #,# syntax is not supported"),
							 errhint("Use separate LIMIT and OFFSET clauses."),
							 parser_errposition((yylsp[(1) - (4)]))));
				;}
    break;

  case 501:
#line 442 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(3) - (5)].node); ;}
    break;

  case 502:
#line 444 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst(1, -1); ;}
    break;

  case 503:
#line 449 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 504:
#line 452 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 505:
#line 460 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
		;}
    break;

  case 506:
#line 464 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
		;}
    break;

  case 507:
#line 468 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
		;}
    break;

  case 508:
#line 472 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
		;}
    break;

  case 509:
#line 476 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (1)].ival)), false);
		;}
    break;

  case 510:
#line 480 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), false);
		;}
    break;

  case 511:
#line 487 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(3) - (3)].node);
				;}
    break;

  case 512:
#line 491 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 513:
#line 498 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 514:
#line 499 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 515:
#line 504 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSampleOptions((yyvsp[(3) - (5)].node), (yyvsp[(1) - (5)].str), (yyvsp[(5) - (5)].ival), (yylsp[(1) - (5)]));
				;}
    break;

  case 516:
#line 508 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (1)].node), NULL, -1, (yylsp[(1) - (1)]));
		;}
    break;

  case 517:
#line 512 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (4)].node), (yyvsp[(3) - (4)].str), -1, (yylsp[(1) - (4)]));
		;}
    break;

  case 518:
#line 516 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (6)].node), (yyvsp[(3) - (6)].str), (yyvsp[(5) - (6)].ival), (yylsp[(1) - (6)]));
		;}
    break;

  case 519:
#line 523 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 520:
#line 529 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 521:
#line 530 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 522:
#line 535 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(3) - (4)].ival); ;}
    break;

  case 523:
#line 536 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = -1; ;}
    break;

  case 524:
#line 540 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 525:
#line 542 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* LIMIT ALL is represented as a NULL constant */
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 526:
#line 549 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 527:
#line 569 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 528:
#line 571 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 529:
#line 573 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 530:
#line 577 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival),(yylsp[(1) - (1)])); ;}
    break;

  case 531:
#line 578 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str),(yylsp[(1) - (1)])); ;}
    break;

  case 532:
#line 582 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 533:
#line 583 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 534:
#line 586 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 535:
#line 587 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 536:
#line 612 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 537:
#line 613 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 538:
#line 617 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 539:
#line 618 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].node)); ;}
    break;

  case 540:
#line 622 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 541:
#line 623 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 542:
#line 628 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_EMPTY, NIL, (yylsp[(1) - (2)]));
				;}
    break;

  case 543:
#line 640 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 544:
#line 641 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 545:
#line 645 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 546:
#line 646 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 547:
#line 650 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 548:
#line 651 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 549:
#line 655 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 550:
#line 656 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 551:
#line 661 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGLockingClause *n = makeNode(PGLockingClause);
					n->lockedRels = (yyvsp[(2) - (3)].list);
					n->strength = (yyvsp[(1) - (3)].lockstrength);
					n->waitPolicy = (yyvsp[(3) - (3)].lockwaitpolicy);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 552:
#line 671 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = LCS_FORUPDATE; ;}
    break;

  case 553:
#line 672 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORNOKEYUPDATE; ;}
    break;

  case 554:
#line 673 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORSHARE; ;}
    break;

  case 555:
#line 674 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORKEYSHARE; ;}
    break;

  case 556:
#line 678 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 557:
#line 679 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 558:
#line 684 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = LockWaitError; ;}
    break;

  case 559:
#line 685 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitSkip; ;}
    break;

  case 560:
#line 686 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitBlock; ;}
    break;

  case 561:
#line 696 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->valuesLists = list_make1((yyvsp[(3) - (4)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 562:
#line 702 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = (PGSelectStmt *) (yyvsp[(1) - (5)].node);
					n->valuesLists = lappend(n->valuesLists, (yyvsp[(4) - (5)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 563:
#line 719 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 564:
#line 720 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 565:
#line 724 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 566:
#line 725 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 567:
#line 732 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(1) - (3)].range)->alias = (yyvsp[(2) - (3)].alias);
					(yyvsp[(1) - (3)].range)->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) (yyvsp[(1) - (3)].range);
				;}
    break;

  case 568:
#line 738 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(1) - (3)].node);
					n->alias = (PGAlias*) linitial((yyvsp[(2) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(2) - (3)].list));
					n->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 569:
#line 746 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(2) - (3)].node);
					n->lateral = true;
					n->alias = (PGAlias*) linitial((yyvsp[(3) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(3) - (3)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 570:
#line 754 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = false;
					n->subquery = (yyvsp[(1) - (3)].node);
					n->alias = (yyvsp[(2) - (3)].alias);
					n->sample = (yyvsp[(3) - (3)].node);
					/*
					 * The SQL spec does not permit a subselect
					 * (<derived_table>) without an alias clause,
					 * so we don't either.  This avoids the problem
					 * of needing to invent a unique refname for it.
					 * That could be surmounted if there's sufficient
					 * popular demand, but for now let's just implement
					 * the spec and see if anyone complains.
					 * However, it does seem like a good idea to emit
					 * an error message that's better than "syntax error".
					 */
					if ((yyvsp[(2) - (3)].alias) == NULL)
					{
						if (IsA((yyvsp[(1) - (3)].node), PGSelectStmt) &&
							((PGSelectStmt *) (yyvsp[(1) - (3)].node))->valuesLists)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("VALUES in FROM must have an alias"),
									 errhint("For example, FROM (VALUES ...) [AS] foo."),
									 parser_errposition((yylsp[(1) - (3)]))));
						else
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("subquery in FROM must have an alias"),
									 errhint("For example, FROM (SELECT ...) [AS] foo."),
									 parser_errposition((yylsp[(1) - (3)]))));
					}
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 571:
#line 790 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = true;
					n->subquery = (yyvsp[(2) - (3)].node);
					n->alias = (yyvsp[(3) - (3)].alias);
					n->sample = NULL;
					/* same comment as above */
					if ((yyvsp[(3) - (3)].alias) == NULL)
					{
						if (IsA((yyvsp[(2) - (3)].node), PGSelectStmt) &&
							((PGSelectStmt *) (yyvsp[(2) - (3)].node))->valuesLists)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("VALUES in FROM must have an alias"),
									 errhint("For example, FROM (VALUES ...) [AS] foo."),
									 parser_errposition((yylsp[(2) - (3)]))));
						else
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("subquery in FROM must have an alias"),
									 errhint("For example, FROM (SELECT ...) [AS] foo."),
									 parser_errposition((yylsp[(2) - (3)]))));
					}
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 572:
#line 816 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) (yyvsp[(1) - (1)].jexpr);
				;}
    break;

  case 573:
#line 820 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(2) - (4)].jexpr)->alias = (yyvsp[(4) - (4)].alias);
					(yyval.node) = (PGNode *) (yyvsp[(2) - (4)].jexpr);
				;}
    break;

  case 574:
#line 846 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.jexpr) = (yyvsp[(2) - (3)].jexpr);
				;}
    break;

  case 575:
#line 850 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* CROSS JOIN is same as unqualified inner join */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL;
					n->quals = NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 576:
#line 863 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(2) - (5)].jtype);
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(4) - (5)].node);
					if ((yyvsp[(5) - (5)].node) != NULL && IsA((yyvsp[(5) - (5)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(5) - (5)].node); /* USING clause */
					else
						n->quals = (yyvsp[(5) - (5)].node); /* ON clause */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 577:
#line 877 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(3) - (4)].node);
					if ((yyvsp[(4) - (4)].node) != NULL && IsA((yyvsp[(4) - (4)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(4) - (4)].node); /* USING clause */
					else
						n->quals = (yyvsp[(4) - (4)].node); /* ON clause */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 578:
#line 892 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(3) - (5)].jtype);
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(5) - (5)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 579:
#line 904 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 580:
#line 920 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.alias)->colnames = (yyvsp[(4) - (5)].list);
				;}
    break;

  case 581:
#line 926 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (2)].str);
				;}
    break;

  case 582:
#line 931 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.alias)->colnames = (yyvsp[(3) - (4)].list);
				;}
    break;

  case 583:
#line 937 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (1)].str);
				;}
    break;

  case 584:
#line 943 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = (yyvsp[(1) - (1)].alias); ;}
    break;

  case 585:
#line 944 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = NULL; ;}
    break;

  case 586:
#line 953 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (1)].alias), NIL);
				;}
    break;

  case 587:
#line 957 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 588:
#line 961 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.list) = list_make2(a, (yyvsp[(4) - (5)].list));
				;}
    break;

  case 589:
#line 967 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.list) = list_make2(a, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 590:
#line 973 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, NIL);
				;}
    break;

  case 591:
#line 978 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_FULL; ;}
    break;

  case 592:
#line 979 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_LEFT; ;}
    break;

  case 593:
#line 980 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_RIGHT; ;}
    break;

  case 594:
#line 981 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_INNER; ;}
    break;

  case 595:
#line 985 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 596:
#line 986 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 597:
#line 998 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) (yyvsp[(3) - (4)].list); ;}
    break;

  case 598:
#line 999 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 599:
#line 1005 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, implicitly */
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 600:
#line 1012 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, explicitly */
					(yyval.range) = (yyvsp[(1) - (2)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 601:
#line 1019 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance */
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 602:
#line 1026 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance, SQL99-style syntax */
					(yyval.range) = (yyvsp[(3) - (4)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 603:
#line 1058 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(2) - (2)].boolean);
					n->is_rowsfrom = false;
					n->functions = list_make1(list_make2((yyvsp[(1) - (2)].node), NIL));
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 604:
#line 1069 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(6) - (6)].boolean);
					n->is_rowsfrom = true;
					n->functions = (yyvsp[(4) - (6)].list);
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 605:
#line 1082 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 606:
#line 1086 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 607:
#line 1087 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 608:
#line 1090 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 609:
#line 1091 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 610:
#line 1094 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 611:
#line 1095 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 612:
#line 1100 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 613:
#line 1101 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 614:
#line 1107 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 615:
#line 1111 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 616:
#line 1117 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (3)].str);
					n->typeName = (yyvsp[(2) - (3)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collClause = (PGCollateClause *) (yyvsp[(3) - (3)].node);
					n->collOid = InvalidOid;
					n->constraints = NIL;
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 617:
#line 1138 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 618:
#line 1145 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 619:
#line 1158 "third_party/libpg_query/grammar/statements/select.y"
    {
             (yyval.list) = list_make1(list_make2(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].typnam)));
            ;}
    break;

  case 620:
#line 1161 "third_party/libpg_query/grammar/statements/select.y"
    {
             (yyval.list) = lappend((yyvsp[(1) - (4)].list), list_make2(makeString((yyvsp[(3) - (4)].str)), (yyvsp[(4) - (4)].typnam)));
            ;}
    break;

  case 623:
#line 1168 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 624:
#line 1173 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->setof = true;
				;}
    break;

  case 625:
#line 1180 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (5)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(4) - (5)].ival)));
				;}
    break;

  case 626:
#line 1185 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (6)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(5) - (6)].ival)));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 627:
#line 1191 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
				;}
    break;

  case 628:
#line 1196 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 629:
#line 1201 "third_party/libpg_query/grammar/statements/select.y"
    {
               (yyval.typnam) = SystemTypeName("struct");
               (yyval.typnam)->arrayBounds = (yyvsp[(5) - (5)].list);
               (yyval.typnam)->typmods = (yyvsp[(3) - (5)].list);
               (yyval.typnam)->location = (yylsp[(1) - (5)]);
               ;}
    break;

  case 630:
#line 1207 "third_party/libpg_query/grammar/statements/select.y"
    {
               (yyval.typnam) = SystemTypeName("map");
               (yyval.typnam)->arrayBounds = (yyvsp[(5) - (5)].list);
               (yyval.typnam)->typmods = (yyvsp[(3) - (5)].list);
               (yyval.typnam)->location = (yylsp[(1) - (5)]);
			;}
    break;

  case 631:
#line 1217 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeInteger(-1)); ;}
    break;

  case 632:
#line 1219 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (4)].list), makeInteger((yyvsp[(3) - (4)].ival))); ;}
    break;

  case 633:
#line 1221 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = NIL; ;}
    break;

  case 634:
#line 1225 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 635:
#line 1226 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 636:
#line 1227 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 637:
#line 1228 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 638:
#line 1229 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 639:
#line 1231 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 640:
#line 1236 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (4)].typnam);
					(yyval.typnam)->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											 makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
				;}
    break;

  case 641:
#line 1255 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 642:
#line 1256 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 643:
#line 1257 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 644:
#line 1258 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 645:
#line 1270 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = makeTypeName((yyvsp[(1) - (2)].str));
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 646:
#line 1283 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 647:
#line 1284 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 648:
#line 1291 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 649:
#line 1296 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 650:
#line 1301 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int2");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 651:
#line 1306 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int8");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 652:
#line 1311 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 653:
#line 1316 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (2)].typnam);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 654:
#line 1321 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float8");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 655:
#line 1326 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 656:
#line 1332 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 657:
#line 1338 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 658:
#line 1344 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("bool");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 659:
#line 1351 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Check FLOAT() precision limits assuming IEEE floating
					 * types - thomas 1997-09-18
					 */
					if ((yyvsp[(2) - (3)].ival) < 1)
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be at least 1 bit"),
								 parser_errposition((yylsp[(2) - (3)]))));
					else if ((yyvsp[(2) - (3)].ival) <= 24)
						(yyval.typnam) = SystemTypeName("float4");
					else if ((yyvsp[(2) - (3)].ival) <= 53)
						(yyval.typnam) = SystemTypeName("float8");
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be less than 54 bits"),
								 parser_errposition((yylsp[(2) - (3)]))));
				;}
    break;

  case 660:
#line 1372 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
				;}
    break;

  case 661:
#line 1382 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 662:
#line 1386 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 663:
#line 1394 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 664:
#line 1398 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 665:
#line 1406 "third_party/libpg_query/grammar/statements/select.y"
    {
					const char *typname;

					typname = (yyvsp[(2) - (5)].boolean) ? "varbit" : "bit";
					(yyval.typnam) = SystemTypeName(typname);
					(yyval.typnam)->typmods = (yyvsp[(4) - (5)].list);
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 666:
#line 1418 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* bit defaults to bit(1), varbit to no limit */
					if ((yyvsp[(2) - (2)].boolean))
					{
						(yyval.typnam) = SystemTypeName("varbit");
					}
					else
					{
						(yyval.typnam) = SystemTypeName("bit");
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					}
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 667:
#line 1439 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 668:
#line 1443 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 669:
#line 1449 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 670:
#line 1453 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Length was not specified so allow to be unrestricted.
					 * This handles problems with fixed-length (bpchar) strings
					 * which in column definitions must default to a length
					 * of one, but should not be constrained if the length
					 * was not specified.
					 */
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 671:
#line 1466 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (4)].conststr));
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 672:
#line 1474 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (1)].conststr));
					/* char defaults to char(1), varchar to no limit */
					if (strcmp((yyvsp[(1) - (1)].conststr), "bpchar") == 0)
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 673:
#line 1484 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 674:
#line 1486 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 675:
#line 1488 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "varchar"; ;}
    break;

  case 676:
#line 1490 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 677:
#line 1492 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 678:
#line 1494 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 679:
#line 1498 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 680:
#line 1499 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 681:
#line 1507 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 682:
#line 1516 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 683:
#line 1524 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 684:
#line 1533 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 685:
#line 1544 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("interval");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 686:
#line 1551 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 687:
#line 1552 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 688:
#line 1553 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 705:
#line 1582 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR), (yylsp[(1) - (1)]))); ;}
    break;

  case 706:
#line 1584 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MONTH), (yylsp[(1) - (1)]))); ;}
    break;

  case 707:
#line 1586 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY), (yylsp[(1) - (1)]))); ;}
    break;

  case 708:
#line 1588 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR), (yylsp[(1) - (1)]))); ;}
    break;

  case 709:
#line 1590 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE), (yylsp[(1) - (1)]))); ;}
    break;

  case 710:
#line 1592 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 711:
#line 1594 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MILLISECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 712:
#line 1596 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MICROSECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 713:
#line 1598 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR) |
												 INTERVAL_MASK(MONTH), (yylsp[(1) - (3)])));
				;}
    break;

  case 714:
#line 1603 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR), (yylsp[(1) - (3)])));
				;}
    break;

  case 715:
#line 1608 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 716:
#line 1614 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 717:
#line 1621 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 718:
#line 1626 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 719:
#line 1632 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 720:
#line 1637 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 721:
#line 1668 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 722:
#line 1671 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), 0, (yylsp[(2) - (3)])); ;}
    break;

  case 723:
#line 1673 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = (yyvsp[(1) - (3)].node);
					n->collname = (yyvsp[(3) - (3)].list);
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 724:
#line 1681 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("timezone"),
											   list_make2((yyvsp[(5) - (5)].node), (yyvsp[(1) - (5)].node)),
											   (yylsp[(2) - (5)]));
				;}
    break;

  case 725:
#line 1696 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 726:
#line 1698 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 727:
#line 1700 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 728:
#line 1702 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 729:
#line 1704 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 730:
#line 1706 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 731:
#line 1708 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 732:
#line 1710 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 733:
#line 1712 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 734:
#line 1714 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 735:
#line 1716 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 736:
#line 1718 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 737:
#line 1720 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 738:
#line 1722 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 739:
#line 1725 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 740:
#line 1727 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 741:
#line 1729 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 742:
#line 1732 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeAndExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 743:
#line 1734 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeOrExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 744:
#line 1736 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 745:
#line 1738 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 746:
#line 1741 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_GLOB, "~~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 747:
#line 1746 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 748:
#line 1751 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make3((yyvsp[(1) - (5)].node), (yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 749:
#line 1758 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "!~~",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 750:
#line 1763 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make3((yyvsp[(1) - (6)].node), (yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 751:
#line 1770 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 752:
#line 1775 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make2((yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 753:
#line 1783 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 754:
#line 1788 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 755:
#line 1797 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (4)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (4)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (4)].node), (PGNode *) n, (yylsp[(2) - (4)]));
				;}
    break;

  case 756:
#line 1805 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 757:
#line 1813 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (5)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 758:
#line 1821 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
											   (yylsp[(2) - (7)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (7)].node), (PGNode *) n, (yylsp[(2) - (7)]));
				;}
    break;

  case 759:
#line 1839 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 760:
#line 1847 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 761:
#line 1855 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 762:
#line 1863 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 763:
#line 1871 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 764:
#line 1878 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("row"), (yyvsp[(1) - (1)].list), (yylsp[(1) - (1)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 765:
#line 1882 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("struct_pack"), (yyvsp[(2) - (3)].list), (yylsp[(2) - (3)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 766:
#line 1886 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("list_value"), (yyvsp[(2) - (3)].list), (yylsp[(2) - (3)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 767:
#line 1891 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGLambdaFunction *n = makeNode(PGLambdaFunction);
				n->parameters = (yyvsp[(1) - (3)].list);
				n->function = (yyvsp[(3) - (3)].node);
				n->location = (yylsp[(2) - (3)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 768:
#line 1899 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGLambdaFunction *n = makeNode(PGLambdaFunction);
				n->parameters = list_make1((yyvsp[(1) - (3)].node));
				n->function = (yyvsp[(3) - (3)].node);
				n->location = (yylsp[(2) - (3)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 769:
#line 1907 "third_party/libpg_query/grammar/statements/select.y"
    {
					if (list_length((yyvsp[(1) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on left side of OVERLAPS expression"),
								 parser_errposition((yylsp[(1) - (3)]))));
					if (list_length((yyvsp[(3) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on right side of OVERLAPS expression"),
								 parser_errposition((yylsp[(3) - (3)]))));
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlaps"),
											   list_concat((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)),
											   (yylsp[(2) - (3)]));
				;}
    break;

  case 770:
#line 1923 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = PG_IS_TRUE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 771:
#line 1931 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_TRUE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 772:
#line 1939 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_FALSE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 773:
#line 1947 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_FALSE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 774:
#line 1955 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_UNKNOWN;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 775:
#line 1963 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_UNKNOWN;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 776:
#line 1971 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 777:
#line 1975 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 778:
#line 1979 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 779:
#line 1983 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 780:
#line 1987 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN,
												   "BETWEEN",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 781:
#line 1995 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN,
												   "NOT BETWEEN",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 782:
#line 2003 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN_SYM,
												   "BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 783:
#line 2011 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN_SYM,
												   "NOT BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 784:
#line 2019 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(3) - (3)].node), PGSubLink))
					{
						/* generate foo = ANY (subquery) */
						PGSubLink *n = (PGSubLink *) (yyvsp[(3) - (3)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (3)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (3)]);
						(yyval.node) = (PGNode *)n;
					}
					else
					{
						/* generate scalar IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
					}
				;}
    break;

  case 785:
#line 2039 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(4) - (4)].node), PGSubLink))
					{
						/* generate NOT (foo = ANY (subquery)) */
						/* Make an = ANY node */
						PGSubLink *n = (PGSubLink *) (yyvsp[(4) - (4)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (4)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (4)]);
						/* Stick a NOT on top; must have same parse location */
						(yyval.node) = makeNotExpr((PGNode *) n, (yylsp[(2) - (4)]));
					}
					else
					{
						/* generate scalar NOT IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "<>", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
					}
				;}
    break;

  case 786:
#line 2061 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = (yyvsp[(3) - (4)].subquerytype);
					n->subLinkId = 0;
					n->testexpr = (yyvsp[(1) - (4)].node);
					n->operName = (yyvsp[(2) - (4)].list);
					n->subselect = (yyvsp[(4) - (4)].node);
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 787:
#line 2072 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(3) - (6)].subquerytype) == PG_ANY_SUBLINK)
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ANY, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
					else
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ALL, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 788:
#line 2079 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * The SQL spec only allows DEFAULT in "contextually typed
					 * expressions", but for us, it's easier to allow it in
					 * any a_expr and then throw error during parse analysis
					 * if it's in an inappropriate context.  This way also
					 * lets us say something smarter than "syntax error".
					 */
					PGSetToDefault *n = makeNode(PGSetToDefault);
					/* parse analysis will fill in the rest */
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 789:
#line 2092 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGList *func_name = list_make1(makeString("construct_array"));
				PGFuncCall *n = makeFuncCall(func_name, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 790:
#line 2109 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 791:
#line 2111 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), 0, (yylsp[(2) - (3)])); ;}
    break;

  case 792:
#line 2113 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 793:
#line 2115 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 794:
#line 2117 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 795:
#line 2119 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 796:
#line 2121 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 797:
#line 2123 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 798:
#line 2125 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 799:
#line 2127 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 800:
#line 2129 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 801:
#line 2131 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 802:
#line 2133 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 803:
#line 2135 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 804:
#line 2137 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 805:
#line 2139 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 806:
#line 2141 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 807:
#line 2143 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 808:
#line 2145 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 809:
#line 2147 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 810:
#line 2151 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 811:
#line 2155 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 812:
#line 2159 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 813:
#line 2172 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 814:
#line 2173 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 815:
#line 2175 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGPositionalReference *n = makeNode(PGPositionalReference);
					n->position = (yyvsp[(2) - (2)].ival);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 816:
#line 2182 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeParamRef(0, (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeParamRef(0, (yylsp[(1) - (2)]));
				;}
    break;

  case 817:
#line 2194 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGParamRef *p = makeNode(PGParamRef);
					p->number = (yyvsp[(1) - (2)].ival);
					p->location = (yylsp[(1) - (2)]);
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (PGNode *) p;
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = (PGNode *) p;
				;}
    break;

  case 818:
#line 2209 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(4) - (4)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(2) - (4)].node);
						n->indirection = check_indirection((yyvsp[(4) - (4)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else
						(yyval.node) = (yyvsp[(2) - (4)].node);
				;}
    break;

  case 819:
#line 2221 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 820:
#line 2223 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list)) {
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(1) - (2)].node);
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else {
						(yyval.node) = (yyvsp[(1) - (2)].node);
					}
				;}
    break;

  case 821:
#line 2235 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (1)].node);
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 822:
#line 2246 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Because the select_with_parens nonterminal is designed
					 * to "eat" as many levels of parens as possible, the
					 * '(' a_expr ')' opt_indirection production above will
					 * fail to match a sub-SELECT with indirection decoration;
					 * the sub-SELECT won't be regarded as an a_expr as long
					 * as there are parens around it.  To support applying
					 * subscripting or field selection to a sub-SELECT result,
					 * we need this redundant-looking production.
					 */
					PGSubLink *n = makeNode(PGSubLink);
					PGAIndirection *a = makeNode(PGAIndirection);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					a->arg = (PGNode *)n;
					a->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.node) = (PGNode *)a;
				;}
    break;

  case 823:
#line 2270 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXISTS_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(2) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 824:
#line 2283 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall((yyvsp[(1) - (3)].list), NIL, (yylsp[(1) - (3)]));
				;}
    break;

  case 825:
#line 2287 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (5)].list), (yyvsp[(3) - (5)].list), (yylsp[(1) - (5)]));
					n->agg_order = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 826:
#line 2293 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), list_make1((yyvsp[(4) - (6)].node)), (yylsp[(1) - (6)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(5) - (6)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 827:
#line 2300 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (8)].list), lappend((yyvsp[(3) - (8)].list), (yyvsp[(6) - (8)].node)), (yylsp[(1) - (8)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(7) - (8)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 828:
#line 2307 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(4) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(5) - (6)].list);
					/* Ideally we'd mark the PGFuncCall node to indicate
					 * "must be an aggregate", but there's no provision
					 * for that in PGFuncCall at the moment.
					 */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 829:
#line 2317 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(4) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(5) - (6)].list);
					n->agg_distinct = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 830:
#line 2324 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * We consider AGGREGATE(*) to invoke a parameterless
					 * aggregate.  This does the right thing for COUNT(*),
					 * and there are no other aggregates in SQL that accept
					 * '*' as parameter.
					 *
					 * The PGFuncCall node is also marked agg_star = true,
					 * so that later processing can detect what the argument
					 * really was.
					 */
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (4)].list), NIL, (yylsp[(1) - (4)]));
					n->agg_star = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 831:
#line 2352 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = (PGFuncCall *) (yyvsp[(1) - (4)].node);
					/*
					 * The order clause for WITHIN GROUP and the one for
					 * plain-aggregate ORDER BY share a field, so we have to
					 * check here that at most one is present.  We also check
					 * for DISTINCT and VARIADIC here to give a better error
					 * location.  Other consistency checks are deferred to
					 * parse analysis.
					 */
					if ((yyvsp[(2) - (4)].list) != NIL)
					{
						if (n->agg_order != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use multiple ORDER BY clauses with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->agg_distinct)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use DISTINCT with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->func_variadic)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use VARIADIC with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						n->agg_order = (yyvsp[(2) - (4)].list);
						n->agg_within_group = true;
					}
					n->agg_filter = (yyvsp[(3) - (4)].node);
					n->over = (yyvsp[(4) - (4)].windef);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 832:
#line 2387 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 833:
#line 2397 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 834:
#line 2398 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 835:
#line 2406 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("pg_collation_for"),
											   list_make1((yyvsp[(4) - (5)].node)),
											   (yylsp[(1) - (5)]));
				;}
    break;

  case 836:
#line 2412 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_DATE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 837:
#line 2416 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 838:
#line 2420 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 839:
#line 2424 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 840:
#line 2428 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 841:
#line 2432 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 842:
#line 2436 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 843:
#line 2440 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 844:
#line 2444 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 845:
#line 2448 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_ROLE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 846:
#line 2452 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 847:
#line 2456 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_SESSION_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 848:
#line 2460 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 849:
#line 2464 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_CATALOG, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 850:
#line 2468 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_SCHEMA, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 851:
#line 2472 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), 0, (yylsp[(1) - (6)])); ;}
    break;

  case 852:
#line 2474 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), 1, (yylsp[(1) - (6)])); ;}
    break;

  case 853:
#line 2476 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("date_part"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 854:
#line 2480 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* overlay(A PLACING B FROM C FOR D) is converted to
					 * overlay(A, B, C, D)
					 * overlay(A PLACING B FROM C) is converted to
					 * overlay(A, B, C)
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlay"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 855:
#line 2489 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* position(A in B) is converted to position(B, A) */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("position"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 856:
#line 2494 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* substring(A from B for C) is converted to
					 * substring(A, B, C) - thomas 2000-11-28
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("substring"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 857:
#line 2501 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* TREAT(expr AS target) converts expr of a particular type to target,
					 * which is defined to be a subtype of the original expression.
					 * In SQL99, this is intended for use with structured UDTs,
					 * but let's make this a generally useful form allowing stronger
					 * coercions than are handled by implicit casting.
					 *
					 * Convert SystemTypeName() to SystemFuncName() even though
					 * at the moment they result in the same thing.
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName(((PGValue *)llast((yyvsp[(5) - (6)].typnam)->names))->val.str),
												list_make1((yyvsp[(3) - (6)].node)),
												(yylsp[(1) - (6)]));
				;}
    break;

  case 858:
#line 2516 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* various trim expressions are defined in SQL
					 * - thomas 1997-07-19
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 859:
#line 2523 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("ltrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 860:
#line 2527 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("rtrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 861:
#line 2531 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 862:
#line 2535 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NULLIF, "=", (yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(1) - (6)]));
				;}
    break;

  case 863:
#line 2539 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCoalesceExpr *c = makeNode(PGCoalesceExpr);
					c->args = (yyvsp[(3) - (4)].list);
					c->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 864:
#line 2552 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 865:
#line 2553 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 866:
#line 2557 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(4) - (5)].node); ;}
    break;

  case 867:
#line 2558 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 868:
#line 2566 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 869:
#line 2567 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 870:
#line 2571 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].windef)); ;}
    break;

  case 871:
#line 2573 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].windef)); ;}
    break;

  case 872:
#line 2578 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(3) - (3)].windef);
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.windef) = n;
				;}
    break;

  case 873:
#line 2586 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = (yyvsp[(2) - (2)].windef); ;}
    break;

  case 874:
#line 2588 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = (yyvsp[(2) - (2)].str);
					n->refname = NULL;
					n->partitionClause = NIL;
					n->orderClause = NIL;
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.windef) = n;
				;}
    break;

  case 875:
#line 2601 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = NULL; ;}
    break;

  case 876:
#line 2606 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = NULL;
					n->refname = (yyvsp[(2) - (6)].str);
					n->partitionClause = (yyvsp[(3) - (6)].list);
					n->orderClause = (yyvsp[(4) - (6)].list);
					/* copy relevant fields of opt_frame_clause */
					n->frameOptions = (yyvsp[(5) - (6)].windef)->frameOptions;
					n->startOffset = (yyvsp[(5) - (6)].windef)->startOffset;
					n->endOffset = (yyvsp[(5) - (6)].windef)->endOffset;
					n->location = (yylsp[(1) - (6)]);
					(yyval.windef) = n;
				;}
    break;

  case 877:
#line 2631 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 878:
#line 2632 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 879:
#line 2635 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 880:
#line 2636 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 881:
#line 2648 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_RANGE;
					if (n->frameOptions & (FRAMEOPTION_START_VALUE_PRECEDING |
										   FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("RANGE PRECEDING is only supported with UNBOUNDED"),
								 parser_errposition((yylsp[(1) - (2)]))));
					if (n->frameOptions & (FRAMEOPTION_START_VALUE_FOLLOWING |
										   FRAMEOPTION_END_VALUE_FOLLOWING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("RANGE FOLLOWING is only supported with UNBOUNDED"),
								 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.windef) = n;
				;}
    break;

  case 882:
#line 2666 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_ROWS;
					(yyval.windef) = n;
				;}
    break;

  case 883:
#line 2672 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 884:
#line 2682 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(1) - (1)].windef);
					/* reject invalid cases */
					if (n->frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(1) - (1)]))));
					if (n->frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot end with current row"),
								 parser_errposition((yylsp[(1) - (1)]))));
					n->frameOptions |= FRAMEOPTION_END_CURRENT_ROW;
					(yyval.windef) = n;
				;}
    break;

  case 885:
#line 2699 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n1 = (yyvsp[(2) - (4)].windef);
					PGWindowDef *n2 = (yyvsp[(4) - (4)].windef);
					/* form merged options */
					int		frameOptions = n1->frameOptions;
					/* shift converts START_ options to END_ options */
					frameOptions |= n2->frameOptions << 1;
					frameOptions |= FRAMEOPTION_BETWEEN;
					/* reject invalid cases */
					if (frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(2) - (4)]))));
					if (frameOptions & FRAMEOPTION_END_UNBOUNDED_PRECEDING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame end cannot be UNBOUNDED PRECEDING"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_CURRENT_ROW) &&
						(frameOptions & FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from current row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING) &&
						(frameOptions & (FRAMEOPTION_END_VALUE_PRECEDING |
										 FRAMEOPTION_END_CURRENT_ROW)))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					n1->frameOptions = frameOptions;
					n1->endOffset = n2->startOffset;
					(yyval.windef) = n1;
				;}
    break;

  case 886:
#line 2744 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_PRECEDING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 887:
#line 2752 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_FOLLOWING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 888:
#line 2760 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_CURRENT_ROW;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 889:
#line 2768 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_PRECEDING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 890:
#line 2776 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_FOLLOWING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 891:
#line 2796 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 892:
#line 2797 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 893:
#line 2800 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 894:
#line 2801 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(2) - (5)].list), (yyvsp[(4) - (5)].node)); ;}
    break;

  case 895:
#line 2805 "third_party/libpg_query/grammar/statements/select.y"
    {
		PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
		na->name = (yyvsp[(1) - (3)].str);
		na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
		na->argnumber = -1;
		na->location = (yylsp[(1) - (3)]);
		(yyval.node) = (PGNode *) na;
	;}
    break;

  case 896:
#line 2815 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 897:
#line 2816 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 898:
#line 2818 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 899:
#line 2819 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 900:
#line 2820 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ALL_SUBLINK; ;}
    break;

  case 901:
#line 2823 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 902:
#line 2824 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) (yyvsp[(1) - (1)].conststr); ;}
    break;

  case 903:
#line 2827 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "+"; ;}
    break;

  case 904:
#line 2828 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "-"; ;}
    break;

  case 905:
#line 2829 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "*"; ;}
    break;

  case 906:
#line 2830 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "/"; ;}
    break;

  case 907:
#line 2831 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "%"; ;}
    break;

  case 908:
#line 2832 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "^"; ;}
    break;

  case 909:
#line 2833 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<"; ;}
    break;

  case 910:
#line 2834 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">"; ;}
    break;

  case 911:
#line 2835 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "="; ;}
    break;

  case 912:
#line 2836 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<="; ;}
    break;

  case 913:
#line 2837 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">="; ;}
    break;

  case 914:
#line 2838 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<>"; ;}
    break;

  case 915:
#line 2842 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 916:
#line 2844 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 917:
#line 2849 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 918:
#line 2851 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 919:
#line 2856 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 920:
#line 2858 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 921:
#line 2860 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~")); ;}
    break;

  case 922:
#line 2862 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~")); ;}
    break;

  case 923:
#line 2864 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~~")); ;}
    break;

  case 924:
#line 2866 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~~")); ;}
    break;

  case 925:
#line 2868 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~*")); ;}
    break;

  case 926:
#line 2870 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~*")); ;}
    break;

  case 927:
#line 2884 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 928:
#line 2886 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 929:
#line 2890 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 930:
#line 2894 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 931:
#line 2901 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 932:
#line 2905 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = NULL;
				;}
    break;

  case 933:
#line 2913 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 934:
#line 2917 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 935:
#line 2923 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 936:
#line 2927 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 937:
#line 2936 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 938:
#line 2946 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 939:
#line 2947 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 940:
#line 2952 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(makeStringConst((yyvsp[(1) - (3)].str), (yylsp[(1) - (3)])), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 941:
#line 2955 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 942:
#line 2962 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 943:
#line 2963 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "year"; ;}
    break;

  case 944:
#line 2964 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "month"; ;}
    break;

  case 945:
#line 2965 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "day"; ;}
    break;

  case 946:
#line 2966 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "hour"; ;}
    break;

  case 947:
#line 2967 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "minute"; ;}
    break;

  case 948:
#line 2968 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "second"; ;}
    break;

  case 949:
#line 2969 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "millisecond"; ;}
    break;

  case 950:
#line 2970 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "microsecond"; ;}
    break;

  case 951:
#line 2971 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 952:
#line 2982 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make4((yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].node), (yyvsp[(3) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 953:
#line 2986 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 954:
#line 2993 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 955:
#line 2999 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(3) - (3)].node), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 956:
#line 3000 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 957:
#line 3017 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 958:
#line 3021 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* not legal per SQL99, but might as well allow it */
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yyvsp[(2) - (3)].node));
				;}
    break;

  case 959:
#line 3026 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 960:
#line 3030 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Since there are no cases where this syntax allows
					 * a textual FOR value, we forcibly cast the argument
					 * to int4.  The possible matches in pg_proc are
					 * substring(text,int4) and substring(text,text),
					 * and we don't want the parser to choose the latter,
					 * which it is likely to do if the second argument
					 * is unknown or doesn't have an implicit cast to int4.
					 */
					(yyval.list) = list_make3((yyvsp[(1) - (2)].node), makeIntConst(1, -1),
									makeTypeCast((yyvsp[(2) - (2)].node),
												 SystemTypeName("int4"), 0, -1));
				;}
    break;

  case 961:
#line 3045 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 962:
#line 3049 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 963:
#line 3053 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 964:
#line 3056 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 965:
#line 3059 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(3) - (3)].list), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 966:
#line 3060 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 967:
#line 3061 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 968:
#line 3065 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subselect = (yyvsp[(1) - (1)].node);
					/* other fields will be filled later */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 969:
#line 3071 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *)(yyvsp[(2) - (3)].list); ;}
    break;

  case 970:
#line 3082 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseExpr *c = makeNode(PGCaseExpr);
					c->casetype = InvalidOid; /* not analyzed yet */
					c->arg = (PGExpr *) (yyvsp[(2) - (5)].node);
					c->args = (yyvsp[(3) - (5)].list);
					c->defresult = (PGExpr *) (yyvsp[(4) - (5)].node);
					c->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 971:
#line 3095 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 972:
#line 3096 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 973:
#line 3101 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseWhen *w = makeNode(PGCaseWhen);
					w->expr = (PGExpr *) (yyvsp[(2) - (4)].node);
					w->result = (PGExpr *) (yyvsp[(4) - (4)].node);
					w->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)w;
				;}
    break;

  case 974:
#line 3111 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 975:
#line 3112 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 976:
#line 3115 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 977:
#line 3116 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 978:
#line 3120 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (1)].str), NIL, (yylsp[(1) - (1)]), yyscanner);
				;}
    break;

  case 979:
#line 3124 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].list), (yylsp[(1) - (2)]), yyscanner);
				;}
    break;

  case 980:
#line 3131 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(2) - (2)].str));
				;}
    break;

  case 981:
#line 3135 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeNode(PGAStar);
				;}
    break;

  case 982:
#line 3139 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = false;
					ai->lidx = NULL;
					ai->uidx = (yyvsp[(2) - (3)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 983:
#line 3147 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = true;
					ai->lidx = (yyvsp[(2) - (5)].node);
					ai->uidx = (yyvsp[(4) - (5)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 984:
#line 3157 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 985:
#line 3158 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 986:
#line 3162 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 987:
#line 3163 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 988:
#line 3167 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 989:
#line 3168 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 992:
#line 3182 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 993:
#line 3183 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 994:
#line 3187 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 995:
#line 3188 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 996:
#line 3192 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(3) - (3)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (3)].node);
					(yyval.target)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 997:
#line 3208 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(2) - (2)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (2)].node);
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 998:
#line 3216 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (1)].node);
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 999:
#line 3224 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnRef *n = makeNode(PGColumnRef);
					n->fields = list_make1(makeNode(PGAStar));
					n->location = (yylsp[(1) - (1)]);

					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)n;
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 1000:
#line 3245 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].range)); ;}
    break;

  case 1001:
#line 3246 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].range)); ;}
    break;

  case 1002:
#line 3258 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = makeRangeVar(NULL, (yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1003:
#line 3262 "third_party/libpg_query/grammar/statements/select.y"
    {
					check_qualified_name((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.range) = makeRangeVar(NULL, NULL, (yylsp[(1) - (2)]));
					switch (list_length((yyvsp[(2) - (2)].list)))
					{
						case 1:
							(yyval.range)->catalogname = NULL;
							(yyval.range)->schemaname = (yyvsp[(1) - (2)].str);
							(yyval.range)->relname = strVal(linitial((yyvsp[(2) - (2)].list)));
							break;
						case 2:
							(yyval.range)->catalogname = (yyvsp[(1) - (2)].str);
							(yyval.range)->schemaname = strVal(linitial((yyvsp[(2) - (2)].list)));
							(yyval.range)->relname = strVal(lsecond((yyvsp[(2) - (2)].list)));
							break;
						default:
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("improper qualified name (too many dotted names): %s",
											NameListToString(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)))),
									 parser_errposition((yylsp[(1) - (2)]))));
							break;
					}
				;}
    break;

  case 1004:
#line 3289 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1005:
#line 3291 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1006:
#line 3295 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1007:
#line 3297 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1008:
#line 3308 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1009:
#line 3311 "third_party/libpg_query/grammar/statements/select.y"
    {
						(yyval.list) = check_func_name(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)),
											 yyscanner);
					;}
    break;

  case 1010:
#line 3322 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival), (yylsp[(1) - (1)]));
				;}
    break;

  case 1011:
#line 3326 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1012:
#line 3330 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeStringConst((yyvsp[(1) - (2)].str), (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeStringConst((yyvsp[(1) - (2)].str), (yylsp[(1) - (2)]));
				;}
    break;

  case 1013:
#line 3342 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1014:
#line 3346 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* This is a bit constant per SQL99:
					 * Without Feature F511, "BIT data type",
					 * a <general literal> shall not be a
					 * <bit string literal> or a <hex string literal>.
					 */
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1015:
#line 3355 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic type 'literal' syntax */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (2)].list));
					t->location = (yylsp[(1) - (2)]);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), t);
				;}
    break;

  case 1016:
#line 3362 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic syntax with a type modifier */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (6)].list));
					PGListCell *lc;

					/*
					 * We must use func_arg_list and opt_sort_clause in the
					 * production to avoid reduce/reduce conflicts, but we
					 * don't actually wish to allow PGNamedArgExpr in this
					 * context, nor ORDER BY.
					 */
					foreach(lc, (yyvsp[(3) - (6)].list))
					{
						PGNamedArgExpr *arg = (PGNamedArgExpr *) lfirst(lc);

						if (IsA(arg, PGNamedArgExpr))
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have parameter name"),
									 parser_errposition(arg->location)));
					}
					if ((yyvsp[(4) - (6)].list) != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have ORDER BY"),
									 parser_errposition((yylsp[(4) - (6)]))));

					t->typmods = (yyvsp[(3) - (6)].list);
					t->location = (yylsp[(1) - (6)]);
					(yyval.node) = makeStringConstCast((yyvsp[(6) - (6)].str), (yylsp[(6) - (6)]), t);
				;}
    break;

  case 1017:
#line 3394 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), (yyvsp[(1) - (2)].typnam));
				;}
    break;

  case 1018:
#line 3398 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(3) - (5)].node), (yylsp[(3) - (5)]), (yyvsp[(5) - (5)].list));
				;}
    break;

  case 1019:
#line 3402 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].ival), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 1020:
#line 3406 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 1021:
#line 3410 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(true, (yylsp[(1) - (1)]));
				;}
    break;

  case 1022:
#line 3414 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(false, (yylsp[(1) - (1)]));
				;}
    break;

  case 1023:
#line 3418 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 1024:
#line 3423 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1025:
#line 3424 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1026:
#line 3440 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1027:
#line 3441 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1028:
#line 3442 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1029:
#line 3445 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1030:
#line 3446 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1031:
#line 3452 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1032:
#line 3453 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1033:
#line 3454 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1034:
#line 3457 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1035:
#line 3458 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1036:
#line 3459 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1037:
#line 3462 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1038:
#line 3463 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1039:
#line 3464 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1040:
#line 3467 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1041:
#line 3468 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 1042:
#line 3472 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
    break;

  case 1043:
#line 3474 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1044:
#line 3478 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1045:
#line 3479 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1047:
#line 3490 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1048:
#line 3491 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1049:
#line 3492 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1050:
#line 3493 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1051:
#line 3496 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1052:
#line 3497 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1053:
#line 8 "third_party/libpg_query/grammar/statements/prepare.y"
    {
					PGPrepareStmt *n = makeNode(PGPrepareStmt);
					n->name = (yyvsp[(2) - (5)].str);
					n->argtypes = (yyvsp[(3) - (5)].list);
					n->query = (yyvsp[(5) - (5)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1054:
#line 18 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1055:
#line 19 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1060:
#line 8 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not both */
					n->schemaname = (yyvsp[(3) - (4)].str);
					n->schemaElts = (yyvsp[(4) - (4)].list);
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1061:
#line 17 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not here */
					n->schemaname = (yyvsp[(6) - (7)].str);
					if ((yyvsp[(7) - (7)].list) != NIL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("CREATE SCHEMA IF NOT EXISTS cannot include schema elements"),
								 parser_errposition((yylsp[(7) - (7)]))));
					n->schemaElts = (yyvsp[(7) - (7)].list);
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1062:
#line 35 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					if ((yyloc) < 0)			/* see comments for YYLLOC_DEFAULT */
						(yyloc) = (yylsp[(2) - (2)]);
					(yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 1063:
#line 41 "third_party/libpg_query/grammar/statements/create_schema.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1068:
#line 11 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (13)].boolean);
					n->concurrent = (yyvsp[(4) - (13)].boolean);
					n->idxname = (yyvsp[(5) - (13)].str);
					n->relation = (yyvsp[(7) - (13)].range);
					n->accessMethod = (yyvsp[(8) - (13)].str);
					n->indexParams = (yyvsp[(10) - (13)].list);
					n->options = (yyvsp[(12) - (13)].list);
					n->whereClause = (yyvsp[(13) - (13)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1069:
#line 36 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (16)].boolean);
					n->concurrent = (yyvsp[(4) - (16)].boolean);
					n->idxname = (yyvsp[(8) - (16)].str);
					n->relation = (yyvsp[(10) - (16)].range);
					n->accessMethod = (yyvsp[(11) - (16)].str);
					n->indexParams = (yyvsp[(13) - (16)].list);
					n->options = (yyvsp[(15) - (16)].list);
					n->whereClause = (yyvsp[(16) - (16)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1070:
#line 62 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1071:
#line 66 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
    break;

  case 1072:
#line 67 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (char*) DEFAULT_INDEX_TYPE; ;}
    break;

  case 1073:
#line 72 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1074:
#line 73 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1075:
#line 78 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1076:
#line 79 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = NULL; ;}
    break;

  case 1077:
#line 83 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1078:
#line 84 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1079:
#line 89 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1080:
#line 90 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1081:
#line 8 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1082:
#line 17 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1083:
#line 26 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1084:
#line 35 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1085:
#line 44 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1086:
#line 53 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1087:
#line 6 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					n->force = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1088:
#line 12 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					n->force = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1089:
#line 8 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGExportStmt *n = makeNode(PGExportStmt);
					n->filename = (yyvsp[(3) - (4)].str);
					n->options = NIL;
					if ((yyvsp[(4) - (4)].list)) {
						n->options = list_concat(n->options, (yyvsp[(4) - (4)].list));
					}
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1090:
#line 21 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGImportStmt *n = makeNode(PGImportStmt);
					n->filename = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1091:
#line 10 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(2) - (2)].node);
					n->options = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1092:
#line 17 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(4) - (4)].node);
					n->options = list_make1(makeDefElem("analyze", NULL, (yylsp[(2) - (4)])));
					if ((yyvsp[(3) - (4)].boolean))
						n->options = lappend(n->options,
											 makeDefElem("verbose", NULL, (yylsp[(3) - (4)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1093:
#line 27 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(3) - (3)].node);
					n->options = list_make1(makeDefElem("verbose", NULL, (yylsp[(2) - (3)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1094:
#line 34 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(5) - (5)].node);
					n->options = (yyvsp[(3) - (5)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1095:
#line 44 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1096:
#line 45 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1097:
#line 50 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 1098:
#line 51 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 1099:
#line 52 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1105:
#line 65 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1106:
#line 66 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1107:
#line 67 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1108:
#line 72 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1109:
#line 73 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1110:
#line 79 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 1111:
#line 83 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 1112:
#line 90 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1113:
#line 91 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1114:
#line 96 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "true"; ;}
    break;

  case 1115:
#line 97 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "false"; ;}
    break;

  case 1116:
#line 98 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "on"; ;}
    break;

  case 1117:
#line 104 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1118:
#line 110 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 1119:
#line 117 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1120:
#line 118 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "analyze"; ;}
    break;

  case 1121:
#line 11 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(2) - (2)].vsetstmt);
					n->is_local = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1122:
#line 17 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->is_local = true;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1123:
#line 23 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->is_local = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1124:
#line 32 "third_party/libpg_query/grammar/statements/variable_set.y"
    {(yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt);;}
    break;

  case 1125:
#line 34 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_CURRENT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1126:
#line 42 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "timezone";
					if ((yyvsp[(3) - (3)].node) != NULL)
						n->args = list_make1((yyvsp[(3) - (3)].node));
					else
						n->kind = VAR_SET_DEFAULT;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1127:
#line 53 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "search_path";
					n->args = list_make1(makeStringConst((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)])));
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1128:
#line 65 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1129:
#line 73 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1130:
#line 81 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1131:
#line 88 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1132:
#line 98 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)])); ;}
    break;

  case 1133:
#line 100 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1134:
#line 106 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1135:
#line 110 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1136:
#line 114 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (3)].typnam);
					if ((yyvsp[(3) - (3)].list) != NIL)
					{
						PGAConst *n = (PGAConst *) linitial((yyvsp[(3) - (3)].list));
						if ((n->val.val.ival & ~(INTERVAL_MASK(HOUR) | INTERVAL_MASK(MINUTE))) != 0)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("time zone interval must be HOUR or HOUR TO MINUTE"),
									 parser_errposition((yylsp[(3) - (3)]))));
					}
					t->typmods = (yyvsp[(3) - (3)].list);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
				;}
    break;

  case 1137:
#line 129 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (5)].typnam);
					t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.node) = makeStringConstCast((yyvsp[(5) - (5)].str), (yylsp[(5) - (5)]), t);
				;}
    break;

  case 1138:
#line 135 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1139:
#line 136 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1140:
#line 137 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1141:
#line 141 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1142:
#line 142 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 1143:
#line 8 "third_party/libpg_query/grammar/statements/load.y"
    {
					PGLoadStmt *n = makeNode(PGLoadStmt);
					n->filename = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1144:
#line 16 "third_party/libpg_query/grammar/statements/load.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1145:
#line 9 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (4)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1146:
#line 23 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(5) - (5)].range);
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1147:
#line 37 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = (PGVacuumStmt *) (yyvsp[(5) - (5)].node);
					n->options |= PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1148:
#line 49 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (4)].ival);
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1149:
#line 57 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (6)].ival);
					n->relation = (yyvsp[(5) - (6)].range);
					n->va_cols = (yyvsp[(6) - (6)].list);
					if (n->va_cols != NIL)	/* implies analyze */
						n->options |= PG_VACOPT_ANALYZE;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1150:
#line 70 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_ANALYZE; ;}
    break;

  case 1151:
#line 71 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_VERBOSE; ;}
    break;

  case 1152:
#line 72 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FREEZE; ;}
    break;

  case 1153:
#line 73 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FULL; ;}
    break;

  case 1154:
#line 75 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					if (strcmp((yyvsp[(1) - (1)].str), "disable_page_skipping") == 0)
						(yyval.ival) = PG_VACOPT_DISABLE_PAGE_SKIPPING;
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("unrecognized VACUUM option \"%s\"", (yyvsp[(1) - (1)].str)),
									 parser_errposition((yylsp[(1) - (1)]))));
				;}
    break;

  case 1155:
#line 87 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1156:
#line 88 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1157:
#line 93 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1158:
#line 94 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 1159:
#line 98 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1160:
#line 99 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1161:
#line 9 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGDeleteStmt *n = makeNode(PGDeleteStmt);
					n->relation = (yyvsp[(4) - (7)].range);
					n->usingClause = (yyvsp[(5) - (7)].list);
					n->whereClause = (yyvsp[(6) - (7)].node);
					n->returningList = (yyvsp[(7) - (7)].list);
					n->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1162:
#line 22 "third_party/libpg_query/grammar/statements/delete.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 1163:
#line 26 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(2) - (2)].str);
					(yyvsp[(1) - (2)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (2)].range);
				;}
    break;

  case 1164:
#line 33 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(3) - (3)].str);
					(yyvsp[(1) - (3)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 1165:
#line 43 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1166:
#line 44 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1167:
#line 50 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1168:
#line 51 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1169:
#line 10 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (2)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1170:
#line 20 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(3) - (4)].range);
					n->va_cols = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1171:
#line 2 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (2)].vsetstmt); ;}
    break;

  case 1172:
#line 8 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (yyvsp[(1) - (1)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1173:
#line 15 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET_ALL;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1174:
#line 24 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt); ;}
    break;

  case 1175:
#line 26 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "timezone";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1176:
#line 33 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "transaction_isolation";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1177:
#line 3 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowSelectStmt *n = makeNode(PGVariableShowSelectStmt);
				n->stmt = (yyvsp[(2) - (2)].node);
				n->name = (char*) "select";
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1178:
#line 11 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1179:
#line 17 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "timezone";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1180:
#line 23 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "transaction_isolation";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1181:
#line 29 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "all";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1184:
#line 39 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1185:
#line 41 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = psprintf("%s.%s", (yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str)); ;}
    break;

  case 1186:
#line 7 "third_party/libpg_query/grammar/statements/call.y"
    {
					PGCallStmt *n = makeNode(PGCallStmt);
					n->func = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1187:
#line 10 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(4) - (9)].range);
					n->view->relpersistence = (yyvsp[(2) - (9)].ival);
					n->aliases = (yyvsp[(5) - (9)].list);
					n->query = (yyvsp[(8) - (9)].node);
					n->replace = false;
					n->options = (yyvsp[(6) - (9)].list);
					n->withCheckOption = (yyvsp[(9) - (9)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1188:
#line 23 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(6) - (11)].range);
					n->view->relpersistence = (yyvsp[(4) - (11)].ival);
					n->aliases = (yyvsp[(7) - (11)].list);
					n->query = (yyvsp[(10) - (11)].node);
					n->replace = true;
					n->options = (yyvsp[(8) - (11)].list);
					n->withCheckOption = (yyvsp[(11) - (11)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1189:
#line 36 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(5) - (12)].range);
					n->view->relpersistence = (yyvsp[(2) - (12)].ival);
					n->aliases = (yyvsp[(7) - (12)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(11) - (12)].node));
					n->replace = false;
					n->options = (yyvsp[(9) - (12)].list);
					n->withCheckOption = (yyvsp[(12) - (12)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(12) - (12)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1190:
#line 54 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(7) - (14)].range);
					n->view->relpersistence = (yyvsp[(4) - (14)].ival);
					n->aliases = (yyvsp[(9) - (14)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(13) - (14)].node));
					n->replace = true;
					n->options = (yyvsp[(11) - (14)].list);
					n->withCheckOption = (yyvsp[(14) - (14)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(14) - (14)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1191:
#line 74 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1192:
#line 75 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1193:
#line 76 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_LOCAL_CHECK_OPTION; ;}
    break;

  case 1194:
#line 77 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_NO_CHECK_OPTION; ;}
    break;

  case 1195:
#line 12 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(6) - (7)].node);
					ctas->into = (yyvsp[(4) - (7)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = false;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (7)].into)->rel->relpersistence = (yyvsp[(2) - (7)].ival);
					(yyvsp[(4) - (7)].into)->skipData = !((yyvsp[(7) - (7)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1196:
#line 25 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(9) - (10)].node);
					ctas->into = (yyvsp[(7) - (10)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = true;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (10)].into)->rel->relpersistence = (yyvsp[(2) - (10)].ival);
					(yyvsp[(7) - (10)].into)->skipData = !((yyvsp[(10) - (10)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1197:
#line 41 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1198:
#line 42 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1199:
#line 43 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1200:
#line 49 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(1) - (4)].range);
					(yyval.into)->colNames = (yyvsp[(2) - (4)].list);
					(yyval.into)->options = (yyvsp[(3) - (4)].list);
					(yyval.into)->onCommit = (yyvsp[(4) - (4)].oncommit);
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;		/* might get changed later */
				;}
    break;


/* Line 1267 of yacc.c.  */
#line 23409 "third_party/libpg_query/grammar/grammar_out.cpp"
      default: break;
    }
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, yyscanner, YY_("syntax error"));
#else
      {
	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
	  {
	    YYSIZE_T yyalloc = 2 * yysize;
	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
	    if (yymsg != yymsgbuf)
	      YYSTACK_FREE (yymsg);
	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
	    if (yymsg)
	      yymsg_alloc = yyalloc;
	    else
	      {
		yymsg = yymsgbuf;
		yymsg_alloc = sizeof yymsgbuf;
	      }
	  }

	if (0 < yysize && yysize <= yymsg_alloc)
	  {
	    (void) yysyntax_error (yymsg, yystate, yychar);
	    yyerror (&yylloc, yyscanner, yymsg);
	  }
	else
	  {
	    yyerror (&yylloc, yyscanner, YY_("syntax error"));
	    if (yysize != 0)
	      goto yyexhaustedlab;
	  }
      }
#endif
    }

  yyerror_range[0] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse look-ahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
	{
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
	}
      else
	{
	  yydestruct ("Error: discarding",
		      yytoken, &yylval, &yylloc, yyscanner);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse look-ahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[0] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule which action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (yyn != YYPACT_NINF)
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;

      yyerror_range[0] = *yylsp;
      yydestruct ("Error: popping",
		  yystos[yystate], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  *++yyvsp = yylval;

  yyerror_range[1] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the look-ahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, (yyerror_range - 1), 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#ifndef yyoverflow
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, yyscanner, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEOF && yychar != YYEMPTY)
     yydestruct ("Cleanup: discarding lookahead",
		 yytoken, &yylval, &yylloc, yyscanner);
  /* Do not reclaim the symbols of the rule which action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  /* Make sure YYID is used.  */
  return YYID (yyresult);
}


#line 70 "third_party/libpg_query/grammar/statements/create_as.y"


#line 1 "third_party/libpg_query/grammar/grammar.cpp"
/*
 * The signature of this function is required by bison.  However, we
 * ignore the passed yylloc and instead use the last token position
 * available from the scanner.
 */
static void
base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner, const char *msg)
{
	parser_yyerror(msg);
}

static PGRawStmt *
makeRawStmt(PGNode *stmt, int stmt_location)
{
	PGRawStmt    *rs = makeNode(PGRawStmt);

	rs->stmt = stmt;
	rs->stmt_location = stmt_location;
	rs->stmt_len = 0;			/* might get changed later */
	return rs;
}

/* Adjust a PGRawStmt to reflect that it doesn't run to the end of the string */
static void
updateRawStmtEnd(PGRawStmt *rs, int end_location)
{
	/*
	 * If we already set the length, don't change it.  This is for situations
	 * like "select foo ;; select bar" where the same statement will be last
	 * in the string for more than one semicolon.
	 */
	if (rs->stmt_len > 0)
		return;

	/* OK, update length of PGRawStmt */
	rs->stmt_len = end_location - rs->stmt_location;
}

static PGNode *
makeColumnRef(char *colname, PGList *indirection,
			  int location, core_yyscan_t yyscanner)
{
	/*
	 * Generate a PGColumnRef node, with an PGAIndirection node added if there
	 * is any subscripting in the specified indirection list.  However,
	 * any field selection at the start of the indirection list must be
	 * transposed into the "fields" part of the PGColumnRef node.
	 */
	PGColumnRef  *c = makeNode(PGColumnRef);
	int		nfields = 0;
	PGListCell *l;

	c->location = location;
	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAIndices))
		{
			PGAIndirection *i = makeNode(PGAIndirection);

			if (nfields == 0)
			{
				/* easy case - all indirection goes to PGAIndirection */
				c->fields = list_make1(makeString(colname));
				i->indirection = check_indirection(indirection, yyscanner);
			}
			else
			{
				/* got to split the list in two */
				i->indirection = check_indirection(list_copy_tail(indirection,
																  nfields),
												   yyscanner);
				indirection = list_truncate(indirection, nfields);
				c->fields = lcons(makeString(colname), indirection);
			}
			i->arg = (PGNode *) c;
			return (PGNode *) i;
		}
		else if (IsA(lfirst(l), PGAStar))
		{
			/* We only allow '*' at the end of a PGColumnRef */
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
		nfields++;
	}
	/* No subscripting, so all indirection gets added to field list */
	c->fields = lcons(makeString(colname), indirection);
	return (PGNode *) c;
}

static PGNode *
makeTypeCast(PGNode *arg, PGTypeName *tpname, int trycast, int location)
{
	PGTypeCast *n = makeNode(PGTypeCast);
	n->arg = arg;
	n->typeName = tpname;
	n->tryCast = trycast;
	n->location = location;
	return (PGNode *) n;
}

static PGNode *
makeStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeStringConstCast(char *str, int location, PGTypeName *tpname)
{
	PGNode *s = makeStringConst(str, location);

	return makeTypeCast(s, tpname, 0, -1);
}

static PGNode *
makeIntervalNode(char *str, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGString;
	n->sval = str;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;

}

static PGNode *
makeIntervalNode(int val, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGInteger;
	n->ival = val;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeIntervalNode(PGNode *arg, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGAExpr;
	n->eval = arg;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeSampleSize(PGValue *sample_size, bool is_percentage) {
	PGSampleSize *n = makeNode(PGSampleSize);

	n->sample_size = *sample_size;
	n->is_percentage = is_percentage;

	return (PGNode *)n;
}

static PGNode *
makeSampleOptions(PGNode *sample_size, char *method, int seed, int location) {
	PGSampleOptions *n = makeNode(PGSampleOptions);

	n->sample_size = sample_size;
	n->method = method;
	n->seed = seed;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeIntConst(int val, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGInteger;
	n->val.val.ival = val;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeFloatConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGFloat;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeBitStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGBitString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeNullAConst(int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGNull;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeAConst(PGValue *v, int location)
{
	PGNode *n;

	switch (v->type)
	{
		case T_PGFloat:
			n = makeFloatConst(v->val.str, location);
			break;

		case T_PGInteger:
			n = makeIntConst(v->val.ival, location);
			break;

		case T_PGString:
		default:
			n = makeStringConst(v->val.str, location);
			break;
	}

	return n;
}

/* makeBoolAConst()
 * Create an PGAConst string node and put it inside a boolean cast.
 */
static PGNode *
makeBoolAConst(bool state, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = (state ? (char*) "t" : (char*) "f");
	n->location = location;

	return makeTypeCast((PGNode *)n, SystemTypeName("bool"), 0, -1);
}

/* check_qualified_name --- check the result of qualified_name production
 *
 * It's easiest to let the grammar production for qualified_name allow
 * subscripts and '*', which we then must reject here.
 */
static void
check_qualified_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
}

/* check_func_name --- check the result of func_name production
 *
 * It's easiest to let the grammar production for func_name allow subscripts
 * and '*', which we then must reject here.
 */
static PGList *
check_func_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
	return names;
}

/* check_indirection --- check the result of indirection production
 *
 * We only allow '*' at the end of the list, but it's hard to enforce that
 * in the grammar, so do it here.
 */
static PGList *
check_indirection(PGList *indirection, core_yyscan_t yyscanner)
{
	PGListCell *l;

	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAStar))
		{
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
	}
	return indirection;
}

/* makeParamRef
 * Creates a new PGParamRef node
 */
static PGNode* makeParamRef(int number, int location)
{
	PGParamRef *p = makeNode(PGParamRef);
	p->number = number;
	p->location = location;
	return (PGNode *) p;
}

static PGNode *
makeParamRefCast(int number, int location, PGTypeName *tpname)
{
	PGNode *p = makeParamRef(number, location);
	return makeTypeCast(p, tpname, 0, -1);
}

/* insertSelectOptions()
 * Insert ORDER BY, etc into an already-constructed SelectStmt.
 *
 * This routine is just to avoid duplicating code in PGSelectStmt productions.
 */
static void
insertSelectOptions(PGSelectStmt *stmt,
					PGList *sortClause, PGList *lockingClause,
					PGNode *limitOffset, PGNode *limitCount,
					PGWithClause *withClause,
					core_yyscan_t yyscanner)
{
	Assert(IsA(stmt, PGSelectStmt));

	/*
	 * Tests here are to reject constructs like
	 *	(SELECT foo ORDER BY bar) ORDER BY baz
	 */
	if (sortClause)
	{
		if (stmt->sortClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple ORDER BY clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) sortClause))));
		stmt->sortClause = sortClause;
	}
	/* We can handle multiple locking clauses, though */
	stmt->lockingClause = list_concat(stmt->lockingClause, lockingClause);
	if (limitOffset)
	{
		if (stmt->limitOffset)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple OFFSET clauses not allowed"),
					 parser_errposition(exprLocation(limitOffset))));
		stmt->limitOffset = limitOffset;
	}
	if (limitCount)
	{
		if (stmt->limitCount)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple LIMIT clauses not allowed"),
					 parser_errposition(exprLocation(limitCount))));
		stmt->limitCount = limitCount;
	}
	if (withClause)
	{
		if (stmt->withClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple WITH clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) withClause))));
		stmt->withClause = withClause;
	}
}

static PGNode *
makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg)
{
	PGSelectStmt *n = makeNode(PGSelectStmt);

	n->op = op;
	n->all = all;
	n->larg = (PGSelectStmt *) larg;
	n->rarg = (PGSelectStmt *) rarg;
	return (PGNode *) n;
}

/* SystemFuncName()
 * Build a properly-qualified reference to a built-in function.
 */
PGList *
SystemFuncName(const char *name)
{
	return list_make2(makeString(DEFAULT_SCHEMA), makeString(name));
}

/* SystemTypeName()
 * Build a properly-qualified reference to a built-in type.
 *
 * typmod is defaulted, but may be changed afterwards by caller.
 * Likewise for the location.
 */
PGTypeName *
SystemTypeName(const char *name)
{
	return makeTypeNameFromNameList(list_make2(makeString(DEFAULT_SCHEMA),
											   makeString(name)));
}

/* doNegate()
 * Handle negation of a numeric constant.
 *
 * Formerly, we did this here because the optimizer couldn't cope with
 * indexquals that looked like "var = -4" --- it wants "var = const"
 * and a unary minus operator applied to a constant didn't qualify.
 * As of Postgres 7.0, that problem doesn't exist anymore because there
 * is a constant-subexpression simplifier in the optimizer.  However,
 * there's still a good reason for doing this here, which is that we can
 * postpone committing to a particular internal representation for simple
 * negative constants.	It's better to leave "-123.456" in string form
 * until we know what the desired type is.
 */
static PGNode *
doNegate(PGNode *n, int location)
{
	if (IsA(n, PGAConst))
	{
		PGAConst *con = (PGAConst *)n;

		/* report the constant's location as that of the '-' sign */
		con->location = location;

		if (con->val.type == T_PGInteger)
		{
			con->val.val.ival = -con->val.val.ival;
			return n;
		}
		if (con->val.type == T_PGFloat)
		{
			doNegateFloat(&con->val);
			return n;
		}
	}

	return (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", NULL, n, location);
}

static void
doNegateFloat(PGValue *v)
{
	char   *oldval = v->val.str;

	Assert(IsA(v, PGFloat));
	if (*oldval == '+')
		oldval++;
	if (*oldval == '-')
		v->val.str = oldval+1;	/* just strip the '-' */
	else
		v->val.str = psprintf("-%s", oldval);
}

static PGNode *
makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a AND b AND c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_AND_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_AND_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a OR b OR c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_OR_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_OR_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeNotExpr(PGNode *expr, int location)
{
	return (PGNode *) makeBoolExpr(PG_NOT_EXPR, list_make1(expr), location);
}

static PGNode *
makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod, int location)
{
	PGSQLValueFunction *svf = makeNode(PGSQLValueFunction);

	svf->op = op;
	/* svf->type will be filled during parse analysis */
	svf->typmod = typmod;
	svf->location = location;
	return (PGNode *) svf;
}

/* Separate PGConstraint nodes from COLLATE clauses in a */
static void
SplitColQualList(PGList *qualList,
				 PGList **constraintList, PGCollateClause **collClause,
				 core_yyscan_t yyscanner)
{
	PGListCell   *cell;
	PGListCell   *prev;
	PGListCell   *next;

	*collClause = NULL;
	prev = NULL;
	for (cell = list_head(qualList); cell; cell = next)
	{
		PGNode   *n = (PGNode *) lfirst(cell);

		next = lnext(cell);
		if (IsA(n, PGConstraint))
		{
			/* keep it in list */
			prev = cell;
			continue;
		}
		if (IsA(n, PGCollateClause))
		{
			PGCollateClause *c = (PGCollateClause *) n;

			if (*collClause)
				ereport(ERROR,
						(errcode(PG_ERRCODE_SYNTAX_ERROR),
						 errmsg("multiple COLLATE clauses not allowed"),
						 parser_errposition(c->location)));
			*collClause = c;
		}
		else
			elog(ERROR, "unexpected node type %d", (int) n->type);
		/* remove non-Constraint nodes from qualList */
		qualList = list_delete_cell(qualList, cell, prev);
	}
	*constraintList = qualList;
}

/*
 * Process result of ConstraintAttributeSpec, and set appropriate bool flags
 * in the output command node.  Pass NULL for any flags the particular
 * command doesn't support.
 */
static void
processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner)
{
	/* defaults */
	if (deferrable)
		*deferrable = false;
	if (initdeferred)
		*initdeferred = false;
	if (not_valid)
		*not_valid = false;

	if (cas_bits & (CAS_DEFERRABLE | CAS_INITIALLY_DEFERRED))
	{
		if (deferrable)
			*deferrable = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_INITIALLY_DEFERRED)
	{
		if (initdeferred)
			*initdeferred = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NOT_VALID)
	{
		if (not_valid)
			*not_valid = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NOT VALID",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NO_INHERIT)
	{
		if (no_inherit)
			*no_inherit = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NO INHERIT",
							constrType),
					 parser_errposition(location)));
	}
}

/*----------
 * Recursive view transformation
 *
 * Convert
 *
 *     CREATE RECURSIVE VIEW relname (aliases) AS query
 *
 * to
 *
 *     CREATE VIEW relname (aliases) AS
 *         WITH RECURSIVE relname (aliases) AS (query)
 *         SELECT aliases FROM relname
 *
 * Actually, just the WITH ... part, which is then inserted into the original
 * view as the query.
 * ----------
 */
static PGNode *
makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query)
{
	PGSelectStmt *s = makeNode(PGSelectStmt);
	PGWithClause *w = makeNode(PGWithClause);
	PGCommonTableExpr *cte = makeNode(PGCommonTableExpr);
	PGList	   *tl = NIL;
	PGListCell   *lc;

	/* create common table expression */
	cte->ctename = relname;
	cte->aliascolnames = aliases;
	cte->ctequery = query;
	cte->location = -1;

	/* create WITH clause and attach CTE */
	w->recursive = true;
	w->ctes = list_make1(cte);
	w->location = -1;

	/* create target list for the new SELECT from the alias list of the
	 * recursive view specification */
	foreach (lc, aliases)
	{
		PGResTarget *rt = makeNode(PGResTarget);

		rt->name = NULL;
		rt->indirection = NIL;
		rt->val = makeColumnRef(strVal(lfirst(lc)), NIL, -1, 0);
		rt->location = -1;

		tl = lappend(tl, rt);
	}

	/* create new SELECT combining WITH clause, target list, and fake FROM
	 * clause */
	s->withClause = w;
	s->targetList = tl;
	s->fromClause = list_make1(makeRangeVar(NULL, relname, -1));

	return (PGNode *) s;
}

/* parser_init()
 * Initialize to parse one query string
 */
void
parser_init(base_yy_extra_type *yyext)
{
	yyext->parsetree = NIL;		/* in case grammar forgets to set it */
}

#undef yyparse
#undef yylex
#undef yyerror
#undef yylval
#undef yychar
#undef yydebug
#undef yynerrs
#undef yylloc

} // namespace duckdb_libpgquery
