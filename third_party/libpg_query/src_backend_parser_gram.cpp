/* A Bison parser, made by GNU Bison 2.3.  */

/* Skeleton implementation for Bison's Yacc-like parsers in C

   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.3"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Using locations.  */
#define YYLSP_NEEDED 1

/* Substitute the variable and function names.  */
#define yyparse base_yyparse
#define yylex   base_yylex
#define yyerror base_yyerror
#define yylval  base_yylval
#define yychar  base_yychar
#define yydebug base_yydebug
#define yynerrs base_yynerrs
#define yylloc base_yylloc

/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     IDENT = 258,
     FCONST = 259,
     SCONST = 260,
     BCONST = 261,
     XCONST = 262,
     Op = 263,
     ICONST = 264,
     PARAM = 265,
     TYPECAST = 266,
     DOT_DOT = 267,
     COLON_EQUALS = 268,
     EQUALS_GREATER = 269,
     POWER_OF = 270,
     LAMBDA_ARROW = 271,
     DOUBLE_ARROW = 272,
     LESS_EQUALS = 273,
     GREATER_EQUALS = 274,
     NOT_EQUALS = 275,
     ABORT_P = 276,
     ABSOLUTE_P = 277,
     ACCESS = 278,
     ACTION = 279,
     ADD_P = 280,
     ADMIN = 281,
     AFTER = 282,
     AGGREGATE = 283,
     ALL = 284,
     ALSO = 285,
     ALTER = 286,
     ALWAYS = 287,
     ANALYSE = 288,
     ANALYZE = 289,
     AND = 290,
     ANY = 291,
     ARRAY = 292,
     AS = 293,
     ASC_P = 294,
     ASSERTION = 295,
     ASSIGNMENT = 296,
     ASYMMETRIC = 297,
     AT = 298,
     ATTACH = 299,
     ATTRIBUTE = 300,
     AUTHORIZATION = 301,
     BACKWARD = 302,
     BEFORE = 303,
     BEGIN_P = 304,
     BETWEEN = 305,
     BIGINT = 306,
     BINARY = 307,
     BIT = 308,
     BOOLEAN_P = 309,
     BOTH = 310,
     BY = 311,
     CACHE = 312,
     CALL_P = 313,
     CALLED = 314,
     CASCADE = 315,
     CASCADED = 316,
     CASE = 317,
     CAST = 318,
     CATALOG_P = 319,
     CHAIN = 320,
     CHAR_P = 321,
     CHARACTER = 322,
     CHARACTERISTICS = 323,
     CHECK_P = 324,
     CHECKPOINT = 325,
     CLASS = 326,
     CLOSE = 327,
     CLUSTER = 328,
     COALESCE = 329,
     COLLATE = 330,
     COLLATION = 331,
     COLUMN = 332,
     COLUMNS = 333,
     COMMENT = 334,
     COMMENTS = 335,
     COMMIT = 336,
     COMMITTED = 337,
     COMPRESSION = 338,
     CONCURRENTLY = 339,
     CONFIGURATION = 340,
     CONFLICT = 341,
     CONNECTION = 342,
     CONSTRAINT = 343,
     CONSTRAINTS = 344,
     CONTENT_P = 345,
     CONTINUE_P = 346,
     CONVERSION_P = 347,
     COPY = 348,
     COST = 349,
     CREATE_P = 350,
     CROSS = 351,
     CSV = 352,
     CUBE = 353,
     CURRENT_P = 354,
     CURRENT_CATALOG = 355,
     CURRENT_DATE = 356,
     CURRENT_ROLE = 357,
     CURRENT_SCHEMA = 358,
     CURRENT_TIME = 359,
     CURRENT_TIMESTAMP = 360,
     CURRENT_USER = 361,
     CURSOR = 362,
     CYCLE = 363,
     DATA_P = 364,
     DATABASE = 365,
     DAY_P = 366,
     DAYS_P = 367,
     DEALLOCATE = 368,
     DEC = 369,
     DECIMAL_P = 370,
     DECLARE = 371,
     DEFAULT = 372,
     DEFAULTS = 373,
     DEFERRABLE = 374,
     DEFERRED = 375,
     DEFINER = 376,
     DELETE_P = 377,
     DELIMITER = 378,
     DELIMITERS = 379,
     DEPENDS = 380,
     DESC_P = 381,
     DESCRIBE = 382,
     DETACH = 383,
     DICTIONARY = 384,
     DISABLE_P = 385,
     DISCARD = 386,
     DISTINCT = 387,
     DO = 388,
     DOCUMENT_P = 389,
     DOMAIN_P = 390,
     DOUBLE_P = 391,
     DROP = 392,
     EACH = 393,
     ELSE = 394,
     ENABLE_P = 395,
     ENCODING = 396,
     ENCRYPTED = 397,
     END_P = 398,
     ENUM_P = 399,
     ESCAPE = 400,
     EVENT = 401,
     EXCEPT = 402,
     EXCLUDE = 403,
     EXCLUDING = 404,
     EXCLUSIVE = 405,
     EXECUTE = 406,
     EXISTS = 407,
     EXPLAIN = 408,
     EXPORT_P = 409,
     EXPORT_STATE = 410,
     EXTENSION = 411,
     EXTERNAL = 412,
     EXTRACT = 413,
     FALSE_P = 414,
     FAMILY = 415,
     FETCH = 416,
     FILTER = 417,
     FIRST_P = 418,
     FLOAT_P = 419,
     FOLLOWING = 420,
     FOR = 421,
     FORCE = 422,
     FOREIGN = 423,
     FORWARD = 424,
     FREEZE = 425,
     FROM = 426,
     FULL = 427,
     FUNCTION = 428,
     FUNCTIONS = 429,
     GENERATED = 430,
     GLOB = 431,
     GLOBAL = 432,
     GRANT = 433,
     GRANTED = 434,
     GROUP_P = 435,
     GROUPING = 436,
     GROUPING_ID = 437,
     HANDLER = 438,
     HAVING = 439,
     HEADER_P = 440,
     HOLD = 441,
     HOUR_P = 442,
     HOURS_P = 443,
     IDENTITY_P = 444,
     IF_P = 445,
     IGNORE_P = 446,
     ILIKE = 447,
     IMMEDIATE = 448,
     IMMUTABLE = 449,
     IMPLICIT_P = 450,
     IMPORT_P = 451,
     IN_P = 452,
     INCLUDING = 453,
     INCREMENT = 454,
     INDEX = 455,
     INDEXES = 456,
     INHERIT = 457,
     INHERITS = 458,
     INITIALLY = 459,
     INLINE_P = 460,
     INNER_P = 461,
     INOUT = 462,
     INPUT_P = 463,
     INSENSITIVE = 464,
     INSERT = 465,
     INSTALL = 466,
     INSTEAD = 467,
     INT_P = 468,
     INTEGER = 469,
     INTERSECT = 470,
     INTERVAL = 471,
     INTO = 472,
     INVOKER = 473,
     IS = 474,
     ISNULL = 475,
     ISOLATION = 476,
     JOIN = 477,
     JSON = 478,
     KEY = 479,
     LABEL = 480,
     LANGUAGE = 481,
     LARGE_P = 482,
     LAST_P = 483,
     LATERAL_P = 484,
     LEADING = 485,
     LEAKPROOF = 486,
     LEFT = 487,
     LEVEL = 488,
     LIKE = 489,
     LIMIT = 490,
     LISTEN = 491,
     LOAD = 492,
     LOCAL = 493,
     LOCALTIME = 494,
     LOCALTIMESTAMP = 495,
     LOCATION = 496,
     LOCK_P = 497,
     LOCKED = 498,
     LOGGED = 499,
     MACRO = 500,
     MAP = 501,
     MAPPING = 502,
     MATCH = 503,
     MATERIALIZED = 504,
     MAXVALUE = 505,
     METHOD = 506,
     MICROSECOND_P = 507,
     MICROSECONDS_P = 508,
     MILLISECOND_P = 509,
     MILLISECONDS_P = 510,
     MINUTE_P = 511,
     MINUTES_P = 512,
     MINVALUE = 513,
     MODE = 514,
     MONTH_P = 515,
     MONTHS_P = 516,
     MOVE = 517,
     NAME_P = 518,
     NAMES = 519,
     NATIONAL = 520,
     NATURAL = 521,
     NCHAR = 522,
     NEW = 523,
     NEXT = 524,
     NO = 525,
     NONE = 526,
     NOT = 527,
     NOTHING = 528,
     NOTIFY = 529,
     NOTNULL = 530,
     NOWAIT = 531,
     NULL_P = 532,
     NULLIF = 533,
     NULLS_P = 534,
     NUMERIC = 535,
     OBJECT_P = 536,
     OF = 537,
     OFF = 538,
     OFFSET = 539,
     OIDS = 540,
     OLD = 541,
     ON = 542,
     ONLY = 543,
     OPERATOR = 544,
     OPTION = 545,
     OPTIONS = 546,
     OR = 547,
     ORDER = 548,
     ORDINALITY = 549,
     OUT_P = 550,
     OUTER_P = 551,
     OVER = 552,
     OVERLAPS = 553,
     OVERLAY = 554,
     OVERRIDING = 555,
     OWNED = 556,
     OWNER = 557,
     PARALLEL = 558,
     PARSER = 559,
     PARTIAL = 560,
     PARTITION = 561,
     PASSING = 562,
     PASSWORD = 563,
     PERCENT = 564,
     PLACING = 565,
     PLANS = 566,
     POLICY = 567,
     POSITION = 568,
     PRAGMA_P = 569,
     PRECEDING = 570,
     PRECISION = 571,
     PREPARE = 572,
     PREPARED = 573,
     PRESERVE = 574,
     PRIMARY = 575,
     PRIOR = 576,
     PRIVILEGES = 577,
     PROCEDURAL = 578,
     PROCEDURE = 579,
     PROGRAM = 580,
     PUBLICATION = 581,
     QUALIFY = 582,
     QUOTE = 583,
     RANGE = 584,
     READ_P = 585,
     REAL = 586,
     REASSIGN = 587,
     RECHECK = 588,
     RECURSIVE = 589,
     REF = 590,
     REFERENCES = 591,
     REFERENCING = 592,
     REFRESH = 593,
     REINDEX = 594,
     RELATIVE_P = 595,
     RELEASE = 596,
     RENAME = 597,
     REPEATABLE = 598,
     REPLACE = 599,
     REPLICA = 600,
     RESET = 601,
     RESPECT_P = 602,
     RESTART = 603,
     RESTRICT = 604,
     RETURNING = 605,
     RETURNS = 606,
     REVOKE = 607,
     RIGHT = 608,
     ROLE = 609,
     ROLLBACK = 610,
     ROLLUP = 611,
     ROW = 612,
     ROWS = 613,
     RULE = 614,
     SAMPLE = 615,
     SAVEPOINT = 616,
     SCHEMA = 617,
     SCHEMAS = 618,
     SCROLL = 619,
     SEARCH = 620,
     SECOND_P = 621,
     SECONDS_P = 622,
     SECURITY = 623,
     SELECT = 624,
     SEQUENCE = 625,
     SEQUENCES = 626,
     SERIALIZABLE = 627,
     SERVER = 628,
     SESSION = 629,
     SESSION_USER = 630,
     SET = 631,
     SETOF = 632,
     SETS = 633,
     SHARE = 634,
     SHOW = 635,
     SIMILAR = 636,
     SIMPLE = 637,
     SKIP = 638,
     SMALLINT = 639,
     SNAPSHOT = 640,
     SOME = 641,
     SQL_P = 642,
     STABLE = 643,
     STANDALONE_P = 644,
     START = 645,
     STATEMENT = 646,
     STATISTICS = 647,
     STDIN = 648,
     STDOUT = 649,
     STORAGE = 650,
     STORED = 651,
     STRICT_P = 652,
     STRIP_P = 653,
     STRUCT = 654,
     SUBSCRIPTION = 655,
     SUBSTRING = 656,
     SUMMARIZE = 657,
     SYMMETRIC = 658,
     SYSID = 659,
     SYSTEM_P = 660,
     TABLE = 661,
     TABLES = 662,
     TABLESAMPLE = 663,
     TABLESPACE = 664,
     TEMP = 665,
     TEMPLATE = 666,
     TEMPORARY = 667,
     TEXT_P = 668,
     THEN = 669,
     TIME = 670,
     TIMESTAMP = 671,
     TO = 672,
     TRAILING = 673,
     TRANSACTION = 674,
     TRANSFORM = 675,
     TREAT = 676,
     TRIGGER = 677,
     TRIM = 678,
     TRUE_P = 679,
     TRUNCATE = 680,
     TRUSTED = 681,
     TRY_CAST = 682,
     TYPE_P = 683,
     TYPES_P = 684,
     UNBOUNDED = 685,
     UNCOMMITTED = 686,
     UNENCRYPTED = 687,
     UNION = 688,
     UNIQUE = 689,
     UNKNOWN = 690,
     UNLISTEN = 691,
     UNLOGGED = 692,
     UNTIL = 693,
     UPDATE = 694,
     USER = 695,
     USING = 696,
     VACUUM = 697,
     VALID = 698,
     VALIDATE = 699,
     VALIDATOR = 700,
     VALUE_P = 701,
     VALUES = 702,
     VARCHAR = 703,
     VARIADIC = 704,
     VARYING = 705,
     VERBOSE = 706,
     VERSION_P = 707,
     VIEW = 708,
     VIEWS = 709,
     VIRTUAL = 710,
     VOLATILE = 711,
     WHEN = 712,
     WHERE = 713,
     WHITESPACE_P = 714,
     WINDOW = 715,
     WITH = 716,
     WITHIN = 717,
     WITHOUT = 718,
     WORK = 719,
     WRAPPER = 720,
     WRITE_P = 721,
     XML_P = 722,
     XMLATTRIBUTES = 723,
     XMLCONCAT = 724,
     XMLELEMENT = 725,
     XMLEXISTS = 726,
     XMLFOREST = 727,
     XMLNAMESPACES = 728,
     XMLPARSE = 729,
     XMLPI = 730,
     XMLROOT = 731,
     XMLSERIALIZE = 732,
     XMLTABLE = 733,
     YEAR_P = 734,
     YEARS_P = 735,
     YES_P = 736,
     ZONE = 737,
     NOT_LA = 738,
     NULLS_LA = 739,
     WITH_LA = 740,
     POSTFIXOP = 741,
     UMINUS = 742
   };
#endif
/* Tokens.  */
#define IDENT 258
#define FCONST 259
#define SCONST 260
#define BCONST 261
#define XCONST 262
#define Op 263
#define ICONST 264
#define PARAM 265
#define TYPECAST 266
#define DOT_DOT 267
#define COLON_EQUALS 268
#define EQUALS_GREATER 269
#define POWER_OF 270
#define LAMBDA_ARROW 271
#define DOUBLE_ARROW 272
#define LESS_EQUALS 273
#define GREATER_EQUALS 274
#define NOT_EQUALS 275
#define ABORT_P 276
#define ABSOLUTE_P 277
#define ACCESS 278
#define ACTION 279
#define ADD_P 280
#define ADMIN 281
#define AFTER 282
#define AGGREGATE 283
#define ALL 284
#define ALSO 285
#define ALTER 286
#define ALWAYS 287
#define ANALYSE 288
#define ANALYZE 289
#define AND 290
#define ANY 291
#define ARRAY 292
#define AS 293
#define ASC_P 294
#define ASSERTION 295
#define ASSIGNMENT 296
#define ASYMMETRIC 297
#define AT 298
#define ATTACH 299
#define ATTRIBUTE 300
#define AUTHORIZATION 301
#define BACKWARD 302
#define BEFORE 303
#define BEGIN_P 304
#define BETWEEN 305
#define BIGINT 306
#define BINARY 307
#define BIT 308
#define BOOLEAN_P 309
#define BOTH 310
#define BY 311
#define CACHE 312
#define CALL_P 313
#define CALLED 314
#define CASCADE 315
#define CASCADED 316
#define CASE 317
#define CAST 318
#define CATALOG_P 319
#define CHAIN 320
#define CHAR_P 321
#define CHARACTER 322
#define CHARACTERISTICS 323
#define CHECK_P 324
#define CHECKPOINT 325
#define CLASS 326
#define CLOSE 327
#define CLUSTER 328
#define COALESCE 329
#define COLLATE 330
#define COLLATION 331
#define COLUMN 332
#define COLUMNS 333
#define COMMENT 334
#define COMMENTS 335
#define COMMIT 336
#define COMMITTED 337
#define COMPRESSION 338
#define CONCURRENTLY 339
#define CONFIGURATION 340
#define CONFLICT 341
#define CONNECTION 342
#define CONSTRAINT 343
#define CONSTRAINTS 344
#define CONTENT_P 345
#define CONTINUE_P 346
#define CONVERSION_P 347
#define COPY 348
#define COST 349
#define CREATE_P 350
#define CROSS 351
#define CSV 352
#define CUBE 353
#define CURRENT_P 354
#define CURRENT_CATALOG 355
#define CURRENT_DATE 356
#define CURRENT_ROLE 357
#define CURRENT_SCHEMA 358
#define CURRENT_TIME 359
#define CURRENT_TIMESTAMP 360
#define CURRENT_USER 361
#define CURSOR 362
#define CYCLE 363
#define DATA_P 364
#define DATABASE 365
#define DAY_P 366
#define DAYS_P 367
#define DEALLOCATE 368
#define DEC 369
#define DECIMAL_P 370
#define DECLARE 371
#define DEFAULT 372
#define DEFAULTS 373
#define DEFERRABLE 374
#define DEFERRED 375
#define DEFINER 376
#define DELETE_P 377
#define DELIMITER 378
#define DELIMITERS 379
#define DEPENDS 380
#define DESC_P 381
#define DESCRIBE 382
#define DETACH 383
#define DICTIONARY 384
#define DISABLE_P 385
#define DISCARD 386
#define DISTINCT 387
#define DO 388
#define DOCUMENT_P 389
#define DOMAIN_P 390
#define DOUBLE_P 391
#define DROP 392
#define EACH 393
#define ELSE 394
#define ENABLE_P 395
#define ENCODING 396
#define ENCRYPTED 397
#define END_P 398
#define ENUM_P 399
#define ESCAPE 400
#define EVENT 401
#define EXCEPT 402
#define EXCLUDE 403
#define EXCLUDING 404
#define EXCLUSIVE 405
#define EXECUTE 406
#define EXISTS 407
#define EXPLAIN 408
#define EXPORT_P 409
#define EXPORT_STATE 410
#define EXTENSION 411
#define EXTERNAL 412
#define EXTRACT 413
#define FALSE_P 414
#define FAMILY 415
#define FETCH 416
#define FILTER 417
#define FIRST_P 418
#define FLOAT_P 419
#define FOLLOWING 420
#define FOR 421
#define FORCE 422
#define FOREIGN 423
#define FORWARD 424
#define FREEZE 425
#define FROM 426
#define FULL 427
#define FUNCTION 428
#define FUNCTIONS 429
#define GENERATED 430
#define GLOB 431
#define GLOBAL 432
#define GRANT 433
#define GRANTED 434
#define GROUP_P 435
#define GROUPING 436
#define GROUPING_ID 437
#define HANDLER 438
#define HAVING 439
#define HEADER_P 440
#define HOLD 441
#define HOUR_P 442
#define HOURS_P 443
#define IDENTITY_P 444
#define IF_P 445
#define IGNORE_P 446
#define ILIKE 447
#define IMMEDIATE 448
#define IMMUTABLE 449
#define IMPLICIT_P 450
#define IMPORT_P 451
#define IN_P 452
#define INCLUDING 453
#define INCREMENT 454
#define INDEX 455
#define INDEXES 456
#define INHERIT 457
#define INHERITS 458
#define INITIALLY 459
#define INLINE_P 460
#define INNER_P 461
#define INOUT 462
#define INPUT_P 463
#define INSENSITIVE 464
#define INSERT 465
#define INSTALL 466
#define INSTEAD 467
#define INT_P 468
#define INTEGER 469
#define INTERSECT 470
#define INTERVAL 471
#define INTO 472
#define INVOKER 473
#define IS 474
#define ISNULL 475
#define ISOLATION 476
#define JOIN 477
#define JSON 478
#define KEY 479
#define LABEL 480
#define LANGUAGE 481
#define LARGE_P 482
#define LAST_P 483
#define LATERAL_P 484
#define LEADING 485
#define LEAKPROOF 486
#define LEFT 487
#define LEVEL 488
#define LIKE 489
#define LIMIT 490
#define LISTEN 491
#define LOAD 492
#define LOCAL 493
#define LOCALTIME 494
#define LOCALTIMESTAMP 495
#define LOCATION 496
#define LOCK_P 497
#define LOCKED 498
#define LOGGED 499
#define MACRO 500
#define MAP 501
#define MAPPING 502
#define MATCH 503
#define MATERIALIZED 504
#define MAXVALUE 505
#define METHOD 506
#define MICROSECOND_P 507
#define MICROSECONDS_P 508
#define MILLISECOND_P 509
#define MILLISECONDS_P 510
#define MINUTE_P 511
#define MINUTES_P 512
#define MINVALUE 513
#define MODE 514
#define MONTH_P 515
#define MONTHS_P 516
#define MOVE 517
#define NAME_P 518
#define NAMES 519
#define NATIONAL 520
#define NATURAL 521
#define NCHAR 522
#define NEW 523
#define NEXT 524
#define NO 525
#define NONE 526
#define NOT 527
#define NOTHING 528
#define NOTIFY 529
#define NOTNULL 530
#define NOWAIT 531
#define NULL_P 532
#define NULLIF 533
#define NULLS_P 534
#define NUMERIC 535
#define OBJECT_P 536
#define OF 537
#define OFF 538
#define OFFSET 539
#define OIDS 540
#define OLD 541
#define ON 542
#define ONLY 543
#define OPERATOR 544
#define OPTION 545
#define OPTIONS 546
#define OR 547
#define ORDER 548
#define ORDINALITY 549
#define OUT_P 550
#define OUTER_P 551
#define OVER 552
#define OVERLAPS 553
#define OVERLAY 554
#define OVERRIDING 555
#define OWNED 556
#define OWNER 557
#define PARALLEL 558
#define PARSER 559
#define PARTIAL 560
#define PARTITION 561
#define PASSING 562
#define PASSWORD 563
#define PERCENT 564
#define PLACING 565
#define PLANS 566
#define POLICY 567
#define POSITION 568
#define PRAGMA_P 569
#define PRECEDING 570
#define PRECISION 571
#define PREPARE 572
#define PREPARED 573
#define PRESERVE 574
#define PRIMARY 575
#define PRIOR 576
#define PRIVILEGES 577
#define PROCEDURAL 578
#define PROCEDURE 579
#define PROGRAM 580
#define PUBLICATION 581
#define QUALIFY 582
#define QUOTE 583
#define RANGE 584
#define READ_P 585
#define REAL 586
#define REASSIGN 587
#define RECHECK 588
#define RECURSIVE 589
#define REF 590
#define REFERENCES 591
#define REFERENCING 592
#define REFRESH 593
#define REINDEX 594
#define RELATIVE_P 595
#define RELEASE 596
#define RENAME 597
#define REPEATABLE 598
#define REPLACE 599
#define REPLICA 600
#define RESET 601
#define RESPECT_P 602
#define RESTART 603
#define RESTRICT 604
#define RETURNING 605
#define RETURNS 606
#define REVOKE 607
#define RIGHT 608
#define ROLE 609
#define ROLLBACK 610
#define ROLLUP 611
#define ROW 612
#define ROWS 613
#define RULE 614
#define SAMPLE 615
#define SAVEPOINT 616
#define SCHEMA 617
#define SCHEMAS 618
#define SCROLL 619
#define SEARCH 620
#define SECOND_P 621
#define SECONDS_P 622
#define SECURITY 623
#define SELECT 624
#define SEQUENCE 625
#define SEQUENCES 626
#define SERIALIZABLE 627
#define SERVER 628
#define SESSION 629
#define SESSION_USER 630
#define SET 631
#define SETOF 632
#define SETS 633
#define SHARE 634
#define SHOW 635
#define SIMILAR 636
#define SIMPLE 637
#define SKIP 638
#define SMALLINT 639
#define SNAPSHOT 640
#define SOME 641
#define SQL_P 642
#define STABLE 643
#define STANDALONE_P 644
#define START 645
#define STATEMENT 646
#define STATISTICS 647
#define STDIN 648
#define STDOUT 649
#define STORAGE 650
#define STORED 651
#define STRICT_P 652
#define STRIP_P 653
#define STRUCT 654
#define SUBSCRIPTION 655
#define SUBSTRING 656
#define SUMMARIZE 657
#define SYMMETRIC 658
#define SYSID 659
#define SYSTEM_P 660
#define TABLE 661
#define TABLES 662
#define TABLESAMPLE 663
#define TABLESPACE 664
#define TEMP 665
#define TEMPLATE 666
#define TEMPORARY 667
#define TEXT_P 668
#define THEN 669
#define TIME 670
#define TIMESTAMP 671
#define TO 672
#define TRAILING 673
#define TRANSACTION 674
#define TRANSFORM 675
#define TREAT 676
#define TRIGGER 677
#define TRIM 678
#define TRUE_P 679
#define TRUNCATE 680
#define TRUSTED 681
#define TRY_CAST 682
#define TYPE_P 683
#define TYPES_P 684
#define UNBOUNDED 685
#define UNCOMMITTED 686
#define UNENCRYPTED 687
#define UNION 688
#define UNIQUE 689
#define UNKNOWN 690
#define UNLISTEN 691
#define UNLOGGED 692
#define UNTIL 693
#define UPDATE 694
#define USER 695
#define USING 696
#define VACUUM 697
#define VALID 698
#define VALIDATE 699
#define VALIDATOR 700
#define VALUE_P 701
#define VALUES 702
#define VARCHAR 703
#define VARIADIC 704
#define VARYING 705
#define VERBOSE 706
#define VERSION_P 707
#define VIEW 708
#define VIEWS 709
#define VIRTUAL 710
#define VOLATILE 711
#define WHEN 712
#define WHERE 713
#define WHITESPACE_P 714
#define WINDOW 715
#define WITH 716
#define WITHIN 717
#define WITHOUT 718
#define WORK 719
#define WRAPPER 720
#define WRITE_P 721
#define XML_P 722
#define XMLATTRIBUTES 723
#define XMLCONCAT 724
#define XMLELEMENT 725
#define XMLEXISTS 726
#define XMLFOREST 727
#define XMLNAMESPACES 728
#define XMLPARSE 729
#define XMLPI 730
#define XMLROOT 731
#define XMLSERIALIZE 732
#define XMLTABLE 733
#define YEAR_P 734
#define YEARS_P 735
#define YES_P 736
#define ZONE 737
#define NOT_LA 738
#define NULLS_LA 739
#define WITH_LA 740
#define POSTFIXOP 741
#define UMINUS 742




/* Copy the first part of user declarations.  */
#line 1 "third_party/libpg_query/grammar/grammar.y.tmp"

#line 1 "third_party/libpg_query/grammar/grammar.hpp"
/*#define YYDEBUG 1*/
/*-------------------------------------------------------------------------
 *
 * gram.y
 *	  POSTGRESQL BISON rules/actions
 *
 * Portions Copyright (c) 1996-2017, PostgreSQL Global Development PGGroup
 * Portions Copyright (c) 1994, Regents of the University of California
 *
 *
 * IDENTIFICATION
 *	  src/backend/parser/gram.y
 *
 * HISTORY
 *	  AUTHOR			DATE			MAJOR EVENT
 *	  Andrew Yu			Sept, 1994		POSTQUEL to SQL conversion
 *	  Andrew Yu			Oct, 1994		lispy code conversion
 *
 * NOTES
 *	  CAPITALS are used to represent terminal symbols.
 *	  non-capitals are used to represent non-terminals.
 *
 *	  In general, nothing in this file should initiate database accesses
 *	  nor depend on changeable state (such as SET variables).  If you do
 *	  database accesses, your code will fail when we have aborted the
 *	  current transaction and are just parsing commands to find the next
 *	  ROLLBACK or COMMIT.  If you make use of SET variables, then you
 *	  will do the wrong thing in multi-query strings like this:
 *			SET constraint_exclusion TO off; SELECT * FROM foo;
 *	  because the entire string is parsed by gram.y before the SET gets
 *	  executed.  Anything that depends on the database or changeable state
 *	  should be handled during parse analysis so that it happens at the
 *	  right time not the wrong time.
 *
 * WARNINGS
 *	  If you use a list, make sure the datum is a node so that the printing
 *	  routines work.
 *
 *	  Sometimes we assign constants to makeStrings. Make sure we don't free
 *	  those.
 *
 *-------------------------------------------------------------------------
 */
#include "pg_functions.hpp"
#include <string.h>

#include <ctype.h>
#include <limits.h>

#include "nodes/makefuncs.hpp"
#include "nodes/nodeFuncs.hpp"
#include "parser/gramparse.hpp"
#include "parser/parser.hpp"
#include "utils/datetime.hpp"

namespace duckdb_libpgquery {
#define DEFAULT_SCHEMA "main"

/*
 * Location tracking support --- simpler than bison's default, since we only
 * want to track the start position not the end position of each nonterminal.
 */
#define YYLLOC_DEFAULT(Current, Rhs, N) \
	do { \
		if ((N) > 0) \
			(Current) = (Rhs)[1]; \
		else \
			(Current) = (-1); \
	} while (0)

/*
 * The above macro assigns -1 (unknown) as the parse location of any
 * nonterminal that was reduced from an empty rule, or whose leftmost
 * component was reduced from an empty rule.  This is problematic
 * for nonterminals defined like
 *		OptFooList: / * EMPTY * / { ... } | OptFooList Foo { ... } ;
 * because we'll set -1 as the location during the first reduction and then
 * copy it during each subsequent reduction, leaving us with -1 for the
 * location even when the list is not empty.  To fix that, do this in the
 * action for the nonempty rule(s):
 *		if (@$ < 0) @$ = @2;
 * (Although we have many nonterminals that follow this pattern, we only
 * bother with fixing @$ like this when the nonterminal's parse location
 * is actually referenced in some rule.)
 *
 * A cleaner answer would be to make YYLLOC_DEFAULT scan all the Rhs
 * locations until it's found one that's not -1.  Then we'd get a correct
 * location for any nonterminal that isn't entirely empty.  But this way
 * would add overhead to every rule reduction, and so far there's not been
 * a compelling reason to pay that overhead.
 */

/*
 * Bison doesn't allocate anything that needs to live across parser calls,
 * so we can easily have it use palloc instead of malloc.  This prevents
 * memory leaks if we error out during parsing.  Note this only works with
 * bison >= 2.0.  However, in bison 1.875 the default is to use alloca()
 * if possible, so there's not really much problem anyhow, at least if
 * you're building with gcc.
 */
#define YYMALLOC palloc
#define YYFREE   pfree
#define YYINITDEPTH 1000

/* yields an integer bitmask of these flags: */
#define CAS_NOT_DEFERRABLE			0x01
#define CAS_DEFERRABLE				0x02
#define CAS_INITIALLY_IMMEDIATE		0x04
#define CAS_INITIALLY_DEFERRED		0x08
#define CAS_NOT_VALID				0x10
#define CAS_NO_INHERIT				0x20


#define parser_yyerror(msg)  scanner_yyerror(msg, yyscanner)
#define parser_errposition(pos)  scanner_errposition(pos, yyscanner)

static void base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner,
						 const char *msg);
static PGRawStmt *makeRawStmt(PGNode *stmt, int stmt_location);
static void updateRawStmtEnd(PGRawStmt *rs, int end_location);
static PGNode *makeColumnRef(char *colname, PGList *indirection,
						   int location, core_yyscan_t yyscanner);
static PGNode *makeTypeCast(PGNode *arg, PGTypeName *tpname, int trycast, int location);
static PGNode *makeStringConst(char *str, int location);
static PGNode *makeStringConstCast(char *str, int location, PGTypeName *tpname);
static PGNode *makeIntervalNode(char *str, int location, PGList *typmods);
static PGNode *makeIntervalNode(int val, int location, PGList *typmods);
static PGNode *makeIntervalNode(PGNode *arg, int location, PGList *typmods);
static PGNode *makeSampleSize(PGValue *sample_size, bool is_percentage);
static PGNode *makeSampleOptions(PGNode *sample_size, char *method, int seed, int location);
static PGNode *makeIntConst(int val, int location);
static PGNode *makeFloatConst(char *str, int location);
static PGNode *makeBitStringConst(char *str, int location);
static PGNode *makeNullAConst(int location);
static PGNode *makeAConst(PGValue *v, int location);
static PGNode *makeBoolAConst(bool state, int location);
static PGNode *makeParamRef(int number, int location);
static void check_qualified_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_func_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_indirection(PGList *indirection, core_yyscan_t yyscanner);
static void insertSelectOptions(PGSelectStmt *stmt,
								PGList *sortClause, PGList *lockingClause,
								PGNode *limitOffset, PGNode *limitCount,
								PGWithClause *withClause,
								core_yyscan_t yyscanner);
static PGNode *makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg);
static PGNode *doNegate(PGNode *n, int location);
static void doNegateFloat(PGValue *v);
static PGNode *makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeNotExpr(PGNode *expr, int location);
static PGNode *makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod,
								  int location);
static void SplitColQualList(PGList *qualList,
							 PGList **constraintList, PGCollateClause **collClause,
							 core_yyscan_t yyscanner);
static void processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner);
static PGNode *makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query);
static PGNode *makeLimitPercent(PGNode *limit_percent);



/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* Enabling the token table.  */
#ifndef YYTOKEN_TABLE
# define YYTOKEN_TABLE 0
#endif

#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE
#line 14 "third_party/libpg_query/grammar/grammar.y"
{
	core_YYSTYPE		core_yystype;
	/* these fields must match core_YYSTYPE: */
	int					ival;
	char				*str;
	const char			*keyword;
	const char          *conststr;

	char				chr;
	bool				boolean;
	PGJoinType			jtype;
	PGDropBehavior		dbehavior;
	PGOnCommitAction		oncommit;
	PGOnCreateConflict		oncreateconflict;
	PGList				*list;
	PGNode				*node;
	PGValue				*value;
	PGObjectType			objtype;
	PGTypeName			*typnam;
	PGObjectWithArgs		*objwithargs;
	PGDefElem				*defelt;
	PGSortBy				*sortby;
	PGWindowDef			*windef;
	PGJoinExpr			*jexpr;
	PGIndexElem			*ielem;
	PGAlias				*alias;
	PGRangeVar			*range;
	PGIntoClause			*into;
	PGWithClause			*with;
	PGInferClause			*infer;
	PGOnConflictClause	*onconflict;
	PGAIndices			*aind;
	PGResTarget			*target;
	PGInsertStmt			*istmt;
	PGVariableSetStmt		*vsetstmt;
	PGOverridingKind       override;
	PGSortByDir            sortorder;
	PGSortByNulls          nullorder;
	PGConstrType           constr;
	PGLockClauseStrength lockstrength;
	PGLockWaitPolicy lockwaitpolicy;
	PGSubLinkType subquerytype;
	PGViewCheckOption viewcheckoption;
}
/* Line 193 of yacc.c.  */
#line 1289 "third_party/libpg_query/grammar/grammar_out.cpp"
	YYSTYPE;
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
# define YYSTYPE_IS_TRIVIAL 1
#endif

#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif


/* Copy the second part of user declarations.  */


/* Line 216 of yacc.c.  */
#line 1314 "third_party/libpg_query/grammar/grammar_out.cpp"

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#elif (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
typedef signed char yytype_int8;
#else
typedef short int yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(msgid) dgettext ("bison-runtime", msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(msgid) msgid
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(e) ((void) (e))
#else
# define YYUSE(e) /* empty */
#endif

/* Identity function, used to suppress warnings about constant conditions.  */
#ifndef lint
# define YYID(n) (n)
#else
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static int
YYID (int i)
#else
static int
YYID (i)
    int i;
#endif
{
  return i;
}
#endif

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#     ifndef _STDLIB_H
#      define _STDLIB_H 1
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined _STDLIB_H \
       && ! ((defined YYMALLOC || defined malloc) \
	     && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef _STDLIB_H
#    define _STDLIB_H 1
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
	 || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
	     && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss;
  YYSTYPE yyvs;
    YYLTYPE yyls;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(To, From, Count) \
      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
#  else
#   define YYCOPY(To, From, Count)		\
      do					\
	{					\
	  YYSIZE_T yyi;				\
	  for (yyi = 0; yyi < (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (YYID (0))
#  endif
# endif

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack)					\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack, Stack, yysize);				\
	Stack = &yyptr->Stack;						\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))

#endif

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  599
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   55819

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  509
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  397
/* YYNRULES -- Number of rules.  */
#define YYNRULES  1851
/* YYNRULES -- Number of states.  */
#define YYNSTATES  3045

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   742

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,   506,     2,   494,     2,     2,
     499,   500,   492,   490,   503,   491,   501,   493,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   508,   502,
     486,   488,   487,   507,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,   497,     2,   498,   495,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   504,     2,   505,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   489,   496
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const yytype_uint16 yyprhs[] =
{
       0,     0,     3,     5,     9,    11,    13,    15,    17,    19,
      21,    23,    25,    27,    29,    31,    33,    35,    37,    39,
      41,    43,    45,    47,    49,    51,    53,    55,    57,    59,
      61,    63,    65,    67,    69,    71,    73,    75,    77,    79,
      80,    85,    92,    97,   104,   109,   116,   121,   128,   130,
     133,   137,   140,   142,   146,   149,   153,   155,   159,   162,
     168,   172,   179,   184,   191,   198,   205,   211,   217,   224,
     234,   239,   245,   253,   260,   265,   274,   279,   282,   287,
     291,   298,   303,   306,   309,   312,   315,   317,   320,   321,
     323,   326,   329,   332,   334,   338,   343,   346,   348,   349,
     352,   356,   359,   363,   370,   377,   386,   393,   402,   409,
     418,   425,   434,   443,   454,   463,   474,   476,   477,   485,
     487,   492,   497,   505,   508,   510,   514,   519,   523,   524,
     526,   527,   530,   534,   540,   549,   555,   556,   562,   568,
     576,   579,   580,   582,   584,   586,   590,   593,   594,   596,
     597,   599,   603,   605,   609,   611,   614,   616,   620,   623,
     632,   638,   640,   641,   643,   647,   650,   655,   661,   667,
     676,   678,   679,   683,   693,   706,   710,   711,   716,   723,
     725,   728,   730,   732,   733,   735,   738,   741,   743,   746,
     749,   751,   754,   758,   761,   764,   767,   770,   774,   778,
     782,   784,   788,   790,   791,   793,   796,   799,   802,   805,
     808,   811,   814,   817,   819,   821,   822,   832,   845,   857,
     858,   861,   863,   865,   867,   869,   871,   873,   877,   878,
     880,   883,   885,   887,   890,   893,   897,   899,   901,   904,
     907,   909,   912,   916,   922,   926,   929,   935,   937,   939,
     941,   942,   948,   956,   962,   965,   969,   971,   973,   976,
     979,   980,   984,   989,   994,   995,   999,  1002,  1003,  1007,
    1009,  1011,  1013,  1015,  1017,  1019,  1021,  1023,  1025,  1027,
    1031,  1035,  1037,  1040,  1043,  1046,  1049,  1052,  1055,  1056,
    1060,  1064,  1068,  1069,  1071,  1074,  1076,  1079,  1082,  1085,
    1088,  1092,  1097,  1099,  1103,  1105,  1107,  1109,  1111,  1115,
    1117,  1120,  1121,  1123,  1126,  1127,  1129,  1133,  1134,  1137,
    1138,  1142,  1146,  1148,  1154,  1158,  1160,  1164,  1166,  1169,
    1171,  1176,  1182,  1188,  1195,  1199,  1207,  1212,  1224,  1226,
    1230,  1233,  1236,  1239,  1240,  1244,  1246,  1248,  1251,  1254,
    1257,  1260,  1262,  1263,  1265,  1268,  1275,  1280,  1287,  1292,
    1299,  1308,  1313,  1320,  1322,  1324,  1326,  1328,  1331,  1333,
    1336,  1338,  1341,  1343,  1345,  1347,  1351,  1355,  1359,  1363,
    1366,  1369,  1371,  1375,  1377,  1379,  1381,  1383,  1387,  1389,
    1391,  1392,  1394,  1396,  1398,  1400,  1404,  1413,  1421,  1423,
    1425,  1428,  1432,  1441,  1453,  1463,  1465,  1467,  1471,  1472,
    1474,  1478,  1480,  1481,  1483,  1484,  1486,  1487,  1489,  1493,
    1495,  1497,  1499,  1503,  1504,  1507,  1510,  1511,  1514,  1515,
    1517,  1518,  1520,  1522,  1524,  1528,  1532,  1534,  1536,  1540,
    1544,  1548,  1552,  1557,  1561,  1564,  1566,  1568,  1570,  1572,
    1574,  1578,  1580,  1582,  1586,  1590,  1592,  1595,  1600,  1605,
    1608,  1612,  1618,  1624,  1626,  1628,  1640,  1652,  1654,  1657,
    1662,  1667,  1672,  1675,  1678,  1682,  1684,  1688,  1695,  1698,
    1699,  1703,  1707,  1712,  1717,  1722,  1727,  1731,  1734,  1736,
    1738,  1739,  1741,  1743,  1744,  1746,  1752,  1754,  1755,  1758,
    1761,  1762,  1764,  1765,  1769,  1775,  1781,  1783,  1787,  1792,
    1796,  1798,  1800,  1801,  1804,  1807,  1808,  1811,  1814,  1816,
    1818,  1820,  1821,  1824,  1829,  1835,  1840,  1843,  1847,  1850,
    1853,  1856,  1859,  1861,  1864,  1868,  1869,  1871,  1872,  1878,
    1880,  1885,  1892,  1895,  1897,  1898,  1903,  1904,  1906,  1908,
    1911,  1914,  1917,  1919,  1921,  1924,  1927,  1929,  1931,  1933,
    1935,  1937,  1939,  1943,  1947,  1951,  1952,  1954,  1958,  1960,
    1963,  1965,  1967,  1969,  1971,  1973,  1976,  1981,  1986,  1992,
    1994,  1996,  1999,  2000,  2003,  2004,  2006,  2010,  2012,  2013,
    2015,  2018,  2022,  2025,  2030,  2033,  2037,  2040,  2041,  2043,
    2046,  2047,  2052,  2058,  2060,  2063,  2066,  2067,  2069,  2073,
    2075,  2078,  2082,  2086,  2090,  2094,  2098,  2100,  2105,  2109,
    2114,  2120,  2125,  2131,  2136,  2142,  2145,  2150,  2152,  2154,
    2155,  2157,  2162,  2168,  2173,  2174,  2177,  2180,  2183,  2185,
    2187,  2188,  2193,  2196,  2198,  2201,  2204,  2209,  2212,  2219,
    2222,  2224,  2228,  2233,  2234,  2237,  2238,  2241,  2242,  2244,
    2248,  2252,  2255,  2256,  2259,  2264,  2266,  2268,  2270,  2271,
    2274,  2278,  2284,  2291,  2294,  2298,  2304,  2310,  2314,  2319,
    2320,  2322,  2324,  2326,  2328,  2330,  2333,  2338,  2340,  2342,
    2344,  2346,  2349,  2353,  2354,  2356,  2358,  2360,  2362,  2364,
    2367,  2370,  2373,  2376,  2379,  2381,  2385,  2386,  2388,  2390,
    2392,  2394,  2400,  2403,  2405,  2407,  2409,  2411,  2416,  2418,
    2421,  2424,  2426,  2430,  2434,  2437,  2439,  2440,  2446,  2449,
    2455,  2458,  2460,  2464,  2468,  2469,  2471,  2473,  2475,  2477,
    2479,  2481,  2483,  2485,  2487,  2489,  2491,  2493,  2495,  2497,
    2499,  2501,  2503,  2505,  2507,  2509,  2511,  2513,  2515,  2517,
    2521,  2525,  2529,  2533,  2537,  2541,  2545,  2546,  2548,  2552,
    2556,  2562,  2565,  2568,  2572,  2576,  2580,  2584,  2588,  2592,
    2596,  2600,  2604,  2608,  2612,  2616,  2620,  2624,  2627,  2630,
    2634,  2638,  2641,  2644,  2648,  2652,  2658,  2663,  2670,  2674,
    2680,  2685,  2692,  2697,  2704,  2710,  2718,  2722,  2725,  2730,
    2734,  2737,  2739,  2743,  2747,  2751,  2755,  2759,  2763,  2768,
    2772,  2777,  2781,  2786,  2792,  2799,  2806,  2814,  2821,  2829,
    2836,  2844,  2848,  2853,  2858,  2865,  2867,  2872,  2874,  2878,
    2881,  2884,  2888,  2892,  2896,  2900,  2904,  2908,  2912,  2916,
    2920,  2924,  2928,  2932,  2936,  2940,  2943,  2946,  2952,  2959,
    2966,  2974,  2976,  2978,  2981,  2984,  2987,  2992,  2994,  2997,
    2999,  3002,  3005,  3010,  3014,  3021,  3029,  3039,  3047,  3055,
    3060,  3066,  3068,  3070,  3072,  3078,  3080,  3082,  3087,  3089,
    3094,  3096,  3101,  3103,  3108,  3110,  3112,  3114,  3116,  3118,
    3120,  3127,  3134,  3139,  3144,  3149,  3154,  3161,  3167,  3173,
    3179,  3184,  3191,  3196,  3202,  3203,  3209,  3210,  3212,  3213,
    3216,  3217,  3219,  3223,  3227,  3230,  3233,  3234,  3241,  3243,
    3244,  3248,  3249,  3252,  3255,  3256,  3258,  3263,  3266,  3269,
    3272,  3275,  3278,  3283,  3287,  3289,  3295,  3299,  3301,  3305,
    3307,  3310,  3312,  3314,  3316,  3318,  3320,  3322,  3324,  3326,
    3328,  3330,  3332,  3334,  3336,  3338,  3340,  3342,  3344,  3346,
    3348,  3353,  3355,  3360,  3362,  3367,  3369,  3372,  3374,  3377,
    3379,  3382,  3384,  3388,  3390,  3394,  3396,  3399,  3401,  3402,
    3404,  3408,  3410,  3414,  3418,  3420,  3424,  3428,  3429,  3431,
    3433,  3435,  3437,  3439,  3441,  3443,  3445,  3447,  3449,  3454,
    3458,  3461,  3465,  3466,  3470,  3474,  3477,  3480,  3482,  3483,
    3486,  3489,  3493,  3496,  3498,  3500,  3504,  3510,  3512,  3515,
    3520,  3523,  3524,  3526,  3527,  3529,  3532,  3535,  3539,  3545,
    3547,  3548,  3550,  3553,  3554,  3557,  3559,  3560,  3562,  3563,
    3565,  3569,  3571,  3574,  3578,  3581,  3583,  3587,  3593,  3598,
    3601,  3603,  3604,  3608,  3610,  3614,  3616,  3619,  3624,  3627,
    3628,  3630,  3634,  3636,  3639,  3641,  3645,  3647,  3650,  3652,
    3654,  3656,  3659,  3661,  3663,  3666,  3668,  3670,  3673,  3681,
    3684,  3690,  3694,  3698,  3700,  3702,  3704,  3706,  3708,  3710,
    3712,  3714,  3716,  3718,  3720,  3722,  3724,  3726,  3728,  3730,
    3732,  3734,  3736,  3738,  3741,  3744,  3748,  3752,  3753,  3755,
    3757,  3759,  3761,  3763,  3765,  3767,  3773,  3777,  3778,  3780,
    3782,  3784,  3786,  3791,  3799,  3802,  3803,  3805,  3807,  3809,
    3811,  3825,  3842,  3844,  3847,  3848,  3850,  3851,  3853,  3854,
    3857,  3858,  3860,  3861,  3868,  3877,  3884,  3893,  3900,  3909,
    3912,  3914,  3919,  3923,  3926,  3931,  3935,  3941,  3943,  3944,
    3946,  3948,  3949,  3951,  3953,  3955,  3957,  3959,  3961,  3963,
    3965,  3967,  3969,  3971,  3975,  3977,  3979,  3981,  3983,  3985,
    3987,  3990,  3992,  3994,  3997,  4001,  4005,  4009,  4011,  4015,
    4019,  4022,  4026,  4030,  4034,  4038,  4040,  4042,  4044,  4046,
    4050,  4056,  4058,  4060,  4062,  4064,  4068,  4071,  4074,  4078,
    4080,  4082,  4087,  4093,  4099,  4104,  4111,  4113,  4115,  4117,
    4119,  4121,  4123,  4124,  4126,  4130,  4132,  4133,  4141,  4143,
    4146,  4150,  4153,  4154,  4157,  4158,  4161,  4166,  4169,  4171,
    4173,  4175,  4178,  4182,  4185,  4188,  4191,  4194,  4198,  4203,
    4206,  4208,  4210,  4212,  4214,  4218,  4221,  4231,  4243,  4256,
    4271,  4275,  4280,  4285,  4286,  4294,  4305,  4315,  4318,  4322,
    4323,  4328,  4330,  4332,  4334,  4336,  4338,  4340,  4342,  4344,
    4346,  4348,  4350,  4352,  4354,  4356,  4358,  4360,  4362,  4364,
    4366,  4368,  4370,  4372,  4374,  4376,  4378,  4380,  4382,  4384,
    4386,  4388,  4390,  4392,  4394,  4396,  4398,  4400,  4402,  4404,
    4406,  4408,  4410,  4412,  4414,  4416,  4418,  4420,  4422,  4424,
    4426,  4428,  4430,  4432,  4434,  4436,  4438,  4440,  4442,  4444,
    4446,  4448,  4450,  4452,  4454,  4456,  4458,  4460,  4462,  4464,
    4466,  4468,  4470,  4472,  4474,  4476,  4478,  4480,  4482,  4484,
    4486,  4488,  4490,  4492,  4494,  4496,  4498,  4500,  4502,  4504,
    4506,  4508,  4510,  4512,  4514,  4516,  4518,  4520,  4522,  4524,
    4526,  4528,  4530,  4532,  4534,  4536,  4538,  4540,  4542,  4544,
    4546,  4548,  4550,  4552,  4554,  4556,  4558,  4560,  4562,  4564,
    4566,  4568,  4570,  4572,  4574,  4576,  4578,  4580,  4582,  4584,
    4586,  4588,  4590,  4592,  4594,  4596,  4598,  4600,  4602,  4604,
    4606,  4608,  4610,  4612,  4614,  4616,  4618,  4620,  4622,  4624,
    4626,  4628,  4630,  4632,  4634,  4636,  4638,  4640,  4642,  4644,
    4646,  4648,  4650,  4652,  4654,  4656,  4658,  4660,  4662,  4664,
    4666,  4668,  4670,  4672,  4674,  4676,  4678,  4680,  4682,  4684,
    4686,  4688,  4690,  4692,  4694,  4696,  4698,  4700,  4702,  4704,
    4706,  4708,  4710,  4712,  4714,  4716,  4718,  4720,  4722,  4724,
    4726,  4728,  4730,  4732,  4734,  4736,  4738,  4740,  4742,  4744,
    4746,  4748,  4750,  4752,  4754,  4756,  4758,  4760,  4762,  4764,
    4766,  4768,  4770,  4772,  4774,  4776,  4778,  4780,  4782,  4784,
    4786,  4788,  4790,  4792,  4794,  4796,  4798,  4800,  4802,  4804,
    4806,  4808,  4810,  4812,  4814,  4816,  4818,  4820,  4822,  4824,
    4826,  4828,  4830,  4832,  4834,  4836,  4838,  4840,  4842,  4844,
    4846,  4848,  4850,  4852,  4854,  4856,  4858,  4860,  4862,  4864,
    4866,  4868,  4870,  4872,  4874,  4876,  4878,  4880,  4882,  4884,
    4886,  4888,  4890,  4892,  4894,  4896,  4898,  4900,  4902,  4904,
    4906,  4908,  4910,  4912,  4914,  4916,  4918,  4920,  4922,  4924,
    4926,  4928,  4930,  4932,  4934,  4936,  4938,  4940,  4942,  4944,
    4946,  4948,  4950,  4952,  4954,  4956,  4958,  4960,  4962,  4964,
    4966,  4968,  4970,  4972,  4974,  4976,  4978,  4980,  4982,  4984,
    4986,  4988,  4990,  4992,  4994,  4996,  4998,  5000,  5002,  5004,
    5006,  5008,  5010,  5012,  5014,  5016,  5018,  5020,  5022,  5024,
    5026,  5028,  5030,  5032,  5034,  5036,  5038,  5040,  5042,  5044,
    5046,  5048,  5050,  5052,  5054,  5056,  5058,  5060,  5062,  5064,
    5066,  5068,  5070,  5072,  5074,  5076,  5078,  5080,  5082,  5084,
    5086,  5088,  5090,  5092,  5094,  5096,  5098,  5100,  5102,  5104,
    5106,  5108,  5110,  5112,  5114,  5116,  5118,  5120,  5122,  5124,
    5126,  5128,  5130,  5132,  5134,  5136,  5138,  5140,  5142,  5144,
    5146,  5148,  5150,  5152,  5154,  5156,  5158,  5160,  5162,  5164,
    5166,  5168,  5170,  5172,  5174,  5176,  5178,  5180,  5182,  5184,
    5186,  5188,  5190,  5192,  5194,  5196,  5198,  5200,  5202,  5204,
    5206,  5208,  5210,  5212,  5214,  5216,  5218,  5220,  5222,  5224,
    5226,  5228,  5230,  5232,  5234,  5236,  5238,  5240,  5242,  5244,
    5246,  5248,  5250,  5252,  5254,  5256,  5258,  5260,  5262,  5264,
    5266,  5268,  5270,  5272,  5274,  5276,  5278,  5280,  5282,  5284,
    5286,  5288,  5290,  5292,  5294,  5296,  5298,  5300,  5302,  5304,
    5306,  5308,  5310,  5312,  5314,  5316,  5318,  5320,  5322,  5324,
    5326,  5328,  5330,  5332,  5334,  5336,  5338,  5340,  5342,  5344,
    5346,  5348,  5350,  5352,  5354,  5356,  5358,  5360,  5362,  5364,
    5366,  5368,  5370,  5372,  5374,  5376,  5378,  5380,  5382,  5384,
    5386,  5388,  5390,  5392,  5394,  5396,  5398,  5400,  5402,  5404,
    5406,  5408,  5410,  5412,  5414,  5416,  5418,  5420,  5422,  5424,
    5426,  5428,  5430,  5432,  5434,  5436,  5438,  5440,  5442,  5444,
    5446,  5448,  5450,  5452,  5454,  5456,  5458,  5460,  5462,  5464,
    5466,  5468
};

/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
static const yytype_int16 yyrhs[] =
{
     510,     0,    -1,   511,    -1,   511,   502,   512,    -1,   512,
      -1,   854,    -1,   554,    -1,   513,    -1,   886,    -1,   893,
      -1,   855,    -1,   622,    -1,   896,    -1,   618,    -1,   844,
      -1,   550,    -1,   563,    -1,   546,    -1,   524,    -1,   882,
      -1,   611,    -1,   552,    -1,   858,    -1,   856,    -1,   857,
      -1,   847,    -1,   527,    -1,   875,    -1,   549,    -1,   841,
      -1,   525,    -1,   639,    -1,   561,    -1,   621,    -1,   877,
      -1,   887,    -1,   869,    -1,   890,    -1,   894,    -1,    -1,
      31,   406,   708,   521,    -1,    31,   406,   190,   152,   708,
     521,    -1,    31,   200,   821,   521,    -1,    31,   200,   190,
     152,   821,   521,    -1,    31,   370,   821,   521,    -1,    31,
     370,   190,   152,   821,   521,    -1,    31,   453,   821,   521,
      -1,    31,   453,   190,   152,   821,   521,    -1,   516,    -1,
     514,   516,    -1,   376,   117,   751,    -1,   137,   117,    -1,
     348,    -1,   348,   556,   557,    -1,   376,   558,    -1,   376,
     175,   610,    -1,   520,    -1,   517,   503,   520,    -1,    25,
     590,    -1,    25,   190,   272,   152,   590,    -1,    25,    77,
     590,    -1,    25,    77,   190,   272,   152,   590,    -1,    31,
     526,   830,   515,    -1,    31,   526,   830,   137,   272,   277,
      -1,    31,   526,   830,   376,   272,   277,    -1,    31,   526,
     830,   376,   392,   560,    -1,    31,   526,   830,   376,   578,
      -1,    31,   526,   830,   346,   578,    -1,    31,   526,   830,
     376,   395,   830,    -1,    31,   526,   830,    25,   175,   610,
      38,   189,   566,    -1,    31,   526,   830,   514,    -1,    31,
     526,   830,   137,   189,    -1,    31,   526,   830,   137,   189,
     190,   152,    -1,   137,   526,   190,   152,   830,   615,    -1,
     137,   526,   830,   615,    -1,    31,   526,   830,   523,   428,
     721,   717,   519,    -1,    31,   526,   830,   522,    -1,    25,
     580,    -1,    31,    88,   824,   564,    -1,   444,    88,   824,
      -1,   137,    88,   190,   152,   824,   615,    -1,   137,    88,
     824,   615,    -1,   376,   244,    -1,   376,   437,    -1,   376,
     578,    -1,   346,   578,    -1,   522,    -1,   441,   751,    -1,
      -1,   574,    -1,   376,   574,    -1,    25,   574,    -1,   137,
     588,    -1,   518,    -1,   521,   503,   518,    -1,   291,   499,
     517,   500,    -1,   376,   109,    -1,   376,    -1,    -1,   113,
     824,    -1,   113,   317,   824,    -1,   113,    29,    -1,   113,
     317,    29,    -1,    31,   362,   824,   342,   417,   824,    -1,
      31,   406,   708,   342,   417,   824,    -1,    31,   406,   190,
     152,   708,   342,   417,   824,    -1,    31,   370,   821,   342,
     417,   824,    -1,    31,   370,   190,   152,   821,   342,   417,
     824,    -1,    31,   453,   821,   342,   417,   824,    -1,    31,
     453,   190,   152,   821,   342,   417,   824,    -1,    31,   200,
     821,   342,   417,   824,    -1,    31,   200,   190,   152,   821,
     342,   417,   824,    -1,    31,   406,   708,   342,   526,   824,
     417,   824,    -1,    31,   406,   190,   152,   708,   342,   526,
     824,   417,   824,    -1,    31,   406,   708,   342,    88,   824,
     417,   824,    -1,    31,   406,   190,   152,   708,   342,    88,
     824,   417,   824,    -1,    77,    -1,    -1,   531,   210,   217,
     529,   528,   534,   536,    -1,   639,    -1,   300,   537,   446,
     639,    -1,   499,   541,   500,   639,    -1,   499,   541,   500,
     300,   537,   446,   639,    -1,   117,   447,    -1,   821,    -1,
     821,    38,   830,    -1,   499,   544,   500,   714,    -1,   287,
      88,   824,    -1,    -1,   644,    -1,    -1,   830,   808,    -1,
     545,   488,   751,    -1,   499,   538,   500,   488,   751,    -1,
     287,    86,   530,   133,   439,   376,   543,   714,    -1,   287,
      86,   530,   133,   273,    -1,    -1,   830,   539,   540,   658,
     659,    -1,   756,   539,   540,   658,   659,    -1,   499,   751,
     500,   539,   540,   658,   659,    -1,   350,   811,    -1,    -1,
     440,    -1,   405,    -1,   545,    -1,   538,   503,   545,    -1,
      75,   835,    -1,    -1,   835,    -1,    -1,   532,    -1,   541,
     503,   532,    -1,   533,    -1,   542,   503,   533,    -1,   542,
      -1,   542,   503,    -1,   535,    -1,   544,   503,   535,    -1,
     830,   808,    -1,    95,   428,   835,    38,   144,   499,   547,
     500,    -1,    95,   428,   835,    38,   724,    -1,   548,    -1,
      -1,   829,    -1,   548,   503,   829,    -1,   314,   830,    -1,
     314,   830,   488,   874,    -1,   314,   830,   499,   786,   500,
      -1,    95,   609,   370,   821,   551,    -1,    95,   609,   370,
     190,   272,   152,   821,   551,    -1,   555,    -1,    -1,   151,
     824,   553,    -1,    95,   609,   406,   898,    38,   151,   824,
     553,   897,    -1,    95,   609,   406,   190,   272,   152,   898,
      38,   151,   824,   553,   897,    -1,   499,   784,   500,    -1,
      -1,    31,   370,   821,   555,    -1,    31,   370,   190,   152,
     821,   555,    -1,   558,    -1,   555,   558,    -1,   461,    -1,
     485,    -1,    -1,     4,    -1,   490,     4,    -1,   491,     4,
      -1,   560,    -1,    38,   723,    -1,    57,   557,    -1,   108,
      -1,   270,   108,    -1,   199,   559,   557,    -1,   250,   557,
      -1,   258,   557,    -1,   270,   250,    -1,   270,   258,    -1,
     301,    56,   835,    -1,   370,   263,   835,    -1,   390,   556,
     557,    -1,   348,    -1,   348,   556,   557,    -1,    56,    -1,
      -1,   828,    -1,   490,   828,    -1,   491,   828,    -1,    21,
     562,    -1,    49,   562,    -1,   390,   562,    -1,    81,   562,
      -1,   143,   562,    -1,   355,   562,    -1,   464,    -1,   419,
      -1,    -1,    95,   609,   406,   821,   499,   596,   500,   585,
     577,    -1,    95,   609,   406,   190,   272,   152,   821,   499,
     596,   500,   585,   577,    -1,    95,   292,   344,   609,   406,
     821,   499,   596,   500,   585,   577,    -1,    -1,   564,   589,
      -1,   604,    -1,   905,    -1,   780,    -1,   557,    -1,   829,
      -1,   271,    -1,   499,   555,   500,    -1,    -1,   829,    -1,
     270,    24,    -1,   349,    -1,    60,    -1,   376,   277,    -1,
     376,   117,    -1,    88,   824,   570,    -1,   570,    -1,   584,
      -1,    75,   835,    -1,   272,   277,    -1,   277,    -1,   434,
     595,    -1,   320,   224,   595,    -1,    69,   499,   751,   500,
     579,    -1,   441,    83,   824,    -1,   117,   752,    -1,   336,
     821,   598,   607,   576,    -1,   455,    -1,   396,    -1,   571,
      -1,    -1,   175,   610,    38,   189,   566,    -1,   175,   610,
      38,   499,   751,   500,   572,    -1,    38,   499,   751,   500,
     572,    -1,   588,   567,    -1,   287,   439,   568,    -1,   575,
      -1,   600,    -1,   575,   600,    -1,   600,   575,    -1,    -1,
     287,    81,   137,    -1,   287,    81,   122,   358,    -1,   287,
      81,   319,   358,    -1,    -1,   499,   582,   500,    -1,   270,
     202,    -1,    -1,    88,   824,   605,    -1,   605,    -1,    80,
      -1,    89,    -1,   118,    -1,   189,    -1,   201,    -1,   392,
      -1,   395,    -1,    29,    -1,   601,    -1,   582,   503,   601,
      -1,   441,   200,   592,    -1,   119,    -1,   272,   119,    -1,
     204,   120,    -1,   204,   193,    -1,   461,   578,    -1,   461,
     285,    -1,   463,   285,    -1,    -1,   499,   591,   500,    -1,
     587,   198,   581,    -1,   587,   149,   581,    -1,    -1,   839,
      -1,   272,   119,    -1,   119,    -1,   204,   193,    -1,   204,
     120,    -1,   272,   443,    -1,   270,   202,    -1,   830,   721,
     599,    -1,   830,   720,   573,   599,    -1,   594,    -1,   591,
     503,   594,    -1,   830,    -1,   590,    -1,   608,    -1,   580,
      -1,   839,   488,   565,    -1,   839,    -1,   461,   586,    -1,
      -1,   606,    -1,   606,   503,    -1,    -1,   830,    -1,   499,
     602,   500,    -1,    -1,   599,   569,    -1,    -1,   287,   122,
     568,    -1,   839,   488,   565,    -1,   839,    -1,   839,   501,
     839,   488,   565,    -1,   839,   501,   839,    -1,   597,    -1,
     602,   503,   597,    -1,   602,    -1,   602,   503,    -1,   721,
      -1,   832,   836,   494,   428,    -1,   377,   832,   836,   494,
     428,    -1,    69,   499,   751,   500,   564,    -1,   434,   499,
     603,   500,   595,   564,    -1,   434,   583,   564,    -1,   320,
     224,   499,   603,   500,   595,   564,    -1,   320,   224,   583,
     564,    -1,   168,   224,   499,   603,   500,   336,   821,   598,
     607,   576,   564,    -1,   593,    -1,   606,   503,   593,    -1,
     248,   172,    -1,   248,   305,    -1,   248,   382,    -1,    -1,
     234,   821,   587,    -1,   412,    -1,   410,    -1,   238,   412,
      -1,   238,   410,    -1,   177,   412,    -1,   177,   410,    -1,
     437,    -1,    -1,    32,    -1,    56,   117,    -1,   137,   612,
     190,   152,   614,   615,    -1,   137,   612,   614,   615,    -1,
     137,   613,   190,   152,   822,   615,    -1,   137,   613,   822,
     615,    -1,   137,   616,   824,   287,   835,   615,    -1,   137,
     616,   190,   152,   824,   287,   835,   615,    -1,   137,   428,
     617,   615,    -1,   137,   428,   190,   152,   617,   615,    -1,
     406,    -1,   370,    -1,   173,    -1,   245,    -1,   245,   406,
      -1,   453,    -1,   249,   453,    -1,   200,    -1,   168,   406,
      -1,    76,    -1,    92,    -1,   392,    -1,   413,   365,   304,
      -1,   413,   365,   129,    -1,   413,   365,   411,    -1,   413,
     365,    85,    -1,    23,   251,    -1,   146,   422,    -1,   156,
      -1,   168,   109,   465,    -1,   326,    -1,   362,    -1,   373,
      -1,   835,    -1,   614,   503,   835,    -1,    60,    -1,   349,
      -1,    -1,   312,    -1,   359,    -1,   422,    -1,   721,    -1,
     617,   503,   721,    -1,    95,   609,   619,   821,   620,    38,
     406,   639,    -1,    95,   609,   619,   821,   620,    38,   751,
      -1,   173,    -1,   245,    -1,   499,   500,    -1,   499,   786,
     500,    -1,   531,   439,   883,   376,   543,   697,   884,   536,
      -1,    93,   634,   821,   598,   632,   623,   628,   637,   624,
     556,   629,    -1,    93,   499,   843,   500,   417,   628,   637,
     556,   629,    -1,   171,    -1,   417,    -1,   626,   124,   829,
      -1,    -1,   636,    -1,   625,   503,   636,    -1,   441,    -1,
      -1,    38,    -1,    -1,   325,    -1,    -1,   633,    -1,   499,
     638,   500,    -1,   866,    -1,   557,    -1,   492,    -1,   499,
     625,   500,    -1,    -1,   839,   630,    -1,   461,   285,    -1,
      -1,   633,   635,    -1,    -1,    52,    -1,    -1,    52,    -1,
     285,    -1,   170,    -1,   123,   627,   829,    -1,   277,   627,
     829,    -1,    97,    -1,   185,    -1,   328,   627,   829,    -1,
     145,   627,   829,    -1,   167,   328,   602,    -1,   167,   328,
     492,    -1,   167,   272,   277,   602,    -1,   167,   277,   602,
      -1,   141,   829,    -1,   866,    -1,   829,    -1,   393,    -1,
     394,    -1,   631,    -1,   638,   503,   631,    -1,   641,    -1,
     640,    -1,   499,   641,   500,    -1,   499,   640,   500,    -1,
     643,    -1,   642,   655,    -1,   642,   654,   688,   661,    -1,
     642,   654,   660,   689,    -1,   644,   642,    -1,   644,   642,
     655,    -1,   644,   642,   654,   688,   661,    -1,   644,   642,
     654,   660,   689,    -1,   643,    -1,   640,    -1,   369,   652,
     810,   647,   697,   714,   677,   686,   761,   687,   665,    -1,
     369,   651,   812,   647,   697,   714,   677,   686,   761,   687,
     665,    -1,   696,    -1,   406,   708,    -1,   642,   433,   650,
     642,    -1,   642,   215,   650,   642,    -1,   642,   147,   650,
     642,    -1,   461,   645,    -1,   485,   645,    -1,   461,   334,
     645,    -1,   646,    -1,   645,   503,   646,    -1,   824,   837,
      38,   499,   843,   500,    -1,   217,   648,    -1,    -1,   412,
     649,   821,    -1,   410,   649,   821,    -1,   238,   412,   649,
     821,    -1,   238,   410,   649,   821,    -1,   177,   412,   649,
     821,    -1,   177,   410,   649,   821,    -1,   437,   649,   821,
      -1,   406,   821,    -1,   821,    -1,   406,    -1,    -1,    29,
      -1,   132,    -1,    -1,   132,    -1,   132,   287,   499,   784,
     500,    -1,    29,    -1,    -1,   191,   279,    -1,   347,   279,
      -1,    -1,   655,    -1,    -1,   293,    56,   656,    -1,   293,
      56,    29,   658,   659,    -1,   293,    56,   492,   658,   659,
      -1,   657,    -1,   656,   503,   657,    -1,   751,   441,   780,
     659,    -1,   751,   658,   659,    -1,    39,    -1,   126,    -1,
      -1,   484,   163,    -1,   484,   228,    -1,    -1,   662,   663,
      -1,   663,   662,    -1,   662,    -1,   663,    -1,   660,    -1,
      -1,   235,   671,    -1,   235,   671,   503,   672,    -1,   161,
     676,   673,   675,   288,    -1,   161,   676,   675,   288,    -1,
     284,   672,    -1,   284,   673,   675,    -1,     4,   494,    -1,
       9,   494,    -1,     4,   309,    -1,     9,   309,    -1,     9,
      -1,     9,   358,    -1,   441,   360,   667,    -1,    -1,   830,
      -1,    -1,   666,   499,   664,   500,   670,    -1,   664,    -1,
     664,   499,   830,   500,    -1,   664,   499,   830,   503,     9,
     500,    -1,   408,   667,    -1,   668,    -1,    -1,   343,   499,
       9,   500,    -1,    -1,   751,    -1,    29,    -1,   751,   494,
      -1,     4,   309,    -1,     9,   309,    -1,   751,    -1,   753,
      -1,   490,   674,    -1,   491,   674,    -1,   828,    -1,     4,
      -1,   357,    -1,   358,    -1,   163,    -1,   269,    -1,   180,
      56,   679,    -1,   180,    56,    29,    -1,   180,    56,   492,
      -1,    -1,   680,    -1,   678,   503,   680,    -1,   678,    -1,
     678,   503,    -1,   751,    -1,   681,    -1,   683,    -1,   682,
      -1,   684,    -1,   499,   500,    -1,   356,   499,   784,   500,
      -1,    98,   499,   784,   500,    -1,   181,   378,   499,   679,
     500,    -1,   181,    -1,   182,    -1,   184,   751,    -1,    -1,
     327,   751,    -1,    -1,   690,    -1,   166,   330,   288,    -1,
     688,    -1,    -1,   691,    -1,   690,   691,    -1,   692,   693,
     694,    -1,   166,   439,    -1,   166,   270,   224,   439,    -1,
     166,   379,    -1,   166,   224,   379,    -1,   282,   820,    -1,
      -1,   276,    -1,   383,   243,    -1,    -1,   447,   499,   784,
     500,    -1,   695,   503,   499,   784,   500,    -1,   695,    -1,
     695,   503,    -1,   171,   699,    -1,    -1,   700,    -1,   698,
     503,   700,    -1,   698,    -1,   698,   503,    -1,   708,   703,
     669,    -1,   709,   704,   669,    -1,   229,   709,   704,    -1,
     640,   703,   669,    -1,   229,   640,   703,    -1,   701,    -1,
     499,   701,   500,   702,    -1,   499,   701,   500,    -1,   700,
      96,   222,   700,    -1,   700,   705,   222,   700,   707,    -1,
     700,   222,   700,   707,    -1,   700,   266,   705,   222,   700,
      -1,   700,   266,   222,   700,    -1,    38,   830,   499,   823,
     500,    -1,    38,   831,    -1,   830,   499,   823,   500,    -1,
     830,    -1,   702,    -1,    -1,   702,    -1,    38,   499,   715,
     500,    -1,    38,   830,   499,   715,   500,    -1,   830,   499,
     715,   500,    -1,    -1,   172,   706,    -1,   232,   706,    -1,
     353,   706,    -1,   206,    -1,   296,    -1,    -1,   441,   499,
     823,   500,    -1,   287,   751,    -1,   821,    -1,   821,   492,
      -1,   288,   821,    -1,   288,   499,   821,   500,    -1,   756,
     713,    -1,   358,   171,   499,   711,   500,   713,    -1,   756,
     712,    -1,   710,    -1,   711,   503,   710,    -1,    38,   499,
     715,   500,    -1,    -1,   485,   294,    -1,    -1,   458,   751,
      -1,    -1,   716,    -1,   715,   503,   716,    -1,   830,   721,
     717,    -1,    75,   835,    -1,    -1,   830,   721,    -1,   718,
     503,   830,   721,    -1,   357,    -1,   399,    -1,   721,    -1,
      -1,   723,   722,    -1,   377,   723,   722,    -1,   723,    37,
     497,   828,   498,    -1,   377,   723,    37,   497,   828,   498,
      -1,   723,    37,    -1,   377,   723,    37,    -1,   719,   499,
     718,   500,   722,    -1,   246,   499,   788,   500,   722,    -1,
     722,   497,   498,    -1,   722,   497,   828,   498,    -1,    -1,
     725,    -1,   727,    -1,   729,    -1,   733,    -1,   739,    -1,
     740,   750,    -1,   740,   499,   828,   500,    -1,   727,    -1,
     730,    -1,   734,    -1,   739,    -1,   834,   726,    -1,   499,
     784,   500,    -1,    -1,   213,    -1,   214,    -1,   384,    -1,
      51,    -1,   331,    -1,   164,   728,    -1,   136,   316,    -1,
     115,   726,    -1,   114,   726,    -1,   280,   726,    -1,    54,
      -1,   499,   828,   500,    -1,    -1,   731,    -1,   732,    -1,
     731,    -1,   732,    -1,    53,   738,   499,   784,   500,    -1,
      53,   738,    -1,   735,    -1,   736,    -1,   735,    -1,   736,
      -1,   737,   499,   828,   500,    -1,   737,    -1,    67,   738,
      -1,    66,   738,    -1,   448,    -1,   265,    67,   738,    -1,
     265,    66,   738,    -1,   267,   738,    -1,   450,    -1,    -1,
     416,   499,   828,   500,   741,    -1,   416,   741,    -1,   415,
     499,   828,   500,   741,    -1,   415,   741,    -1,   216,    -1,
     485,   415,   482,    -1,   463,   415,   482,    -1,    -1,   479,
      -1,   480,    -1,   260,    -1,   261,    -1,   111,    -1,   112,
      -1,   187,    -1,   188,    -1,   256,    -1,   257,    -1,   366,
      -1,   367,    -1,   254,    -1,   255,    -1,   252,    -1,   253,
      -1,   742,    -1,   743,    -1,   744,    -1,   745,    -1,   746,
      -1,   747,    -1,   748,    -1,   749,    -1,   742,   417,   743,
      -1,   744,   417,   745,    -1,   744,   417,   746,    -1,   744,
     417,   747,    -1,   745,   417,   746,    -1,   745,   417,   747,
      -1,   746,   417,   747,    -1,    -1,   753,    -1,   751,    11,
     721,    -1,   751,    75,   835,    -1,   751,    43,   415,   482,
     751,    -1,   490,   751,    -1,   491,   751,    -1,   751,   490,
     751,    -1,   751,   491,   751,    -1,   751,   492,   751,    -1,
     751,   493,   751,    -1,   751,   494,   751,    -1,   751,   495,
     751,    -1,   751,    15,   751,    -1,   751,   486,   751,    -1,
     751,   487,   751,    -1,   751,   488,   751,    -1,   751,    18,
     751,    -1,   751,    19,   751,    -1,   751,    20,   751,    -1,
     751,   779,   751,    -1,   779,   751,    -1,   751,   779,    -1,
     751,    35,   751,    -1,   751,   292,   751,    -1,   272,   751,
      -1,   483,   751,    -1,   751,   176,   751,    -1,   751,   234,
     751,    -1,   751,   234,   751,   145,   751,    -1,   751,   483,
     234,   751,    -1,   751,   483,   234,   751,   145,   751,    -1,
     751,   192,   751,    -1,   751,   192,   751,   145,   751,    -1,
     751,   483,   192,   751,    -1,   751,   483,   192,   751,   145,
     751,    -1,   751,   381,   417,   751,    -1,   751,   381,   417,
     751,   145,   751,    -1,   751,   483,   381,   417,   751,    -1,
     751,   483,   381,   417,   751,   145,   751,    -1,   751,   219,
     277,    -1,   751,   220,    -1,   751,   219,   272,   277,    -1,
     751,   272,   277,    -1,   751,   275,    -1,   772,    -1,   504,
     775,   505,    -1,   497,   785,   498,    -1,   751,    16,   751,
      -1,   751,    17,   751,    -1,   772,   298,   772,    -1,   751,
     219,   424,    -1,   751,   219,   272,   424,    -1,   751,   219,
     159,    -1,   751,   219,   272,   159,    -1,   751,   219,   435,
      -1,   751,   219,   272,   435,    -1,   751,   219,   132,   171,
     751,    -1,   751,   219,   272,   132,   171,   751,    -1,   751,
     219,   282,   499,   788,   500,    -1,   751,   219,   272,   282,
     499,   788,   500,    -1,   751,    50,   809,   752,    35,   751,
      -1,   751,   483,    50,   809,   752,    35,   751,    -1,   751,
      50,   403,   752,    35,   751,    -1,   751,   483,    50,   403,
     752,    35,   751,    -1,   751,   197,   798,    -1,   751,   483,
     197,   798,    -1,   751,   781,   776,   640,    -1,   751,   781,
     776,   499,   751,   500,    -1,   117,    -1,    37,   497,   785,
     498,    -1,   753,    -1,   752,    11,   721,    -1,   490,   752,
      -1,   491,   752,    -1,   752,   490,   752,    -1,   752,   491,
     752,    -1,   752,   492,   752,    -1,   752,   493,   752,    -1,
     752,   494,   752,    -1,   752,   495,   752,    -1,   752,    15,
     752,    -1,   752,   486,   752,    -1,   752,   487,   752,    -1,
     752,   488,   752,    -1,   752,    18,   752,    -1,   752,    19,
     752,    -1,   752,    20,   752,    -1,   752,   779,   752,    -1,
     779,   752,    -1,   752,   779,    -1,   752,   219,   132,   171,
     752,    -1,   752,   219,   272,   132,   171,   752,    -1,   752,
     219,   282,   499,   788,   500,    -1,   752,   219,   272,   282,
     499,   788,   500,    -1,   804,    -1,   827,    -1,   506,     9,
      -1,   507,   808,    -1,    10,   808,    -1,   499,   751,   500,
     808,    -1,   799,    -1,   755,   808,    -1,   640,    -1,   640,
     807,    -1,   152,   640,    -1,   685,   499,   784,   500,    -1,
     826,   499,   500,    -1,   826,   499,   786,   654,   653,   500,
      -1,   826,   499,   449,   787,   654,   653,   500,    -1,   826,
     499,   786,   503,   449,   787,   654,   653,   500,    -1,   826,
     499,    29,   786,   654,   653,   500,    -1,   826,   499,   132,
     786,   654,   653,   500,    -1,   826,   499,   492,   500,    -1,
     754,   758,   759,   760,   764,    -1,   757,    -1,   754,    -1,
     757,    -1,    76,   166,   499,   751,   500,    -1,   101,    -1,
     104,    -1,   104,   499,   828,   500,    -1,   105,    -1,   105,
     499,   828,   500,    -1,   239,    -1,   239,   499,   828,   500,
      -1,   240,    -1,   240,   499,   828,   500,    -1,   102,    -1,
     106,    -1,   375,    -1,   440,    -1,   100,    -1,   103,    -1,
      63,   499,   751,    38,   721,   500,    -1,   427,   499,   751,
      38,   721,   500,    -1,   158,   499,   789,   500,    -1,   299,
     499,   791,   500,    -1,   313,   499,   793,   500,    -1,   401,
     499,   794,   500,    -1,   421,   499,   751,    38,   721,   500,
      -1,   423,   499,    55,   797,   500,    -1,   423,   499,   230,
     797,   500,    -1,   423,   499,   418,   797,   500,    -1,   423,
     499,   797,   500,    -1,   278,   499,   751,   503,   751,   500,
      -1,    74,   499,   784,   500,    -1,   462,   180,   499,   655,
     500,    -1,    -1,   162,   499,   458,   751,   500,    -1,    -1,
     155,    -1,    -1,   460,   762,    -1,    -1,   763,    -1,   762,
     503,   763,    -1,   830,    38,   765,    -1,   297,   765,    -1,
     297,   830,    -1,    -1,   499,   766,   767,   654,   768,   500,
      -1,   830,    -1,    -1,   306,    56,   783,    -1,    -1,   329,
     769,    -1,   358,   769,    -1,    -1,   770,    -1,    50,   770,
      35,   770,    -1,   430,   315,    -1,   430,   165,    -1,    99,
     357,    -1,   751,   315,    -1,   751,   165,    -1,   357,   499,
     784,   500,    -1,   357,   499,   500,    -1,   771,    -1,   499,
     783,   503,   751,   500,    -1,   831,   508,   751,    -1,   773,
      -1,   774,   503,   773,    -1,   774,    -1,   774,   503,    -1,
      36,    -1,   386,    -1,    29,    -1,     8,    -1,   778,    -1,
     490,    -1,   491,    -1,   492,    -1,   493,    -1,   494,    -1,
     495,    -1,    15,    -1,   486,    -1,   487,    -1,   488,    -1,
      18,    -1,    19,    -1,    20,    -1,     8,    -1,   289,   499,
     782,   500,    -1,   777,    -1,   289,   499,   782,   500,    -1,
     777,    -1,   289,   499,   782,   500,    -1,   234,    -1,   483,
     234,    -1,   176,    -1,   483,   176,    -1,   192,    -1,   483,
     192,    -1,   777,    -1,   830,   501,   782,    -1,   751,    -1,
     783,   503,   751,    -1,   783,    -1,   783,   503,    -1,   784,
      -1,    -1,   787,    -1,   786,   503,   787,    -1,   751,    -1,
     838,    13,   751,    -1,   838,    14,   751,    -1,   721,    -1,
     788,   503,   721,    -1,   790,   171,   751,    -1,    -1,     3,
      -1,   742,    -1,   743,    -1,   744,    -1,   745,    -1,   746,
      -1,   747,    -1,   748,    -1,   749,    -1,   829,    -1,   751,
     792,   795,   796,    -1,   751,   792,   795,    -1,   310,   751,
      -1,   752,   197,   752,    -1,    -1,   751,   795,   796,    -1,
     751,   796,   795,    -1,   751,   795,    -1,   751,   796,    -1,
     783,    -1,    -1,   171,   751,    -1,   166,   751,    -1,   751,
     171,   784,    -1,   171,   784,    -1,   784,    -1,   640,    -1,
     499,   784,   500,    -1,    62,   803,   800,   802,   143,    -1,
     801,    -1,   800,   801,    -1,   457,   751,   414,   751,    -1,
     139,   751,    -1,    -1,   751,    -1,    -1,   830,    -1,   830,
     807,    -1,   501,   825,    -1,   497,   751,   498,    -1,   497,
     806,   508,   806,   498,    -1,   751,    -1,    -1,   805,    -1,
     807,   805,    -1,    -1,   808,   805,    -1,    42,    -1,    -1,
     812,    -1,    -1,   813,    -1,   811,   503,   813,    -1,   811,
      -1,   811,   503,    -1,   751,    38,   840,    -1,   751,     3,
      -1,   751,    -1,   492,   815,   819,    -1,   830,   501,   492,
     815,   819,    -1,   148,   499,   823,   500,    -1,   148,   830,
      -1,   814,    -1,    -1,   751,    38,   830,    -1,   816,    -1,
     817,   503,   816,    -1,   817,    -1,   817,   503,    -1,   344,
     499,   818,   500,    -1,   344,   816,    -1,    -1,   821,    -1,
     820,   503,   821,    -1,   831,    -1,   830,   807,    -1,   824,
      -1,   822,   503,   824,    -1,   822,    -1,   822,   503,    -1,
     830,    -1,   839,    -1,   833,    -1,   830,   807,    -1,   828,
      -1,     4,    -1,   829,   808,    -1,     6,    -1,     7,    -1,
     826,   829,    -1,   826,   499,   786,   654,   653,   500,   829,
      -1,   724,   829,    -1,   740,   499,   751,   500,   750,    -1,
     740,   828,   750,    -1,   740,   829,   750,    -1,   424,    -1,
     159,    -1,   277,    -1,     9,    -1,     5,    -1,     3,    -1,
     899,    -1,   900,    -1,   830,    -1,     5,    -1,     3,    -1,
     899,    -1,   904,    -1,     3,    -1,   899,    -1,   901,    -1,
       3,    -1,   899,    -1,   902,    -1,   830,    -1,   830,   836,
      -1,   501,   825,    -1,   836,   501,   825,    -1,   499,   822,
     500,    -1,    -1,   832,    -1,     3,    -1,   903,    -1,   899,
      -1,   905,    -1,   839,    -1,     5,    -1,   317,   824,   842,
      38,   843,    -1,   499,   788,   500,    -1,    -1,   639,    -1,
     527,    -1,   621,    -1,   882,    -1,    95,   362,   830,   845,
      -1,    95,   362,   190,   272,   152,   830,   845,    -1,   845,
     846,    -1,    -1,   563,    -1,   847,    -1,   550,    -1,   894,
      -1,    95,   853,   200,   850,   851,   287,   821,   849,   499,
     544,   500,   852,   714,    -1,    95,   853,   200,   850,   190,
     272,   152,   592,   287,   821,   849,   499,   544,   500,   852,
     714,    -1,   830,    -1,   441,   848,    -1,    -1,    84,    -1,
      -1,   592,    -1,    -1,   461,   578,    -1,    -1,   434,    -1,
      -1,    31,   406,   708,   376,   362,   824,    -1,    31,   406,
     190,   152,   708,   376,   362,   824,    -1,    31,   370,   821,
     376,   362,   824,    -1,    31,   370,   190,   152,   821,   376,
     362,   824,    -1,    31,   453,   821,   376,   362,   824,    -1,
      31,   453,   190,   152,   821,   376,   362,   824,    -1,   167,
      70,    -1,    70,    -1,   154,   110,   829,   629,    -1,   196,
     110,   829,    -1,   153,   861,    -1,   153,   865,   859,   861,
      -1,   153,   451,   861,    -1,   153,   499,   864,   500,   861,
      -1,   451,    -1,    -1,   866,    -1,   557,    -1,    -1,   639,
      -1,   527,    -1,   621,    -1,   882,    -1,   896,    -1,     3,
      -1,   899,    -1,   903,    -1,   862,    -1,   829,    -1,   867,
      -1,   864,   503,   867,    -1,    34,    -1,    33,    -1,   424,
      -1,   159,    -1,   287,    -1,   863,    -1,   868,   860,    -1,
     862,    -1,   865,    -1,   376,   870,    -1,   376,   238,   870,
      -1,   376,   374,   870,    -1,   376,   177,   870,    -1,   871,
      -1,   892,   171,    99,    -1,   415,   482,   873,    -1,   362,
     829,    -1,   892,   417,   874,    -1,   892,   488,   874,    -1,
     892,   417,   117,    -1,   892,   488,   117,    -1,   866,    -1,
     557,    -1,   829,    -1,     3,    -1,   740,   829,   750,    -1,
     740,   499,   828,   500,   829,    -1,   557,    -1,   117,    -1,
     238,    -1,   872,    -1,   874,   503,   872,    -1,   237,   876,
      -1,   211,   876,    -1,   167,   211,   876,    -1,   829,    -1,
     830,    -1,   442,   879,   881,   859,    -1,   442,   879,   881,
     859,   821,    -1,   442,   879,   881,   859,   886,    -1,   442,
     499,   880,   500,    -1,   442,   499,   880,   500,   821,   837,
      -1,   865,    -1,   451,    -1,   170,    -1,   172,    -1,     3,
      -1,   172,    -1,    -1,   878,    -1,   880,   503,   878,    -1,
     170,    -1,    -1,   531,   122,   171,   883,   885,   884,   536,
      -1,   708,    -1,   708,   830,    -1,   708,    38,   830,    -1,
     458,   751,    -1,    -1,   441,   699,    -1,    -1,   865,   859,
      -1,   865,   859,   821,   837,    -1,   346,   889,    -1,   892,
      -1,    29,    -1,   888,    -1,   415,   482,    -1,   419,   221,
     233,    -1,   891,   639,    -1,   402,   639,    -1,   402,   892,
      -1,   891,   892,    -1,   891,   415,   482,    -1,   891,   419,
     221,   233,    -1,   891,    29,    -1,   891,    -1,   380,    -1,
     127,    -1,   830,    -1,   892,   501,   830,    -1,    58,   754,
      -1,    95,   609,   453,   821,   598,   852,    38,   639,   895,
      -1,    95,   292,   344,   609,   453,   821,   598,   852,    38,
     639,   895,    -1,    95,   609,   334,   453,   821,   499,   602,
     500,   852,    38,   639,   895,    -1,    95,   292,   344,   609,
     334,   453,   821,   499,   602,   500,   852,    38,   639,   895,
      -1,   461,    69,   290,    -1,   461,    61,    69,   290,    -1,
     461,   238,    69,   290,    -1,    -1,    95,   609,   406,   898,
      38,   639,   897,    -1,    95,   609,   406,   190,   272,   152,
     898,    38,   639,   897,    -1,    95,   292,   344,   609,   406,
     898,    38,   639,   897,    -1,   461,   109,    -1,   461,   270,
     109,    -1,    -1,   821,   598,   585,   577,    -1,    21,    -1,
      22,    -1,    23,    -1,    24,    -1,    25,    -1,    26,    -1,
      27,    -1,    28,    -1,    30,    -1,    31,    -1,    32,    -1,
      40,    -1,    41,    -1,    43,    -1,    44,    -1,    45,    -1,
      47,    -1,    48,    -1,    49,    -1,    56,    -1,    57,    -1,
      58,    -1,    59,    -1,    60,    -1,    61,    -1,    64,    -1,
      65,    -1,    68,    -1,    70,    -1,    71,    -1,    72,    -1,
      73,    -1,    78,    -1,    79,    -1,    80,    -1,    81,    -1,
      82,    -1,    83,    -1,    85,    -1,    86,    -1,    87,    -1,
      89,    -1,    90,    -1,    91,    -1,    92,    -1,    93,    -1,
      94,    -1,    97,    -1,    98,    -1,    99,    -1,   107,    -1,
     108,    -1,   109,    -1,   110,    -1,   111,    -1,   112,    -1,
     113,    -1,   116,    -1,   118,    -1,   120,    -1,   121,    -1,
     122,    -1,   123,    -1,   124,    -1,   125,    -1,   127,    -1,
     128,    -1,   129,    -1,   130,    -1,   131,    -1,   134,    -1,
     135,    -1,   136,    -1,   137,    -1,   138,    -1,   140,    -1,
     141,    -1,   142,    -1,   144,    -1,   145,    -1,   146,    -1,
     148,    -1,   149,    -1,   150,    -1,   151,    -1,   153,    -1,
     154,    -1,   155,    -1,   156,    -1,   157,    -1,   160,    -1,
     162,    -1,   163,    -1,   165,    -1,   167,    -1,   169,    -1,
     173,    -1,   174,    -1,   177,    -1,   179,    -1,   183,    -1,
     185,    -1,   186,    -1,   187,    -1,   188,    -1,   189,    -1,
     190,    -1,   191,    -1,   193,    -1,   194,    -1,   195,    -1,
     196,    -1,   198,    -1,   199,    -1,   200,    -1,   201,    -1,
     202,    -1,   203,    -1,   205,    -1,   208,    -1,   209,    -1,
     210,    -1,   211,    -1,   212,    -1,   218,    -1,   221,    -1,
     223,    -1,   224,    -1,   225,    -1,   226,    -1,   227,    -1,
     228,    -1,   231,    -1,   233,    -1,   236,    -1,   237,    -1,
     238,    -1,   241,    -1,   242,    -1,   243,    -1,   244,    -1,
     245,    -1,   247,    -1,   248,    -1,   249,    -1,   250,    -1,
     251,    -1,   252,    -1,   253,    -1,   254,    -1,   255,    -1,
     256,    -1,   257,    -1,   258,    -1,   259,    -1,   260,    -1,
     261,    -1,   262,    -1,   263,    -1,   264,    -1,   268,    -1,
     269,    -1,   270,    -1,   273,    -1,   274,    -1,   276,    -1,
     279,    -1,   281,    -1,   282,    -1,   283,    -1,   285,    -1,
     286,    -1,   289,    -1,   290,    -1,   291,    -1,   294,    -1,
     297,    -1,   300,    -1,   301,    -1,   302,    -1,   303,    -1,
     304,    -1,   305,    -1,   306,    -1,   307,    -1,   308,    -1,
     309,    -1,   311,    -1,   312,    -1,   314,    -1,   315,    -1,
     317,    -1,   318,    -1,   319,    -1,   321,    -1,   322,    -1,
     323,    -1,   324,    -1,   325,    -1,   326,    -1,   328,    -1,
     329,    -1,   330,    -1,   332,    -1,   333,    -1,   334,    -1,
     335,    -1,   337,    -1,   338,    -1,   339,    -1,   340,    -1,
     341,    -1,   342,    -1,   343,    -1,   344,    -1,   345,    -1,
     346,    -1,   347,    -1,   348,    -1,   349,    -1,   351,    -1,
     352,    -1,   354,    -1,   355,    -1,   356,    -1,   358,    -1,
     359,    -1,   360,    -1,   361,    -1,   362,    -1,   363,    -1,
     364,    -1,   365,    -1,   366,    -1,   367,    -1,   368,    -1,
     370,    -1,   371,    -1,   372,    -1,   373,    -1,   374,    -1,
     376,    -1,   378,    -1,   379,    -1,   380,    -1,   382,    -1,
     383,    -1,   385,    -1,   387,    -1,   388,    -1,   389,    -1,
     390,    -1,   391,    -1,   392,    -1,   393,    -1,   394,    -1,
     395,    -1,   396,    -1,   397,    -1,   398,    -1,   400,    -1,
     402,    -1,   404,    -1,   405,    -1,   407,    -1,   409,    -1,
     410,    -1,   411,    -1,   412,    -1,   413,    -1,   419,    -1,
     420,    -1,   422,    -1,   425,    -1,   426,    -1,   428,    -1,
     429,    -1,   430,    -1,   431,    -1,   432,    -1,   435,    -1,
     436,    -1,   437,    -1,   438,    -1,   439,    -1,   442,    -1,
     443,    -1,   444,    -1,   445,    -1,   446,    -1,   450,    -1,
     452,    -1,   453,    -1,   454,    -1,   455,    -1,   456,    -1,
     459,    -1,   462,    -1,   463,    -1,   464,    -1,   465,    -1,
     466,    -1,   467,    -1,   479,    -1,   480,    -1,   481,    -1,
     482,    -1,    50,    -1,    51,    -1,    53,    -1,    54,    -1,
      66,    -1,    67,    -1,    74,    -1,   114,    -1,   115,    -1,
     152,    -1,   158,    -1,   164,    -1,   175,    -1,   181,    -1,
     182,    -1,   207,    -1,   213,    -1,   214,    -1,   216,    -1,
     246,    -1,   265,    -1,   267,    -1,   271,    -1,   278,    -1,
     280,    -1,   295,    -1,   299,    -1,   313,    -1,   316,    -1,
     331,    -1,   357,    -1,   377,    -1,   384,    -1,   399,    -1,
     401,    -1,   415,    -1,   416,    -1,   421,    -1,   423,    -1,
     427,    -1,   447,    -1,   448,    -1,   468,    -1,   469,    -1,
     470,    -1,   471,    -1,   472,    -1,   473,    -1,   474,    -1,
     475,    -1,   476,    -1,   477,    -1,   478,    -1,    46,    -1,
      52,    -1,    76,    -1,    84,    -1,    96,    -1,   103,    -1,
     170,    -1,   172,    -1,   175,    -1,   176,    -1,   192,    -1,
     206,    -1,   219,    -1,   220,    -1,   222,    -1,   232,    -1,
     234,    -1,   246,    -1,   266,    -1,   275,    -1,   296,    -1,
     298,    -1,   353,    -1,   381,    -1,   399,    -1,   408,    -1,
     451,    -1,    46,    -1,    52,    -1,    76,    -1,    84,    -1,
      96,    -1,   103,    -1,   170,    -1,   172,    -1,   176,    -1,
     192,    -1,   206,    -1,   219,    -1,   220,    -1,   222,    -1,
     232,    -1,   234,    -1,   266,    -1,   275,    -1,   296,    -1,
     298,    -1,   353,    -1,   381,    -1,   408,    -1,   427,    -1,
     451,    -1,    50,    -1,    51,    -1,    53,    -1,    54,    -1,
      67,    -1,    66,    -1,    74,    -1,   114,    -1,   115,    -1,
     152,    -1,   158,    -1,   164,    -1,   175,    -1,   181,    -1,
     182,    -1,   207,    -1,   214,    -1,   216,    -1,   213,    -1,
     246,    -1,   265,    -1,   267,    -1,   271,    -1,   278,    -1,
     280,    -1,   295,    -1,   299,    -1,   313,    -1,   316,    -1,
     331,    -1,   357,    -1,   377,    -1,   384,    -1,   399,    -1,
     401,    -1,   415,    -1,   416,    -1,   421,    -1,   423,    -1,
     427,    -1,   447,    -1,   448,    -1,   468,    -1,   469,    -1,
     470,    -1,   471,    -1,   472,    -1,   473,    -1,   474,    -1,
     475,    -1,   476,    -1,   477,    -1,   478,    -1,    46,    -1,
      52,    -1,    76,    -1,    84,    -1,    96,    -1,   103,    -1,
     170,    -1,   172,    -1,   175,    -1,   176,    -1,   192,    -1,
     206,    -1,   219,    -1,   220,    -1,   222,    -1,   232,    -1,
     234,    -1,   246,    -1,   266,    -1,   275,    -1,   296,    -1,
     298,    -1,   353,    -1,   381,    -1,   399,    -1,   408,    -1,
     427,    -1,   451,    -1,    29,    -1,    33,    -1,    34,    -1,
      35,    -1,    36,    -1,    37,    -1,    38,    -1,    39,    -1,
      42,    -1,    55,    -1,    62,    -1,    63,    -1,    69,    -1,
      75,    -1,    77,    -1,    88,    -1,    95,    -1,   100,    -1,
     101,    -1,   102,    -1,   104,    -1,   105,    -1,   106,    -1,
     117,    -1,   119,    -1,   126,    -1,   132,    -1,   133,    -1,
     139,    -1,   143,    -1,   147,    -1,   159,    -1,   161,    -1,
     166,    -1,   168,    -1,   171,    -1,   178,    -1,   180,    -1,
     184,    -1,   197,    -1,   204,    -1,   215,    -1,   217,    -1,
     229,    -1,   230,    -1,   235,    -1,   239,    -1,   240,    -1,
     272,    -1,   277,    -1,   284,    -1,   287,    -1,   288,    -1,
     292,    -1,   293,    -1,   310,    -1,   320,    -1,   327,    -1,
     336,    -1,   350,    -1,   369,    -1,   375,    -1,   386,    -1,
     403,    -1,   406,    -1,   414,    -1,   417,    -1,   418,    -1,
     424,    -1,   433,    -1,   434,    -1,   440,    -1,   441,    -1,
     449,    -1,   457,    -1,   458,    -1,   460,    -1,   461,    -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,   467,   467,   483,   495,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   539,
       9,    18,    27,    36,    45,    54,    63,    72,    85,    87,
      93,    94,    99,   103,   107,   118,   126,   130,   139,   148,
     157,   166,   175,   184,   192,   200,   209,   218,   227,   236,
     253,   262,   271,   280,   290,   303,   318,   327,   335,   350,
     358,   368,   378,   385,   392,   400,   407,   418,   419,   424,
     428,   433,   438,   446,   447,   452,   456,   457,   458,     7,
      13,    19,    25,     6,    15,    25,    35,    45,    55,    65,
      75,    85,    95,   106,   117,   127,   140,   141,     8,    21,
      27,    34,    40,    47,    57,    61,    70,    79,    88,    95,
      96,   101,   113,   118,   143,   153,   163,   169,   180,   191,
     206,   207,   213,   214,   219,   220,   226,   227,   231,   232,
     237,   239,   245,   246,   250,   251,   254,   255,   260,     7,
      15,    26,    27,    30,    32,     7,    14,    22,     9,    19,
      32,    33,     7,    14,    31,    51,    52,     9,    17,    29,
      30,    34,    35,    36,    41,    42,    43,    48,    52,    56,
      60,    64,    68,    72,    76,    80,    84,    88,    92,    97,
     101,   105,   112,   113,   117,   118,   119,     2,     9,    15,
      21,    28,    35,    45,    46,    47,     7,    21,    36,    56,
      57,    84,    85,    86,    87,    88,    89,    93,    94,    99,
     104,   105,   106,   107,   108,   113,   120,   121,   122,   139,
     146,   153,   163,   173,   185,   193,   202,   220,   221,   225,
     226,   230,   239,   262,   276,   283,   288,   290,   292,   294,
     297,   300,   301,   302,   303,   308,   312,   313,   318,   325,
     330,   331,   332,   333,   334,   335,   336,   337,   343,   344,
     348,   353,   360,   367,   374,   386,   387,   388,   389,   393,
     398,   399,   400,   405,   410,   411,   412,   413,   414,   415,
     420,   440,   469,   470,   474,   478,   479,   480,   484,   488,
     496,   497,   502,   503,   504,   508,   516,   517,   522,   523,
     527,   532,   536,   540,   545,   553,   554,   558,   559,   563,
     564,   570,   581,   594,   608,   622,   636,   650,   673,   677,
     684,   688,   696,   701,   708,   718,   719,   720,   721,   722,
     729,   736,   737,   742,   743,     9,    19,    29,    39,    49,
      59,    69,    79,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   113,
     114,   115,   116,   117,   118,   119,   124,   125,   130,   131,
     132,   137,   138,   139,   142,   143,     8,    20,    36,    37,
      41,    45,     7,     1,    30,    53,    54,    59,    63,    68,
      72,    80,    81,    85,    86,    91,    92,    96,    97,   102,
     103,   104,   105,   106,   111,   119,   123,   128,   129,   134,
     138,   143,   147,   151,   155,   159,   163,   167,   171,   175,
     179,   183,   187,   191,   195,   203,   209,   210,   211,   216,
     220,    47,    48,    52,    53,    68,    69,    76,    84,    92,
     100,   108,   116,   127,   128,   155,   171,   188,   189,   208,
     212,   216,   233,   240,   247,   257,   258,   261,   273,   284,
     292,   297,   302,   307,   312,   320,   328,   333,   338,   345,
     346,   350,   351,   352,   359,   360,   364,   365,   369,   370,
     371,   375,   376,   380,   381,   391,   404,   405,   408,   417,
     428,   429,   430,   433,   434,   435,   439,   440,   441,   442,
     446,   447,   451,   453,   469,   471,   476,   479,   487,   491,
     495,   499,   503,   507,   514,   519,   526,   527,   531,   535,
     539,   543,   550,   557,   558,   563,   564,   568,   569,   574,
     576,   578,   583,   603,   604,   606,   611,   612,   616,   617,
     620,   621,   646,   647,   652,   657,   661,   662,   666,   667,
     671,   672,   673,   674,   675,   679,   692,   699,   706,   713,
     714,   718,   719,   723,   724,   728,   729,   733,   734,   738,
     739,   743,   754,   755,   756,   757,   761,   762,   767,   768,
     769,   778,   784,   793,   794,   807,   808,   812,   813,   817,
     818,   824,   830,   838,   846,   855,   864,   868,   894,   898,
     911,   925,   940,   952,   968,   974,   979,   985,   992,   993,
    1001,  1005,  1009,  1015,  1022,  1027,  1028,  1029,  1030,  1034,
    1035,  1047,  1048,  1053,  1060,  1067,  1074,  1106,  1117,  1130,
    1135,  1136,  1139,  1140,  1143,  1144,  1149,  1150,  1155,  1159,
    1165,  1186,  1194,  1207,  1210,  1214,  1214,  1217,  1218,  1220,
    1225,  1232,  1237,  1243,  1248,  1254,  1260,  1269,  1271,  1274,
    1278,  1279,  1280,  1281,  1282,  1283,  1288,  1308,  1309,  1310,
    1311,  1322,  1336,  1337,  1343,  1348,  1353,  1358,  1363,  1368,
    1373,  1378,  1384,  1390,  1396,  1403,  1425,  1434,  1438,  1446,
    1450,  1458,  1470,  1491,  1495,  1501,  1505,  1518,  1526,  1536,
    1538,  1540,  1542,  1544,  1546,  1551,  1552,  1559,  1568,  1576,
    1585,  1596,  1604,  1605,  1606,  1610,  1610,  1613,  1613,  1616,
    1616,  1619,  1619,  1622,  1622,  1625,  1625,  1628,  1628,  1631,
    1631,  1634,  1636,  1638,  1640,  1642,  1644,  1646,  1648,  1650,
    1655,  1660,  1666,  1673,  1678,  1684,  1690,  1721,  1723,  1725,
    1733,  1748,  1750,  1752,  1754,  1756,  1758,  1760,  1762,  1764,
    1766,  1768,  1770,  1772,  1774,  1776,  1779,  1781,  1783,  1786,
    1788,  1790,  1792,  1795,  1800,  1805,  1812,  1817,  1824,  1829,
    1836,  1841,  1849,  1857,  1865,  1873,  1891,  1899,  1907,  1915,
    1923,  1931,  1935,  1939,  1943,  1951,  1955,  1971,  1979,  1987,
    1995,  2003,  2011,  2019,  2023,  2027,  2031,  2035,  2043,  2051,
    2059,  2067,  2087,  2109,  2120,  2127,  2141,  2157,  2159,  2161,
    2163,  2165,  2167,  2169,  2171,  2173,  2175,  2177,  2179,  2181,
    2183,  2185,  2187,  2189,  2191,  2193,  2195,  2197,  2201,  2205,
    2209,  2223,  2224,  2225,  2232,  2244,  2259,  2271,  2273,  2285,
    2296,  2320,  2331,  2340,  2344,  2351,  2359,  2367,  2378,  2386,
    2414,  2450,  2461,  2462,  2469,  2475,  2479,  2483,  2487,  2491,
    2495,  2499,  2503,  2507,  2511,  2515,  2519,  2523,  2527,  2531,
    2535,  2537,  2539,  2543,  2552,  2557,  2564,  2579,  2586,  2590,
    2594,  2598,  2602,  2616,  2617,  2621,  2622,  2626,  2627,  2634,
    2635,  2639,  2640,  2645,  2653,  2655,  2669,  2672,  2699,  2700,
    2703,  2704,  2715,  2721,  2728,  2737,  2754,  2799,  2807,  2815,
    2823,  2831,  2852,  2853,  2856,  2857,  2861,  2871,  2872,  2876,
    2877,  2881,  2882,  2883,  2886,  2887,  2890,  2891,  2892,  2893,
    2894,  2895,  2896,  2897,  2898,  2899,  2900,  2901,  2902,  2905,
    2907,  2912,  2914,  2919,  2921,  2923,  2925,  2927,  2929,  2931,
    2933,  2947,  2949,  2953,  2957,  2964,  2969,  2976,  2981,  2989,
    2993,  2999,  3003,  3012,  3023,  3024,  3028,  3032,  3039,  3040,
    3041,  3042,  3043,  3044,  3045,  3046,  3047,  3048,  3058,  3062,
    3069,  3076,  3077,  3093,  3097,  3102,  3106,  3121,  3126,  3130,
    3133,  3136,  3137,  3138,  3141,  3148,  3158,  3172,  3173,  3177,
    3188,  3189,  3192,  3193,  3196,  3200,  3207,  3211,  3219,  3230,
    3231,  3235,  3236,  3240,  3241,  3244,  3245,  3255,  3256,  3260,
    3261,  3265,  3266,  3269,  3285,  3293,  3301,  3316,  3334,  3335,
    3338,  3339,  3342,  3346,  3347,  3351,  3352,  3355,  3356,  3357,
    3367,  3368,  3379,  3383,  3410,  3412,  3418,  3419,  3422,  3424,
    3434,  3437,  3448,  3452,  3456,  3468,  3472,  3481,  3488,  3526,
    3530,  3534,  3538,  3542,  3546,  3550,  3556,  3557,  3573,  3574,
    3575,  3578,  3579,  3585,  3586,  3587,  3590,  3591,  3592,  3595,
    3596,  3597,  3600,  3601,  3604,  3606,  3611,  3612,  3615,  3623,
    3624,  3625,  3626,  3629,  3630,     7,    18,    19,    23,    24,
      25,    26,     7,    16,    34,    41,    46,    47,    48,    49,
       8,    33,    62,    66,    67,    72,    73,    78,    79,    83,
      84,    89,    90,     7,    16,    25,    34,    43,    52,     5,
      11,     7,    20,     9,    16,    26,    33,    44,    45,    50,
      51,    52,    57,    58,    59,    60,    61,    65,    66,    67,
      72,    73,    78,    82,    90,    91,    96,    97,    98,   104,
     109,   117,   118,    10,    16,    22,    28,    38,    39,    47,
      58,    70,    78,    86,    93,   103,   105,   111,   115,   119,
     134,   141,   142,   143,   147,   148,     7,    14,    20,    28,
      29,     8,    22,    36,    48,    56,    70,    71,    72,    73,
      74,    87,    88,    93,    94,    98,    99,     7,    21,    25,
      32,    43,    44,    50,    51,     9,    19,     2,     7,    14,
      24,    25,    32,     3,    10,    17,    24,    31,    38,    45,
      52,    61,    61,    63,    64,     6,     8,    21,    34,    52,
      74,    75,    76,    77,    11,    24,    37,    54,    55,    56,
      61,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    75,    75,
      75,    75,    75,    75,    75,    75,    75,    75,    75,    75,
      75,    75,    75,    75,    75,    75,    75,    75,    75,    75,
      75,    75,    75,    75,    75,    75,    75,    75,    75,    75,
      75,    75,    75,    75,    75,    75,    75,    75,    75,    75,
      75,    75,    75,    75,    75,    75,    75,    75,    75,    75,
      75,    76,    76,    76,    76,    76,    76,    76,    76,    76,
      76,    76,    76,    76,    76,    76,    76,    76,    76,    76,
      76,    76,    76,    76,    76,    76,    76,    76,    77,    77,
      77,    77,    77,    77,    77,    77,    77,    77,    77,    77,
      77,    77,    77,    77,    77,    77,    77,    77,    77,    77,
      77,    77,    77,    78,    78,    78,    78,    78,    78,    78,
      78,    78,    78,    78,    78,    78,    78,    78,    78,    78,
      78,    78,    78,    78,    78,    78,    78,    78,    78,    78,
      78,    78,    78,    78,    78,    78,    78,    78,    78,    78,
      78,    78,    78,    78,    78,    78,    78,    78,    78,    78,
      78,    78,    78,    78,    78,    78,    79,    79,    79,    79,
      79,    79,    79,    79,    79,    79,    79,    79,    79,    79,
      79,    79,    79,    79,    79,    79,    79,    79,    79,    79,
      79,    79,    79,    79,    80,    80,    80,    80,    80,    80,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
      80,    80
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "IDENT", "FCONST", "SCONST", "BCONST",
  "XCONST", "Op", "ICONST", "PARAM", "TYPECAST", "DOT_DOT", "COLON_EQUALS",
  "EQUALS_GREATER", "POWER_OF", "LAMBDA_ARROW", "DOUBLE_ARROW",
  "LESS_EQUALS", "GREATER_EQUALS", "NOT_EQUALS", "ABORT_P", "ABSOLUTE_P",
  "ACCESS", "ACTION", "ADD_P", "ADMIN", "AFTER", "AGGREGATE", "ALL",
  "ALSO", "ALTER", "ALWAYS", "ANALYSE", "ANALYZE", "AND", "ANY", "ARRAY",
  "AS", "ASC_P", "ASSERTION", "ASSIGNMENT", "ASYMMETRIC", "AT", "ATTACH",
  "ATTRIBUTE", "AUTHORIZATION", "BACKWARD", "BEFORE", "BEGIN_P", "BETWEEN",
  "BIGINT", "BINARY", "BIT", "BOOLEAN_P", "BOTH", "BY", "CACHE", "CALL_P",
  "CALLED", "CASCADE", "CASCADED", "CASE", "CAST", "CATALOG_P", "CHAIN",
  "CHAR_P", "CHARACTER", "CHARACTERISTICS", "CHECK_P", "CHECKPOINT",
  "CLASS", "CLOSE", "CLUSTER", "COALESCE", "COLLATE", "COLLATION",
  "COLUMN", "COLUMNS", "COMMENT", "COMMENTS", "COMMIT", "COMMITTED",
  "COMPRESSION", "CONCURRENTLY", "CONFIGURATION", "CONFLICT", "CONNECTION",
  "CONSTRAINT", "CONSTRAINTS", "CONTENT_P", "CONTINUE_P", "CONVERSION_P",
  "COPY", "COST", "CREATE_P", "CROSS", "CSV", "CUBE", "CURRENT_P",
  "CURRENT_CATALOG", "CURRENT_DATE", "CURRENT_ROLE", "CURRENT_SCHEMA",
  "CURRENT_TIME", "CURRENT_TIMESTAMP", "CURRENT_USER", "CURSOR", "CYCLE",
  "DATA_P", "DATABASE", "DAY_P", "DAYS_P", "DEALLOCATE", "DEC",
  "DECIMAL_P", "DECLARE", "DEFAULT", "DEFAULTS", "DEFERRABLE", "DEFERRED",
  "DEFINER", "DELETE_P", "DELIMITER", "DELIMITERS", "DEPENDS", "DESC_P",
  "DESCRIBE", "DETACH", "DICTIONARY", "DISABLE_P", "DISCARD", "DISTINCT",
  "DO", "DOCUMENT_P", "DOMAIN_P", "DOUBLE_P", "DROP", "EACH", "ELSE",
  "ENABLE_P", "ENCODING", "ENCRYPTED", "END_P", "ENUM_P", "ESCAPE",
  "EVENT", "EXCEPT", "EXCLUDE", "EXCLUDING", "EXCLUSIVE", "EXECUTE",
  "EXISTS", "EXPLAIN", "EXPORT_P", "EXPORT_STATE", "EXTENSION", "EXTERNAL",
  "EXTRACT", "FALSE_P", "FAMILY", "FETCH", "FILTER", "FIRST_P", "FLOAT_P",
  "FOLLOWING", "FOR", "FORCE", "FOREIGN", "FORWARD", "FREEZE", "FROM",
  "FULL", "FUNCTION", "FUNCTIONS", "GENERATED", "GLOB", "GLOBAL", "GRANT",
  "GRANTED", "GROUP_P", "GROUPING", "GROUPING_ID", "HANDLER", "HAVING",
  "HEADER_P", "HOLD", "HOUR_P", "HOURS_P", "IDENTITY_P", "IF_P",
  "IGNORE_P", "ILIKE", "IMMEDIATE", "IMMUTABLE", "IMPLICIT_P", "IMPORT_P",
  "IN_P", "INCLUDING", "INCREMENT", "INDEX", "INDEXES", "INHERIT",
  "INHERITS", "INITIALLY", "INLINE_P", "INNER_P", "INOUT", "INPUT_P",
  "INSENSITIVE", "INSERT", "INSTALL", "INSTEAD", "INT_P", "INTEGER",
  "INTERSECT", "INTERVAL", "INTO", "INVOKER", "IS", "ISNULL", "ISOLATION",
  "JOIN", "JSON", "KEY", "LABEL", "LANGUAGE", "LARGE_P", "LAST_P",
  "LATERAL_P", "LEADING", "LEAKPROOF", "LEFT", "LEVEL", "LIKE", "LIMIT",
  "LISTEN", "LOAD", "LOCAL", "LOCALTIME", "LOCALTIMESTAMP", "LOCATION",
  "LOCK_P", "LOCKED", "LOGGED", "MACRO", "MAP", "MAPPING", "MATCH",
  "MATERIALIZED", "MAXVALUE", "METHOD", "MICROSECOND_P", "MICROSECONDS_P",
  "MILLISECOND_P", "MILLISECONDS_P", "MINUTE_P", "MINUTES_P", "MINVALUE",
  "MODE", "MONTH_P", "MONTHS_P", "MOVE", "NAME_P", "NAMES", "NATIONAL",
  "NATURAL", "NCHAR", "NEW", "NEXT", "NO", "NONE", "NOT", "NOTHING",
  "NOTIFY", "NOTNULL", "NOWAIT", "NULL_P", "NULLIF", "NULLS_P", "NUMERIC",
  "OBJECT_P", "OF", "OFF", "OFFSET", "OIDS", "OLD", "ON", "ONLY",
  "OPERATOR", "OPTION", "OPTIONS", "OR", "ORDER", "ORDINALITY", "OUT_P",
  "OUTER_P", "OVER", "OVERLAPS", "OVERLAY", "OVERRIDING", "OWNED", "OWNER",
  "PARALLEL", "PARSER", "PARTIAL", "PARTITION", "PASSING", "PASSWORD",
  "PERCENT", "PLACING", "PLANS", "POLICY", "POSITION", "PRAGMA_P",
  "PRECEDING", "PRECISION", "PREPARE", "PREPARED", "PRESERVE", "PRIMARY",
  "PRIOR", "PRIVILEGES", "PROCEDURAL", "PROCEDURE", "PROGRAM",
  "PUBLICATION", "QUALIFY", "QUOTE", "RANGE", "READ_P", "REAL", "REASSIGN",
  "RECHECK", "RECURSIVE", "REF", "REFERENCES", "REFERENCING", "REFRESH",
  "REINDEX", "RELATIVE_P", "RELEASE", "RENAME", "REPEATABLE", "REPLACE",
  "REPLICA", "RESET", "RESPECT_P", "RESTART", "RESTRICT", "RETURNING",
  "RETURNS", "REVOKE", "RIGHT", "ROLE", "ROLLBACK", "ROLLUP", "ROW",
  "ROWS", "RULE", "SAMPLE", "SAVEPOINT", "SCHEMA", "SCHEMAS", "SCROLL",
  "SEARCH", "SECOND_P", "SECONDS_P", "SECURITY", "SELECT", "SEQUENCE",
  "SEQUENCES", "SERIALIZABLE", "SERVER", "SESSION", "SESSION_USER", "SET",
  "SETOF", "SETS", "SHARE", "SHOW", "SIMILAR", "SIMPLE", "SKIP",
  "SMALLINT", "SNAPSHOT", "SOME", "SQL_P", "STABLE", "STANDALONE_P",
  "START", "STATEMENT", "STATISTICS", "STDIN", "STDOUT", "STORAGE",
  "STORED", "STRICT_P", "STRIP_P", "STRUCT", "SUBSCRIPTION", "SUBSTRING",
  "SUMMARIZE", "SYMMETRIC", "SYSID", "SYSTEM_P", "TABLE", "TABLES",
  "TABLESAMPLE", "TABLESPACE", "TEMP", "TEMPLATE", "TEMPORARY", "TEXT_P",
  "THEN", "TIME", "TIMESTAMP", "TO", "TRAILING", "TRANSACTION",
  "TRANSFORM", "TREAT", "TRIGGER", "TRIM", "TRUE_P", "TRUNCATE", "TRUSTED",
  "TRY_CAST", "TYPE_P", "TYPES_P", "UNBOUNDED", "UNCOMMITTED",
  "UNENCRYPTED", "UNION", "UNIQUE", "UNKNOWN", "UNLISTEN", "UNLOGGED",
  "UNTIL", "UPDATE", "USER", "USING", "VACUUM", "VALID", "VALIDATE",
  "VALIDATOR", "VALUE_P", "VALUES", "VARCHAR", "VARIADIC", "VARYING",
  "VERBOSE", "VERSION_P", "VIEW", "VIEWS", "VIRTUAL", "VOLATILE", "WHEN",
  "WHERE", "WHITESPACE_P", "WINDOW", "WITH", "WITHIN", "WITHOUT", "WORK",
  "WRAPPER", "WRITE_P", "XML_P", "XMLATTRIBUTES", "XMLCONCAT",
  "XMLELEMENT", "XMLEXISTS", "XMLFOREST", "XMLNAMESPACES", "XMLPARSE",
  "XMLPI", "XMLROOT", "XMLSERIALIZE", "XMLTABLE", "YEAR_P", "YEARS_P",
  "YES_P", "ZONE", "NOT_LA", "NULLS_LA", "WITH_LA", "'<'", "'>'", "'='",
  "POSTFIXOP", "'+'", "'-'", "'*'", "'/'", "'%'", "'^'", "UMINUS", "'['",
  "']'", "'('", "')'", "'.'", "';'", "','", "'{'", "'}'", "'#'", "'?'",
  "':'", "$accept", "stmtblock", "stmtmulti", "stmt", "AlterTableStmt",
  "alter_identity_column_option_list", "alter_column_default",
  "alter_identity_column_option", "alter_generic_option_list",
  "alter_table_cmd", "alter_using", "alter_generic_option_elem",
  "alter_table_cmds", "alter_generic_options", "opt_set_data",
  "DeallocateStmt", "RenameStmt", "opt_column", "InsertStmt",
  "insert_rest", "insert_target", "opt_conf_expr", "opt_with_clause",
  "insert_column_item", "set_clause", "opt_on_conflict", "index_elem",
  "returning_clause", "override_kind", "set_target_list", "opt_collate",
  "opt_class", "insert_column_list", "set_clause_list",
  "set_clause_list_opt_comma", "index_params", "set_target",
  "CreateTypeStmt", "opt_enum_val_list", "enum_val_list", "PragmaStmt",
  "CreateSeqStmt", "OptSeqOptList", "ExecuteStmt", "execute_param_clause",
  "AlterSeqStmt", "SeqOptList", "opt_with", "NumericOnly", "SeqOptElem",
  "opt_by", "SignedIconst", "TransactionStmt", "opt_transaction",
  "CreateStmt", "ConstraintAttributeSpec", "def_arg",
  "OptParenthesizedSeqOptList", "generic_option_arg", "key_action",
  "ColConstraint", "ColConstraintElem", "GeneratedColumnType",
  "opt_GeneratedColumnType", "GeneratedConstraintElem",
  "generic_option_elem", "key_update", "key_actions", "OnCommitOption",
  "reloptions", "opt_no_inherit", "TableConstraint", "TableLikeOption",
  "reloption_list", "ExistingIndex", "ConstraintAttr", "OptWith",
  "definition", "TableLikeOptionList", "generic_option_name",
  "ConstraintAttributeElem", "columnDef", "def_list", "index_name",
  "TableElement", "def_elem", "opt_definition", "OptTableElementList",
  "columnElem", "opt_column_list", "ColQualList", "key_delete",
  "reloption_elem", "columnList", "columnList_opt_comma", "func_type",
  "ConstraintElem", "TableElementList", "key_match", "TableLikeClause",
  "OptTemp", "generated_when", "DropStmt", "drop_type_any_name",
  "drop_type_name", "any_name_list", "opt_drop_behavior",
  "drop_type_name_on_any_name", "type_name_list", "CreateFunctionStmt",
  "macro_alias", "param_list", "UpdateStmt", "CopyStmt", "copy_from",
  "copy_delimiter", "copy_generic_opt_arg_list", "opt_using", "opt_as",
  "opt_program", "copy_options", "copy_generic_opt_arg",
  "copy_generic_opt_elem", "opt_oids", "copy_opt_list", "opt_binary",
  "copy_opt_item", "copy_generic_opt_arg_list_item", "copy_file_name",
  "copy_generic_opt_list", "SelectStmt", "select_with_parens",
  "select_no_parens", "select_clause", "simple_select", "with_clause",
  "cte_list", "common_table_expr", "into_clause", "OptTempTableName",
  "opt_table", "all_or_distinct", "distinct_clause", "opt_all_clause",
  "opt_ignore_nulls", "opt_sort_clause", "sort_clause", "sortby_list",
  "sortby", "opt_asc_desc", "opt_nulls_order", "select_limit",
  "opt_select_limit", "limit_clause", "offset_clause", "sample_count",
  "sample_clause", "opt_sample_func", "tablesample_entry",
  "tablesample_clause", "opt_tablesample_clause", "opt_repeatable_clause",
  "select_limit_value", "select_offset_value", "select_fetch_first_value",
  "I_or_F_const", "row_or_rows", "first_or_next", "group_clause",
  "group_by_list", "group_by_list_opt_comma", "group_by_item",
  "empty_grouping_set", "rollup_clause", "cube_clause",
  "grouping_sets_clause", "grouping_or_grouping_id", "having_clause",
  "qualify_clause", "for_locking_clause", "opt_for_locking_clause",
  "for_locking_items", "for_locking_item", "for_locking_strength",
  "locked_rels_list", "opt_nowait_or_skip", "values_clause",
  "values_clause_opt_comma", "from_clause", "from_list",
  "from_list_opt_comma", "table_ref", "joined_table", "alias_clause",
  "opt_alias_clause", "func_alias_clause", "join_type", "join_outer",
  "join_qual", "relation_expr", "func_table", "rowsfrom_item",
  "rowsfrom_list", "opt_col_def_list", "opt_ordinality", "where_clause",
  "TableFuncElementList", "TableFuncElement", "opt_collate_clause",
  "colid_type_list", "RowOrStruct", "opt_Typename", "Typename",
  "opt_array_bounds", "SimpleTypename", "ConstTypename", "GenericType",
  "opt_type_modifiers", "Numeric", "opt_float", "Bit", "ConstBit",
  "BitWithLength", "BitWithoutLength", "Character", "ConstCharacter",
  "CharacterWithLength", "CharacterWithoutLength", "character",
  "opt_varying", "ConstDatetime", "ConstInterval", "opt_timezone",
  "year_keyword", "month_keyword", "day_keyword", "hour_keyword",
  "minute_keyword", "second_keyword", "millisecond_keyword",
  "microsecond_keyword", "opt_interval", "a_expr", "b_expr", "c_expr",
  "func_application", "func_expr", "func_expr_windowless",
  "func_expr_common_subexpr", "within_group_clause", "filter_clause",
  "export_clause", "window_clause", "window_definition_list",
  "window_definition", "over_clause", "window_specification",
  "opt_existing_window_name", "opt_partition_clause", "opt_frame_clause",
  "frame_extent", "frame_bound", "qualified_row", "row", "dict_arg",
  "dict_arguments", "dict_arguments_opt_comma", "sub_type", "all_Op",
  "MathOp", "qual_Op", "qual_all_Op", "subquery_Op", "any_operator",
  "expr_list", "expr_list_opt_comma", "opt_expr_list_opt_comma",
  "func_arg_list", "func_arg_expr", "type_list", "extract_list",
  "extract_arg", "overlay_list", "overlay_placing", "position_list",
  "substr_list", "substr_from", "substr_for", "trim_list", "in_expr",
  "case_expr", "when_clause_list", "when_clause", "case_default",
  "case_arg", "columnref", "indirection_el", "opt_slice_bound",
  "indirection", "opt_indirection", "opt_asymmetric",
  "opt_target_list_opt_comma", "target_list", "target_list_opt_comma",
  "target_el", "except_list", "opt_except_list", "replace_list_el",
  "replace_list", "replace_list_opt_comma", "opt_replace_list",
  "qualified_name_list", "qualified_name", "name_list",
  "name_list_opt_comma", "name", "attr_name", "func_name", "AexprConst",
  "Iconst", "Sconst", "ColId", "ColIdOrString", "type_function_name",
  "function_name_token", "type_name_token", "any_name", "attrs",
  "opt_name_list", "param_name", "ColLabel", "ColLabelOrString",
  "PrepareStmt", "prep_type_clause", "PreparableStmt", "CreateSchemaStmt",
  "OptSchemaEltList", "schema_stmt", "IndexStmt", "access_method",
  "access_method_clause", "opt_concurrently", "opt_index_name",
  "opt_reloptions", "opt_unique", "AlterObjectSchemaStmt",
  "CheckPointStmt", "ExportStmt", "ImportStmt", "ExplainStmt",
  "opt_verbose", "explain_option_arg", "ExplainableStmt",
  "NonReservedWord", "NonReservedWord_or_Sconst", "explain_option_list",
  "analyze_keyword", "opt_boolean_or_string", "explain_option_elem",
  "explain_option_name", "VariableSetStmt", "set_rest", "generic_set",
  "var_value", "zone_value", "var_list", "LoadStmt", "file_name",
  "VacuumStmt", "vacuum_option_elem", "opt_full", "vacuum_option_list",
  "opt_freeze", "DeleteStmt", "relation_expr_opt_alias",
  "where_or_current_clause", "using_clause", "AnalyzeStmt",
  "VariableResetStmt", "generic_reset", "reset_rest", "VariableShowStmt",
  "show_or_describe", "var_name", "CallStmt", "ViewStmt",
  "opt_check_option", "CreateAsStmt", "opt_with_data", "create_as_target",
  "unreserved_keyword", "col_name_keyword", "func_name_keyword",
  "type_name_keyword", "other_keyword", "type_func_name_keyword",
  "reserved_keyword", 0
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,    60,    62,    61,   741,
      43,    45,    42,    47,    37,    94,   742,    91,    93,    40,
      41,    46,    59,    44,   123,   125,    35,    63,    58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   509,   510,   511,   511,   512,   512,   512,   512,   512,
     512,   512,   512,   512,   512,   512,   512,   512,   512,   512,
     512,   512,   512,   512,   512,   512,   512,   512,   512,   512,
     512,   512,   512,   512,   512,   512,   512,   512,   512,   512,
     513,   513,   513,   513,   513,   513,   513,   513,   514,   514,
     515,   515,   516,   516,   516,   516,   517,   517,   518,   518,
     518,   518,   518,   518,   518,   518,   518,   518,   518,   518,
     518,   518,   518,   518,   518,   518,   518,   518,   518,   518,
     518,   518,   518,   518,   518,   518,   518,   519,   519,   520,
     520,   520,   520,   521,   521,   522,   523,   523,   523,   524,
     524,   524,   524,   525,   525,   525,   525,   525,   525,   525,
     525,   525,   525,   525,   525,   525,   526,   526,   527,   528,
     528,   528,   528,   528,   529,   529,   530,   530,   530,   531,
     531,   532,   533,   533,   534,   534,   534,   535,   535,   535,
     536,   536,   537,   537,   538,   538,   539,   539,   540,   540,
     541,   541,   542,   542,   543,   543,   544,   544,   545,   546,
     546,   547,   547,   548,   548,   549,   549,   549,   550,   550,
     551,   551,   552,   552,   552,   553,   553,   554,   554,   555,
     555,   556,   556,   556,   557,   557,   557,   557,   558,   558,
     558,   558,   558,   558,   558,   558,   558,   558,   558,   558,
     558,   558,   559,   559,   560,   560,   560,   561,   561,   561,
     561,   561,   561,   562,   562,   562,   563,   563,   563,   564,
     564,   565,   565,   565,   565,   565,   565,   566,   566,   567,
     568,   568,   568,   568,   568,   569,   569,   569,   569,   570,
     570,   570,   570,   570,   570,   570,   570,   571,   571,   572,
     572,   573,   573,   573,   574,   575,   576,   576,   576,   576,
     576,   577,   577,   577,   577,   578,   579,   579,   580,   580,
     581,   581,   581,   581,   581,   581,   581,   581,   582,   582,
     583,   584,   584,   584,   584,   585,   585,   585,   585,   586,
     587,   587,   587,   588,   589,   589,   589,   589,   589,   589,
     590,   590,   591,   591,   592,   593,   593,   593,   594,   594,
     595,   595,   596,   596,   596,   597,   598,   598,   599,   599,
     600,   601,   601,   601,   601,   602,   602,   603,   603,   604,
     604,   604,   605,   605,   605,   605,   605,   605,   606,   606,
     607,   607,   607,   607,   608,   609,   609,   609,   609,   609,
     609,   609,   609,   610,   610,   611,   611,   611,   611,   611,
     611,   611,   611,   612,   612,   612,   612,   612,   612,   612,
     612,   612,   612,   612,   612,   612,   612,   612,   612,   613,
     613,   613,   613,   613,   613,   613,   614,   614,   615,   615,
     615,   616,   616,   616,   617,   617,   618,   618,   619,   619,
     620,   620,   621,   622,   622,   623,   623,   624,   624,   625,
     625,   626,   626,   627,   627,   628,   628,   629,   629,   630,
     630,   630,   630,   630,   631,   632,   632,   633,   633,   634,
     634,   635,   635,   635,   635,   635,   635,   635,   635,   635,
     635,   635,   635,   635,   635,   636,   637,   637,   637,   638,
     638,   639,   639,   640,   640,   641,   641,   641,   641,   641,
     641,   641,   641,   642,   642,   643,   643,   643,   643,   643,
     643,   643,   644,   644,   644,   645,   645,   646,   647,   647,
     648,   648,   648,   648,   648,   648,   648,   648,   648,   649,
     649,   650,   650,   650,   651,   651,   652,   652,   653,   653,
     653,   654,   654,   655,   655,   655,   656,   656,   657,   657,
     658,   658,   658,   659,   659,   659,   660,   660,   660,   660,
     661,   661,   662,   662,   662,   662,   663,   663,   664,   664,
     664,   664,   664,   664,   665,   665,   666,   666,   667,   667,
     667,   667,   668,   669,   669,   670,   670,   671,   671,   671,
     671,   671,   672,   673,   673,   673,   674,   674,   675,   675,
     676,   676,   677,   677,   677,   677,   678,   678,   679,   679,
     680,   680,   680,   680,   680,   681,   682,   683,   684,   685,
     685,   686,   686,   687,   687,   688,   688,   689,   689,   690,
     690,   691,   692,   692,   692,   692,   693,   693,   694,   694,
     694,   695,   695,   696,   696,   697,   697,   698,   698,   699,
     699,   700,   700,   700,   700,   700,   700,   700,   701,   701,
     701,   701,   701,   701,   702,   702,   702,   702,   703,   703,
     704,   704,   704,   704,   704,   705,   705,   705,   705,   706,
     706,   707,   707,   708,   708,   708,   708,   709,   709,   710,
     711,   711,   712,   712,   713,   713,   714,   714,   715,   715,
     716,   717,   717,   718,   718,   719,   719,   720,   720,   721,
     721,   721,   721,   721,   721,   721,   721,   722,   722,   722,
     723,   723,   723,   723,   723,   723,   723,   724,   724,   724,
     724,   725,   726,   726,   727,   727,   727,   727,   727,   727,
     727,   727,   727,   727,   727,   728,   728,   729,   729,   730,
     730,   731,   732,   733,   733,   734,   734,   735,   736,   737,
     737,   737,   737,   737,   737,   738,   738,   739,   739,   739,
     739,   740,   741,   741,   741,   742,   742,   743,   743,   744,
     744,   745,   745,   746,   746,   747,   747,   748,   748,   749,
     749,   750,   750,   750,   750,   750,   750,   750,   750,   750,
     750,   750,   750,   750,   750,   750,   750,   751,   751,   751,
     751,   751,   751,   751,   751,   751,   751,   751,   751,   751,
     751,   751,   751,   751,   751,   751,   751,   751,   751,   751,
     751,   751,   751,   751,   751,   751,   751,   751,   751,   751,
     751,   751,   751,   751,   751,   751,   751,   751,   751,   751,
     751,   751,   751,   751,   751,   751,   751,   751,   751,   751,
     751,   751,   751,   751,   751,   751,   751,   751,   751,   751,
     751,   751,   751,   751,   751,   751,   751,   752,   752,   752,
     752,   752,   752,   752,   752,   752,   752,   752,   752,   752,
     752,   752,   752,   752,   752,   752,   752,   752,   752,   752,
     752,   753,   753,   753,   753,   753,   753,   753,   753,   753,
     753,   753,   753,   754,   754,   754,   754,   754,   754,   754,
     755,   755,   756,   756,   757,   757,   757,   757,   757,   757,
     757,   757,   757,   757,   757,   757,   757,   757,   757,   757,
     757,   757,   757,   757,   757,   757,   757,   757,   757,   757,
     757,   757,   757,   758,   758,   759,   759,   760,   760,   761,
     761,   762,   762,   763,   764,   764,   764,   765,   766,   766,
     767,   767,   768,   768,   768,   769,   769,   770,   770,   770,
     770,   770,   771,   771,   772,   772,   773,   774,   774,   775,
     775,   776,   776,   776,   777,   777,   778,   778,   778,   778,
     778,   778,   778,   778,   778,   778,   778,   778,   778,   779,
     779,   780,   780,   781,   781,   781,   781,   781,   781,   781,
     781,   782,   782,   783,   783,   784,   784,   785,   785,   786,
     786,   787,   787,   787,   788,   788,   789,   789,   790,   790,
     790,   790,   790,   790,   790,   790,   790,   790,   791,   791,
     792,   793,   793,   794,   794,   794,   794,   794,   794,   795,
     796,   797,   797,   797,   798,   798,   799,   800,   800,   801,
     802,   802,   803,   803,   804,   804,   805,   805,   805,   806,
     806,   807,   807,   808,   808,   809,   809,   810,   810,   811,
     811,   812,   812,   813,   813,   813,   813,   813,   814,   814,
     815,   815,   816,   817,   817,   818,   818,   819,   819,   819,
     820,   820,   821,   821,   822,   822,   823,   823,   824,   825,
     826,   826,   827,   827,   827,   827,   827,   827,   827,   827,
     827,   827,   827,   827,   827,   827,   828,   829,   830,   830,
     830,   831,   831,   832,   832,   832,   833,   833,   833,   834,
     834,   834,   835,   835,   836,   836,   837,   837,   838,   839,
     839,   839,   839,   840,   840,   841,   842,   842,   843,   843,
     843,   843,   844,   844,   845,   845,   846,   846,   846,   846,
     847,   847,   848,   849,   849,   850,   850,   851,   851,   852,
     852,   853,   853,   854,   854,   854,   854,   854,   854,   855,
     855,   856,   857,   858,   858,   858,   858,   859,   859,   860,
     860,   860,   861,   861,   861,   861,   861,   862,   862,   862,
     863,   863,   864,   864,   865,   865,   866,   866,   866,   866,
     867,   868,   868,   869,   869,   869,   869,   870,   870,   870,
     870,   871,   871,   871,   871,   872,   872,   873,   873,   873,
     873,   873,   873,   873,   874,   874,   875,   875,   875,   876,
     876,   877,   877,   877,   877,   877,   878,   878,   878,   878,
     878,   879,   879,   880,   880,   881,   881,   882,   883,   883,
     883,   884,   884,   885,   885,   886,   886,   887,   888,   888,
     889,   889,   889,   890,   890,   890,   890,   890,   890,   890,
     890,   891,   891,   892,   892,   893,   894,   894,   894,   894,
     895,   895,   895,   895,   896,   896,   896,   897,   897,   897,
     898,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   900,   900,
     900,   900,   900,   900,   900,   900,   900,   900,   900,   900,
     900,   900,   900,   900,   900,   900,   900,   900,   900,   900,
     900,   900,   900,   900,   900,   900,   900,   900,   900,   900,
     900,   900,   900,   900,   900,   900,   900,   900,   900,   900,
     900,   900,   900,   900,   900,   900,   900,   900,   900,   900,
     900,   901,   901,   901,   901,   901,   901,   901,   901,   901,
     901,   901,   901,   901,   901,   901,   901,   901,   901,   901,
     901,   901,   901,   901,   901,   901,   901,   901,   902,   902,
     902,   902,   902,   902,   902,   902,   902,   902,   902,   902,
     902,   902,   902,   902,   902,   902,   902,   902,   902,   902,
     902,   902,   902,   903,   903,   903,   903,   903,   903,   903,
     903,   903,   903,   903,   903,   903,   903,   903,   903,   903,
     903,   903,   903,   903,   903,   903,   903,   903,   903,   903,
     903,   903,   903,   903,   903,   903,   903,   903,   903,   903,
     903,   903,   903,   903,   903,   903,   903,   903,   903,   903,
     903,   903,   903,   903,   903,   903,   904,   904,   904,   904,
     904,   904,   904,   904,   904,   904,   904,   904,   904,   904,
     904,   904,   904,   904,   904,   904,   904,   904,   904,   904,
     904,   904,   904,   904,   905,   905,   905,   905,   905,   905,
     905,   905,   905,   905,   905,   905,   905,   905,   905,   905,
     905,   905,   905,   905,   905,   905,   905,   905,   905,   905,
     905,   905,   905,   905,   905,   905,   905,   905,   905,   905,
     905,   905,   905,   905,   905,   905,   905,   905,   905,   905,
     905,   905,   905,   905,   905,   905,   905,   905,   905,   905,
     905,   905,   905,   905,   905,   905,   905,   905,   905,   905,
     905,   905,   905,   905,   905,   905,   905,   905,   905,   905,
     905,   905
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       4,     6,     4,     6,     4,     6,     4,     6,     1,     2,
       3,     2,     1,     3,     2,     3,     1,     3,     2,     5,
       3,     6,     4,     6,     6,     6,     5,     5,     6,     9,
       4,     5,     7,     6,     4,     8,     4,     2,     4,     3,
       6,     4,     2,     2,     2,     2,     1,     2,     0,     1,
       2,     2,     2,     1,     3,     4,     2,     1,     0,     2,
       3,     2,     3,     6,     6,     8,     6,     8,     6,     8,
       6,     8,     8,    10,     8,    10,     1,     0,     7,     1,
       4,     4,     7,     2,     1,     3,     4,     3,     0,     1,
       0,     2,     3,     5,     8,     5,     0,     5,     5,     7,
       2,     0,     1,     1,     1,     3,     2,     0,     1,     0,
       1,     3,     1,     3,     1,     2,     1,     3,     2,     8,
       5,     1,     0,     1,     3,     2,     4,     5,     5,     8,
       1,     0,     3,     9,    12,     3,     0,     4,     6,     1,
       2,     1,     1,     0,     1,     2,     2,     1,     2,     2,
       1,     2,     3,     2,     2,     2,     2,     3,     3,     3,
       1,     3,     1,     0,     1,     2,     2,     2,     2,     2,
       2,     2,     2,     1,     1,     0,     9,    12,    11,     0,
       2,     1,     1,     1,     1,     1,     1,     3,     0,     1,
       2,     1,     1,     2,     2,     3,     1,     1,     2,     2,
       1,     2,     3,     5,     3,     2,     5,     1,     1,     1,
       0,     5,     7,     5,     2,     3,     1,     1,     2,     2,
       0,     3,     4,     4,     0,     3,     2,     0,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     3,
       3,     1,     2,     2,     2,     2,     2,     2,     0,     3,
       3,     3,     0,     1,     2,     1,     2,     2,     2,     2,
       3,     4,     1,     3,     1,     1,     1,     1,     3,     1,
       2,     0,     1,     2,     0,     1,     3,     0,     2,     0,
       3,     3,     1,     5,     3,     1,     3,     1,     2,     1,
       4,     5,     5,     6,     3,     7,     4,    11,     1,     3,
       2,     2,     2,     0,     3,     1,     1,     2,     2,     2,
       2,     1,     0,     1,     2,     6,     4,     6,     4,     6,
       8,     4,     6,     1,     1,     1,     1,     2,     1,     2,
       1,     2,     1,     1,     1,     3,     3,     3,     3,     2,
       2,     1,     3,     1,     1,     1,     1,     3,     1,     1,
       0,     1,     1,     1,     1,     3,     8,     7,     1,     1,
       2,     3,     8,    11,     9,     1,     1,     3,     0,     1,
       3,     1,     0,     1,     0,     1,     0,     1,     3,     1,
       1,     1,     3,     0,     2,     2,     0,     2,     0,     1,
       0,     1,     1,     1,     3,     3,     1,     1,     3,     3,
       3,     3,     4,     3,     2,     1,     1,     1,     1,     1,
       3,     1,     1,     3,     3,     1,     2,     4,     4,     2,
       3,     5,     5,     1,     1,    11,    11,     1,     2,     4,
       4,     4,     2,     2,     3,     1,     3,     6,     2,     0,
       3,     3,     4,     4,     4,     4,     3,     2,     1,     1,
       0,     1,     1,     0,     1,     5,     1,     0,     2,     2,
       0,     1,     0,     3,     5,     5,     1,     3,     4,     3,
       1,     1,     0,     2,     2,     0,     2,     2,     1,     1,
       1,     0,     2,     4,     5,     4,     2,     3,     2,     2,
       2,     2,     1,     2,     3,     0,     1,     0,     5,     1,
       4,     6,     2,     1,     0,     4,     0,     1,     1,     2,
       2,     2,     1,     1,     2,     2,     1,     1,     1,     1,
       1,     1,     3,     3,     3,     0,     1,     3,     1,     2,
       1,     1,     1,     1,     1,     2,     4,     4,     5,     1,
       1,     2,     0,     2,     0,     1,     3,     1,     0,     1,
       2,     3,     2,     4,     2,     3,     2,     0,     1,     2,
       0,     4,     5,     1,     2,     2,     0,     1,     3,     1,
       2,     3,     3,     3,     3,     3,     1,     4,     3,     4,
       5,     4,     5,     4,     5,     2,     4,     1,     1,     0,
       1,     4,     5,     4,     0,     2,     2,     2,     1,     1,
       0,     4,     2,     1,     2,     2,     4,     2,     6,     2,
       1,     3,     4,     0,     2,     0,     2,     0,     1,     3,
       3,     2,     0,     2,     4,     1,     1,     1,     0,     2,
       3,     5,     6,     2,     3,     5,     5,     3,     4,     0,
       1,     1,     1,     1,     1,     2,     4,     1,     1,     1,
       1,     2,     3,     0,     1,     1,     1,     1,     1,     2,
       2,     2,     2,     2,     1,     3,     0,     1,     1,     1,
       1,     5,     2,     1,     1,     1,     1,     4,     1,     2,
       2,     1,     3,     3,     2,     1,     0,     5,     2,     5,
       2,     1,     3,     3,     0,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     3,
       3,     3,     3,     3,     3,     3,     0,     1,     3,     3,
       5,     2,     2,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     2,     2,     3,
       3,     2,     2,     3,     3,     5,     4,     6,     3,     5,
       4,     6,     4,     6,     5,     7,     3,     2,     4,     3,
       2,     1,     3,     3,     3,     3,     3,     3,     4,     3,
       4,     3,     4,     5,     6,     6,     7,     6,     7,     6,
       7,     3,     4,     4,     6,     1,     4,     1,     3,     2,
       2,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     2,     2,     5,     6,     6,
       7,     1,     1,     2,     2,     2,     4,     1,     2,     1,
       2,     2,     4,     3,     6,     7,     9,     7,     7,     4,
       5,     1,     1,     1,     5,     1,     1,     4,     1,     4,
       1,     4,     1,     4,     1,     1,     1,     1,     1,     1,
       6,     6,     4,     4,     4,     4,     6,     5,     5,     5,
       4,     6,     4,     5,     0,     5,     0,     1,     0,     2,
       0,     1,     3,     3,     2,     2,     0,     6,     1,     0,
       3,     0,     2,     2,     0,     1,     4,     2,     2,     2,
       2,     2,     4,     3,     1,     5,     3,     1,     3,     1,
       2,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       4,     1,     4,     1,     4,     1,     2,     1,     2,     1,
       2,     1,     3,     1,     3,     1,     2,     1,     0,     1,
       3,     1,     3,     3,     1,     3,     3,     0,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     4,     3,
       2,     3,     0,     3,     3,     2,     2,     1,     0,     2,
       2,     3,     2,     1,     1,     3,     5,     1,     2,     4,
       2,     0,     1,     0,     1,     2,     2,     3,     5,     1,
       0,     1,     2,     0,     2,     1,     0,     1,     0,     1,
       3,     1,     2,     3,     2,     1,     3,     5,     4,     2,
       1,     0,     3,     1,     3,     1,     2,     4,     2,     0,
       1,     3,     1,     2,     1,     3,     1,     2,     1,     1,
       1,     2,     1,     1,     2,     1,     1,     2,     7,     2,
       5,     3,     3,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     2,     2,     3,     3,     0,     1,     1,
       1,     1,     1,     1,     1,     5,     3,     0,     1,     1,
       1,     1,     4,     7,     2,     0,     1,     1,     1,     1,
      13,    16,     1,     2,     0,     1,     0,     1,     0,     2,
       0,     1,     0,     6,     8,     6,     8,     6,     8,     2,
       1,     4,     3,     2,     4,     3,     5,     1,     0,     1,
       1,     0,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     1,     1,     1,     1,     1,     1,
       2,     1,     1,     2,     3,     3,     3,     1,     3,     3,
       2,     3,     3,     3,     3,     1,     1,     1,     1,     3,
       5,     1,     1,     1,     1,     3,     2,     2,     3,     1,
       1,     4,     5,     5,     4,     6,     1,     1,     1,     1,
       1,     1,     0,     1,     3,     1,     0,     7,     1,     2,
       3,     2,     0,     2,     0,     2,     4,     2,     1,     1,
       1,     2,     3,     2,     2,     2,     2,     3,     4,     2,
       1,     1,     1,     1,     3,     2,     9,    11,    12,    14,
       3,     4,     4,     0,     7,    10,     9,     2,     3,     0,
       4,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1
};

/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
     130,   215,     0,  1185,  1184,   215,     0,  1160,   215,   430,
     352,     0,  1262,     0,   215,     0,   130,     0,     0,     0,
       0,     0,     0,     0,     0,   215,   497,     0,  1261,   215,
       0,     0,  1232,     0,     0,     0,     0,     0,     2,     4,
       7,    18,    30,    26,     0,    17,    28,    15,    21,     6,
      32,    16,    20,    13,    33,    11,    31,   464,   451,   502,
     463,   129,   603,   467,    29,    14,    25,     5,    10,    23,
      24,    22,  1168,    36,    27,    34,    19,     8,    35,    37,
    1260,     9,    38,    12,   214,   213,   207,     0,     0,     0,
       0,     0,   208,  1098,  1281,  1282,  1283,  1284,  1285,  1286,
    1287,  1288,  1289,  1290,  1291,  1292,  1293,  1294,  1295,  1296,
    1641,  1297,  1298,  1299,  1588,  1589,  1642,  1590,  1591,  1300,
    1301,  1302,  1303,  1304,  1305,  1306,  1307,  1592,  1593,  1308,
    1309,  1310,  1311,  1312,  1594,  1643,  1313,  1314,  1315,  1316,
    1317,  1318,  1644,  1319,  1320,  1321,  1322,  1323,  1324,  1325,
    1326,  1327,  1645,  1328,  1329,  1330,  1646,  1331,  1332,  1333,
    1334,  1335,  1336,  1337,  1595,  1596,  1338,  1339,  1340,  1341,
    1342,  1343,  1344,  1345,  1346,  1347,  1348,  1349,  1350,  1351,
    1352,  1353,  1354,  1355,  1356,  1357,  1358,  1359,  1360,  1361,
    1362,  1363,  1364,  1365,  1597,  1366,  1367,  1368,  1369,  1370,
    1598,  1371,  1372,  1373,  1599,  1374,  1375,  1376,  1647,  1648,
    1377,  1378,  1600,  1650,  1379,  1380,  1601,  1602,  1381,  1382,
    1383,  1384,  1385,  1386,  1387,  1388,  1651,  1389,  1390,  1391,
    1392,  1393,  1394,  1395,  1396,  1397,  1398,  1399,  1652,  1603,
    1400,  1401,  1402,  1403,  1404,  1604,  1605,  1606,  1405,  1653,
    1654,  1406,  1655,  1407,  1408,  1409,  1410,  1411,  1412,  1413,
    1656,  1414,  1657,  1415,  1416,  1417,  1418,  1419,  1420,  1421,
    1422,  1607,  1423,  1424,  1425,  1426,  1427,  1428,  1429,  1430,
    1431,  1432,  1433,  1434,  1435,  1436,  1437,  1438,  1439,  1440,
    1608,  1659,  1609,  1441,  1442,  1443,  1610,  1444,  1445,  1660,
    1446,  1611,  1447,  1612,  1448,  1449,  1450,  1451,  1452,  1453,
    1454,  1455,  1456,  1613,  1661,  1457,  1662,  1614,  1458,  1459,
    1460,  1461,  1462,  1463,  1464,  1465,  1466,  1467,  1468,  1469,
    1615,  1470,  1471,  1616,  1472,  1473,  1474,  1475,  1476,  1477,
    1478,  1479,  1480,  1481,  1482,  1483,  1617,  1484,  1485,  1486,
    1487,  1488,  1489,  1490,  1491,  1492,  1493,  1494,  1495,  1496,
    1497,  1498,  1499,  1500,  1501,  1502,  1663,  1503,  1504,  1505,
    1618,  1506,  1507,  1508,  1509,  1510,  1511,  1512,  1513,  1514,
    1515,  1516,  1517,  1518,  1519,  1520,  1521,  1522,  1619,  1523,
    1524,  1525,  1664,  1526,  1527,  1620,  1528,  1529,  1530,  1531,
    1532,  1533,  1534,  1535,  1536,  1537,  1538,  1539,  1540,  1621,
    1541,  1622,  1542,  1543,  1544,  1545,  1666,  1546,  1547,  1548,
    1549,  1550,  1623,  1624,  1551,  1552,  1625,  1553,  1626,  1554,
    1555,  1627,  1556,  1557,  1558,  1559,  1560,  1561,  1562,  1563,
    1564,  1565,  1566,  1567,  1568,  1569,  1570,  1628,  1629,  1571,
    1667,  1572,  1573,  1574,  1575,  1576,  1577,  1578,  1579,  1580,
    1581,  1582,  1583,  1630,  1631,  1632,  1633,  1634,  1635,  1636,
    1637,  1638,  1639,  1640,  1584,  1585,  1586,  1587,  1265,     0,
       0,  1080,  1099,  1100,  1108,   210,   429,   130,     0,     0,
       0,     0,     0,   346,   345,     0,  1151,   351,     0,     0,
    1098,   101,  1600,  1607,  1472,  1621,    99,  1078,  1099,     0,
     372,   373,     0,   381,     0,   365,   370,   366,     0,   391,
     383,   392,   384,   364,   385,   374,   363,     0,   393,     0,
     368,     0,     0,     0,   211,   176,   352,   130,     0,  1173,
    1174,  1172,  1163,  1168,  1175,  1176,     0,  1159,     0,     0,
    1097,  1219,  1220,  1217,  1216,   165,  1127,  1249,  1623,  1551,
    1263,  1250,  1247,  1248,   212,   496,   494,     0,  1048,  1379,
    1417,  1510,  1521,  1623,  1193,  1197,     0,   209,  1628,  1254,
       0,  1255,  1102,     0,   468,   643,  1101,  1072,  1231,     0,
    1236,     0,  1486,   472,   475,  1117,   473,   464,     0,     1,
     130,     0,     0,     0,   493,   493,     0,   493,     0,   456,
     464,   459,   463,   604,  1167,  1245,  1259,  1623,  1551,  1253,
    1256,  1387,     0,     0,  1387,     0,  1387,     0,  1387,     0,
       0,  1040,     0,  1041,  1081,  1129,  1130,  1128,     0,  1131,
     317,   350,   349,   348,   347,   352,  1387,  1135,  1112,     0,
     398,   399,     0,     0,     0,     0,     0,  1146,   102,   100,
     379,   380,     0,   371,   367,   369,     0,  1109,  1668,   697,
    1669,   726,   704,   726,   726,  1670,  1671,  1672,  1673,   693,
     693,  1353,   706,  1674,  1675,  1676,  1387,  1677,  1678,   694,
     695,   731,  1679,  1680,  1681,  1682,  1683,     0,     0,  1684,
     726,  1685,   693,  1686,  1687,   698,  1688,   665,     0,  1689,
     696,   666,  1690,   734,   734,  1691,   721,  1692,   390,     0,
     394,   679,   680,   681,   682,   707,   708,   683,   713,   714,
     718,   684,   766,   693,  1110,  1111,  1387,   390,   386,  1387,
     390,  1074,  1387,     0,     0,   172,     0,     0,  1165,  1177,
    1693,  1694,  1695,  1696,  1698,  1697,  1699,  1700,  1701,  1702,
    1703,  1704,  1705,  1706,  1707,  1708,  1711,  1709,  1710,  1712,
    1713,  1714,  1715,  1716,  1717,  1718,  1719,  1720,  1721,  1722,
    1723,  1724,  1725,  1726,  1727,  1728,  1729,  1730,  1731,  1732,
    1733,  1734,  1735,  1736,  1737,  1738,  1739,  1740,  1741,  1742,
    1743,  1744,  1745,  1191,     0,  1192,  1182,  1171,  1178,  1179,
     130,   428,  1218,  1162,     0,     0,     0,     0,  1251,     0,
       0,     0,  1083,  1085,  1086,   969,  1096,  1043,     0,  1589,
    1590,  1591,  1033,     0,  1592,  1593,  1594,  1643,   898,   885,
     894,   899,   886,   888,   895,  1595,  1596,   835,  1597,  1598,
    1094,  1599,  1601,  1602,  1604,  1605,  1606,   890,   892,  1608,
    1609,     0,  1095,  1611,  1612,  1453,  1614,  1615,  1617,  1618,
     896,  1620,  1622,  1623,  1624,  1625,  1626,  1093,  1627,   897,
    1629,     0,     0,     0,  1061,   988,     0,     0,     0,  1043,
     869,     0,     0,   687,   688,   709,   710,   689,   715,   716,
     690,     0,  1055,   767,   914,  1043,   881,   944,   811,     0,
     867,   861,  1051,   479,  1049,     0,   862,  1082,  1043,  1034,
     479,  1047,  1196,  1194,  1200,  1195,     0,     0,     0,     0,
       0,   645,   644,  1073,  1230,  1228,  1229,  1227,  1226,  1233,
       0,  1235,  1168,   983,   985,     0,  1034,   474,     0,     0,
       0,   454,   453,     3,     0,     0,  1238,     0,   491,   492,
       0,     0,     0,     0,     0,     0,     0,     0,   588,   518,
     519,   521,   585,   589,   597,     0,   460,     0,  1117,  1257,
       0,     0,     0,   117,   117,     0,     0,     0,     0,     0,
      93,    42,    86,     0,     0,     0,     0,   190,   203,     0,
       0,     0,     0,     0,   200,     0,     0,   183,    44,   177,
     179,     0,   117,     0,    40,     0,     0,     0,    46,  1098,
       0,  1641,  1642,  1643,  1644,  1645,   899,     0,  1647,  1648,
    1600,  1650,  1651,  1652,  1653,  1654,  1655,  1656,  1657,  1607,
    1659,  1660,  1661,  1662,  1663,  1664,  1621,  1666,  1627,     0,
    1667,     0,   873,   991,   502,   989,  1118,     0,  1099,  1105,
    1039,     0,  1119,  1774,  1775,  1776,  1777,  1778,  1779,  1780,
    1781,  1782,  1783,  1784,  1785,  1786,  1787,  1788,  1789,  1790,
    1791,  1792,  1793,  1794,  1795,  1796,  1797,  1798,  1799,  1800,
    1801,  1802,  1803,  1804,  1805,  1806,  1807,  1808,  1809,  1810,
    1811,  1812,  1813,  1814,  1815,  1816,  1817,  1818,  1819,  1820,
    1821,  1822,  1823,  1824,  1825,  1826,  1827,  1828,  1829,  1830,
    1831,  1832,  1833,  1834,  1835,  1836,  1837,  1838,  1839,  1840,
    1841,  1842,  1843,  1844,  1845,  1846,  1733,  1847,  1848,  1849,
    1850,  1851,  1036,  1079,  1121,  1120,  1122,  1042,     0,     0,
     426,     0,     0,  1132,     0,  1113,     0,     0,  1387,   171,
    1387,   317,     0,   317,     0,  1145,  1148,   382,   378,   376,
     375,   377,   725,   712,   720,   719,     0,   702,   701,   700,
       0,   699,     0,     0,   726,   726,   724,   703,   679,     0,
       0,     0,   730,     0,   728,   388,   389,     0,   361,     0,
     673,   669,     0,   739,   740,   741,   742,   749,   750,   747,
     748,   743,   744,   737,   738,   745,   746,   735,   736,     0,
     751,   752,   753,   754,   755,   756,   757,   758,   685,   691,
       0,     0,   356,     0,     0,   358,     0,     0,     0,   352,
       0,   130,     0,   184,  1187,  1188,  1186,     0,     0,  1170,
     187,   204,  1181,  1190,  1180,  1189,  1169,  1164,     0,  1161,
     417,  1206,  1205,  1214,   166,     0,   994,     0,   130,  1252,
    1264,     0,   865,   988,  1032,     0,     0,     0,     0,     0,
       0,   871,   997,     0,     0,   791,     0,     0,     0,  1012,
       0,  1018,     0,     0,     0,   792,   771,   772,     0,  1060,
    1069,   987,     0,   869,   983,     0,   947,   949,     0,  1101,
       0,   863,   864,   870,     0,  1089,     0,   766,   766,  1054,
     969,     0,   962,     0,     0,   966,   967,   968,     0,     0,
       0,  1046,     0,   977,   979,     0,     0,   807,   975,     0,
     810,     0,     0,     0,     0,   963,   964,   965,   956,   957,
     958,   959,   960,   961,   973,   955,   788,     0,     0,   916,
     868,     0,   787,  1052,     0,   606,     0,  1087,  1084,     0,
    1035,   606,  1208,  1212,  1213,  1211,     0,  1207,  1199,  1198,
    1203,  1201,  1204,  1202,     0,  1224,     0,  1221,   986,   601,
     476,     0,     0,  1244,     0,   124,     0,  1239,     0,   471,
     470,   512,   512,   503,   506,   512,   469,   560,   561,     0,
       0,     0,     0,   594,   592,  1083,  1096,   548,   522,   547,
       0,     0,   526,     0,   552,   767,   587,   458,   516,   517,
     520,   457,     0,   590,     0,   600,   588,   521,     0,  1246,
    1258,     0,     0,     0,     0,     0,  1387,     0,     0,    77,
      58,   269,   668,   116,     0,     0,     0,     0,     0,     0,
       0,    85,    82,    83,    84,     0,     0,     0,     0,   188,
     189,   202,     0,   193,   194,   191,   195,   196,     0,     0,
     181,   182,     0,     0,     0,     0,   180,     0,     0,     0,
       0,     0,     0,     0,     0,   502,   502,   502,   879,     0,
     500,   501,     0,     0,  1037,  1040,   416,   325,     0,   315,
       0,     0,     0,     0,     0,     0,   352,  1138,  1136,  1134,
    1137,  1139,  1114,     0,     0,     0,   160,     0,     0,   168,
     170,     0,   314,   288,     0,  1150,     0,     0,  1387,  1147,
     304,     0,     0,     0,     0,   390,     0,   723,   722,   674,
     670,     0,     0,     0,     0,   395,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   390,   387,   390,  1075,
       0,   390,   175,     0,  1387,   317,     0,  1166,  1183,   185,
     205,   186,   206,   449,     0,   423,   431,   436,   414,     0,
     414,     0,   433,   437,   414,   432,   414,   427,     0,   167,
       0,  1126,     0,  1125,     0,  1044,     0,     0,  1031,  1027,
       0,     0,     0,     0,     0,   998,   999,  1000,  1001,  1002,
    1003,  1004,  1005,  1006,     0,     0,  1007,     0,     0,     0,
     954,   962,   966,   967,   968,   963,   964,   965,   956,   957,
     958,   959,   960,   961,   981,     0,     0,     0,     0,     0,
       0,     0,     0,   837,     0,     0,   943,     0,   983,  1017,
       0,     0,     0,     0,     0,     0,   983,  1023,     0,     0,
       0,  1059,     0,  1056,   813,  1043,     0,   950,   812,     0,
       0,     0,  1091,  1092,   768,   779,   814,   815,   783,   784,
     785,   789,  1124,  1123,  1053,     0,  1045,     0,     0,   769,
     793,   798,     0,  1024,   831,     0,   819,     0,   806,     0,
     817,   821,   794,   809,     0,   790,     0,  1046,   978,   980,
       0,   976,     0,   780,   781,   782,   773,   774,   775,   776,
     777,   778,   786,   953,   951,   952,     0,     0,     0,   918,
       0,     0,   816,  1050,  1379,  1417,     0,   490,   490,   490,
     478,   488,     0,   657,   502,  1061,   657,     0,   766,   646,
    1117,  1234,  1222,  1223,   984,  1116,   130,     0,  1242,     0,
       0,     0,   136,   119,     0,  1240,     0,   152,   154,   606,
       0,  1043,   510,   511,   515,   515,     0,     0,   515,  1618,
    1506,     0,     0,     0,     0,   553,   595,     0,   586,   550,
     551,     0,   549,  1083,   554,  1082,   555,   558,   559,   527,
     596,  1070,   598,     0,   591,   462,   461,   602,     0,    43,
       0,  1387,    60,     0,     0,     0,     0,     0,     0,   219,
       0,   319,   219,    98,  1387,   390,  1387,   390,  1285,  1354,
    1522,     0,    56,    89,     0,   293,   110,     0,   278,   322,
      79,    94,   103,     0,     0,    45,   178,   192,   197,   106,
     201,   198,  1155,   199,   117,     0,    41,     0,   104,     0,
    1153,     0,     0,    47,   108,  1157,   500,   500,   500,     0,
     990,     0,     0,     0,   992,   993,  1039,     0,   415,     0,
     316,     0,   425,   405,   406,   416,     0,   317,     0,   317,
    1135,     0,     0,  1115,   162,     0,     0,     0,     0,   307,
     305,   338,     0,   312,   306,   315,     0,     0,   264,     0,
    1279,     0,     0,   400,     0,     0,     0,     0,     0,   692,
     705,   362,   679,     0,   733,   732,   734,   734,   679,     0,
     663,     0,   677,     0,   717,   686,   759,   760,   761,   762,
     763,   764,   765,   355,   357,     0,   359,     0,     0,     0,
     418,     0,   421,     0,   420,   424,   419,   413,     0,   444,
       0,     0,     0,     0,     0,     0,  1215,   995,   495,   836,
       0,     0,  1028,     0,     0,   912,     0,   887,   889,   902,
       0,   891,   893,     0,   970,     0,     0,     0,   903,   839,
     840,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   856,
     855,   904,   942,     0,     0,  1015,  1016,     0,   905,     0,
       0,  1022,     0,     0,     0,   910,     0,  1076,     0,     0,
       0,  1068,   866,   984,   948,   946,   872,   766,     0,     0,
       0,     0,     0,     0,     0,   820,   808,     0,   818,   822,
       0,     0,     0,   802,     0,     0,   800,   832,   796,     0,
       0,   833,     0,     0,   917,   926,   490,   490,   490,   490,
     487,   489,     0,     0,     0,     0,  1506,     0,   629,   609,
     605,   607,   616,   629,   634,   882,   655,   883,  1101,     0,
     565,   500,  1069,   565,     0,  1209,  1225,     0,  1243,     0,
     141,   123,   143,   142,     0,   150,     0,  1043,     0,   141,
     125,     0,   144,   155,  1242,     0,   158,     0,   504,   505,
     507,     0,   971,   515,   509,   557,   556,     0,   525,   593,
     523,     0,   599,     0,     0,     0,   268,     0,     0,     0,
     219,     0,   327,     0,   334,     0,     0,   319,   300,    78,
       0,     0,     0,    52,    97,    70,    62,    48,    76,     0,
       0,    81,     0,    74,    91,    92,    90,    95,     0,   254,
     229,   265,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   502,   498,
     499,   874,  1038,   447,   448,   183,   446,   326,     0,     0,
     314,     0,  1150,  1133,   352,     0,     0,   161,   163,     0,
     171,   317,     0,   292,   288,   313,   286,   285,   287,     0,
    1280,   176,     0,  1274,  1149,     0,   401,     0,   397,     0,
    1144,   711,   676,     0,   729,   727,   675,     0,   671,   678,
     390,     0,   450,     0,   409,   445,   434,   439,     0,   443,
     441,   440,   435,   438,     0,  1030,  1026,     0,   884,   996,
       0,   982,  1010,  1009,   838,   847,   851,   852,   853,  1011,
       0,     0,     0,   848,   849,   850,   841,   842,   843,   844,
     845,   846,   854,  1020,  1019,  1013,  1014,     0,   907,   908,
     909,  1021,     0,  1077,  1058,   983,  1063,  1065,     0,     0,
     945,  1090,   770,     0,     0,   799,  1025,   823,     0,     0,
       0,   795,   970,     0,     0,     0,     0,     0,   804,     0,
       0,     0,     0,   880,     0,     0,     0,     0,   481,   480,
     486,   629,   634,     0,   464,     0,   616,     0,   628,   544,
     627,   610,     0,   640,   638,     0,   640,     0,   640,     0,
     544,     0,   630,   544,   627,     0,   647,  1073,   656,     0,
     582,     0,  1057,   582,     0,   477,  1241,     0,  1237,     0,
       0,     0,   131,   128,   118,     0,     0,   153,   141,   132,
     513,   514,     0,   508,   524,  1071,   111,   219,     0,     0,
      59,     0,   336,   280,   328,   311,   295,     0,     0,     0,
     220,     0,   353,     0,     0,   301,     0,     0,     0,     0,
     281,     0,     0,   240,     0,     0,   311,     0,   318,   236,
     237,     0,    51,    71,     0,    67,     0,    96,     0,     0,
       0,     0,     0,    54,    66,     0,    49,     0,   390,   390,
      57,   279,  1109,  1668,  1669,  1670,  1671,  1672,  1673,  1674,
    1675,  1754,  1676,  1677,  1678,  1679,  1680,  1681,  1682,  1683,
    1763,  1684,   226,  1685,  1453,  1686,  1687,  1688,     0,  1689,
     666,  1690,  1691,  1692,   956,   957,   224,   321,   221,   329,
     223,   225,     0,  1110,   222,   324,   107,  1156,     0,   105,
       0,  1154,   114,   112,   109,  1158,   877,   878,   875,   500,
     428,   408,     0,     0,  1279,     0,     0,  1387,     0,   159,
       0,  1150,   169,   314,     0,   344,   264,   339,     0,  1279,
    1277,     0,  1273,   396,     0,     0,     0,   672,   664,   360,
       0,   422,     0,   442,  1029,   900,   911,  1008,     0,     0,
       0,     0,   906,   901,  1066,  1067,  1062,   829,   827,   824,
       0,   825,   803,     0,     0,   801,   797,     0,   834,   913,
       0,   929,   924,   925,   485,   484,   483,   482,   615,   613,
       0,   618,  1101,   625,   537,   543,   614,     0,   608,     0,
     639,   635,     0,   636,     0,     0,   637,     0,   611,     0,
    1101,   612,     0,   654,     0,     0,   920,   874,   920,  1210,
     140,   120,     0,   121,   151,     0,     0,     0,     0,   145,
     402,     0,   332,    61,     0,   311,     0,   219,   297,   296,
     299,   294,   298,     0,   354,     0,     0,   238,     0,   245,
     283,   284,   282,   239,   311,   317,   241,     0,     0,     0,
      63,    53,    50,    55,    64,     0,     0,    65,    68,   662,
      80,    73,  1763,  1770,     0,     0,     0,     0,     0,     0,
     404,   411,   183,     0,     0,   288,  1276,     0,     0,     0,
     314,   164,     0,     0,     0,  1279,     0,     0,   216,     0,
     261,     0,   173,  1278,     0,  1266,     0,  1142,  1143,     0,
       0,   410,   857,     0,     0,     0,  1064,   826,   830,   828,
     805,   915,   931,   928,   650,     0,   653,   617,     0,     0,
     532,   539,     0,   542,   536,     0,   619,     0,     0,   621,
     623,     0,     0,     0,   658,     0,     0,     0,  1078,   563,
    1329,  1601,  1505,   564,     0,   568,   562,   566,   571,   573,
     572,   574,   570,   581,     0,   584,  1088,   584,     0,     0,
       0,     0,   156,     0,   147,   147,     0,   133,   972,     0,
     219,     0,   310,   333,   250,   228,     0,     0,     0,   235,
     242,   343,   244,     0,    72,     0,    88,     0,     0,   323,
     115,   113,   876,   428,     0,  1150,   264,  1273,     0,     0,
       0,   288,   176,  1275,   277,   270,   271,   272,   273,   274,
     275,   276,   291,   290,   262,   263,     0,     0,     0,  1144,
       0,   858,     0,   859,     0,   502,   655,     0,     0,   649,
       0,   530,   528,   531,   533,   529,     0,     0,   626,   642,
       0,   622,   620,   631,     0,   662,     0,   633,     0,     0,
       0,   575,   569,   919,   921,     0,     0,   535,   535,     0,
     127,     0,   657,     0,     0,   149,   149,   135,     0,   317,
     335,     0,   302,   309,   248,   247,   249,   253,     0,   251,
       0,   267,     0,   260,   228,   661,     0,    75,     0,   330,
     403,   407,     0,   218,  1267,   314,     0,  1273,   264,  1279,
       0,  1270,     0,     0,  1150,   860,     0,   934,   648,   651,
       0,   624,     0,     0,     0,   659,   660,   632,     0,     0,
       0,   567,     0,     0,   583,     0,   466,   465,   122,   147,
     126,   157,   146,   512,   148,   512,     0,   343,   289,     0,
       0,     0,   250,     0,   243,   340,   341,   342,     0,   256,
     246,   257,    69,    87,   331,     0,   314,  1268,   217,   174,
    1271,  1272,     0,   657,   930,     0,     0,     0,     0,   540,
       0,   546,   641,   577,     0,   576,   922,   923,   537,   149,
     515,   515,   657,   260,   303,   308,   227,   252,   266,     0,
       0,     0,   258,     0,   259,  1273,     0,  1140,  1588,  1330,
    1558,     0,   932,   935,   933,   927,   652,     0,     0,   538,
     578,   534,   512,   138,   137,   134,   219,   232,     0,   231,
       0,   320,   255,  1269,  1150,     0,   939,   938,   937,   941,
     940,   541,     0,   515,   337,   230,   234,   233,   657,     0,
       0,   139,  1141,   936,   545
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    37,    38,    39,    40,  2165,  2166,  2167,  1841,   990,
    2887,  1842,   991,   992,  2169,    41,    42,  1455,   539,  1772,
    1394,  2617,    44,  2115,  1777,  2119,  2762,  2378,  2114,  2121,
    2865,  2933,  2116,  1778,  1779,  2763,  1780,    45,  2216,  2217,
      46,    47,  1529,    48,   745,    49,  1530,  1482,  1261,  1010,
    1472,  1250,    50,    86,    51,  2154,  2487,  2879,  2179,  3021,
    2428,  2429,  2876,  2877,  2157,  1843,  2949,  2950,  2230,  1464,
    2944,  1909,  2812,  1847,  1829,  2430,  1918,  2772,  2525,  1844,
    2410,  1910,  2871,  1539,  1911,  2872,  2627,  1912,  1507,  1533,
    2158,  2951,  1848,  1508,  2153,  2488,  1451,  1913,  2883,  1914,
     498,  2414,    52,   531,   532,   737,  1198,   533,   718,    53,
     656,  1537,   540,    55,  1895,  2672,  2253,  2673,  1968,  1889,
    1259,  1965,  1583,  1511,  1260,   488,  1597,  2254,  2205,  1584,
     541,   890,    58,    59,    60,   580,   593,   594,  1365,  1750,
    2082,   960,   567,   568,  1883,   608,  1501,  1403,  1404,  1784,
    2128,  1430,  1431,   969,   970,  2721,  2926,  2722,  2723,  2585,
    2586,  3009,  1418,  1422,  1423,  1804,  1794,  1409,  2370,  2745,
    2746,  2747,  2748,  2749,  2750,  2751,   891,  2606,  2857,  1426,
    1427,   972,   973,   974,  1435,  1814,    62,    63,  1753,  2089,
    2090,  2091,  2092,  2348,  2349,  2363,  2359,  2591,  2729,  2093,
    2094,  2714,  2715,  2829,  2366,  2100,  2733,  2734,  2786,  1556,
     719,  1830,  1266,  1201,   721,   892,   722,  1177,   893,  1181,
     724,   894,   895,   896,   727,   897,   898,   899,   730,  1173,
     900,   901,  1192,  1220,  1221,  1222,  1223,  1224,  1225,  1226,
    1227,  1228,   943,  1652,   903,   904,   905,  2096,   906,  1359,
    1739,  2075,  2755,  2853,  2854,  2333,  2572,  2712,  2825,  2967,
    3002,  3003,   907,   908,  1306,  1307,  1308,  1736,  1354,  1355,
     909,  2490,  1357,  1645,   944,  1667,  1302,  1054,  1055,  1267,
    1624,  1625,  1648,  1997,  1655,  1660,  2025,  2026,  1668,  1704,
     910,  1608,  1609,  1983,  1275,   911,   633,  1061,   634,  1272,
    1698,   920,   912,   913,   914,  1299,  1300,  2041,  2307,  2308,
    1673,  1810,   585,  2037,  2725,   741,  1142,   915,   916,   917,
     918,   946,   587,  1056,   481,   733,  2934,  1155,   950,  1057,
    1845,  1694,    64,   817,   638,    65,  1153,  1519,    66,  2698,
    2536,  1166,  1541,  1922,   499,    67,    68,    69,    70,    71,
     615,  1253,   542,  1254,  1255,   804,    72,  1262,   806,   807,
      73,   574,   575,  1263,  1378,  1264,    74,   553,    75,   939,
     590,   940,   942,   544,   957,  2110,  1768,    77,    78,   561,
     562,    79,    80,   576,    81,    82,  2695,   545,  2233,  1898,
     508,   483,   484,   735,  1145,  1059,  1146
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -2694
static const int yypact[] =
{
    3114,   107,   828, -2694, -2694,   107, 35237, -2694,   107,    53,
    1703, 40037, -2694, 28949,   107, 46757,   624,   201,   197,   252,
   40517, 40517, 46757, 46757, 40997,   107,   237, 47237, -2694,   107,
   24523, 37637,     6,  -169, 47717, 46757,  1224,   353,   -57, -2694,
   -2694, -2694, -2694, -2694,    98, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694,    96, -2694,    92,
      99,   563,    73, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694,   289, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   24043, -2694, -2694, -2694, -2694, -2694, -2694, 41477, 46757, 41957,
   38117, 42437, -2694,   114, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694,   139, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694,   152, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,   153,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,    37,
     258, -2694,   164, -2694, -2694, -2694, -2694,  1224, 42917,   231,
     461,   206, 48197, -2694, -2694, 46757, -2694, -2694,   666,   532,
   -2694, -2694, -2694, -2694, 43397, -2694, -2694, -2694, -2694,   498,
   -2694, -2694,   341, -2694,    70, -2694, -2694,   367,   344, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694,   451, -2694, 53942,
   -2694, 48677, 49157, 49637, -2694,   339,   693,   396, 23563, -2694,
   -2694, -2694, -2694,   289, -2694, -2694,   840, -2694, 40517,   840,
   -2694, -2694, -2694, -2694, -2694,    57,   355, -2694,   379,   708,
   -2694, -2694, -2694,   386, -2694, -2694,   652, 10612, 10612, 50117,
   50117,   840, 50117,   471, -2694, -2694,    85, -2694,  -169, -2694,
     563,   386, -2694, 25004, -2694,   494,   258, -2694, -2694,   266,
     792, 14147, 46757,   476, -2694,   512,   476,   515,   525, -2694,
    3114,   860,   831, 37637,   243,   243,  1004,   243,   774,   918,
   -2694,  1273, -2694,   575, -2694, 42917, -2694,   601,   887, -2694,
     386,   941,   300,   783,   980,  5665,   998,   522,  1019,   735,
    7077, 14147, 33797, -2694,   258, -2694, -2694, -2694,   655, -2694,
     679, -2694, -2694, -2694, -2694,   795,   927, -2694,   713,  1157,
   -2694, -2694,   813, 43877, 44357, 42917, 42917,  1122, -2694, -2694,
   -2694, -2694,   757, -2694, -2694, -2694,   148, -2694, -2694, -2694,
   -2694,   854, -2694,   854,   854, -2694, -2694, -2694, -2694,   825,
     825,  1022,   835, -2694, -2694, -2694,  1202, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694,   859,   842, -2694,
     854, -2694,   825, -2694, -2694, -2694, -2694, -2694, 55337, -2694,
   -2694, -2694, -2694,  -147,  -140, -2694, -2694, -2694,    62,   865,
   -2694,  1329, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
     869, -2694,  3583,   825, -2694, -2694,  1221,    66, -2694,  1229,
      75, -2694,  1234,  1090, 14147, -2694,  1044,   984, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
    -169, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694,   275, -2694, -2694, 31361, -2694, -2694,
     396,   897, -2694, -2694, 31361, 14652, 54407,  1360, -2694,  1173,
   46757,   909, -2694, -2694, -2694, -2694, -2694, -2694,   933,  1419,
     101,  1445, 14147,   966,   101,   101,   972,  1310, -2694, -2694,
   -2694,   166,   992,  1001, -2694,   168,   168, -2694,  1013,  1017,
   -2694,   169,  1028,  1033,  1476,  1478,   150,  1045,  1062,   842,
     101, 14147, -2694,  1066,   168,  1070,  1073,  1087,  1516,  1098,
   -2694,  1597,  1110,    95,   118,  1112,  1116, -2694,  1126, -2694,
     170, 14147, 14147, 14147,  1393, 14147,  8087, 42917,  1618, -2694,
     258,  1129,   840, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694,   163,  5219, -2694,  1167, -2694, -2694, -2694,  1334, 14147,
   -2694, -2694,  1131,  1416, -2694,   171, -2694, -2694, -2694,   453,
    1416, -2694, -2694, -2694, -2694, -2694,   255,  1537, 30401, 30881,
   42917, -2694, -2694,   258, -2694, -2694, -2694, -2694, -2694, -2694,
     549, -2694,   289, 32748,  1132,  1137,   258,   476, 46757, 46757,
    1603, -2694, -2694, -2694, 37637, 42917, 50597,  1266, -2694, -2694,
     563,   563,  9602,   563,   102,    27, 11117, 15157,  1480,  1363,
     582,   807,  1485, -2694,  1370,   774,   918, 14147,   512, -2694,
    1421, 42917, 35717,   491,   754,  1164,  1247,  1169,    41,  1581,
   -2694,  1171, -2694,  1255, 42917, 55337,   116, -2694,  1619,   116,
     116,   519,  1621,  1263,   195,  1423,   530,  -143,  1171,  2060,
   -2694, 37637,   104,   650,  1171, 42917,  1270,   705,  1171,   119,
   14652,   903,  1042,   306,  1051,  1125,   134, 14652,  1130,  1153,
     136,  1230,  1235,  1339,  1443,  1489,  1491,  1497,  1505,   138,
    1510,  1512,  1521,  1536,  1542,  1546,   149,  1550,   174, 14652,
    1562,  1179, -2694, 32748,   -53, -2694, -2694,  1564,   151, -2694,
   28963,  1180, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,  1272, 46757,
    1232,   581,  1538,  1599, 33797,  1194,  4125, 42917,  1426,  2060,
    1429,  1203,  1666,   679,  1209, -2694, 51077, -2694, -2694, -2694,
   -2694, -2694, -2694,  1212, -2694, -2694, 14147, -2694, -2694, -2694,
    1707, -2694, 54407, 54407,   854,   854, -2694, -2694,  1675,  1302,
    1303,  1707, -2694,  1707, -2694, -2694, -2694, 54407, -2694, 46757,
    1222,  1227,  1707, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,  1707,
    1305, -2694,  1309,  1311,  1316, -2694, -2694, -2694, -2694, -2694,
   46757, 46757, -2694, 46757, 46757, -2694, 46757, 46757,  1236,   795,
   44837,   396, 38597, -2694, -2694, -2694, -2694,   709,   847, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, 33797, -2694,
    2880, -2694, -2694, -2694,  1241,   589, -2694,   634,  1224, -2694,
   -2694, 14147,   258, 14147, 32748,  1277, 14147, 14147,  1238,  1707,
    1707, -2694,  3493,  1707,  1707,  6513, 14147, 27887, 14147, 18692,
   11622, 14147, 14147,  8592, 14147,  6513,  1734,  1734, 25964, -2694,
    1405, -2694,  1252,   900,  5778,  1254, -2694,  1257,  1253, -2694,
    1256, -2694,   258,   258, 14147, -2694, 14147,  3543,  3543, -2694,
     189, 54407, 14147, 14147, 14147, 14147, 14147, 14147, 14147, 33317,
    1354,    87, 46757, 14147, 14147,  1276,   768, -2694, 14147,  1495,
   -2694,  1278, 14147,  1359,   533, 14147, 14147, 14147, 14147, 14147,
   14147, 14147, 14147, 14147, -2694, -2694, 20193,   218,  1598,  1617,
     258,  -112,   199, 10612, 39077,  1610,  7077, -2694,   258, 29441,
     135,  1610, -2694, -2694, -2694, -2694,   172, -2694, -2694, -2694,
   -2694,  1241, -2694,  1241,  1282, 42917,   266, 37157, 14147, -2694,
   -2694,   712,  1284,  1343,     4,  1749, 46757, -2694, 26444,  1577,
   -2694,   244,   244,  1290, -2694, 31838,  1577, -2694, -2694, 19183,
    1415,  1574,  1511, -2694, -2694,  1494,  1499, -2694,  1297, 32811,
   15662, 15662, -2694,  1225, 32748,  1231, -2694, -2694, -2694, -2694,
   -2694, -2694,    69, -2694, 42917,    -3,  1480,   807,  1304, -2694,
   -2694,   881,  1307, 51557, 46757,  1578,  1539,  1585,   173, -2694,
   -2694, -2694, 54407, -2694, 46757, 46757, 52037, 52517, 34277, 46757,
   33797, -2694, -2694, -2694, -2694, 46757,   917, 46757,  6647, -2694,
   -2694, -2694,   116, -2694, -2694, -2694, -2694, -2694, 46757, 46757,
   -2694, -2694,   116, 46757, 46757,   116, -2694,   882, 46757, 46757,
   46757, 46757,   926, 46757, 46757,   -45,   -45,  1517, -2694, 12127,
      50, -2694, 14147, 14147, -2694, 14147,  1490, -2694,   730, -2694,
    1532,    51,  1365, 42917, 42917, 46757,  1295, -2694, -2694, -2694,
   -2694, -2694, -2694, 33797,  1022,  1325, -2694,  1326,  1676, -2694,
    2060,  1678, 36197,   111,   552,  1366, 12632,  1793,  1563, -2694,
   -2694,  1549, 14147,  1337,  1338,    62,   737, -2694, -2694,  1342,
    1227,  1358,  1364,  1345,  1349, -2694,   753, 54407,  1707,    86,
    1350,  1367,  1353,  1204,   628,  1233,    66, -2694,    75, -2694,
    1555,   125, -2694,  1437,  1586,   679,  1822, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694,   761, 23083, -2694, -2694,  1823,   840,
    1823,   470, -2694, -2694,  1823, -2694,  1823, -2694, 31361, -2694,
   14652, -2694, 54407, -2694,  1369, -2694,  1368, 14147,     7, -2694,
   31900,  1372, 14147,  1375,  1376, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694,  1378,  1693, -2694,  1379,  1382,  5089,
   -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694,  1383,  1384, 31936,  1386, 18692,
   18692,  8087,  2493, -2694, 18692,  1387, -2694,  1388, 31851,  1362,
    1389, 31981, 13137, 14147, 13137, 13137, 32390, -2694,  1390, 32469,
   46757, -2694, 16167, -2694, -2694, -2694, 14147, 42917, -2694, 14147,
    1391,  6286, -2694, -2694, -2694,   290,  3559,   199,  2033,  2033,
    2033,  6513, -2694, -2694, -2694,  1402, -2694, 18692, 18692, -2694,
    2802,  1361,  8087, -2694, -2694,  1721, -2694,   796, -2694,  1394,
   -2694, -2694,  2875, -2694, 27887,  5409, 14147,   128, -2694, 14147,
    1276, 14147,  1477,  2033,  2033,  2033,   212,   212,   200,   200,
     200,   290,   199, -2694, -2694, -2694,  1396,  1397,  1398,  1744,
    1098, 14147, -2694, -2694,   487,   592, 42917,  3258,  4714,  4746,
   -2694, -2694, 21643,  1442,   -53,  1393,  1442,  1707,  3543, -2694,
     512, -2694, -2694, -2694, 32748, -2694,  1224, 21643,  1444,  1454,
     -93, 24523,  1623, -2694, 46757, -2694, 46757, -2694,  1401,  1610,
    1417, -2694, -2694, -2694,  1422,  1422, 14147,  2213,  1422,  1620,
    1624,   934,   934,  1225,  1625, -2694, -2694,  1472, -2694, -2694,
   -2694, 14147,  9097,  1260, -2694,  1262, -2694, -2694, -2694, -2694,
    1411, -2694, -2694,  1672, -2694, -2694, -2694, -2694,  1500,  1171,
   14147,  1646, -2694,   121,  1424,  1768,   296,  1724, 46757, -2694,
     215,   284, -2694,   959,  1769,   125,  1774,   125, 33797, 33797,
   33797,   789, -2694, -2694,   840, -2694, -2694,   803, -2694,  -160,
   -2694, -2694, -2694,  1513,   748,  1171,  2060, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694,   105,   802,  1171,  1518, -2694,  1522,
   -2694,  1523,   876,  1171, -2694, -2694,    50,    50,    50, 14652,
   -2694,  1649,  1650,  1458, 32748, 32748, 32748,  1435, -2694,   106,
   -2694, 46757, -2694, -2694, -2694,  1490, 42917,  1460,  1904,   679,
   -2694,  1600,   388, -2694,   840, 46757, 42917, 42917, 42917, -2694,
   -2694, -2694,  1461,  1457, -2694, 52997,   -55,  1679,  1681, 46757,
    1504,  1169,  1928, -2694,   809, 13642,  1817, 42917,  1470, -2694,
   -2694, -2694, -2694,  1707, -2694, -2694,  -142,  -142, -2694, 46757,
   -2694,  1473, -2694,  1474, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, 46757, -2694, 42917,  1821,  1224,
   -2694, 33797, -2694, 36677, -2694, -2694, -2694, -2694,   840, -2694,
     840,  1697, 46757, 29921,   840,   840, -2694, -2694, -2694, -2694,
   32498, 14147, -2694,  1833, 54407, -2694,  6349, -2694, -2694, -2694,
   14147, -2694, -2694, 14147, -2694, 27887, 14147,  1806, -2694,  1968,
    1968,  5778, 54407, 18692, 18692, 18692, 18692, 18692,   564,  1070,
   18692, 18692, 18692, 18692, 18692, 18692, 18692, 18692, 18692, 19688,
     298, -2694, -2694, 14147, 14147,  1814,  1806, 14147, -2694, 54407,
    1482, -2694,  1483,  1502, 14147, -2694, 54407,  1486,  1503,  8087,
   32577, -2694,   258,  6437, -2694, 32748, -2694,  3543, 14147,  1459,
    2589, 14147,  1515, 14147,  1849, -2694, -2694,  1527, -2694, -2694,
   54407, 14147,  1531,  4028, 18692, 18692,  4559, -2694,  5376, 14147,
    8087, -2694,  1517,  1569, -2694,  1737,  1588,  1588,  1588,  1588,
   -2694, -2694, 42917, 42917, 42917, 22123,  1864, 21162, 45317,  1533,
   -2694,  1003, -2694, 45317, 45797, -2694,  1552, -2694,   258, 14147,
    1858,    50,  1405,  1858,  1540, -2694, -2694,  1543, -2694, 14147,
    1689, -2694, -2694, -2694,  1611, -2694,   811, -2694,  1960,  1689,
   -2694,   848, -2694, 26444,  1444, 14147,   258,   140, -2694, -2694,
   -2694,  1557, -2694,  1422, -2694, -2694, -2694,  1761, -2694, -2694,
   -2694, 42917, -2694, 46757,  6473,  1908, -2694, 46757, 46757, 46757,
   -2694, 46757,  1558,  1566,   191,  1570,   295, -2694,  1493,   191,
    1887,   745,  1169,   195,  3737,   404, -2694, -2694, -2694,  1640,
   46757, -2694, 46757, -2694, -2694, -2694, -2694, -2694, 34277, -2694,
   -2694, -2694, 33797, 27406, 33797, 46757, 46757, 46757, 46757, 46757,
   46757, 46757, 46757, 46757, 46757,  1572,  1573,  1575,  1517, -2694,
   -2694, -2694, -2694, -2694, -2694,  -143, -2694, -2694,   106,  1571,
   36197,  1224,  1366,  1599,   795, 46277,  1580,  1579, -2694,   862,
    2060,  1587,  2039, -2694,   111, 36197, -2694, -2694, -2694,  1997,
   -2694,   339,   129, -2694, -2694,  1224, -2694,  1224, 32748, 46757,
    1643, -2694,  1227,  1589, -2694, -2694,  1227, 54407, -2694, -2694,
     125, 42917, -2694,   884, -2694, -2694, -2694, -2694, 46757,  1582,
   -2694,  1582, -2694, -2694, 14147, 32748, -2694,  1590, -2694, 32748,
   28375, -2694, 32748,  1814, -2694,  1968,  2551,  2551,  2551,  3220,
    1917,   130,  1593,  2551,  2551,  2551,   291,   291,   202,   202,
     202,  1968,   298, 32748, 32748, -2694, -2694,  1594, -2694, -2694,
   -2694, -2694,  1596, 46757, -2694,  5457, -2694,  1602,  1601, 46757,
   -2694, -2694,   281, 14147, 14147,  2802, -2694, 32824, 14147, 54407,
     902,  2802,   259, 14147,  2840,  2891, 14147, 14147,  5491, 28404,
    1606, 14147, 26924, -2694, 42917, 42917, 42917, 42917, -2694, -2694,
   -2694, 45317, 45797,  1608, 20682,  1003,  1609, 42917, -2694,  1704,
    1612, 21643,  1875,  1818, -2694, 21643,  1818,   769,  1818,  1894,
    1704, 25484, -2694,  1704,  1622,  1824, -2694,   661, 32748,  2064,
    1938,  1626, -2694,  1938,   840, -2694, 32748, 10612, -2694,  1224,
    1215, 46757,   258,   -56, -2694,  1636, 46757, -2694,  1689, 32748,
   -2694, -2694, 27887, -2694, -2694, -2694, -2694, -2694, 46757,  1627,
   -2694,  1628,   191, -2694, 46757,  1668, -2694,   214,  1930,    19,
   -2694, 14147, -2694,  2013,  2095,  1493,  1639, 46757, 46757, 18692,
   -2694,   220,   162, -2694,  1911, 42917,  1668,  2056, -2694, -2694,
   -2694,   295, -2694,  1953,  1868, -2694,   116, -2694, 14147,   295,
    1869,   210, 46757, -2694, -2694,  1079, -2694, 54407,   125,   125,
   -2694, -2694,  1648,  1651,  1652,  1653,  1655,  1656,  1657,  1658,
    1659, -2694,  1661,  1662,  1663,  1664,  1665,  1669,  1670,  1673,
     859,  1680, -2694,  1682,  1557,  1683,  1684,  1685, 54872,  1686,
    1687,  1688,  1690,  1691,   709,   847, -2694, -2694, -2694, -2694,
   -2694, -2694,   713,  1692, -2694,  1702, -2694, -2694,  1750, -2694,
    1752, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,    50,
     897,    42, 46757,  1694,  1504,  2113,   698,  1901,  1696, -2694,
     840,  1366, -2694, 36197,   684,   605,  1681, -2694,   141,  1504,
   -2694,  2070,  1719, -2694,  1909, 46757,  1698, -2694, -2694, -2694,
    2160, -2694, 36677,  1582, 32748, -2694, -2694, -2694, 18692,  2028,
    1701, 54407, -2694, -2694, 14147, -2694, -2694,  2802,  2802, 32824,
     910, -2694,  2802, 14147, 14147,  2802,  2802, 14147, -2694, -2694,
   28440, 53462, -2694, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   34757, 45317,  1706, -2694, 39557, -2694, -2694, 46757,  1003, 21643,
   -2694, -2694,  1433, -2694, 21643,  1980, -2694, 21643, -2694, 46757,
    1708, -2694, 46757, -2694, 10107, 14147,  1743,   840,  1743, -2694,
    1705, -2694,   -93, -2694, -2694,  2118, 22603,  2078, 14147, -2694,
   -2694,  1712,   191, -2694,  1878,  1668,  1716, -2694, -2694, -2694,
   -2694, -2694, -2694, 28469, -2694,    -5, 14147, -2694,   687,  3220,
   -2694, -2694, -2694, -2694,  1668,   679, -2694, 46757,  2179,  2071,
   -2694, -2694, 32748, -2694, -2694,  1707,  1707, -2694, -2694,  2154,
   -2694, -2694, -2694, -2694,   713,  -165, 27406, 46757, 46757,  1738,
   -2694, -2694,  -143,  2110,   916,   111, -2694,  1224, 42917,  2085,
   36197, -2694,  2201,  1740, 46757,  1504,   979,   979, -2694,  1885,
   -2694,  1886, -2694, -2694,   297, -2694, 42917, -2694, -2694, 22603,
    1224, -2694,  3294, 18692, 54407,   922, -2694, -2694,  2802,  2802,
    2802, -2694,  1939, -2694, -2694,   923,  2208, -2694, 46757,   -27,
     -41,  1748,  1751, -2694, -2694,  1753, -2694, 14147,  1756, -2694,
   -2694, 21643,  1433,   928, -2694, 54407, 46757,   938, 54407, -2694,
    1757,  -117,  1758, -2694,  7582,  1759, -2694, -2694, -2694, -2694,
   -2694, -2694, 32748, 32748, 46757,  1924, -2694,  1924, 10612,  1815,
   46757, 14147, -2694,   940,  2185,    33,   -37, 32748, -2694, 42917,
   -2694, 33797, -2694,   191,   315,  1770, 14147, 28567,  1991, -2694,
   -2694,  2022, -2694,  2082, -2694, 46757,  1831,    76,  1846, -2694,
   -2694, -2694, -2694,   897,   840,  1366,  1681,  1719,  1776, 42917,
    1224,   111,   339, -2694, -2694, -2694, -2694, -2694, -2694, -2694,
   -2694, -2694, -2694, -2694, -2694, -2694,  2209,  1987,  2215,  1643,
     944,  3294,   945, -2694,  2229,  1517,  1552, 34757,  1787, -2694,
    1788, -2694, -2694, -2694, -2694, -2694, 46757,  1018, -2694, 32748,
   46757, -2694, -2694, -2694, 46757,  2154,   955, -2694, 14147,  1792,
   14147, -2694, 16672,  1790, -2694,  2256, 14147,  1854,  1854,  1224,
   -2694, 28797,  1442, 22603, 46757, 46757, 46757, -2694,  1920,   679,
     191,   963, -2694,  1809, -2694, -2694, -2694, -2694,  2060, -2694,
   28901,  2036,    72,  2011,  1770, -2694, 14147, -2694,  1888, -2694,
   -2694, -2694,  2276, -2694, -2694, 36197,  1820,  1719,  1681,  1504,
    2037, -2694,  2041,  1830,  1366, -2694, 14147,   188, -2694, -2694,
   46757, -2694,   982,  1832,  1834, -2694, -2694, -2694,  1836, 16672,
    1837, -2694, 46757,  1839, 32748,  1973, -2694, -2694, -2694,  2185,
   -2694, -2694, -2694,   244, -2694,   244, 26444,  2022, -2694, 33797,
   27406,  2053,   315,  2137, -2694, -2694, -2694, -2694,    67,  2054,
   -2694,  2055, -2694, 32748, -2694,  1224, 36197, -2694, -2694, -2694,
   -2694, -2694, 22603,  1442,  1362, 17177, 17177,  1840,   987, -2694,
    2334,  2001, -2694, -2694,  1848, -2694, -2694, -2694, 39557, 46757,
    1422,  1422,  1442,  2011, -2694, -2694, -2694, -2694, -2694,   648,
     648,  2224, -2694,  1912, -2694,  1719,   989, -2694, 18187,  1996,
     383, 31887, -2694, -2694, -2694, -2694, -2694,  1855,  1857, -2694,
   -2694, -2694,   244, -2694, -2694, -2694, -2694, -2694,  2333, -2694,
     132, -2694, -2694, -2694,  1366,  2323, -2694, -2694, -2694, -2694,
   -2694, -2694,  2351,  1422,   191, -2694, -2694, -2694,  1442, 17682,
    1863, -2694, -2694, -2694, -2694
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -2694, -2694, -2694,  1764, -2694, -2694, -2694,   203, -2694,   899,
   -2694,   192,  -567,   534, -2694, -2694, -2694,  -927,     8, -2694,
   -2694, -2694, -2694,   -15,   246, -2694,  -490, -1913,  -240, -2694,
   -2531, -2586, -2694, -2694,  -562, -2492, -1704, -2694, -2694, -2694,
   -2694, -1106,   156, -2694, -2148, -2694,  -624,  -989,  -798, -1003,
   -2694,   -63, -2694,  1404, -1101, -1787, -2463,  -504, -2694,  -609,
   -2694,  -256, -2694,  -559, -2694,  -714,  -560,  -593, -2412,  -951,
   -2694,  1412,  -292, -2694,   570, -2694, -2137, -2694, -2694,   558,
   -2694,  -947, -2694, -1770,   177,  -540, -2202, -2134, -1793,  -620,
     241,  -546,   224, -1744,  -961, -2694,   586, -2694,  -527, -2694,
    -511, -1784, -2694, -2694, -2694,  1181,  -708, -2694,  1237, -2694,
   -2694, -2694,    22, -2694, -2694, -2694, -2694, -2694,  -496,   517,
   -2289, -2694,   454, -2694, -2694, -2694, -2694,  -126,   209, -2694,
     115,   196,   -20,    13,    17,     5,    47,  1479,  1501, -2694,
   -1229,   670, -2694, -2694, -1786,  -607,   -48, -2694,   636, -1388,
   -1739,  -491,   983,  1455,  1465,  -411,  -430, -2694,  -549, -2694,
   -1065, -2694, -2694,   635,  1026, -1305, -1286, -2694,   334, -2694,
    -481,  -413, -2694, -2694, -2694, -2694, -2694,    71,  -317,  -478,
    1006, -2694,  1475, -2694, -2694, -2694, -2694, -2694, -1264, -2694,
     678, -2007,   359, -1993, -1885,   109,    91, -1059,  -283,    28,
     373,  -375, -2694, -2694,  -367, -1708, -2422,  -374,  -372, -2694,
   -2694, -2694,  -516, -1120,  -705,  1315, -2694,   336,  -462, -2694,
   -2694, -2694,  -456,  -376, -2694, -2694,  2141,  2206, -2694,  -564,
    2418,  -522,  -677,  1192, -1077,  1193, -1047, -1082,  -886,  1195,
    1197, -1214,  3324, -1585,   450,    38, -2694, -2449, -1711, -2694,
   -2694, -2694,  -132, -2694,  -442, -2694,  -440, -2694, -2694, -2694,
    -485, -2693, -2694,  1121,   808, -2694, -2694, -2694, -1259, -2694,
    4118,   699, -2694, -1628,  -874,  -561,  1214,  -736,  -988, -1156,
   -2694, -2694, -2694, -2694, -2694, -2694, -1671, -1816,  -468,   770,
   -2694, -2694,   880, -2694, -2694, -2694,  -541,   986,  -555,  -855,
     772, -2694,   120,  1925, -1337, -2694,   741, -1945, -2694, -2694,
     390, -2694,  2288,  -451, -1630,  1344,  -994,    49, -2694,  3536,
      18,  1732,  -863, -2117, -2694, -2694,  -480, -2276,  -936, -2694,
    -630, -2694, -2694, -2694, -1171, -2694,   598, -2694, -1100, -2694,
    -320, -2694, -2694, -2142, -2694, -2694, -2694, -2694, -2694, -2694,
    -441, -2694,  -460,  -463, -2694, -2694,     3,  -774,  1258, -2694,
   -2694,   649, -2694,   905, -2694,   694, -2694,    68, -2694,  1119,
   -2694, -2694, -2694,    23,  1553,   382, -2694,  1123, -2694, -2694,
   -2694, -2694, -2694,   872, -2694, -1099, -2560,    88, -2387,  -611,
      -6, -2694, -2694, -2694,  -528, -2694, -2112
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If zero, do what YYDEFACT says.
   If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -1774
static const yytype_int16 yytable[] =
{
     482,  1009,  1143,  1188,   975,    61,  1486,   732,    43,  1249,
     809,   609,  1305,   720,  1785,   649,   598,  1788,  1485,   543,
    1150,    61,    54,    76,  1310,   747,  1743,  1546,  1644,  1232,
     945,   933,  1235,  1256,  1312,  1450,  1461,  1194,   551,   551,
    2038,  2097,  1439,  1162,   478,  2159,  2129,  1517,  2103,  2134,
    1360,   738,  1518,  1520,  1521,   479,  2097,  1457,  1008,   584,
    1014,  1497,  1018,  1368,  1999,  2000,  2492,   723,  1550,  2020,
    2515,  2494,  2122,   725,   611,   803,  2513,   748,   612,  1265,
    2345,   740,   596,  2529,  2152,  1490,  2062,  2526,    83,   554,
    2195,  2196,  2197,  1147,  2306,   826,  -452,  1603,  2207,  -455,
    -734,  2362,   810,  1682,  1683,   486,  -726,  1756,  2864,  1174,
    1175,   550,  2049,  2050,  2688,    56,  1806,   968,   627, -1106,
    1243,  1769,  1195,  -734, -1106,   826,  1195,  2676,  1375,  1696,
     971,  2716, -1103, -1103,  1151,  1195,  1186,  1809,  2631, -1646,
   -1081, -1649,  2692, -1658, -1649,   579,  1981, -1751, -1751, -1754,
   -1754, -1763, -1763,   726, -1665,  -731, -1107, -1658, -1665,  -731,
    1522,  2219, -1770, -1770, -1104, -1104,  -412,  2764,   550, -1107,
    1696, -1646,   826,  -693,  -706,  -721,   550,   550,   588,   662,
    2737,  1453,  1453,  1238,  2775,  1195,   732, -1772, -1772,  2989,
    1442,  -452,  1488,  2187,  -455,   619,    57,  1194,  1470,  -183,
    1620,  1473,  1474,  2789,  -183,  1617,  2384,  2820,  2360,  2295,
    1321,  1321,    57,  2002,  1322,  1322,  2665,  2003,  -954,   826,
     601,  2670,  1893,  1321,  2646,  -954,    57,  1322,  2259,  2261,
    2226,  2615,   597,  1168,  2866,  1619,  2867,  2894,  2530,   604,
     606,  1881,  1330,  1330,  2945,  1740,   723,  1733,   606,  3036,
    2764,  1410,   725,  2155,  1734,  1330,   927,   610,  1372,  1243,
     550,  2849,  2549,  2689,   826,  1407,   565,   547,  2833,   934,
    1174,  1175,   958,  1812,  1332,  1332,    57,  1169,  2690,   809,
    2935,  2642,  2831,  1782,  1495,  1462,   809,  1332,  -974,  1445,
    1469,  1496,  1321,  1410,   732,  -974,  1186,  1411,  2803,     3,
       4,  1321,  2002,  2390,  1770,  3025,  2003,   605,   602,  2002,
    2406,   546,  2112,  2003,  2846,  2371,  1189,  2834,  1480, -1748,
   -1748,  1189,  -667,  1189,  1301,   982,  2273,  2412,  2183,  2788,
     591,   983,   726,  1330,  2628,  1313,  1523,  2957,  1190,  1411,
    2640,  2184,  1481,  1190,  2588,  1190,  3043,  2113,  2592,  2362,
    1257,  2413,  1191,   599,   723,  2296,  1332,  1412,  2816,  1193,
     725,  2664,   549,  2402,  1370,  1332,  2817,  2271,  2391,   566,
    1783,  1408,  1373,    26,  2097,   959,  2097,  2946,  2716,  2682,
    1813,  2403,  -579,  -452,  2893,   606,  -455,  1741,  2787,  2683,
    2156,  1370,  1147,  3012,  2393,  2407,  1621,  1882,  2979,  2531,
     809,   809,  2868,  2152,  1376,  2152,  1413,  2629,   548,  3037,
      31,  1196,  2550,  2641,  2764,  1196,  1438,  1659,  2275,  2276,
    2277,  2278,  2279,  2770,  1196,  2283,  2284,  2285,  2286,  2287,
    2288,  2289,  2290,  2291,  2292,  3023,   935,   984,   936,  2643,
     726,  1447,  2780,  2616,  1460,   600,  -452,  1500,  1413,  -455,
    1499,    33,  1170,  2835,  2947,  1644,  2578,  2547,  1600,  -667,
    2691,  2408,  2632,  2409,  1607,    34,  1414,  2832,  1894,  2534,
    2996,   691,  1278,   732,  1196,  2620,   663,  2985,  1463,  2324,
    2325,  1948,  1950,  2671,  1436,  1946,  2958,  1806,  2968,    35,
    1697,   536,    61,  1374,  2776,   635,  1822,  1437,  1391,  2203,
    2204,  1387,   928,  1771,  2890,   589,  2990,  2137,  1414,   636,
     639,  1880,  2959,  2764,  2543,  2124,  1947,  2965,   598,  2083,
    2084,  1489,  2188,   734,  1143,   607,    84,  1486,  2132,  1903,
     631,  2064,   808,   723,   632,  2818,   630,   603,  2796,   725,
    1460,   805,    61,  1535,  2105,   814,  2966,   982,  3027,  2492,
     645,  1172,   487,   983,  2494,  1448,   815,  -452,  1189,  1171,
    -455,   482,   482,   976,   811,  1197,   551,   813,  1453,  1231,
    2888,    85,  1916,   929,  1917,  -954,   613,  1523,  1234,  1454,
    1190,  1189,  2726,  1717,  1942,   482,   820,  2730,  2717,   924,
    2732,   985,   938,   611,  1191,  2107,  -452,   612,  -452,  -455,
    -726,  -455,   637,  1190,  1735,    61,  1247,  1248,    43,  2706,
    2622,  2207,  1880, -1106,  1827,  1543,   812,  1193, -1106,   726,
    1547,  1548,    54,    76,  1058,   482,  1144,  1475,  1585,  1576,
    1754,   956,   631, -1646, -1081, -1649,   632, -1658, -1649,   947,
    2097,   641,   986,   642,  2097,  -974,   987,  2648, -1665,  -731,
   -1107, -1658, -1665,  2892,  2899,  2653,  1480,     3,     4,   984,
     732,   732,  1316, -1107,  2898, -1646,   720,  1176,  1180,  -721,
    1366,  1757,  1828,  1294,  1857,   732,   988,  1949,  1951,  1952,
    1481,  1555,  2619,    57,  1860,  -183,  -183,  1863,    83,  1348,
    1349,  1350,  1351,  1352,  1353,  1353,  2280,  2018,  3028,  1693,
    2655,  2656,   734,  1919,  1350,  1351,  1352,  1353,  3017,  1718,
    1604,  2874,  1301,  1579,   809,    56,  1611,   937,   826,   536,
     723,   723,   652,  2669,  2841,  1719,   725,   725,  1573,  1657,
    1720,  1605,   657,    57,   597,   723,  1644,  1827,   482,  1143,
     614,   725,  1971,   964,   989,  1247,  1248,  1972,  1313,   660,
     738,  1567,  2163,  1680,  2686,   631,  2416,  1571,   653,   632,
     982,  2513,  2963,   661,  2621,    26,   983,  1721,  2674,  1476,
    2875,  1605,  1147,   664,  1462,  1241,   610,  1477,  1242,   803,
    2445,  1577,  1568,  2015,  2016,  2017,  2018,  1964,  2013,  2014,
    2015,  2016,  2017,  2018,  2215,  2149,    57,   665,  1973,   732,
    1924,   808,    31,  2687,  2419,  1684,   726,   726,   808,  1058,
     734,  1966,  2242,   985,  1310,    61,   666,   966,  2246,  1605,
    2042,   726,  2683,  2492,  2106,  1252,   482,  1605,  2494,  1147,
    1849,  1453,  1252,  2311,  2639,  2684,  2281,  1931,   744,   650,
    2773,   655,  1456,    33,  1856,   550,  2282,  2334,  2335,  2336,
    2337,  1581,  1699,  1486,   816,   482,   826,    34,  1953,   723,
    1954,   818,  2432,  1956,  1012,   725,   598,  1305,   987,  2097,
     489,   643,   984,   644,  1819,   482,   482,   482,  2097,   482,
     482,    35,  3038,  2097,  1211,  1212,  2097,   820,  1876,  1877,
    1878,  2198,  1484,  1143,  1462,    36,   563,  2076,  1013,  2077,
    1705,  1855,   581,   482,  2320,  2097,   982,   982,  1184,  1185,
    1315,   651,   983,   983,  1722,  1512, -1746, -1746,  3018,  1318,
    1866,    26,   808,   808,  2132,  1873,  2126,  1706,  2054,   819,
     732,   490,    26,  1367,  2433,   964,  1831,  2189,  2135,   821,
     965,  2353,   982,   826,  1377,   726,  1252,  1252,   983,  1462,
     631,   982,   620,   926,  1369,  2055,   482,   983,    31,  2778,
     482,   482,   941,  2702,  2423,  2227,   989,  1463,   964,    31,
    2234,   482,   489,  1399,  1400,  2354,  1406,   612,   612,   948,
     612,  1928,   956,  2870,  2160,   746,   932,  1513,  2097,   734,
     723,  2594,  1462,    26,  1215,  1216,   725,  3019,  1858,    33,
     652,  2356,  2078,  1861,  2079,  1902,    57,  2424,  2804,   966,
      33,   949,  1491,    34,  1058,   951,  1178,  2434,   984,   984,
    2097,  1058,  2719,  2425,  3020,   952,   985,  2720,    87,  1460,
      31,   954,  1512,   490,  1514,   732,   653,    35,  1187,  1487,
    1707,  1940,   966,  1058,  1281,  1708,  1462,  -464,   955,  1385,
    1709,    36,  1386,    26,   984, -1747, -1747,   809,   967,  2805,
     962,  -464,    36,   984, -1749, -1749,  -464,  1494,  2806,  1229,
     809,    33,   654,  2056,   977,   537,   726,  1016,  2057,  -501,
     732,   987,  1303,   979,  -501,    34,  1977,  1463,  2830,  1599,
      31,   967,  1600,   981,  1970,   723,  2161,  2807,  1974,  2352,
    1975,   725,  2031,   493,  2678,   494,  2830,  1517,   980,    35,
    2186,  1017,  1518,  1520,  1521,  -464,  2097,   995,  2821,   655,
    1462,  2426,  2358,   538,  2174,   993,  2176,  2171,  2427,  2173,
     497,    33,   994,  1644,  1601,  -464,   996,  1602, -1750, -1750,
     723,  2052,  1463, -1752, -1752,    34,   725,  2101,  1144,  1460,
    1011,  1514,  2097,  -501,  2930,  1148,   610,   610,   631,   610,
   -1081,  2443,   632,  2560,  2190,  1305, -1753, -1753,  2808,    35,
     482,  1015,   985,   985,  2436,  2353,   734,   734,  1149,   989,
    2809,   726,  1178,    36,  -464,  1463,  2399,   997,  2401,  2255,
      88,   734,  1710,  -464,  2030,  1156,  2032,  2033,    89,  1152,
    1187,  2400,  -501,  1711,  1460,   493,  1165,   494,   985,  2354,
    2914,  2435,  1765,  2444,  1154,  1234,  2510,   985,   922,   923,
    2058,   925,  1167,  1818,  1864,  2355,   726,   987,   987,  3034,
    1890,  2059,   497,  1891,    90,  2356,   808,  1932,  2194,  1463,
    1602,  3013,  3014, -1755, -1755,   805,    61,  1460, -1756, -1756,
     985,  2097,  1144,  1938,  2439,  2997,  1939,   988,  1865,  2244,
    2245,  1960,  2382,   987,  1961,   482,  1157,   482,  1871,  2357,
     482,   482,   987,    61,  3015,   961,   635,   963,   998,  2212,
     482,    91,   482,   482,   482,   482,   482,   482,   482,  2177,
     636,   639,  2178,   988,  3041,  2598,  2222,  2593,  2601,  2596,
    1626,  1460,  1872,  2181,  1172,  2162,  2182,  2163,   482,  2236,
     482,  2380,  1600,  1463,  2381,   734,   482,   482,   482,   482,
     482,   482,   482,  1144,  1176,   989,   989,   482,   482,   999,
    3042,  1585,   482,  -464,  1180,  2164,   482,  1000,  1179,   482,
     482,   482,   482,   482,   482,   482,   482,   482,  2385,  1001,
     482,  2386, -1757, -1757,  1182,   506,  2358,   482,  1183,   535,
    1058,   989,  2521,  1144,  1199,  1891,  1200,   556,  1202,  1320,
     989,  2810,  1321,  1230,  2811,  1460,  1322,  1237,   595,   595,
    1002,  1233,   482,   637,  2541,  2486,  1236,  2542,  1239,   938,
    1240,  1205,  1206,   732,  1758,  2705,  1258,   631,  1268,  1831,
     951,   632,  2561,   482,  1330,  1602,  1269,  2132,  1271,    92,
    2707, -1774,   485,  1602,   482,   482,  2795,  1425,   534,  1891,
     604,  1743,  2823,  2826,  -697,  1602,  2827,  1004,  2843,   564,
    1273,  2844,   623,   577,  -502,   809,  1332,    57,  2847,  -502,
    2862,  2844,  2443,  2863,  2904,  2905,   734,  2863,  1602,  1005,
    -704,  2623,  1144,   723,  1144,  2917, -1758, -1758,  2844,   725,
    1211,  1212,   732,  2938,    57,  1276,  2939,   825,  2267,  1007,
    2002,  1277,   489,  2301,  2003,  2250,  1278,  2004,  2005,  2006,
     732,  -694,  2969,  -695,  2583,  2970,  2274,  3006,   605,  3024,
    2844,  1279,  2863,  1058,  2313, -1152,   482,   482,  2583,   482,
    1280,  1605, -1759, -1759, -1760, -1760,  2051,   732,  -502,  1773,
   -1761, -1761,    36,  2297,   732,  2612,  1282,  1144, -1762, -1762,
    2302,  -698,   723, -1764, -1764, -1765, -1765,  -579,   725,  2352,
    1058,  1703,  -580,   490, -1766, -1766,   482, -1774,   732,   726,
     723,  1298,  2539,  2367,  1283,  2980,   725,  2981,  2822, -1767,
   -1767,   734,  1849, -1774,  2495, -1768, -1768,  -502, -1774, -1769,
   -1769,  1284,  2416, -1771, -1771,  1286,   606,   723,  2417,  1287,
    1215,  1216,  1288,   725,   723, -1773, -1773,  1502,  1503,   808,
     725,  2418,  1807,  1808,    26,  1605,  1289,  1901,  -553,  -553,
      57,  2509,   808,    26,  1058, -1774,   734,  1290,   723,  1215,
    1216,   482,  -696,  1252,   725,  2353,   482,  1969,   726,  1291,
    2419,  1292,  2420,  1213,  1214,  1293,  1252,  -557,  -557,  -556,
    -556,    31,  1381,  1383,  3033,  1294,   726,  1311,  1314,  1358,
      31,   598,  1361,  1364,  1363,  1388,  1379,  1389,  2651,  2354,
    2540,  1392,  1398,   482,   482,   482,   965,   967,   482,  1920,
    1341,  1432,  1434,   726,  1440,  2355,   482,   482,   482,   482,
     726,   732,    33,  1458,  1459,  2356,   482,  2489,  1460,  1465,
     482,    33,  1467,   482,  1466,  1471,    34,  1478,  2008,  1498,
    1479,  2132,   598,  2793,   726,    34,  1483,  1493,  1505,  1506,
    1515,   482,   482,  1510,  1516,  1523,   482,  2421,  1528,  2357,
      35,  1531,  1532,  2516,  1534,   493,   607,   494,  1536,    35,
     482,  1542,  1549,   482,    36,   482,   826,  1551,  1552,  1558,
    2727,   723,  1562,    36,  1559,   732,  1563,   725,  1564,   496,
      57,  2538,   497,  1565,  1607,   482,  1572,  1612,   480,  1653,
    2660,  2661, -1774,   507,  1598,  1321,   482,   507,  2009,  1672,
    1674,   598,   552,   552,   555,   507,   560,  1676,  1678,   560,
    1677,   482,   560,   586,  1679,  2422,   507,   507,  2255,  1695,
    2423,    61,  1713,  1188,   635,  1702,  1716,  1714,  1737,  1738,
     482,  1752,  1759,  1766,  1767,   723,  2358,  1774,   636,   639,
    2095,   725,   605,  1786,  1796,   482,   482,   732,  1797,  1798,
    1801,   479,  1824,  1799,  1817,  2095,  1820,   726,  1800,  1826,
     606,  1825,   560,  2424,   482,  1888,   479,  1892,  1896,   586,
     507,   586,   586,   586,  1904,  1905,  1147,  1921,  1906,  2425,
    1907,  1925,  1144,  1144,  1144,  1926,  1927,  1929,  1930,  1933,
    1934,  1605,  1955,  1957, -1774,  1936,  1935,  1303,   659,  1937,
    1944,  1348,  1349,  1350,  1351,  1352,  1353,   723,  1958,  1795,
    1959,  1967,  2180,   725,  1990,  2027,  1979,  1945,  2486,  1978,
    1305,   726,  1985,  1058,  2728,  1987,  1988,   743,  1989,  1991,
     489,   637,  1992,  1994,  2048,  1995,  1998,  2021,  2022,  2028,
    2035,  2046,  2053,  2060,  2069,  2070,  2072,  2073,  1303,  2074,
    2099,  2111,  2109, -1152,  2123,  2125,  2127,  2206,  -558,   734,
    2118,  2139,  -559,  2138,  2141,  2142,  1703,  2143,  2145,   482,
    2148,  2170,  2218,  2147,  2151,   732,  2172,  2426,  2199,  2200,
    2185,  2659,  2071,  2202,  2427,  2191,   595,  2637,  1486,  2192,
    2193,   490,  2211,   726,  2214,  2010,  2011,  2012,  2088,  2013,
    2014,  2015,  2016,  2017,  2018,  1144,   732,   808,  2201,  2210,
    2225,  2224,    57,  2088,  2228,  2232,  2235,   597,  2229,  2239,
    2241,  2248,  2249,  2251,  2258,   482,  2266,  2024,   734,  2002,
    2023,  1252,  2298,  2299,   482,   723,  2256,   482,  2257,  2303,
     482,   725,  2262,  2263,  2081,   491,   734,   482,   482,   482,
     482,   482,  2300,  2304,   482,   482,   482,   482,   482,   482,
     482,   482,   482,   482,   809,  2316,   723,   482,   482,   598,
    2318,   482,   725,   734,  2330,  2781,  2319,  2331,   482,   732,
     734,  2322,  2964,   482,  2332,  2343,  2351,  2365,  2369,  2377,
    2374,  1320,   482,  2375,  1321,   482,  2383,   482,  1322,  2394,
     598, -1774, -1774, -1774,   734,   482,  2392,  2379,   482,   482,
    2398,  2404,  2431,   482,   482,   492,  2405,   598,  2447,  2411,
    2512,   726,  2506,  2507,  1920,  2508,  1330,  2524,  2528,   482,
    2519,   482,  2520,  1331,  2535,  1891,  2523,  2537,  2548,   723,
    2545,   995,  2551,   482,  2552,   725,  2553,  2589,   995,  1653,
    1653,  2555,   726,   482,  1653,  2554,  2569,  2580,  1332,  2581,
     996,  2587,  2584,   493,  2590,   494,  2597,   996,  2603,   482,
    2604,  2602,  2605,  2095,  2618,  2095,  2607,  2624,  2625,  2626,
    2634,   495,  2630,  2635,   479,  2644,   479,   496,  2636,  2647,
     497,  2873,  2486,  2649,   732,  2650,  2654,  1653,  1653, -1103,
    2489,  2677, -1746, -1747, -1748,    57, -1749, -1750, -1751, -1752,
   -1753,   997, -1755, -1756, -1757, -1758, -1759,  2667,   997,  2668,
   -1760, -1761,  1144,  2679, -1762,   726,  1144,  2493,  1144,  2693,
    2694, -1764,   732, -1765, -1766, -1767, -1768, -1769, -1770, -1771,
    2666, -1772, -1773, -1104,  2675,  2680,  2696,  2699,  2700,  2703,
    2704,  2491,  2731,  2754,   723,  2718,  2760,  2736,  2758,  1333,
     725,  2766,  2768,   732,  2769,  2771,   732,  2783,  2907,  2845,
     586,  1630,  2845,  2784,   647,  1334,  2206,   648,  1631,  2785,
    1335,  1632,  1633,  1634,  2794,  1303,   507,  2799,  2792,  2800,
    2801,   734,   723,  2814,  2815,  2824,  2828,  2836,   725,  2937,
    2837,  2856,   998,  2838,  2941,  2840,  2848,  2850,   482,   998,
    2864,  2859,  2852,   648,   507,   507,  1303,  1338,  2643,  2878,
    2882,  2884,  2886,   723,  2889,  2895,   723,  2901,  2900,   725,
     552,  2341,   725,  2344,  2902,  2906,  2910,  2918,  2911,  2920,
     726,  2919,   595,  2922,  2923,  2925,  2936,  2940,  2948,   919,
     919,   560,   560,   999,   560,  2885,  2943,   482,   482,  2873,
     999,  1000,   482,   734,  2955,   586,  2954,   482,  1000,  2956,
     482,   482,  1341,  1001,   507,   482,  2514,  2960,   726,  2962,
    1001,  2961,  2971,  2978,  2972,   586,  2973,  2975,  2571,  2988,
    3005,  2991,  2993,  3007,  3008,   482,  2989,   586,  3010,   482,
    2532,  2990,  2533,  3026,  1002,  3031,  3032,  3035,  3039,   726,
    3040,  1002,   726,  3044,   953,  1851,  2614,  2168,  2446,  2387,
    2450,   482,  2759,  2931,  2982,   622,  2522,   625,  2657,   629,
    2952,  3022,  2779,  2987,  2932,   586,   586,   586,   586,  2095,
    3016,  2994,  2609,  2095,  1449,  2813,  2150,  2175,  2415,  2984,
     479,  1004,  2527,  2992,   479,   482,  2451,    57,  1004,  2146,
    2983,  1566,  2208,   482,  1343,  2252,  2701,  2511,   732,  1545,
    1816,  1371,  2130,  1005,  2489,  1429,  2913,  1390,  2927,  3011,
    1005,    57,   482,    57,  1428,  1793,  2140,  2373,  2974,  2921,
    2858,   734,  1815,  1007,  2608,  2108,  2346,  1433,  2595,  2842,
    1007,  2579,  2909,  1653,  1653,  1653,  1653,  1653,  2342,  2908,
    1653,  1653,  1653,  1653,  1653,  1653,  1653,  1653,  1653,  1653,
    2915,  1526,  2493,  2916,  1616,  1618,  2757,  1622,   723,  1623,
    2976,  3004,  1742,  2977,   725,  2044,  2133,  1606,  1982,  2065,
    2067,  1887,  2372,   921,  2611,  2613,  2102,  2610,  2213,  2903,
    1578,   825,  2131,  1976,  2002,  1761,  2388,  1393,  2003,     0,
    1763,  2004,  2005,  2006,  1653,  1653,  1344,     0,     0, -1774,
   -1774, -1774,     0,  1348,  1349,  1350,  1351,  1352,  1353,     0,
       0,     0,     0,     0,     0,     0,   808,     0,  2681,     0,
       0,     0,   482,     0,     0,   734,     0,  2088,   482,     0,
       0,  2088,  1270,  2986,     0,     0,     0,   482,   482,   825,
    1252,   482,  2002,     0,   726,     0,  2003,     0,     0, -1774,
   -1774, -1774,     0,     0,   482,    57,    57,     0,  1569,     0,
    1570,     0,     0,   482,     0,     0,     0,     0,   482,     0,
       0,   482,     0,     0,     0,     0,     0,   825,   482,   482,
    2002,     0,     0,     0,  2003,     0,     0,  2004,  2005,  2006,
     482,     0,   482,     0,     0,     0,     0,     0,  2095,  1309,
       0,     0,     0,     0,  2314,  2756,     0,  2095,     0,   479,
     482,     0,  2095,     0,     0,  2095,     0,     0,   479,  2685,
       0,     0,     0,   479,     0,     0,   479,     0,     0,     0,
       0,     0,     0,     0,  2095,     0,     0,     0,     0,     0,
    2493,     0,   586,     0,     0,   479,     0,     0,     0,     0,
     728,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     507,   507,     0,     0,  2491,     0,   586,   586,  1397,     0,
    2007,     0,     0,   482,     0,     0,     0,   482,   734,  1635,
    1636,  1637,     0,  1638,  1639,  1640,  1641,  1642,  1643,     0,
       0,     0,  2008,   586,  1452,     0,     0,     0,     0,     0,
      57,   482,     0,     0,   598,   482,   586,     0,     0,   734,
       0,     0,   734,     0,     0,   729,     0,  2095,   482,     0,
       0,     0,     0,   586,     0,     0,     0,   586,   479,     0,
       0,     0,   482,     0,     0,   482,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1144,     0,     0,     0,  2095,
     482,     0,     0,     0,     0,     0,   640,     0,     0,     0,
     479,     0,  2009,     0,     0,  2088,     0,     0,  1823,     0,
    2088,     0,  2797,  2088,     0,     0,     0,     0,  1832,     0,
    1835,     0,     0,  1846,     0,     0,     0,     0,  2008,  1850,
    1320,  1852,  2891,  1321,     0,  2685,     0,  1322,     0,     0,
       0,   482,     0,  1859,     0,     0,     0,     0,  1862,     0,
       0,     0,  1867,  1868,  1869,  1870,     0,  1874,  1875,     0,
    2009,     0,   482,     0,   482,  1330,   482,     0,   825,   728,
     482,  2002, -1774,     0,     0,  2003,     0,   482,  2004,  2005,
    2006,     0,     0,     0,     0,  2095,     0,     0,     0,  1653,
       0,   931,     0,    57,     0,  2563,   479,  1332,  2009,     0,
     482,  1509,     0,  1320,     0,     0,  1321,     0,     0,   586,
    1322,     0,     0,     0,     0,     0,    57,     0,  1540,   825,
     482,  2095,  2002,   978,     0,     0,  2003,     0,     0,  2004,
    2005,  2006,   479,   482,   729,  2897,     0,     0,  1330,     0,
       0,     0,     0,     0,     0, -1774,  2564,  2088,     0,     0,
       0,  1557,  1586,  1144,  2493,     0,     0,     0,     0,     0,
    1303,  1159,  1161,  1163,  1164,     0,     0,   731,     0,     0,
    1332,     0,     0,     0,     0,     0,   482,   728,  2491,   482,
     482,     0,   648,   648,     0,   507,   507,     0,   507,   648,
       0,     0,   586,     0,  2928,     0,     0,  1587, -1774,  2010,
    2011,  2012,     0,  2013,  2014,  2015,  2016,  2017,  2018,     0,
       0,     0,   482,     0, -1774,     0,    57,     0,  1653, -1774,
    2095,     0,     0,  1588,     0,     0,     0,     0,     0,     0,
       0,   479,     0,     0,     0,     0,     0,     0,     0,  1646,
    2061,  1589,   729,     0,     0,  1590,     0,     0,     0,     0,
    1671,     0,     0,   482,     0,     0, -1774, -1774, -1774, -1774,
       0,  2013,  2014,  2015,  2016,  2017,  2018,  1591,     0,     0,
    1592, -1774,     0,     0,     0,    57,     0,     0,     0,  2008,
       0,     0,     0,     0,   648,  1593,     0, -1774,     0,     0,
    2995,     0, -1774,     0,     0,  2010,  2011,  2012,     0,  2013,
    2014,  2015,  2016,  2017,  2018,     0,     0,     0,     0,     0,
       0,  1341,     0,     0,     0,   919,   586,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0, -1774,
    2008,     0,     0,     0,   -39,     0,     0,   586,     0,   586,
       0,     0,     0,     0,     0,     0,   731,     0,  1775,  2009,
    1781,     0,     0,     0,     0,     1,   728,     0,     0,     0,
       0,     0,     0,     0,     0,     2,     0,     3,     4,     0,
       0,    57,     0,  1653,     0,     0,     0,  1594,     0,     0,
       0,     0,     0,     5,  1341,  1595,   586,     0,     0,     0,
       0,     0,     6,     0,     0,  1452,   507,     0,     0,     0,
    2009,     0,     0, -1774,     7,     0,   507,  1833,   507,  1837,
       0,   507,     0,     0,     0,     8,     0,   507,     0,   507,
       0,   729,     0,     0,     0,     0,     0,     9,  1596,    10,
     648,   507,     0,     0,     0,   648,   507,     0,  1384,     0,
     507,   507,   507,   507,     0,   507,   507,    11,   825,     0,
       0,  2002,     0,     0,   731,  2003,     0,     0,  2004,  2005,
    2006,    12,     0,  1395,     0,   586,   586,  1900,     0,     0,
       0,    13,     0,     0,     0,     0, -1774,    14, -1547,     0,
       0,     0,     0,  2231,  1915,    15,     0,    16,    17,  1441,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    18,  1468,     0,     0, -1774,     0,     0,     0,     0,
       0,     0,  1348,  1349,  1350,  1351,  1352,  1353,     0,     0,
       0,     0,   825,  1492,     0,  2002,     0,     0,     0,  2003,
      19,     0,  2004,  2005,  2006,     0,     0,     0,     0,     0,
       0,     0,     0,   728,   728,    20,  2010,  2011,  2012,     0,
    2013,  2014,  2015,  2016,  2017,  2018,     0,     0,   728,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    21,     0, -1547,     0,     0,     0,     0, -1774,     0,
       0,     0,     0,     0,     0,  1348,  1349,  1350,  1351,  1352,
    1353,     0,     0,     0,     0,     0,     0,  2010,  2011,  2012,
       0,  2013,  2014,  2015,  2016,  2017,  2018,     0,   729,   729,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   507,   729,     0, -1547,     0,     0,     0,  1309,
       0,     0,     0,   731,     0,     0,     0,     0,     0, -1547,
       0,     0,     0,     0, -1547,     0,     0,     0,    22, -1547,
       0,    23,     0,     0,     0,     0,     0,     0, -1547,  2008,
       0,     0, -1547,     0,     0,  1527,  1646,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      24,     0,   728,     0,     0,     0,     0,     0,     0,    25,
       0,     0,     0, -1547,     0,     0,     0,     0,   586,     0,
       0,     0,     0,    26,  2098,     0,     0,  2396,     0,     0,
      27,     0,     0, -1547,    28,     0,  1615,     0,   550,  2098,
       0,     0,     0,  2117,    29,     0,  2120,     0,  1781,  2009,
       0,     0,     0, -1774,  2448,     0,    30,     0,     0,     0,
      31,     0,     0,     0,     0,     0,     0,   729,  1575,  2496,
    2497,  2498,  2499,  2500,  2501,  2502,  2503,  2504,  2505,     0,
       0,     0, -1547,     0,     0, -1547,     0,     0,     0,     0,
       0, -1547,     0,     0,     0,     0,    32,     0,     0,     0,
    1509,    33,     0,     0,     0,     0,     0,  1320,     0,     0,
    1321,     0,     0,     0,  1322,    34,     0,  1325,  1326,  1327,
       0,     0,     0,  2009,     0, -1547,     0,     0,     0,     0,
       0,     0,     0,   728,  1328,     0,     0,     0,     0,    35,
     731,   731,  1330,     0,  1203,  1204,     0,     0, -1547,  1331,
       0,     0,     0,    36,     0,   731,   -39,     0,     0,     0,
       0,     0,     0,  1509,     0,     0,     0,     0,   586,     0,
       0,     0,     0,     0,  1332,     0,     0,  1509,   586,   586,
     586,     0,     0,     0,     0,     0,     0,  1569,     0,     0,
       0,   507,  1751,     0,  1203,  1204,     0,     0,   729,   586,
       0,     0,     0,     0,  2081,     0,     0,     0,     0,     0,
       0,  2247,     0,  1760,     0,  1762,     0,     0,     0,     0,
    1205,  1206,     0,     0,     0,     0,     0,   648,     0,   586,
       0, -1547,     0,     0,  1203,  1204,     0,     0,   728, -1547,
       0,     0,     0,     0,  1509,  1509,  2010,  2011,  2012,     0,
    2013,  2014,  2015,  2016,  2017,  2018, -1547,     0, -1547, -1547,
       0,     0,  1811,     0,     0,     0,     0,  1646,     0,     0,
    1205,  1206,     0,     0,     0,  1333,     0,     0,     0,   731,
       0,     0,     0,   728,     0,  1207,  1208,  1209,  1210,  1211,
    1212,  1334,     0,  1213,  1214, -1547,  1335,     0, -1547, -1547,
   -1547,     0,  2638,   729,     0,     0,     0,     0,     0,     0,
    1205,  1206,     0,     0,     0,   995,     0,     0,  1336,  1337,
    2010,  2011,  2012,     0,  2013,  2014,  2015,  2016,  2017,  2018,
       0,     0,     0,  1338,   996,  1207,  1208,  1209,  1210,  1211,
    1212,  1897,  1899,  1213,  1214,     0,     0,     0,   729,     0,
       0,     0,     0,     0,   586,   586,   586,   480,     0,  2098,
    2350,     0,     0,     0,     0,  2350,  2364,     0,     0,     0,
       0,  1339,     0,     0,  1340,  1207,  1208,  1209,  1210,  1211,
    1212,     0,     0,  1213,  1214,   997,  2437,     0,  1341,     0,
       0,  1342,     0,     0,  2438,  1781,     0,     0,     0,  1215,
    1216,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     731,     0,     0,   586,     0,   507,     0,     0,     0,  1509,
    1452,  1509,     0,  1540,     0,     0,     0,     0,     0,     0,
       0,   902,   902,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   507,     0,  2449,     0,     0,     0,     0,  1215,
    1216,     0,  2439,     0,     0,     0,     0,   507,   507,   507,
     507,   507,   507,   507,   507,   507,   507,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   998,     0,     0,     0,
    1343,     0,  1915,     0,     0,     0,     0,   586,     0,  1215,
    1216,     0,     0,     0,  1053,  1060,     0,  1452,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1540,  1217,  1218,     0,   731,     0,     0,     0,     0,
       0,     0,     0,   586,     0,     0,     0,   999,     0,     0,
    1509,  2782,     0,     0,     0,  1000,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1001,     0,  2440,
       0,  2790,  2791,     0,     0,     0,     0,     0,     0,     0,
     731,     0,  1217,  1218,     0,     0,     0,     0,  2802,     0,
       0,     0,     0,     0,  2080,   507,  1320,     0,  1002,  1321,
       0,  2556,  1344,  1322,     0,  1345,  1346,  1347,     0,  1348,
    1349,  1350,  1351,  1352,  1353,     0,   728,     0,     0,     0,
       0,     0,  1217,  1218,  2573,     0,   586,   586,   586,   586,
       0,  1330,     0,  2350,  2364,     0,  2350,     0, -1774,  2582,
       0,     0,  1219,  2098,     0,  1004,     0,  2098,     0,     0,
       0,     0,     0,  2600,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1332,  2860,     0,     0,  1005,     0,   919,
       0,     0,     0,  2117,     0,     0,     0,     0,  1781,     0,
       0,   729,     0,     0,  1646,   728,     0,  1007,     0,  2441,
    1452,     0,  2442,     0,     0,     0,  1509,     0,     0,  1053,
       0,     0,     0,   728,     0,     0,     0,     0,     0,   648,
     507,     0,     0,     0,     0,     0,  1274,   586,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     728,     0,     0,  2323,  2658,     0,   669,   728,   671,   672,
       0,     0,     0,     0,  2209,  1285,     0,     0,     0,     0,
     729,   673,   674,     0,  2220,  2221,  2223,     0,     0,     0,
       0,   728,     0,     0, -1774,  1295,  1296,  1297,   729,     0,
    1304,     0,     0,     0,     0,  2240,     0,     0,     0,     0,
   -1774,     0,     0,     0,     0, -1774,     0,     0,     0,     0,
       0,     0,     0,  1362,     0,   729,  1460,     0,     0,   679,
     680,     0,   729,     0,  1509,  1575,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1915,     0,     0,     0,     0,
       0,  1524, -1774,     0,     0,     0,   729,  2697,     0,  1525,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1405,     0,     0,   682,
    1419,  1424,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2713,     0,     0,     0,     0,     0,     0,
       0,     0,   480,  2350,     0,     0,  2724,  1341,     0,   507,
       0,  2098,     0,     0,   728,     0,  2098,     0,     0,  2098,
       0,  2735,     0,   731,  2738,     0,     0,     0,   689,   690,
       0,     0,     0,  1251,  1053,     0,     0,     0,  2765,     0,
    1251,  1053,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2338,  2339,  2340,  1053,     0,     0,     0,     0,     0,   507,
       0,     0,     0,     0,     0,     0,     0,     0,   728,   729,
     698,     0,   700,     0,     0,     0,     0,     0,     0,   507,
     507,     0,   731,     0,     0,   702,     0,     0,     0, -1774,
     586,     0,  1452,     0,     0,     0,   507,     0,     0,     0,
     731,     0,     0,     0,     0,     0,     0,     0,   586,  2395,
       0,  2765,     0,     0,     0,     0,     0,  1317,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   731,     0,     0,
     507,     0,     0,   729,   731,     0,   705,     0,     0,     0,
     728,     0,  1251,  2098,  1251,  1251,     0,     0,  2738,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   731,     0,
       0,     0,     0,     0,     0,     0,  2855,     0,     0,     0,
     919,     0,   507,     0,     0,     0,     0,     0,     0,     0,
       0,   586,     0,  2518,     0,     0,     0,     0,     0,   710,
       0, -1774,     0,     0,     0,     0,     0,   648,  1348,  1349,
    1350,  1351,  1352,  1353,     0,   729,     0,     0,     0,     0,
       0,   586,  1251,     0,     0,  1251,  1251,     0,     0,  1575,
     713,   714,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   480,
       0,     0,     0,     0,     0,     0,     0,  1320,  2912,     0,
    1321,     0,   507,   716,  1322,     0,  2735,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   728,     0,
       0,     0,     0,     0,     0,  2765,   648,   648,   648,     0,
    1610,   731,  1330,     0,     0,     0,     0,     0,     0, -1774,
    1629,     0,  1647,     0,     0,  1658,  1661,  1666,  1669,   728,
       0,     0,  2574,  2575,  2576,  2577,     0,  1452,     0,     0,
       0,     0,     0,     0,  1332,     0,     0,     0,     0,     0,
    1681,     0,  2735,     0,     0,     0,  1685,  1686,  1687,  1688,
    1689,  1690,  1691,   729,  2855,     0,     0,  1700,  1701,     0,
       0,     0,  1712,     0,     0,   731,  1715,     0,  1781,  1723,
    1724,  1725,  1726,  1727,  1728,  1729,  1730,  1731,     0,     0,
    1732,     0,     0,     0,   729,     0,     0,   902,  1452,     0,
    1053,     0,   728,     0,  2765,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2326,     0,     0,     0,     0,     0,
    2724,   648,  1764,  2645, -1549,     0,  1544,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1553,     0,  1554,
       0,     0,     0,     0,     0, -1774,     0,   731,  1560,     0,
       0,     0,     0,     0,  1296,  1297, -1563,     0,     0,     0,
       0, -1774,     0,     0,     0,  1561, -1774,   729,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1580,  1582,     0,     0,     0,     0,     0,
       0,     0,     0, -1774,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   728,     0, -1549,
       0,     0,     0,     0,     0,  1613,  1614,     0,     0,  1627,
    1628,     0,     0,  1053,     0,     0,  1884,  1885,     0,  1886,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0, -1563,     0,     0,     0,   728,     0,     0,  1341,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1053, -1549,     0,     0,     0,   731,     0,     0,     0,     0,
       0,     0,   729,     0,     0, -1549,   728,     0,     0,   728,
   -1549,     0,     0,     0,     0, -1549,     0,     0,     0,     0,
       0,     0,     0, -1563, -1549,     0,   731,     0, -1549,     0,
       0,     0,     0,     0,     0,     0,     0, -1563,     0,     0,
     729,     0, -1563,     0,     0,     0,     0, -1563,     0,     0,
       0,     0,     0,     0,  1053,     0, -1563,     0,     0, -1549,
   -1563,  1980,     0,     0,     0,     0,  1986,     0,     0,     0,
   -1774,   729,     0,     0,   729,     0,     0,     0,     0, -1549,
       0,     0,     0,     0,     0,     0,  1805,  1805,     0,     0,
       0, -1563,     0,     0,     0,     0,  2798,     0,     0,   731,
       0,     0,     0,     0,     0,  2001,     0,     0,     0,     0,
       0, -1563,     0,     0,  2819,     0,  1666,     0,  1666,  1666,
       0,     0,     0,     0,     0,     0,  2040,     0, -1549,     0,
    2043, -1549,     0,  2045,     0,     0,     0, -1549,  1251,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1251,     0,
    1356,  1251,     0,     0,     0,     0,     0,     0,     0,     0,
   -1563,     0,     0, -1563,     0,     0,     0,     0,     0, -1563,
    2063, -1549, -1774,  2066,     0,  2068,     0,     0,     0,  1348,
    1349,  1350,  1351,  1352,  1353,     0,     0,  2869,     0,     0,
       0,  1356,     0,     0, -1549,     0,     0,     0,     0,     0,
       0,     0,     0, -1563,     0,     0,     0,     0,     0,     0,
       0,   728,     0,     0,   731,     0,     0,  2896,     0,     0,
       0,     0,     0,     0,  1941,  1943, -1563,  1320,     0,     0,
    1321,     0,     0,     0,  1322,  1323,  1324,  1325,  1326,  1327,
    1405,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2081,  1251,   731,     0,  1328,  1424,  1730,     0,     0,     0,
       0,     0,  1330,     0,  1251,     0,     0,     0,     0,  1331,
       0,     0,     0,     0,  2144,     0,   729, -1549,     0,     0,
       0,     0,  2081,   731,     0, -1549,   731,     0,     0,     0,
       0,     0,     0,     0,  1332,     0,     0,     0,     0,     0,
       0,  1356, -1549,     0, -1549, -1549,     0,     0,  1356, -1563,
       0,     0,     0,     0,     0,     0,     0, -1563,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1053, -1563,     0, -1563, -1563,     0,     0,
       0, -1549,     0,     0, -1549, -1549, -1549,     0,     0,     0,
       0,     0,  1319,     0,     0,     0,     0,  1320,     0,     0,
    1321,     0,     0,     0,  1322,  1323,  1324,  1325,  1326,  1327,
       0,     0,     0, -1563,     0,     0, -1563, -1563, -1563,  2238,
       0,     0,     0,     0,  1328,     0,     0,  1329,     0,     0,
       0,     0,  1330,     0,     0,  1333,     0,     0,     0,  1331,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1334,     0,     0,     0,     0,  1335,     0,     0,     0,
       0,     0,     0,  2104,  1332,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2265,     0,     0,  1336,  1337,
       0,     0,     0,     0,  2269,     0,     0,  2270,     0,     0,
    2272,     0,     0,  1338,     0,     0,     0,  2136,  2136,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2293,  2294,     0,
       0,  1764,     0,     0,     0,     0,     0,     0,   731,     0,
       0,  1339,     0,  2305,  1340,     0,     0,     0,     0,     0,
       0,     0,  2312,     0,     0,  2315,     0,  2317,  1341,     0,
       0,  1342,     0,     0,  1320,  2321,     0,  1321,     0,     0,
       0,  1322,  1356,  2328,  2329,  1333,     0,     0,     0,     0,
       0,     0,     0,  1356,     0,     0,     0,  1654,     0,     0,
       0,  1334,     0,  1356,  1356,  1356,  1335,  1320,     0,  1330,
    1321,     0,  1356,  2368,  1322,     0, -1774,  1325,  1326,  1327,
       0,     0,     0,  2376,     0,     0,     0,     0,  1336,  1337,
       0,     0,     0,     0,  1328,     0,     0,     0,     0,  2389,
       0,  1332,  1330,  1338,     0,     0,     0,     0,     0,  1331,
       0,     0,     0,     0,     0,  1320,     0,     0,  1321,  2243,
    1343,     0,  1322,  1323,  1324,  1325,  1326,  1327,     0,     0,
    1356,     0,     0,     0,  1332,     0,     0,     0,     0,     0,
       0,  1339,  1328,     0,  1340,  2309,     0,     0,     0,  1320,
    1330,     0,  1321,     0,     0,     0,  1322,  1331,  1341,     0,
       0,  1342,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2327,     0,  1356,     0,     0,     0,     0,     0,     0,
       0,     0,  1332,     0,  1330,     0,     0,  1356,     0,     0,
       0, -1774,  1356,     0,     0,     0,     0,     0,     0,     0,
       0,     0, -1774,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1332,     0, -1774,     0,
       0,     0,  1344, -1774,     0,  1345,  1346,  1347,     0,  1348,
    1349,  1350,  1351,  1352,  1353,  1333,     0,     0,  2544,     0,
       0,     0,  1993,     0,     0,     0,     0,     0,     0,     0,
    1343,  1334,     0,     0,     0,     0,  1335,     0,     0,     0,
   -1774,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1336,  1337,
       0,     0,     0,  1333,     0,     0,  2567,  2557,  2558,     0,
       0,     0,  2559,  1338,     0,     0,     0,  2562,     0,  1334,
    2565,  2566,     0,     0,  1335,  2570,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1341,     0, -1774,     0,     0,
       0,     0,     0,     0,     0,     0,  1336,  1337,     0,     0,
       0,  1339,     0, -1774,  1340,     0,     0,     0, -1774,     0,
     982,  1338,     0,     0,     0,     0,   983,     0,  1341,     0,
       0,   902,  1344,   995,     0,  1345,  1346,  1347,     0,  1348,
    1349,  1350,  1351,  1352,  1353,     0,     0,     0,     0,  1251,
       0,     0,   996,     0,     0, -1774,     0,     0,  1356,  1339,
       0,     0,  1340,     0,     0,  2633,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1341,  1356,     0,  1342,
       0,     0,     0,     0,     0,     0,     0, -1774,     0,     0,
       0,     0,  2652,     0,     0,  1356,     0,  1654,  1654,     0,
    2019,     0,  1654,   997,     0,     0,  1356,     0,     0,  1356,
    1341,     0,     0,     0,  1356,     0,  1320,  1356,     0,  1321,
    1343,     0,     0,  1322,  1323,  1324,  1325,  1326,  1327,  1356,
       0,     0,   984,  1356,  1356,  1356,  1356,  1356,  1356,  1356,
       0,     0,     0,  1328,     0,  1654,  1654,     0,  1356,  1356,
       0,  1330,     0,     0,     0,     0,     0,     0,  1331,     0,
    1356,     0,     0,  1356,     0,     0,     0,     0,  1343,     0,
       0,  1356,  1356,  1356,  1356,  1356,  1356,  1356,  1356,  1356,
    1356,     0,     0,  1332,     0,     0,     0,     0,     0, -1774,
       0,     0,     0,     0,   998,     0,  1348,  1349,  1350,  1351,
    1352,  1353, -1774,     0,     0,     0,     0,     0,  2040,     0,
       0,     0,  1356,     0,     0,     0,     0,  2708,  2709,     0,
       0,  2710,  1344,     0,     0,  1345,  1346,  1347,     0,  1348,
    1349,  1350,  1351,  1352,  1353,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   999,     0,     0,     0,     0,
       0,     0,     0,  1000,     0,     0,     0,     0,  2752,  2753,
       0,     0,     0,     0,     0,  1001,     0,     0,     0,     0,
    1344,     0,  2767,  1345,  1346,  1347,     0,  1348,  1349,  1350,
    1351,  1352,  1353,     0,  1333,     0,   985,  1675,     0,     0,
    2777,     0,     0,     0,     0,     0,  1002,     0,     0,     0,
    1334,     0,  1251,     0, -1774,  1335,     0,  1251,     0,     0,
       0,  1348,  1349,  1350,  1351,  1352,  1353,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1336,  1337,     0,
       0,     0,  1356,  1356,  1356,     0,     0,  1003,     0,     0,
       0,   987,  1338,  1004,     0,     0,     0,     0,     0,     0,
    1580,  1582,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1005,     0,     0,     0,     0,
       0,  1006,     0,     0,     0,     0,     0,     0,     0,     0,
    1339,  2839,     0,  1340,     0,  1007,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1341,  1304,     0,
    1342,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   902,     0,     0,  2861,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1356,     0,
    2880,     0,     0,     0,  1356,     0,     0,     0,     0,   989,
       0,     0,     0,     0,     0,     0,     0,  2019,  2019,  1356,
       0,  1654,  1654,  1654,  1654,  1654,     0,     0,  1654,  1654,
    1654,  1654,  1654,  1654,  1654,  1654,  1654,  1654,  2019,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1356,  1343,
       0,  1356,     0,  1356,     0,     0,     0,  2019,  2019,     0,
       0,     0,     0,     0,     0,     0,  2752,     0,     0,     0,
    2924,  1356,  1654,  1654,  1356,     0,  1356,     0,     0,     0,
       0,  1580,  1582,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1251,     0,     0,     0,     0,     0,     0,     0,
    2953,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2752,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1344,  1356,     0,  1345,  1346,  1347,     0,  1348,  1349,
    1350,  1351,  1352,  1353,     0,     0,     0,     0,  1675,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3001,
    3001,     0,     0,     0,  1320,     0,     0,  1321,     0,     0,
       0,  1322,  1323,  1324,  1325,  1326,  1327,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1328,  3001,     0,     0,     0,     0,     0,     0,  1330,
       0,     0,     0,     0,     0,     0,  1331,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1356,  1320,     0,     0,
    1321,  1332,     0,  3001,  1322,  1323,  1324,  1325,  1326,  1327,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1356,  1328,     0,     0,  1356,  1356,     0,
    1356,     0,  1330,  2019,  2019,  2019,  2019,  2019,     0,  1331,
       0,  2019,  2019,  2019,  2019,  2019,  2019,  2019,  2019,  2019,
    2019,  1356,  1356,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1356,  1332,     0,     0,     0,     0,     0,
    1356,     0,     0,  1356,     0,  1356,     0,     0,     0,  1356,
       0,     0,  2019,  2019,     0,  1320,  1356,  1356,  1321,     0,
       0,     0,  1322,  1323,  1324,  1325,  1326,  1327,     0,     0,
       0,     0,  1333,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1328,     0,     0,     0,  1251,     0,  1334,     0,
    1330,  1320,     0,  1335,  1321,     0,  1356,  1331,  1322,  1323,
    1324,  1325,  1326,  1327,  1356,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1336,  1337,  1356,  1328,     0,
       0,     0,  1332,     0,     0,     0,  1330,     0,     0,     0,
    1338,  1320,     0,  1331,  1321,  1333,     0,     0,  1322,     0,
       0,  1325,  1326,  1327,     0,     0,     0,  1654,     0,     0,
       0,  1334,     0,     0,     0,     0,  1335,     0,  1332,     0,
       0,     0,     0,     0,     0,     0,  1330,     0,  1339,     0,
       0,  1340,     0,  1331,     0,     0,     0,     0,  1336,  1337,
       0,     0,     0,     0,     0,  1341,     0,     0,  1342,     0,
       0,     0,     0,  1338,     0,     0,     0,     0,  1332,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1333,     0,     0,     0,     0,     0,     0,
       0,  1339,     0,     0,  1340,     0,     0,     0,     0,  1334,
       0,     0,     0,     0,  1335,     0,     0,     0,  1341,     0,
       0,  1342,     0,     0,     0,     0,     0,     0,     0,  1333,
       0,     0,     0,     0,     0,     0,  1336,  1337,     0,     0,
       0,     0,  1356,     0,     0,  1334,  1654,  1343,     0,     0,
    1335,  1338,   982,     0,     0,  1356,  1356,  1356,   983,     0,
    1356,     0,     0,  1356,  1356,   995,     0,     0,  1356,  1333,
       0,     0,  1336,  1337,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   996,  1334,     0,  1338,     0,  1339,
    1335,     0,  1340,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1341,     0,     0,  1342,
    1343,     0,  1336,  1337,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1339,     0,  1338,  1340,     0,
       0,  1356,     0,     0,     0,   997,     0,  2019,     0,     0,
       0,     0,  1341,     0,     0,  1342,     0,     0,     0,  1344,
    1356,     0,  1345,  1346,  1347,     0,  1348,  1349,  1350,  1351,
    1352,  1353,     0,     0,   984,  1339,  2047,     0,  1340,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1341,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1343,     0,
    2019,  1654,     0,     0,     0,     0,  1356,  1356,  1356,     0,
       0,     0,  1344,     0,     0,  1345,  1346,  1347,     0,  1348,
    1349,  1350,  1351,  1352,  1353,     0,   998,     0,     0,  2268,
       0,     0,     0,     0,  1343,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1356,  1356,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1356,     0,     0,     0,     0,
       0,     0,     0,     0,  1343,  1356,     0,   999,     0,     0,
       0,     0,     0,     0,     0,  1000,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1001,     0,     0,
    1344,     0,     0,  1345,  1346,  1347,     0,  1348,  1349,  1350,
    1351,  1352,  1353,     0,     0,     0,     0,  2310,   985,  2019,
       0,     0,     0,     0,     0,     0,     0,     0,  1002,     0,
       0,     0,     0,     0,     0,     0,  1344,  1356,     0,  1345,
    1346,  1347,     0,  1348,  1349,  1350,  1351,  1352,  1353,     0,
       0,     0,     0,  2397,     0,     0,     0,     0,     0,  1356,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1853,
       0,     0,     0,   987,     0,  1004,  1344,     0,  1356,  1345,
    1346,  1347,     0,  1348,  1349,  1350,  1351,  1352,  1353,     0,
       0,     0,     0,     0,     0,     0,     0,  1005,     0,     0,
       0,     0,     0,  1854,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1007,     0,     0,
       0,     0,  1356,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1356,     0,     0,     0,     0,     0,     0,     0,     0,
    1019,   822,   550,   823,   824,   825,   826,   827,     0,     0,
       0,   989,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,  1020,   102,   103,   104,
       0,     0,     0,     0,   828,     0,     0,   105,   106,  1356,
     107,   108,   109,  1021,   111,   112,   113,   114,   829,  1022,
     830,   831,     0,   119,   120,   121,   122,   123,   124,   832,
     833,   125,   126,   834,   835,   129,     0,   130,   131,   132,
     133,   836,     0,  1023,     0,   136,   137,   138,   139,   140,
     141,  1024,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,  1025,   153,   154,   155,   838,   839,   840,
    1026,   842,   843,   844,   157,   158,   159,   160,   161,   162,
     163,   845,   846,   166,   847,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,  1027,
       0,   179,   180,   681,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   848,
     195,   196,   197,   198,   199,   849,   850,   201,     0,   202,
     203,   851,   205,     0,   206,     0,   207,  1028,     0,  1029,
     210,   211,  1030,  1031,   214,     0,   215,     0,   852,   853,
     218,     0,   219,   220,   221,   222,   223,   224,   225,  1032,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,  1033,   239,   240,   241,   242,   243,   244,
     854,   855,     0,   856,     0,   248,  1034,  1035,   251,  1036,
     253,   254,   255,   256,   257,   258,     0,     0,   259,  1037,
     261,  1038,     0,   263,   264,   265,   857,   858,   266,   267,
     268,   269,   270,  1039,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   859,  1040,   860,   293,   294,   295,   296,   861,
     297,   298,  1041,   300,   862,   863,   302,   864,   304,   305,
     306,     0,   307,   308,     0,     0,   865,   310,   311,     0,
       0,   312,   313,  1042,   315,  1043,   866,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     867,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   868,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
    1044,   367,   368,   369,   869,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,   870,   387,   388,   389,   390,   391,  1045,   393,
     394,   871,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,  1046,   410,   872,   412,
       0,   413,   414,     0,   415,  1047,   417,   418,   419,   420,
     421,     0,   873,   874,     0,     0,   424,   425,   875,   427,
     876,   877,   429,   430,  1048,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,   879,     0,   442,
     443,   444,   445,   446,   447,   880,  1049,   449,  1050,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     881,     0,     0,     0,     0,     0,     0,   882,   883,  1051,
       0,     0,     0,     0,   885,     0,   886,  1052,     0,     0,
       0,   887,     0,   888,   889,    93,   822,   550,   823,   824,
     825,   826,   827,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,     0,     0,     0,     0,   828,
       0,     0,   105,   106,     0,   107,   108,   109,   110,   111,
     112,   113,   114,   829,   116,   830,   831,     0,   119,   120,
     121,   122,   123,   124,   832,   833,   125,   126,   834,   835,
     129,     0,   130,   131,   132,   133,   836,     0,   837,     0,
     136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
       0,   146,   147,   148,   149,   150,   151,     0,   152,   153,
     154,   155,   838,   839,   840,   841,   842,   843,   844,   157,
     158,   159,   160,   161,   162,   163,   845,   846,   166,   847,
     167,     0,   168,   169,   170,   171,   172,   173,     0,   174,
     175,   176,   177,   178,     0,     0,   179,   180,   681,   182,
     183,     0,   184,   185,   186,     0,   187,   188,   189,     0,
     190,   191,   192,   193,   848,   195,   196,   197,   198,   199,
     849,   850,   201,     0,   202,   203,   851,   205,     0,   206,
       0,   207,   208,     0,   209,   210,   211,   212,   213,   214,
       0,   215,     0,   852,   853,   218,     0,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,   238,   239,
     240,   241,   242,   243,   244,   854,   855,     0,   856,     0,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,     0,     0,   259,   260,   261,   262,     0,   263,   264,
     265,   857,   858,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   859,   291,   860,
     293,   294,   295,   296,   861,   297,   298,   299,   300,   862,
     863,   302,   864,   304,   305,   306,     0,   307,   308,     0,
       0,   865,   310,   311,     0,     0,   312,   313,   314,   315,
     316,   866,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,     0,   328,   329,   867,   331,   332,   333,   334,
     335,   336,     0,   337,   338,   339,   340,   341,   342,     0,
     343,   344,   345,   868,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,     0,   364,   365,   366,   367,   368,   369,   869,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,    26,   382,   383,   384,   385,   386,   870,   387,   388,
     389,   390,   391,   392,   393,   394,   871,   396,     0,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   872,   412,     0,   413,   414,    31,   415,
     416,   417,   418,   419,   420,   421,     0,   873,   874,     0,
       0,   424,   425,   875,   427,   876,   877,   429,   430,   878,
     432,   433,   434,   435,   436,     0,     0,   437,   438,   439,
     440,   441,   879,     0,   442,   443,   444,   445,   446,   578,
     880,     0,   449,   450,   451,   452,   453,   454,   455,     0,
       0,   456,     0,    34,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   881,     0,    35,     0,     0,
       0,     0,   882,   883,     0,     0,     0,     0,     0,   885,
       0,   886,  2851,     0,     0,     0,   887,     0,   888,   889,
      93,   822,   550,   823,   824,   825,   826,   827,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,   828,     0,     0,   105,   106,     0,
     107,   108,   109,   110,   111,   112,   113,   114,   829,   116,
     830,   831,     0,   119,   120,   121,   122,   123,   124,   832,
     833,   125,   126,   834,   835,   129,     0,   130,   131,   132,
     133,   836,     0,   837,     0,   136,   137,   138,   139,   140,
     141,   142,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,   152,   153,   154,   155,   838,   839,   840,
     841,   842,   843,   844,   157,   158,   159,   160,   161,   162,
     163,   845,   846,   166,   847,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   681,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   848,
     195,   196,   197,   198,   199,   849,   850,   201,     0,   202,
     203,   851,   205,     0,   206,     0,   207,   208,     0,   209,
     210,   211,   212,   213,   214,     0,   215,     0,   852,   853,
     218,     0,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,   238,   239,   240,   241,   242,   243,   244,
     854,   855,     0,   856,     0,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,     0,     0,   259,   260,
     261,   262,     0,   263,   264,   265,   857,   858,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   859,   291,   860,   293,   294,   295,   296,   861,
     297,   298,   299,   300,   862,   863,   302,   864,   304,   305,
     306,     0,   307,   308,     0,     0,   865,   310,   311,     0,
       0,   312,   313,   314,   315,   316,   866,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     867,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   868,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
     366,   367,   368,   369,   869,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,    26,   382,   383,   384,
     385,   386,   870,   387,   388,   389,   390,   391,   392,   393,
     394,   871,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   872,   412,
       0,   413,   414,    31,   415,   416,   417,   418,   419,   420,
     421,     0,   873,   874,     0,     0,   424,   425,   875,   427,
     876,   877,   429,   430,   878,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,   879,     0,   442,
     443,   444,   445,   446,   578,   880,     0,   449,   450,   451,
     452,   453,   454,   455,     0,     0,   456,     0,    34,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     881,     0,    35,     0,     0,     0,     0,   882,   883,     0,
       0,     0,     0,     0,   885,     0,   886,     0,     0,     0,
       0,   887,     0,   888,   889,    93,   822,   550,   823,   824,
     825,   826,   827,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,     0,     0,     0,     0,   828,
       0,     0,   105,   106,     0,   107,   108,   109,   110,   111,
     112,   113,   114,   829,   116,   830,   831,  1662,   119,   120,
     121,   122,   123,   124,   832,   833,   125,   126,   834,   835,
     129,     0,   130,   131,   132,   133,   836,     0,   837,     0,
     136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
       0,   146,   147,   148,   149,   150,   151,     0,   152,   153,
     154,   155,   838,   839,   840,   841,   842,   843,   844,   157,
     158,   159,   160,   161,   162,   163,   845,   846,   166,   847,
     167,     0,   168,   169,   170,   171,   172,   173,     0,   174,
     175,   176,   177,   178,     0,     0,   179,   180,   681,   182,
     183,     0,   184,   185,   186,     0,   187,   188,   189,     0,
     190,   191,   192,   193,   848,   195,   196,   197,   198,   199,
     849,   850,   201,     0,   202,   203,   851,   205,     0,   206,
       0,   207,   208,  1663,   209,   210,   211,   212,   213,   214,
       0,   215,     0,   852,   853,   218,     0,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,   238,   239,
     240,   241,   242,   243,   244,   854,   855,     0,   856,     0,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,     0,  1664,   259,   260,   261,   262,     0,   263,   264,
     265,   857,   858,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   859,   291,   860,
     293,   294,   295,   296,   861,   297,   298,   299,   300,   862,
     863,   302,   864,   304,   305,   306,     0,   307,   308,     0,
       0,   865,   310,   311,     0,     0,   312,   313,   314,   315,
     316,   866,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,     0,   328,   329,   867,   331,   332,   333,   334,
     335,   336,     0,   337,   338,   339,   340,   341,   342,     0,
     343,   344,   345,   868,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,     0,   364,   365,   366,   367,   368,   369,   869,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,   386,   870,   387,   388,
     389,   390,   391,   392,   393,   394,   871,   396,     0,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   872,   412,     0,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,     0,   873,   874,     0,
    1665,   424,   425,   875,   427,   876,   877,   429,   430,   878,
     432,   433,   434,   435,   436,     0,     0,   437,   438,   439,
     440,   441,   879,     0,   442,   443,   444,   445,   446,   447,
     880,     0,   449,   450,   451,   452,   453,   454,   455,     0,
       0,   456,     0,     0,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   881,     0,     0,     0,     0,
       0,     0,   882,   883,     0,     0,     0,     0,     0,   885,
       0,   886,     0,     0,     0,     0,   887,     0,   888,   889,
      93,   822,   550,   823,   824,   825,   826,   827,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,  -960,   102,   103,   104,
       0,     0,     0,  -960,   828,     0,     0,   105,   106,     0,
     107,   108,   109,   110,   111,   112,   113,   114,   829,   116,
     830,   831,     0,   119,   120,   121,   122,   123,   124,   832,
     833,   125,   126,   834,   835,   129,     0,   130,   131,   132,
     133,   836,     0,   837,     0,   136,   137,   138,   139,   140,
     141,   142,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,   152,   153,   154,   155,   838,   839,   840,
     841,   842,   843,   844,   157,   158,   159,   160,   161,   162,
     163,   845,   846,   166,   847,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   681,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   848,
     195,   196,   197,   198,   199,   849,   850,   201,     0,   202,
     203,   851,   205,     0,   206,     0,   207,   208,     0,   209,
     210,   211,   212,   213,   214,     0,   215,     0,   852,   853,
     218,     0,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,   238,   239,   240,   241,   242,   243,   244,
     854,   855,     0,   856,     0,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,     0,     0,   259,   260,
     261,   262,     0,   263,   264,   265,   857,   858,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   859,   291,   860,   293,   294,   295,   296,   861,
     297,   298,   299,   300,   862,   863,   302,   864,   304,   305,
     306,     0,   307,   308,     0,     0,   865,   310,   311,     0,
       0,   312,   313,   314,   315,   316,   866,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     867,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   868,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
     366,   367,   368,   369,   869,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,   870,   387,   388,   389,   390,   391,   392,   393,
     394,   871,   396,  -960,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   872,   412,
       0,   413,   414,     0,   415,   416,   417,   418,   419,   420,
     421,     0,   873,   874,     0,     0,   424,   425,   875,   427,
     876,   877,   429,   430,   878,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,   879,     0,   442,
     443,   444,   445,   446,   447,   880,     0,   449,   450,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     881,     0,     0,     0,     0,     0,     0,   882,   883,     0,
       0,     0,     0,     0,   885,     0,   886,     0,     0,     0,
       0,   887,     0,   888,   889,    93,   822,   550,   823,   824,
     825,   826,   827,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,  1401,   102,   103,   104,     0,     0,     0,     0,   828,
       0,     0,   105,   106,     0,   107,   108,   109,   110,   111,
     112,   113,   114,   829,   116,   830,   831,     0,   119,   120,
     121,   122,   123,   124,   832,   833,   125,   126,   834,   835,
     129,     0,   130,   131,   132,   133,   836,     0,   837,     0,
     136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
       0,   146,   147,   148,   149,   150,   151,     0,   152,   153,
     154,   155,   838,   839,   840,   841,   842,   843,   844,   157,
     158,   159,   160,   161,   162,   163,   845,   846,   166,   847,
     167,     0,   168,   169,   170,   171,   172,   173,     0,   174,
     175,   176,   177,   178,     0,     0,   179,   180,   681,   182,
     183,     0,   184,   185,   186,     0,   187,   188,   189,     0,
     190,   191,   192,   193,   848,   195,   196,   197,   198,   199,
     849,   850,   201,     0,   202,   203,   851,   205,     0,   206,
       0,   207,   208,     0,   209,   210,   211,   212,   213,   214,
       0,   215,     0,   852,   853,   218,     0,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,   238,   239,
     240,   241,   242,   243,   244,   854,   855,     0,   856,     0,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,     0,     0,   259,   260,   261,   262,     0,   263,   264,
     265,   857,   858,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   859,   291,   860,
     293,   294,   295,   296,   861,   297,   298,   299,   300,   862,
     863,   302,   864,   304,   305,   306,     0,   307,   308,     0,
       0,   865,   310,   311,     0,     0,   312,   313,   314,   315,
     316,   866,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,     0,   328,   329,   867,   331,   332,   333,   334,
     335,   336,     0,   337,   338,   339,   340,   341,   342,     0,
     343,   344,   345,   868,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,     0,   364,   365,   366,   367,   368,   369,   869,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,   386,   870,   387,   388,
     389,   390,   391,   392,   393,   394,   871,   396,     0,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   872,   412,     0,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,     0,   873,   874,     0,
       0,   424,   425,   875,   427,   876,   877,   429,   430,   878,
     432,   433,   434,   435,   436,     0,     0,   437,   438,   439,
     440,   441,   879,     0,   442,   443,   444,   445,   446,   447,
     880,     0,   449,   450,   451,   452,   453,   454,   455,     0,
       0,   456,     0,     0,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   881,     0,     0,     0,     0,
       0,     0,   882,   883,  1402,     0,     0,     0,     0,   885,
       0,   886,     0,     0,     0,     0,   887,     0,   888,   889,
      93,   822,   550,   823,   824,   825,   826,   827,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,  2739,   102,   103,   104,
       0,     0,     0,     0,   828,     0,     0,   105,   106,     0,
     107,   108,   109,   110,   111,   112,   113,   114,   829,   116,
     830,   831,     0,   119,   120,   121,   122,   123,   124,   832,
     833,   125,   126,   834,   835,   129,     0,   130,   131,   132,
     133,   836,     0,   837,     0,   136,   137,   138,   139,   140,
     141,   142,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,   152,   153,  2740,   155,   838,   839,   840,
     841,   842,   843,   844,   157,   158,   159,   160,   161,   162,
     163,   845,   846,   166,   847,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   681,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   848,
     195,   196,   197,   198,   199,   849,   850,   201,     0,   202,
     203,   851,   205,     0,   206,     0,   207,   208,     0,   209,
     210,   211,   212,   213,   214,     0,   215,     0,  2741,   853,
     218,     0,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,   238,   239,   240,   241,   242,   243,   244,
     854,   855,     0,   856,     0,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,     0,     0,   259,   260,
     261,   262,     0,   263,   264,   265,   857,   858,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   859,   291,   860,   293,   294,   295,   296,   861,
     297,   298,   299,   300,   862,   863,   302,   864,   304,   305,
     306,     0,   307,   308,     0,     0,   865,   310,   311,     0,
       0,   312,   313,   314,   315,   316,   866,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     867,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   868,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
     366,   367,   368,  2742,   869,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,   870,   387,   388,   389,   390,   391,   392,   393,
     394,   871,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   872,   412,
       0,   413,   414,     0,   415,   416,   417,   418,   419,   420,
     421,     0,   873,   874,     0,     0,   424,   425,   875,   427,
     876,   877,   429,   430,   878,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,   879,     0,   442,
     443,   444,   445,   446,   447,   880,     0,   449,   450,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     881,     0,     0,     0,     0,     0,     0,   882,   883,  2743,
       0,     0,     0,     0,   885,     0,  2744,     0,     0,     0,
       0,   887,     0,   888,   889,    93,   822,   550,   823,   824,
     825,   826,   827,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,     0,     0,     0,     0,   828,
       0,     0,   105,   106,     0,   107,   108,   109,   110,   111,
     112,   113,   114,   829,   116,   830,   831,     0,   119,   120,
     121,   122,   123,   124,   832,   833,   125,   126,   834,   835,
     129,     0,   130,   131,   132,   133,   836,     0,   837,     0,
     136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
       0,   146,   147,   148,   149,   150,   151,     0,   152,   153,
     154,   155,   838,   839,   840,   841,   842,   843,   844,   157,
     158,   159,   160,   161,   162,   163,   845,   846,   166,   847,
     167,     0,   168,   169,   170,   171,   172,   173,     0,   174,
     175,   176,   177,   178,     0,     0,   179,   180,   681,   182,
     183,     0,   184,   185,   186,     0,   187,   188,   189,     0,
     190,   191,   192,   193,   848,   195,   196,   197,   198,   199,
     849,   850,   201,     0,   202,   203,   851,   205,     0,   206,
       0,   207,   208,     0,   209,   210,   211,   212,   213,   214,
       0,   215,     0,   852,   853,   218,     0,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,   238,   239,
     240,   241,   242,   243,   244,   854,   855,     0,   856,     0,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,     0,     0,   259,   260,   261,   262,     0,   263,   264,
     265,   857,   858,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   859,   291,   860,
     293,   294,   295,   296,   861,   297,   298,   299,   300,   862,
     863,   302,   864,   304,   305,   306,     0,   307,   308,     0,
       0,   865,   310,   311,     0,     0,   312,   313,   314,   315,
     316,   866,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,     0,   328,   329,   867,   331,   332,   333,   334,
     335,   336,     0,   337,   338,   339,   340,   341,   342,     0,
     343,   344,   345,   868,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,     0,   364,   365,   366,   367,   368,   369,   869,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,   386,   870,   387,   388,
     389,   390,   391,   392,   393,   394,   871,   396,     0,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   872,   412,     0,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,     0,   873,   874,     0,
       0,   424,   425,   875,   427,   876,   877,   429,   430,   878,
     432,   433,   434,   435,   436,     0,     0,   437,   438,   439,
     440,   441,   879,     0,   442,   443,   444,   445,   446,   447,
     880,     0,   449,   450,   451,   452,   453,   454,   455,     0,
       0,   456,     0,     0,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   881,     0,     0,     0,     0,
       0,     0,   882,   883,   884,     0,     0,     0,     0,   885,
       0,   886,     0,     0,     0,     0,   887,     0,   888,   889,
      93,  1415,   550,   823,   824,   825,  1416,   827,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,  1417,   102,   103,   104,
       0,     0,     0,     0,   828,     0,     0,   105,   106,     0,
     107,   108,   109,   110,   111,   112,   113,   114,   829,   116,
     830,   831,     0,   119,   120,   121,   122,   123,   124,   832,
     833,   125,   126,   834,   835,   129,     0,   130,   131,   132,
     133,   836,     0,   837,     0,   136,   137,   138,   139,   140,
     141,   142,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,   152,   153,   154,   155,   838,   839,   840,
     841,   842,   843,   844,   157,   158,   159,   160,   161,   162,
     163,   845,   846,   166,   847,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   681,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   848,
     195,   196,   197,   198,   199,   849,   850,   201,     0,   202,
     203,   851,   205,     0,   206,     0,   207,   208,     0,   209,
     210,   211,   212,   213,   214,     0,   215,     0,   852,   853,
     218,     0,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,   238,   239,   240,   241,   242,   243,   244,
     854,   855,     0,   856,     0,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,     0,     0,   259,   260,
     261,   262,     0,   263,   264,   265,   857,   858,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   859,   291,   860,   293,   294,   295,   296,   861,
     297,   298,   299,   300,   862,   863,   302,   864,   304,   305,
     306,     0,   307,   308,     0,     0,   865,   310,   311,     0,
       0,   312,   313,   314,   315,   316,   866,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     867,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   868,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
     366,   367,   368,   369,   869,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,   870,   387,   388,   389,   390,   391,   392,   393,
     394,   871,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   872,   412,
       0,   413,   414,     0,   415,   416,   417,   418,   419,   420,
     421,     0,   873,   874,     0,     0,   424,   425,   875,   427,
     876,   877,   429,   430,   878,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,   879,     0,   442,
     443,   444,   445,   446,   447,   880,     0,   449,   450,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     881,     0,     0,     0,     0,     0,     0,   882,   883,     0,
       0,     0,     0,     0,   885,     0,   886,     0,     0,     0,
       0,   887,     0,   888,   889,    93,   822,   550,   823,   824,
     825,   826,   827,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,     0,     0,     0,     0,   828,
       0,     0,   105,   106,     0,   107,   108,   109,   110,   111,
     112,   113,   114,   829,   116,   830,   831,     0,   119,   120,
     121,   122,   123,   124,   832,   833,   125,   126,   834,   835,
     129,     0,   130,   131,   132,   133,   836,     0,   837,     0,
     136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
       0,   146,   147,   148,   149,   150,   151,     0,   152,   153,
     154,   155,   838,   839,   840,   841,   842,   843,   844,   157,
     158,   159,   160,   161,   162,   163,   845,   846,   166,   847,
     167,     0,   168,   169,   170,   171,   172,   173,     0,   174,
     175,   176,   177,   178,     0,     0,   179,   180,   681,   182,
     183,     0,   184,   185,   186,     0,   187,   188,   189,     0,
     190,   191,   192,   193,   848,   195,   196,   197,   198,   199,
     849,   850,   201,     0,   202,   203,   851,   205,     0,   206,
       0,   207,   208,     0,   209,   210,   211,   212,   213,   214,
       0,   215,     0,   852,   853,   218,     0,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,   238,   239,
     240,   241,   242,   243,   244,   854,   855,     0,   856,     0,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,     0,     0,   259,   260,   261,   262,     0,   263,   264,
     265,   857,   858,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   859,   291,   860,
     293,   294,   295,   296,   861,   297,   298,   299,   300,   862,
     863,   302,   864,   304,   305,   306,     0,   307,   308,     0,
       0,   865,   310,   311,     0,     0,   312,   313,   314,   315,
     316,   866,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,     0,   328,   329,   867,   331,   332,   333,   334,
     335,   336,     0,   337,   338,   339,   340,   341,   342,     0,
     343,   344,   345,   868,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,     0,   364,   365,   366,   367,   368,   369,   869,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,   386,   870,   387,   388,
     389,   390,   391,   392,   393,   394,   871,   396,     0,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   872,   412,     0,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,     0,   873,   874,     0,
       0,   424,   425,   875,   427,   876,   877,   429,   430,   878,
     432,   433,   434,   435,   436,     0,     0,   437,   438,   439,
     440,   441,   879,     0,   442,   443,   444,   445,   446,   447,
     880,     0,   449,   450,   451,   452,   453,   454,   455,     0,
       0,   456,     0,     0,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   881,     0,     0,     0,     0,
       0,     0,   882,   883,     0,     0,     0,     0,     0,   885,
       0,   886,  1656,     0,     0,     0,   887,     0,   888,   889,
    1019,   822,   550,   823,   824,   825,   826,   827,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,   828,     0,     0,   105,   106,     0,
     107,   108,   109,  1021,   111,   112,   113,   114,   829,  1022,
     830,   831,     0,   119,   120,   121,   122,   123,   124,   832,
     833,   125,   126,   834,   835,   129,     0,   130,   131,   132,
     133,   836,     0,  1023,     0,   136,   137,   138,   139,   140,
     141,  1024,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,  1025,   153,   154,   155,   838,   839,   840,
    1026,   842,   843,   844,   157,   158,   159,   160,   161,   162,
     163,   845,   846,   166,   847,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   681,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   848,
     195,   196,   197,   198,   199,   849,   850,   201,     0,   202,
     203,   851,   205,     0,   206,     0,   207,  1028,     0,  1029,
     210,   211,  1030,  1031,   214,     0,   215,     0,   852,   853,
     218,     0,   219,   220,   221,   222,   223,   224,   225,  1032,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,  1033,   239,   240,   241,   242,   243,   244,
     854,   855,     0,   856,     0,   248,  1034,  1035,   251,  1036,
     253,   254,   255,   256,   257,   258,     0,     0,   259,  1037,
     261,  1038,     0,   263,   264,   265,   857,   858,   266,   267,
     268,   269,   270,  1039,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   859,  1040,   860,   293,   294,   295,   296,   861,
     297,   298,  1041,   300,   862,   863,   302,   864,   304,   305,
     306,     0,   307,   308,     0,     0,   865,   310,   311,     0,
       0,   312,   313,  1042,   315,  1043,   866,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     867,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   868,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
    1044,   367,   368,   369,   869,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,   870,   387,   388,   389,   390,   391,  1045,   393,
     394,   871,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,  1046,   410,   872,   412,
       0,   413,   414,     0,   415,  1047,   417,   418,   419,   420,
     421,     0,   873,   874,     0,     0,   424,   425,   875,   427,
     876,   877,   429,   430,  1048,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,   879,     0,   442,
     443,   444,   445,   446,   447,   880,  1879,   449,  1050,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     881,     0,     0,     0,     0,     0,     0,   882,   883,     0,
       0,     0,     0,     0,   885,     0,   886,     0,     0,     0,
       0,   887,     0,   888,   889,  1019,   822,   550,   823,   824,
     825,   826,   827,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,     0,     0,     0,     0,   828,
       0,     0,   105,   106,     0,   107,   108,   109,  1021,   111,
     112,   113,   114,   829,  1022,   830,   831,     0,   119,   120,
     121,   122,   123,   124,   832,   833,   125,   126,   834,   835,
     129,     0,   130,   131,   132,   133,   836,     0,  1023,     0,
     136,   137,   138,   139,   140,   141,  1024,   143,   144,   145,
       0,   146,   147,   148,   149,   150,   151,     0,  1025,   153,
     154,   155,   838,   839,   840,  1026,   842,   843,   844,   157,
     158,   159,   160,   161,   162,   163,   845,   846,   166,   847,
     167,     0,   168,   169,   170,   171,   172,   173,     0,   174,
     175,   176,   177,   178,     0,     0,   179,   180,   681,   182,
     183,     0,   184,   185,   186,     0,   187,   188,   189,     0,
     190,   191,   192,   193,   848,   195,   196,   197,   198,   199,
     849,   850,   201,     0,   202,   203,   851,   205,     0,   206,
       0,   207,  1028,     0,  1029,   210,   211,  1030,  1031,   214,
       0,   215,     0,   852,   853,   218,     0,   219,   220,   221,
     222,   223,   224,   225,  1032,   227,   228,   229,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,  1033,   239,
     240,   241,   242,   243,   244,   854,   855,     0,   856,     0,
     248,  1034,  1035,   251,  1036,   253,   254,   255,   256,   257,
     258,     0,     0,   259,  1037,   261,  1038,     0,   263,   264,
     265,   857,   858,   266,   267,   268,   269,   270,  1039,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   859,  1040,   860,
     293,   294,   295,   296,   861,   297,   298,  1041,   300,   862,
     863,   302,   864,   304,   305,   306,     0,   307,   308,     0,
       0,   865,   310,   311,     0,     0,   312,   313,  1042,   315,
    1043,   866,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,     0,   328,   329,   867,   331,   332,   333,   334,
     335,   336,     0,   337,   338,   339,   340,   341,   342,     0,
     343,   344,   345,   868,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,     0,   364,   365,  1044,   367,   368,   369,   869,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,   386,   870,   387,   388,
     389,   390,   391,  1045,   393,   394,   871,   396,     0,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,  1046,   410,   872,   412,     0,   413,   414,     0,   415,
    1047,   417,   418,   419,   420,   421,     0,   873,   874,     0,
       0,   424,   425,   875,   427,   876,   877,   429,   430,  1048,
     432,   433,   434,   435,   436,     0,     0,   437,   438,   439,
     440,   441,   879,     0,   442,   443,   444,   445,   446,   447,
     880,     0,   449,  1050,   451,   452,   453,   454,   455,     0,
       0,   456,     0,     0,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   881,     0,     0,     0,     0,
       0,     0,   882,   883,     0,     0,     0,     0,     0,   885,
       0,   886,  1923,     0,     0,     0,   887,     0,   888,   889,
      93,   822,   550,   823,   824,   825,   826,   827,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,   828,     0,     0,   105,   106,     0,
     107,   108,   109,   110,   111,   112,   113,   114,   829,   116,
     830,   831,     0,   119,   120,   121,   122,   123,   124,   832,
     833,   125,   126,   834,   835,   129,     0,   130,   131,   132,
     133,   836,     0,   837,     0,   136,   137,   138,   139,   140,
     141,   142,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,   152,   153,   154,   155,   838,   839,   840,
     841,   842,   843,   844,   157,   158,   159,   160,   161,   162,
     163,   845,   846,   166,   847,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   681,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   848,
     195,   196,   197,   198,   199,   849,   850,   201,     0,   202,
     203,   851,   205,     0,   206,     0,   207,   208,  1663,   209,
     210,   211,   212,   213,   214,     0,   215,     0,   852,   853,
     218,     0,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,   238,   239,   240,   241,   242,   243,   244,
     854,   855,     0,   856,     0,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,     0,     0,   259,   260,
     261,   262,     0,   263,   264,   265,   857,   858,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   859,   291,   860,   293,   294,   295,   296,   861,
     297,   298,   299,   300,   862,   863,   302,   864,   304,   305,
     306,     0,   307,   308,     0,     0,   865,   310,   311,     0,
       0,   312,   313,   314,   315,   316,   866,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     867,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   868,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
     366,   367,   368,   369,   869,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,   870,   387,   388,   389,   390,   391,   392,   393,
     394,   871,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   872,   412,
       0,   413,   414,     0,   415,   416,   417,   418,   419,   420,
     421,     0,   873,   874,     0,     0,   424,   425,   875,   427,
     876,   877,   429,   430,   878,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,   879,     0,   442,
     443,   444,   445,   446,   447,   880,     0,   449,   450,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     881,     0,     0,     0,     0,     0,     0,   882,   883,     0,
       0,     0,     0,     0,   885,     0,   886,     0,     0,     0,
       0,   887,     0,   888,   889,    93,   822,   550,   823,   824,
     825,   826,   827,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,     0,     0,     0,     0,   828,
       0,     0,   105,   106,     0,   107,   108,   109,   110,   111,
     112,   113,   114,   829,   116,   830,   831,     0,   119,   120,
     121,   122,   123,   124,   832,   833,   125,   126,   834,   835,
     129,     0,   130,   131,   132,   133,   836,     0,   837,     0,
     136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
       0,   146,   147,   148,   149,   150,   151,     0,   152,   153,
     154,   155,   838,   839,   840,   841,   842,   843,   844,   157,
     158,   159,   160,   161,   162,   163,   845,   846,   166,   847,
     167,     0,   168,   169,   170,   171,   172,   173,     0,   174,
     175,   176,   177,   178,     0,     0,   179,   180,   681,   182,
     183,     0,   184,   185,   186,     0,   187,   188,   189,     0,
     190,   191,   192,   193,   848,   195,   196,   197,   198,   199,
     849,   850,   201,     0,   202,   203,   851,   205,     0,   206,
       0,   207,   208,     0,   209,   210,   211,   212,   213,   214,
       0,   215,     0,   852,   853,   218,     0,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,   238,   239,
     240,   241,   242,   243,   244,   854,   855,     0,   856,     0,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,     0,     0,   259,   260,   261,   262,     0,   263,   264,
     265,   857,   858,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   859,   291,   860,
     293,   294,   295,   296,   861,   297,   298,   299,   300,   862,
     863,   302,   864,   304,   305,   306,     0,   307,   308,     0,
       0,   865,   310,   311,     0,     0,   312,   313,   314,   315,
     316,   866,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,     0,   328,   329,   867,   331,   332,   333,   334,
     335,   336,     0,   337,   338,   339,   340,   341,   342,     0,
     343,   344,   345,   868,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,     0,   364,   365,   366,   367,   368,   369,   869,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,   386,   870,   387,   388,
     389,   390,   391,   392,   393,   394,   871,   396,     0,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   872,   412,     0,   413,   414,  2237,   415,
     416,   417,   418,   419,   420,   421,     0,   873,   874,     0,
       0,   424,   425,   875,   427,   876,   877,   429,   430,   878,
     432,   433,   434,   435,   436,     0,     0,   437,   438,   439,
     440,   441,   879,     0,   442,   443,   444,   445,   446,   447,
     880,     0,   449,   450,   451,   452,   453,   454,   455,     0,
       0,   456,     0,     0,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   881,     0,     0,     0,     0,
       0,     0,   882,   883,     0,     0,     0,     0,     0,   885,
       0,   886,     0,     0,     0,     0,   887,     0,   888,   889,
      93,   822,   550,   823,   824,   825,   826,   827,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,   828,     0,     0,   105,   106,     0,
     107,   108,   109,   110,   111,   112,   113,   114,   829,   116,
     830,   831,     0,   119,   120,   121,   122,   123,   124,   832,
     833,   125,   126,   834,   835,   129,     0,   130,   131,   132,
     133,   836,     0,   837,     0,   136,   137,   138,   139,   140,
     141,   142,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,   152,   153,   154,   155,   838,   839,   840,
     841,   842,   843,   844,   157,   158,   159,   160,   161,   162,
     163,   845,   846,   166,   847,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   681,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   848,
     195,   196,   197,   198,   199,   849,   850,   201,     0,   202,
     203,   851,   205,     0,   206,     0,   207,   208,     0,   209,
     210,   211,   212,   213,   214,     0,   215,     0,   852,   853,
     218,     0,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,   238,   239,   240,   241,   242,   243,   244,
     854,   855,     0,   856,     0,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,     0,     0,   259,   260,
     261,   262,     0,   263,   264,   265,   857,   858,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   859,   291,   860,   293,   294,   295,   296,   861,
     297,   298,   299,   300,   862,   863,   302,   864,   304,   305,
     306,     0,   307,   308,     0,     0,   865,   310,   311,     0,
       0,   312,   313,   314,   315,   316,   866,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     867,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   868,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
     366,   367,   368,   369,   869,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,   870,   387,   388,   389,   390,   391,   392,   393,
     394,   871,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   872,   412,
       0,   413,   414,     0,   415,   416,   417,   418,   419,   420,
     421,     0,   873,   874,     0,     0,   424,   425,   875,   427,
     876,   877,   429,   430,   878,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,   879,     0,   442,
     443,   444,   445,   446,   447,   880,     0,   449,   450,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     881,     0,     0,     0,     0,     0,     0,   882,   883,     0,
       0,     0,     0,     0,   885,     0,   886,     0,     0,     0,
       0,   887,     0,   888,   889,  1019,   822,   550,   823,   824,
     825,   826,   827,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,     0,     0,     0,     0,   828,
       0,     0,   105,   106,     0,   107,   108,   109,  1021,   111,
     112,   113,   114,   829,  1022,   830,   831,     0,   119,   120,
     121,   122,   123,   124,   832,   833,   125,   126,   834,   835,
     129,     0,   130,   131,   132,   133,   836,     0,  1023,     0,
     136,   137,   138,   139,   140,   141,  1024,   143,   144,   145,
       0,   146,   147,   148,   149,   150,   151,     0,  1025,   153,
     154,   155,   838,   839,   840,  1026,   842,   843,   844,   157,
     158,   159,   160,   161,   162,   163,   845,   846,   166,   847,
     167,     0,   168,   169,   170,   171,   172,   173,     0,   174,
     175,   176,   177,   178,     0,     0,   179,   180,   681,   182,
     183,     0,   184,   185,   186,     0,   187,   188,   189,     0,
     190,   191,   192,   193,   848,   195,   196,   197,   198,   199,
     849,   850,   201,     0,   202,   203,   851,   205,     0,   206,
       0,   207,  1028,     0,  1029,   210,   211,  1030,  1031,   214,
       0,   215,     0,   852,   853,   218,     0,   219,   220,   221,
     222,   223,   224,   225,  1032,   227,   228,   229,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,  1033,   239,
     240,   241,   242,   243,   244,   854,   855,     0,   856,     0,
     248,  1034,  1035,   251,  1036,   253,   254,   255,   256,   257,
     258,     0,     0,   259,  1037,   261,  1038,     0,   263,   264,
     265,   857,   858,   266,   267,   268,   269,   270,  1039,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   859,  1040,   860,
     293,   294,   295,   296,   861,   297,   298,  1041,   300,   862,
     863,   302,   864,   304,   305,   306,     0,   307,   308,     0,
       0,   865,   310,   311,     0,     0,   312,   313,  1042,   315,
    1043,   866,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,     0,   328,   329,   867,   331,   332,   333,   334,
     335,   336,     0,   337,   338,   339,   340,   341,   342,     0,
     343,   344,   345,   868,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,     0,   364,   365,  1044,   367,   368,   369,   869,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,   386,   870,   387,   388,
     389,   390,   391,  1045,   393,   394,   871,   396,     0,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,  1046,   410,   872,   412,     0,   413,   414,     0,   415,
    1047,   417,   418,   419,   420,   421,     0,   873,   874,     0,
       0,   424,   425,   875,   427,   876,   877,   429,   430,  1048,
     432,   433,   434,   435,   436,     0,     0,   437,   438,   439,
     440,   441,   879,     0,   442,   443,   444,   445,   446,   447,
     880,     0,   449,  1050,   451,   452,   453,   454,   455,     0,
       0,   456,     0,     0,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   881,     0,     0,     0,     0,
       0,     0,   882,   883,     0,     0,     0,     0,     0,   885,
       0,   886,     0,     0,     0,     0,   887,     0,   888,   889,
      93,   822,   550,   823,   824,   825,   826,   827,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,   828,     0,     0,   105,   106,     0,
     107,   108,   109,   110,   111,   112,   113,   114,   829,   116,
     830,   831,     0,   119,   120,   121,   122,   123,   124,   832,
     833,   125,   126,   834,   835,   129,     0,   130,   131,   132,
     133,   836,     0,   837,     0,   136,   137,   138,   139,   140,
     141,   142,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,   152,   153,   154,   155,   838,   839,   840,
     841,   842,   843,   844,   157,   158,   159,   160,   161,   162,
     163,   845,   846,   166,   847,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   681,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   848,
     195,   196,   197,   198,   199,   849,   850,   201,     0,   202,
     203,   851,   205,     0,   206,     0,   207,   208,     0,   209,
     210,   211,   212,   213,   214,     0,   215,     0,   852,   853,
     218,     0,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,   238,   239,   240,   241,   242,   243,   244,
     854,   855,     0,   856,     0,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,     0,     0,   259,   260,
     261,   262,     0,   263,   264,   265,   857,   858,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   859,   291,   860,   293,   294,   295,   296,   861,
     297,   298,   299,   300,   862,   863,   302,   864,   304,   305,
     306,     0,   307,   308,     0,     0,   865,   310,   311,     0,
       0,   312,   313,   314,   315,   316,   866,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     867,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   868,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
     366,   367,   368,   369,   869,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,   870,   387,   388,   389,   390,   391,   392,   393,
     394,   871,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   872,   412,
       0,   413,   414,     0,   415,   416,   417,   418,   419,   420,
     421,     0,   873,   874,     0,     0,   424,   425,   875,   427,
     876,   877,   429,   430,   878,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,   879,     0,   442,
     443,   444,   445,   446,   447,   880,     0,   449,   450,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     881,     0,     0,     0,     0,     0,     0,  1420,  1421,     0,
       0,     0,     0,     0,   885,     0,   886,     0,     0,     0,
       0,   887,     0,   888,   889,    93,  1803,   550,   823,   824,
     825,   826,   827,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,     0,     0,     0,     0,   828,
       0,     0,   105,   106,     0,   107,   108,   109,   110,   111,
     112,   113,   114,   829,   116,   830,   831,     0,   119,   120,
     121,   122,   123,   124,   832,   833,   125,   126,   834,   835,
     129,     0,   130,   131,   132,   133,   836,     0,   837,     0,
     136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
       0,   146,   147,   148,   149,   150,   151,     0,   152,   153,
     154,   155,   838,   839,   840,   841,   842,   843,   844,   157,
     158,   159,   160,   161,   162,   163,   845,   846,   166,   847,
     167,     0,   168,   169,   170,   171,   172,   173,     0,   174,
     175,   176,   177,   178,     0,     0,   179,   180,   681,   182,
     183,     0,   184,   185,   186,     0,   187,   188,   189,     0,
     190,   191,   192,   193,   848,   195,   196,   197,   198,   199,
     849,   850,   201,     0,   202,   203,   851,   205,     0,   206,
       0,   207,   208,     0,   209,   210,   211,   212,   213,   214,
       0,   215,     0,   852,   853,   218,     0,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,   238,   239,
     240,   241,   242,   243,   244,   854,   855,     0,   856,     0,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,     0,     0,   259,   260,   261,   262,     0,   263,   264,
     265,   857,   858,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   859,   291,   860,
     293,   294,   295,   296,   861,   297,   298,   299,   300,   862,
     863,   302,   864,   304,   305,   306,     0,   307,   308,     0,
       0,   865,   310,   311,     0,     0,   312,   313,   314,   315,
     316,   866,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,     0,   328,   329,   867,   331,   332,   333,   334,
     335,   336,     0,   337,   338,   339,   340,   341,   342,     0,
     343,   344,   345,   868,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,     0,   364,   365,   366,   367,   368,   369,   869,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,   386,   870,   387,   388,
     389,   390,   391,   392,   393,   394,   871,   396,     0,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   872,   412,     0,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,     0,   873,   874,     0,
       0,   424,   425,   875,   427,   876,   877,   429,   430,   878,
     432,   433,   434,   435,   436,     0,     0,   437,   438,   439,
     440,   441,   879,     0,   442,   443,   444,   445,   446,   447,
     880,     0,   449,   450,   451,   452,   453,   454,   455,     0,
       0,   456,     0,     0,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   881,     0,     0,     0,     0,
       0,     0,   882,   883,     0,     0,     0,     0,     0,   885,
       0,   886,     0,     0,     0,     0,   887,     0,   888,   889,
      93,   822,   550,   823,   824,   825,   826,   827,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,   828,     0,     0,   105,   106,     0,
     107,   108,   109,   110,   111,   112,   113,   114,   829,   116,
     830,   831,     0,   119,   120,   121,   122,   123,   124,   832,
     833,   125,   126,   834,   835,   129,     0,   130,   131,   132,
     133,   836,     0,   837,     0,   136,   137,   138,   139,   140,
     141,   142,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,   152,   153,   154,   155,   838,   839,   840,
     841,   842,   843,   844,   157,   158,   159,   160,   161,   162,
     163,   845,   846,   166,   847,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   681,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   848,
     195,   196,   197,   198,   199,   849,   850,   201,     0,   202,
     203,   851,   205,     0,   206,     0,   207,   208,     0,   209,
     210,   211,   212,   213,   214,     0,   215,     0,   852,   853,
     218,     0,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,   238,   239,   240,   241,   242,   243,   244,
     854,   855,     0,   856,     0,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,     0,     0,   259,   260,
     261,   262,     0,   263,   264,   265,   857,   858,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   859,   291,   860,   293,   294,   295,   296,   861,
     297,   298,   299,   300,   862,   863,   302,   864,   304,   305,
     306,     0,   307,   308,     0,     0,   865,   310,   311,     0,
       0,   312,   313,   314,   315,   316,   866,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     867,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   868,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
     366,   367,   368,   369,   869,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,   870,   387,   388,   389,   390,   391,   392,   393,
     394,   871,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   872,   412,
       0,   413,   414,     0,   415,   416,   417,   418,   419,   420,
     421,     0,   873,   874,     0,     0,   424,   425,   875,   427,
     876,   877,   429,   430,   878,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,   879,     0,   442,
     443,   444,   445,   446,   447,   880,     0,   449,   450,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     881,     0,     0,     0,     0,     0,     0,   882,   883,     0,
       0,     0,     0,     0,   885,     0,  2039,     0,     0,     0,
       0,   887,     0,   888,   889,    93,   822,   550,   823,   824,
     825,   826,   827,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,     0,     0,     0,     0,   828,
       0,     0,   105,   106,     0,   107,   108,   109,   110,   111,
     112,   113,   114,   829,   116,   830,   831,     0,   119,   120,
     121,   122,   123,   124,   832,   833,   125,   126,   834,   835,
     129,     0,   130,   131,   132,   133,   836,     0,   837,     0,
     136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
       0,   146,   147,   148,   149,   150,   151,     0,   152,   153,
    2740,   155,   838,   839,   840,   841,   842,   843,   844,   157,
     158,   159,   160,   161,   162,   163,   845,   846,   166,   847,
     167,     0,   168,   169,   170,   171,   172,   173,     0,   174,
     175,   176,   177,   178,     0,     0,   179,   180,   681,   182,
     183,     0,   184,   185,   186,     0,   187,   188,   189,     0,
     190,   191,   192,   193,   848,   195,   196,   197,   198,   199,
     849,   850,   201,     0,   202,   203,   851,   205,     0,   206,
       0,   207,   208,     0,   209,   210,   211,   212,   213,   214,
       0,   215,     0,  2741,   853,   218,     0,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,   238,   239,
     240,   241,   242,   243,   244,   854,   855,     0,   856,     0,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,     0,     0,   259,   260,   261,   262,     0,   263,   264,
     265,   857,   858,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   859,   291,   860,
     293,   294,   295,   296,   861,   297,   298,   299,   300,   862,
     863,   302,   864,   304,   305,   306,     0,   307,   308,     0,
       0,   865,   310,   311,     0,     0,   312,   313,   314,   315,
     316,   866,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,     0,   328,   329,   867,   331,   332,   333,   334,
     335,   336,     0,   337,   338,   339,   340,   341,   342,     0,
     343,   344,   345,   868,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,     0,   364,   365,   366,   367,   368,  2742,   869,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,   386,   870,   387,   388,
     389,   390,   391,   392,   393,   394,   871,   396,     0,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   872,   412,     0,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,     0,   873,   874,     0,
       0,   424,   425,   875,   427,   876,   877,   429,   430,   878,
     432,   433,   434,   435,   436,     0,     0,   437,   438,   439,
     440,   441,   879,     0,   442,   443,   444,   445,   446,   447,
     880,     0,   449,   450,   451,   452,   453,   454,   455,     0,
       0,   456,     0,     0,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   881,     0,     0,     0,     0,
       0,     0,   882,   883,     0,     0,     0,     0,     0,   885,
       0,  2744,     0,     0,     0,     0,   887,     0,   888,   889,
      93,   822,   550,   823,   824,   825,   826,   827,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,   828,     0,     0,   105,   106,     0,
     107,   108,   109,   110,   111,   112,   113,  2998,   829,   116,
     830,   831,     0,   119,   120,   121,   122,   123,   124,   832,
     833,   125,   126,   834,   835,   129,     0,   130,   131,   132,
     133,   836,     0,   837,     0,   136,   137,   138,   139,   140,
     141,   142,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,   152,   153,   154,  2999,   838,   839,   840,
     841,   842,   843,   844,   157,   158,   159,   160,   161,   162,
     163,   845,   846,   166,   847,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   681,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   848,
     195,   196,   197,   198,   199,   849,   850,   201,     0,   202,
     203,   851,   205,     0,   206,     0,   207,   208,     0,   209,
     210,   211,   212,   213,   214,     0,   215,     0,   852,   853,
     218,     0,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,   238,   239,   240,   241,   242,   243,   244,
     854,   855,     0,   856,     0,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,     0,     0,   259,   260,
     261,   262,     0,   263,   264,   265,   857,   858,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   859,   291,   860,   293,   294,   295,   296,   861,
     297,   298,   299,   300,   862,   863,   302,   864,   304,   305,
     306,     0,   307,   308,     0,     0,   865,   310,   311,     0,
       0,   312,   313,   314,   315,   316,   866,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     867,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   868,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
     366,   367,   368,   369,   869,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,   870,   387,   388,   389,   390,   391,   392,   393,
     394,   871,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   872,   412,
       0,   413,   414,     0,   415,   416,   417,   418,   419,   420,
     421,     0,   873,   874,     0,     0,   424,   425,   875,   427,
     876,   877,   429,   430,   878,   432,   433,  3000,   435,   436,
       0,     0,   437,   438,   439,   440,   441,   879,     0,   442,
     443,   444,   445,   446,   447,   880,     0,   449,   450,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     881,     0,     0,     0,     0,     0,     0,   882,   883,     0,
       0,     0,     0,     0,   885,     0,   886,     0,     0,     0,
       0,   887,     0,   888,   889,    93,   822,   550,   823,   824,
     825,   826,   827,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,     0,     0,     0,     0,   828,
       0,     0,   105,   106,     0,   107,   108,   109,   110,   111,
     112,   113,   114,   829,   116,   830,   831,     0,   119,   120,
     121,   122,   123,   124,   832,   833,   125,   126,   834,   835,
     129,     0,   130,   131,   132,   133,   836,     0,   837,     0,
     136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
       0,   146,   147,   148,   149,   150,   151,     0,   152,   153,
     154,  2999,   838,   839,   840,   841,   842,   843,   844,   157,
     158,   159,   160,   161,   162,   163,   845,   846,   166,   847,
     167,     0,   168,   169,   170,   171,   172,   173,     0,   174,
     175,   176,   177,   178,     0,     0,   179,   180,   681,   182,
     183,     0,   184,   185,   186,     0,   187,   188,   189,     0,
     190,   191,   192,   193,   848,   195,   196,   197,   198,   199,
     849,   850,   201,     0,   202,   203,   851,   205,     0,   206,
       0,   207,   208,     0,   209,   210,   211,   212,   213,   214,
       0,   215,     0,   852,   853,   218,     0,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,   238,   239,
     240,   241,   242,   243,   244,   854,   855,     0,   856,     0,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,     0,     0,   259,   260,   261,   262,     0,   263,   264,
     265,   857,   858,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   859,   291,   860,
     293,   294,   295,   296,   861,   297,   298,   299,   300,   862,
     863,   302,   864,   304,   305,   306,     0,   307,   308,     0,
       0,   865,   310,   311,     0,     0,   312,   313,   314,   315,
     316,   866,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,     0,   328,   329,   867,   331,   332,   333,   334,
     335,   336,     0,   337,   338,   339,   340,   341,   342,     0,
     343,   344,   345,   868,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,     0,   364,   365,   366,   367,   368,   369,   869,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,   386,   870,   387,   388,
     389,   390,   391,   392,   393,   394,   871,   396,     0,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   872,   412,     0,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,     0,   873,   874,     0,
       0,   424,   425,   875,   427,   876,   877,   429,   430,   878,
     432,   433,  3000,   435,   436,     0,     0,   437,   438,   439,
     440,   441,   879,     0,   442,   443,   444,   445,   446,   447,
     880,     0,   449,   450,   451,   452,   453,   454,   455,     0,
       0,   456,     0,     0,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   881,     0,     0,     0,     0,
       0,     0,   882,   883,     0,     0,     0,     0,     0,   885,
       0,   886,     0,     0,     0,     0,   887,     0,   888,   889,
      93,   822,   550,   823,   824,   825,   826,   827,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,   828,     0,     0,   105,   106,     0,
     107,   108,   109,   110,   111,   112,   113, -1774,   829,   116,
     830,   831,     0,   119,   120,   121,   122,   123,   124,   832,
     833,   125,   126,   834,   835,   129,     0,   130,   131,   132,
     133,   836,     0,   837,     0,   136,   137,   138,   139,   140,
     141,   142,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,   152,   153,   154,  2999,   838,   839,   840,
     841,   842,   843,   844,   157,   158,   159,   160,   161,   162,
     163,   845,   846,   166,   847,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   681,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   848,
     195,   196,   197,   198,   199,   849,   850,   201,     0,   202,
     203,   851,   205,     0,   206,     0,   207,   208,     0,   209,
     210,   211,   212, -1774,   214,     0,   215,     0,   852,   853,
     218,     0,   219,   220,   221,   222,   223,   224,   225, -1774,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,   238,   239,   240,   241,   242,   243,   244,
     854,   855,     0,   856,     0,   248,     0,     0,   251,   252,
     253,   254,   255,   256,   257,   258,     0,     0,   259,   260,
     261, -1774,     0,   263,   264,   265,   857,   858,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   859,   291,   860,   293,   294,   295,   296,     0,
     297,   298,     0,   300,   862,   863,   302,   864,   304,   305,
     306,     0,   307,   308,     0,     0,   865,   310,   311,     0,
       0,   312,   313,   314,   315,   316,   866,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     867,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   868,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
     366,   367,   368,   369,   869,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,   870,   387,   388,   389,   390,   391, -1774,   393,
     394,   871,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   872,   412,
       0,   413,   414,     0,   415,   416,   417,   418,   419,   420,
     421,     0,   873,   874,     0,     0,   424,   425,   875,   427,
     876,   877,   429,   430,   878,   432,   433,  3000,   435,   436,
       0,     0,   437,   438,   439,   440,   441,   879,     0,   442,
     443,   444,   445,   446,   447,   880,     0,   449,   450,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
   -1774,     0,     0,     0,     0,     0,     0,   882,   883,     0,
       0,     0,     0,     0,   885,     0,   886,     0,     0,     0,
       0,   887,     0,   888,   889,    93,   822,   550,   823,   824,
     825,   826,   827,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,     0,     0,     0,     0,     0,
       0,     0,   105,   106,     0,   107,   108,   109,   110,   111,
     112,   113,   114,   829,   116,   830,   831,     0,   119,   120,
     121,   122,   123,   124,   832,   833,   125,   126,   834,   835,
     129,     0,   130,   131,   132,   133,   836,     0,   837,     0,
     136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
       0,   146,   147,   148,   149,   150,   151,     0,   152,   153,
     154,   155,   838,   839,   840,   841,   842,   843,   844,   157,
     158,   159,   160,   161,   162,   163,   845,   846,   166,     0,
     167,     0,   168,   169,   170,   171,   172,   173,     0,   174,
     175,   176,   177,   178,     0,     0,   179,   180,   681,   182,
     183,     0,   184,   185,   186,     0,   187,   188,   189,     0,
     190,   191,   192,   193,   848,   195,   196,   197,   198,   199,
     849,   850,   201,     0,   202,   203,   851,   205,     0,   206,
       0,   207,   208,     0,   209,   210,   211,   212,   213,   214,
       0,   215,     0,   852,   853,   218,     0,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,   238,   239,
     240,   241,   242,   243,   244,   854,   855,     0,   856,     0,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,     0,     0,   259,   260,   261,   262,     0,   263,   264,
     265,   857,   858,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   859,   291,   860,
     293,   294,   295,   296,     0,   297,   298,   299,   300,   862,
     863,   302,   864,   304,   305,   306,     0,   307,   308,     0,
       0,   865,   310,   311,     0,     0,   312,   313,   314,   315,
     316,   866,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,     0,   328,   329,   867,   331,   332,   333,   334,
     335,   336,     0,   337,   338,   339,   340,   341,   342,     0,
     343,   344,   345,   868,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,     0,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,   386,   870,   387,   388,
     389,   390,   391,   392,   393,   394,   871,   396,     0,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   872,   412,     0,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,     0,   873,   874,     0,
       0,   424,   425,   875,   427,   876,   877,   429,   430,   878,
     432,   433,   434,   435,   436,     0,     0,   437,   438,   439,
     440,   441,   879,     0,   442,   443,   444,   445,   446,   447,
     880,     0,   449,   450,   451,   452,   453,   454,   455,     0,
       0,   456,     0,     0,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,     0,     0,     0,     0,     0,
       0,     0,  1649,  1650,     0,     0,    93,   822,   550,   823,
     824,  1651,   826,   827,     0,     0,     0,     0,   888,   889,
       0,     0,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,     0,     0,     0,     0,
       0,     0,     0,   105,   106,     0,   107,   108,   109,   110,
     111,   112,   113,   114,   829,   116,   830,   831,     0,   119,
     120,   121,   122,   123,   124,   832,   833,   125,   126,   834,
     835,   129,     0,   130,   131,   132,   133,   836,     0,   837,
       0,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,     0,   146,   147,   148,   149,   150,   151,     0,   152,
     153,   154,   155,   838,   839,   840,   841,   842,   843,   844,
     157,   158,   159,   160,   161,   162,   163,   845,   846,   166,
       0,   167,     0,   168,   169,   170,   171,   172,   173,     0,
     174,   175,   176,   177,   178,     0,     0,   179,   180,   681,
     182,   183,     0,   184,   185,   186,     0,   187,   188,   189,
       0,   190,   191,   192,   193,   848,   195,   196,   197,   198,
     199,   849,   850,   201,     0,   202,   203,   851,   205,     0,
     206,     0,   207,   208,     0,   209,   210,   211,   212,   213,
     214,     0,   215,     0,   852,   853,   218,     0,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
       0,   231,   232,   233,   234,   235,   236,     0,   237,   238,
     239,   240,   241,   242,   243,   244,   854,   855,     0,   856,
       0,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,     0,     0,   259,   260,   261,   262,     0,   263,
     264,   265,   857,   858,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   859,   291,
     860,   293,   294,   295,   296,     0,   297,   298,   299,   300,
     862,   863,   302,   864,   304,   305,   306,     0,   307,   308,
       0,     0,   309,   310,   311,     0,     0,   312,   313,   314,
     315,   316,   866,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   867,   331,   332,   333,
     334,   335,   336,     0,   337,   338,   339,   340,   341,   342,
       0,   343,   344,   345,   868,   347,   348,   349,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,     0,   364,   365,   366,   367,   368,   369,
    1789,  1790,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,     0,   382,   383,   384,   385,   386,   870,   387,
     388,   389,   390,   391,   392,   393,   394,   871,   396,     0,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   872,   412,     0,   413,   414,     0,
     415,   416,   417,   418,   419,   420,   421,     0,   873,   874,
       0,     0,   424,   425,   875,   427,   876,   877,   429,   430,
     878,   432,   433,   434,   435,   436,     0,     0,   437,   438,
     439,   440,   441,   879,     0,   442,   443,   444,   445,   446,
     447,   880,     0,   449,   450,   451,   452,   453,   454,   455,
       0,     0,   456,     0,     0,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,     0,     0,     0,     0,
       0,     0,     0,  1791,  1792,     0,     0,     0,     0,     0,
       0,     0,  1651,     0,     0,     0,     0,     0,     0,   888,
     889,    93,   822,   550,   823,   824,   825,   826,   827,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    94,
      95,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,     0,     0,     0,     0,     0,     0,     0,   105,   106,
       0,   107,   108,   109,   110,   111,   112,   113,   114,   829,
     116,   830,   831,     0,   119,   120,   121,   122,   123,   124,
     832,   833,   125,   126,   834,   835,   129,     0,   130,   131,
     132,   133,   836,     0,   837,     0,   136,   137,   138,   139,
     140,   141,   142,   143,   144,   145,     0,   146,   147,   148,
     149,   150,   151,     0,   152,   153,   154,   155,   838,   839,
     840,   841,   842,   843,   844,   157,   158,   159,   160,   161,
     162,   163,   845,   846,   166,     0,   167,     0,   168,   169,
     170,   171,   172,   173,     0,   174,   175,   176,   177,   178,
       0,     0,   179,   180,   681,   182,   183,     0,   184,   185,
     186,     0,   187,   188,   189,     0,   190,   191,   192,   193,
     848,   195,   196,   197,   198,   199,   849,   850,   201,     0,
     202,   203,   851,   205,     0,   206,     0,   207,   208,     0,
     209,   210,   211,   212,   213,   214,     0,   215,     0,   852,
     853,   218,     0,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,     0,   231,   232,   233,   234,
     235,   236,     0,   237,   238,   239,   240,   241,   242,   243,
     244,   854,   855,     0,   856,     0,   248,     0,   250,   251,
     252,   253,   254,   255,   256,   257,   258,     0,     0,   259,
     260,   261,   262,     0,   263,   264,   265,   857,   858,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   859,   291,   860,   293,   294,   295,   296,
       0,   297,   298,   299,   300,   862,   863,   302,   864,   304,
     305,   306,     0,   307,   308,     0,     0,   865,   310,   311,
       0,     0,   312,   313,   314,   315,   316,   866,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,     0,   328,
     329,   867,   331,   332,   333,   334,   335,   336,     0,   337,
     338,   339,   340,   341,   342,     0,   343,   344,   345,   868,
     347,   348,   349,   350,     0,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,     0,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,   386,   870,   387,   388,   389,   390,   391,   392,
     393,   394,   871,   396,     0,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   872,
     412,     0,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,     0,   873,   874,     0,     0,   424,   425,   875,
     427,   876,   877,   429,   430,   878,   432,   433,   434,   435,
     436,     0,     0,   437,   438,   439,   440,   441,   879,     0,
     442,   443,   444,   445,   446,   447,   880,     0,   449,   450,
     451,   452,   453,   454,   455,     0,     0,   456,     0,     0,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,     0,     0,     0,     0,     0,     0,     0,  1649,  1650,
       0,     0,     0,     0,     0,     0,     0,  1651,     0,     0,
       0,     0,     0,     0,   888,   889,    93,   822,   550,   823,
     824,   825,   826,   827,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,     0,     0,     0,     0,
     828,     0,     0,   105,   106,     0,   107,   108,   109,   110,
     111,   112,   113,     0,   829,   116,   830,   831,     0,   119,
     120,   121,   122,   123,   124,   832,   833,   125,   126,   834,
     835,   129,     0,   130,   131,   132,   133,   836,     0,   837,
       0,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,     0,   146,   147,   148,   149,   150,   151,     0,   152,
     153,   154,   155,   838,   839,   840,   841,   842,   843,   844,
     157,   158,   159,   160,   161,   162,   163,   845,   846,   166,
     847,   167,     0,   168,   169,   170,   171,   172,   173,     0,
     174,   175,   176,   177,   178,     0,     0,   179,   180,   681,
     182,   183,     0,   184,   185,   186,     0,   187,     0,   189,
       0,   190,   191,   192,   193,   848,   195,   196,   197,   198,
     199,   849,   850,   201,     0,   202,   203,   851,   205,     0,
     206,     0,   207,   208,     0,   209,   210,   211,   212,     0,
     214,     0,   215,     0,   852,   853,   218,     0,   219,   220,
     221,   222,   223,   224,   225,     0,   227,   228,   229,   230,
       0,   231,   232,   233,   234,   235,   236,     0,   237,   238,
     239,   240,   241,   242,   243,   244,   854,   855,     0,   856,
       0,   248,     0,     0,   251,   252,   253,   254,   255,   256,
     257,   258,     0,     0,   259,   260,   261,     0,     0,   263,
     264,   265,   857,   858,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   859,   291,
     860,   293,   294,   295,   296,     0,   297,   298,     0,   300,
     862,   863,   302,   864,   304,   305,   306,     0,   307,   308,
       0,     0,   865,   310,   311,     0,     0,   312,   313,   314,
     315,   316,   866,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   867,   331,   332,   333,
     334,   335,   336,     0,   337,   338,   339,   340,   341,   342,
       0,   343,   344,   345,   868,   347,   348,   349,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,     0,   364,   365,   366,   367,   368,   369,
     869,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,     0,   382,   383,   384,   385,   386,   870,   387,
     388,   389,   390,   391,     0,   393,   394,   871,   396,     0,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   872,   412,     0,   413,   414,     0,
     415,   416,   417,   418,   419,   420,   421,     0,   873,   874,
       0,     0,   424,   425,   875,   427,   876,   877,   429,   430,
     878,   432,   433,   434,   435,   436,     0,     0,   437,   438,
     439,   440,   441,   879,     0,   442,   443,   444,   445,   446,
     447,   880,     0,   449,   450,   451,   452,   453,   454,   455,
       0,     0,   456,     0,     0,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,     0,     0,     0,     0,
       0,     0,     0,   882,   883,   500,     0,     0,     0,     0,
     885,     0,   886,     0,     0,     0,     0,   887,     0,   888,
     889,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,     0,     0,     0,     0,     0,
    2347,     0,   105,   106,     0,   107,   108,   109,     0,   111,
     112,   113,   114,   115,     0,   117,   118,     0,   119,   120,
     121,   122,   123,   124,     0,     0,   125,   126,   127,   128,
     129,     0,   130,   131,   132,   133,   134,     0,     0,     0,
     136,   137,   138,   139,   140,   141,     0,   143,   144,   145,
       0,   146,   147,   148,   149,   150,   151,     0,  -629,   153,
     154,   155,     0,     0,     0,     0,     0,     0,     0,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,     0,
     167,     0,   168,   169,   170,   171,   172,   173,     0,   174,
     175,   176,   177,   178,     0,     0,   179,   180,   181,   182,
     183,     0,   184,   185,   186,     0,   187,   188,   189,     0,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,     0,   201,     0,   202,   203,   204,   205,     0,   206,
       0,   207,     0,     0,  -629,   210,   211,   502,     0,   214,
       0,   215,     0,   216,   217,   218,     0,   219,   220,   221,
     222,   223,   224,   225,     0,   227,   228,   229,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,  -629,   239,
     240,   241,   242,   243,   244,   245,   246,     0,   247,     0,
     248,     0,     0,   251,  -629,   253,   254,   255,   256,   257,
     258,     0,     0,   259,  -629,   261,     0,     0,   263,   264,
     265,     0,     0,   266,   267,   268,   269,   270,   503,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,  -629,   292,
     293,   294,   295,   296,     0,   297,   298,     0,   300,     0,
     301,   302,   303,   304,   305,   306,     0,   307,   308,     0,
       0,   309,   310,   311,     0,     0,   312,   313,     0,   315,
       0,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,     0,   328,   329,   330,   331,   332,   333,   334,
     335,   336,     0,   337,   338,   339,   340,   341,   342,     0,
     343,   344,   345,   346,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,     0,   364,   365,  -629,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,   386,     0,   387,   388,
     389,   390,   391,     0,   393,   394,   395,   396,     0,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   505,   410,   411,   412,     0,   413,   414,     0,   415,
    -629,   417,   418,   419,   420,   421,     0,   422,   423,     0,
       0,   424,   425,   426,   427,   428,     0,   429,   430,   431,
     432,   433,   434,   435,   436,     0,     0,   437,   438,   439,
     440,   441,     0,     0,   442,   443,   444,   445,   446,   447,
     448,     0,   449,     0,   451,   452,   453,   454,   455,     0,
       0,   456,     0,     0,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,    93,     0,   582,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   951,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,     0,     0,     0,     0,     0,
       0,     0,   105,   106,     0,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   118,     0,   119,   120,
     121,   122,   123,   124,     0,   833,   125,   126,   127,   128,
     129,     0,   130,   131,   132,   133,   836,     0,   837,     0,
     136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
       0,   146,   147,   148,   149,   150,   151,     0,   152,   153,
     154,   155,   838,   839,   840,   841,   842,   843,   844,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,     0,
     167,     0,   168,   169,   170,   171,   172,   173,     0,   174,
     175,   176,   177,   178,     0,     0,   179,   180,   181,   182,
     183,     0,   184,   185,   186,     0,   187,   188,   189,     0,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     849,     0,   201,     0,   202,   203,   204,   205,     0,   206,
       0,   207,   208,     0,   209,   210,   211,   212,   213,   214,
       0,   215,     0,   216,   217,   218,     0,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,     0,   247,     0,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,  2085,     0,   259,   260,   261,   262,     0,   263,   264,
     265,   857,   858,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,     0,   297,   298,   299,   300,     0,
     863,   302,   303,   304,   305,   306,     0,   307,   308,     0,
     583,   309,   310,   311,     0,     0,   312,   313,   314,   315,
     316,   866,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,     0,   328,   329,   867,   331,   332,   333,   334,
     335,   336,     0,   337,   338,   339,   340,   341,   342,     0,
     343,   344,   345,   346,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,     0,   364,   365,   366,   367,   368,   369,   370,
    2086,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,    26,   382,   383,   384,   385,   386,   870,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,     0,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   872,   412,     0,   413,   414,    31,   415,
     416,   417,   418,   419,   420,   421,     0,   422,   423,     0,
       0,   424,   425,   875,   427,   876,     0,   429,   430,   878,
     432,   433,   434,   435,   436,     0,     0,   437,   438,   439,
     440,   441,   879,     0,   442,   443,   444,   445,   446,   578,
     448,     0,   449,   450,   451,   452,   453,   454,   455,     0,
       0,   456,     0,    34,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,     0,    93,    35,   582,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2087,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,     0,     0,     0,     0,
       0,     0,     0,   105,   106,     0,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   118,     0,   119,
     120,   121,   122,   123,   124,     0,   833,   125,   126,   127,
     128,   129,     0,   130,   131,   132,   133,   836,     0,   837,
       0,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,     0,   146,   147,   148,   149,   150,   151,     0,   152,
     153,   154,   155,   838,   839,   840,   841,   842,   843,   844,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
       0,   167,     0,   168,   169,   170,   171,   172,   173,     0,
     174,   175,   176,   177,   178,     0,     0,   179,   180,   181,
     182,   183,     0,   184,   185,   186,     0,   187,   188,   189,
       0,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   849,     0,   201,     0,   202,   203,   204,   205,     0,
     206,     0,   207,   208,     0,   209,   210,   211,   212,   213,
     214,     0,   215,     0,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
       0,   231,   232,   233,   234,   235,   236,     0,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,     0,   247,
       0,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,  2085,     0,   259,   260,   261,   262,     0,   263,
     264,   265,   857,   858,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,     0,   297,   298,   299,   300,
       0,   863,   302,   303,   304,   305,   306,     0,   307,   308,
       0,   583,   309,   310,   311,     0,     0,   312,   313,   314,
     315,   316,   866,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   867,   331,   332,   333,
     334,   335,   336,     0,   337,   338,   339,   340,   341,   342,
       0,   343,   344,   345,   346,   347,   348,   349,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,     0,   364,   365,   366,   367,   368,   369,
     370,  2086,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,     0,   382,   383,   384,   385,   386,   870,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,     0,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   872,   412,     0,   413,   414,     0,
     415,   416,   417,   418,   419,   420,   421,     0,   422,   423,
       0,     0,   424,   425,   875,   427,   876,     0,   429,   430,
     878,   432,   433,   434,   435,   436,     0,     0,   437,   438,
     439,   440,   441,   879,     0,   442,   443,   444,   445,   446,
     447,   448,     0,   449,   450,   451,   452,   453,   454,   455,
       0,     0,   456,     0,     0,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,    93,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2087,     0,    94,    95,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,     0,     0,     0,     0,
       0,     0,     0,   105,   106,     0,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   118,     0,   119,
     120,   121,   122,   123,   124,     0,   833,   125,   126,   127,
     128,   129,     0,   130,   131,   132,   133,   836,     0,   837,
       0,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,     0,   146,   147,   148,   149,   150,   151,     0,   152,
     153,   154,   155,   838,   839,   840,   841,   842,   843,   844,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
       0,   167,     0,   168,   169,   170,   171,   172,   173,     0,
     174,   175,   176,   177,   178,     0,     0,   179,   180,   181,
     182,   183,     0,   184,   185,   186,     0,   187,   188,   189,
       0,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   849,     0,   201,     0,   202,   203,   204,   205,     0,
     206,     0,   207,   208,     0,   209,   210,   211,   212,   213,
     214,     0,   215,     0,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
       0,   231,   232,   233,   234,   235,   236,     0,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,     0,   247,
       0,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,     0,     0,   259,   260,   261,   262,     0,   263,
     264,   265,   857,   858,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,     0,   297,   298,   299,   300,
       0,   863,   302,   303,   304,   305,   306,     0,   307,   308,
       0,     0,   309,   310,   311,     0,     0,   312,   313,   314,
     315,   316,   866,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   867,   331,   332,   333,
     334,   335,   336,     0,   337,   338,   339,   340,   341,   342,
       0,   343,   344,   345,   346,   347,   348,   349,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,     0,   364,   365,   366,   367,   368,   369,
     370,  2086,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,     0,   382,   383,   384,   385,   386,   870,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,     0,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   872,   412,     0,   413,   414,     0,
     415,   416,   417,   418,   419,   420,   421,     0,   422,   423,
       0,     0,   424,   425,   875,   427,   876,     0,   429,   430,
     878,   432,   433,   434,   435,   436,     0,     0,   437,   438,
     439,   440,   441,   879,     0,   442,   443,   444,   445,   446,
     447,   448,     0,   449,   450,   451,   452,   453,   454,   455,
       0,     0,   456,     0,     0,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,    93,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    36,     0,    94,    95,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,     0,     0,     0,     0,
       0,     0,     0,   105,   106,     0,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   118,     0,   119,
     120,   121,   122,   123,   124,     0,   833,   125,   126,   127,
     128,   129,     0,   130,   131,   132,   133,   836,     0,   837,
       0,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,     0,   146,   147,   148,   149,   150,   151,     0,   152,
     153,   154,   155,   838,   839,   840,   841,   842,   843,   844,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
       0,   167,     0,   168,   169,   170,   171,   172,   173,     0,
     174,   175,   176,   177,   178,     0,     0,   179,   180,   181,
     182,   183,     0,   184,   185,   186,     0,   187,   188,   189,
       0,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   849,     0,   201,     0,   202,   203,   204,   205,     0,
     206,     0,   207,   208,     0,   209,   210,   211,   212,   213,
     214,     0,   215,     0,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
       0,   231,   232,   233,   234,   235,   236,     0,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,     0,   247,
       0,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,     0,     0,   259,   260,   261,   262,     0,   263,
     264,   265,   857,   858,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,     0,   297,   298,   299,   300,
       0,   863,   302,   303,   304,   305,   306,     0,   307,   308,
       0,     0,   309,   310,   311,     0,     0,   312,   313,   314,
     315,   316,   866,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   867,   331,   332,   333,
     334,   335,   336,     0,   337,   338,   339,   340,   341,   342,
       0,   343,   344,   345,   346,   347,   348,   349,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,     0,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,     0,   382,   383,   384,   385,   386,   870,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,     0,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   872,   412,     0,   413,   414,     0,
     415,   416,   417,   418,   419,   420,   421,     0,   422,   423,
       0,     0,   424,   425,   875,   427,   876,     0,   429,   430,
     878,   432,   433,   434,   435,   436,     0,     0,   437,   438,
     439,   440,   441,   879,     0,   442,   443,   444,   445,   446,
     447,   448,     0,   449,   450,   451,   452,   453,   454,   455,
       0,     0,   456,     0,     0,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   749,  1243,   550,     0,
       0,     0,   826,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2761,     0,    94,    95,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,     0,     0,     0,     0,
       0,     0,     0,   105,   106,     0,   107,   108,   109,     0,
     111,   112,   113,   750,   751,     0,   752,   753,     0,   119,
     120,   121,   122,   123,   124,     0,     0,   125,   126,   754,
     755,   129,     0,   130,   131,   132,   133,   756,     0,     0,
       0,   136,   137,   138,   139,   140,   141,     0,   143,   144,
     145,     0,   146,   147,   148,   149,   150,   151,     0,     0,
     153,   154,   155,     0,     0,     0,     0,     0,     0,     0,
     157,   158,   159,   160,   161,   162,   163,   757,   758,   166,
       0,   167,     0,   168,   169,   170,   171,   172,   173,     0,
     174,   175,   176,   177,   178,     0,     0,   179,   180,   181,
     182,   183,     0,   184,   185,   186,     0,   187,   188,   189,
       0,   190,   191,   192,   193,   759,   195,   196,   197,   198,
     199,   760,  1244,   201,     0,   202,   203,   761,   205,     0,
     206,     0,   207,     0,     0,     0,   210,   211,   762,     0,
     214,     0,   215,     0,   763,   764,   218,     0,   219,   220,
     221,   222,   223,   224,   225,     0,   227,   228,   229,   230,
       0,   231,   232,   233,   234,   235,   236,     0,   237,     0,
     765,   240,   241,   242,   243,   244,   766,   767,     0,   768,
       0,   248,     0,     0,   251,     0,   253,   254,   255,   256,
     257,   258,     0,     0,   259,     0,   261,     0,     0,   263,
     264,   265,     0,     0,   266,   267,   268,   269,   270,   769,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   770,     0,
     771,   293,   294,   295,   772,     0,   297,   298,     0,   300,
       0,   773,   302,   774,   304,   305,   306,     0,   307,   308,
    1245,     0,   309,   310,   311,     0,     0,   312,   775,     0,
     315,     0,   776,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   777,   331,   332,   778,
     334,   335,   336,     0,   337,   338,   339,   340,   341,   342,
       0,   343,   344,   345,   779,   347,   348,   349,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,     0,   364,   365,     0,   367,   368,   369,
     780,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,     0,   382,   383,   384,   385,   386,     0,   387,
     781,   389,   390,   391,     0,   393,   394,   782,   396,     0,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   783,   410,   784,   412,     0,   413,   414,     0,
     415,     0,   417,   418,   419,   420,   421,     0,   785,   786,
       0,     0,   424,   425,   787,   427,   788,  1246,   429,   430,
     789,   432,   433,   434,   435,   436,     0,     0,   437,   438,
     439,   440,   441,     0,     0,   442,   443,   444,   445,   446,
    1136,   791,     0,   449,     0,   451,   452,   453,   454,   455,
       0,     0,   456,     0,     0,   457,   458,   459,   460,   461,
     462,   792,   793,   794,   795,   796,   797,   798,   799,   800,
     801,   802,   474,   475,   476,   477,   749,     0,     0,     0,
       0,     0,     0,  1247,  1248,  1962,     0,     0,     0,     0,
       0,     0,  1963,     0,    94,    95,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,     3,     4,     0,     0,
       0,     0,     0,   105,   106,     0,   107,   108,   109,     0,
     111,   112,   113,   750,   751,     0,   752,   753,     0,   119,
     120,   121,   122,   123,   124,     0,     0,   125,   126,   754,
     755,   129,     0,   130,   131,   132,   133,   756,     0,     0,
       0,   136,   137,   138,   139,   140,   141,     0,   143,   144,
     145,     0,   146,   147,   148,   149,   150,   151,     0,     0,
     153,   154,   155,     0,     0,     0,     0,     0,     0,     0,
     157,   158,   159,   160,   161,   162,   163,   757,   758,   166,
       0,   167,     0,   168,   169,   170,   171,   172,   173,     0,
     174,   175,   176,   177,   178,     0,     0,   179,   180,   181,
     182,   183,     0,   184,   185,   186,     0,   187,   188,   189,
       0,   190,   191,   192,   193,   759,   195,   196,   197,   198,
     199,   760,     0,   201,     0,   202,   203,   761,   205,     0,
     206,     0,   207,     0,     0,     0,   210,   211,   762,     0,
     214,     0,   215,     0,   763,   764,   218,     0,   219,   220,
     221,   222,   223,   224,   225,     0,   227,   228,   229,   230,
       0,   231,   232,   233,   234,   235,   236,     0,   237,     0,
     765,   240,   241,   242,   243,   244,   766,   767,     0,   768,
       0,   248,     0,     0,   251,     0,   253,   254,   255,   256,
     257,   258,     0,     0,   259,     0,   261,     0,     0,   263,
     264,   265,     0,     0,   266,   267,   268,   269,   270,   769,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   770,     0,
     771,   293,   294,   295,   772,     0,   297,   298,     0,   300,
       0,   773,   302,   774,   304,   305,   306,     0,   307,   308,
       0,     0,   309,   310,   311,     0,     0,   312,   775,     0,
     315,     0,   776,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   777,   331,   332,   778,
     334,   335,   336,     0,   337,   338,   339,   340,   341,   342,
       0,   343,   344,   345,   779,   347,   348,   349,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,     0,   364,   365,     0,   367,   368,   369,
     780,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,    26,   382,   383,   384,   385,   386,     0,   387,
     781,   389,   390,   391,     0,   393,   394,   782,   396,     0,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   783,   410,   784,   412,     0,   413,   414,    31,
     415,     0,   417,   418,   419,   420,   421,     0,   785,   786,
       0,     0,   424,   425,   787,   427,   788,     0,   429,   430,
     789,   432,   433,   434,   435,   436,     0,     0,   437,   438,
     439,   440,   441,     0,     0,   442,   443,   444,   445,   446,
     790,   791,     0,   449,     0,   451,   452,   453,   454,   455,
       0,     0,   456,     0,    34,   457,   458,   459,   460,   461,
     462,   792,   793,   794,   795,   796,   797,   798,   799,   800,
     801,   802,   474,   475,   476,   477,   500,     0,    35,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    36,     0,    94,    95,    96,    97,    98,    99,
     100,   101,   616,   102,   103,   104,     0,     0,     0,     0,
       0,     0,     0,   105,   106,     0,   107,   108,   109,     0,
     111,   112,   113,   114,   115,     0,   117,   118,     0,   119,
     120,   121,   122,   123,   124,     0,     0,   125,   126,   127,
     128,   129,     0,   130,   131,   132,   133,   134,     0,     0,
       0,   136,   137,   138,   139,   140,   141,     0,   143,   144,
     145,     0,   146,   147,   148,   149,   150,   151,     0,     0,
     153,   154,   155,     0,     0,     0,     0,     0,     0,     0,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
       0,   167,     0,   168,   169,   170,   171,   172,   173,     0,
     174,   175,   176,   177,   178,     0,     0,   179,   180,   181,
     182,   183,     0,   184,   185,   186,     0,   187,   188,   189,
       0,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,     0,   201,     0,   202,   203,   204,   205,     0,
     206,     0,   207,     0,     0,     0,   210,   211,   502,     0,
     214,     0,   215,     0,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,   225,     0,   227,   228,   229,   230,
       0,   231,   232,   233,   234,   235,   236,     0,   237,     0,
     239,   240,   241,   242,   243,   244,   245,   246,     0,   247,
       0,   248,     0,     0,   251,     0,   253,   254,   255,   256,
     257,   258,     0,     0,   259,     0,   261,     0,     0,   263,
     264,   265,     0,     0,   266,   267,   268,   269,   270,   503,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,     0,
     292,   293,   294,   295,   296,     0,   297,   298,     0,   300,
       0,   301,   302,   303,   304,   305,   306,     0,   307,   308,
       0,     0,   309,   310,   311,     0,     0,   312,   313,     0,
     315,     0,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   330,   331,   332,   333,
     334,   335,   336,     0,   337,   338,   339,   340,   341,   342,
       0,   343,   344,   345,   346,   347,   348,   349,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,     0,   364,   365,     0,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,    26,   382,   383,   384,   385,   386,     0,   387,
     388,   389,   390,   391,     0,   393,   394,   395,   396,     0,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   505,   410,   411,   412,     0,   413,   414,    31,
     415,     0,   417,   418,   419,   420,   421,     0,   617,   423,
       0,     0,   618,   425,   426,   427,   428,     0,   429,   430,
     431,   432,   433,   434,   435,   436,     0,     0,   437,   438,
     439,   440,   441,     0,     0,   442,   443,   444,   445,   446,
     578,   448,     0,   449,     0,   451,   452,   453,   454,   455,
       0,     0,   456,     0,    34,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   500,     0,    35,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    36,     0,    94,    95,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,     0,     0,     0,     0,
       0,     0,     0,   105,   106,     0,   107,   108,   109,     0,
     111,   112,   113,   114,   115,     0,   117,   118,     0,   119,
     120,   121,   122,   123,   124,     0,     0,   125,   126,   127,
     128,   129,     0,   130,   131,   132,   133,   134,     0,     0,
       0,   136,   137,   138,   139,   140,   141,     0,   143,   144,
     145,     0,   146,   147,   148,   149,   150,   151,     0,     0,
     153,   154,   155,     0,     0,     0,     0,     0,     0,     0,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
       0,   167,     0,   168,   169,   170,   171,   172,   173,     0,
     174,   175,   176,   177,   178,     0,     0,   179,   180,   181,
     182,   183,     0,   184,   185,   186,     0,   187,   188,   189,
       0,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,     0,   201,     0,   202,   203,   204,   205,     0,
     206,     0,   207,     0,     0,     0,   210,   211,   502,     0,
     214,     0,   215,     0,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,   225,     0,   227,   228,   229,   230,
       0,   231,   232,   233,   234,   235,   236,     0,   237,     0,
     239,   240,   241,   242,   243,   244,   245,   246,     0,   247,
       0,   248,     0,     0,   251,     0,   253,   254,   255,   256,
     257,   258,     0,     0,   259,     0,   261,     0,     0,   263,
     264,   265,     0,     0,   266,   267,   268,   269,   270,   503,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,     0,
     292,   293,   294,   295,   296,     0,   297,   298,     0,   300,
       0,   301,   302,   303,   304,   305,   306,     0,   307,   308,
       0,     0,   309,   310,   311,     0,     0,   312,   313,     0,
     315,     0,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   330,   331,   332,   333,
     334,   335,   336,     0,   337,   338,   339,   340,   341,   342,
       0,   343,   344,   345,   346,   347,   348,   349,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,     0,   364,   365,     0,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,    26,   382,   383,   384,   385,   386,     0,   387,
     388,   389,   390,   391,     0,   393,   394,   395,   396,     0,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   505,   410,   411,   412,     0,   413,   414,    31,
     415,     0,   417,   418,   419,   420,   421,     0,   422,   423,
       0,     0,   424,   425,   426,   427,   428,     0,   429,   430,
     431,   432,   433,   434,   435,   436,     0,     0,   437,   438,
     439,   440,   441,     0,     0,   442,   443,   444,   445,   446,
     578,   448,     0,   449,     0,   451,   452,   453,   454,   455,
       0,     0,   456,     0,    34,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,     0,   500,    35,   582,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    36,     0,     0,    94,    95,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,     0,     0,     0,
       0,     0,     0,     0,   105,   106,     0,   107,   108,   109,
       0,   111,   112,   113,   114,   115,     0,   117,   118,     0,
     119,   120,   121,   122,   123,   124,     0,     0,   125,   126,
     127,   128,   129,     0,   130,   131,   132,   133,   134,     0,
       0,     0,   136,   137,   138,   139,   140,   141,     0,   143,
     144,   145,     0,   146,   147,   148,   149,   150,   151,     0,
       0,   153,   154,   155,     0,     0,     0,     0,     0,     0,
       0,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,     0,   167,     0,   168,   169,   170,   171,   172,   173,
       0,   174,   175,   176,   177,   178,     0,     0,   179,   180,
     181,   182,   183,     0,   184,   185,   186,     0,   187,   188,
     189,     0,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,     0,   201,     0,   202,   203,   204,   205,
       0,   206,     0,   207,     0,     0,     0,   210,   211,   502,
       0,   214,     0,   215,     0,   216,   217,   218,     0,   219,
     220,   221,   222,   223,   224,   225,     0,   227,   228,   229,
     230,     0,   231,   232,   233,   234,   235,   236,     0,   237,
       0,   239,   240,   241,   242,   243,   244,   245,   246,     0,
     247,     0,   248,     0,     0,   251,     0,   253,   254,   255,
     256,   257,   258,     0,     0,   259,     0,   261,     0,     0,
     263,   264,   265,     0,     0,   266,   267,   268,   269,   270,
     503,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   292,   293,   294,   295,   296,     0,   297,   298,     0,
     300,     0,   301,   302,   303,   304,   305,   306,     0,   307,
     308,     0,     0,   309,   310,   311,     0,     0,   312,   313,
       0,   315,     0,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,     0,   337,   338,   339,   340,   341,
     342,     0,   343,   344,   345,   346,   347,   348,   349,   350,
       0,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,     0,   364,   365,     0,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,   386,     0,
     387,   388,   389,   390,   391,     0,   393,   394,   395,   396,
       0,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   505,   410,   411,   412,     0,   413,   414,
       0,   415,     0,   417,   418,   419,   420,   421,     0,   422,
     423,     0,     0,   424,   425,   426,   427,   428,     0,   429,
     430,   431,   432,   433,   434,   435,   436,     0,     0,   437,
     438,   439,   440,   441,     0,     0,   442,   443,   444,   445,
     446,   447,   448,     0,   449,     0,   451,   452,   453,   454,
     455,     0,     0,   456,     0,     0,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   500,     0,   582,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   930,     0,    94,    95,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,     0,     0,     0,
       0,     0,     0,     0,   105,   106,     0,   107,   108,   109,
       0,   111,   112,   113,   114,   115,     0,   117,   118,     0,
     119,   120,   121,   122,   123,   124,     0,     0,   125,   126,
     127,   128,   129,     0,   130,   131,   132,   133,   134,     0,
       0,     0,   136,   137,   138,   139,   140,   141,     0,   143,
     144,   145,     0,   146,   147,   148,   149,   150,   151,     0,
       0,   153,   154,   155,     0,     0,     0,     0,     0,     0,
       0,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,     0,   167,     0,   168,   169,   170,   171,   172,   173,
       0,   174,   175,   176,   177,   178,     0,     0,   179,   180,
     181,   182,   183,     0,   184,   185,   186,     0,   187,   188,
     189,     0,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,     0,   201,     0,   202,   203,   204,   205,
       0,   206,     0,   207,     0,     0,     0,   210,   211,   502,
       0,   214,     0,   215,     0,   216,   217,   218,     0,   219,
     220,   221,   222,   223,   224,   225,     0,   227,   228,   229,
     230,     0,   231,   232,   233,   234,   235,   236,     0,   237,
       0,   239,   240,   241,   242,   243,   244,   245,   246,     0,
     247,     0,   248,     0,     0,   251,     0,   253,   254,   255,
     256,   257,   258,     0,     0,   259,     0,   261,     0,     0,
     263,   264,   265,     0,     0,   266,   267,   268,   269,   270,
     503,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   292,   293,   294,   295,   296,     0,   297,   298,     0,
     300,     0,   301,   302,   303,   304,   305,   306,     0,   307,
     308,     0,     0,   309,   310,   311,     0,     0,   312,   313,
       0,   315,     0,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,     0,   337,   338,   339,   340,   341,
     342,     0,   343,   344,   345,   346,   347,   348,   349,   350,
       0,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,     0,   364,   365,     0,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,   386,     0,
     387,   388,   389,   390,   391,     0,   393,   394,   395,   396,
       0,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   505,   410,   411,   412,     0,   413,   414,
       0,   415,     0,   417,   418,   419,   420,   421,     0,   422,
     423,     0,     0,   424,   425,   426,   427,   428,     0,   429,
     430,   431,   432,   433,   434,   435,   436,     0,     0,   437,
     438,   439,   440,   441,     0,     0,   442,   443,   444,   445,
     446,   447,   448,     0,   449,     0,   451,   452,   453,   454,
     455,     0,     0,   456,     0,     0,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   500,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2599,     0,    94,    95,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,     0,     0,     0,
       0,     0,     0,     0,   105,   106,     0,   107,   108,   109,
       0,   111,   112,   113,   114,   115,     0,   117,   118,     0,
     119,   120,   121,   122,   123,   124,     0,     0,   125,   126,
     127,   128,   129,     0,   130,   131,   132,   133,   134,     0,
       0,     0,   136,   137,   138,   139,   140,   141,     0,   143,
     144,   145,     0,   146,   147,   148,   149,   150,   151,     0,
       0,   153,   154,   155,     0,     0,     0,     0,     0,     0,
       0,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,     0,   167,     0,   168,   169,   170,   171,   172,   173,
       0,   174,   175,   176,   177,   178,     0,     0,   179,   180,
     181,   182,   183,     0,   184,   185,   186,     0,   187,   188,
     189,     0,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,     0,   201,     0,   202,   203,   204,   205,
       0,   206,     0,   207,     0,     0,     0,   210,   211,   502,
       0,   214,     0,   215,     0,   216,   217,   218,     0,   219,
     220,   221,   222,   223,   224,   225,     0,   227,   228,   229,
     230,     0,   231,   232,   233,   234,   235,   236,     0,   237,
       0,   239,   240,   241,   242,   243,   244,   245,   246,     0,
     247,     0,   248,     0,     0,   251,     0,   253,   254,   255,
     256,   257,   258,     0,     0,   259,     0,   261,     0,     0,
     263,   264,   265,     0,     0,   266,   267,   268,   269,   270,
     503,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   292,   293,   294,   295,   296,     0,   297,   298,     0,
     300,     0,   301,   302,   303,   304,   305,   306,     0,   307,
     308,     0,     0,   309,   310,   311,     0,     0,   312,   313,
       0,   315,     0,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,     0,   337,   338,   339,   340,   341,
     342,     0,   343,   344,   345,   346,   347,   348,   349,   350,
       0,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,     0,   364,   365,     0,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,   386,     0,
     387,   388,   389,   390,   391,     0,   393,   394,   395,   396,
       0,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   505,   410,   411,   412,     0,   413,   414,
       0,   415,     0,   417,   418,   419,   420,   421,     0,   422,
     423,     0,     0,   424,   425,   426,   427,   428,     0,   429,
     430,   431,   432,   433,   434,   435,   436,     0,     0,   437,
     438,   439,   440,   441,     0,     0,   442,   443,   444,   445,
     446,   447,   448,     0,   449,     0,   451,   452,   453,   454,
     455,     0,     0,   456,     0,     0,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   500,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1670,     0,    94,    95,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,     0,     0,     0,
       0,     0,     0,     0,   105,   106,     0,   107,   108,   109,
       0,   111,   112,   113,   114,   115,     0,   117,   118,     0,
     119,   120,   121,   122,   123,   124,     0,     0,   125,   126,
     127,   128,   129,     0,   130,   131,   132,   133,   134,     0,
       0,     0,   136,   137,   138,   139,   140,   141,     0,   143,
     144,   145,     0,   146,   147,   148,   149,   150,   151,     0,
       0,   153,   154,   155,     0,     0,     0,     0,     0,     0,
       0,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,     0,   167,     0,   168,   169,   170,   171,   172,   173,
       0,   174,   175,   176,   177,   178,     0,     0,   179,   180,
     181,   182,   183,     0,   184,   185,   186,     0,   187,   188,
     189,     0,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,     0,   201,     0,   202,   203,   204,   205,
       0,   206,     0,   207,     0,     0,     0,   210,   211,   502,
       0,   214,     0,   215,     0,   216,   217,   218,     0,   219,
     220,   221,   222,   223,   224,   225,     0,   227,   228,   229,
     230,     0,   231,   232,   233,   234,   235,   236,     0,   237,
       0,   239,   240,   241,   242,   243,   244,   245,   246,     0,
     247,     0,   248,     0,     0,   251,     0,   253,   254,   255,
     256,   257,   258,     0,     0,   259,     0,   261,     0,     0,
     263,   264,   265,     0,     0,   266,   267,   268,   269,   270,
     503,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   292,   293,   294,   295,   296,     0,   297,   298,     0,
     300,     0,   301,   302,   303,   304,   305,   306,     0,   307,
     308,     0,     0,   309,   310,   311,     0,     0,   312,   313,
       0,   315,     0,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,     0,   337,   338,   339,   340,   341,
     342,     0,   343,   344,   345,   346,   347,   348,   349,   350,
       0,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,     0,   364,   365,     0,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,   386,     0,
     387,   388,   389,   390,   391,     0,   393,   394,   395,   396,
       0,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   505,   410,   411,   412,     0,   413,   414,
       0,   415,     0,   417,   418,   419,   420,   421,     0,   422,
     423,     0,     0,   424,   425,   426,   427,   428,     0,   429,
     430,   431,   432,   433,   434,   435,   436,     0,     0,   437,
     438,   439,   440,   441,     0,     0,   442,   443,   444,   445,
     446,   447,   448,     0,   449,     0,   451,   452,   453,   454,
     455,     0,     0,   456,     0,     0,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   500,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1776,     0,    94,    95,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,     0,     0,     0,
       0,     0,     0,     0,   105,   106,     0,   107,   108,   109,
       0,   111,   112,   113,   114,   115,     0,   117,   118,     0,
     119,   120,   121,   122,   123,   124,     0,     0,   125,   126,
     127,   128,   129,     0,   130,   131,   132,   133,   134,     0,
       0,     0,   136,   137,   138,   139,   140,   141,     0,   143,
     144,   145,     0,   146,   147,   148,   149,   150,   151,     0,
       0,   153,   154,   155,     0,     0,     0,     0,     0,     0,
       0,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,     0,   167,     0,   168,   169,   170,   171,   172,   173,
       0,   174,   175,   176,   177,   178,     0,     0,   179,   180,
     181,   182,   183,     0,   184,   185,   186,     0,   187,   188,
     189,     0,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,     0,   201,     0,   202,   203,   204,   205,
       0,   206,     0,   207,     0,     0,     0,   210,   211,   502,
       0,   214,     0,   215,     0,   216,   217,   218,     0,   219,
     220,   221,   222,   223,   224,   225,     0,   227,   228,   229,
     230,     0,   231,   232,   233,   234,   235,   236,     0,   237,
       0,   239,   240,   241,   242,   243,   244,   245,   246,     0,
     247,     0,   248,     0,     0,   251,     0,   253,   254,   255,
     256,   257,   258,     0,     0,   259,     0,   261,     0,     0,
     263,   264,   265,     0,     0,   266,   267,   268,   269,   270,
     503,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   292,   293,   294,   295,   296,     0,   297,   298,     0,
     300,     0,   301,   302,   303,   304,   305,   306,     0,   307,
     308,     0,     0,   309,   310,   311,     0,     0,   312,   313,
       0,   315,     0,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,     0,   337,   338,   339,   340,   341,
     342,     0,   343,   344,   345,   346,   347,   348,   349,   350,
       0,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,     0,   364,   365,     0,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,   386,     0,
     387,   388,   389,   390,   391,     0,   393,   394,   395,   396,
       0,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   505,   410,   411,   412,     0,   413,   414,
       0,   415,     0,   417,   418,   419,   420,   421,     0,   422,
     423,     0,     0,   424,   425,   426,   427,   428,     0,   429,
     430,   431,   432,   433,   434,   435,   436,     0,     0,   437,
     438,   439,   440,   441,     0,     0,   442,   443,   444,   445,
     446,   447,   448,     0,   449,     0,   451,   452,   453,   454,
     455,     0,     0,   456,     0,     0,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,     0,     0,  2452,
    1243,   550,     0,     0,  1630,   826,     0,     0,     0,     0,
       0,  1631,     0,  2571,  1632,  1633,  1634,    94,    95,    96,
      97,    98,    99,   100,   101,  1063,   102,   103,   104,  1064,
    1065,  1066,  1067,  1068,  1069,  1070,   105,   106,  1071,   107,
     108,   109,  2453,   111,   112,   113,     0,   669,  2454,   671,
     672,  1072,   119,   120,   121,   122,   123,   124,  1073,  1074,
     125,   126,   673,   674,   129,  1075,   130,   131,   132,   133,
       0,  1076,  2455,  1077,   136,   137,   138,   139,   140,   141,
    2456,   143,   144,   145,  1078,   146,   147,   148,   149,   150,
     151,  1079,  2457,   153,   154,   155,  1080,  1081,  1082,  2458,
    1083,  1084,  1085,   157,   158,   159,   160,   161,   162,   163,
     679,   680,   166,  1086,   167,  1087,   168,   169,   170,   171,
     172,   173,  1088,   174,   175,   176,   177,   178,  1089,  1090,
     179,   180,   681,   182,   183,  1091,   184,   185,   186,  1092,
     187,   188,   189,  1093,   190,   191,   192,   193,     0,   195,
     196,   197,   198,   199,     0,  1094,   201,  1095,   202,   203,
     682,   205,  1096,   206,  1097,   207,  2459,  1098,  2460,   210,
     211,  2461,  2462,   214,  1099,   215,  1100,     0,     0,   218,
    1101,   219,   220,   221,   222,   223,   224,   225,  2463,   227,
     228,   229,   230,  1102,   231,   232,   233,   234,   235,   236,
    1103,   237,  2464,     0,   240,   241,   242,   243,   244,   689,
     690,  1104,   691,  1105,   248,  2465,  2466,   251,  2467,   253,
     254,   255,   256,   257,   258,  1106,  1107,   259,  2468,   261,
    2469,  1108,   263,   264,   265,  1109,  1110,   266,   267,   268,
     269,   270,  2470,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   698,  2471,   700,   293,   294,   295,  2472,  1111,   297,
     298,  2473,   300,  1112,     0,   302,   702,   304,   305,   306,
    1113,   307,   308,  1114,  1115,  2474,   310,   311,  1116,  1117,
     312,     0,  2475,   315,  2476,     0,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,  1118,   328,   329,     0,
     331,   332,     0,   334,   335,   336,  1119,   337,   338,   339,
     340,   341,   342,  1120,   343,   344,   345,   705,   347,   348,
     349,   350,  1121,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,  1122,   364,   365,  2477,
     367,   368,   369,   707,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,  1123,   382,   383,   384,   385,
     386,  1124,   387,  2478,   389,   390,   391,  2479,   393,   394,
     710,   396,  1125,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,  2480,   410,     0,   412,  1126,
     413,   414,  1127,   415,  2481,   417,   418,   419,   420,   421,
    1128,   713,   714,  1129,  1130,   424,   425,     0,   427,     0,
    1131,   429,   430,  2482,   432,   433,   434,   435,   436,  1132,
    1133,   437,   438,   439,   440,   441,  1134,  1135,   442,   443,
     444,   445,   446,     0,   716,  1137,   449,  2483,   451,   452,
     453,   454,   455,  1138,  1139,   456,  1140,  1141,   457,   458,
     459,   460,   461,   462,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   474,   475,   476,   477,     0,
     500,     0,  1635,  1636,  1637,  1630,  2484,  2485,  1640,  1641,
    1642,  1643,  1631,     0,     0,  1632,  1633,  1634,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   127,   128,   129,     0,   130,   131,   132,
     133,   134,     0,     0,     0,   136,   137,   138,   139,   140,
     141,     0,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,     0,   153,   154,   155,     0,     0,     0,
       0,     0,     0,     0,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,     0,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   181,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,     0,   201,     0,   202,
     203,   204,   205,     0,   206,     0,   207,     0,     0,     0,
     210,   211,   502,     0,   214,     0,   215,     0,   216,   217,
     218,     0,   219,   220,   221,   222,   223,   224,   225,     0,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   239,   240,   241,   242,   243,   244,
     245,   246,     0,   247,     0,   248,     0,     0,   251,     0,
     253,   254,   255,   256,   257,   258,     0,     0,   259,     0,
     261,     0,     0,   263,   264,   265,     0,     0,   266,   267,
     268,   269,   270,   503,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   292,   293,   294,   295,   296,     0,
     297,   298,     0,   300,     0,   301,   302,   303,   304,   305,
     306,     0,   307,   308,     0,     0,   309,   310,   311,     0,
       0,   312,   313,     0,   315,     0,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
       0,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   387,   388,   389,   390,   391,     0,   393,
     394,   395,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   505,   410,   411,   412,
       0,   413,   414,     0,   415,     0,   417,   418,   419,   420,
     421,     0,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,     0,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
       0,     0,     0,  1635,  1636,  1637,     0,  1638,  1639,  1640,
    1641,  1642,  1643,  1320,     0,     0,  1321,     0,     0,     0,
    1322,  1323,  1324,  1325,  1326,  1327,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1328,     0,  1320,     0,     0,  1321,     0,     0,  1330,  1322,
    1323,  1324,  1325,  1326,  1327,  1331,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1328,
       0,     0,     0,     0,     0,     0,     0,  1330,  1320,     0,
    1332,  1321,     0,     0,  1331,  1322,  1323,  1324,  1325,  1326,
    1327,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1328,     0,  1320,     0,  1332,
    1321,     0,     0,  1330,  1322,  1323,  1324,  1325,  1326,  1327,
    1331,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1328,     0,     0,     0,     0,     0,
       0,     0,  1330,     0,     0,  1332,     0,     0,     0,  1331,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1332,     0,     0,     0,     0,     0,
       0,  1333,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1334,     0,     0,
       0,     0,  1335,     0,     0,  1320,     0,     0,  1321,     0,
    1333,     0,  1322,  1323,  1324,  1325,  1326,  1327,     0,     0,
       0,     0,     0,     0,  1336,  1337,  1334,     0,     0,     0,
       0,  1335,  1328,     0,     0,     0,     0,     0,     0,  1338,
    1330,     0,     0,     0,     0,     0,  1333,  1331,     0,     0,
       0,     0,     0,  1336,  1337,     0,     0,     0,     0,     0,
       0,     0,  1334,     0,     0,     0,     0,  1335,  1338,     0,
       0,     0,  1332,     0,     0,  1333,     0,  1339,     0,     0,
    1340,     0,     0,     0,     0,     0,     0,     0,     0,  1336,
    1337,  1334,     0,     0,  1341,     0,  1335,  1342,     0,     0,
       0,     0,     0,     0,  1338,     0,  1339,     0,     0,  1340,
       0,     0,     0,     0,     0,     0,     0,     0,  1336,  1337,
       0,     0,     0,  1341,     0,     0,  1342,     0,     0,     0,
       0,     0,     0,  1338,     0,     0,     0,     0,     0,     0,
       0,     0,  1339,     0,     0,  1340,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1341,
       0,     0,  1342,     0,     0,     0,     0,     0,     0,     0,
       0,  1339,     0,  1333,  1340,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1343,     0,  1341,  1334,
       0,  1342,     0,     0,  1335,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1343,  1336,  1337,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1338,     0,     0,     0,  1320,     0,     0,  1321,     0,
       0,     0,  1322,  1323,  1324,  1325,  1326,  1327,     0,     0,
       0,  1343,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1328,     0,     0,     0,     0,     0,     0,  1339,
    1330,     0,  1340,     0,     0,     0,     0,  1331,     0,     0,
    1343,     0,     0,     0,     0,     0,  1341,     0,  1344,  1342,
       0,  1345,  1346,  1347,     0,  1348,  1349,  1350,  1351,  1352,
    1353,     0,  1332,     0,     0,  2546,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1344,     0,     0,
    1345,  1346,  1347,     0,  1348,  1349,  1350,  1351,  1352,  1353,
       0,     0,     0,     0,  2568,     0,     0,     0,     0,  1320,
       0,     0,  1321,     0,     0,     0,  1322,  1323,  1324,  1325,
    1326,  1327,     0,  1344,     0,     0,  1345,  1346,  1347,     0,
    1348,  1349,  1350,  1351,  1352,  1353,  1328,     0,     0,     0,
    2711,     0,     0,     0,  1330,     0,     0,     0,  1343,     0,
       0,  1331,  1344,     0,     0,  1345,  1346,  1347,     0,  1348,
    1349,  1350,  1351,  1352,  1353,     0,     0,     0,     0,  2774,
       0,  1320,   509,  1333,  1321,     0,  1332,     0,  1322,  1323,
    1324,  1325,  1326,  1327,     0,     0,     0,     0,     0,  1334,
       0,     0,     0,     0,  1335,     0,     0,     0,  1328,     0,
       0,     0,     0,     0,     0,     0,  1330,     0,     0,     0,
       0,     0,     0,  1331,     0,     0,  1336,  1337,     0,     0,
       0,     0,     0,     0,     0,   510,     0,     0,     0,     0,
       0,  1338,     0,     0,     0,     0,     0,     0,  1332,     0,
       0,   511,     0,     0,     0,     0,     0,     0,     0,     0,
    1344,     0,     0,  1345,  1346,  1347,     0,  1348,  1349,  1350,
    1351,  1352,  1353,     0,     0,     0,     0,  2881,     0,  1339,
       0,     0,  1340,     0,     0,     0,     0,  1333,     0,     0,
       0,     0,     0,     0,     0,     0,  1341,     0,     0,  1342,
       0,     0,     0,  1334,     0,   512,     0,     0,  1335,     0,
       0,     0,     0,     0,     0,   513,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   514,     0,     0,
    1336,  1337,   515,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1338,     0,     0,     0,  1333,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   516,
       0,     0,     0,     0,     0,  1334,     0,     0,     0,     0,
    1335,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1339,     0,     0,  1340,     0,  1343,     0,
       0,     0,  1336,  1337,     0,     0,     0,     0,     0,     0,
    1341,     0,     0,  1342,   517,     0,     0,  1338,   518,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1339,     0,     0,  1340,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1341,     0,     0,  1342,     0,     0,     0,     0,
       0,   519,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   520,     0,     0,     0,     0,
    1344,     0,  1343,  1345,  1346,  1347,     0,  1348,  1349,  1350,
    1351,  1352,  1353,     0,     0,     0,     0,  2929,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   521,     0,
       0,   522,     0,     0,     0,     0,     0,     0,     0,   523,
       0,     0,   524,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   525,     0,     0,  1343,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   526,     0,     0,     0,     0,
       0,     0,   527,     0,     0,     0,     0,     0,     0,     0,
       0,   528,     0,     0,     0,     0,     0,   529,     0,     0,
       0,     0,     0,     0,  1344,     0,     0,  1345,  1346,  1347,
       0,  1348,  1349,  1350,  1351,  1352,  1353,     0,     0,     0,
       0,  2942,   530,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1062,     0,  1344,     0,     0,  1345,
    1346,  1347,     0,  1348,  1349,  1350,  1351,  1352,  1353,     0,
       0,  1504,    94,    95,    96,    97,    98,    99,   100,   101,
    1063,   102,   103,   104,  1064,  1065,  1066,  1067,  1068,  1069,
    1070,   105,   106,  1071,   107,   108,   109,     0,   111,   112,
     113,   750,   751,     0,   752,   753,  1072,   119,   120,   121,
     122,   123,   124,  1073,  1074,   125,   126,   754,   755,   129,
    1075,   130,   131,   132,   133,   756,  1076,     0,  1077,   136,
     137,   138,   139,   140,   141,     0,   143,   144,   145,  1078,
     146,   147,   148,   149,   150,   151,  1079,     0,   153,   154,
     155,  1080,  1081,  1082,     0,  1083,  1084,  1085,   157,   158,
     159,   160,   161,   162,   163,   757,   758,   166,  1086,   167,
    1087,   168,   169,   170,   171,   172,   173,  1088,   174,   175,
     176,   177,   178,  1089,  1090,   179,   180,   181,   182,   183,
    1091,   184,   185,   186,  1092,   187,   188,   189,  1093,   190,
     191,   192,   193,   759,   195,   196,   197,   198,   199,   760,
    1094,   201,  1095,   202,   203,   761,   205,  1096,   206,  1097,
     207,     0,  1098,     0,   210,   211,   762,     0,   214,  1099,
     215,  1100,   763,   764,   218,  1101,   219,   220,   221,   222,
     223,   224,   225,     0,   227,   228,   229,   230,  1102,   231,
     232,   233,   234,   235,   236,  1103,   237,     0,   765,   240,
     241,   242,   243,   244,   766,   767,  1104,   768,  1105,   248,
       0,     0,   251,     0,   253,   254,   255,   256,   257,   258,
    1106,  1107,   259,     0,   261,     0,  1108,   263,   264,   265,
    1109,  1110,   266,   267,   268,   269,   270,   769,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   770,     0,   771,   293,
     294,   295,   772,  1111,   297,   298,     0,   300,  1112,   773,
     302,   774,   304,   305,   306,  1113,   307,   308,  1114,  1115,
     309,   310,   311,  1116,  1117,   312,   775,     0,   315,     0,
     776,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,  1118,   328,   329,   777,   331,   332,   778,   334,   335,
     336,  1119,   337,   338,   339,   340,   341,   342,  1120,   343,
     344,   345,   779,   347,   348,   349,   350,  1121,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,  1122,   364,   365,     0,   367,   368,   369,   780,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
    1123,   382,   383,   384,   385,   386,  1124,   387,   781,   389,
     390,   391,     0,   393,   394,   782,   396,  1125,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     783,   410,   784,   412,  1126,   413,   414,  1127,   415,     0,
     417,   418,   419,   420,   421,  1128,   785,   786,  1129,  1130,
     424,   425,   787,   427,   788,  1131,   429,   430,   789,   432,
     433,   434,   435,   436,  1132,  1133,   437,   438,   439,   440,
     441,  1134,  1135,   442,   443,   444,   445,   446,  1136,   791,
    1137,   449,     0,   451,   452,   453,   454,   455,  1138,  1139,
     456,  1140,  1141,   457,   458,   459,   460,   461,   462,   792,
     793,   794,   795,   796,   797,   798,   799,   800,   801,   802,
     474,   475,   476,   477,   500,     0,     0,     0,     0,     0,
       0,     0,     0,  1755,     0,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,     0,     0,     0,     0,     0,     0,
       0,   105,   106,     0,   107,   108,   109,     0,   111,   112,
     113,   114,   115,     0,   117,   118,     0,   119,   120,   121,
     122,   123,   124,     0,     0,   125,   126,   127,   128,   129,
       0,   130,   131,   132,   133,   134,     0,     0,     0,   136,
     137,   138,   139,   140,   141,     0,   143,   144,   145,     0,
     146,   147,   148,   149,   150,   151,     0,     0,   153,   154,
     155,     0,     0,     0,     0,     0,     0,     0,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,     0,   167,
       0,   168,   169,   170,   171,   172,   173,     0,   174,   175,
     176,   177,   178,     0,     0,   179,   180,   181,   182,   183,
       0,   184,   185,   186,     0,   187,   188,   189,     0,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
       0,   201,     0,   202,   203,   204,   205,     0,   206,     0,
     207,     0,     0,     0,   210,   211,   502,     0,   214,     0,
     215,     0,   216,   217,   218,     0,   219,   220,   221,   222,
     223,   224,   225,     0,   227,   228,   229,   230,     0,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   239,   240,
     241,   242,   243,   244,   245,   246,     0,   247,     0,   248,
       0,     0,   251,     0,   253,   254,   255,   256,   257,   258,
       0,     0,   259,     0,   261,     0,     0,   263,   264,   265,
       0,     0,   266,   267,   268,   269,   270,   503,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,     0,   292,   293,
     294,   295,   296,     0,   297,   298,     0,   300,     0,   301,
     302,   303,   304,   305,   306,     0,   307,   308,     0,     0,
     309,   310,   311,     0,     0,   312,   313,     0,   315,     0,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,   331,   332,   333,   334,   335,
     336,     0,   337,   338,   339,   340,   341,   342,     0,   343,
     344,   345,   346,   347,   348,   349,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,     0,   364,   365,     0,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
       0,   382,   383,   384,   385,   386,     0,   387,   388,   389,
     390,   391,     0,   393,   394,   395,   396,     0,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     505,   410,   411,   412,     0,   413,   414,     0,   415,     0,
     417,   418,   419,   420,   421,     0,   422,   423,     0,     0,
     424,   425,   426,   427,   428,     0,   429,   430,   431,   432,
     433,   434,   435,   436,     0,     0,   437,   438,   439,   440,
     441,     0,     0,   442,   443,   444,   445,   446,   447,   448,
       0,   449,     0,   451,   452,   453,   454,   455,     0,     0,
     456,     0,     0,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   749,  1243,   550,     0,     0,     0,
     826,     0,     0,  2260,     0,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,     0,     0,     0,     0,     0,     0,
       0,   105,   106,     0,   107,   108,   109,     0,   111,   112,
     113,   750,   751,     0,   752,   753,     0,   119,   120,   121,
     122,   123,   124,     0,     0,   125,   126,   754,   755,   129,
       0,   130,   131,   132,   133,   756,     0,     0,     0,   136,
     137,   138,   139,   140,   141,     0,   143,   144,   145,     0,
     146,   147,   148,   149,   150,   151,     0,     0,   153,   154,
     155,     0,     0,     0,     0,     0,     0,     0,   157,   158,
     159,   160,   161,   162,   163,   757,   758,   166,  1380,   167,
       0,   168,   169,   170,   171,   172,   173,     0,   174,   175,
     176,   177,   178,     0,     0,   179,   180,   181,   182,   183,
       0,   184,   185,   186,     0,   187,   188,   189,     0,   190,
     191,   192,   193,   759,   195,   196,   197,   198,   199,   760,
    1244,   201,     0,   202,   203,   761,   205,     0,   206,     0,
     207,     0,     0,     0,   210,   211,   762,     0,   214,     0,
     215,     0,   763,   764,   218,     0,   219,   220,   221,   222,
     223,   224,   225,     0,   227,   228,   229,   230,     0,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   765,   240,
     241,   242,   243,   244,   766,   767,     0,   768,     0,   248,
       0,     0,   251,     0,   253,   254,   255,   256,   257,   258,
       0,     0,   259,     0,   261,     0,     0,   263,   264,   265,
       0,     0,   266,   267,   268,   269,   270,   769,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   770,     0,   771,   293,
     294,   295,   772,     0,   297,   298,     0,   300,     0,   773,
     302,   774,   304,   305,   306,     0,   307,   308,  1245,     0,
     309,   310,   311,     0,     0,   312,   775,     0,   315,     0,
     776,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   777,   331,   332,   778,   334,   335,
     336,     0,   337,   338,   339,   340,   341,   342,     0,   343,
     344,   345,   779,   347,   348,   349,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,     0,   364,   365,     0,   367,   368,   369,   780,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
       0,   382,   383,   384,   385,   386,     0,   387,   781,   389,
     390,   391,     0,   393,   394,   782,   396,     0,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     783,   410,   784,   412,     0,   413,   414,     0,   415,     0,
     417,   418,   419,   420,   421,     0,   785,   786,     0,     0,
     424,   425,   787,   427,   788,  1246,   429,   430,   789,   432,
     433,   434,   435,   436,     0,     0,   437,   438,   439,   440,
     441,     0,     0,   442,   443,   444,   445,   446,  1136,   791,
       0,   449,     0,   451,   452,   453,   454,   455,     0,     0,
     456,     0,     0,   457,   458,   459,   460,   461,   462,   792,
     793,   794,   795,   796,   797,   798,   799,   800,   801,   802,
     474,   475,   476,   477,   749,  1243,   550,     0,     0,     0,
     826,  1247,  1248,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,     0,     0,     0,     0,     0,     0,
       0,   105,   106,     0,   107,   108,   109,     0,   111,   112,
     113,   750,   751,     0,   752,   753,     0,   119,   120,   121,
     122,   123,   124,     0,     0,   125,   126,   754,   755,   129,
       0,   130,   131,   132,   133,   756,     0,     0,     0,   136,
     137,   138,   139,   140,   141,     0,   143,   144,   145,     0,
     146,   147,   148,   149,   150,   151,     0,     0,   153,   154,
     155,     0,     0,     0,     0,     0,     0,     0,   157,   158,
     159,   160,   161,   162,   163,   757,   758,   166,  1382,   167,
       0,   168,   169,   170,   171,   172,   173,     0,   174,   175,
     176,   177,   178,     0,     0,   179,   180,   181,   182,   183,
       0,   184,   185,   186,     0,   187,   188,   189,     0,   190,
     191,   192,   193,   759,   195,   196,   197,   198,   199,   760,
    1244,   201,     0,   202,   203,   761,   205,     0,   206,     0,
     207,     0,     0,     0,   210,   211,   762,     0,   214,     0,
     215,     0,   763,   764,   218,     0,   219,   220,   221,   222,
     223,   224,   225,     0,   227,   228,   229,   230,     0,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   765,   240,
     241,   242,   243,   244,   766,   767,     0,   768,     0,   248,
       0,     0,   251,     0,   253,   254,   255,   256,   257,   258,
       0,     0,   259,     0,   261,     0,     0,   263,   264,   265,
       0,     0,   266,   267,   268,   269,   270,   769,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   770,     0,   771,   293,
     294,   295,   772,     0,   297,   298,     0,   300,     0,   773,
     302,   774,   304,   305,   306,     0,   307,   308,  1245,     0,
     309,   310,   311,     0,     0,   312,   775,     0,   315,     0,
     776,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   777,   331,   332,   778,   334,   335,
     336,     0,   337,   338,   339,   340,   341,   342,     0,   343,
     344,   345,   779,   347,   348,   349,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,     0,   364,   365,     0,   367,   368,   369,   780,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
       0,   382,   383,   384,   385,   386,     0,   387,   781,   389,
     390,   391,     0,   393,   394,   782,   396,     0,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     783,   410,   784,   412,     0,   413,   414,     0,   415,     0,
     417,   418,   419,   420,   421,     0,   785,   786,     0,     0,
     424,   425,   787,   427,   788,  1246,   429,   430,   789,   432,
     433,   434,   435,   436,     0,     0,   437,   438,   439,   440,
     441,     0,     0,   442,   443,   444,   445,   446,  1136,   791,
       0,   449,     0,   451,   452,   453,   454,   455,     0,     0,
     456,     0,     0,   457,   458,   459,   460,   461,   462,   792,
     793,   794,   795,   796,   797,   798,   799,   800,   801,   802,
     474,   475,   476,   477,   749,  1243,   550,     0,     0,     0,
     826,  1247,  1248,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,     0,     0,     0,     0,     0,     0,
       0,   105,   106,     0,   107,   108,   109,     0,   111,   112,
     113,   750,   751,     0,   752,   753,     0,   119,   120,   121,
     122,   123,   124,     0,     0,   125,   126,   754,   755,   129,
       0,   130,   131,   132,   133,   756,     0,     0,     0,   136,
     137,   138,   139,   140,   141,     0,   143,   144,   145,     0,
     146,   147,   148,   149,   150,   151,     0,     0,   153,   154,
     155,     0,     0,     0,     0,     0,     0,     0,   157,   158,
     159,   160,   161,   162,   163,   757,   758,   166,     0,   167,
       0,   168,   169,   170,   171,   172,   173,     0,   174,   175,
     176,   177,   178,     0,     0,   179,   180,   181,   182,   183,
       0,   184,   185,   186,     0,   187,   188,   189,     0,   190,
     191,   192,   193,   759,   195,   196,   197,   198,   199,   760,
    1244,   201,     0,   202,   203,   761,   205,     0,   206,     0,
     207,     0,     0,     0,   210,   211,   762,     0,   214,     0,
     215,     0,   763,   764,   218,     0,   219,   220,   221,   222,
     223,   224,   225,     0,   227,   228,   229,   230,     0,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   765,   240,
     241,   242,   243,   244,   766,   767,     0,   768,     0,   248,
       0,     0,   251,     0,   253,   254,   255,   256,   257,   258,
       0,     0,   259,     0,   261,     0,     0,   263,   264,   265,
       0,     0,   266,   267,   268,   269,   270,   769,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   770,     0,   771,   293,
     294,   295,   772,     0,   297,   298,     0,   300,     0,   773,
     302,   774,   304,   305,   306,     0,   307,   308,  1245,     0,
     309,   310,   311,     0,     0,   312,   775,     0,   315,     0,
     776,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   777,   331,   332,   778,   334,   335,
     336,     0,   337,   338,   339,   340,   341,   342,     0,   343,
     344,   345,   779,   347,   348,   349,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,     0,   364,   365,     0,   367,   368,   369,   780,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
       0,   382,   383,   384,   385,   386,     0,   387,   781,   389,
     390,   391,     0,   393,   394,   782,   396,     0,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     783,   410,   784,   412,     0,   413,   414,     0,   415,     0,
     417,   418,   419,   420,   421,     0,   785,   786,     0,     0,
     424,   425,   787,   427,   788,  1246,   429,   430,   789,   432,
     433,   434,   435,   436,     0,     0,   437,   438,   439,   440,
     441,     0,     0,   442,   443,   444,   445,   446,  1136,   791,
       0,   449,     0,   451,   452,   453,   454,   455,     0,     0,
     456,     0,     0,   457,   458,   459,   460,   461,   462,   792,
     793,   794,   795,   796,   797,   798,   799,   800,   801,   802,
     474,   475,   476,   477,     0,     0,  1320,     0,     0,  1321,
       0,  1247,  1248,  1322,  1323,  1324,  1325,  1326,  1327,  1320,
       0,     0,  1321,     0,     0,     0,  1322,  1323,  1324,  1325,
    1326,  1327,     0,  1328,     0,     0,     0,  1782,     0,     0,
       0,  1330,     0,     0,     0,     0,  1328,     0,  1331,     0,
       0,     0,     0,     0,  1330,  1320,     0,     0,  1321,     0,
       0,  1331,  1322,  1323,  1324,  1325,  1326,  1327,  1320,     0,
       0,  1321,     0,  1332,     0,  1322,  1323,  1324,  1325,  1326,
    1327,     0,  1328,     0,     0,     0,  1332,     0,     0,     0,
    1330,     0,     0,     0,     0,  1328,     0,  1331,  1984,     0,
       0,     0,     0,  1330,  1320,     0,     0,  1321,     0,     0,
    1331,  1322,  1323,  1324,  1325,  1326,  1327,     0,     0,     0,
       0,     0,  1332,     0,  1783,     0,     0,     0,     0,     0,
       0,  1328,     0,     0,     0,  1332,     0,     0,     0,  1330,
       0,     0,     0,     0,     0,     0,  1331,     0,     0,  1320,
       0,     0,  1321,     0,     0,     0,  1322,  1323,  1324,  1325,
    1326,  1327,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1332,     0,     0,  1333,     0,  1328,  2023,     0,  2029,
       0,     0,  2024,     0,  1330,     0,     0,  1333,     0,     0,
    1334,  1331,     0,     0,     0,  1335,     0,     0,     0,     0,
       0,     0,     0,  1334,     0,     0,     0,     0,  1335,     0,
       0,     0,  3029,     0,     0,     0,  1332,  1336,  1337,     0,
       0,     0,     0,  1333,     0,     0,     0,     0,     0,     0,
    1336,  1337,  1338,     0,     0,     0,  1333,     0,     0,  1334,
       0,     0,     0,     0,  1335,  1338,     0,     0,     0,     0,
       0,     0,  1334,     0,     0,     0,     0,  1335,     0,     0,
       0,     0,     0,     0,     0,     0,  1336,  1337,     0,     0,
    1339,     0,  1333,  1340,     0,     0,     0,     0,     0,  1336,
    1337,  1338,     0,  1339,     0,     0,  1340,  1341,  1334,     0,
    1342,     0,     0,  1335,  1338,     0,     0,     0,     0,     0,
    1341,     0,     0,  1342,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1336,  1337,  1333,     0,  1339,
       0,     0,  1340,     0,     0,     0,     0,     0,     0,     0,
    1338,     0,  1339,  1334,     0,  1340,  1341,     0,  1335,  1342,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1341,
       0,     0,  1342,     0,     0,     0,     0,     0,     0,     0,
    1336,  1337,  3030,     0,     0,     0,     0,     0,  1339,     0,
       0,  1340,     0,     0,     0,  1338,     0,     0,     0,  1343,
       0,     0,     0,     0,     0,  1341,     0,     0,  1342,     0,
       0,     0,  1343,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1996,     0,     0,     0,
       0,     0,     0,  1339,     0,     0,  1340,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1343,     0,
    1341,     0,     0,  1342,     0,     0,     0,     0,     0,  1787,
       0,  1343,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1343,     0,     0,
       0,  1344,     0,     0,  1345,  1346,  1347,     0,  1348,  1349,
    1350,  1351,  1352,  1353,  1344,     0,     0,  1345,  1346,  1347,
       0,  1348,  1349,  1350,  1351,  1352,  1353,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1343,     0,     0,     0,     0,     0,     0,     0,
    1344,     0,     0,  1345,  1346,  1347,     0,  1348,  1349,  1350,
    1351,  1352,  1353,  1344,     0,     0,  1345,  1346,  1347,     0,
    1348,  1349,  1350,  1351,  1352,  1353,     0,     0,  1320,     0,
       0,  1321,     0,     0,     0,  1322,  1323,  1324,  1325,  1326,
    1327,     0,     0,     0,     0,     0,     0,     0,     0,  1344,
       0,     0,  1345,  1346,  1347,  1328,  1348,  1349,  1350,  1351,
    1352,  1353,     0,  1330,     0,     0,     0,     0,     0,     0,
    1331,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1344,  1332,     0,  1345,  1346,  1347,
       0,  1348,  1349,  1350,  1351,  1352,  1353,  1320,     0,     0,
    1321,     0,     0,     0,  1322,  1323,  1324,  1325,  1326,  1327,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1328,     0,  1320,  2036,     0,  1321,
       0,     0,  1330,  1322,  1323,  1324,  1325,  1326,  1327,  1331,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1328,     0,     0,     0,     0,     0,     0,
       0,  1330,     0,     0,  1332,     0,     0,     0,  1331,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2034,     0,     0,     0,     0,  1333,     0,     0,     0,
       0,     0,     0,  1332,     0,     0,     0,     0,     0,     0,
       0,     0,  1334,     0,     0,  1320,     0,  1335,  1321,     0,
       0,     0,  1322,  1323,  1324,  1325,  1326,  1327,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1336,
    1337,     0,  1328,     0,     0,  2309,     0,     0,     0,     0,
    1330,     0,     0,     0,  1338,     0,     0,  1331,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1333,     0,     0,     0,     0,
       0,     0,  1332,     0,     0,     0,     0,     0,     0,     0,
       0,  1334,  1339,     0,     0,  1340,  1335,     0,     0,     0,
       0,     0,     0,     0,  1333,     0,     0,     0,     0,  1341,
       0,     0,  1342,     0,     0,     0,     0,     0,  1336,  1337,
    1334,     0,     0,     0,     0,  1335,     0,     0,     0,     0,
       0,     0,     0,  1338,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1336,  1337,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1338,     0,     0,     0,     0,     0,     0,     0,
       0,  1339,     0,     0,  1340,     0,     0,     0,     0,     0,
       0,     0,     0,  1333,     0,     0,  1320,     0,  1341,  1321,
       0,  1342,     0,  1322,  1323,  1324,  1325,  1326,  1327,  1334,
    1339,  1343,     0,  1340,  1335,     0,     0,     0,     0,     0,
       0,     0,     0,  1328,     0,     0,     0,  1341,     0,     0,
    1342,  1330,     0,     0,     0,     0,  1336,  1337,  1331,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1338,     0,     0,     0,     0,     0,     0,     0,  1320,
       0,     0,  1321,  1332,     0,     0,  1322,  1323,  1324,  1325,
    1326,  1327,  1320,     0,     0,  1321,     0,     0,     0,  1322,
       0,     0,  1325,  1326,  1327,     0,  1328,     0,     0,  1339,
    1343,     0,  1340,     0,  1330,     0,     0,     0,     0,     0,
       0,  1331,     0,     0,     0,     0,  1341,  1330,     0,  1342,
       0,     0,     0,  1344,  1331,     0,  1345,  1346,  1347,  1343,
    1348,  1349,  1350,  1351,  1352,  1353,  1332,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1332,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2264,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1333,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1334,     0,     0,     0,     0,  1335,     0,     0,     0,     0,
       0,     0,  1344,     0,     0,  1345,  1346,  1347,  1343,  1348,
    1349,  1350,  1351,  1352,  1353,     0,     0,  1336,  1337,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1344,  1338,     0,  1345,  1346,  1347,  1333,  1348,  1349,
    1350,  1351,  1352,  1353,     0,     0,     0,     0,     0,     0,
    1333,     0,     0,  1334,     0,     0,     0,     0,  1335,     0,
       0,     0,     0,     0,     0,     0,  1334,     0,     0,     0,
    1339,  1335,     0,  1340,     0,     0,     0,     0,     0,     0,
    1336,  1337,     0,     0,     0,     0,     0,  1341,     0,     0,
    1342,     0,     0, -1774, -1774,  1338,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1338,     0,
    1344,     0,     0,  1345,  1346,  1347,     0,  1348,  1349,  1350,
    1351,  1352,  1353,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1339,     0,     0,  1340,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0, -1774,
    1341,     0,     0,  1342,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1341,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1343,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1343,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1343,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1344,     0,     0,  1345,  1346,  1347,     0,  1348,  1349,
    1350,  1351,  1352,  1353,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1344,     0,     0,  1345,  1346,  1347,
       0,  1348,  1349,  1350,  1351,  1802,  1353,  1344,     0,     0,
    1345,  1346,  1347,     0,  1348,  1349,  1350,  1351,  1352,  1353,
    1062,     0,  1692,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,  1063,   102,   103,   104,
    1064,  1065,  1066,  1067,  1068,  1069,  1070,   105,   106,  1071,
     107,   108,   109,     0,   111,   112,   113,   750,   751,     0,
     752,   753,  1072,   119,   120,   121,   122,   123,   124,  1073,
    1074,   125,   126,   754,   755,   129,  1075,   130,   131,   132,
     133,   756,  1076,     0,  1077,   136,   137,   138,   139,   140,
     141,     0,   143,   144,   145,  1078,   146,   147,   148,   149,
     150,   151,  1079,     0,   153,   154,   155,  1080,  1081,  1082,
       0,  1083,  1084,  1085,   157,   158,   159,   160,   161,   162,
     163,   757,   758,   166,  1086,   167,  1087,   168,   169,   170,
     171,   172,   173,  1088,   174,   175,   176,   177,   178,  1089,
    1090,   179,   180,   181,   182,   183,  1091,   184,   185,   186,
    1092,   187,   188,   189,  1093,   190,   191,   192,   193,   759,
     195,   196,   197,   198,   199,   760,  1094,   201,  1095,   202,
     203,   761,   205,  1096,   206,  1097,   207,     0,  1098,     0,
     210,   211,   762,     0,   214,  1099,   215,  1100,   763,   764,
     218,  1101,   219,   220,   221,   222,   223,   224,   225,     0,
     227,   228,   229,   230,  1102,   231,   232,   233,   234,   235,
     236,  1103,   237,     0,   765,   240,   241,   242,   243,   244,
     766,   767,  1104,   768,  1105,   248,     0,     0,   251,     0,
     253,   254,   255,   256,   257,   258,  1106,  1107,   259,     0,
     261,     0,  1108,   263,   264,   265,  1109,  1110,   266,   267,
     268,   269,   270,   769,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   770,     0,   771,   293,   294,   295,   772,  1111,
     297,   298,     0,   300,  1112,   773,   302,   774,   304,   305,
     306,  1113,   307,   308,  1114,  1115,   309,   310,   311,  1116,
    1117,   312,   775,     0,   315,     0,   776,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,  1118,   328,   329,
     777,   331,   332,   778,   334,   335,   336,  1119,   337,   338,
     339,   340,   341,   342,  1120,   343,   344,   345,   779,   347,
     348,   349,   350,  1121,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,  1122,   364,   365,
       0,   367,   368,   369,   780,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,  1123,   382,   383,   384,
     385,   386,  1124,   387,   781,   389,   390,   391,     0,   393,
     394,   782,   396,  1125,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   783,   410,   784,   412,
    1126,   413,   414,  1127,   415,     0,   417,   418,   419,   420,
     421,  1128,   785,   786,  1129,  1130,   424,   425,   787,   427,
     788,  1131,   429,   430,   789,   432,   433,   434,   435,   436,
    1132,  1133,   437,   438,   439,   440,   441,  1134,  1135,   442,
     443,   444,   445,   446,  1136,   791,  1137,   449,     0,   451,
     452,   453,   454,   455,  1138,  1139,   456,  1140,  1141,   457,
     458,   459,   460,   461,   462,   792,   793,   794,   795,   796,
     797,   798,   799,   800,   801,   802,   474,   475,   476,   477,
    1062,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,  1063,   102,   103,   104,
    1064,  1065,  1066,  1067,  1068,  1069,  1070,   105,   106,  1071,
     107,   108,   109,     0,   111,   112,   113,   750,   751,     0,
     752,   753,  1072,   119,   120,   121,   122,   123,   124,  1073,
    1074,   125,   126,   754,   755,   129,  1075,   130,   131,   132,
     133,   756,  1076,     0,  1077,   136,   137,   138,   139,   140,
     141,     0,   143,   144,   145,  1078,   146,   147,   148,   149,
     150,   151,  1079,     0,   153,   154,   155,  1080,  1081,  1082,
       0,  1083,  1084,  1085,   157,   158,   159,   160,   161,   162,
     163,   757,   758,   166,  1086,   167,  1087,   168,   169,   170,
     171,   172,   173,  1088,   174,   175,   176,   177,   178,  1089,
    1090,   179,   180,   181,   182,   183,  1091,   184,   185,   186,
    1092,   187,   188,   189,  1093,   190,   191,   192,   193,   759,
     195,   196,   197,   198,   199,   760,  1094,   201,  1095,   202,
     203,   761,   205,  1096,   206,  1097,   207,     0,  1098,     0,
     210,   211,   762,     0,   214,  1099,   215,  1100,   763,   764,
     218,  1101,   219,   220,   221,   222,   223,   224,   225,     0,
     227,   228,   229,   230,  1102,   231,   232,   233,   234,   235,
     236,  1103,   237,     0,   765,   240,   241,   242,   243,   244,
     766,   767,  1104,   768,  1105,   248,     0,     0,   251,     0,
     253,   254,   255,   256,   257,   258,  1106,  1107,   259,     0,
     261,     0,  1108,   263,   264,   265,  1109,  1110,   266,   267,
     268,   269,   270,   769,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   770,     0,   771,   293,   294,   295,   772,  1111,
     297,   298,     0,   300,  1112,   773,   302,   774,   304,   305,
     306,  1113,   307,   308,  1114,  1115,   309,   310,   311,  1116,
    1117,   312,   775,     0,   315,     0,   776,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,  1118,   328,   329,
     777,   331,   332,   778,   334,   335,   336,  1119,   337,   338,
     339,   340,   341,   342,  1120,   343,   344,   345,   779,   347,
     348,   349,   350,  1121,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,  1122,   364,   365,
       0,   367,   368,   369,   780,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,  1123,   382,   383,   384,
     385,   386,  1124,   387,   781,   389,   390,   391,     0,   393,
     394,   782,   396,  1125,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   783,   410,   784,   412,
    1126,   413,   414,  1127,   415,     0,   417,   418,   419,   420,
     421,  1128,   785,   786,  1129,  1130,   424,   425,   787,   427,
     788,  1131,   429,   430,   789,   432,   433,   434,   435,   436,
    1132,  1133,   437,   438,   439,   440,   441,  1134,  1135,   442,
     443,   444,   445,   446,  1136,   791,  1137,   449,     0,   451,
     452,   453,   454,   455,  1138,  1139,   456,  1140,  1141,   457,
     458,   459,   460,   461,   462,   792,   793,   794,   795,   796,
     797,   798,   799,   800,   801,   802,   474,   475,   476,   477,
    1062,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,  1838,    99,   100,   101,  1063,   102,   103,   104,
    1064,  1065,  1066,  1067,  1068,  1069,  1070,   105,   106,  1071,
     107,   108,   109,     0,   111,   112,   113,   750,   751,     0,
     752,   753,  1072,   119,   120,   121,   122,   123,   124,  1073,
    1074,   125,   126,   754,   755,   129,  1075,   130,   131,   132,
     133,   756,  1076,     0,  1077,   136,   137,   138,   139,   140,
     141,     0,   143,   144,   145,  1078,   146,   147,   148,   149,
     150,   151,  1079,     0,   153,   154,   155,  1080,  1081,  1082,
       0,  1083,  1084,  1085,   157,   158,   159,   160,   161,   162,
     163,   757,   758,   166,  1086,   167,  1087,   168,   169,   170,
     171,   172,   173,  1088,   174,   175,   176,   177,   178,  1089,
    1090,   179,   180,   181,  1839,   183,  1091,   184,   185,   186,
    1092,   187,   188,   189,  1093,   190,   191,   192,   193,   759,
     195,   196,   197,   198,   199,   760,  1094,   201,  1095,   202,
     203,   761,   205,  1096,   206,  1097,   207,     0,  1098,     0,
     210,   211,   762,     0,   214,  1099,   215,  1100,   763,   764,
     218,  1101,   219,   220,   221,   222,   223,   224,   225,     0,
     227,   228,   229,   230,  1102,   231,   232,   233,   234,   235,
     236,  1103,   237,     0,   765,   240,   241,   242,   243,   244,
     766,   767,  1104,   768,  1105,   248,     0,     0,   251,     0,
     253,   254,   255,   256,   257,   258,  1106,  1107,   259,     0,
     261,     0,  1108,   263,   264,   265,  1109,  1110,   266,   267,
     268,   269,   270,   769,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   770,     0,   771,   293,   294,   295,   772,  1111,
     297,   298,     0,   300,  1112,   773,   302,   774,   304,   305,
     306,  1113,   307,   308,  1114,  1115,   309,   310,   311,  1116,
    1117,   312,   775,     0,   315,     0,   776,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,  1118,   328,   329,
     777,   331,   332,   778,   334,   335,   336,  1119,   337,   338,
     339,   340,   341,   342,  1120,   343,   344,   345,   779,   347,
     348,   349,   350,  1121,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,  1122,   364,   365,
       0,   367,   368,   369,   780,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,  1123,   382,   383,   384,
     385,   386,  1124,  1840,   781,   389,   390,   391,     0,   393,
     394,   782,   396,  1125,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   783,   410,   784,   412,
    1126,   413,   414,  1127,   415,     0,   417,   418,   419,   420,
     421,  1128,   785,   786,  1129,  1130,   424,   425,   787,   427,
     788,  1131,   429,   430,   789,   432,   433,   434,   435,   436,
    1132,  1133,   437,   438,   439,   440,   441,  1134,  1135,   442,
     443,   444,   445,   446,  1136,   791,  1137,   449,     0,   451,
     452,   453,   454,   455,  1138,  1139,   456,  1140,  1141,   457,
     458,   459,   460,   461,   462,   792,   793,   794,   795,   796,
     797,   798,   799,   800,   801,   802,   474,   475,   476,   477,
      93,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   118,     0,   119,   120,   121,   122,   123,   124,     0,
     833,   125,   126,   127,   128,   129,     0,   130,   131,   132,
     133,   836,     0,   837,     0,   136,   137,   138,   139,   140,
     141,   142,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,   152,   153,   154,   155,   838,   839,   840,
     841,   842,   843,   844,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,     0,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   181,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   849,     0,   201,     0,   202,
     203,   204,   205,     0,   206,     0,   207,   208,     0,   209,
     210,   211,   212,   213,   214,     0,   215,     0,   216,   217,
     218,     0,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,     0,   247,     0,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,     0,     0,   259,   260,
     261,   262,     0,   263,   264,   265,   857,   858,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,     0,
     297,   298,   299,   300,     0,   863,   302,   303,   304,   305,
     306,     0,   307,   308,     0,     0,   309,   310,   311,     0,
       0,   312,   313,   314,   315,   316,   866,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     867,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,   870,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   872,   412,
       0,   413,   414,     0,   415,   416,   417,   418,   419,   420,
     421,     0,   422,   423,     0,     0,   424,   425,   875,   427,
     876,     0,   429,   430,   878,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,   879,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,   450,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
      93,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   118,     0,   119,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   127,   128,   129,     0,   130,   131,   132,
     133,   134,     0,   135,     0,   136,   137,   138,   139,   140,
     141,   142,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,   152,   153,   154,   155,     0,     0,     0,
     156,     0,     0,     0,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,     0,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   181,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,     0,   201,     0,   202,
     203,   204,   205,     0,   206,     0,   207,   208,     0,   209,
     210,   211,   212,   213,   214,     0,   215,     0,   216,   217,
     218,     0,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,     0,   247,     0,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,     0,     0,   259,   260,
     261,   262,     0,   263,   264,   265,     0,     0,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,     0,
     297,   298,   299,   300,     0,   301,   302,   303,   304,   305,
     306,     0,   307,   308,     0,     0,   309,   310,   311,     0,
       0,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
       0,   413,   414,     0,   415,   416,   417,   418,   419,   420,
     421,     0,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,   450,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     500,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   127,   128,   129,  1442,   130,   131,   132,
     133,   134,     0,     0,  1443,   136,   137,   138,   139,   140,
     141,     0,   143,   144,   145,  1444,   146,   147,   148,   149,
     150,   151,     0,     0,   153,   154,   155,     0,     0,     0,
       0,     0,     0,     0,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,     0,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   181,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,     0,   201,     0,   202,
     203,   204,   205,     0,   206,  1445,   207,     0,     0,     0,
     210,   211,   502,     0,   214,     0,   215,     0,   216,   217,
     218,     0,   219,   220,   221,   222,   223,  1446,   225,     0,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   239,   240,   241,   242,   243,   244,
     245,   246,     0,   247,     0,   248,     0,     0,   251,     0,
     253,   254,   255,   256,   257,   258,     0,     0,   259,     0,
     261,     0,     0,   263,   264,   265,     0,     0,   266,   267,
     268,   269,   270,   503,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   292,   293,   294,   295,   296,     0,
     297,   298,     0,   300,     0,   301,   302,   303,   304,   305,
     306,     0,   307,   308,     0,     0,   309,   310,   311,     0,
       0,   312,   313,     0,   315,     0,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,  1447,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
       0,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   387,   388,   389,   390,   391,     0,   393,
     394,   395,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   505,   410,   411,   412,
       0,   413,   414,     0,   415,     0,   417,   418,   419,   420,
     421,     0,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,  1448,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,     0,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     500,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   127,   128,   129,  1442,   130,   131,   132,
     133,   134,     0,     0,     0,   136,   137,   138,   139,   140,
     141,     0,   143,   144,   145,  1444,   146,   147,   148,   149,
     150,   151,     0,     0,   153,   154,   155,     0,     0,     0,
       0,     0,     0,     0,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,     0,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   181,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,     0,   201,     0,   202,
     203,   204,   205,     0,   206,  1445,   207,     0,     0,     0,
     210,   211,   502,     0,   214,     0,   215,     0,   216,   217,
     218,     0,   219,   220,   221,   222,   223,   224,   225,     0,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   239,   240,   241,   242,   243,   244,
     245,   246,     0,   247,     0,   248,     0,     0,   251,     0,
     253,   254,   255,   256,   257,   258,     0,     0,   259,     0,
     261,  1908,     0,   263,   264,   265,     0,     0,   266,   267,
     268,   269,   270,   503,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   292,   293,   294,   295,   296,     0,
     297,   298,     0,   300,     0,   301,   302,   303,   304,   305,
     306,     0,   307,   308,     0,     0,   309,   310,   311,     0,
       0,   312,   313,     0,   315,     0,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,  1447,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
       0,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   387,   388,   389,   390,   391,     0,   393,
     394,   395,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   505,   410,   411,   412,
       0,   413,   414,     0,   415,     0,   417,   418,   419,   420,
     421,     0,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,  1448,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,     0,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     749,     0,   550,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   750,   751,     0,
     752,   753,     0,   119,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   754,   755,   129,     0,   130,   131,   132,
     133,   756,     0,     0,     0,   136,   137,   138,   139,   140,
     141,     0,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,     0,   153,   154,   155,     0,     0,     0,
       0,     0,     0,     0,   157,   158,   159,   160,   161,   162,
     163,   757,   758,   166,     0,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   181,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   759,
     195,   196,   197,   198,   199,   760,  1244,   201,     0,   202,
     203,   761,   205,     0,   206,     0,   207,     0,     0,     0,
     210,   211,   762,     0,   214,     0,   215,     0,   763,   764,
     218,     0,   219,   220,   221,   222,   223,   224,   225,     0,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   765,   240,   241,   242,   243,   244,
     766,   767,     0,   768,     0,   248,     0,     0,   251,     0,
     253,   254,   255,   256,   257,   258,     0,     0,   259,     0,
     261,     0,     0,   263,   264,   265,     0,     0,   266,   267,
     268,   269,   270,   769,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   770,     0,   771,   293,   294,   295,   772,     0,
     297,   298,     0,   300,     0,   773,   302,   774,   304,   305,
     306,     0,   307,   308,  1245,     0,   309,   310,   311,     0,
       0,   312,   775,     0,   315,     0,   776,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     777,   331,   332,   778,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   779,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
       0,   367,   368,   369,   780,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   387,   781,   389,   390,   391,     0,   393,
     394,   782,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   783,   410,   784,   412,
       0,   413,   414,     0,   415,     0,   417,   418,   419,   420,
     421,     0,   785,   786,     0,     0,   424,   425,   787,   427,
     788,  1246,   429,   430,   789,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,  1136,   791,     0,   449,     0,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   792,   793,   794,   795,   796,
     797,   798,   799,   800,   801,   802,   474,   475,   476,   477,
     500,     0,   582,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       3,     4,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   127,   128,   129,     0,   130,   131,   132,
     133,   134,     0,     0,     0,   136,   137,   138,   139,   140,
     141,     0,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,     0,   153,   154,   155,     0,     0,     0,
       0,     0,     0,     0,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,     0,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   181,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,     0,   201,     0,   202,
     203,   204,   205,     0,   206,     0,   207,     0,     0,     0,
     210,   211,   502,     0,   214,     0,   215,     0,   216,   217,
     218,     0,   219,   220,   221,   222,   223,   224,   225,     0,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   239,   240,   241,   242,   243,   244,
     245,   246,     0,   247,     0,   248,     0,     0,   251,     0,
     253,   254,   255,   256,   257,   258,     0,     0,   259,     0,
     261,     0,     0,   263,   264,   265,     0,     0,   266,   267,
     268,   269,   270,   503,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   292,   293,   294,   295,   296,     0,
     297,   298,     0,   300,     0,   301,   302,   303,   304,   305,
     306,     0,   307,   308,     0,     0,   309,   310,   311,     0,
       0,   312,   313,     0,   315,     0,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
       0,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   387,   388,   389,   390,   391,     0,   393,
     394,   395,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   505,   410,   411,   412,
       0,   413,   414,     0,   415,     0,   417,   418,   419,   420,
     421,     0,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,     0,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     500,     0,   582,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   127,   128,   129,     0,   130,   131,   132,
     133,   134,     0,     0,     0,   136,   137,   138,   139,   140,
     141,     0,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,     0,   153,   154,   155,     0,     0,     0,
       0,     0,     0,     0,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,     0,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   181,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,     0,   201,     0,   202,
     203,   204,   205,     0,   206,     0,   207,     0,     0,     0,
     210,   211,   502,     0,   214,     0,   215,     0,   216,   217,
     218,     0,   219,   220,   221,   222,   223,   224,   225,     0,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   239,   240,   241,   242,   243,   244,
     245,   246,     0,   247,     0,   248,     0,     0,   251,     0,
     253,   254,   255,   256,   257,   258,     0,     0,   259,     0,
     261,     0,     0,   263,   264,   265,     0,     0,   266,   267,
     268,   269,   270,   503,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   292,   293,   294,   295,   296,     0,
     297,   298,     0,   300,     0,   301,   302,   303,   304,   305,
     306,     0,   307,   308,     0,   583,   309,   310,   311,     0,
       0,   312,   313,     0,   315,     0,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
       0,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   387,   388,   389,   390,   391,     0,   393,
     394,   395,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   505,   410,   411,   412,
       0,   413,   414,     0,   415,     0,   417,   418,   419,   420,
     421,     0,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,     0,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     500,     0,   582,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   127,   128,   129,     0,   130,   131,   132,
     133,   134,     0,     0,     0,   136,   137,   138,   139,   140,
     141,     0,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,     0,   153,   154,   155,     0,     0,     0,
       0,     0,     0,     0,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,     0,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   181,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,     0,   201,     0,   202,
     203,   204,   205,     0,   206,     0,   207,     0,     0,     0,
     210,   211,   502,     0,   214,     0,   215,     0,   216,   217,
     218,     0,   219,   220,   221,   222,   223,   626,   225,     0,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   239,   240,   241,   242,   243,   244,
     245,   246,     0,   247,     0,   248,     0,     0,   251,     0,
     253,   254,   255,   256,   257,   258,     0,     0,   259,     0,
     261,     0,     0,   263,   264,   265,     0,     0,   266,   267,
     268,   269,   270,   503,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   292,   293,   294,   295,   296,     0,
     297,   298,     0,   300,     0,   301,   302,   303,   304,   305,
     306,     0,   307,   308,     0,   583,   309,   310,   311,     0,
       0,   312,   313,     0,   315,     0,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
       0,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   387,   388,   389,   390,   391,     0,   393,
     394,   395,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   505,   410,   411,   412,
       0,   413,   414,     0,   415,     0,   417,   418,   419,   420,
     421,     0,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,     0,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     749,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       3,     4,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   750,   751,     0,
     752,   753,     0,   119,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   754,   755,   129,     0,   130,   131,   132,
     133,   756,     0,     0,     0,   136,   137,   138,   139,   140,
     141,     0,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,     0,   153,   154,   155,     0,     0,     0,
       0,     0,     0,     0,   157,   158,   159,   160,   161,   162,
     163,   757,   758,   166,     0,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   181,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   759,
     195,   196,   197,   198,   199,   760,     0,   201,     0,   202,
     203,   761,   205,     0,   206,     0,   207,     0,     0,     0,
     210,   211,   762,     0,   214,     0,   215,     0,   763,   764,
     218,     0,   219,   220,   221,   222,   223,   224,   225,     0,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   765,   240,   241,   242,   243,   244,
     766,   767,     0,   768,     0,   248,     0,     0,   251,     0,
     253,   254,   255,   256,   257,   258,     0,     0,   259,     0,
     261,     0,     0,   263,   264,   265,     0,     0,   266,   267,
     268,   269,   270,   769,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   770,     0,   771,   293,   294,   295,   772,     0,
     297,   298,     0,   300,     0,   773,   302,   774,   304,   305,
     306,     0,   307,   308,     0,     0,   309,   310,   311,     0,
       0,   312,   775,     0,   315,     0,   776,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     777,   331,   332,   778,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   779,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
       0,   367,   368,   369,   780,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   387,   781,   389,   390,   391,     0,   393,
     394,   782,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   783,   410,   784,   412,
       0,   413,   414,     0,   415,     0,   417,   418,   419,   420,
     421,     0,   785,   786,     0,     0,   424,   425,   787,   427,
     788,     0,   429,   430,   789,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,  1136,   791,     0,   449,     0,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   792,   793,   794,   795,   796,
     797,   798,   799,   800,   801,   802,   474,   475,   476,   477,
     500,     0,   582,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   127,   128,   129,     0,   130,   131,   132,
     133,   134,     0,     0,     0,   136,   137,   138,   139,   140,
     141,     0,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,     0,   153,   154,   155,     0,     0,     0,
       0,     0,     0,     0,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,     0,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   181,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,     0,   201,     0,   202,
     203,   204,   205,     0,   206,     0,   207,     0,     0,     0,
     210,   211,   502,     0,  1744,     0,   215,     0,   216,   217,
     218,     0,   219,   220,   221,   222,   223,   224,   225,     0,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   239,   240,   241,   242,   243,   244,
     245,   246,     0,   247,     0,   248,     0,     0,   251,     0,
     253,   254,   255,   256,   257,   258,     0,     0,   259,     0,
     261,     0,     0,   263,   264,  1745,     0,     0,   266,   267,
     268,   269,   270,   503,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   292,   293,   294,   295,   296,     0,
     297,   298,     0,   300,     0,   301,   302,   303,   304,   305,
     306,     0,   307,   308,     0,     0,   309,   310,   311,     0,
       0,   312,   313,     0,   315,     0,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
       0,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   387,   388,   389,   390,   391,     0,   393,
     394,   395,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   505,   410,   411,   412,
       0,   413,   414,  1746,   415,     0,   417,  1747,   419,  1748,
     421,     0,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,  1749,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,     0,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     500,  2719,     0,     0,     0,     0,  2720,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   127,   128,   129,     0,   130,   131,   132,
     133,   134,     0,     0,     0,   136,   137,   138,   139,   140,
     141,     0,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,     0,   153,   154,   155,     0,     0,     0,
       0,     0,     0,     0,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,     0,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   181,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,     0,   201,     0,   202,
     203,   204,   205,     0,   206,     0,   207,     0,     0,     0,
     210,   211,   502,     0,   214,     0,   215,     0,   216,   217,
     218,     0,   219,   220,   221,   222,   223,   224,   225,     0,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   239,   240,   241,   242,   243,   244,
     245,   246,     0,   247,     0,   248,     0,     0,   251,     0,
     253,   254,   255,   256,   257,   258,     0,     0,   259,     0,
     261,     0,     0,   263,   264,   265,     0,     0,   266,   267,
     268,   269,   270,   503,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   292,   293,   294,   295,   296,     0,
     297,   298,     0,   300,     0,   301,   302,   303,   304,   305,
     306,     0,   307,   308,     0,     0,   309,   310,   311,     0,
       0,   312,   313,     0,   315,     0,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
       0,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   387,   388,   389,   390,   391,     0,   393,
     394,   395,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   505,   410,   411,   412,
       0,   413,   414,     0,   415,     0,   417,   418,   419,   420,
     421,     0,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,     0,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     500,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,   501,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   127,   128,   129,     0,   130,   131,   132,
     133,   134,     0,     0,     0,   136,   137,   138,   139,   140,
     141,     0,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,     0,   153,   154,   155,     0,     0,     0,
       0,     0,     0,     0,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,     0,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   181,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,     0,   201,     0,   202,
     203,   204,   205,     0,   206,     0,   207,     0,     0,     0,
     210,   211,   502,     0,   214,     0,   215,     0,   216,   217,
     218,     0,   219,   220,   221,   222,   223,   224,   225,     0,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   239,   240,   241,   242,   243,   244,
     245,   246,     0,   247,     0,   248,     0,     0,   251,     0,
     253,   254,   255,   256,   257,   258,     0,     0,   259,     0,
     261,     0,     0,   263,   264,   265,     0,     0,   266,   267,
     268,   269,   270,   503,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   292,   293,   294,   295,   296,     0,
     297,   298,     0,   300,     0,   301,   302,   303,   304,   305,
     306,     0,   307,   308,     0,     0,   309,   310,   311,     0,
       0,   312,   313,     0,   315,     0,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   504,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
       0,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   387,   388,   389,   390,   391,     0,   393,
     394,   395,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   505,   410,   411,   412,
       0,   413,   414,     0,   415,     0,   417,   418,   419,   420,
     421,     0,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,     0,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     500,     0,   550,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   127,   128,   129,     0,   130,   131,   132,
     133,   134,     0,     0,     0,   136,   137,   138,   139,   140,
     141,     0,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,     0,   153,   154,   155,     0,     0,     0,
       0,     0,     0,     0,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,     0,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   181,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,     0,   201,     0,   202,
     203,   204,   205,     0,   206,     0,   207,     0,     0,     0,
     210,   211,   502,     0,   214,     0,   215,     0,   216,   217,
     218,     0,   219,   220,   221,   222,   223,   224,   225,     0,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   239,   240,   241,   242,   243,   244,
     245,   246,     0,   247,     0,   248,     0,     0,   251,     0,
     253,   254,   255,   256,   257,   258,     0,     0,   259,     0,
     261,     0,     0,   263,   264,   265,     0,     0,   266,   267,
     268,   269,   270,   503,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   292,   293,   294,   295,   296,     0,
     297,   298,     0,   300,     0,   301,   302,   303,   304,   305,
     306,     0,   307,   308,     0,     0,   309,   310,   311,     0,
       0,   312,   313,     0,   315,     0,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
       0,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   387,   388,   389,   390,   391,     0,   393,
     394,   395,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   505,   410,   411,   412,
       0,   413,   414,     0,   415,     0,   417,   418,   419,   420,
     421,     0,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,     0,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     500,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,   557,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   127,   128,   129,     0,   130,   131,   132,
     133,   134,     0,     0,     0,   136,   137,   138,   139,   140,
     141,     0,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,     0,   153,   154,   155,     0,     0,     0,
       0,     0,     0,     0,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,     0,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   181,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,     0,   201,     0,   202,
     203,   204,   205,     0,   206,     0,   207,     0,     0,     0,
     210,   211,   502,     0,   214,     0,   215,     0,   216,   217,
     218,     0,   219,   220,   221,   222,   223,   224,   225,     0,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   239,   240,   241,   242,   243,   244,
     245,   246,     0,   247,     0,   248,     0,     0,   251,     0,
     253,   254,   255,   256,   257,   258,     0,     0,   259,     0,
     261,     0,     0,   263,   264,   265,     0,     0,   266,   267,
     268,   269,   270,   503,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   292,   293,   294,   295,   296,     0,
     297,   298,     0,   300,     0,   301,   302,   303,   304,   305,
     306,     0,   307,   308,     0,     0,   309,   310,   311,     0,
       0,   312,   313,     0,   315,     0,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
       0,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   387,   388,   389,   390,   391,     0,   393,
     394,   395,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   505,   410,   411,   412,
       0,   413,   414,     0,   415,     0,   417,   418,   419,   420,
     421,     0,   558,   423,     0,     0,   559,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,     0,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     500,     0,   582,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   127,   128,   129,     0,   130,   131,   132,
     133,   134,     0,     0,     0,   136,   137,   138,   139,   140,
     141,     0,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,     0,   153,   154,   155,     0,     0,     0,
       0,     0,     0,     0,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,     0,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   181,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,     0,   201,     0,   202,
     203,   204,   205,     0,   206,     0,   207,     0,     0,     0,
     210,   211,   502,     0,   214,     0,   215,     0,   216,   217,
     218,     0,   219,   220,   221,   222,   223,   621,   225,     0,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   239,   240,   241,   242,   243,   244,
     245,   246,     0,   247,     0,   248,     0,     0,   251,     0,
     253,   254,   255,   256,   257,   258,     0,     0,   259,     0,
     261,     0,     0,   263,   264,   265,     0,     0,   266,   267,
     268,   269,   270,   503,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   292,   293,   294,   295,   296,     0,
     297,   298,     0,   300,     0,   301,   302,   303,   304,   305,
     306,     0,   307,   308,     0,     0,   309,   310,   311,     0,
       0,   312,   313,     0,   315,     0,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
       0,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   387,   388,   389,   390,   391,     0,   393,
     394,   395,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   505,   410,   411,   412,
       0,   413,   414,     0,   415,     0,   417,   418,   419,   420,
     421,     0,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,     0,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     500,     0,   582,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   127,   128,   129,     0,   130,   131,   132,
     133,   134,     0,     0,     0,   136,   137,   138,   139,   140,
     141,     0,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,     0,   153,   154,   155,     0,     0,     0,
       0,     0,     0,     0,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,     0,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   181,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,     0,   201,     0,   202,
     203,   204,   205,     0,   206,     0,   207,     0,     0,     0,
     210,   211,   502,     0,   214,     0,   215,     0,   216,   217,
     218,     0,   219,   220,   221,   222,   223,   624,   225,     0,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   239,   240,   241,   242,   243,   244,
     245,   246,     0,   247,     0,   248,     0,     0,   251,     0,
     253,   254,   255,   256,   257,   258,     0,     0,   259,     0,
     261,     0,     0,   263,   264,   265,     0,     0,   266,   267,
     268,   269,   270,   503,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   292,   293,   294,   295,   296,     0,
     297,   298,     0,   300,     0,   301,   302,   303,   304,   305,
     306,     0,   307,   308,     0,     0,   309,   310,   311,     0,
       0,   312,   313,     0,   315,     0,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
       0,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   387,   388,   389,   390,   391,     0,   393,
     394,   395,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   505,   410,   411,   412,
       0,   413,   414,     0,   415,     0,   417,   418,   419,   420,
     421,     0,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,     0,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     500,     0,   582,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   127,   128,   129,     0,   130,   131,   132,
     133,   134,     0,     0,     0,   136,   137,   138,   139,   140,
     141,     0,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,     0,   153,   154,   155,     0,     0,     0,
       0,     0,     0,     0,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,     0,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   181,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,     0,   201,     0,   202,
     203,   204,   205,     0,   206,     0,   207,     0,     0,     0,
     210,   211,   502,     0,   214,     0,   215,     0,   216,   217,
     218,     0,   219,   220,   221,   222,   223,   628,   225,     0,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   239,   240,   241,   242,   243,   244,
     245,   246,     0,   247,     0,   248,     0,     0,   251,     0,
     253,   254,   255,   256,   257,   258,     0,     0,   259,     0,
     261,     0,     0,   263,   264,   265,     0,     0,   266,   267,
     268,   269,   270,   503,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   292,   293,   294,   295,   296,     0,
     297,   298,     0,   300,     0,   301,   302,   303,   304,   305,
     306,     0,   307,   308,     0,     0,   309,   310,   311,     0,
       0,   312,   313,     0,   315,     0,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
       0,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   387,   388,   389,   390,   391,     0,   393,
     394,   395,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   505,   410,   411,   412,
       0,   413,   414,     0,   415,     0,   417,   418,   419,   420,
     421,     0,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,     0,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     500,     0,   582,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   127,   128,   129,     0,   130,   131,   132,
     133,   134,     0,     0,     0,   136,   137,   138,   139,   140,
     141,     0,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,     0,   153,   154,   155,     0,     0,     0,
       0,     0,     0,     0,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,     0,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   181,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,     0,   201,     0,   202,
     203,   204,   205,     0,   206,     0,   207,     0,     0,     0,
     210,   211,   502,     0,   214,     0,   215,     0,   216,   217,
     218,     0,   219,   220,   221,   222,   223,   224,   225,     0,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   239,   240,   241,   242,   243,   244,
     245,   246,     0,   247,     0,   248,     0,     0,   251,     0,
     253,   254,   255,   256,   257,   258,     0,     0,   259,     0,
     261,     0,     0,   263,   264,   265,     0,     0,   266,   267,
     268,   269,   270,   503,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   292,   293,   294,   295,   296,     0,
     297,   298,     0,   300,     0,   301,   302,   303,   304,   305,
     306,     0,   307,   308,     0,     0,   309,   310,   311,     0,
       0,   312,   313,     0,   315,     0,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
       0,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   387,   388,   389,   390,   391,     0,   393,
     394,   395,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   505,   410,   411,   412,
       0,   413,   414,     0,   415,     0,   417,   418,   419,   420,
     421,     0,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,     0,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     500,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,   658,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   127,   128,   129,     0,   130,   131,   132,
     133,   134,     0,     0,     0,   136,   137,   138,   139,   140,
     141,     0,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,     0,   153,   154,   155,     0,     0,     0,
       0,     0,     0,     0,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,     0,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   181,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,     0,   201,     0,   202,
     203,   204,   205,     0,   206,     0,   207,     0,     0,     0,
     210,   211,   502,     0,   214,     0,   215,     0,   216,   217,
     218,     0,   219,   220,   221,   222,   223,   224,   225,     0,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   239,   240,   241,   242,   243,   244,
     245,   246,     0,   247,     0,   248,     0,     0,   251,     0,
     253,   254,   255,   256,   257,   258,     0,     0,   259,     0,
     261,     0,     0,   263,   264,   265,     0,     0,   266,   267,
     268,   269,   270,   503,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   292,   293,   294,   295,   296,     0,
     297,   298,     0,   300,     0,   301,   302,   303,   304,   305,
     306,     0,   307,   308,     0,     0,   309,   310,   311,     0,
       0,   312,   313,     0,   315,     0,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
       0,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   387,   388,   389,   390,   391,     0,   393,
     394,   395,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   505,   410,   411,   412,
       0,   413,   414,     0,   415,     0,   417,   418,   419,   420,
     421,     0,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,     0,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     500,     0,   582,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   127,   128,   129,     0,   130,   131,   132,
     133,   134,     0,     0,     0,   136,   137,   138,   139,   140,
     141,     0,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,     0,   153,   154,   155,     0,     0,     0,
       0,     0,     0,     0,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,     0,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   181,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,     0,   201,     0,   202,
     203,   204,   205,     0,   206,     0,   207,     0,     0,     0,
     210,   211,   502,     0,   214,     0,   215,     0,   216,   217,
     218,     0,   219,   220,   221,   222,   223,  1158,   225,     0,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   239,   240,   241,   242,   243,   244,
     245,   246,     0,   247,     0,   248,     0,     0,   251,     0,
     253,   254,   255,   256,   257,   258,     0,     0,   259,     0,
     261,     0,     0,   263,   264,   265,     0,     0,   266,   267,
     268,   269,   270,   503,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   292,   293,   294,   295,   296,     0,
     297,   298,     0,   300,     0,   301,   302,   303,   304,   305,
     306,     0,   307,   308,     0,     0,   309,   310,   311,     0,
       0,   312,   313,     0,   315,     0,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
       0,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   387,   388,   389,   390,   391,     0,   393,
     394,   395,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   505,   410,   411,   412,
       0,   413,   414,     0,   415,     0,   417,   418,   419,   420,
     421,     0,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,     0,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     500,     0,   582,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   127,   128,   129,     0,   130,   131,   132,
     133,   134,     0,     0,     0,   136,   137,   138,   139,   140,
     141,     0,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,     0,   153,   154,   155,     0,     0,     0,
       0,     0,     0,     0,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,     0,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   181,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,     0,   201,     0,   202,
     203,   204,   205,     0,   206,     0,   207,     0,     0,     0,
     210,   211,   502,     0,   214,     0,   215,     0,   216,   217,
     218,     0,   219,   220,   221,   222,   223,  1160,   225,     0,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   239,   240,   241,   242,   243,   244,
     245,   246,     0,   247,     0,   248,     0,     0,   251,     0,
     253,   254,   255,   256,   257,   258,     0,     0,   259,     0,
     261,     0,     0,   263,   264,   265,     0,     0,   266,   267,
     268,   269,   270,   503,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   292,   293,   294,   295,   296,     0,
     297,   298,     0,   300,     0,   301,   302,   303,   304,   305,
     306,     0,   307,   308,     0,     0,   309,   310,   311,     0,
       0,   312,   313,     0,   315,     0,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
       0,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   387,   388,   389,   390,   391,     0,   393,
     394,   395,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   505,   410,   411,   412,
       0,   413,   414,     0,   415,     0,   417,   418,   419,   420,
     421,     0,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,     0,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     500,     0,   582,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   127,   128,   129,     0,   130,   131,   132,
     133,   134,     0,     0,     0,   136,   137,   138,   139,   140,
     141,     0,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,     0,   153,   154,   155,     0,     0,     0,
       0,     0,     0,     0,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,     0,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   181,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,     0,   201,     0,   202,
     203,   204,   205,     0,   206,     0,   207,     0,     0,     0,
     210,   211,   502,     0,   214,     0,   215,     0,   216,   217,
     218,     0,   219,   220,   221,   222,   223,  1574,   225,     0,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   239,   240,   241,   242,   243,   244,
     245,   246,     0,   247,     0,   248,     0,     0,   251,     0,
     253,   254,   255,   256,   257,   258,     0,     0,   259,     0,
     261,     0,     0,   263,   264,   265,     0,     0,   266,   267,
     268,   269,   270,   503,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   292,   293,   294,   295,   296,     0,
     297,   298,     0,   300,     0,   301,   302,   303,   304,   305,
     306,     0,   307,   308,     0,     0,   309,   310,   311,     0,
       0,   312,   313,     0,   315,     0,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
       0,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   387,   388,   389,   390,   391,     0,   393,
     394,   395,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   505,   410,   411,   412,
       0,   413,   414,     0,   415,     0,   417,   418,   419,   420,
     421,     0,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,     0,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     500,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,  2347,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   127,   128,   129,     0,   130,   131,   132,
     133,   134,     0,     0,     0,   136,   137,   138,   139,   140,
     141,     0,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,     0,   153,   154,   155,     0,     0,     0,
       0,     0,     0,     0,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,     0,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   181,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,     0,   201,     0,   202,
     203,   204,   205,     0,   206,     0,   207,     0,     0,     0,
     210,   211,   502,     0,   214,     0,   215,     0,   216,   217,
     218,     0,   219,   220,   221,   222,   223,   224,   225,     0,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   239,   240,   241,   242,   243,   244,
     245,   246,     0,   247,     0,   248,     0,     0,   251,     0,
     253,   254,   255,   256,   257,   258,     0,     0,   259,     0,
     261,     0,     0,   263,   264,   265,     0,     0,   266,   267,
     268,   269,   270,   503,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   292,   293,   294,   295,   296,     0,
     297,   298,     0,   300,     0,   301,   302,   303,   304,   305,
     306,     0,   307,   308,     0,     0,   309,   310,   311,     0,
       0,   312,   313,     0,   315,     0,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
       0,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   387,   388,   389,   390,   391,     0,   393,
     394,   395,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   505,   410,   411,   412,
       0,   413,   414,     0,   415,     0,   417,   418,   419,   420,
     421,     0,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,     0,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     500,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,  2361,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   127,   128,   129,     0,   130,   131,   132,
     133,   134,     0,     0,     0,   136,   137,   138,   139,   140,
     141,     0,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,     0,   153,   154,   155,     0,     0,     0,
       0,     0,     0,     0,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,     0,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   181,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,     0,   201,     0,   202,
     203,   204,   205,     0,   206,     0,   207,     0,     0,     0,
     210,   211,   502,     0,   214,     0,   215,     0,   216,   217,
     218,     0,   219,   220,   221,   222,   223,   224,   225,     0,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   239,   240,   241,   242,   243,   244,
     245,   246,     0,   247,     0,   248,     0,     0,   251,     0,
     253,   254,   255,   256,   257,   258,     0,     0,   259,     0,
     261,     0,     0,   263,   264,   265,     0,     0,   266,   267,
     268,   269,   270,   503,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   292,   293,   294,   295,   296,     0,
     297,   298,     0,   300,     0,   301,   302,   303,   304,   305,
     306,     0,   307,   308,     0,     0,   309,   310,   311,     0,
       0,   312,   313,     0,   315,     0,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
       0,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   387,   388,   389,   390,   391,     0,   393,
     394,   395,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   505,   410,   411,   412,
       0,   413,   414,     0,   415,     0,   417,   418,   419,   420,
     421,     0,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,     0,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     500,     0,   582,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   127,   128,   129,     0,   130,   131,   132,
     133,   134,     0,     0,     0,   136,   137,   138,   139,   140,
     141,     0,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,     0,   153,   154,   155,     0,     0,     0,
       0,     0,     0,     0,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,     0,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   181,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,     0,   201,     0,   202,
     203,   204,   205,     0,   206,     0,   207,     0,     0,     0,
     210,   211,   502,     0,   214,     0,   215,     0,   216,   217,
     218,     0,   219,   220,   221,   222,   223,  2517,   225,     0,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   239,   240,   241,   242,   243,   244,
     245,   246,     0,   247,     0,   248,     0,     0,   251,     0,
     253,   254,   255,   256,   257,   258,     0,     0,   259,     0,
     261,     0,     0,   263,   264,   265,     0,     0,   266,   267,
     268,   269,   270,   503,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   292,   293,   294,   295,   296,     0,
     297,   298,     0,   300,     0,   301,   302,   303,   304,   305,
     306,     0,   307,   308,     0,     0,   309,   310,   311,     0,
       0,   312,   313,     0,   315,     0,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
       0,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   387,   388,   389,   390,   391,     0,   393,
     394,   395,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   505,   410,   411,   412,
       0,   413,   414,     0,   415,     0,   417,   418,   419,   420,
     421,     0,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,     0,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     500,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   127,   128,   129,     0,   130,   131,   132,
     133,   134,     0,     0,     0,   136,   137,   138,   139,   140,
     141,     0,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,     0,   153,   154,   155,     0,     0,     0,
       0,     0,     0,     0,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,     0,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   181,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,     0,   201,     0,   202,
     203,   204,   205,     0,   206,     0,   207,     0,     0,     0,
     210,   211,   502,     0,   214,     0,   215,     0,   216,   217,
     218,     0,   219,   220,   221,   222,   223,   224,   225,     0,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   239,   240,   241,   242,   243,   244,
     245,   246,     0,   247,     0,   248,     0,     0,   251,     0,
     253,   254,   255,   256,   257,   258,     0,     0,   259,     0,
     261,     0,     0,   263,   264,   265,     0,     0,   266,   267,
     268,   269,   270,   503,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   292,   293,   294,   295,   296,     0,
     297,   298,     0,   300,     0,   301,   302,   303,   304,   305,
     306,     0,   307,   308,     0,     0,   309,   310,   311,     0,
       0,   312,   313,     0,   315,     0,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
       0,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   387,   388,   389,   390,   391,     0,   393,
     394,   395,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   505,   410,   411,   412,
       0,   413,   414,     0,   415,     0,   417,   418,   419,   420,
     421,     0,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,     0,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     500,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   127,   128,   129,     0,   130,   131,   132,
     133,   134,     0,     0,     0,   136,   137,   138,   139,   140,
     141,     0,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,     0,   153,   154,   155,     0,     0,     0,
       0,     0,     0,     0,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,     0,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   181,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,     0,   201,     0,   202,
     203,   204,   205,     0,   206,     0,   207,     0,     0,     0,
     210,   211,   502,     0,   569,     0,   215,     0,   216,   217,
     218,     0,   219,   220,   221,   222,   223,   224,   225,     0,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   239,   240,   241,   242,   243,   244,
     245,   246,     0,   247,     0,   248,     0,     0,   251,     0,
     253,   254,   255,   256,   257,   258,     0,     0,   259,     0,
     261,     0,     0,   263,   264,   570,     0,     0,   266,   267,
     268,   269,   270,   503,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   292,   293,   294,   295,   296,     0,
     297,   298,     0,   300,     0,   301,   302,   303,   304,   305,
     306,     0,   307,   308,     0,     0,   309,   310,   311,     0,
       0,   312,   313,     0,   315,     0,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
       0,   367,   368,   369,   370,   371,   372,   373,   374,   571,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   572,     0,   387,   388,   389,   390,   391,     0,   393,
     394,   395,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   505,   410,   411,   412,
       0,   413,   414,     0,   415,     0,   417,   418,   419,   420,
     421,     0,   573,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,     0,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     500,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   127,   128,   129,     0,   130,   131,   132,
     133,   134,     0,     0,     0,   136,   137,   138,   139,   140,
     141,     0,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,     0,   153,   154,   155,     0,     0,     0,
       0,     0,     0,     0,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,     0,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   181,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,     0,   201,     0,   202,
     203,   204,   205,     0,   206,     0,   207,     0,     0,     0,
     210,   211,   502,     0,   214,     0,   215,     0,   216,   217,
     218,     0,   219,   220,   221,   222,   223,   224,   225,     0,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   239,   240,   241,   242,   243,   244,
     245,   246,     0,   247,     0,   248,     0,     0,   251,     0,
     253,   254,   255,   256,   257,   258,     0,     0,   259,     0,
     261,     0,     0,   263,   264,   265,     0,     0,   266,   267,
     268,   269,   270,   503,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   292,   293,   294,   295,   296,     0,
     297,   298,     0,   300,     0,   301,   302,   303,   304,   305,
     306,     0,   307,   308,     0,     0,   309,   310,   311,     0,
       0,   312,   313,     0,   315,     0,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   592,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
       0,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   387,   388,   389,   390,   391,     0,   393,
     394,   395,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   505,   410,   411,   412,
       0,   413,   414,     0,   415,     0,   417,   418,   419,   420,
     421,     0,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,     0,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     500,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   127,   128,   129,     0,   130,   131,   132,
     133,   134,     0,     0,     0,   136,   137,   138,   139,   140,
     141,     0,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,     0,   153,   154,   155,     0,     0,     0,
       0,     0,     0,     0,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,     0,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   181,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,     0,   201,     0,   202,
     203,   204,   205,     0,   206,     0,   207,     0,     0,     0,
     210,   211,   502,     0,   214,     0,   215,     0,   216,   217,
     218,     0,   219,   220,   221,   222,   223,   646,   225,     0,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   239,   240,   241,   242,   243,   244,
     245,   246,     0,   247,     0,   248,     0,     0,   251,     0,
     253,   254,   255,   256,   257,   258,     0,     0,   259,     0,
     261,     0,     0,   263,   264,   265,     0,     0,   266,   267,
     268,   269,   270,   503,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   292,   293,   294,   295,   296,     0,
     297,   298,     0,   300,     0,   301,   302,   303,   304,   305,
     306,     0,   307,   308,     0,     0,   309,   310,   311,     0,
       0,   312,   313,     0,   315,     0,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
       0,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   387,   388,   389,   390,   391,     0,   393,
     394,   395,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   505,   410,   411,   412,
       0,   413,   414,     0,   415,     0,   417,   418,   419,   420,
     421,     0,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,     0,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     500,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   127,   128,   129,     0,   130,   131,   132,
     133,   134,     0,     0,     0,   136,   137,   138,   139,   140,
     141,     0,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,     0,   153,   154,   155,     0,     0,     0,
       0,     0,     0,     0,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,     0,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   181,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,     0,   201,     0,   202,
     203,   204,   205,     0,   206,     0,   207,     0,     0,     0,
     210,   211,   502,     0,   214,     0,   215,     0,   216,   217,
     218,     0,   219,   220,   221,   222,   223,   736,   225,     0,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   239,   240,   241,   242,   243,   244,
     245,   246,     0,   247,     0,   248,     0,     0,   251,     0,
     253,   254,   255,   256,   257,   258,     0,     0,   259,     0,
     261,     0,     0,   263,   264,   265,     0,     0,   266,   267,
     268,   269,   270,   503,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   292,   293,   294,   295,   296,     0,
     297,   298,     0,   300,     0,   301,   302,   303,   304,   305,
     306,     0,   307,   308,     0,     0,   309,   310,   311,     0,
       0,   312,   313,     0,   315,     0,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
       0,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   387,   388,   389,   390,   391,     0,   393,
     394,   395,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   505,   410,   411,   412,
       0,   413,   414,     0,   415,     0,   417,   418,   419,   420,
     421,     0,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,     0,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     500,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   127,   128,   129,     0,   130,   131,   132,
     133,   134,     0,     0,     0,   136,   137,   138,   139,   140,
     141,     0,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,     0,   153,   154,   155,     0,     0,     0,
       0,     0,     0,     0,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,     0,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   181,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,     0,   201,     0,   202,
     203,   204,   205,     0,   206,     0,   207,     0,     0,     0,
     210,   211,   502,     0,   214,     0,   215,     0,   216,   217,
     218,     0,   219,   220,   221,   222,   223,   739,   225,     0,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   239,   240,   241,   242,   243,   244,
     245,   246,     0,   247,     0,   248,     0,     0,   251,     0,
     253,   254,   255,   256,   257,   258,     0,     0,   259,     0,
     261,     0,     0,   263,   264,   265,     0,     0,   266,   267,
     268,   269,   270,   503,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   292,   293,   294,   295,   296,     0,
     297,   298,     0,   300,     0,   301,   302,   303,   304,   305,
     306,     0,   307,   308,     0,     0,   309,   310,   311,     0,
       0,   312,   313,     0,   315,     0,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
       0,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   387,   388,   389,   390,   391,     0,   393,
     394,   395,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   505,   410,   411,   412,
       0,   413,   414,     0,   415,     0,   417,   418,   419,   420,
     421,     0,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,     0,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     500,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   127,   128,   129,     0,   130,   131,   132,
     133,   134,     0,     0,     0,   136,   137,   138,   139,   140,
     141,     0,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,     0,   153,   154,   155,     0,     0,     0,
       0,     0,     0,     0,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,     0,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   181,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,     0,   201,     0,   202,
     203,   204,   205,     0,   206,     0,   207,     0,     0,     0,
     210,   211,   502,     0,   214,     0,   215,     0,   216,   217,
     218,     0,   219,   220,   221,   222,   223,   742,   225,     0,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   239,   240,   241,   242,   243,   244,
     245,   246,     0,   247,     0,   248,     0,     0,   251,     0,
     253,   254,   255,   256,   257,   258,     0,     0,   259,     0,
     261,     0,     0,   263,   264,   265,     0,     0,   266,   267,
     268,   269,   270,   503,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   292,   293,   294,   295,   296,     0,
     297,   298,     0,   300,     0,   301,   302,   303,   304,   305,
     306,     0,   307,   308,     0,     0,   309,   310,   311,     0,
       0,   312,   313,     0,   315,     0,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
       0,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   387,   388,   389,   390,   391,     0,   393,
     394,   395,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   505,   410,   411,   412,
       0,   413,   414,     0,   415,     0,   417,   418,   419,   420,
     421,     0,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,     0,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     500,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   127,   128,   129,     0,   130,   131,   132,
     133,   134,     0,     0,     0,   136,   137,   138,   139,   140,
     141,     0,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,     0,   153,   154,   155,     0,     0,     0,
       0,     0,     0,     0,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,     0,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   181,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,     0,   201,     0,   202,
     203,   204,   205,     0,   206,     0,   207,     0,     0,     0,
     210,   211,   502,     0,   214,     0,   215,     0,   216,   217,
     218,     0,   219,   220,   221,   222,   223,   224,   225,     0,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   239,   240,   241,   242,   243,   244,
     245,   246,     0,   247,     0,   248,     0,     0,   251,     0,
     253,   254,   255,   256,   257,   258,     0,     0,   259,     0,
     261,     0,     0,   263,   264,   265,     0,     0,   266,   267,
     268,   269,   270,   503,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   292,   293,   294,   295,   296,     0,
     297,   298,     0,   300,     0,   301,   302,   303,   304,   305,
     306,     0,   307,   308,     0,     0,   309,   310,   311,     0,
       0,   312,   313,     0,   315,     0,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
       0,   367,   368,   369,   370,   371,   372,   373,   374,   571,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   387,   388,   389,   390,   391,     0,   393,
     394,   395,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   505,   410,   411,   412,
       0,   413,   414,     0,   415,     0,   417,   418,   419,   420,
     421,     0,   573,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,     0,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     500,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,  1396,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   127,   128,   129,     0,   130,   131,   132,
     133,   134,     0,     0,     0,   136,   137,   138,   139,   140,
     141,     0,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,     0,   153,   154,   155,     0,     0,     0,
       0,     0,     0,     0,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,     0,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   181,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,     0,   201,     0,   202,
     203,   204,   205,     0,   206,     0,   207,     0,     0,     0,
     210,   211,   502,     0,   214,     0,   215,     0,   216,   217,
     218,     0,   219,   220,   221,   222,   223,   224,   225,     0,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   239,   240,   241,   242,   243,   244,
     245,   246,     0,   247,     0,   248,     0,     0,   251,     0,
     253,   254,   255,   256,   257,   258,     0,     0,   259,     0,
     261,     0,     0,   263,   264,   265,     0,     0,   266,   267,
     268,   269,   270,   503,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   292,   293,   294,   295,   296,     0,
     297,   298,     0,   300,     0,   301,   302,   303,   304,   305,
     306,     0,   307,   308,     0,     0,   309,   310,   311,     0,
       0,   312,   313,     0,   315,     0,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
       0,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,     0,   388,   389,   390,   391,     0,   393,
     394,   395,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   505,   410,   411,   412,
       0,   413,   414,     0,   415,     0,   417,   418,   419,   420,
     421,     0,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,     0,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     500,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   127,   128,   129,     0,   130,   131,   132,
     133,   134,     0,     0,     0,   136,   137,   138,   139,   140,
     141,     0,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,     0,   153,   154,   155,     0,     0,     0,
       0,     0,     0,     0,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,     0,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   181,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,     0,   201,     0,   202,
     203,   204,   205,     0,   206,     0,   207,     0,     0,     0,
     210,   211,   502,     0,   214,     0,   215,     0,   216,   217,
     218,     0,   219,   220,   221,   222,   223,  1538,   225,     0,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   239,   240,   241,   242,   243,   244,
     245,   246,     0,   247,     0,   248,     0,     0,   251,     0,
     253,   254,   255,   256,   257,   258,     0,     0,   259,     0,
     261,     0,     0,   263,   264,   265,     0,     0,   266,   267,
     268,   269,   270,   503,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   292,   293,   294,   295,   296,     0,
     297,   298,     0,   300,     0,   301,   302,   303,   304,   305,
     306,     0,   307,   308,     0,     0,   309,   310,   311,     0,
       0,   312,   313,     0,   315,     0,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
       0,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   387,   388,   389,   390,   391,     0,   393,
     394,   395,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   505,   410,   411,   412,
       0,   413,   414,     0,   415,     0,   417,   418,   419,   420,
     421,     0,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,     0,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     500,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   127,   128,   129,     0,   130,   131,   132,
     133,   134,     0,     0,     0,   136,   137,   138,   139,   140,
     141,     0,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,     0,   153,   154,   155,     0,     0,     0,
       0,     0,     0,     0,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,     0,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   181,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,     0,   201,     0,   202,
     203,   204,   205,     0,   206,     0,   207,     0,     0,     0,
     210,   211,   502,     0,   214,     0,   215,     0,   216,   217,
     218,     0,   219,   220,   221,   222,   223,  1821,   225,     0,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   239,   240,   241,   242,   243,   244,
     245,   246,     0,   247,     0,   248,     0,     0,   251,     0,
     253,   254,   255,   256,   257,   258,     0,     0,   259,     0,
     261,     0,     0,   263,   264,   265,     0,     0,   266,   267,
     268,   269,   270,   503,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   292,   293,   294,   295,   296,     0,
     297,   298,     0,   300,     0,   301,   302,   303,   304,   305,
     306,     0,   307,   308,     0,     0,   309,   310,   311,     0,
       0,   312,   313,     0,   315,     0,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
       0,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   387,   388,   389,   390,   391,     0,   393,
     394,   395,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   505,   410,   411,   412,
       0,   413,   414,     0,   415,     0,   417,   418,   419,   420,
     421,     0,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,     0,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     500,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   127,   128,   129,     0,   130,   131,   132,
     133,   134,     0,     0,     0,   136,   137,   138,   139,   140,
     141,     0,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,     0,   153,   154,   155,     0,     0,     0,
       0,     0,     0,     0,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,     0,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   181,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,     0,   201,     0,   202,
     203,   204,   205,     0,   206,     0,   207,     0,     0,     0,
     210,   211,   502,     0,   214,     0,   215,     0,   216,   217,
     218,     0,   219,   220,   221,   222,   223,  1834,   225,     0,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   239,   240,   241,   242,   243,   244,
     245,   246,     0,   247,     0,   248,     0,     0,   251,     0,
     253,   254,   255,   256,   257,   258,     0,     0,   259,     0,
     261,     0,     0,   263,   264,   265,     0,     0,   266,   267,
     268,   269,   270,   503,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   292,   293,   294,   295,   296,     0,
     297,   298,     0,   300,     0,   301,   302,   303,   304,   305,
     306,     0,   307,   308,     0,     0,   309,   310,   311,     0,
       0,   312,   313,     0,   315,     0,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
       0,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   387,   388,   389,   390,   391,     0,   393,
     394,   395,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   505,   410,   411,   412,
       0,   413,   414,     0,   415,     0,   417,   418,   419,   420,
     421,     0,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,     0,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     500,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   127,   128,   129,     0,   130,   131,   132,
     133,   134,     0,     0,     0,   136,   137,   138,   139,   140,
     141,     0,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,     0,   153,   154,   155,     0,     0,     0,
       0,     0,     0,     0,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,     0,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   181,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,     0,   201,     0,   202,
     203,   204,   205,     0,   206,     0,   207,     0,     0,     0,
     210,   211,   502,     0,   214,     0,   215,     0,   216,   217,
     218,     0,   219,   220,   221,   222,   223,  1836,   225,     0,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   239,   240,   241,   242,   243,   244,
     245,   246,     0,   247,     0,   248,     0,     0,   251,     0,
     253,   254,   255,   256,   257,   258,     0,     0,   259,     0,
     261,     0,     0,   263,   264,   265,     0,     0,   266,   267,
     268,   269,   270,   503,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   292,   293,   294,   295,   296,     0,
     297,   298,     0,   300,     0,   301,   302,   303,   304,   305,
     306,     0,   307,   308,     0,     0,   309,   310,   311,     0,
       0,   312,   313,     0,   315,     0,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
       0,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   387,   388,   389,   390,   391,     0,   393,
     394,   395,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   505,   410,   411,   412,
       0,   413,   414,     0,   415,     0,   417,   418,   419,   420,
     421,     0,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,   429,   430,   431,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   447,   448,     0,   449,     0,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     667,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,  -668,     0,   105,   106,     0,
     107,   108,   109,   668,   111,   112,   113,     0,   669,   670,
     671,   672,     0,   119,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   673,   674,   129,     0,   130,   131,   132,
     133,     0,     0,   675,     0,   136,   137,   138,   139,   140,
     141,   676,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,   677,   153,   154,   155,     0,     0,     0,
     678,     0,     0,     0,   157,   158,   159,   160,   161,   162,
     163,   679,   680,   166,     0,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   681,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,     0,
     195,   196,   197,   198,   199,     0,     0,   201,     0,   202,
     203,   682,   205,     0,   206,     0,   207,   683,     0,   684,
     210,   211,  -668,   685,   214,     0,   215,     0,     0,     0,
     218,     0,   219,   220,   221,   222,   223,   224,   225,   687,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,   688,     0,   240,   241,   242,   243,   244,
     689,   690,     0,   691,     0,   248,   692,   693,   251,   694,
     253,   254,   255,   256,   257,   258,     0,     0,   259,   695,
     261,   696,     0,   263,   264,   265,     0,     0,   266,   267,
     268,   269,   270,   697,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   698,   699,   700,   293,   294,   295,     0,     0,
     297,   298,   701,   300,     0,     0,   302,   702,   304,   305,
     306,     0,   307,   308,     0,     0,   309,   310,   311,     0,
       0,   312,     0,   703,   315,   704,     0,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
       0,   331,   332,     0,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   705,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
     706,   367,   368,   369,   707,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   387,   708,   389,   390,   391,   709,   393,
     394,   710,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   711,   410,     0,   412,
       0,   413,   414,     0,   415,   712,   417,   418,   419,   420,
     421,     0,   713,   714,     0,     0,   424,   425,     0,   427,
       0,     0,   429,   430,   715,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,     0,   716,     0,   449,   717,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,   500,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   474,   475,   476,   477,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,     0,     0,     0,     0,     0,
       0,     0,   105,   106,     0,   107,   108,   109,     0,   111,
     112,   113,   114,   115,     0,   117,   118,     0,   119,   120,
     121,   122,   123,   124,     0,     0,   125,   126,   127,   128,
     129,     0,   130,   131,   132,   133,   134,     0,     0,     0,
     136,   137,   138,   139,   140,   141,     0,   143,   144,   145,
       0,   146,   147,   148,   149,   150,   151,     0,     0,   153,
     154,   155,     0,     0,     0,     0,     0,     0,     0,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,     0,
     167,     0,   168,   169,   170,   171,   172,   173,     0,   174,
     175,   176,   177,   178,     0,     0,   179,   180,   181,   182,
     183,     0,   184,   185,   186,     0,   187,   188,   189,     0,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,     0,   201,     0,   202,   203,   204,   205,     0,   206,
       0,   207,     0,     0,     0,   210,   211,   502,     0,   214,
       0,   215,     0,   216,   217,   218,     0,   219,   220,   221,
     222,   223,   224,   225,     0,   227,   228,   229,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,     0,   239,
     240,   241,   242,   243,   244,   245,   246,     0,   247,     0,
     248,     0,     0,   251,     0,   253,   254,   255,   256,   257,
     258,     0,     0,   259,     0,   261,     0,     0,   263,   264,
     265,     0,     0,   266,   267,   268,   269,   270,   503,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,     0,   292,
     293,   294,   295,   296,     0,   297,   298,     0,   300,     0,
     301,   302,   303,   304,   305,   306,     0,   307,   308,     0,
       0,   309,   310,   311,     0,     0,   312,   313,     0,   315,
       0,   317,   318,   319,   320,   321,   322,   323,     0,   325,
     326,   327,     0,   328,   329,   330,   331,   332,   333,   334,
     335,   336,     0,   337,   338,   339,   340,   341,   342,     0,
     343,     0,   345,   346,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,     0,   364,   365,     0,   367,   368,   369,   370,
       0,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,   386,     0,   387,   388,
     389,   390,   391,     0,   393,   394,   395,   396,     0,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   505,   410,   411,   412,     0,   413,   414,     0,   415,
       0,   417,   418,   419,   420,   421,     0,   422,   423,     0,
       0,   424,   425,   426,   427,   428,     0,   429,   430,   431,
     432,   433,   434,   435,   436,     0,     0,   437,   438,   439,
     440,   441,     0,     0,   442,   443,   444,   445,   446,   447,
     448,     0,   449,     0,   451,   452,   453,   454,   455,     0,
       0,   456,     0,     0,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   667,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,     0,     0,     0,     0,     0,
       0,     0,   105,   106,     0,   107,   108,   109,   668,   111,
     112,   113,     0,   669,   670,   671,   672,     0,   119,   120,
     121,   122,   123,   124,     0,     0,   125,   126,   673,   674,
     129,     0,   130,   131,   132,   133,     0,     0,   675,     0,
     136,   137,   138,   139,   140,   141,   676,   143,   144,   145,
       0,   146,   147,   148,   149,   150,   151,     0,   677,   153,
     154,   155,     0,     0,     0,   678,     0,     0,     0,   157,
     158,   159,   160,   161,   162,   163,   679,   680,   166,     0,
     167,     0,   168,   169,   170,   171,   172,   173,     0,   174,
     175,   176,   177,   178,     0,     0,   179,   180,   681,   182,
     183,     0,   184,   185,   186,     0,   187,   188,   189,     0,
     190,   191,   192,   193,     0,   195,   196,   197,   198,   199,
       0,     0,   201,     0,   202,   203,   682,   205,     0,   206,
       0,   207,   683,     0,   684,   210,   211,     0,   685,   214,
       0,   215,     0,     0,     0,   218,     0,   219,   220,   221,
     222,   223,   686,   225,   687,   227,   228,   229,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,   688,     0,
     240,   241,   242,   243,   244,   689,   690,     0,   691,     0,
     248,   692,   693,   251,   694,   253,   254,   255,   256,   257,
     258,     0,     0,   259,   695,   261,   696,     0,   263,   264,
     265,     0,     0,   266,   267,   268,   269,   270,   697,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   698,   699,   700,
     293,   294,   295,     0,     0,   297,   298,   701,   300,     0,
       0,   302,   702,   304,   305,   306,     0,   307,   308,     0,
       0,   309,   310,   311,     0,     0,   312,     0,   703,   315,
     704,     0,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,     0,   328,   329,     0,   331,   332,     0,   334,
     335,   336,     0,   337,   338,   339,   340,   341,   342,     0,
     343,   344,   345,   705,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,     0,   364,   365,   706,   367,   368,   369,   707,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,   386,     0,   387,   708,
     389,   390,   391,   709,   393,   394,   710,   396,     0,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   711,   410,     0,   412,     0,   413,   414,     0,   415,
     712,   417,   418,   419,   420,   421,     0,   713,   714,     0,
       0,   424,   425,     0,   427,     0,     0,   429,   430,   715,
     432,   433,   434,   435,   436,     0,     0,   437,   438,   439,
     440,   441,     0,     0,   442,   443,   444,   445,   446,     0,
     716,     0,   449,   717,   451,   452,   453,   454,   455,     0,
       0,   456,     0,     0,   457,   458,   459,   460,   461,   462,
     667,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   474,   475,   476,   477,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,   668,   111,   112,   113,     0,   669,   670,
     671,   672,     0,   119,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   673,   674,   129,     0,   130,   131,   132,
     133,     0,     0,   675,     0,   136,   137,   138,   139,   140,
     141,   676,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,   677,   153,   154,   155,     0,     0,     0,
     678,     0,     0,     0,   157,   158,   159,   160,   161,   162,
     163,   679,   680,   166,     0,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   681,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,     0,
     195,   196,   197,   198,   199,     0,     0,   201,     0,   202,
     203,   682,   205,     0,   206,     0,   207,   683,     0,   684,
     210,   211,     0,   685,   214,     0,   215,     0,     0,     0,
     218,     0,   219,   220,   221,   222,   223,   224,   225,   687,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,   688,     0,   240,   241,   242,   243,   244,
     689,   690,     0,   691,     0,   248,   692,   693,   251,   694,
     253,   254,   255,   256,   257,   258,     0,     0,   259,   695,
     261,   696,     0,   263,   264,   265,     0,     0,   266,   267,
     268,   269,   270,   697,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   698,   699,   700,   293,   294,   295,     0,     0,
     297,   298,   701,   300,     0,     0,   302,   702,   304,   305,
     306,     0,   307,   308,     0,     0,   309,   310,   311,     0,
       0,   312,     0,   703,   315,   704,     0,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
       0,   331,   332,     0,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   705,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
     706,   367,   368,   369,   707,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   387,   708,   389,   390,   391,   709,   393,
     394,   710,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   711,   410,     0,   412,
       0,   413,   414,     0,   415,   712,   417,   418,   419,   420,
     421,     0,   713,   714,     0,     0,   424,   425,     0,   427,
       0,     0,   429,   430,   715,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,     0,   716,     0,   449,   717,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,  2452,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   474,   475,   476,   477,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,     0,     0,     0,     0,     0,
       0,     0,   105,   106,     0,   107,   108,   109,  2453,   111,
     112,   113,     0,   669,  2454,   671,   672,     0,   119,   120,
     121,   122,   123,   124,     0,     0,   125,   126,   673,   674,
     129,     0,   130,   131,   132,   133,     0,     0,  2455,     0,
     136,   137,   138,   139,   140,   141,  2456,   143,   144,   145,
       0,   146,   147,   148,   149,   150,   151,     0,  2457,   153,
     154,   155,     0,     0,     0,  2458,     0,     0,     0,   157,
     158,   159,   160,   161,   162,   163,   679,   680,   166,     0,
     167,     0,   168,   169,   170,   171,   172,   173,     0,   174,
     175,   176,   177,   178,     0,     0,   179,   180,   681,   182,
     183,     0,   184,   185,   186,     0,   187,   188,   189,     0,
     190,   191,   192,   193,     0,   195,   196,   197,   198,   199,
       0,     0,   201,     0,   202,   203,   682,   205,     0,   206,
       0,   207,  2459,     0,  2460,   210,   211,  2461,  2462,   214,
       0,   215,     0,     0,     0,   218,     0,   219,   220,   221,
     222,   223,   224,   225,  2463,   227,   228,   229,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,  2464,     0,
     240,   241,   242,   243,   244,   689,   690,     0,   691,     0,
     248,  2465,  2466,   251,  2467,   253,   254,   255,   256,   257,
     258,     0,     0,   259,  2468,   261,  2469,     0,   263,   264,
     265,     0,     0,   266,   267,   268,   269,   270,  2662,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   698,  2471,   700,
     293,   294,   295,     0,     0,   297,   298,  2473,   300,     0,
       0,   302,   702,   304,   305,   306,     0,   307,   308,     0,
       0,   309,   310,   311,     0,     0,   312,     0,  2475,   315,
    2476,     0,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,     0,   328,   329,     0,   331,   332,     0,   334,
     335,   336,     0,   337,   338,   339,   340,   341,   342,     0,
     343,   344,   345,   705,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,     0,   364,   365,  2477,   367,   368,   369,     0,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,   386,     0,   387,     0,
     389,   390,   391,  2479,   393,   394,   710,   396,     0,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,  2663,   410,     0,   412,     0,   413,   414,     0,   415,
    2481,   417,   418,   419,   420,   421,     0,   713,   714,     0,
       0,   424,   425,     0,   427,     0,     0,   429,   430,  2482,
     432,   433,   434,   435,   436,     0,     0,   437,   438,   439,
     440,   441,     0,     0,   442,   443,   444,   445,   446,     0,
     716,     0,   449,  2483,   451,   452,   453,   454,   455,     0,
       0,   456,     0,     0,   457,   458,   459,   460,   461,   462,
     667,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   474,   475,   476,   477,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,   668,   111,   112,   113,     0,   669,   670,
     671,   672,     0,   119,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   673,   674,   129,     0,   130,   131,   132,
     133,     0,     0,   675,     0,   136,   137,   138,   139,   140,
     141,   676,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,   677,   153,   154,   155,     0,     0,     0,
     678,     0,     0,     0,   157,   158,   159,   160,   161,   162,
     163,   679,   680,   166,     0,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   681,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,     0,
     195,   196,   197,   198,   199,     0,     0,   201,     0,   202,
     203,   682,   205,     0,   206,     0,   207,   683,     0,   684,
     210,   211,     0,   685,   214,     0,   215,     0,     0,     0,
     218,     0,   219,   220,   221,   222,   223,   224,   225,   687,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,   688,     0,   240,   241,   242,   243,   244,
     689,   690,     0,   691,     0,   248,   692,   693,   251,   694,
     253,   254,   255,   256,   257,   258,     0,     0,   259,   695,
     261,   696,     0,   263,   264,   265,     0,     0,   266,   267,
     268,   269,   270,     0,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   698,   699,   700,   293,   294,   295,     0,     0,
     297,   298,   701,   300,     0,     0,   302,   702,   304,   305,
     306,     0,   307,   308,     0,     0,   309,   310,   311,     0,
       0,   312,     0,   703,   315,   704,     0,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
       0,   331,   332,     0,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   705,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
     706,   367,   368,   369,     0,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   387,     0,   389,   390,   391,   709,   393,
     394,   710,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,     0,   410,     0,   412,
       0,   413,   414,     0,   415,   712,   417,   418,   419,   420,
     421,     0,   713,   714,     0,     0,   424,   425,     0,   427,
       0,     0,   429,   430,   715,   432,   433,   434,   435,   436,
       0,     0,   437,   438,   439,   440,   441,     0,     0,   442,
     443,   444,   445,   446,     0,   716,     0,   449,   717,   451,
     452,   453,   454,   455,     0,     0,   456,     0,     0,   457,
     458,   459,   460,   461,   462,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   474,   475,   476,   477
};

static const yytype_int16 yycheck[] =
{
       6,   625,   632,   708,   611,     0,  1009,   529,     0,   807,
     538,    59,   886,   529,  1402,   495,    36,  1405,  1007,    16,
     640,    16,     0,     0,   887,   536,  1363,  1183,  1287,   737,
     591,   586,   740,   807,   889,   982,   987,   714,    20,    21,
    1670,  1752,   978,   654,     6,  1832,  1785,  1153,  1756,  1788,
     905,   531,  1153,  1153,  1153,     6,  1767,   984,   625,    31,
     627,  1049,   629,   918,  1649,  1650,  2183,   529,  1188,  1654,
    2212,  2183,  1776,   529,    61,   538,  2210,   537,    61,   815,
    2087,   532,    35,  2231,  1828,  1012,  1714,  2224,     0,    21,
    1876,  1877,  1878,   634,  2039,     9,     0,  1268,  1891,     0,
       5,  2094,   543,  1317,  1318,    52,     5,  1371,    75,   673,
     674,     5,  1697,  1698,  2526,     0,  1421,   608,    90,     5,
       4,   117,    60,     5,     5,     9,    60,  2514,   926,    42,
     608,  2580,    13,    14,   645,    60,   700,  1423,   119,     5,
       5,     5,  2529,     5,     5,    30,   139,    13,    14,    13,
      14,    13,    14,   529,     5,     5,     5,     5,     5,     9,
    1154,  1905,    13,    14,    13,    14,   124,  2616,     5,     5,
      42,     5,     9,     5,     5,     5,     5,     5,   172,   109,
    2602,    77,    77,   744,   189,    60,   708,    13,    14,   122,
      69,    95,    88,    88,    95,    80,     0,   874,   996,     4,
    1282,   999,  1000,  2666,     9,  1282,  2119,  2699,  2093,  2025,
      11,    11,    16,    11,    15,    15,  2492,    15,    29,     9,
     122,  2510,   171,    11,  2426,    36,    30,    15,  1972,  1973,
     285,   287,    36,    85,  2765,  1282,   273,  2797,   109,   147,
     293,   191,    43,    43,   172,   357,   708,    29,   293,   117,
    2699,   224,   708,    38,    36,    43,   171,    61,     3,     4,
       5,   378,   132,   122,     9,   163,    29,    70,   309,     3,
     834,   835,    29,   276,    75,    75,    80,   129,   137,   807,
    2866,   119,   309,    39,  1020,   244,   814,    75,    29,   168,
     995,  1027,    11,   224,   816,    36,   860,   270,  2685,    33,
      34,    11,    11,   163,   300,  2998,    15,   215,   210,    11,
     119,   110,   405,    15,  2736,  2101,   463,   358,   461,    13,
      14,   463,    38,   463,   885,    25,  1997,    32,   488,   494,
     499,    31,   708,    43,   120,   890,   501,  2897,   485,   270,
     120,   501,   485,   485,  2351,   485,  3039,   440,  2355,  2342,
     810,    56,   499,     0,   816,  2026,    75,   330,    61,   499,
     816,  2478,   110,  2150,   919,    75,    69,  1995,   228,   132,
     126,   269,   117,   369,  2085,   132,  2087,   305,  2827,  2521,
     383,  2151,   499,   287,  2796,   293,   287,   499,  2664,  2523,
     175,   946,   933,  2979,  2133,   204,  1282,   347,  2929,   270,
     928,   929,   439,  2147,   926,  2149,   379,   193,   211,   277,
     406,   349,   282,   193,  2863,   349,   977,  1291,  2003,  2004,
    2005,  2006,  2007,  2625,   349,  2010,  2011,  2012,  2013,  2014,
    2015,  2016,  2017,  2018,  2019,  2995,   170,   137,   172,   277,
     816,   320,  2644,   499,   499,   502,   350,  1054,   379,   350,
     503,   447,   304,   494,   382,  1714,  2341,  2273,   503,   175,
     319,   270,   443,   272,   457,   461,   439,   494,   417,  2239,
    2962,   216,   166,   995,   349,  2388,   406,  2940,   437,  2064,
    2065,  1563,  1564,   441,   975,  1562,  2898,  1792,  2910,   485,
     403,    95,   487,   238,   499,   487,  1443,   975,   949,   393,
     394,   942,   417,   499,  2793,   499,   439,  1793,   439,   487,
     487,  1499,  2899,  2962,  2258,  1779,  1563,   329,   538,  1748,
    1749,   417,   417,   529,  1154,   433,   419,  1530,  1787,  1523,
     497,   403,   538,   995,   501,   238,   499,   439,  2675,   995,
     499,   538,   537,  1163,  1758,   488,   358,    25,   165,  2666,
     344,   450,   499,    31,  2666,   434,   499,   461,   463,   411,
     461,   567,   568,   611,   546,   503,   548,   549,    77,   503,
     494,   464,   461,   488,   463,   386,   503,   501,   503,    88,
     485,   463,  2589,    50,   498,   591,   501,  2594,  2581,   571,
    2597,   291,   589,   580,   499,  1766,   500,   580,   502,   500,
     499,   502,   487,   485,   386,   600,   490,   491,   600,  2554,
    2397,  2404,  1600,   499,   441,  1176,   548,   499,   499,   995,
    1184,  1185,   600,   600,   630,   631,   632,   108,  1258,  1240,
    1366,   603,   497,   499,   499,   499,   501,   499,   499,   592,
    2351,   410,   342,   412,  2355,   386,   346,  2431,   499,   499,
     499,   499,   499,  2795,  2802,  2439,   461,    33,    34,   137,
    1182,  1183,   499,   499,  2801,   499,  1182,   499,   499,   499,
     499,   499,   499,   499,  1472,  1197,   376,  1563,  1564,  1565,
     485,  1197,  2386,   487,  1482,   490,   491,  1485,   600,   490,
     491,   492,   493,   494,   495,   495,   132,   495,   315,  1329,
     490,   491,   708,   151,   492,   493,   494,   495,    60,   176,
    1271,   396,  1273,     4,  1242,   600,  1277,   451,     9,    95,
    1182,  1183,   334,  2509,  2731,   192,  1182,  1183,  1239,  1290,
     197,  1272,   200,   537,   538,  1197,  1995,   441,   744,  1369,
     451,  1197,   272,   161,   444,   490,   491,   277,  1303,   251,
    1230,  1231,   348,  1314,   149,   497,    69,  1237,   370,   501,
      25,  2895,  2904,   422,  2392,   369,    31,   234,  2512,   250,
     455,  1312,  1313,   406,   244,   500,   580,   258,   503,  1242,
     376,  1241,  1233,   492,   493,   494,   495,  1585,   490,   491,
     492,   493,   494,   495,   406,   499,   600,   453,   328,  1321,
    1536,   807,   406,   198,   117,  1321,  1182,  1183,   814,   815,
     816,  1585,  1932,   291,  1677,   810,   365,   235,  1938,  1360,
    1675,  1197,  2956,  2940,  1760,   807,   832,  1368,  2940,  1370,
    1460,    77,   814,  2047,  2419,   151,   272,  1545,   499,   173,
    2627,   453,    88,   447,  1468,     5,   282,  2076,  2077,  2078,
    2079,     4,  1332,  1856,   499,   861,     9,   461,  1566,  1321,
    1568,   482,   117,  1571,   342,  1321,   886,  1741,   346,  2580,
     177,   410,   137,   412,  1441,   881,   882,   883,  2589,   885,
     886,   485,  3024,  2594,   256,   257,  2597,   501,  1495,  1496,
    1497,  1879,   362,  1523,   244,   499,    24,   410,   376,   412,
     132,  1468,    30,   909,  2060,  2616,    25,    25,    66,    67,
     892,   245,    31,    31,   381,   334,    13,    14,   270,   901,
    1487,   369,   928,   929,  2183,  1492,  1781,   159,   132,   221,
    1452,   238,   369,   915,   189,   161,  1452,  1864,     4,   287,
     166,   172,    25,     9,   926,  1321,   928,   929,    31,   244,
     497,    25,    80,   482,   501,   159,   962,    31,   406,   272,
     966,   967,   170,  2548,   277,  1916,   444,   437,   161,   406,
    1921,   977,   177,   960,   961,   206,   963,   960,   961,   503,
     963,  1542,   954,  2770,    25,   292,   492,   406,  2699,   995,
    1452,   222,   244,   369,   366,   367,  1452,   349,  1478,   447,
     334,   232,   410,  1483,   412,  1516,   810,   320,    29,   235,
     447,   499,   362,   461,  1020,   500,   680,   272,   137,   137,
    2731,  1027,     4,   336,   376,   500,   291,     9,   200,   499,
     406,   171,   334,   238,   453,  1557,   370,   485,   702,  1011,
     272,  1557,   235,  1049,   848,   277,   244,   147,   217,   500,
     282,   499,   503,   369,   137,    13,    14,  1585,   284,    80,
      56,   161,   499,   137,    13,    14,   166,   362,    89,   733,
    1598,   447,   406,   277,   499,   451,  1452,   342,   282,   161,
    1602,   346,   886,   482,   166,   461,  1602,   437,  2718,   500,
     406,   284,   503,   152,  1590,  1557,   137,   118,  1594,    96,
    1596,  1557,  1663,   410,   406,   412,  2736,  2213,   221,   485,
     362,   376,  2213,  2213,  2213,   215,  2827,    38,  2703,   453,
     244,   434,   353,   499,  1838,   342,  1840,  1835,   441,  1837,
     437,   447,   152,  2392,   500,   235,    57,   503,    13,    14,
    1602,  1702,   437,    13,    14,   461,  1602,  1754,  1154,   499,
     152,   453,  2863,   235,  2862,   500,   960,   961,   497,   963,
     499,  2164,   501,  2319,   362,  2039,    13,    14,   189,   485,
    1176,   152,   291,   291,  2163,   172,  1182,  1183,   499,   444,
     201,  1557,   846,   499,   284,   437,  2147,   108,  2149,  1963,
     362,  1197,   424,   293,  1662,    38,  1664,  1665,   370,   272,
     864,  2148,   284,   435,   499,   410,    84,   412,   291,   206,
    2840,  2162,   500,  2164,   501,   503,  2205,   291,   569,   570,
     424,   572,   465,   342,   342,   222,  1602,   346,   346,  3016,
     500,   435,   437,   503,   406,   232,  1242,   500,   362,   437,
     503,  2980,  2981,    13,    14,  1242,  1241,   499,    13,    14,
     291,  2962,  1258,   500,   175,  2963,   503,   376,   376,  1936,
    1937,   500,  2117,   346,   503,  1271,   453,  1273,   342,   266,
    1276,  1277,   346,  1268,  2982,   605,  1268,   607,   199,  1899,
    1286,   453,  1288,  1289,  1290,  1291,  1292,  1293,  1294,   500,
    1268,  1268,   503,   376,  3033,  2360,  1907,  2356,  2363,  2358,
    1282,   499,   376,   500,   450,   346,   503,   348,  1314,   500,
    1316,   500,   503,   437,   503,  1321,  1322,  1323,  1324,  1325,
    1326,  1327,  1328,  1329,   499,   444,   444,  1333,  1334,   250,
    3038,  1961,  1338,   433,   499,   376,  1342,   258,   316,  1345,
    1346,  1347,  1348,  1349,  1350,  1351,  1352,  1353,   500,   270,
    1356,   503,    13,    14,   152,    11,   353,  1363,   499,    15,
    1366,   444,   500,  1369,   499,   503,    37,    23,   499,     8,
     444,   392,    11,   152,   395,   499,    15,   287,    34,    35,
     301,   152,  1388,  1268,   500,  2183,   152,   503,   344,  1386,
     406,   187,   188,  1915,  1376,  2551,   499,   497,    38,  1915,
     500,   501,   500,  1409,    43,   503,   233,  2666,   499,     5,
     500,    50,     8,   503,  1420,  1421,   500,   967,    14,   503,
     147,  2758,   500,   500,     5,   503,   503,   348,   500,    25,
     497,   503,    88,    29,   161,  1963,    75,  1241,   500,   166,
     500,   503,  2445,   503,   500,   500,  1452,   503,   503,   370,
       5,  2398,  1458,  1915,  1460,   500,    13,    14,   503,  1915,
     256,   257,  1984,   500,  1268,   499,   503,     8,  1984,   390,
      11,   499,   177,  2034,    15,  1955,   166,    18,    19,    20,
    2002,     5,   500,     5,  2347,   503,  2002,   500,   215,   500,
     503,   499,   503,  1499,    35,   200,  1502,  1503,  2361,  1505,
     499,  2042,    13,    14,    13,    14,   145,  2029,   235,  1394,
      13,    14,   499,  2029,  2036,   300,   499,  1523,    13,    14,
    2036,     5,  1984,    13,    14,    13,    14,   499,  1984,    96,
    1536,  1335,   499,   238,    13,    14,  1542,   176,  2060,  1915,
    2002,   148,  2250,  2098,   499,  2933,  2002,  2935,  2704,    13,
      14,  1557,  2182,   192,  2184,    13,    14,   284,   197,    13,
      14,   499,    69,    13,    14,   499,   293,  2029,    75,   499,
     366,   367,   499,  2029,  2036,    13,    14,    13,    14,  1585,
    2036,    88,   357,   358,   369,  2126,   499,   292,   357,   358,
    1394,  2198,  1598,   369,  1600,   234,  1602,   499,  2060,   366,
     367,  1607,     5,  1585,  2060,   172,  1612,  1589,  1984,   499,
     117,   499,   119,   260,   261,   499,  1598,   357,   358,   357,
     358,   406,   928,   929,  3012,   499,  2002,     9,   499,   462,
     406,  1651,   298,   217,   503,   503,    99,   500,  2436,   206,
    2251,    38,   376,  1649,  1650,  1651,   166,   284,  1654,  1534,
     289,   166,   282,  2029,   233,   222,  1662,  1663,  1664,  1665,
    2036,  2183,   447,   499,   417,   232,  1672,  2183,   499,    88,
    1676,   447,   417,  1679,   503,    56,   461,    56,   219,   500,
     417,  2940,  1702,  2672,  2060,   461,   263,   417,   508,   417,
     152,  1697,  1698,   461,    95,   501,  1702,   204,   272,   266,
     485,   272,   499,  2214,    38,   410,   433,   412,   499,   485,
    1716,   499,    37,  1719,   499,  1721,     9,   415,   415,   497,
     287,  2183,   417,   499,   497,  2247,   417,  2183,   417,   434,
    1534,  2247,   437,   417,   457,  1741,   500,   499,     6,  1289,
    2448,  2449,   381,    11,   503,    11,  1752,    15,   289,   344,
     498,  1771,    20,    21,    22,    23,    24,   503,   505,    27,
     503,  1767,    30,    31,   508,   272,    34,    35,  2542,   415,
     277,  1766,   277,  2478,  1766,   499,   417,   499,   180,   162,
    1786,   171,   500,   499,   441,  2247,   353,    38,  1766,  1766,
    1752,  2247,   215,   503,   379,  1801,  1802,  2319,   224,   288,
     503,  1752,   224,   309,   500,  1767,   499,  2183,   309,   224,
     293,   272,    80,   320,  1820,   325,  1767,   285,   453,    87,
      88,    89,    90,    91,   499,   499,  2367,   461,   152,   336,
     152,    38,  1838,  1839,  1840,   272,   287,   500,   500,   497,
     482,  2382,   287,   406,   483,   500,   482,  1651,   504,   500,
     500,   490,   491,   492,   493,   494,   495,  2319,   272,  1409,
      38,    38,  1844,  2319,   171,   503,   498,   500,  2666,   500,
    2744,  2247,   500,  1879,   441,   500,   500,   533,   500,   500,
     177,  1766,   500,   500,   482,   501,   500,   500,   500,   500,
     500,   500,   171,   499,   417,   499,   499,   499,  1702,   155,
     458,   447,   458,   200,   503,   488,   484,  1889,   288,  1915,
     287,   439,   288,   288,   503,   243,  1720,   417,   272,  1925,
     152,   152,  1904,   499,   200,  2447,   152,   434,   279,   279,
     417,  2447,  1736,   498,   441,   417,   592,  2417,  2941,   417,
     417,   238,    38,  2319,   344,   486,   487,   488,  1752,   490,
     491,   492,   493,   494,   495,  1961,  2478,  1963,   500,   499,
     503,   500,  1766,  1767,   285,   461,    38,  1771,   287,   152,
     500,   498,   498,   152,   277,  1981,   143,   171,  1984,    11,
     166,  1963,   500,   500,  1990,  2447,  1968,  1993,  1970,   503,
    1996,  2447,  1974,  1975,   406,   292,  2002,  2003,  2004,  2005,
    2006,  2007,   500,   500,  2010,  2011,  2012,  2013,  2014,  2015,
    2016,  2017,  2018,  2019,  2542,   500,  2478,  2023,  2024,  2039,
     171,  2027,  2478,  2029,  2072,  2645,   499,   458,  2034,  2551,
    2036,   500,  2906,  2039,   297,   171,   503,   485,   180,   350,
     500,     8,  2048,   500,    11,  2051,    86,  2053,    15,   288,
    2070,    18,    19,    20,  2060,  2061,   499,   446,  2064,  2065,
     152,   503,   175,  2069,  2070,   362,   500,  2087,   428,   499,
     499,  2447,   500,   500,  1959,   500,    43,    38,    81,  2085,
     500,  2087,   503,    50,   441,   503,   499,   498,   171,  2551,
     500,    38,   499,  2099,   500,  2551,   500,   222,    38,  1649,
    1650,   500,  2478,  2109,  1654,   503,   500,   499,    75,   500,
      57,   499,   408,   410,   296,   412,   222,    57,   294,  2125,
      56,   499,   184,  2085,   488,  2087,   500,   500,   500,   461,
     117,   428,   202,    38,  2085,   224,  2087,   434,   499,    83,
     437,  2771,  2940,   190,  2666,   277,   277,  1697,  1698,   501,
    2666,    38,   501,   501,   501,  1959,   501,   501,   501,   501,
     501,   108,   501,   501,   501,   501,   501,   417,   108,   417,
     501,   501,  2178,   272,   501,  2551,  2182,  2183,  2184,   109,
     461,   501,  2704,   501,   501,   501,   501,   501,   501,   501,
     488,   501,   501,   501,   500,   499,   287,   499,    38,   171,
     499,  2183,   222,   460,  2666,   499,    88,   499,   503,   176,
    2666,   133,   500,  2735,   336,   499,  2738,    38,  2825,  2735,
     488,     8,  2738,   152,   492,   192,  2208,   495,    15,    75,
     197,    18,    19,    20,   124,  2039,   504,   152,   500,    38,
     500,  2247,  2704,   358,   358,   306,    38,   499,  2704,  2869,
     499,   327,   199,   500,  2878,   499,   499,   499,  2264,   199,
      75,   446,   503,   531,   532,   533,  2070,   234,   277,   499,
     248,   189,   441,  2735,   428,   499,  2738,   290,    69,  2735,
     548,  2085,  2738,  2087,    69,    56,   499,  2848,   500,  2850,
    2666,   499,   948,   503,    38,   441,   376,   488,   287,   567,
     568,   569,   570,   250,   572,  2785,   270,  2313,  2314,  2939,
     250,   258,  2318,  2319,    38,   583,   428,  2323,   258,   499,
    2326,  2327,   289,   270,   592,  2331,  2211,   290,  2704,   499,
     270,   290,   500,   360,   500,   603,   500,   500,   499,   202,
     500,   287,   287,     9,   343,  2351,   122,   615,   500,  2355,
    2235,   439,  2237,   357,   301,   500,   499,    24,    35,  2735,
       9,   301,  2738,   500,   600,  1466,  2381,  1833,  2165,  2123,
    2178,  2377,  2612,  2863,  2936,    87,  2220,    89,  2441,    91,
    2884,  2990,  2638,  2942,  2864,   653,   654,   655,   656,  2351,
    2983,  2951,  2374,  2355,   982,  2687,  1826,  1839,  2157,  2939,
    2351,   348,  2225,  2949,  2355,  2411,  2182,  2211,   348,  1823,
    2937,  1230,  1895,  2419,   381,  1961,  2542,  2208,  2940,  1182,
    1437,   920,  1786,   370,  2940,   970,  2837,   948,  2858,  2978,
     370,  2235,  2438,  2237,   969,  1409,  1801,  2103,  2919,  2852,
    2757,  2447,  1436,   390,  2373,  1767,  2087,   972,  2357,  2732,
     390,  2342,  2827,  2003,  2004,  2005,  2006,  2007,  2085,  2826,
    2010,  2011,  2012,  2013,  2014,  2015,  2016,  2017,  2018,  2019,
    2844,  1156,  2478,  2845,  1282,  1282,  2608,  1282,  2940,  1282,
    2922,  2966,  1361,  2923,  2940,  1677,  1787,  1273,  1608,  1717,
    1720,  1505,  2102,   568,  2379,  2380,  1755,  2377,  1900,  2819,
    1242,     8,   289,  1598,    11,  1386,  2124,   954,    15,    -1,
    1387,    18,    19,    20,  2064,  2065,   483,    -1,    -1,   486,
     487,   488,    -1,   490,   491,   492,   493,   494,   495,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2542,    -1,  2520,    -1,
      -1,    -1,  2548,    -1,    -1,  2551,    -1,  2351,  2554,    -1,
      -1,  2355,   820,   500,    -1,    -1,    -1,  2563,  2564,     8,
    2542,  2567,    11,    -1,  2940,    -1,    15,    -1,    -1,    18,
      19,    20,    -1,    -1,  2580,  2379,  2380,    -1,  1234,    -1,
    1236,    -1,    -1,  2589,    -1,    -1,    -1,    -1,  2594,    -1,
      -1,  2597,    -1,    -1,    -1,    -1,    -1,     8,  2604,  2605,
      11,    -1,    -1,    -1,    15,    -1,    -1,    18,    19,    20,
    2616,    -1,  2618,    -1,    -1,    -1,    -1,    -1,  2580,   887,
      -1,    -1,    -1,    -1,    35,  2607,    -1,  2589,    -1,  2580,
    2636,    -1,  2594,    -1,    -1,  2597,    -1,    -1,  2589,  2524,
      -1,    -1,    -1,  2594,    -1,    -1,  2597,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2616,    -1,    -1,    -1,    -1,    -1,
    2666,    -1,   930,    -1,    -1,  2616,    -1,    -1,    -1,    -1,
     529,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     948,   949,    -1,    -1,  2666,    -1,   954,   955,   956,    -1,
     197,    -1,    -1,  2699,    -1,    -1,    -1,  2703,  2704,   486,
     487,   488,    -1,   490,   491,   492,   493,   494,   495,    -1,
      -1,    -1,   219,   981,   982,    -1,    -1,    -1,    -1,    -1,
    2524,  2727,    -1,    -1,  2744,  2731,   994,    -1,    -1,  2735,
      -1,    -1,  2738,    -1,    -1,   529,    -1,  2699,  2744,    -1,
      -1,    -1,    -1,  1011,    -1,    -1,    -1,  1015,  2699,    -1,
      -1,    -1,  2758,    -1,    -1,  2761,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2771,    -1,    -1,    -1,  2731,
    2776,    -1,    -1,    -1,    -1,    -1,   488,    -1,    -1,    -1,
    2731,    -1,   289,    -1,    -1,  2589,    -1,    -1,  1444,    -1,
    2594,    -1,  2677,  2597,    -1,    -1,    -1,    -1,  1454,    -1,
    1456,    -1,    -1,  1459,    -1,    -1,    -1,    -1,   219,  1465,
       8,  1467,  2794,    11,    -1,  2700,    -1,    15,    -1,    -1,
      -1,  2827,    -1,  1479,    -1,    -1,    -1,    -1,  1484,    -1,
      -1,    -1,  1488,  1489,  1490,  1491,    -1,  1493,  1494,    -1,
     289,    -1,  2848,    -1,  2850,    43,  2852,    -1,     8,   708,
    2856,    11,    50,    -1,    -1,    15,    -1,  2863,    18,    19,
      20,    -1,    -1,    -1,    -1,  2827,    -1,    -1,    -1,  2419,
      -1,   583,    -1,  2677,    -1,    35,  2827,    75,   289,    -1,
    2886,  1149,    -1,     8,    -1,    -1,    11,    -1,    -1,  1157,
      15,    -1,    -1,    -1,    -1,    -1,  2700,    -1,  1166,     8,
    2906,  2863,    11,   615,    -1,    -1,    15,    -1,    -1,    18,
      19,    20,  2863,  2919,   708,  2800,    -1,    -1,    43,    -1,
      -1,    -1,    -1,    -1,    -1,    50,    35,  2731,    -1,    -1,
      -1,  1199,    52,  2939,  2940,    -1,    -1,    -1,    -1,    -1,
    2744,   653,   654,   655,   656,    -1,    -1,   529,    -1,    -1,
      75,    -1,    -1,    -1,    -1,    -1,  2962,   816,  2940,  2965,
    2966,    -1,  1230,  1231,    -1,  1233,  1234,    -1,  1236,  1237,
      -1,    -1,  1240,    -1,  2859,    -1,    -1,    97,   176,   486,
     487,   488,    -1,   490,   491,   492,   493,   494,   495,    -1,
      -1,    -1,  2998,    -1,   192,    -1,  2800,    -1,  2548,   197,
    2962,    -1,    -1,   123,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2962,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1287,
     145,   141,   816,    -1,    -1,   145,    -1,    -1,    -1,    -1,
    1298,    -1,    -1,  3039,    -1,    -1,   234,   486,   487,   488,
      -1,   490,   491,   492,   493,   494,   495,   167,    -1,    -1,
     170,   176,    -1,    -1,    -1,  2859,    -1,    -1,    -1,   219,
      -1,    -1,    -1,    -1,  1332,   185,    -1,   192,    -1,    -1,
    2955,    -1,   197,    -1,    -1,   486,   487,   488,    -1,   490,
     491,   492,   493,   494,   495,    -1,    -1,    -1,    -1,    -1,
      -1,   289,    -1,    -1,    -1,  1363,  1364,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   234,
     219,    -1,    -1,    -1,     0,    -1,    -1,  1385,    -1,  1387,
      -1,    -1,    -1,    -1,    -1,    -1,   708,    -1,  1396,   289,
    1398,    -1,    -1,    -1,    -1,    21,   995,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    31,    -1,    33,    34,    -1,
      -1,  2955,    -1,  2703,    -1,    -1,    -1,   277,    -1,    -1,
      -1,    -1,    -1,    49,   289,   285,  1434,    -1,    -1,    -1,
      -1,    -1,    58,    -1,    -1,  1443,  1444,    -1,    -1,    -1,
     289,    -1,    -1,   381,    70,    -1,  1454,  1455,  1456,  1457,
      -1,  1459,    -1,    -1,    -1,    81,    -1,  1465,    -1,  1467,
      -1,   995,    -1,    -1,    -1,    -1,    -1,    93,   328,    95,
    1478,  1479,    -1,    -1,    -1,  1483,  1484,    -1,   930,    -1,
    1488,  1489,  1490,  1491,    -1,  1493,  1494,   113,     8,    -1,
      -1,    11,    -1,    -1,   816,    15,    -1,    -1,    18,    19,
      20,   127,    -1,   955,    -1,  1513,  1514,  1515,    -1,    -1,
      -1,   137,    -1,    -1,    -1,    -1,   381,   143,     0,    -1,
      -1,    -1,    -1,  1919,  1532,   151,    -1,   153,   154,   981,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   167,   994,    -1,    -1,   483,    -1,    -1,    -1,    -1,
      -1,    -1,   490,   491,   492,   493,   494,   495,    -1,    -1,
      -1,    -1,     8,  1015,    -1,    11,    -1,    -1,    -1,    15,
     196,    -1,    18,    19,    20,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1182,  1183,   211,   486,   487,   488,    -1,
     490,   491,   492,   493,   494,   495,    -1,    -1,  1197,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   237,    -1,    95,    -1,    -1,    -1,    -1,   483,    -1,
      -1,    -1,    -1,    -1,    -1,   490,   491,   492,   493,   494,
     495,    -1,    -1,    -1,    -1,    -1,    -1,   486,   487,   488,
      -1,   490,   491,   492,   493,   494,   495,    -1,  1182,  1183,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1670,  1197,    -1,   147,    -1,    -1,    -1,  1677,
      -1,    -1,    -1,   995,    -1,    -1,    -1,    -1,    -1,   161,
      -1,    -1,    -1,    -1,   166,    -1,    -1,    -1,   314,   171,
      -1,   317,    -1,    -1,    -1,    -1,    -1,    -1,   180,   219,
      -1,    -1,   184,    -1,    -1,  1157,  1714,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     346,    -1,  1321,    -1,    -1,    -1,    -1,    -1,    -1,   355,
      -1,    -1,    -1,   215,    -1,    -1,    -1,    -1,  1746,    -1,
      -1,    -1,    -1,   369,  1752,    -1,    -1,  2143,    -1,    -1,
     376,    -1,    -1,   235,   380,    -1,     3,    -1,     5,  1767,
      -1,    -1,    -1,  1771,   390,    -1,  1774,    -1,  1776,   289,
      -1,    -1,    -1,   219,  2170,    -1,   402,    -1,    -1,    -1,
     406,    -1,    -1,    -1,    -1,    -1,    -1,  1321,  1240,  2185,
    2186,  2187,  2188,  2189,  2190,  2191,  2192,  2193,  2194,    -1,
      -1,    -1,   284,    -1,    -1,   287,    -1,    -1,    -1,    -1,
      -1,   293,    -1,    -1,    -1,    -1,   442,    -1,    -1,    -1,
    1828,   447,    -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,
      11,    -1,    -1,    -1,    15,   461,    -1,    18,    19,    20,
      -1,    -1,    -1,   289,    -1,   327,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1452,    35,    -1,    -1,    -1,    -1,   485,
    1182,  1183,    43,    -1,   111,   112,    -1,    -1,   350,    50,
      -1,    -1,    -1,   499,    -1,  1197,   502,    -1,    -1,    -1,
      -1,    -1,    -1,  1891,    -1,    -1,    -1,    -1,  1896,    -1,
      -1,    -1,    -1,    -1,    75,    -1,    -1,  1905,  1906,  1907,
    1908,    -1,    -1,    -1,    -1,    -1,    -1,  2303,    -1,    -1,
      -1,  1919,  1364,    -1,   111,   112,    -1,    -1,  1452,  1927,
      -1,    -1,    -1,    -1,   406,    -1,    -1,    -1,    -1,    -1,
      -1,  1939,    -1,  1385,    -1,  1387,    -1,    -1,    -1,    -1,
     187,   188,    -1,    -1,    -1,    -1,    -1,  1955,    -1,  1957,
      -1,   433,    -1,    -1,   111,   112,    -1,    -1,  1557,   441,
      -1,    -1,    -1,    -1,  1972,  1973,   486,   487,   488,    -1,
     490,   491,   492,   493,   494,   495,   458,    -1,   460,   461,
      -1,    -1,  1434,    -1,    -1,    -1,    -1,  1995,    -1,    -1,
     187,   188,    -1,    -1,    -1,   176,    -1,    -1,    -1,  1321,
      -1,    -1,    -1,  1602,    -1,   252,   253,   254,   255,   256,
     257,   192,    -1,   260,   261,   497,   197,    -1,   500,   501,
     502,    -1,  2418,  1557,    -1,    -1,    -1,    -1,    -1,    -1,
     187,   188,    -1,    -1,    -1,    38,    -1,    -1,   219,   220,
     486,   487,   488,    -1,   490,   491,   492,   493,   494,   495,
      -1,    -1,    -1,   234,    57,   252,   253,   254,   255,   256,
     257,  1513,  1514,   260,   261,    -1,    -1,    -1,  1602,    -1,
      -1,    -1,    -1,    -1,  2082,  2083,  2084,  2085,    -1,  2087,
    2088,    -1,    -1,    -1,    -1,  2093,  2094,    -1,    -1,    -1,
      -1,   272,    -1,    -1,   275,   252,   253,   254,   255,   256,
     257,    -1,    -1,   260,   261,   108,   109,    -1,   289,    -1,
      -1,   292,    -1,    -1,   117,  2123,    -1,    -1,    -1,   366,
     367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1452,    -1,    -1,  2141,    -1,  2143,    -1,    -1,    -1,  2147,
    2148,  2149,    -1,  2151,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   567,   568,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2170,    -1,  2172,    -1,    -1,    -1,    -1,   366,
     367,    -1,   175,    -1,    -1,    -1,    -1,  2185,  2186,  2187,
    2188,  2189,  2190,  2191,  2192,  2193,  2194,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   199,    -1,    -1,    -1,
     381,    -1,  2210,    -1,    -1,    -1,    -1,  2215,    -1,   366,
     367,    -1,    -1,    -1,   630,   631,    -1,  2225,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2239,   479,   480,    -1,  1557,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2251,    -1,    -1,    -1,   250,    -1,    -1,
    2258,  2647,    -1,    -1,    -1,   258,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   270,    -1,   272,
      -1,  2667,  2668,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1602,    -1,   479,   480,    -1,    -1,    -1,    -1,  2684,    -1,
      -1,    -1,    -1,    -1,  1746,  2303,     8,    -1,   301,    11,
      -1,  2309,   483,    15,    -1,   486,   487,   488,    -1,   490,
     491,   492,   493,   494,   495,    -1,  1915,    -1,    -1,    -1,
      -1,    -1,   479,   480,  2332,    -1,  2334,  2335,  2336,  2337,
      -1,    43,    -1,  2341,  2342,    -1,  2344,    -1,    50,  2347,
      -1,    -1,   499,  2351,    -1,   348,    -1,  2355,    -1,    -1,
      -1,    -1,    -1,  2361,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    75,  2760,    -1,    -1,   370,    -1,  2377,
      -1,    -1,    -1,  2381,    -1,    -1,    -1,    -1,  2386,    -1,
      -1,  1915,    -1,    -1,  2392,  1984,    -1,   390,    -1,   392,
    2398,    -1,   395,    -1,    -1,    -1,  2404,    -1,    -1,   815,
      -1,    -1,    -1,  2002,    -1,    -1,    -1,    -1,    -1,  2417,
    2418,    -1,    -1,    -1,    -1,    -1,   832,  2425,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2029,    -1,    -1,   145,  2442,    -1,    51,  2036,    53,    54,
      -1,    -1,    -1,    -1,  1896,   861,    -1,    -1,    -1,    -1,
    1984,    66,    67,    -1,  1906,  1907,  1908,    -1,    -1,    -1,
      -1,  2060,    -1,    -1,   176,   881,   882,   883,  2002,    -1,
     886,    -1,    -1,    -1,    -1,  1927,    -1,    -1,    -1,    -1,
     192,    -1,    -1,    -1,    -1,   197,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   909,    -1,  2029,   499,    -1,    -1,   114,
     115,    -1,  2036,    -1,  2512,  1957,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2523,    -1,    -1,    -1,    -1,
      -1,   136,   234,    -1,    -1,    -1,  2060,  2535,    -1,   144,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   962,    -1,    -1,   164,
     966,   967,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2571,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2580,  2581,    -1,    -1,  2584,   289,    -1,  2587,
      -1,  2589,    -1,    -1,  2183,    -1,  2594,    -1,    -1,  2597,
      -1,  2599,    -1,  1915,  2602,    -1,    -1,    -1,   213,   214,
      -1,    -1,    -1,   807,  1020,    -1,    -1,    -1,  2616,    -1,
     814,  1027,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2082,  2083,  2084,  1049,    -1,    -1,    -1,    -1,    -1,  2647,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2247,  2183,
     265,    -1,   267,    -1,    -1,    -1,    -1,    -1,    -1,  2667,
    2668,    -1,  1984,    -1,    -1,   280,    -1,    -1,    -1,   381,
    2678,    -1,  2680,    -1,    -1,    -1,  2684,    -1,    -1,    -1,
    2002,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2696,  2141,
      -1,  2699,    -1,    -1,    -1,    -1,    -1,   901,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2029,    -1,    -1,
    2718,    -1,    -1,  2247,  2036,    -1,   331,    -1,    -1,    -1,
    2319,    -1,   926,  2731,   928,   929,    -1,    -1,  2736,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2060,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2754,    -1,    -1,    -1,
    2758,    -1,  2760,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2769,    -1,  2215,    -1,    -1,    -1,    -1,    -1,   384,
      -1,   483,    -1,    -1,    -1,    -1,    -1,  2785,   490,   491,
     492,   493,   494,   495,    -1,  2319,    -1,    -1,    -1,    -1,
      -1,  2799,   996,    -1,    -1,   999,  1000,    -1,    -1,  2251,
     415,   416,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2827,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,  2836,    -1,
      11,    -1,  2840,   448,    15,    -1,  2844,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2447,    -1,
      -1,    -1,    -1,    -1,    -1,  2863,  2864,  2865,  2866,    -1,
    1276,  2183,    43,    -1,    -1,    -1,    -1,    -1,    -1,    50,
    1286,    -1,  1288,    -1,    -1,  1291,  1292,  1293,  1294,  2478,
      -1,    -1,  2334,  2335,  2336,  2337,    -1,  2895,    -1,    -1,
      -1,    -1,    -1,    -1,    75,    -1,    -1,    -1,    -1,    -1,
    1316,    -1,  2910,    -1,    -1,    -1,  1322,  1323,  1324,  1325,
    1326,  1327,  1328,  2447,  2922,    -1,    -1,  1333,  1334,    -1,
      -1,    -1,  1338,    -1,    -1,  2247,  1342,    -1,  2936,  1345,
    1346,  1347,  1348,  1349,  1350,  1351,  1352,  1353,    -1,    -1,
    1356,    -1,    -1,    -1,  2478,    -1,    -1,  1363,  2956,    -1,
    1366,    -1,  2551,    -1,  2962,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   145,    -1,    -1,    -1,    -1,    -1,
    2978,  2979,  1388,  2425,     0,    -1,  1180,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1191,    -1,  1193,
      -1,    -1,    -1,    -1,    -1,   176,    -1,  2319,  1202,    -1,
      -1,    -1,    -1,    -1,  1420,  1421,     0,    -1,    -1,    -1,
      -1,   192,    -1,    -1,    -1,  1219,   197,  2551,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1247,  1248,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   234,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2666,    -1,    95,
      -1,    -1,    -1,    -1,    -1,  1279,  1280,    -1,    -1,  1283,
    1284,    -1,    -1,  1499,    -1,    -1,  1502,  1503,    -1,  1505,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    95,    -1,    -1,    -1,  2704,    -1,    -1,   289,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1536,   147,    -1,    -1,    -1,  2447,    -1,    -1,    -1,    -1,
      -1,    -1,  2666,    -1,    -1,   161,  2735,    -1,    -1,  2738,
     166,    -1,    -1,    -1,    -1,   171,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   147,   180,    -1,  2478,    -1,   184,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   161,    -1,    -1,
    2704,    -1,   166,    -1,    -1,    -1,    -1,   171,    -1,    -1,
      -1,    -1,    -1,    -1,  1600,    -1,   180,    -1,    -1,   215,
     184,  1607,    -1,    -1,    -1,    -1,  1612,    -1,    -1,    -1,
     381,  2735,    -1,    -1,  2738,    -1,    -1,    -1,    -1,   235,
      -1,    -1,    -1,    -1,    -1,    -1,  1420,  1421,    -1,    -1,
      -1,   215,    -1,    -1,    -1,    -1,  2678,    -1,    -1,  2551,
      -1,    -1,    -1,    -1,    -1,  1651,    -1,    -1,    -1,    -1,
      -1,   235,    -1,    -1,  2696,    -1,  1662,    -1,  1664,  1665,
      -1,    -1,    -1,    -1,    -1,    -1,  1672,    -1,   284,    -1,
    1676,   287,    -1,  1679,    -1,    -1,    -1,   293,  1472,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1482,    -1,
     902,  1485,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     284,    -1,    -1,   287,    -1,    -1,    -1,    -1,    -1,   293,
    1716,   327,   483,  1719,    -1,  1721,    -1,    -1,    -1,   490,
     491,   492,   493,   494,   495,    -1,    -1,  2769,    -1,    -1,
      -1,   943,    -1,    -1,   350,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   327,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2940,    -1,    -1,  2666,    -1,    -1,  2799,    -1,    -1,
      -1,    -1,    -1,    -1,  1558,  1559,   350,     8,    -1,    -1,
      11,    -1,    -1,    -1,    15,    16,    17,    18,    19,    20,
    1786,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     406,  1585,  2704,    -1,    35,  1801,  1802,    -1,    -1,    -1,
      -1,    -1,    43,    -1,  1598,    -1,    -1,    -1,    -1,    50,
      -1,    -1,    -1,    -1,  1820,    -1,  2940,   433,    -1,    -1,
      -1,    -1,   406,  2735,    -1,   441,  2738,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    75,    -1,    -1,    -1,    -1,    -1,
      -1,  1053,   458,    -1,   460,   461,    -1,    -1,  1060,   433,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   441,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1879,   458,    -1,   460,   461,    -1,    -1,
      -1,   497,    -1,    -1,   500,   501,   502,    -1,    -1,    -1,
      -1,    -1,     3,    -1,    -1,    -1,    -1,     8,    -1,    -1,
      11,    -1,    -1,    -1,    15,    16,    17,    18,    19,    20,
      -1,    -1,    -1,   497,    -1,    -1,   500,   501,   502,  1925,
      -1,    -1,    -1,    -1,    35,    -1,    -1,    38,    -1,    -1,
      -1,    -1,    43,    -1,    -1,   176,    -1,    -1,    -1,    50,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   192,    -1,    -1,    -1,    -1,   197,    -1,    -1,    -1,
      -1,    -1,    -1,  1757,    75,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1981,    -1,    -1,   219,   220,
      -1,    -1,    -1,    -1,  1990,    -1,    -1,  1993,    -1,    -1,
    1996,    -1,    -1,   234,    -1,    -1,    -1,  1791,  1792,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2023,  2024,    -1,
      -1,  2027,    -1,    -1,    -1,    -1,    -1,    -1,  2940,    -1,
      -1,   272,    -1,  2039,   275,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2048,    -1,    -1,  2051,    -1,  2053,   289,    -1,
      -1,   292,    -1,    -1,     8,  2061,    -1,    11,    -1,    -1,
      -1,    15,  1274,  2069,  2070,   176,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1285,    -1,    -1,    -1,  1289,    -1,    -1,
      -1,   192,    -1,  1295,  1296,  1297,   197,     8,    -1,    43,
      11,    -1,  1304,  2099,    15,    -1,    50,    18,    19,    20,
      -1,    -1,    -1,  2109,    -1,    -1,    -1,    -1,   219,   220,
      -1,    -1,    -1,    -1,    35,    -1,    -1,    -1,    -1,  2125,
      -1,    75,    43,   234,    -1,    -1,    -1,    -1,    -1,    50,
      -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,    11,  1933,
     381,    -1,    15,    16,    17,    18,    19,    20,    -1,    -1,
    1362,    -1,    -1,    -1,    75,    -1,    -1,    -1,    -1,    -1,
      -1,   272,    35,    -1,   275,    38,    -1,    -1,    -1,     8,
      43,    -1,    11,    -1,    -1,    -1,    15,    50,   289,    -1,
      -1,   292,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   145,    -1,  1405,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    75,    -1,    43,    -1,    -1,  1419,    -1,    -1,
      -1,    50,  1424,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    75,    -1,   192,    -1,
      -1,    -1,   483,   197,    -1,   486,   487,   488,    -1,   490,
     491,   492,   493,   494,   495,   176,    -1,    -1,  2264,    -1,
      -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     381,   192,    -1,    -1,    -1,    -1,   197,    -1,    -1,    -1,
     234,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,   220,
      -1,    -1,    -1,   176,    -1,    -1,   145,  2313,  2314,    -1,
      -1,    -1,  2318,   234,    -1,    -1,    -1,  2323,    -1,   192,
    2326,  2327,    -1,    -1,   197,  2331,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   289,    -1,   176,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   219,   220,    -1,    -1,
      -1,   272,    -1,   192,   275,    -1,    -1,    -1,   197,    -1,
      25,   234,    -1,    -1,    -1,    -1,    31,    -1,   289,    -1,
      -1,  2377,   483,    38,    -1,   486,   487,   488,    -1,   490,
     491,   492,   493,   494,   495,    -1,    -1,    -1,    -1,  2183,
      -1,    -1,    57,    -1,    -1,   234,    -1,    -1,  1610,   272,
      -1,    -1,   275,    -1,    -1,  2411,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   289,  1629,    -1,   292,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   381,    -1,    -1,
      -1,    -1,  2438,    -1,    -1,  1647,    -1,  1649,  1650,    -1,
    1652,    -1,  1654,   108,    -1,    -1,  1658,    -1,    -1,  1661,
     289,    -1,    -1,    -1,  1666,    -1,     8,  1669,    -1,    11,
     381,    -1,    -1,    15,    16,    17,    18,    19,    20,  1681,
      -1,    -1,   137,  1685,  1686,  1687,  1688,  1689,  1690,  1691,
      -1,    -1,    -1,    35,    -1,  1697,  1698,    -1,  1700,  1701,
      -1,    43,    -1,    -1,    -1,    -1,    -1,    -1,    50,    -1,
    1712,    -1,    -1,  1715,    -1,    -1,    -1,    -1,   381,    -1,
      -1,  1723,  1724,  1725,  1726,  1727,  1728,  1729,  1730,  1731,
    1732,    -1,    -1,    75,    -1,    -1,    -1,    -1,    -1,   483,
      -1,    -1,    -1,    -1,   199,    -1,   490,   491,   492,   493,
     494,   495,   381,    -1,    -1,    -1,    -1,    -1,  2554,    -1,
      -1,    -1,  1764,    -1,    -1,    -1,    -1,  2563,  2564,    -1,
      -1,  2567,   483,    -1,    -1,   486,   487,   488,    -1,   490,
     491,   492,   493,   494,   495,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   250,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   258,    -1,    -1,    -1,    -1,  2604,  2605,
      -1,    -1,    -1,    -1,    -1,   270,    -1,    -1,    -1,    -1,
     483,    -1,  2618,   486,   487,   488,    -1,   490,   491,   492,
     493,   494,   495,    -1,   176,    -1,   291,   500,    -1,    -1,
    2636,    -1,    -1,    -1,    -1,    -1,   301,    -1,    -1,    -1,
     192,    -1,  2436,    -1,   483,   197,    -1,  2441,    -1,    -1,
      -1,   490,   491,   492,   493,   494,   495,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,   220,    -1,
      -1,    -1,  1884,  1885,  1886,    -1,    -1,   342,    -1,    -1,
      -1,   346,   234,   348,    -1,    -1,    -1,    -1,    -1,    -1,
    2484,  2485,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,    -1,
      -1,   376,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     272,  2727,    -1,   275,    -1,   390,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   289,  2744,    -1,
     292,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2758,    -1,    -1,  2761,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1980,    -1,
    2776,    -1,    -1,    -1,  1986,    -1,    -1,    -1,    -1,   444,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1999,  2000,  2001,
      -1,  2003,  2004,  2005,  2006,  2007,    -1,    -1,  2010,  2011,
    2012,  2013,  2014,  2015,  2016,  2017,  2018,  2019,  2020,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2040,   381,
      -1,  2043,    -1,  2045,    -1,    -1,    -1,  2049,  2050,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2852,    -1,    -1,    -1,
    2856,  2063,  2064,  2065,  2066,    -1,  2068,    -1,    -1,    -1,
      -1,  2655,  2656,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2666,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2886,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2919,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   483,  2144,    -1,   486,   487,   488,    -1,   490,   491,
     492,   493,   494,   495,    -1,    -1,    -1,    -1,   500,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2965,
    2966,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,
      -1,    15,    16,    17,    18,    19,    20,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    35,  2998,    -1,    -1,    -1,    -1,    -1,    -1,    43,
      -1,    -1,    -1,    -1,    -1,    -1,    50,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2238,     8,    -1,    -1,
      11,    75,    -1,  3039,    15,    16,    17,    18,    19,    20,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2265,    35,    -1,    -1,  2269,  2270,    -1,
    2272,    -1,    43,  2275,  2276,  2277,  2278,  2279,    -1,    50,
      -1,  2283,  2284,  2285,  2286,  2287,  2288,  2289,  2290,  2291,
    2292,  2293,  2294,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2305,    75,    -1,    -1,    -1,    -1,    -1,
    2312,    -1,    -1,  2315,    -1,  2317,    -1,    -1,    -1,  2321,
      -1,    -1,  2324,  2325,    -1,     8,  2328,  2329,    11,    -1,
      -1,    -1,    15,    16,    17,    18,    19,    20,    -1,    -1,
      -1,    -1,   176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    35,    -1,    -1,    -1,  2940,    -1,   192,    -1,
      43,     8,    -1,   197,    11,    -1,  2368,    50,    15,    16,
      17,    18,    19,    20,  2376,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,   220,  2389,    35,    -1,
      -1,    -1,    75,    -1,    -1,    -1,    43,    -1,    -1,    -1,
     234,     8,    -1,    50,    11,   176,    -1,    -1,    15,    -1,
      -1,    18,    19,    20,    -1,    -1,    -1,  2419,    -1,    -1,
      -1,   192,    -1,    -1,    -1,    -1,   197,    -1,    75,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    43,    -1,   272,    -1,
      -1,   275,    -1,    50,    -1,    -1,    -1,    -1,   219,   220,
      -1,    -1,    -1,    -1,    -1,   289,    -1,    -1,   292,    -1,
      -1,    -1,    -1,   234,    -1,    -1,    -1,    -1,    75,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   176,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   272,    -1,    -1,   275,    -1,    -1,    -1,    -1,   192,
      -1,    -1,    -1,    -1,   197,    -1,    -1,    -1,   289,    -1,
      -1,   292,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   176,
      -1,    -1,    -1,    -1,    -1,    -1,   219,   220,    -1,    -1,
      -1,    -1,  2544,    -1,    -1,   192,  2548,   381,    -1,    -1,
     197,   234,    25,    -1,    -1,  2557,  2558,  2559,    31,    -1,
    2562,    -1,    -1,  2565,  2566,    38,    -1,    -1,  2570,   176,
      -1,    -1,   219,   220,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    57,   192,    -1,   234,    -1,   272,
     197,    -1,   275,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   289,    -1,    -1,   292,
     381,    -1,   219,   220,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   272,    -1,   234,   275,    -1,
      -1,  2633,    -1,    -1,    -1,   108,    -1,  2639,    -1,    -1,
      -1,    -1,   289,    -1,    -1,   292,    -1,    -1,    -1,   483,
    2652,    -1,   486,   487,   488,    -1,   490,   491,   492,   493,
     494,   495,    -1,    -1,   137,   272,   500,    -1,   275,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   289,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   381,    -1,
    2702,  2703,    -1,    -1,    -1,    -1,  2708,  2709,  2710,    -1,
      -1,    -1,   483,    -1,    -1,   486,   487,   488,    -1,   490,
     491,   492,   493,   494,   495,    -1,   199,    -1,    -1,   500,
      -1,    -1,    -1,    -1,   381,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2752,  2753,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2767,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   381,  2777,    -1,   250,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   258,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   270,    -1,    -1,
     483,    -1,    -1,   486,   487,   488,    -1,   490,   491,   492,
     493,   494,   495,    -1,    -1,    -1,    -1,   500,   291,  2821,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   301,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   483,  2839,    -1,   486,
     487,   488,    -1,   490,   491,   492,   493,   494,   495,    -1,
      -1,    -1,    -1,   500,    -1,    -1,    -1,    -1,    -1,  2861,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   342,
      -1,    -1,    -1,   346,    -1,   348,   483,    -1,  2880,   486,
     487,   488,    -1,   490,   491,   492,   493,   494,   495,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   370,    -1,    -1,
      -1,    -1,    -1,   376,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   390,    -1,    -1,
      -1,    -1,  2924,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2953,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,   444,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
      -1,    -1,    -1,    -1,    37,    -1,    -1,    40,    41,  3001,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    76,    -1,    78,    79,    80,    81,    82,
      83,    84,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,   132,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,   170,    -1,   172,
     173,   174,   175,   176,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,   232,
     233,   234,    -1,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,   407,   408,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,    -1,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,    -1,    -1,    -1,    -1,    -1,    -1,   490,   491,   492,
      -1,    -1,    -1,    -1,   497,    -1,   499,   500,    -1,    -1,
      -1,   504,    -1,   506,   507,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    21,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    31,    32,    -1,    -1,    -1,    -1,    37,
      -1,    -1,    40,    41,    -1,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    53,    54,    -1,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    -1,    70,    71,    72,    73,    74,    -1,    76,    -1,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
      -1,    89,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,    -1,   120,   121,   122,   123,   124,   125,    -1,   127,
     128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,    -1,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,    -1,   162,   163,   164,   165,    -1,   167,
      -1,   169,   170,    -1,   172,   173,   174,   175,   176,   177,
      -1,   179,    -1,   181,   182,   183,    -1,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,    -1,
     198,   199,   200,   201,   202,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,   216,    -1,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,    -1,    -1,   231,   232,   233,   234,    -1,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,    -1,   285,   286,    -1,
      -1,   289,   290,   291,    -1,    -1,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,    -1,   311,   312,   313,   314,   315,   316,   317,
     318,   319,    -1,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,    -1,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,    -1,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,    -1,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,    -1,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,    -1,   415,   416,    -1,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,    -1,    -1,   435,   436,   437,
     438,   439,   440,    -1,   442,   443,   444,   445,   446,   447,
     448,    -1,   450,   451,   452,   453,   454,   455,   456,    -1,
      -1,   459,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,    -1,   485,    -1,    -1,
      -1,    -1,   490,   491,    -1,    -1,    -1,    -1,    -1,   497,
      -1,   499,   500,    -1,    -1,    -1,   504,    -1,   506,   507,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      -1,    -1,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    76,    -1,    78,    79,    80,    81,    82,
      83,    84,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,   170,    -1,   172,
     173,   174,   175,   176,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,   232,
     233,   234,    -1,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,    -1,   442,
     443,   444,   445,   446,   447,   448,    -1,   450,   451,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,    -1,   485,    -1,    -1,    -1,    -1,   490,   491,    -1,
      -1,    -1,    -1,    -1,   497,    -1,   499,    -1,    -1,    -1,
      -1,   504,    -1,   506,   507,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    21,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    31,    32,    -1,    -1,    -1,    -1,    37,
      -1,    -1,    40,    41,    -1,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    -1,    70,    71,    72,    73,    74,    -1,    76,    -1,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
      -1,    89,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,    -1,   120,   121,   122,   123,   124,   125,    -1,   127,
     128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,    -1,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,    -1,   162,   163,   164,   165,    -1,   167,
      -1,   169,   170,   171,   172,   173,   174,   175,   176,   177,
      -1,   179,    -1,   181,   182,   183,    -1,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,    -1,
     198,   199,   200,   201,   202,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,   216,    -1,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,    -1,   230,   231,   232,   233,   234,    -1,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,    -1,   285,   286,    -1,
      -1,   289,   290,   291,    -1,    -1,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,    -1,   311,   312,   313,   314,   315,   316,   317,
     318,   319,    -1,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,    -1,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,    -1,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,    -1,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,    -1,   404,   405,    -1,   407,
     408,   409,   410,   411,   412,   413,    -1,   415,   416,    -1,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,    -1,    -1,   435,   436,   437,
     438,   439,   440,    -1,   442,   443,   444,   445,   446,   447,
     448,    -1,   450,   451,   452,   453,   454,   455,   456,    -1,
      -1,   459,    -1,    -1,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,    -1,    -1,    -1,    -1,
      -1,    -1,   490,   491,    -1,    -1,    -1,    -1,    -1,   497,
      -1,   499,    -1,    -1,    -1,    -1,   504,    -1,   506,   507,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
      -1,    -1,    -1,    36,    37,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    76,    -1,    78,    79,    80,    81,    82,
      83,    84,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,   170,    -1,   172,
     173,   174,   175,   176,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,   232,
     233,   234,    -1,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,   407,   408,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,    -1,   442,
     443,   444,   445,   446,   447,   448,    -1,   450,   451,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,    -1,    -1,    -1,    -1,    -1,    -1,   490,   491,    -1,
      -1,    -1,    -1,    -1,   497,    -1,   499,    -1,    -1,    -1,
      -1,   504,    -1,   506,   507,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    21,    22,    23,    24,    25,    26,    27,
      28,    29,    30,    31,    32,    -1,    -1,    -1,    -1,    37,
      -1,    -1,    40,    41,    -1,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    53,    54,    -1,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    -1,    70,    71,    72,    73,    74,    -1,    76,    -1,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
      -1,    89,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,    -1,   120,   121,   122,   123,   124,   125,    -1,   127,
     128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,    -1,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,    -1,   162,   163,   164,   165,    -1,   167,
      -1,   169,   170,    -1,   172,   173,   174,   175,   176,   177,
      -1,   179,    -1,   181,   182,   183,    -1,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,    -1,
     198,   199,   200,   201,   202,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,   216,    -1,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,    -1,    -1,   231,   232,   233,   234,    -1,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,    -1,   285,   286,    -1,
      -1,   289,   290,   291,    -1,    -1,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,    -1,   311,   312,   313,   314,   315,   316,   317,
     318,   319,    -1,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,    -1,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,    -1,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,    -1,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,    -1,   404,   405,    -1,   407,
     408,   409,   410,   411,   412,   413,    -1,   415,   416,    -1,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,    -1,    -1,   435,   436,   437,
     438,   439,   440,    -1,   442,   443,   444,   445,   446,   447,
     448,    -1,   450,   451,   452,   453,   454,   455,   456,    -1,
      -1,   459,    -1,    -1,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,    -1,    -1,    -1,    -1,
      -1,    -1,   490,   491,   492,    -1,    -1,    -1,    -1,   497,
      -1,   499,    -1,    -1,    -1,    -1,   504,    -1,   506,   507,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
      -1,    -1,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    76,    -1,    78,    79,    80,    81,    82,
      83,    84,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,   170,    -1,   172,
     173,   174,   175,   176,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,   232,
     233,   234,    -1,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,   407,   408,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,    -1,   442,
     443,   444,   445,   446,   447,   448,    -1,   450,   451,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,    -1,    -1,    -1,    -1,    -1,    -1,   490,   491,   492,
      -1,    -1,    -1,    -1,   497,    -1,   499,    -1,    -1,    -1,
      -1,   504,    -1,   506,   507,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    21,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    31,    32,    -1,    -1,    -1,    -1,    37,
      -1,    -1,    40,    41,    -1,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    53,    54,    -1,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    -1,    70,    71,    72,    73,    74,    -1,    76,    -1,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
      -1,    89,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,    -1,   120,   121,   122,   123,   124,   125,    -1,   127,
     128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,    -1,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,    -1,   162,   163,   164,   165,    -1,   167,
      -1,   169,   170,    -1,   172,   173,   174,   175,   176,   177,
      -1,   179,    -1,   181,   182,   183,    -1,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,    -1,
     198,   199,   200,   201,   202,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,   216,    -1,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,    -1,    -1,   231,   232,   233,   234,    -1,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,    -1,   285,   286,    -1,
      -1,   289,   290,   291,    -1,    -1,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,    -1,   311,   312,   313,   314,   315,   316,   317,
     318,   319,    -1,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,    -1,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,    -1,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,    -1,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,    -1,   404,   405,    -1,   407,
     408,   409,   410,   411,   412,   413,    -1,   415,   416,    -1,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,    -1,    -1,   435,   436,   437,
     438,   439,   440,    -1,   442,   443,   444,   445,   446,   447,
     448,    -1,   450,   451,   452,   453,   454,   455,   456,    -1,
      -1,   459,    -1,    -1,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,    -1,    -1,    -1,    -1,
      -1,    -1,   490,   491,   492,    -1,    -1,    -1,    -1,   497,
      -1,   499,    -1,    -1,    -1,    -1,   504,    -1,   506,   507,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
      -1,    -1,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    76,    -1,    78,    79,    80,    81,    82,
      83,    84,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,   170,    -1,   172,
     173,   174,   175,   176,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,   232,
     233,   234,    -1,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,   407,   408,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,    -1,   442,
     443,   444,   445,   446,   447,   448,    -1,   450,   451,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,    -1,    -1,    -1,    -1,    -1,    -1,   490,   491,    -1,
      -1,    -1,    -1,    -1,   497,    -1,   499,    -1,    -1,    -1,
      -1,   504,    -1,   506,   507,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    21,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    31,    32,    -1,    -1,    -1,    -1,    37,
      -1,    -1,    40,    41,    -1,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    53,    54,    -1,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    -1,    70,    71,    72,    73,    74,    -1,    76,    -1,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
      -1,    89,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,    -1,   120,   121,   122,   123,   124,   125,    -1,   127,
     128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,    -1,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,    -1,   162,   163,   164,   165,    -1,   167,
      -1,   169,   170,    -1,   172,   173,   174,   175,   176,   177,
      -1,   179,    -1,   181,   182,   183,    -1,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,    -1,
     198,   199,   200,   201,   202,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,   216,    -1,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,    -1,    -1,   231,   232,   233,   234,    -1,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,    -1,   285,   286,    -1,
      -1,   289,   290,   291,    -1,    -1,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,    -1,   311,   312,   313,   314,   315,   316,   317,
     318,   319,    -1,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,    -1,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,    -1,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,    -1,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,    -1,   404,   405,    -1,   407,
     408,   409,   410,   411,   412,   413,    -1,   415,   416,    -1,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,    -1,    -1,   435,   436,   437,
     438,   439,   440,    -1,   442,   443,   444,   445,   446,   447,
     448,    -1,   450,   451,   452,   453,   454,   455,   456,    -1,
      -1,   459,    -1,    -1,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,    -1,    -1,    -1,    -1,
      -1,    -1,   490,   491,    -1,    -1,    -1,    -1,    -1,   497,
      -1,   499,   500,    -1,    -1,    -1,   504,    -1,   506,   507,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      -1,    -1,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    76,    -1,    78,    79,    80,    81,    82,
      83,    84,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,   170,    -1,   172,
     173,   174,   175,   176,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,   232,
     233,   234,    -1,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,   407,   408,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,    -1,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,    -1,    -1,    -1,    -1,    -1,    -1,   490,   491,    -1,
      -1,    -1,    -1,    -1,   497,    -1,   499,    -1,    -1,    -1,
      -1,   504,    -1,   506,   507,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    21,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    31,    32,    -1,    -1,    -1,    -1,    37,
      -1,    -1,    40,    41,    -1,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    53,    54,    -1,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    -1,    70,    71,    72,    73,    74,    -1,    76,    -1,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
      -1,    89,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,    -1,   120,   121,   122,   123,   124,   125,    -1,   127,
     128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,    -1,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,    -1,   162,   163,   164,   165,    -1,   167,
      -1,   169,   170,    -1,   172,   173,   174,   175,   176,   177,
      -1,   179,    -1,   181,   182,   183,    -1,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,    -1,
     198,   199,   200,   201,   202,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,   216,    -1,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,    -1,    -1,   231,   232,   233,   234,    -1,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,    -1,   285,   286,    -1,
      -1,   289,   290,   291,    -1,    -1,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,    -1,   311,   312,   313,   314,   315,   316,   317,
     318,   319,    -1,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,    -1,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,    -1,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,    -1,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,    -1,   404,   405,    -1,   407,
     408,   409,   410,   411,   412,   413,    -1,   415,   416,    -1,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,    -1,    -1,   435,   436,   437,
     438,   439,   440,    -1,   442,   443,   444,   445,   446,   447,
     448,    -1,   450,   451,   452,   453,   454,   455,   456,    -1,
      -1,   459,    -1,    -1,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,    -1,    -1,    -1,    -1,
      -1,    -1,   490,   491,    -1,    -1,    -1,    -1,    -1,   497,
      -1,   499,   500,    -1,    -1,    -1,   504,    -1,   506,   507,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      -1,    -1,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    76,    -1,    78,    79,    80,    81,    82,
      83,    84,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,   170,   171,   172,
     173,   174,   175,   176,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,   232,
     233,   234,    -1,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,   407,   408,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,    -1,   442,
     443,   444,   445,   446,   447,   448,    -1,   450,   451,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,    -1,    -1,    -1,    -1,    -1,    -1,   490,   491,    -1,
      -1,    -1,    -1,    -1,   497,    -1,   499,    -1,    -1,    -1,
      -1,   504,    -1,   506,   507,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    21,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    31,    32,    -1,    -1,    -1,    -1,    37,
      -1,    -1,    40,    41,    -1,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    53,    54,    -1,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    -1,    70,    71,    72,    73,    74,    -1,    76,    -1,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
      -1,    89,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,    -1,   120,   121,   122,   123,   124,   125,    -1,   127,
     128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,    -1,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,    -1,   162,   163,   164,   165,    -1,   167,
      -1,   169,   170,    -1,   172,   173,   174,   175,   176,   177,
      -1,   179,    -1,   181,   182,   183,    -1,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,    -1,
     198,   199,   200,   201,   202,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,   216,    -1,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,    -1,    -1,   231,   232,   233,   234,    -1,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,    -1,   285,   286,    -1,
      -1,   289,   290,   291,    -1,    -1,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,    -1,   311,   312,   313,   314,   315,   316,   317,
     318,   319,    -1,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,    -1,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,    -1,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,    -1,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,    -1,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,    -1,   415,   416,    -1,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,    -1,    -1,   435,   436,   437,
     438,   439,   440,    -1,   442,   443,   444,   445,   446,   447,
     448,    -1,   450,   451,   452,   453,   454,   455,   456,    -1,
      -1,   459,    -1,    -1,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,    -1,    -1,    -1,    -1,
      -1,    -1,   490,   491,    -1,    -1,    -1,    -1,    -1,   497,
      -1,   499,    -1,    -1,    -1,    -1,   504,    -1,   506,   507,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      -1,    -1,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    76,    -1,    78,    79,    80,    81,    82,
      83,    84,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,   170,    -1,   172,
     173,   174,   175,   176,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,   232,
     233,   234,    -1,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,   407,   408,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,    -1,   442,
     443,   444,   445,   446,   447,   448,    -1,   450,   451,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,    -1,    -1,    -1,    -1,    -1,    -1,   490,   491,    -1,
      -1,    -1,    -1,    -1,   497,    -1,   499,    -1,    -1,    -1,
      -1,   504,    -1,   506,   507,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    21,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    31,    32,    -1,    -1,    -1,    -1,    37,
      -1,    -1,    40,    41,    -1,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    53,    54,    -1,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    -1,    70,    71,    72,    73,    74,    -1,    76,    -1,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
      -1,    89,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,    -1,   120,   121,   122,   123,   124,   125,    -1,   127,
     128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,    -1,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,    -1,   162,   163,   164,   165,    -1,   167,
      -1,   169,   170,    -1,   172,   173,   174,   175,   176,   177,
      -1,   179,    -1,   181,   182,   183,    -1,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,    -1,
     198,   199,   200,   201,   202,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,   216,    -1,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,    -1,    -1,   231,   232,   233,   234,    -1,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,    -1,   285,   286,    -1,
      -1,   289,   290,   291,    -1,    -1,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,    -1,   311,   312,   313,   314,   315,   316,   317,
     318,   319,    -1,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,    -1,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,    -1,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,    -1,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,    -1,   404,   405,    -1,   407,
     408,   409,   410,   411,   412,   413,    -1,   415,   416,    -1,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,    -1,    -1,   435,   436,   437,
     438,   439,   440,    -1,   442,   443,   444,   445,   446,   447,
     448,    -1,   450,   451,   452,   453,   454,   455,   456,    -1,
      -1,   459,    -1,    -1,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,    -1,    -1,    -1,    -1,
      -1,    -1,   490,   491,    -1,    -1,    -1,    -1,    -1,   497,
      -1,   499,    -1,    -1,    -1,    -1,   504,    -1,   506,   507,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      -1,    -1,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    76,    -1,    78,    79,    80,    81,    82,
      83,    84,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,   170,    -1,   172,
     173,   174,   175,   176,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,   232,
     233,   234,    -1,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,   407,   408,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,    -1,   442,
     443,   444,   445,   446,   447,   448,    -1,   450,   451,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,    -1,    -1,    -1,    -1,    -1,    -1,   490,   491,    -1,
      -1,    -1,    -1,    -1,   497,    -1,   499,    -1,    -1,    -1,
      -1,   504,    -1,   506,   507,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    21,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    31,    32,    -1,    -1,    -1,    -1,    37,
      -1,    -1,    40,    41,    -1,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    53,    54,    -1,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    -1,    70,    71,    72,    73,    74,    -1,    76,    -1,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
      -1,    89,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,    -1,   120,   121,   122,   123,   124,   125,    -1,   127,
     128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,    -1,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,    -1,   162,   163,   164,   165,    -1,   167,
      -1,   169,   170,    -1,   172,   173,   174,   175,   176,   177,
      -1,   179,    -1,   181,   182,   183,    -1,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,    -1,
     198,   199,   200,   201,   202,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,   216,    -1,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,    -1,    -1,   231,   232,   233,   234,    -1,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,    -1,   285,   286,    -1,
      -1,   289,   290,   291,    -1,    -1,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,    -1,   311,   312,   313,   314,   315,   316,   317,
     318,   319,    -1,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,    -1,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,    -1,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,    -1,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,    -1,   404,   405,    -1,   407,
     408,   409,   410,   411,   412,   413,    -1,   415,   416,    -1,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,    -1,    -1,   435,   436,   437,
     438,   439,   440,    -1,   442,   443,   444,   445,   446,   447,
     448,    -1,   450,   451,   452,   453,   454,   455,   456,    -1,
      -1,   459,    -1,    -1,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,    -1,    -1,    -1,    -1,
      -1,    -1,   490,   491,    -1,    -1,    -1,    -1,    -1,   497,
      -1,   499,    -1,    -1,    -1,    -1,   504,    -1,   506,   507,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      -1,    -1,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    76,    -1,    78,    79,    80,    81,    82,
      83,    84,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,   170,    -1,   172,
     173,   174,   175,   176,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,   232,
     233,   234,    -1,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,   407,   408,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,    -1,   442,
     443,   444,   445,   446,   447,   448,    -1,   450,   451,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,    -1,    -1,    -1,    -1,    -1,    -1,   490,   491,    -1,
      -1,    -1,    -1,    -1,   497,    -1,   499,    -1,    -1,    -1,
      -1,   504,    -1,   506,   507,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    21,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    31,    32,    -1,    -1,    -1,    -1,    37,
      -1,    -1,    40,    41,    -1,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    53,    54,    -1,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    -1,    70,    71,    72,    73,    74,    -1,    76,    -1,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
      -1,    89,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,    -1,   120,   121,   122,   123,   124,   125,    -1,   127,
     128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,    -1,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,    -1,   162,   163,   164,   165,    -1,   167,
      -1,   169,   170,    -1,   172,   173,   174,   175,   176,   177,
      -1,   179,    -1,   181,   182,   183,    -1,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,    -1,
     198,   199,   200,   201,   202,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,   216,    -1,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,    -1,    -1,   231,   232,   233,   234,    -1,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,    -1,   285,   286,    -1,
      -1,   289,   290,   291,    -1,    -1,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,    -1,   311,   312,   313,   314,   315,   316,   317,
     318,   319,    -1,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,    -1,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,    -1,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,    -1,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,    -1,   404,   405,    -1,   407,
     408,   409,   410,   411,   412,   413,    -1,   415,   416,    -1,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,    -1,    -1,   435,   436,   437,
     438,   439,   440,    -1,   442,   443,   444,   445,   446,   447,
     448,    -1,   450,   451,   452,   453,   454,   455,   456,    -1,
      -1,   459,    -1,    -1,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,    -1,    -1,    -1,    -1,
      -1,    -1,   490,   491,    -1,    -1,    -1,    -1,    -1,   497,
      -1,   499,    -1,    -1,    -1,    -1,   504,    -1,   506,   507,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      -1,    -1,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    76,    -1,    78,    79,    80,    81,    82,
      83,    84,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,   170,    -1,   172,
     173,   174,   175,   176,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,   232,
     233,   234,    -1,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,   407,   408,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,    -1,   442,
     443,   444,   445,   446,   447,   448,    -1,   450,   451,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,    -1,    -1,    -1,    -1,    -1,    -1,   490,   491,    -1,
      -1,    -1,    -1,    -1,   497,    -1,   499,    -1,    -1,    -1,
      -1,   504,    -1,   506,   507,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    21,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    31,    32,    -1,    -1,    -1,    -1,    37,
      -1,    -1,    40,    41,    -1,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    53,    54,    -1,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    -1,    70,    71,    72,    73,    74,    -1,    76,    -1,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
      -1,    89,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,    -1,   120,   121,   122,   123,   124,   125,    -1,   127,
     128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,    -1,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,    -1,   162,   163,   164,   165,    -1,   167,
      -1,   169,   170,    -1,   172,   173,   174,   175,   176,   177,
      -1,   179,    -1,   181,   182,   183,    -1,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,    -1,
     198,   199,   200,   201,   202,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,   216,    -1,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,    -1,    -1,   231,   232,   233,   234,    -1,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,    -1,   285,   286,    -1,
      -1,   289,   290,   291,    -1,    -1,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,    -1,   311,   312,   313,   314,   315,   316,   317,
     318,   319,    -1,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,    -1,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,    -1,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,    -1,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,    -1,   404,   405,    -1,   407,
     408,   409,   410,   411,   412,   413,    -1,   415,   416,    -1,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,    -1,    -1,   435,   436,   437,
     438,   439,   440,    -1,   442,   443,   444,   445,   446,   447,
     448,    -1,   450,   451,   452,   453,   454,   455,   456,    -1,
      -1,   459,    -1,    -1,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,    -1,    -1,    -1,    -1,
      -1,    -1,   490,   491,    -1,    -1,    -1,    -1,    -1,   497,
      -1,   499,    -1,    -1,    -1,    -1,   504,    -1,   506,   507,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      -1,    -1,    -1,    -1,    37,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    76,    -1,    78,    79,    80,    81,    82,
      83,    84,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,   170,    -1,   172,
     173,   174,   175,   176,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,    -1,    -1,   221,   222,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,   232,
     233,   234,    -1,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,   277,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,   407,   408,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,    -1,   442,
     443,   444,   445,   446,   447,   448,    -1,   450,   451,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,    -1,    -1,    -1,    -1,    -1,    -1,   490,   491,    -1,
      -1,    -1,    -1,    -1,   497,    -1,   499,    -1,    -1,    -1,
      -1,   504,    -1,   506,   507,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    21,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    -1,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    53,    54,    -1,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    -1,    70,    71,    72,    73,    74,    -1,    76,    -1,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
      -1,    89,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,    -1,   120,   121,   122,   123,   124,   125,    -1,   127,
     128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,    -1,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,    -1,   162,   163,   164,   165,    -1,   167,
      -1,   169,   170,    -1,   172,   173,   174,   175,   176,   177,
      -1,   179,    -1,   181,   182,   183,    -1,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,    -1,
     198,   199,   200,   201,   202,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,   216,    -1,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,    -1,    -1,   231,   232,   233,   234,    -1,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,    -1,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,    -1,   285,   286,    -1,
      -1,   289,   290,   291,    -1,    -1,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,    -1,   311,   312,   313,   314,   315,   316,   317,
     318,   319,    -1,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,    -1,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,    -1,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,    -1,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,    -1,   404,   405,    -1,   407,
     408,   409,   410,   411,   412,   413,    -1,   415,   416,    -1,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,    -1,    -1,   435,   436,   437,
     438,   439,   440,    -1,   442,   443,   444,   445,   446,   447,
     448,    -1,   450,   451,   452,   453,   454,   455,   456,    -1,
      -1,   459,    -1,    -1,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   490,   491,    -1,    -1,     3,     4,     5,     6,
       7,   499,     9,    10,    -1,    -1,    -1,    -1,   506,   507,
      -1,    -1,    -1,    -1,    21,    22,    23,    24,    25,    26,
      27,    28,    -1,    30,    31,    32,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    40,    41,    -1,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    53,    54,    -1,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    -1,    70,    71,    72,    73,    74,    -1,    76,
      -1,    78,    79,    80,    81,    82,    83,    84,    85,    86,
      87,    -1,    89,    90,    91,    92,    93,    94,    -1,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
      -1,   118,    -1,   120,   121,   122,   123,   124,   125,    -1,
     127,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
      -1,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,    -1,   162,   163,   164,   165,    -1,
     167,    -1,   169,   170,    -1,   172,   173,   174,   175,   176,
     177,    -1,   179,    -1,   181,   182,   183,    -1,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
      -1,   198,   199,   200,   201,   202,   203,    -1,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,    -1,   216,
      -1,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,    -1,    -1,   231,   232,   233,   234,    -1,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,    -1,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,    -1,   285,   286,
      -1,    -1,   289,   290,   291,    -1,    -1,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,    -1,   311,   312,   313,   314,   315,   316,
     317,   318,   319,    -1,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,    -1,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,    -1,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,    -1,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,    -1,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,    -1,   404,   405,    -1,
     407,   408,   409,   410,   411,   412,   413,    -1,   415,   416,
      -1,    -1,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,   440,    -1,   442,   443,   444,   445,   446,
     447,   448,    -1,   450,   451,   452,   453,   454,   455,   456,
      -1,    -1,   459,    -1,    -1,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   490,   491,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   499,    -1,    -1,    -1,    -1,    -1,    -1,   506,
     507,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,
      22,    23,    24,    25,    26,    27,    28,    -1,    30,    31,
      32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,
      -1,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    53,    54,    -1,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    -1,    70,    71,
      72,    73,    74,    -1,    76,    -1,    78,    79,    80,    81,
      82,    83,    84,    85,    86,    87,    -1,    89,    90,    91,
      92,    93,    94,    -1,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,    -1,   118,    -1,   120,   121,
     122,   123,   124,   125,    -1,   127,   128,   129,   130,   131,
      -1,    -1,   134,   135,   136,   137,   138,    -1,   140,   141,
     142,    -1,   144,   145,   146,    -1,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,    -1,
     162,   163,   164,   165,    -1,   167,    -1,   169,   170,    -1,
     172,   173,   174,   175,   176,   177,    -1,   179,    -1,   181,
     182,   183,    -1,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,    -1,   198,   199,   200,   201,
     202,   203,    -1,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   214,    -1,   216,    -1,   218,    -1,   220,   221,
     222,   223,   224,   225,   226,   227,   228,    -1,    -1,   231,
     232,   233,   234,    -1,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
      -1,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,    -1,   285,   286,    -1,    -1,   289,   290,   291,
      -1,    -1,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,    -1,   311,
     312,   313,   314,   315,   316,   317,   318,   319,    -1,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,    -1,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,    -1,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,    -1,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,    -1,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,    -1,   404,   405,    -1,   407,   408,   409,   410,   411,
     412,   413,    -1,   415,   416,    -1,    -1,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,    -1,    -1,   435,   436,   437,   438,   439,   440,    -1,
     442,   443,   444,   445,   446,   447,   448,    -1,   450,   451,
     452,   453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   490,   491,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   499,    -1,    -1,
      -1,    -1,    -1,    -1,   506,   507,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    21,    22,    23,    24,    25,    26,
      27,    28,    -1,    30,    31,    32,    -1,    -1,    -1,    -1,
      37,    -1,    -1,    40,    41,    -1,    43,    44,    45,    46,
      47,    48,    49,    -1,    51,    52,    53,    54,    -1,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    -1,    70,    71,    72,    73,    74,    -1,    76,
      -1,    78,    79,    80,    81,    82,    83,    84,    85,    86,
      87,    -1,    89,    90,    91,    92,    93,    94,    -1,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   118,    -1,   120,   121,   122,   123,   124,   125,    -1,
     127,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,    -1,   140,   141,   142,    -1,   144,    -1,   146,
      -1,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,    -1,   162,   163,   164,   165,    -1,
     167,    -1,   169,   170,    -1,   172,   173,   174,   175,    -1,
     177,    -1,   179,    -1,   181,   182,   183,    -1,   185,   186,
     187,   188,   189,   190,   191,    -1,   193,   194,   195,   196,
      -1,   198,   199,   200,   201,   202,   203,    -1,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,    -1,   216,
      -1,   218,    -1,    -1,   221,   222,   223,   224,   225,   226,
     227,   228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
     277,   278,   279,   280,   281,   282,   283,    -1,   285,   286,
      -1,    -1,   289,   290,   291,    -1,    -1,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,    -1,   311,   312,   313,   314,   315,   316,
     317,   318,   319,    -1,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,    -1,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,    -1,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,    -1,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,    -1,   382,   383,   384,   385,    -1,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,    -1,   404,   405,    -1,
     407,   408,   409,   410,   411,   412,   413,    -1,   415,   416,
      -1,    -1,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,   440,    -1,   442,   443,   444,   445,   446,
     447,   448,    -1,   450,   451,   452,   453,   454,   455,   456,
      -1,    -1,   459,    -1,    -1,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   490,   491,     3,    -1,    -1,    -1,    -1,
     497,    -1,   499,    -1,    -1,    -1,    -1,   504,    -1,   506,
     507,    -1,    -1,    21,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,
      38,    -1,    40,    41,    -1,    43,    44,    45,    -1,    47,
      48,    49,    50,    51,    -1,    53,    54,    -1,    56,    57,
      58,    59,    60,    61,    -1,    -1,    64,    65,    66,    67,
      68,    -1,    70,    71,    72,    73,    74,    -1,    -1,    -1,
      78,    79,    80,    81,    82,    83,    -1,    85,    86,    87,
      -1,    89,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,    -1,   120,   121,   122,   123,   124,   125,    -1,   127,
     128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,    -1,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,    -1,   160,    -1,   162,   163,   164,   165,    -1,   167,
      -1,   169,    -1,    -1,   172,   173,   174,   175,    -1,   177,
      -1,   179,    -1,   181,   182,   183,    -1,   185,   186,   187,
     188,   189,   190,   191,    -1,   193,   194,   195,   196,    -1,
     198,   199,   200,   201,   202,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,   216,    -1,
     218,    -1,    -1,   221,   222,   223,   224,   225,   226,   227,
     228,    -1,    -1,   231,   232,   233,    -1,    -1,   236,   237,
     238,    -1,    -1,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,    -1,   273,   274,    -1,   276,    -1,
     278,   279,   280,   281,   282,   283,    -1,   285,   286,    -1,
      -1,   289,   290,   291,    -1,    -1,   294,   295,    -1,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,    -1,   311,   312,   313,   314,   315,   316,   317,
     318,   319,    -1,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,    -1,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,    -1,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,   380,    -1,   382,   383,   384,   385,    -1,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,    -1,   404,   405,    -1,   407,
     408,   409,   410,   411,   412,   413,    -1,   415,   416,    -1,
      -1,   419,   420,   421,   422,   423,    -1,   425,   426,   427,
     428,   429,   430,   431,   432,    -1,    -1,   435,   436,   437,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,   447,
     448,    -1,   450,    -1,   452,   453,   454,   455,   456,    -1,
      -1,   459,    -1,    -1,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,     3,    -1,     5,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   500,    21,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    -1,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    53,    54,    -1,    56,    57,
      58,    59,    60,    61,    -1,    63,    64,    65,    66,    67,
      68,    -1,    70,    71,    72,    73,    74,    -1,    76,    -1,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
      -1,    89,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,    -1,   120,   121,   122,   123,   124,   125,    -1,   127,
     128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,    -1,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,    -1,   160,    -1,   162,   163,   164,   165,    -1,   167,
      -1,   169,   170,    -1,   172,   173,   174,   175,   176,   177,
      -1,   179,    -1,   181,   182,   183,    -1,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,    -1,
     198,   199,   200,   201,   202,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,   216,    -1,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,    -1,   231,   232,   233,   234,    -1,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,    -1,   273,   274,   275,   276,    -1,
     278,   279,   280,   281,   282,   283,    -1,   285,   286,    -1,
     288,   289,   290,   291,    -1,    -1,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,    -1,   311,   312,   313,   314,   315,   316,   317,
     318,   319,    -1,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,    -1,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,    -1,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,    -1,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,    -1,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,    -1,   415,   416,    -1,
      -1,   419,   420,   421,   422,   423,    -1,   425,   426,   427,
     428,   429,   430,   431,   432,    -1,    -1,   435,   436,   437,
     438,   439,   440,    -1,   442,   443,   444,   445,   446,   447,
     448,    -1,   450,   451,   452,   453,   454,   455,   456,    -1,
      -1,   459,    -1,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,    -1,     3,   485,     5,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   499,    -1,    -1,    21,    22,    23,    24,    25,    26,
      27,    28,    -1,    30,    31,    32,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    40,    41,    -1,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    53,    54,    -1,    56,
      57,    58,    59,    60,    61,    -1,    63,    64,    65,    66,
      67,    68,    -1,    70,    71,    72,    73,    74,    -1,    76,
      -1,    78,    79,    80,    81,    82,    83,    84,    85,    86,
      87,    -1,    89,    90,    91,    92,    93,    94,    -1,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
      -1,   118,    -1,   120,   121,   122,   123,   124,   125,    -1,
     127,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
      -1,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,    -1,   160,    -1,   162,   163,   164,   165,    -1,
     167,    -1,   169,   170,    -1,   172,   173,   174,   175,   176,
     177,    -1,   179,    -1,   181,   182,   183,    -1,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
      -1,   198,   199,   200,   201,   202,   203,    -1,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,    -1,   216,
      -1,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,    -1,   231,   232,   233,   234,    -1,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,    -1,   273,   274,   275,   276,
      -1,   278,   279,   280,   281,   282,   283,    -1,   285,   286,
      -1,   288,   289,   290,   291,    -1,    -1,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,    -1,   311,   312,   313,   314,   315,   316,
     317,   318,   319,    -1,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,    -1,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,    -1,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,    -1,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,    -1,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,    -1,   404,   405,    -1,
     407,   408,   409,   410,   411,   412,   413,    -1,   415,   416,
      -1,    -1,   419,   420,   421,   422,   423,    -1,   425,   426,
     427,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,   440,    -1,   442,   443,   444,   445,   446,
     447,   448,    -1,   450,   451,   452,   453,   454,   455,   456,
      -1,    -1,   459,    -1,    -1,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   499,    -1,    21,    22,    23,    24,    25,    26,
      27,    28,    -1,    30,    31,    32,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    40,    41,    -1,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    53,    54,    -1,    56,
      57,    58,    59,    60,    61,    -1,    63,    64,    65,    66,
      67,    68,    -1,    70,    71,    72,    73,    74,    -1,    76,
      -1,    78,    79,    80,    81,    82,    83,    84,    85,    86,
      87,    -1,    89,    90,    91,    92,    93,    94,    -1,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
      -1,   118,    -1,   120,   121,   122,   123,   124,   125,    -1,
     127,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
      -1,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,    -1,   160,    -1,   162,   163,   164,   165,    -1,
     167,    -1,   169,   170,    -1,   172,   173,   174,   175,   176,
     177,    -1,   179,    -1,   181,   182,   183,    -1,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
      -1,   198,   199,   200,   201,   202,   203,    -1,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,    -1,   216,
      -1,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,    -1,    -1,   231,   232,   233,   234,    -1,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,    -1,   273,   274,   275,   276,
      -1,   278,   279,   280,   281,   282,   283,    -1,   285,   286,
      -1,    -1,   289,   290,   291,    -1,    -1,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,    -1,   311,   312,   313,   314,   315,   316,
     317,   318,   319,    -1,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,    -1,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,    -1,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,    -1,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,    -1,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,    -1,   404,   405,    -1,
     407,   408,   409,   410,   411,   412,   413,    -1,   415,   416,
      -1,    -1,   419,   420,   421,   422,   423,    -1,   425,   426,
     427,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,   440,    -1,   442,   443,   444,   445,   446,
     447,   448,    -1,   450,   451,   452,   453,   454,   455,   456,
      -1,    -1,   459,    -1,    -1,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   499,    -1,    21,    22,    23,    24,    25,    26,
      27,    28,    -1,    30,    31,    32,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    40,    41,    -1,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    53,    54,    -1,    56,
      57,    58,    59,    60,    61,    -1,    63,    64,    65,    66,
      67,    68,    -1,    70,    71,    72,    73,    74,    -1,    76,
      -1,    78,    79,    80,    81,    82,    83,    84,    85,    86,
      87,    -1,    89,    90,    91,    92,    93,    94,    -1,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
      -1,   118,    -1,   120,   121,   122,   123,   124,   125,    -1,
     127,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
      -1,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,    -1,   160,    -1,   162,   163,   164,   165,    -1,
     167,    -1,   169,   170,    -1,   172,   173,   174,   175,   176,
     177,    -1,   179,    -1,   181,   182,   183,    -1,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
      -1,   198,   199,   200,   201,   202,   203,    -1,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,    -1,   216,
      -1,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,    -1,    -1,   231,   232,   233,   234,    -1,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,    -1,   273,   274,   275,   276,
      -1,   278,   279,   280,   281,   282,   283,    -1,   285,   286,
      -1,    -1,   289,   290,   291,    -1,    -1,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,    -1,   311,   312,   313,   314,   315,   316,
     317,   318,   319,    -1,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,    -1,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,    -1,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,    -1,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,    -1,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,    -1,   404,   405,    -1,
     407,   408,   409,   410,   411,   412,   413,    -1,   415,   416,
      -1,    -1,   419,   420,   421,   422,   423,    -1,   425,   426,
     427,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,   440,    -1,   442,   443,   444,   445,   446,
     447,   448,    -1,   450,   451,   452,   453,   454,   455,   456,
      -1,    -1,   459,    -1,    -1,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,     3,     4,     5,    -1,
      -1,    -1,     9,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   499,    -1,    21,    22,    23,    24,    25,    26,
      27,    28,    -1,    30,    31,    32,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    40,    41,    -1,    43,    44,    45,    -1,
      47,    48,    49,    50,    51,    -1,    53,    54,    -1,    56,
      57,    58,    59,    60,    61,    -1,    -1,    64,    65,    66,
      67,    68,    -1,    70,    71,    72,    73,    74,    -1,    -1,
      -1,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    -1,    89,    90,    91,    92,    93,    94,    -1,    -1,
      97,    98,    99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
      -1,   118,    -1,   120,   121,   122,   123,   124,   125,    -1,
     127,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
      -1,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,    -1,   162,   163,   164,   165,    -1,
     167,    -1,   169,    -1,    -1,    -1,   173,   174,   175,    -1,
     177,    -1,   179,    -1,   181,   182,   183,    -1,   185,   186,
     187,   188,   189,   190,   191,    -1,   193,   194,   195,   196,
      -1,   198,   199,   200,   201,   202,   203,    -1,   205,    -1,
     207,   208,   209,   210,   211,   212,   213,   214,    -1,   216,
      -1,   218,    -1,    -1,   221,    -1,   223,   224,   225,   226,
     227,   228,    -1,    -1,   231,    -1,   233,    -1,    -1,   236,
     237,   238,    -1,    -1,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,    -1,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
      -1,   278,   279,   280,   281,   282,   283,    -1,   285,   286,
     287,    -1,   289,   290,   291,    -1,    -1,   294,   295,    -1,
     297,    -1,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,    -1,   311,   312,   313,   314,   315,   316,
     317,   318,   319,    -1,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,    -1,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,    -1,   351,   352,    -1,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,    -1,   370,   371,   372,   373,   374,    -1,   376,
     377,   378,   379,   380,    -1,   382,   383,   384,   385,    -1,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,    -1,   404,   405,    -1,
     407,    -1,   409,   410,   411,   412,   413,    -1,   415,   416,
      -1,    -1,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
     447,   448,    -1,   450,    -1,   452,   453,   454,   455,   456,
      -1,    -1,   459,    -1,    -1,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,     3,    -1,    -1,    -1,
      -1,    -1,    -1,   490,   491,   492,    -1,    -1,    -1,    -1,
      -1,    -1,   499,    -1,    21,    22,    23,    24,    25,    26,
      27,    28,    -1,    30,    31,    32,    33,    34,    -1,    -1,
      -1,    -1,    -1,    40,    41,    -1,    43,    44,    45,    -1,
      47,    48,    49,    50,    51,    -1,    53,    54,    -1,    56,
      57,    58,    59,    60,    61,    -1,    -1,    64,    65,    66,
      67,    68,    -1,    70,    71,    72,    73,    74,    -1,    -1,
      -1,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    -1,    89,    90,    91,    92,    93,    94,    -1,    -1,
      97,    98,    99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
      -1,   118,    -1,   120,   121,   122,   123,   124,   125,    -1,
     127,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
      -1,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,    -1,   160,    -1,   162,   163,   164,   165,    -1,
     167,    -1,   169,    -1,    -1,    -1,   173,   174,   175,    -1,
     177,    -1,   179,    -1,   181,   182,   183,    -1,   185,   186,
     187,   188,   189,   190,   191,    -1,   193,   194,   195,   196,
      -1,   198,   199,   200,   201,   202,   203,    -1,   205,    -1,
     207,   208,   209,   210,   211,   212,   213,   214,    -1,   216,
      -1,   218,    -1,    -1,   221,    -1,   223,   224,   225,   226,
     227,   228,    -1,    -1,   231,    -1,   233,    -1,    -1,   236,
     237,   238,    -1,    -1,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,    -1,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
      -1,   278,   279,   280,   281,   282,   283,    -1,   285,   286,
      -1,    -1,   289,   290,   291,    -1,    -1,   294,   295,    -1,
     297,    -1,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,    -1,   311,   312,   313,   314,   315,   316,
     317,   318,   319,    -1,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,    -1,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,    -1,   351,   352,    -1,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,    -1,   376,
     377,   378,   379,   380,    -1,   382,   383,   384,   385,    -1,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,    -1,   404,   405,   406,
     407,    -1,   409,   410,   411,   412,   413,    -1,   415,   416,
      -1,    -1,   419,   420,   421,   422,   423,    -1,   425,   426,
     427,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
     447,   448,    -1,   450,    -1,   452,   453,   454,   455,   456,
      -1,    -1,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,     3,    -1,   485,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   499,    -1,    21,    22,    23,    24,    25,    26,
      27,    28,    29,    30,    31,    32,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    40,    41,    -1,    43,    44,    45,    -1,
      47,    48,    49,    50,    51,    -1,    53,    54,    -1,    56,
      57,    58,    59,    60,    61,    -1,    -1,    64,    65,    66,
      67,    68,    -1,    70,    71,    72,    73,    74,    -1,    -1,
      -1,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    -1,    89,    90,    91,    92,    93,    94,    -1,    -1,
      97,    98,    99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
      -1,   118,    -1,   120,   121,   122,   123,   124,   125,    -1,
     127,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
      -1,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,    -1,   160,    -1,   162,   163,   164,   165,    -1,
     167,    -1,   169,    -1,    -1,    -1,   173,   174,   175,    -1,
     177,    -1,   179,    -1,   181,   182,   183,    -1,   185,   186,
     187,   188,   189,   190,   191,    -1,   193,   194,   195,   196,
      -1,   198,   199,   200,   201,   202,   203,    -1,   205,    -1,
     207,   208,   209,   210,   211,   212,   213,   214,    -1,   216,
      -1,   218,    -1,    -1,   221,    -1,   223,   224,   225,   226,
     227,   228,    -1,    -1,   231,    -1,   233,    -1,    -1,   236,
     237,   238,    -1,    -1,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,    -1,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
      -1,   278,   279,   280,   281,   282,   283,    -1,   285,   286,
      -1,    -1,   289,   290,   291,    -1,    -1,   294,   295,    -1,
     297,    -1,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,    -1,   311,   312,   313,   314,   315,   316,
     317,   318,   319,    -1,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,    -1,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,    -1,   351,   352,    -1,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,    -1,   376,
     377,   378,   379,   380,    -1,   382,   383,   384,   385,    -1,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,    -1,   404,   405,   406,
     407,    -1,   409,   410,   411,   412,   413,    -1,   415,   416,
      -1,    -1,   419,   420,   421,   422,   423,    -1,   425,   426,
     427,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
     447,   448,    -1,   450,    -1,   452,   453,   454,   455,   456,
      -1,    -1,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,     3,    -1,   485,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   499,    -1,    21,    22,    23,    24,    25,    26,
      27,    28,    -1,    30,    31,    32,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    40,    41,    -1,    43,    44,    45,    -1,
      47,    48,    49,    50,    51,    -1,    53,    54,    -1,    56,
      57,    58,    59,    60,    61,    -1,    -1,    64,    65,    66,
      67,    68,    -1,    70,    71,    72,    73,    74,    -1,    -1,
      -1,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    -1,    89,    90,    91,    92,    93,    94,    -1,    -1,
      97,    98,    99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
      -1,   118,    -1,   120,   121,   122,   123,   124,   125,    -1,
     127,   128,   129,   130,   131,    -1,    -1,   134,   135,   136,
     137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
      -1,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,    -1,   160,    -1,   162,   163,   164,   165,    -1,
     167,    -1,   169,    -1,    -1,    -1,   173,   174,   175,    -1,
     177,    -1,   179,    -1,   181,   182,   183,    -1,   185,   186,
     187,   188,   189,   190,   191,    -1,   193,   194,   195,   196,
      -1,   198,   199,   200,   201,   202,   203,    -1,   205,    -1,
     207,   208,   209,   210,   211,   212,   213,   214,    -1,   216,
      -1,   218,    -1,    -1,   221,    -1,   223,   224,   225,   226,
     227,   228,    -1,    -1,   231,    -1,   233,    -1,    -1,   236,
     237,   238,    -1,    -1,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,    -1,
     267,   268,   269,   270,   271,    -1,   273,   274,    -1,   276,
      -1,   278,   279,   280,   281,   282,   283,    -1,   285,   286,
      -1,    -1,   289,   290,   291,    -1,    -1,   294,   295,    -1,
     297,    -1,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,    -1,   311,   312,   313,   314,   315,   316,
     317,   318,   319,    -1,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,    -1,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,    -1,   351,   352,    -1,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,    -1,   376,
     377,   378,   379,   380,    -1,   382,   383,   384,   385,    -1,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,    -1,   404,   405,   406,
     407,    -1,   409,   410,   411,   412,   413,    -1,   415,   416,
      -1,    -1,   419,   420,   421,   422,   423,    -1,   425,   426,
     427,   428,   429,   430,   431,   432,    -1,    -1,   435,   436,
     437,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
     447,   448,    -1,   450,    -1,   452,   453,   454,   455,   456,
      -1,    -1,   459,    -1,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,    -1,     3,   485,     5,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   499,    -1,    -1,    21,    22,    23,    24,    25,
      26,    27,    28,    -1,    30,    31,    32,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    40,    41,    -1,    43,    44,    45,
      -1,    47,    48,    49,    50,    51,    -1,    53,    54,    -1,
      56,    57,    58,    59,    60,    61,    -1,    -1,    64,    65,
      66,    67,    68,    -1,    70,    71,    72,    73,    74,    -1,
      -1,    -1,    78,    79,    80,    81,    82,    83,    -1,    85,
      86,    87,    -1,    89,    90,    91,    92,    93,    94,    -1,
      -1,    97,    98,    99,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,    -1,   118,    -1,   120,   121,   122,   123,   124,   125,
      -1,   127,   128,   129,   130,   131,    -1,    -1,   134,   135,
     136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
     146,    -1,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,    -1,   160,    -1,   162,   163,   164,   165,
      -1,   167,    -1,   169,    -1,    -1,    -1,   173,   174,   175,
      -1,   177,    -1,   179,    -1,   181,   182,   183,    -1,   185,
     186,   187,   188,   189,   190,   191,    -1,   193,   194,   195,
     196,    -1,   198,   199,   200,   201,   202,   203,    -1,   205,
      -1,   207,   208,   209,   210,   211,   212,   213,   214,    -1,
     216,    -1,   218,    -1,    -1,   221,    -1,   223,   224,   225,
     226,   227,   228,    -1,    -1,   231,    -1,   233,    -1,    -1,
     236,   237,   238,    -1,    -1,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
      -1,   267,   268,   269,   270,   271,    -1,   273,   274,    -1,
     276,    -1,   278,   279,   280,   281,   282,   283,    -1,   285,
     286,    -1,    -1,   289,   290,   291,    -1,    -1,   294,   295,
      -1,   297,    -1,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,    -1,   311,   312,   313,   314,   315,
     316,   317,   318,   319,    -1,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
      -1,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,    -1,   351,   352,    -1,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,    -1,   370,   371,   372,   373,   374,    -1,
     376,   377,   378,   379,   380,    -1,   382,   383,   384,   385,
      -1,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,    -1,   404,   405,
      -1,   407,    -1,   409,   410,   411,   412,   413,    -1,   415,
     416,    -1,    -1,   419,   420,   421,   422,   423,    -1,   425,
     426,   427,   428,   429,   430,   431,   432,    -1,    -1,   435,
     436,   437,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,   447,   448,    -1,   450,    -1,   452,   453,   454,   455,
     456,    -1,    -1,   459,    -1,    -1,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,     3,    -1,     5,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   499,    -1,    21,    22,    23,    24,    25,
      26,    27,    28,    -1,    30,    31,    32,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    40,    41,    -1,    43,    44,    45,
      -1,    47,    48,    49,    50,    51,    -1,    53,    54,    -1,
      56,    57,    58,    59,    60,    61,    -1,    -1,    64,    65,
      66,    67,    68,    -1,    70,    71,    72,    73,    74,    -1,
      -1,    -1,    78,    79,    80,    81,    82,    83,    -1,    85,
      86,    87,    -1,    89,    90,    91,    92,    93,    94,    -1,
      -1,    97,    98,    99,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,    -1,   118,    -1,   120,   121,   122,   123,   124,   125,
      -1,   127,   128,   129,   130,   131,    -1,    -1,   134,   135,
     136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
     146,    -1,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,    -1,   160,    -1,   162,   163,   164,   165,
      -1,   167,    -1,   169,    -1,    -1,    -1,   173,   174,   175,
      -1,   177,    -1,   179,    -1,   181,   182,   183,    -1,   185,
     186,   187,   188,   189,   190,   191,    -1,   193,   194,   195,
     196,    -1,   198,   199,   200,   201,   202,   203,    -1,   205,
      -1,   207,   208,   209,   210,   211,   212,   213,   214,    -1,
     216,    -1,   218,    -1,    -1,   221,    -1,   223,   224,   225,
     226,   227,   228,    -1,    -1,   231,    -1,   233,    -1,    -1,
     236,   237,   238,    -1,    -1,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
      -1,   267,   268,   269,   270,   271,    -1,   273,   274,    -1,
     276,    -1,   278,   279,   280,   281,   282,   283,    -1,   285,
     286,    -1,    -1,   289,   290,   291,    -1,    -1,   294,   295,
      -1,   297,    -1,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,    -1,   311,   312,   313,   314,   315,
     316,   317,   318,   319,    -1,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
      -1,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,    -1,   351,   352,    -1,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,    -1,   370,   371,   372,   373,   374,    -1,
     376,   377,   378,   379,   380,    -1,   382,   383,   384,   385,
      -1,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,    -1,   404,   405,
      -1,   407,    -1,   409,   410,   411,   412,   413,    -1,   415,
     416,    -1,    -1,   419,   420,   421,   422,   423,    -1,   425,
     426,   427,   428,   429,   430,   431,   432,    -1,    -1,   435,
     436,   437,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,   447,   448,    -1,   450,    -1,   452,   453,   454,   455,
     456,    -1,    -1,   459,    -1,    -1,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   499,    -1,    21,    22,    23,    24,    25,
      26,    27,    28,    -1,    30,    31,    32,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    40,    41,    -1,    43,    44,    45,
      -1,    47,    48,    49,    50,    51,    -1,    53,    54,    -1,
      56,    57,    58,    59,    60,    61,    -1,    -1,    64,    65,
      66,    67,    68,    -1,    70,    71,    72,    73,    74,    -1,
      -1,    -1,    78,    79,    80,    81,    82,    83,    -1,    85,
      86,    87,    -1,    89,    90,    91,    92,    93,    94,    -1,
      -1,    97,    98,    99,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,    -1,   118,    -1,   120,   121,   122,   123,   124,   125,
      -1,   127,   128,   129,   130,   131,    -1,    -1,   134,   135,
     136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
     146,    -1,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,    -1,   160,    -1,   162,   163,   164,   165,
      -1,   167,    -1,   169,    -1,    -1,    -1,   173,   174,   175,
      -1,   177,    -1,   179,    -1,   181,   182,   183,    -1,   185,
     186,   187,   188,   189,   190,   191,    -1,   193,   194,   195,
     196,    -1,   198,   199,   200,   201,   202,   203,    -1,   205,
      -1,   207,   208,   209,   210,   211,   212,   213,   214,    -1,
     216,    -1,   218,    -1,    -1,   221,    -1,   223,   224,   225,
     226,   227,   228,    -1,    -1,   231,    -1,   233,    -1,    -1,
     236,   237,   238,    -1,    -1,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
      -1,   267,   268,   269,   270,   271,    -1,   273,   274,    -1,
     276,    -1,   278,   279,   280,   281,   282,   283,    -1,   285,
     286,    -1,    -1,   289,   290,   291,    -1,    -1,   294,   295,
      -1,   297,    -1,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,    -1,   311,   312,   313,   314,   315,
     316,   317,   318,   319,    -1,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
      -1,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,    -1,   351,   352,    -1,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,    -1,   370,   371,   372,   373,   374,    -1,
     376,   377,   378,   379,   380,    -1,   382,   383,   384,   385,
      -1,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,    -1,   404,   405,
      -1,   407,    -1,   409,   410,   411,   412,   413,    -1,   415,
     416,    -1,    -1,   419,   420,   421,   422,   423,    -1,   425,
     426,   427,   428,   429,   430,   431,   432,    -1,    -1,   435,
     436,   437,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,   447,   448,    -1,   450,    -1,   452,   453,   454,   455,
     456,    -1,    -1,   459,    -1,    -1,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   499,    -1,    21,    22,    23,    24,    25,
      26,    27,    28,    -1,    30,    31,    32,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    40,    41,    -1,    43,    44,    45,
      -1,    47,    48,    49,    50,    51,    -1,    53,    54,    -1,
      56,    57,    58,    59,    60,    61,    -1,    -1,    64,    65,
      66,    67,    68,    -1,    70,    71,    72,    73,    74,    -1,
      -1,    -1,    78,    79,    80,    81,    82,    83,    -1,    85,
      86,    87,    -1,    89,    90,    91,    92,    93,    94,    -1,
      -1,    97,    98,    99,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,    -1,   118,    -1,   120,   121,   122,   123,   124,   125,
      -1,   127,   128,   129,   130,   131,    -1,    -1,   134,   135,
     136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
     146,    -1,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,    -1,   160,    -1,   162,   163,   164,   165,
      -1,   167,    -1,   169,    -1,    -1,    -1,   173,   174,   175,
      -1,   177,    -1,   179,    -1,   181,   182,   183,    -1,   185,
     186,   187,   188,   189,   190,   191,    -1,   193,   194,   195,
     196,    -1,   198,   199,   200,   201,   202,   203,    -1,   205,
      -1,   207,   208,   209,   210,   211,   212,   213,   214,    -1,
     216,    -1,   218,    -1,    -1,   221,    -1,   223,   224,   225,
     226,   227,   228,    -1,    -1,   231,    -1,   233,    -1,    -1,
     236,   237,   238,    -1,    -1,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
      -1,   267,   268,   269,   270,   271,    -1,   273,   274,    -1,
     276,    -1,   278,   279,   280,   281,   282,   283,    -1,   285,
     286,    -1,    -1,   289,   290,   291,    -1,    -1,   294,   295,
      -1,   297,    -1,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,    -1,   311,   312,   313,   314,   315,
     316,   317,   318,   319,    -1,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
      -1,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,    -1,   351,   352,    -1,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,    -1,   370,   371,   372,   373,   374,    -1,
     376,   377,   378,   379,   380,    -1,   382,   383,   384,   385,
      -1,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,    -1,   404,   405,
      -1,   407,    -1,   409,   410,   411,   412,   413,    -1,   415,
     416,    -1,    -1,   419,   420,   421,   422,   423,    -1,   425,
     426,   427,   428,   429,   430,   431,   432,    -1,    -1,   435,
     436,   437,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,   447,   448,    -1,   450,    -1,   452,   453,   454,   455,
     456,    -1,    -1,   459,    -1,    -1,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   499,    -1,    21,    22,    23,    24,    25,
      26,    27,    28,    -1,    30,    31,    32,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    40,    41,    -1,    43,    44,    45,
      -1,    47,    48,    49,    50,    51,    -1,    53,    54,    -1,
      56,    57,    58,    59,    60,    61,    -1,    -1,    64,    65,
      66,    67,    68,    -1,    70,    71,    72,    73,    74,    -1,
      -1,    -1,    78,    79,    80,    81,    82,    83,    -1,    85,
      86,    87,    -1,    89,    90,    91,    92,    93,    94,    -1,
      -1,    97,    98,    99,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,    -1,   118,    -1,   120,   121,   122,   123,   124,   125,
      -1,   127,   128,   129,   130,   131,    -1,    -1,   134,   135,
     136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
     146,    -1,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,    -1,   160,    -1,   162,   163,   164,   165,
      -1,   167,    -1,   169,    -1,    -1,    -1,   173,   174,   175,
      -1,   177,    -1,   179,    -1,   181,   182,   183,    -1,   185,
     186,   187,   188,   189,   190,   191,    -1,   193,   194,   195,
     196,    -1,   198,   199,   200,   201,   202,   203,    -1,   205,
      -1,   207,   208,   209,   210,   211,   212,   213,   214,    -1,
     216,    -1,   218,    -1,    -1,   221,    -1,   223,   224,   225,
     226,   227,   228,    -1,    -1,   231,    -1,   233,    -1,    -1,
     236,   237,   238,    -1,    -1,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
      -1,   267,   268,   269,   270,   271,    -1,   273,   274,    -1,
     276,    -1,   278,   279,   280,   281,   282,   283,    -1,   285,
     286,    -1,    -1,   289,   290,   291,    -1,    -1,   294,   295,
      -1,   297,    -1,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,    -1,   311,   312,   313,   314,   315,
     316,   317,   318,   319,    -1,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
      -1,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,    -1,   351,   352,    -1,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,    -1,   370,   371,   372,   373,   374,    -1,
     376,   377,   378,   379,   380,    -1,   382,   383,   384,   385,
      -1,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,    -1,   404,   405,
      -1,   407,    -1,   409,   410,   411,   412,   413,    -1,   415,
     416,    -1,    -1,   419,   420,   421,   422,   423,    -1,   425,
     426,   427,   428,   429,   430,   431,   432,    -1,    -1,   435,
     436,   437,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,   447,   448,    -1,   450,    -1,   452,   453,   454,   455,
     456,    -1,    -1,   459,    -1,    -1,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,    -1,    -1,     3,
       4,     5,    -1,    -1,     8,     9,    -1,    -1,    -1,    -1,
      -1,    15,    -1,   499,    18,    19,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    33,
      34,    35,    36,    37,    38,    39,    40,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    -1,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    86,    87,    88,    89,    90,    91,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   129,   130,   131,   132,   133,
     134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
     144,   145,   146,   147,   148,   149,   150,   151,    -1,   153,
     154,   155,   156,   157,    -1,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,    -1,    -1,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,    -1,   208,   209,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,    -1,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,    -1,   296,   297,   298,    -1,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,    -1,
     314,   315,    -1,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,    -1,   422,    -1,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   479,   480,   481,   482,    -1,
       3,    -1,   486,   487,   488,     8,   490,   491,   492,   493,
     494,   495,    15,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    -1,    47,    48,    49,    50,    51,    -1,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    -1,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    -1,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    -1,    97,    98,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,    -1,    -1,    -1,
     173,   174,   175,    -1,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,    -1,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,    -1,    -1,   221,    -1,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,    -1,
     233,    -1,    -1,   236,   237,   238,    -1,    -1,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,    -1,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
      -1,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,    -1,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,   447,   448,    -1,   450,    -1,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
      -1,    -1,    -1,   486,   487,   488,    -1,   490,   491,   492,
     493,   494,   495,     8,    -1,    -1,    11,    -1,    -1,    -1,
      15,    16,    17,    18,    19,    20,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      35,    -1,     8,    -1,    -1,    11,    -1,    -1,    43,    15,
      16,    17,    18,    19,    20,    50,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    35,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    43,     8,    -1,
      75,    11,    -1,    -1,    50,    15,    16,    17,    18,    19,
      20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    35,    -1,     8,    -1,    75,
      11,    -1,    -1,    43,    15,    16,    17,    18,    19,    20,
      50,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    35,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    43,    -1,    -1,    75,    -1,    -1,    -1,    50,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    75,    -1,    -1,    -1,    -1,    -1,
      -1,   176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   192,    -1,    -1,
      -1,    -1,   197,    -1,    -1,     8,    -1,    -1,    11,    -1,
     176,    -1,    15,    16,    17,    18,    19,    20,    -1,    -1,
      -1,    -1,    -1,    -1,   219,   220,   192,    -1,    -1,    -1,
      -1,   197,    35,    -1,    -1,    -1,    -1,    -1,    -1,   234,
      43,    -1,    -1,    -1,    -1,    -1,   176,    50,    -1,    -1,
      -1,    -1,    -1,   219,   220,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   192,    -1,    -1,    -1,    -1,   197,   234,    -1,
      -1,    -1,    75,    -1,    -1,   176,    -1,   272,    -1,    -1,
     275,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,
     220,   192,    -1,    -1,   289,    -1,   197,   292,    -1,    -1,
      -1,    -1,    -1,    -1,   234,    -1,   272,    -1,    -1,   275,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,   220,
      -1,    -1,    -1,   289,    -1,    -1,   292,    -1,    -1,    -1,
      -1,    -1,    -1,   234,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   272,    -1,    -1,   275,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   289,
      -1,    -1,   292,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   272,    -1,   176,   275,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   381,    -1,   289,   192,
      -1,   292,    -1,    -1,   197,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   381,   219,   220,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   234,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,
      -1,    -1,    15,    16,    17,    18,    19,    20,    -1,    -1,
      -1,   381,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    35,    -1,    -1,    -1,    -1,    -1,    -1,   272,
      43,    -1,   275,    -1,    -1,    -1,    -1,    50,    -1,    -1,
     381,    -1,    -1,    -1,    -1,    -1,   289,    -1,   483,   292,
      -1,   486,   487,   488,    -1,   490,   491,   492,   493,   494,
     495,    -1,    75,    -1,    -1,   500,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   483,    -1,    -1,
     486,   487,   488,    -1,   490,   491,   492,   493,   494,   495,
      -1,    -1,    -1,    -1,   500,    -1,    -1,    -1,    -1,     8,
      -1,    -1,    11,    -1,    -1,    -1,    15,    16,    17,    18,
      19,    20,    -1,   483,    -1,    -1,   486,   487,   488,    -1,
     490,   491,   492,   493,   494,   495,    35,    -1,    -1,    -1,
     500,    -1,    -1,    -1,    43,    -1,    -1,    -1,   381,    -1,
      -1,    50,   483,    -1,    -1,   486,   487,   488,    -1,   490,
     491,   492,   493,   494,   495,    -1,    -1,    -1,    -1,   500,
      -1,     8,    23,   176,    11,    -1,    75,    -1,    15,    16,
      17,    18,    19,    20,    -1,    -1,    -1,    -1,    -1,   192,
      -1,    -1,    -1,    -1,   197,    -1,    -1,    -1,    35,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    43,    -1,    -1,    -1,
      -1,    -1,    -1,    50,    -1,    -1,   219,   220,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    76,    -1,    -1,    -1,    -1,
      -1,   234,    -1,    -1,    -1,    -1,    -1,    -1,    75,    -1,
      -1,    92,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     483,    -1,    -1,   486,   487,   488,    -1,   490,   491,   492,
     493,   494,   495,    -1,    -1,    -1,    -1,   500,    -1,   272,
      -1,    -1,   275,    -1,    -1,    -1,    -1,   176,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   289,    -1,    -1,   292,
      -1,    -1,    -1,   192,    -1,   146,    -1,    -1,   197,    -1,
      -1,    -1,    -1,    -1,    -1,   156,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   168,    -1,    -1,
     219,   220,   173,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   234,    -1,    -1,    -1,   176,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   200,
      -1,    -1,    -1,    -1,    -1,   192,    -1,    -1,    -1,    -1,
     197,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   272,    -1,    -1,   275,    -1,   381,    -1,
      -1,    -1,   219,   220,    -1,    -1,    -1,    -1,    -1,    -1,
     289,    -1,    -1,   292,   245,    -1,    -1,   234,   249,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   272,    -1,    -1,   275,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   289,    -1,    -1,   292,    -1,    -1,    -1,    -1,
      -1,   312,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   326,    -1,    -1,    -1,    -1,
     483,    -1,   381,   486,   487,   488,    -1,   490,   491,   492,
     493,   494,   495,    -1,    -1,    -1,    -1,   500,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   359,    -1,
      -1,   362,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   370,
      -1,    -1,   373,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   392,    -1,    -1,   381,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   406,    -1,    -1,    -1,    -1,
      -1,    -1,   413,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   422,    -1,    -1,    -1,    -1,    -1,   428,    -1,    -1,
      -1,    -1,    -1,    -1,   483,    -1,    -1,   486,   487,   488,
      -1,   490,   491,   492,   493,   494,   495,    -1,    -1,    -1,
      -1,   500,   453,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,     3,    -1,   483,    -1,    -1,   486,
     487,   488,    -1,   490,   491,   492,   493,   494,   495,    -1,
      -1,   498,    21,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    31,    32,    33,    34,    35,    36,    37,    38,
      39,    40,    41,    42,    43,    44,    45,    -1,    47,    48,
      49,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    74,    75,    -1,    77,    78,
      79,    80,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    91,    92,    93,    94,    95,    -1,    97,    98,
      99,   100,   101,   102,    -1,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     129,   130,   131,   132,   133,   134,   135,   136,   137,   138,
     139,   140,   141,   142,   143,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     169,    -1,   171,    -1,   173,   174,   175,    -1,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,    -1,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,    -1,   207,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   217,   218,
      -1,    -1,   221,    -1,   223,   224,   225,   226,   227,   228,
     229,   230,   231,    -1,   233,    -1,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,    -1,   267,   268,
     269,   270,   271,   272,   273,   274,    -1,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,    -1,   297,    -1,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,    -1,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,    -1,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,    -1,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,    -1,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   492,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    21,    22,    23,    24,    25,    26,    27,    28,
      -1,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    40,    41,    -1,    43,    44,    45,    -1,    47,    48,
      49,    50,    51,    -1,    53,    54,    -1,    56,    57,    58,
      59,    60,    61,    -1,    -1,    64,    65,    66,    67,    68,
      -1,    70,    71,    72,    73,    74,    -1,    -1,    -1,    78,
      79,    80,    81,    82,    83,    -1,    85,    86,    87,    -1,
      89,    90,    91,    92,    93,    94,    -1,    -1,    97,    98,
      99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,    -1,   118,
      -1,   120,   121,   122,   123,   124,   125,    -1,   127,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
      -1,   140,   141,   142,    -1,   144,   145,   146,    -1,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
      -1,   160,    -1,   162,   163,   164,   165,    -1,   167,    -1,
     169,    -1,    -1,    -1,   173,   174,   175,    -1,   177,    -1,
     179,    -1,   181,   182,   183,    -1,   185,   186,   187,   188,
     189,   190,   191,    -1,   193,   194,   195,   196,    -1,   198,
     199,   200,   201,   202,   203,    -1,   205,    -1,   207,   208,
     209,   210,   211,   212,   213,   214,    -1,   216,    -1,   218,
      -1,    -1,   221,    -1,   223,   224,   225,   226,   227,   228,
      -1,    -1,   231,    -1,   233,    -1,    -1,   236,   237,   238,
      -1,    -1,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,    -1,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,    -1,   278,
     279,   280,   281,   282,   283,    -1,   285,   286,    -1,    -1,
     289,   290,   291,    -1,    -1,   294,   295,    -1,   297,    -1,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,    -1,   311,   312,   313,   314,   315,   316,   317,   318,
     319,    -1,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,    -1,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,    -1,   351,   352,    -1,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
      -1,   370,   371,   372,   373,   374,    -1,   376,   377,   378,
     379,   380,    -1,   382,   383,   384,   385,    -1,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,    -1,   404,   405,    -1,   407,    -1,
     409,   410,   411,   412,   413,    -1,   415,   416,    -1,    -1,
     419,   420,   421,   422,   423,    -1,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,   447,   448,
      -1,   450,    -1,   452,   453,   454,   455,   456,    -1,    -1,
     459,    -1,    -1,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,     3,     4,     5,    -1,    -1,    -1,
       9,    -1,    -1,   492,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    21,    22,    23,    24,    25,    26,    27,    28,
      -1,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    40,    41,    -1,    43,    44,    45,    -1,    47,    48,
      49,    50,    51,    -1,    53,    54,    -1,    56,    57,    58,
      59,    60,    61,    -1,    -1,    64,    65,    66,    67,    68,
      -1,    70,    71,    72,    73,    74,    -1,    -1,    -1,    78,
      79,    80,    81,    82,    83,    -1,    85,    86,    87,    -1,
      89,    90,    91,    92,    93,    94,    -1,    -1,    97,    98,
      99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
      -1,   120,   121,   122,   123,   124,   125,    -1,   127,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
      -1,   140,   141,   142,    -1,   144,   145,   146,    -1,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,    -1,   162,   163,   164,   165,    -1,   167,    -1,
     169,    -1,    -1,    -1,   173,   174,   175,    -1,   177,    -1,
     179,    -1,   181,   182,   183,    -1,   185,   186,   187,   188,
     189,   190,   191,    -1,   193,   194,   195,   196,    -1,   198,
     199,   200,   201,   202,   203,    -1,   205,    -1,   207,   208,
     209,   210,   211,   212,   213,   214,    -1,   216,    -1,   218,
      -1,    -1,   221,    -1,   223,   224,   225,   226,   227,   228,
      -1,    -1,   231,    -1,   233,    -1,    -1,   236,   237,   238,
      -1,    -1,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,    -1,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,    -1,   278,
     279,   280,   281,   282,   283,    -1,   285,   286,   287,    -1,
     289,   290,   291,    -1,    -1,   294,   295,    -1,   297,    -1,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,    -1,   311,   312,   313,   314,   315,   316,   317,   318,
     319,    -1,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,    -1,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,    -1,   351,   352,    -1,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
      -1,   370,   371,   372,   373,   374,    -1,   376,   377,   378,
     379,   380,    -1,   382,   383,   384,   385,    -1,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,    -1,   404,   405,    -1,   407,    -1,
     409,   410,   411,   412,   413,    -1,   415,   416,    -1,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,   447,   448,
      -1,   450,    -1,   452,   453,   454,   455,   456,    -1,    -1,
     459,    -1,    -1,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,     3,     4,     5,    -1,    -1,    -1,
       9,   490,   491,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    21,    22,    23,    24,    25,    26,    27,    28,
      -1,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    40,    41,    -1,    43,    44,    45,    -1,    47,    48,
      49,    50,    51,    -1,    53,    54,    -1,    56,    57,    58,
      59,    60,    61,    -1,    -1,    64,    65,    66,    67,    68,
      -1,    70,    71,    72,    73,    74,    -1,    -1,    -1,    78,
      79,    80,    81,    82,    83,    -1,    85,    86,    87,    -1,
      89,    90,    91,    92,    93,    94,    -1,    -1,    97,    98,
      99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
      -1,   120,   121,   122,   123,   124,   125,    -1,   127,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
      -1,   140,   141,   142,    -1,   144,   145,   146,    -1,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,    -1,   162,   163,   164,   165,    -1,   167,    -1,
     169,    -1,    -1,    -1,   173,   174,   175,    -1,   177,    -1,
     179,    -1,   181,   182,   183,    -1,   185,   186,   187,   188,
     189,   190,   191,    -1,   193,   194,   195,   196,    -1,   198,
     199,   200,   201,   202,   203,    -1,   205,    -1,   207,   208,
     209,   210,   211,   212,   213,   214,    -1,   216,    -1,   218,
      -1,    -1,   221,    -1,   223,   224,   225,   226,   227,   228,
      -1,    -1,   231,    -1,   233,    -1,    -1,   236,   237,   238,
      -1,    -1,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,    -1,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,    -1,   278,
     279,   280,   281,   282,   283,    -1,   285,   286,   287,    -1,
     289,   290,   291,    -1,    -1,   294,   295,    -1,   297,    -1,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,    -1,   311,   312,   313,   314,   315,   316,   317,   318,
     319,    -1,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,    -1,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,    -1,   351,   352,    -1,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
      -1,   370,   371,   372,   373,   374,    -1,   376,   377,   378,
     379,   380,    -1,   382,   383,   384,   385,    -1,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,    -1,   404,   405,    -1,   407,    -1,
     409,   410,   411,   412,   413,    -1,   415,   416,    -1,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,   447,   448,
      -1,   450,    -1,   452,   453,   454,   455,   456,    -1,    -1,
     459,    -1,    -1,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,     3,     4,     5,    -1,    -1,    -1,
       9,   490,   491,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    21,    22,    23,    24,    25,    26,    27,    28,
      -1,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    40,    41,    -1,    43,    44,    45,    -1,    47,    48,
      49,    50,    51,    -1,    53,    54,    -1,    56,    57,    58,
      59,    60,    61,    -1,    -1,    64,    65,    66,    67,    68,
      -1,    70,    71,    72,    73,    74,    -1,    -1,    -1,    78,
      79,    80,    81,    82,    83,    -1,    85,    86,    87,    -1,
      89,    90,    91,    92,    93,    94,    -1,    -1,    97,    98,
      99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,    -1,   118,
      -1,   120,   121,   122,   123,   124,   125,    -1,   127,   128,
     129,   130,   131,    -1,    -1,   134,   135,   136,   137,   138,
      -1,   140,   141,   142,    -1,   144,   145,   146,    -1,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,    -1,   162,   163,   164,   165,    -1,   167,    -1,
     169,    -1,    -1,    -1,   173,   174,   175,    -1,   177,    -1,
     179,    -1,   181,   182,   183,    -1,   185,   186,   187,   188,
     189,   190,   191,    -1,   193,   194,   195,   196,    -1,   198,
     199,   200,   201,   202,   203,    -1,   205,    -1,   207,   208,
     209,   210,   211,   212,   213,   214,    -1,   216,    -1,   218,
      -1,    -1,   221,    -1,   223,   224,   225,   226,   227,   228,
      -1,    -1,   231,    -1,   233,    -1,    -1,   236,   237,   238,
      -1,    -1,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,    -1,   267,   268,
     269,   270,   271,    -1,   273,   274,    -1,   276,    -1,   278,
     279,   280,   281,   282,   283,    -1,   285,   286,   287,    -1,
     289,   290,   291,    -1,    -1,   294,   295,    -1,   297,    -1,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,    -1,   311,   312,   313,   314,   315,   316,   317,   318,
     319,    -1,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,    -1,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,    -1,   351,   352,    -1,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
      -1,   370,   371,   372,   373,   374,    -1,   376,   377,   378,
     379,   380,    -1,   382,   383,   384,   385,    -1,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,    -1,   404,   405,    -1,   407,    -1,
     409,   410,   411,   412,   413,    -1,   415,   416,    -1,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,    -1,    -1,   435,   436,   437,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,   447,   448,
      -1,   450,    -1,   452,   453,   454,   455,   456,    -1,    -1,
     459,    -1,    -1,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,    -1,    -1,     8,    -1,    -1,    11,
      -1,   490,   491,    15,    16,    17,    18,    19,    20,     8,
      -1,    -1,    11,    -1,    -1,    -1,    15,    16,    17,    18,
      19,    20,    -1,    35,    -1,    -1,    -1,    39,    -1,    -1,
      -1,    43,    -1,    -1,    -1,    -1,    35,    -1,    50,    -1,
      -1,    -1,    -1,    -1,    43,     8,    -1,    -1,    11,    -1,
      -1,    50,    15,    16,    17,    18,    19,    20,     8,    -1,
      -1,    11,    -1,    75,    -1,    15,    16,    17,    18,    19,
      20,    -1,    35,    -1,    -1,    -1,    75,    -1,    -1,    -1,
      43,    -1,    -1,    -1,    -1,    35,    -1,    50,    38,    -1,
      -1,    -1,    -1,    43,     8,    -1,    -1,    11,    -1,    -1,
      50,    15,    16,    17,    18,    19,    20,    -1,    -1,    -1,
      -1,    -1,    75,    -1,   126,    -1,    -1,    -1,    -1,    -1,
      -1,    35,    -1,    -1,    -1,    75,    -1,    -1,    -1,    43,
      -1,    -1,    -1,    -1,    -1,    -1,    50,    -1,    -1,     8,
      -1,    -1,    11,    -1,    -1,    -1,    15,    16,    17,    18,
      19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    75,    -1,    -1,   176,    -1,    35,   166,    -1,    38,
      -1,    -1,   171,    -1,    43,    -1,    -1,   176,    -1,    -1,
     192,    50,    -1,    -1,    -1,   197,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   192,    -1,    -1,    -1,    -1,   197,    -1,
      -1,    -1,   165,    -1,    -1,    -1,    75,   219,   220,    -1,
      -1,    -1,    -1,   176,    -1,    -1,    -1,    -1,    -1,    -1,
     219,   220,   234,    -1,    -1,    -1,   176,    -1,    -1,   192,
      -1,    -1,    -1,    -1,   197,   234,    -1,    -1,    -1,    -1,
      -1,    -1,   192,    -1,    -1,    -1,    -1,   197,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   219,   220,    -1,    -1,
     272,    -1,   176,   275,    -1,    -1,    -1,    -1,    -1,   219,
     220,   234,    -1,   272,    -1,    -1,   275,   289,   192,    -1,
     292,    -1,    -1,   197,   234,    -1,    -1,    -1,    -1,    -1,
     289,    -1,    -1,   292,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,   220,   176,    -1,   272,
      -1,    -1,   275,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     234,    -1,   272,   192,    -1,   275,   289,    -1,   197,   292,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   289,
      -1,    -1,   292,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,   220,   315,    -1,    -1,    -1,    -1,    -1,   272,    -1,
      -1,   275,    -1,    -1,    -1,   234,    -1,    -1,    -1,   381,
      -1,    -1,    -1,    -1,    -1,   289,    -1,    -1,   292,    -1,
      -1,    -1,   381,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   310,    -1,    -1,    -1,
      -1,    -1,    -1,   272,    -1,    -1,   275,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   381,    -1,
     289,    -1,    -1,   292,    -1,    -1,    -1,    -1,    -1,   441,
      -1,   381,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   381,    -1,    -1,
      -1,   483,    -1,    -1,   486,   487,   488,    -1,   490,   491,
     492,   493,   494,   495,   483,    -1,    -1,   486,   487,   488,
      -1,   490,   491,   492,   493,   494,   495,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   381,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     483,    -1,    -1,   486,   487,   488,    -1,   490,   491,   492,
     493,   494,   495,   483,    -1,    -1,   486,   487,   488,    -1,
     490,   491,   492,   493,   494,   495,    -1,    -1,     8,    -1,
      -1,    11,    -1,    -1,    -1,    15,    16,    17,    18,    19,
      20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   483,
      -1,    -1,   486,   487,   488,    35,   490,   491,   492,   493,
     494,   495,    -1,    43,    -1,    -1,    -1,    -1,    -1,    -1,
      50,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   483,    75,    -1,   486,   487,   488,
      -1,   490,   491,   492,   493,   494,   495,     8,    -1,    -1,
      11,    -1,    -1,    -1,    15,    16,    17,    18,    19,    20,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    35,    -1,     8,    38,    -1,    11,
      -1,    -1,    43,    15,    16,    17,    18,    19,    20,    50,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    35,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    43,    -1,    -1,    75,    -1,    -1,    -1,    50,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   171,    -1,    -1,    -1,    -1,   176,    -1,    -1,    -1,
      -1,    -1,    -1,    75,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   192,    -1,    -1,     8,    -1,   197,    11,    -1,
      -1,    -1,    15,    16,    17,    18,    19,    20,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,
     220,    -1,    35,    -1,    -1,    38,    -1,    -1,    -1,    -1,
      43,    -1,    -1,    -1,   234,    -1,    -1,    50,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   176,    -1,    -1,    -1,    -1,
      -1,    -1,    75,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   192,   272,    -1,    -1,   275,   197,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   176,    -1,    -1,    -1,    -1,   289,
      -1,    -1,   292,    -1,    -1,    -1,    -1,    -1,   219,   220,
     192,    -1,    -1,    -1,    -1,   197,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   234,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,   220,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   234,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   272,    -1,    -1,   275,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   176,    -1,    -1,     8,    -1,   289,    11,
      -1,   292,    -1,    15,    16,    17,    18,    19,    20,   192,
     272,   381,    -1,   275,   197,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    35,    -1,    -1,    -1,   289,    -1,    -1,
     292,    43,    -1,    -1,    -1,    -1,   219,   220,    50,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   234,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,
      -1,    -1,    11,    75,    -1,    -1,    15,    16,    17,    18,
      19,    20,     8,    -1,    -1,    11,    -1,    -1,    -1,    15,
      -1,    -1,    18,    19,    20,    -1,    35,    -1,    -1,   272,
     381,    -1,   275,    -1,    43,    -1,    -1,    -1,    -1,    -1,
      -1,    50,    -1,    -1,    -1,    -1,   289,    43,    -1,   292,
      -1,    -1,    -1,   483,    50,    -1,   486,   487,   488,   381,
     490,   491,   492,   493,   494,   495,    75,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    75,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   414,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   176,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     192,    -1,    -1,    -1,    -1,   197,    -1,    -1,    -1,    -1,
      -1,    -1,   483,    -1,    -1,   486,   487,   488,   381,   490,
     491,   492,   493,   494,   495,    -1,    -1,   219,   220,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   483,   234,    -1,   486,   487,   488,   176,   490,   491,
     492,   493,   494,   495,    -1,    -1,    -1,    -1,    -1,    -1,
     176,    -1,    -1,   192,    -1,    -1,    -1,    -1,   197,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   192,    -1,    -1,    -1,
     272,   197,    -1,   275,    -1,    -1,    -1,    -1,    -1,    -1,
     219,   220,    -1,    -1,    -1,    -1,    -1,   289,    -1,    -1,
     292,    -1,    -1,   219,   220,   234,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   234,    -1,
     483,    -1,    -1,   486,   487,   488,    -1,   490,   491,   492,
     493,   494,   495,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   272,    -1,    -1,   275,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   275,
     289,    -1,    -1,   292,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   289,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   381,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   381,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   381,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   483,    -1,    -1,   486,   487,   488,    -1,   490,   491,
     492,   493,   494,   495,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   483,    -1,    -1,   486,   487,   488,
      -1,   490,   491,   492,   493,   494,   495,   483,    -1,    -1,
     486,   487,   488,    -1,   490,   491,   492,   493,   494,   495,
       3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
      33,    34,    35,    36,    37,    38,    39,    40,    41,    42,
      43,    44,    45,    -1,    47,    48,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    75,    -1,    77,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    91,    92,
      93,    94,    95,    -1,    97,    98,    99,   100,   101,   102,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   138,   139,   140,   141,   142,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,    -1,   171,    -1,
     173,   174,   175,    -1,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,    -1,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   217,   218,    -1,    -1,   221,    -1,
     223,   224,   225,   226,   227,   228,   229,   230,   231,    -1,
     233,    -1,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,    -1,   267,   268,   269,   270,   271,   272,
     273,   274,    -1,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,    -1,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
      -1,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,    -1,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,    -1,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
      33,    34,    35,    36,    37,    38,    39,    40,    41,    42,
      43,    44,    45,    -1,    47,    48,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    75,    -1,    77,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    91,    92,
      93,    94,    95,    -1,    97,    98,    99,   100,   101,   102,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   138,   139,   140,   141,   142,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,    -1,   171,    -1,
     173,   174,   175,    -1,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,    -1,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   217,   218,    -1,    -1,   221,    -1,
     223,   224,   225,   226,   227,   228,   229,   230,   231,    -1,
     233,    -1,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,    -1,   267,   268,   269,   270,   271,   272,
     273,   274,    -1,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,    -1,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
      -1,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,    -1,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,    -1,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
      33,    34,    35,    36,    37,    38,    39,    40,    41,    42,
      43,    44,    45,    -1,    47,    48,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    75,    -1,    77,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    91,    92,
      93,    94,    95,    -1,    97,    98,    99,   100,   101,   102,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   138,   139,   140,   141,   142,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,    -1,   171,    -1,
     173,   174,   175,    -1,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,    -1,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   217,   218,    -1,    -1,   221,    -1,
     223,   224,   225,   226,   227,   228,   229,   230,   231,    -1,
     233,    -1,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,    -1,   267,   268,   269,   270,   271,   272,
     273,   274,    -1,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,    -1,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
      -1,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,    -1,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,    -1,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    -1,
      63,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    76,    -1,    78,    79,    80,    81,    82,
      83,    84,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,   170,    -1,   172,
     173,   174,   175,   176,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,   232,
     233,   234,    -1,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,    -1,
     273,   274,   275,   276,    -1,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,   407,   408,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,    -1,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,   440,    -1,   442,
     443,   444,   445,   446,   447,   448,    -1,   450,   451,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    -1,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    76,    -1,    78,    79,    80,    81,    82,
      83,    84,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    99,    -1,    -1,    -1,
     103,    -1,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,   170,    -1,   172,
     173,   174,   175,   176,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,   232,
     233,   234,    -1,   236,   237,   238,    -1,    -1,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,    -1,
     273,   274,   275,   276,    -1,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,   407,   408,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,    -1,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,   447,   448,    -1,   450,   451,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    -1,    47,    48,    49,    50,    51,    -1,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    -1,
      -1,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    -1,    -1,    77,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    91,    92,
      93,    94,    -1,    -1,    97,    98,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,   164,   165,    -1,   167,   168,   169,    -1,    -1,    -1,
     173,   174,   175,    -1,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,    -1,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,    -1,    -1,   221,    -1,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,    -1,
     233,    -1,    -1,   236,   237,   238,    -1,    -1,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,    -1,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
      -1,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,    -1,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,   434,   435,   436,   437,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,   447,   448,    -1,   450,    -1,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    -1,    47,    48,    49,    50,    51,    -1,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    -1,
      -1,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    -1,    -1,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    91,    92,
      93,    94,    -1,    -1,    97,    98,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,   164,   165,    -1,   167,   168,   169,    -1,    -1,    -1,
     173,   174,   175,    -1,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,    -1,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,    -1,    -1,   221,    -1,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,    -1,
     233,   234,    -1,   236,   237,   238,    -1,    -1,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,    -1,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
      -1,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,    -1,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,   434,   435,   436,   437,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,   447,   448,    -1,   450,    -1,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
       3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    -1,    47,    48,    49,    50,    51,    -1,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    -1,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    -1,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    -1,    97,    98,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,    -1,    -1,    -1,
     173,   174,   175,    -1,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,    -1,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,    -1,    -1,   221,    -1,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,    -1,
     233,    -1,    -1,   236,   237,   238,    -1,    -1,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,   287,    -1,   289,   290,   291,    -1,
      -1,   294,   295,    -1,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
      -1,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,   447,   448,    -1,   450,    -1,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
       3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      33,    34,    -1,    -1,    -1,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    -1,    47,    48,    49,    50,    51,    -1,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    -1,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    -1,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    -1,    97,    98,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,    -1,    -1,    -1,
     173,   174,   175,    -1,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,    -1,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,    -1,    -1,   221,    -1,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,    -1,
     233,    -1,    -1,   236,   237,   238,    -1,    -1,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,    -1,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
      -1,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,    -1,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,   447,   448,    -1,   450,    -1,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
       3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    -1,    47,    48,    49,    50,    51,    -1,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    -1,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    -1,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    -1,    97,    98,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,    -1,    -1,    -1,
     173,   174,   175,    -1,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,    -1,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,    -1,    -1,   221,    -1,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,    -1,
     233,    -1,    -1,   236,   237,   238,    -1,    -1,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,   288,   289,   290,   291,    -1,
      -1,   294,   295,    -1,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
      -1,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,    -1,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,   447,   448,    -1,   450,    -1,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
       3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    -1,    47,    48,    49,    50,    51,    -1,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    -1,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    -1,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    -1,    97,    98,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,    -1,    -1,    -1,
     173,   174,   175,    -1,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,    -1,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,    -1,    -1,   221,    -1,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,    -1,
     233,    -1,    -1,   236,   237,   238,    -1,    -1,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,   288,   289,   290,   291,    -1,
      -1,   294,   295,    -1,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
      -1,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,    -1,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,   447,   448,    -1,   450,    -1,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      33,    34,    -1,    -1,    -1,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    -1,    47,    48,    49,    50,    51,    -1,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    -1,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    -1,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    -1,    97,    98,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,    -1,    -1,    -1,
     173,   174,   175,    -1,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,    -1,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,    -1,    -1,   221,    -1,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,    -1,
     233,    -1,    -1,   236,   237,   238,    -1,    -1,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,    -1,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
      -1,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,    -1,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,   447,   448,    -1,   450,    -1,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
       3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    -1,    47,    48,    49,    50,    51,    -1,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    -1,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    -1,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    -1,    97,    98,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,    -1,    -1,    -1,
     173,   174,   175,    -1,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,    -1,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,    -1,    -1,   221,    -1,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,    -1,
     233,    -1,    -1,   236,   237,   238,    -1,    -1,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,    -1,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
      -1,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,   406,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,    -1,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,   447,   448,    -1,   450,    -1,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
       3,     4,    -1,    -1,    -1,    -1,     9,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    -1,    47,    48,    49,    50,    51,    -1,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    -1,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    -1,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    -1,    97,    98,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,    -1,    -1,    -1,
     173,   174,   175,    -1,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,    -1,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,    -1,    -1,   221,    -1,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,    -1,
     233,    -1,    -1,   236,   237,   238,    -1,    -1,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,    -1,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
      -1,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,    -1,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,   447,   448,    -1,   450,    -1,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    -1,    47,    48,    49,    50,    51,    -1,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    -1,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    -1,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    -1,    97,    98,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,    -1,    -1,    -1,
     173,   174,   175,    -1,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,    -1,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,    -1,    -1,   221,    -1,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,    -1,
     233,    -1,    -1,   236,   237,   238,    -1,    -1,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,    -1,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
      -1,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,    -1,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,   447,   448,    -1,   450,    -1,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
       3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    -1,    47,    48,    49,    50,    51,    -1,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    -1,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    -1,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    -1,    97,    98,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,    -1,    -1,    -1,
     173,   174,   175,    -1,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,    -1,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,    -1,    -1,   221,    -1,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,    -1,
     233,    -1,    -1,   236,   237,   238,    -1,    -1,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,    -1,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
      -1,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,    -1,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,   447,   448,    -1,   450,    -1,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    -1,    47,    48,    49,    50,    51,    -1,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    -1,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    -1,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    -1,    97,    98,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,    -1,    -1,    -1,
     173,   174,   175,    -1,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,    -1,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,    -1,    -1,   221,    -1,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,    -1,
     233,    -1,    -1,   236,   237,   238,    -1,    -1,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,    -1,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
      -1,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,    -1,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,   447,   448,    -1,   450,    -1,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
       3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    -1,    47,    48,    49,    50,    51,    -1,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    -1,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    -1,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    -1,    97,    98,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,    -1,    -1,    -1,
     173,   174,   175,    -1,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,    -1,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,    -1,    -1,   221,    -1,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,    -1,
     233,    -1,    -1,   236,   237,   238,    -1,    -1,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,    -1,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
      -1,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,    -1,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,   447,   448,    -1,   450,    -1,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
       3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    -1,    47,    48,    49,    50,    51,    -1,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    -1,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    -1,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    -1,    97,    98,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,    -1,    -1,    -1,
     173,   174,   175,    -1,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,    -1,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,    -1,    -1,   221,    -1,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,    -1,
     233,    -1,    -1,   236,   237,   238,    -1,    -1,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,    -1,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
      -1,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,    -1,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,   447,   448,    -1,   450,    -1,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
       3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    -1,    47,    48,    49,    50,    51,    -1,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    -1,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    -1,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    -1,    97,    98,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,    -1,    -1,    -1,
     173,   174,   175,    -1,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,    -1,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,    -1,    -1,   221,    -1,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,    -1,
     233,    -1,    -1,   236,   237,   238,    -1,    -1,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,    -1,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
      -1,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,    -1,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,   447,   448,    -1,   450,    -1,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
       3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    -1,    47,    48,    49,    50,    51,    -1,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    -1,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    -1,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    -1,    97,    98,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,    -1,    -1,    -1,
     173,   174,   175,    -1,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,    -1,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,    -1,    -1,   221,    -1,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,    -1,
     233,    -1,    -1,   236,   237,   238,    -1,    -1,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,    -1,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
      -1,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,    -1,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,   447,   448,    -1,   450,    -1,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    -1,    47,    48,    49,    50,    51,    -1,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    -1,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    -1,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    -1,    97,    98,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,    -1,    -1,    -1,
     173,   174,   175,    -1,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,    -1,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,    -1,    -1,   221,    -1,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,    -1,
     233,    -1,    -1,   236,   237,   238,    -1,    -1,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,    -1,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
      -1,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,    -1,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,   447,   448,    -1,   450,    -1,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
       3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    -1,    47,    48,    49,    50,    51,    -1,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    -1,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    -1,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    -1,    97,    98,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,    -1,    -1,    -1,
     173,   174,   175,    -1,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,    -1,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,    -1,    -1,   221,    -1,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,    -1,
     233,    -1,    -1,   236,   237,   238,    -1,    -1,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,    -1,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
      -1,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,    -1,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,   447,   448,    -1,   450,    -1,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
       3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    -1,    47,    48,    49,    50,    51,    -1,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    -1,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    -1,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    -1,    97,    98,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,    -1,    -1,    -1,
     173,   174,   175,    -1,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,    -1,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,    -1,    -1,   221,    -1,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,    -1,
     233,    -1,    -1,   236,   237,   238,    -1,    -1,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,    -1,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
      -1,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,    -1,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,   447,   448,    -1,   450,    -1,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
       3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    -1,    47,    48,    49,    50,    51,    -1,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    -1,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    -1,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    -1,    97,    98,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,    -1,    -1,    -1,
     173,   174,   175,    -1,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,    -1,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,    -1,    -1,   221,    -1,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,    -1,
     233,    -1,    -1,   236,   237,   238,    -1,    -1,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,    -1,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
      -1,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,    -1,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,   447,   448,    -1,   450,    -1,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      -1,    -1,    -1,    -1,    -1,    38,    -1,    40,    41,    -1,
      43,    44,    45,    -1,    47,    48,    49,    50,    51,    -1,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    -1,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    -1,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    -1,    97,    98,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,    -1,    -1,    -1,
     173,   174,   175,    -1,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,    -1,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,    -1,    -1,   221,    -1,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,    -1,
     233,    -1,    -1,   236,   237,   238,    -1,    -1,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,    -1,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
      -1,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,    -1,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,   447,   448,    -1,   450,    -1,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      -1,    -1,    -1,    -1,    -1,    38,    -1,    40,    41,    -1,
      43,    44,    45,    -1,    47,    48,    49,    50,    51,    -1,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    -1,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    -1,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    -1,    97,    98,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,    -1,    -1,    -1,
     173,   174,   175,    -1,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,    -1,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,    -1,    -1,   221,    -1,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,    -1,
     233,    -1,    -1,   236,   237,   238,    -1,    -1,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,    -1,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
      -1,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,    -1,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,   447,   448,    -1,   450,    -1,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
       3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    -1,    47,    48,    49,    50,    51,    -1,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    -1,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    -1,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    -1,    97,    98,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,    -1,    -1,    -1,
     173,   174,   175,    -1,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,    -1,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,    -1,    -1,   221,    -1,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,    -1,
     233,    -1,    -1,   236,   237,   238,    -1,    -1,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,    -1,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
      -1,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,    -1,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,   447,   448,    -1,   450,    -1,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    -1,    47,    48,    49,    50,    51,    -1,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    -1,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    -1,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    -1,    97,    98,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,    -1,    -1,    -1,
     173,   174,   175,    -1,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,    -1,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,    -1,    -1,   221,    -1,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,    -1,
     233,    -1,    -1,   236,   237,   238,    -1,    -1,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,    -1,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
      -1,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,    -1,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,   447,   448,    -1,   450,    -1,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    -1,    47,    48,    49,    50,    51,    -1,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    -1,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    -1,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    -1,    97,    98,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,    -1,    -1,    -1,
     173,   174,   175,    -1,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,    -1,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,    -1,    -1,   221,    -1,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,    -1,
     233,    -1,    -1,   236,   237,   238,    -1,    -1,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,    -1,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
      -1,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,    -1,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,   447,   448,    -1,   450,    -1,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    -1,    47,    48,    49,    50,    51,    -1,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    -1,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    -1,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    -1,    97,    98,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,    -1,    -1,    -1,
     173,   174,   175,    -1,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,    -1,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,    -1,    -1,   221,    -1,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,    -1,
     233,    -1,    -1,   236,   237,   238,    -1,    -1,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,    -1,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
      -1,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,    -1,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,   447,   448,    -1,   450,    -1,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    -1,    47,    48,    49,    50,    51,    -1,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    -1,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    -1,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    -1,    97,    98,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,    -1,    -1,    -1,
     173,   174,   175,    -1,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,    -1,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,    -1,    -1,   221,    -1,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,    -1,
     233,    -1,    -1,   236,   237,   238,    -1,    -1,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,    -1,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
      -1,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,    -1,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,   447,   448,    -1,   450,    -1,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    -1,    47,    48,    49,    50,    51,    -1,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    -1,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    -1,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    -1,    97,    98,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,    -1,    -1,    -1,
     173,   174,   175,    -1,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,    -1,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,    -1,    -1,   221,    -1,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,    -1,
     233,    -1,    -1,   236,   237,   238,    -1,    -1,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,    -1,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
      -1,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,    -1,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,   447,   448,    -1,   450,    -1,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    -1,    47,    48,    49,    50,    51,    -1,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    -1,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    -1,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    -1,    97,    98,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,    -1,    -1,    -1,
     173,   174,   175,    -1,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,    -1,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,    -1,    -1,   221,    -1,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,    -1,
     233,    -1,    -1,   236,   237,   238,    -1,    -1,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,    -1,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
      -1,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,    -1,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,   447,   448,    -1,   450,    -1,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    -1,    47,    48,    49,    50,    51,    -1,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    -1,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    -1,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    -1,    97,    98,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,    -1,    -1,    -1,
     173,   174,   175,    -1,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,    -1,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,    -1,    -1,   221,    -1,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,    -1,
     233,    -1,    -1,   236,   237,   238,    -1,    -1,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,    -1,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
      -1,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,    -1,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,   447,   448,    -1,   450,    -1,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    -1,    47,    48,    49,    50,    51,    -1,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    -1,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    -1,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    -1,    97,    98,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,    -1,    -1,    -1,
     173,   174,   175,    -1,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,    -1,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,    -1,    -1,   221,    -1,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,    -1,
     233,    -1,    -1,   236,   237,   238,    -1,    -1,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,    -1,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
      -1,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,    -1,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,   447,   448,    -1,   450,    -1,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      -1,    -1,    -1,    -1,    -1,    38,    -1,    40,    41,    -1,
      43,    44,    45,    -1,    47,    48,    49,    50,    51,    -1,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    -1,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    -1,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    -1,    97,    98,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,    -1,    -1,    -1,
     173,   174,   175,    -1,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,    -1,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,    -1,    -1,   221,    -1,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,    -1,
     233,    -1,    -1,   236,   237,   238,    -1,    -1,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,    -1,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
      -1,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,    -1,    -1,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,    -1,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,   447,   448,    -1,   450,    -1,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    -1,    47,    48,    49,    50,    51,    -1,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    -1,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    -1,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    -1,    97,    98,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,    -1,    -1,    -1,
     173,   174,   175,    -1,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,    -1,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,    -1,    -1,   221,    -1,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,    -1,
     233,    -1,    -1,   236,   237,   238,    -1,    -1,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,    -1,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
      -1,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,    -1,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,   447,   448,    -1,   450,    -1,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    -1,    47,    48,    49,    50,    51,    -1,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    -1,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    -1,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    -1,    97,    98,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,    -1,    -1,    -1,
     173,   174,   175,    -1,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,    -1,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,    -1,    -1,   221,    -1,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,    -1,
     233,    -1,    -1,   236,   237,   238,    -1,    -1,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,    -1,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
      -1,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,    -1,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,   447,   448,    -1,   450,    -1,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    -1,    47,    48,    49,    50,    51,    -1,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    -1,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    -1,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    -1,    97,    98,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,    -1,    -1,    -1,
     173,   174,   175,    -1,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,    -1,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,    -1,    -1,   221,    -1,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,    -1,
     233,    -1,    -1,   236,   237,   238,    -1,    -1,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,    -1,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
      -1,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,    -1,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,   447,   448,    -1,   450,    -1,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    -1,    47,    48,    49,    50,    51,    -1,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    -1,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    74,    -1,    -1,    -1,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    -1,    97,    98,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,    -1,    -1,    -1,
     173,   174,   175,    -1,   177,    -1,   179,    -1,   181,   182,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,    -1,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,    -1,    -1,   221,    -1,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,    -1,
     233,    -1,    -1,   236,   237,   238,    -1,    -1,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,    -1,   267,   268,   269,   270,   271,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,   295,    -1,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
      -1,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,    -1,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,    -1,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,   447,   448,    -1,   450,    -1,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      -1,    -1,    -1,    -1,    -1,    38,    -1,    40,    41,    -1,
      43,    44,    45,    46,    47,    48,    49,    -1,    51,    52,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    -1,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    -1,    -1,    76,    -1,    78,    79,    80,    81,    82,
      83,    84,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    99,    -1,    -1,    -1,
     103,    -1,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,    -1,
     153,   154,   155,   156,   157,    -1,    -1,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,   170,    -1,   172,
     173,   174,   175,   176,   177,    -1,   179,    -1,    -1,    -1,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,   232,
     233,   234,    -1,   236,   237,   238,    -1,    -1,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,    -1,    -1,
     273,   274,   275,   276,    -1,    -1,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,    -1,   296,   297,   298,    -1,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
      -1,   314,   315,    -1,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,    -1,   402,
      -1,   404,   405,    -1,   407,   408,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,    -1,   422,
      -1,    -1,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,    -1,   450,   451,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   479,   480,   481,   482,
      -1,    -1,    -1,    21,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    -1,    43,    44,    45,    -1,    47,
      48,    49,    50,    51,    -1,    53,    54,    -1,    56,    57,
      58,    59,    60,    61,    -1,    -1,    64,    65,    66,    67,
      68,    -1,    70,    71,    72,    73,    74,    -1,    -1,    -1,
      78,    79,    80,    81,    82,    83,    -1,    85,    86,    87,
      -1,    89,    90,    91,    92,    93,    94,    -1,    -1,    97,
      98,    99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,    -1,   120,   121,   122,   123,   124,   125,    -1,   127,
     128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,    -1,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,    -1,   160,    -1,   162,   163,   164,   165,    -1,   167,
      -1,   169,    -1,    -1,    -1,   173,   174,   175,    -1,   177,
      -1,   179,    -1,   181,   182,   183,    -1,   185,   186,   187,
     188,   189,   190,   191,    -1,   193,   194,   195,   196,    -1,
     198,   199,   200,   201,   202,   203,    -1,   205,    -1,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,   216,    -1,
     218,    -1,    -1,   221,    -1,   223,   224,   225,   226,   227,
     228,    -1,    -1,   231,    -1,   233,    -1,    -1,   236,   237,
     238,    -1,    -1,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,    -1,   267,
     268,   269,   270,   271,    -1,   273,   274,    -1,   276,    -1,
     278,   279,   280,   281,   282,   283,    -1,   285,   286,    -1,
      -1,   289,   290,   291,    -1,    -1,   294,   295,    -1,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,    -1,   307,
     308,   309,    -1,   311,   312,   313,   314,   315,   316,   317,
     318,   319,    -1,   321,   322,   323,   324,   325,   326,    -1,
     328,    -1,   330,   331,   332,   333,   334,   335,    -1,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,    -1,   351,   352,    -1,   354,   355,   356,   357,
      -1,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,   380,    -1,   382,   383,   384,   385,    -1,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,    -1,   404,   405,    -1,   407,
      -1,   409,   410,   411,   412,   413,    -1,   415,   416,    -1,
      -1,   419,   420,   421,   422,   423,    -1,   425,   426,   427,
     428,   429,   430,   431,   432,    -1,    -1,   435,   436,   437,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,   447,
     448,    -1,   450,    -1,   452,   453,   454,   455,   456,    -1,
      -1,   459,    -1,    -1,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    21,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    -1,    43,    44,    45,    46,    47,
      48,    49,    -1,    51,    52,    53,    54,    -1,    56,    57,
      58,    59,    60,    61,    -1,    -1,    64,    65,    66,    67,
      68,    -1,    70,    71,    72,    73,    -1,    -1,    76,    -1,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
      -1,    89,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    99,    -1,    -1,    -1,   103,    -1,    -1,    -1,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,    -1,   120,   121,   122,   123,   124,   125,    -1,   127,
     128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,    -1,
     148,   149,   150,   151,    -1,   153,   154,   155,   156,   157,
      -1,    -1,   160,    -1,   162,   163,   164,   165,    -1,   167,
      -1,   169,   170,    -1,   172,   173,   174,    -1,   176,   177,
      -1,   179,    -1,    -1,    -1,   183,    -1,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,    -1,
     198,   199,   200,   201,   202,   203,    -1,   205,   206,    -1,
     208,   209,   210,   211,   212,   213,   214,    -1,   216,    -1,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,    -1,    -1,   231,   232,   233,   234,    -1,   236,   237,
     238,    -1,    -1,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,    -1,    -1,   273,   274,   275,   276,    -1,
      -1,   279,   280,   281,   282,   283,    -1,   285,   286,    -1,
      -1,   289,   290,   291,    -1,    -1,   294,    -1,   296,   297,
     298,    -1,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,    -1,   311,   312,    -1,   314,   315,    -1,   317,
     318,   319,    -1,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,    -1,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,    -1,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,    -1,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,    -1,   402,    -1,   404,   405,    -1,   407,
     408,   409,   410,   411,   412,   413,    -1,   415,   416,    -1,
      -1,   419,   420,    -1,   422,    -1,    -1,   425,   426,   427,
     428,   429,   430,   431,   432,    -1,    -1,   435,   436,   437,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,    -1,   450,   451,   452,   453,   454,   455,   456,    -1,
      -1,   459,    -1,    -1,   462,   463,   464,   465,   466,   467,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   479,   480,   481,   482,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    46,    47,    48,    49,    -1,    51,    52,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    -1,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    -1,    -1,    76,    -1,    78,    79,    80,    81,    82,
      83,    84,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    99,    -1,    -1,    -1,
     103,    -1,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,    -1,
     153,   154,   155,   156,   157,    -1,    -1,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,   170,    -1,   172,
     173,   174,    -1,   176,   177,    -1,   179,    -1,    -1,    -1,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,   232,
     233,   234,    -1,   236,   237,   238,    -1,    -1,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,    -1,    -1,
     273,   274,   275,   276,    -1,    -1,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,    -1,   296,   297,   298,    -1,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
      -1,   314,   315,    -1,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,    -1,   402,
      -1,   404,   405,    -1,   407,   408,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,    -1,   422,
      -1,    -1,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,    -1,   450,   451,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   479,   480,   481,   482,
      -1,    -1,    -1,    21,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    -1,    43,    44,    45,    46,    47,
      48,    49,    -1,    51,    52,    53,    54,    -1,    56,    57,
      58,    59,    60,    61,    -1,    -1,    64,    65,    66,    67,
      68,    -1,    70,    71,    72,    73,    -1,    -1,    76,    -1,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
      -1,    89,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    99,    -1,    -1,    -1,   103,    -1,    -1,    -1,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,    -1,   120,   121,   122,   123,   124,   125,    -1,   127,
     128,   129,   130,   131,    -1,    -1,   134,   135,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,    -1,
     148,   149,   150,   151,    -1,   153,   154,   155,   156,   157,
      -1,    -1,   160,    -1,   162,   163,   164,   165,    -1,   167,
      -1,   169,   170,    -1,   172,   173,   174,   175,   176,   177,
      -1,   179,    -1,    -1,    -1,   183,    -1,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,    -1,
     198,   199,   200,   201,   202,   203,    -1,   205,   206,    -1,
     208,   209,   210,   211,   212,   213,   214,    -1,   216,    -1,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,    -1,    -1,   231,   232,   233,   234,    -1,   236,   237,
     238,    -1,    -1,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,    -1,    -1,   273,   274,   275,   276,    -1,
      -1,   279,   280,   281,   282,   283,    -1,   285,   286,    -1,
      -1,   289,   290,   291,    -1,    -1,   294,    -1,   296,   297,
     298,    -1,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,    -1,   311,   312,    -1,   314,   315,    -1,   317,
     318,   319,    -1,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,    -1,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,    -1,   351,   352,   353,   354,   355,   356,    -1,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,   373,   374,    -1,   376,    -1,
     378,   379,   380,   381,   382,   383,   384,   385,    -1,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,    -1,   402,    -1,   404,   405,    -1,   407,
     408,   409,   410,   411,   412,   413,    -1,   415,   416,    -1,
      -1,   419,   420,    -1,   422,    -1,    -1,   425,   426,   427,
     428,   429,   430,   431,   432,    -1,    -1,   435,   436,   437,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,    -1,   450,   451,   452,   453,   454,   455,   456,    -1,
      -1,   459,    -1,    -1,   462,   463,   464,   465,   466,   467,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   479,   480,   481,   482,    -1,    -1,    -1,    21,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    31,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    -1,
      43,    44,    45,    46,    47,    48,    49,    -1,    51,    52,
      53,    54,    -1,    56,    57,    58,    59,    60,    61,    -1,
      -1,    64,    65,    66,    67,    68,    -1,    70,    71,    72,
      73,    -1,    -1,    76,    -1,    78,    79,    80,    81,    82,
      83,    84,    85,    86,    87,    -1,    89,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    99,    -1,    -1,    -1,
     103,    -1,    -1,    -1,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,    -1,   120,   121,   122,
     123,   124,   125,    -1,   127,   128,   129,   130,   131,    -1,
      -1,   134,   135,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,    -1,   148,   149,   150,   151,    -1,
     153,   154,   155,   156,   157,    -1,    -1,   160,    -1,   162,
     163,   164,   165,    -1,   167,    -1,   169,   170,    -1,   172,
     173,   174,    -1,   176,   177,    -1,   179,    -1,    -1,    -1,
     183,    -1,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,    -1,   205,   206,    -1,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,    -1,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,    -1,    -1,   231,   232,
     233,   234,    -1,   236,   237,   238,    -1,    -1,   241,   242,
     243,   244,   245,    -1,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,    -1,    -1,
     273,   274,   275,   276,    -1,    -1,   279,   280,   281,   282,
     283,    -1,   285,   286,    -1,    -1,   289,   290,   291,    -1,
      -1,   294,    -1,   296,   297,   298,    -1,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
      -1,   314,   315,    -1,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    -1,   351,   352,
     353,   354,   355,   356,    -1,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,   374,    -1,   376,    -1,   378,   379,   380,   381,   382,
     383,   384,   385,    -1,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,    -1,   400,    -1,   402,
      -1,   404,   405,    -1,   407,   408,   409,   410,   411,   412,
     413,    -1,   415,   416,    -1,    -1,   419,   420,    -1,   422,
      -1,    -1,   425,   426,   427,   428,   429,   430,   431,   432,
      -1,    -1,   435,   436,   437,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,    -1,   450,   451,   452,
     453,   454,   455,   456,    -1,    -1,   459,    -1,    -1,   462,
     463,   464,   465,   466,   467,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   479,   480,   481,   482
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    21,    31,    33,    34,    49,    58,    70,    81,    93,
      95,   113,   127,   137,   143,   151,   153,   154,   167,   196,
     211,   237,   314,   317,   346,   355,   369,   376,   380,   390,
     402,   406,   442,   447,   461,   485,   499,   510,   511,   512,
     513,   524,   525,   527,   531,   546,   549,   550,   552,   554,
     561,   563,   611,   618,   621,   622,   639,   640,   641,   642,
     643,   644,   695,   696,   841,   844,   847,   854,   855,   856,
     857,   858,   865,   869,   875,   877,   882,   886,   887,   890,
     891,   893,   894,   896,   419,   464,   562,   200,   362,   370,
     406,   453,   562,     3,    21,    22,    23,    24,    25,    26,
      27,    28,    30,    31,    32,    40,    41,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    53,    54,    56,
      57,    58,    59,    60,    61,    64,    65,    66,    67,    68,
      70,    71,    72,    73,    74,    76,    78,    79,    80,    81,
      82,    83,    84,    85,    86,    87,    89,    90,    91,    92,
      93,    94,    96,    97,    98,    99,   103,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,   118,   120,   121,
     122,   123,   124,   125,   127,   128,   129,   130,   131,   134,
     135,   136,   137,   138,   140,   141,   142,   144,   145,   146,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   160,   162,   163,   164,   165,   167,   169,   170,   172,
     173,   174,   175,   176,   177,   179,   181,   182,   183,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   198,   199,   200,   201,   202,   203,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,   216,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   231,
     232,   233,   234,   236,   237,   238,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   273,   274,   275,
     276,   278,   279,   280,   281,   282,   283,   285,   286,   289,
     290,   291,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   321,   322,   323,
     324,   325,   326,   328,   329,   330,   331,   332,   333,   334,
     335,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   370,   371,   372,   373,   374,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   404,   405,   407,   408,   409,   410,   411,
     412,   413,   415,   416,   419,   420,   421,   422,   423,   425,
     426,   427,   428,   429,   430,   431,   432,   435,   436,   437,
     438,   439,   442,   443,   444,   445,   446,   447,   448,   450,
     451,   452,   453,   454,   455,   456,   459,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   754,   826,
     830,   833,   899,   900,   901,   562,    52,   499,   634,   177,
     238,   292,   362,   410,   412,   428,   434,   437,   609,   853,
       3,    29,   175,   246,   317,   399,   824,   830,   899,    23,
      76,    92,   146,   156,   168,   173,   200,   245,   249,   312,
     326,   359,   362,   370,   373,   392,   406,   413,   422,   428,
     453,   612,   613,   616,   562,   824,    95,   451,   499,   527,
     621,   639,   861,   865,   882,   896,   110,    70,   211,   110,
       5,   829,   830,   876,   876,   830,   824,    29,   415,   419,
     830,   888,   889,   892,   562,    29,   132,   651,   652,   177,
     238,   362,   374,   415,   870,   871,   892,   562,   447,   639,
     644,   892,     5,   288,   708,   821,   830,   831,   172,   499,
     879,   499,   334,   645,   646,   824,   645,   640,   641,     0,
     502,   122,   210,   439,   147,   215,   293,   433,   654,   655,
     640,   642,   643,   503,   451,   859,    29,   415,   419,   639,
     892,   190,   821,   824,   190,   821,   190,   708,   190,   821,
     499,   497,   501,   805,   807,   527,   621,   639,   843,   882,
     821,   410,   412,   410,   412,   344,   190,   830,   830,   835,
     173,   245,   334,   370,   406,   453,   619,   200,    29,   824,
     251,   422,   109,   406,   406,   453,   365,     3,    46,    51,
      52,    53,    54,    66,    67,    76,    84,    96,   103,   114,
     115,   136,   164,   170,   172,   176,   190,   192,   206,   213,
     214,   216,   219,   220,   222,   232,   234,   246,   265,   266,
     267,   275,   280,   296,   298,   331,   353,   357,   377,   381,
     384,   399,   408,   415,   416,   427,   448,   451,   617,   719,
     721,   723,   725,   727,   729,   731,   732,   733,   735,   736,
     737,   739,   740,   834,   899,   902,   190,   614,   835,   190,
     822,   824,   190,   824,   499,   553,   292,   609,   861,     3,
      50,    51,    53,    54,    66,    67,    74,   114,   115,   152,
     158,   164,   175,   181,   182,   207,   213,   214,   216,   246,
     265,   267,   271,   278,   280,   295,   299,   313,   316,   331,
     357,   377,   384,   399,   401,   415,   416,   421,   423,   427,
     447,   448,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   862,   864,   865,   867,   868,   899,   903,
     859,   829,   876,   829,   488,   499,   499,   842,   482,   221,
     501,   287,     4,     6,     7,     8,     9,    10,    37,    51,
      53,    54,    62,    63,    66,    67,    74,    76,   100,   101,
     102,   103,   104,   105,   106,   114,   115,   117,   152,   158,
     159,   164,   181,   182,   213,   214,   216,   239,   240,   265,
     267,   272,   277,   278,   280,   289,   299,   313,   331,   357,
     375,   384,   401,   415,   416,   421,   423,   424,   427,   440,
     448,   483,   490,   491,   492,   497,   499,   504,   506,   507,
     640,   685,   724,   727,   730,   731,   732,   734,   735,   736,
     739,   740,   751,   753,   754,   755,   757,   771,   772,   779,
     799,   804,   811,   812,   813,   826,   827,   828,   829,   830,
     810,   812,   870,   870,   829,   870,   482,   171,   417,   488,
     499,   821,   492,   807,     3,   170,   172,   451,   865,   878,
     880,   170,   881,   751,   783,   784,   830,   645,   503,   499,
     837,   500,   500,   512,   171,   217,   708,   883,    29,   132,
     650,   650,    56,   650,   161,   166,   235,   284,   660,   662,
     663,   688,   690,   691,   692,   654,   655,   499,   821,   482,
     221,   152,    25,    31,   137,   291,   342,   346,   376,   444,
     518,   521,   522,   342,   152,    38,    57,   108,   199,   250,
     258,   270,   301,   342,   348,   370,   376,   390,   521,   555,
     558,   152,   342,   376,   521,   152,   342,   376,   521,     3,
      29,    46,    52,    76,    84,    96,   103,   132,   170,   172,
     175,   176,   192,   206,   219,   220,   222,   232,   234,   246,
     266,   275,   296,   298,   353,   381,   399,   408,   427,   449,
     451,   492,   500,   751,   786,   787,   832,   838,   899,   904,
     751,   806,     3,    29,    33,    34,    35,    36,    37,    38,
      39,    42,    55,    62,    63,    69,    75,    77,    88,    95,
     100,   101,   102,   104,   105,   106,   117,   119,   126,   132,
     133,   139,   143,   147,   159,   161,   166,   168,   171,   178,
     180,   184,   197,   204,   215,   217,   229,   230,   235,   239,
     240,   272,   277,   284,   287,   288,   292,   293,   310,   320,
     327,   336,   350,   369,   375,   386,   403,   406,   414,   417,
     418,   424,   433,   434,   440,   441,   447,   449,   457,   458,
     460,   461,   825,   839,   899,   903,   905,   805,   500,   499,
     598,   609,   272,   845,   501,   836,    38,   453,   190,   821,
     190,   821,   898,   821,   821,    84,   850,   465,    85,   129,
     304,   411,   450,   738,   738,   738,   499,   726,   726,   316,
     499,   728,   152,   499,    66,    67,   738,   726,   723,   463,
     485,   499,   741,   499,   741,    60,   349,   503,   615,   499,
      37,   722,   499,   111,   112,   187,   188,   252,   253,   254,
     255,   256,   257,   260,   261,   366,   367,   479,   480,   499,
     742,   743,   744,   745,   746,   747,   748,   749,   750,   726,
     152,   503,   615,   152,   503,   615,   152,   287,   784,   344,
     406,   500,   503,     4,   159,   287,   424,   490,   491,   557,
     560,   828,   829,   860,   862,   863,   866,   861,   499,   629,
     633,   557,   866,   872,   874,   786,   721,   788,    38,   233,
     830,   499,   808,   497,   751,   803,   499,   499,   166,   499,
     499,   640,   499,   499,   499,   751,   499,   499,   499,   499,
     499,   499,   499,   499,   499,   751,   751,   751,   148,   814,
     815,   784,   785,   640,   751,   783,   773,   774,   775,   830,
     831,     9,   808,   807,   499,   829,   499,   828,   829,     3,
       8,    11,    15,    16,    17,    18,    19,    20,    35,    38,
      43,    50,    75,   176,   192,   197,   219,   220,   234,   272,
     275,   289,   292,   381,   483,   486,   487,   488,   490,   491,
     492,   493,   494,   495,   777,   778,   779,   781,   462,   758,
     808,   298,   751,   503,   217,   647,   499,   829,   808,   501,
     807,   647,     3,   117,   238,   557,   740,   829,   873,    99,
     117,   874,   117,   874,   821,   500,   503,   859,   503,   500,
     646,   822,    38,   883,   529,   821,    38,   830,   376,   642,
     642,    29,   492,   656,   657,   751,   642,   163,   269,   676,
     224,   270,   330,   379,   439,     4,     9,    29,   671,   751,
     490,   491,   672,   673,   751,   753,   688,   689,   663,   662,
     660,   661,   166,   691,   282,   693,   660,   688,   784,   837,
     233,   821,    69,    77,    88,   168,   190,   320,   434,   580,
     590,   605,   830,    77,    88,   526,    88,   526,   499,   417,
     499,   578,   244,   437,   578,    88,   503,   417,   821,   723,
     557,    56,   559,   557,   557,   108,   250,   258,    56,   417,
     461,   485,   556,   263,   362,   556,   558,   708,    88,   417,
     526,   362,   821,   417,   362,   786,   786,   787,   500,   503,
     654,   655,    13,    14,   498,   508,   417,   597,   602,   830,
     461,   632,   334,   406,   453,   152,    95,   550,   563,   846,
     847,   894,   825,   501,   136,   144,   724,   821,   272,   551,
     555,   272,   499,   598,    38,   598,   499,   620,   190,   592,
     830,   851,   499,   784,   828,   617,   788,   738,   738,    37,
     722,   415,   415,   828,   828,   721,   718,   830,   497,   497,
     828,   828,   417,   417,   417,   417,   614,   835,   822,   824,
     824,   835,   500,   609,   190,   821,   898,   861,   867,     4,
     828,     4,   828,   631,   638,   839,    52,    97,   123,   141,
     145,   167,   170,   185,   277,   285,   328,   635,   503,   500,
     503,   500,   503,   843,   784,   805,   785,   457,   800,   801,
     751,   784,   499,   828,   828,     3,   742,   743,   744,   745,
     746,   747,   748,   749,   789,   790,   829,   828,   828,   751,
       8,    15,    18,    19,    20,   486,   487,   488,   490,   491,
     492,   493,   494,   495,   777,   782,   830,   751,   791,   490,
     491,   499,   752,   753,   779,   793,   500,   784,   751,   783,
     794,   751,    55,   171,   230,   418,   751,   784,   797,   751,
     499,   830,   344,   819,   498,   500,   503,   503,   505,   508,
     784,   751,   750,   750,   721,   751,   751,   751,   751,   751,
     751,   751,     5,   839,   840,   415,    42,   403,   809,   835,
     751,   751,   499,   640,   798,   132,   159,   272,   277,   282,
     424,   435,   751,   277,   499,   751,   417,    50,   176,   192,
     197,   234,   381,   751,   751,   751,   751,   751,   751,   751,
     751,   751,   751,    29,    36,   386,   776,   180,   162,   759,
     357,   499,   772,   813,   177,   238,   406,   410,   412,   437,
     648,   821,   171,   697,   786,   492,   697,   499,   829,   500,
     821,   878,   821,   886,   751,   500,   499,   441,   885,   117,
     300,   499,   528,   639,    38,   830,   499,   533,   542,   543,
     545,   830,    39,   126,   658,   658,   503,   441,   658,   357,
     358,   490,   491,   673,   675,   753,   379,   224,   288,   309,
     309,   503,   494,     4,   674,   828,   674,   357,   358,   675,
     820,   821,   276,   383,   694,   689,   661,   500,   342,   521,
     499,   190,   590,   824,   224,   272,   224,   441,   499,   583,
     720,   721,   824,   830,   190,   824,   190,   830,    25,   137,
     376,   517,   520,   574,   588,   839,   824,   582,   601,   839,
     824,   518,   824,   342,   376,   521,   555,   557,   835,   824,
     557,   835,   824,   557,   342,   376,   521,   824,   824,   824,
     824,   342,   376,   521,   824,   824,   654,   654,   654,   449,
     787,   191,   347,   653,   751,   751,   751,   806,   325,   628,
     500,   503,   285,   171,   417,   623,   453,   821,   898,   821,
     830,   292,   609,   825,   499,   499,   152,   152,   234,   580,
     590,   593,   596,   606,   608,   830,   461,   463,   585,   151,
     639,   461,   852,   500,   786,    38,   272,   287,   784,   500,
     500,   615,   500,   497,   482,   482,   500,   500,   500,   503,
     721,   828,   498,   828,   500,   500,   743,   745,   746,   747,
     746,   747,   747,   615,   615,   287,   615,   406,   272,    38,
     500,   503,   492,   499,   557,   630,   866,    38,   627,   829,
     627,   272,   277,   328,   627,   627,   872,   721,   500,   498,
     751,   139,   801,   802,    38,   500,   751,   500,   500,   500,
     171,   500,   500,   503,   500,   501,   310,   792,   500,   752,
     752,   751,    11,    15,    18,    19,    20,   197,   219,   289,
     486,   487,   488,   490,   491,   492,   493,   494,   495,   779,
     752,   500,   500,   166,   171,   795,   796,   503,   500,    38,
     797,   784,   797,   797,   171,   500,    38,   822,   823,   499,
     751,   816,   808,   751,   773,   751,   500,   500,   482,   752,
     752,   145,   784,   171,   132,   159,   277,   282,   424,   435,
     499,   145,   782,   751,   403,   809,   751,   798,   751,   417,
     499,   640,   499,   499,   155,   760,   410,   412,   410,   412,
     821,   406,   649,   649,   649,   229,   358,   499,   640,   698,
     699,   700,   701,   708,   709,   754,   756,   757,   830,   458,
     714,   654,   815,   714,   828,   750,   837,   843,   699,   458,
     884,   447,   405,   440,   537,   532,   541,   830,   287,   534,
     830,   538,   545,   503,   697,   488,   808,   484,   659,   659,
     657,   289,   777,   780,   659,     4,   828,   675,   288,   439,
     672,   503,   243,   417,   751,   272,   605,   499,   152,   499,
     583,   200,   602,   603,   564,    38,   175,   573,   599,   564,
      25,   137,   346,   348,   376,   514,   515,   516,   522,   523,
     152,   615,   152,   615,   574,   588,   574,   500,   503,   567,
     829,   500,   503,   488,   501,   417,   362,    88,   417,   526,
     362,   417,   417,   417,   362,   653,   653,   653,   787,   279,
     279,   500,   498,   393,   394,   637,   829,   597,   628,   821,
     499,    38,   598,   845,   344,   406,   547,   548,   829,   602,
     821,   821,   898,   821,   500,   503,   285,   578,   285,   287,
     577,   824,   461,   897,   578,    38,   500,   406,   751,   152,
     821,   500,   722,   828,   741,   741,   722,   830,   498,   498,
     835,   152,   631,   625,   636,   866,   829,   829,   277,   602,
     492,   602,   829,   829,   414,   751,   143,   721,   500,   751,
     751,   782,   751,   795,   721,   752,   752,   752,   752,   752,
     132,   272,   282,   752,   752,   752,   752,   752,   752,   752,
     752,   752,   752,   751,   751,   796,   795,   721,   500,   500,
     500,   784,   721,   503,   500,   751,   816,   817,   818,    38,
     500,   750,   751,    35,    35,   751,   500,   751,   171,   499,
     788,   751,   500,   145,   752,   752,   145,   145,   751,   751,
     655,   458,   297,   764,   649,   649,   649,   649,   821,   821,
     821,   640,   709,   171,   640,   700,   701,    38,   702,   703,
     830,   503,    96,   172,   206,   222,   232,   266,   353,   705,
     703,    38,   702,   704,   830,   485,   713,   807,   751,   180,
     677,   653,   819,   677,   500,   500,   751,   350,   536,   446,
     500,   503,   808,    86,   536,   500,   503,   533,   884,   751,
     163,   228,   499,   659,   288,   821,   824,   500,   152,   603,
     590,   603,   564,   592,   503,   500,   119,   204,   270,   272,
     589,   499,    32,    56,   610,   599,    69,    75,    88,   117,
     119,   204,   272,   277,   320,   336,   434,   441,   569,   570,
     584,   175,   117,   189,   272,   578,   556,   109,   117,   175,
     272,   392,   395,   558,   578,   376,   516,   428,   824,   830,
     520,   601,     3,    46,    52,    76,    84,    96,   103,   170,
     172,   175,   176,   192,   206,   219,   220,   222,   232,   234,
     246,   266,   271,   275,   289,   296,   298,   353,   377,   381,
     399,   408,   427,   451,   490,   491,   557,   565,   604,   721,
     780,   829,   832,   899,   905,   839,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   500,   500,   500,   654,
     556,   637,   499,   596,   639,   852,   609,   190,   821,   500,
     503,   500,   551,   499,    38,   587,   585,   593,    81,   553,
     109,   270,   639,   639,   592,   441,   849,   498,   721,   615,
     898,   500,   503,   602,   751,   500,   500,   796,   171,   132,
     282,   499,   500,   500,   503,   500,   830,   751,   751,   751,
     788,   500,   751,    35,    35,   751,   751,   145,   500,   500,
     751,   499,   765,   830,   821,   821,   821,   821,   703,   704,
     499,   500,   830,   831,   408,   668,   669,   499,   700,   222,
     296,   706,   700,   706,   222,   705,   706,   222,   669,   499,
     830,   669,   499,   294,    56,   184,   686,   500,   686,   829,
     811,   639,   300,   639,   532,   287,   499,   530,   488,   545,
     536,   782,   564,   590,   500,   500,   461,   595,   120,   193,
     202,   119,   443,   751,   117,    38,   499,   835,   824,   752,
     120,   193,   119,   277,   224,   821,   595,    83,   610,   190,
     277,   557,   751,   610,   277,   490,   491,   560,   830,   721,
     615,   615,   246,   399,   832,   836,   488,   417,   417,   653,
     629,   441,   624,   626,   602,   500,   897,    38,   406,   272,
     499,   829,   852,   596,   151,   639,   149,   198,   577,   122,
     137,   319,   897,   109,   461,   895,   287,   830,   848,   499,
      38,   636,   752,   171,   499,   788,   816,   500,   751,   751,
     751,   500,   766,   830,   710,   711,   756,   702,   499,     4,
       9,   664,   666,   667,   830,   823,   700,   287,   441,   707,
     700,   222,   700,   715,   716,   830,   499,   715,   830,    29,
      98,   181,   356,   492,   499,   678,   679,   680,   681,   682,
     683,   684,   751,   751,   460,   761,   829,   761,   503,   537,
      88,   499,   535,   544,   756,   830,   133,   751,   500,   336,
     595,   499,   586,   564,   500,   189,   499,   751,   272,   570,
     595,   598,   824,    38,   152,    75,   717,   836,   494,   565,
     824,   824,   500,   556,   124,   500,   585,   639,   821,   152,
      38,   500,   824,   897,    29,    80,    89,   118,   189,   201,
     392,   395,   581,   581,   358,   358,    61,    69,   238,   821,
     544,   752,   788,   500,   306,   767,   500,   503,    38,   712,
     823,   309,   494,   309,   358,   494,   499,   499,   500,   751,
     499,   700,   707,   500,   503,   721,   715,   500,   499,   378,
     499,   500,   503,   762,   763,   830,   327,   687,   687,   446,
     824,   751,   500,   503,    75,   539,   539,   273,   439,   821,
     564,   591,   594,   839,   396,   455,   571,   572,   499,   566,
     751,   500,   248,   607,   189,   835,   441,   519,   494,   428,
     629,   829,   852,   577,   895,   499,   821,   639,   585,   553,
      69,   290,    69,   849,   500,   500,    56,   654,   713,   710,
     499,   500,   830,   664,   823,   716,   717,   500,   784,   499,
     784,   680,   503,    38,   751,   441,   665,   665,   639,   500,
     714,   535,   835,   540,   835,   540,   376,   598,   500,   503,
     488,   555,   500,   270,   579,   172,   305,   382,   287,   575,
     576,   600,   566,   751,   428,    38,   499,   895,   577,   897,
     290,   290,   499,   852,   783,   329,   358,   768,   715,   500,
     503,   500,   500,   500,   679,   500,   763,   765,   360,   539,
     658,   658,   543,   607,   594,   565,   500,   572,   202,   122,
     439,   287,   600,   287,   575,   639,   544,   714,    50,    99,
     430,   751,   769,   770,   769,   500,   500,     9,   343,   670,
     500,   667,   540,   659,   659,   714,   576,    60,   270,   349,
     376,   568,   568,   895,   500,   770,   357,   165,   315,   165,
     315,   500,   499,   658,   564,    24,   117,   277,   852,    35,
       9,   659,   714,   770,   500
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */

#define YYFAIL		goto yyerrlab

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)					\
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    {								\
      yychar = (Token);						\
      yylval = (Value);						\
      yytoken = YYTRANSLATE (yychar);				\
      YYPOPSTACK (1);						\
      goto yybackup;						\
    }								\
  else								\
    {								\
      yyerror (&yylloc, yyscanner, YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (YYID (0))


#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#define YYRHSLOC(Rhs, K) ((Rhs)[K])
#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)				\
    do									\
      if (YYID (N))                                                    \
	{								\
	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
	}								\
      else								\
	{								\
	  (Current).first_line   = (Current).last_line   =		\
	    YYRHSLOC (Rhs, 0).last_line;				\
	  (Current).first_column = (Current).last_column =		\
	    YYRHSLOC (Rhs, 0).last_column;				\
	}								\
    while (YYID (0))
#endif


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
#  define YY_LOCATION_PRINT(File, Loc)			\
     fprintf (File, "%d.%d-%d.%d",			\
	      (Loc).first_line, (Loc).first_column,	\
	      (Loc).last_line,  (Loc).last_column)
# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */

#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, &yylloc, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval, &yylloc, yyscanner)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (YYID (0))

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
do {									  \
  if (yydebug)								  \
    {									  \
      YYFPRINTF (stderr, "%s ", Title);					  \
      yy_symbol_print (stderr,						  \
		  Type, Value, Location, yyscanner); \
      YYFPRINTF (stderr, "\n");						  \
    }									  \
} while (YYID (0))


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (!yyvaluep)
    return;
  YYUSE (yylocationp);
  YYUSE (yyscanner);
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# else
  YYUSE (yyoutput);
# endif
  switch (yytype)
    {
      default:
	break;
    }
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
#else
static void
yy_stack_print (bottom, top)
    yytype_int16 *bottom;
    yytype_int16 *top;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (; bottom <= top; ++bottom)
    YYFPRINTF (stderr, " %d", *bottom);
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (YYID (0))


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_reduce_print (YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, core_yyscan_t yyscanner)
#else
static void
yy_reduce_print (yyvsp, yylsp, yyrule, yyscanner)
    YYSTYPE *yyvsp;
    YYLTYPE *yylsp;
    int yyrule;
    core_yyscan_t yyscanner;
#endif
{
  int yynrhs = yyr2[yyrule];
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
	     yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      fprintf (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
		       &(yyvsp[(yyi + 1) - (yynrhs)])
		       , &(yylsp[(yyi + 1) - (yynrhs)])		       , yyscanner);
      fprintf (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (yyvsp, yylsp, Rule, yyscanner); \
} while (YYID (0))

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif



#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static YYSIZE_T
yystrlen (const char *yystr)
#else
static YYSIZE_T
yystrlen (yystr)
    const char *yystr;
#endif
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static char *
yystpcpy (char *yydest, const char *yysrc)
#else
static char *
yystpcpy (yydest, yysrc)
    char *yydest;
    const char *yysrc;
#endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into YYRESULT an error message about the unexpected token
   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
   including the terminating null byte.  If YYRESULT is null, do not
   copy anything; just return the number of bytes that would be
   copied.  As a special case, return 0 if an ordinary "syntax error"
   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
   size calculation.  */
static YYSIZE_T
yysyntax_error (char *yyresult, int yystate, int yychar)
{
  int yyn = yypact[yystate];

  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
    return 0;
  else
    {
      int yytype = YYTRANSLATE (yychar);
      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
      YYSIZE_T yysize = yysize0;
      YYSIZE_T yysize1;
      int yysize_overflow = 0;
      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
      int yyx;

# if 0
      /* This is so xgettext sees the translatable formats that are
	 constructed on the fly.  */
      YY_("syntax error, unexpected %s");
      YY_("syntax error, unexpected %s, expecting %s");
      YY_("syntax error, unexpected %s, expecting %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
# endif
      char *yyfmt;
      char const *yyf;
      static char const yyunexpected[] = "syntax error, unexpected %s";
      static char const yyexpecting[] = ", expecting %s";
      static char const yyor[] = " or %s";
      char yyformat[sizeof yyunexpected
		    + sizeof yyexpecting - 1
		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
		       * (sizeof yyor - 1))];
      char const *yyprefix = yyexpecting;

      /* Start YYX at -YYN if negative to avoid negative indexes in
	 YYCHECK.  */
      int yyxbegin = yyn < 0 ? -yyn : 0;

      /* Stay within bounds of both yycheck and yytname.  */
      int yychecklim = YYLAST - yyn + 1;
      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
      int yycount = 1;

      yyarg[0] = yytname[yytype];
      yyfmt = yystpcpy (yyformat, yyunexpected);

      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
	  {
	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
	      {
		yycount = 1;
		yysize = yysize0;
		yyformat[sizeof yyunexpected - 1] = '\0';
		break;
	      }
	    yyarg[yycount++] = yytname[yyx];
	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
	    yysize_overflow |= (yysize1 < yysize);
	    yysize = yysize1;
	    yyfmt = yystpcpy (yyfmt, yyprefix);
	    yyprefix = yyor;
	  }

      yyf = YY_(yyformat);
      yysize1 = yysize + yystrlen (yyf);
      yysize_overflow |= (yysize1 < yysize);
      yysize = yysize1;

      if (yysize_overflow)
	return YYSIZE_MAXIMUM;

      if (yyresult)
	{
	  /* Avoid sprintf, as that infringes on the user's name space.
	     Don't have undefined behavior even if the translation
	     produced a string with the wrong number of "%s"s.  */
	  char *yyp = yyresult;
	  int yyi = 0;
	  while ((*yyp = *yyf) != '\0')
	    {
	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
		{
		  yyp += yytnamerr (yyp, yyarg[yyi++]);
		  yyf += 2;
		}
	      else
		{
		  yyp++;
		  yyf++;
		}
	    }
	}
      return yysize;
    }
}
#endif /* YYERROR_VERBOSE */


/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, core_yyscan_t yyscanner)
#else
static void
yydestruct (yymsg, yytype, yyvaluep, yylocationp, yyscanner)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
    YYLTYPE *yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (yyscanner);

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
	break;
    }
}


/* Prevent warnings from -Wmissing-prototypes.  */

#ifdef YYPARSE_PARAM
#if defined __STDC__ || defined __cplusplus
int yyparse (void *YYPARSE_PARAM);
#else
int yyparse ();
#endif
#else /* ! YYPARSE_PARAM */
#if defined __STDC__ || defined __cplusplus
int yyparse (core_yyscan_t yyscanner);
#else
int yyparse ();
#endif
#endif /* ! YYPARSE_PARAM */






/*----------.
| yyparse.  |
`----------*/

#ifdef YYPARSE_PARAM
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void *YYPARSE_PARAM)
#else
int
yyparse (YYPARSE_PARAM)
    void *YYPARSE_PARAM;
#endif
#else /* ! YYPARSE_PARAM */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (core_yyscan_t yyscanner)
#else
int
yyparse (yyscanner)
    core_yyscan_t yyscanner;
#endif
#endif
{
  /* The look-ahead symbol.  */
int yychar;

/* The semantic value of the look-ahead symbol.  */
YYSTYPE yylval;

/* Number of syntax errors so far.  */
int yynerrs;
/* Location data for the look-ahead symbol.  */
YYLTYPE yylloc;

  int yystate;
  int yyn;
  int yyresult;
  /* Number of tokens to shift before error messages enabled.  */
  int yyerrstatus;
  /* Look-ahead token as an internal (translated) token number.  */
  int yytoken = 0;
#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

  /* Three stacks and their tools:
     `yyss': related to states,
     `yyvs': related to semantic values,
     `yyls': related to locations.

     Refer to the stacks thru separate pointers, to allow yyoverflow
     to reallocate them elsewhere.  */

  /* The state stack.  */
  yytype_int16 yyssa[YYINITDEPTH];
  yytype_int16 *yyss = yyssa;
  yytype_int16 *yyssp;

  /* The semantic value stack.  */
  YYSTYPE yyvsa[YYINITDEPTH];
  YYSTYPE *yyvs = yyvsa;
  YYSTYPE *yyvsp;

  /* The location stack.  */
  YYLTYPE yylsa[YYINITDEPTH];
  YYLTYPE *yyls = yylsa;
  YYLTYPE *yylsp;
  /* The locations where the error started and ended.  */
  YYLTYPE yyerror_range[2];

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  YYSIZE_T yystacksize = YYINITDEPTH;

  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY;		/* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */

  yyssp = yyss;
  yyvsp = yyvs;
  yylsp = yyls;
#if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  /* Initialize the default location before parsing starts.  */
  yylloc.first_line   = yylloc.last_line   = 1;
  yylloc.first_column = yylloc.last_column = 0;
#endif

  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack.  Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	yytype_int16 *yyss1 = yyss;
	YYLTYPE *yyls1 = yyls;

	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),
		    &yyls1, yysize * sizeof (*yylsp),
		    &yystacksize);
	yyls = yyls1;
	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	yytype_int16 *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss);
	YYSTACK_RELOCATE (yyvs);
	YYSTACK_RELOCATE (yyls);
#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     look-ahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to look-ahead token.  */
  yyn = yypact[yystate];
  if (yyn == YYPACT_NINF)
    goto yydefault;

  /* Not known => get a look-ahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yyn == 0 || yyn == YYTABLE_NINF)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the look-ahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token unless it is eof.  */
  if (yychar != YYEOF)
    yychar = YYEMPTY;

  yystate = yyn;
  *++yyvsp = yylval;
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 468 "third_party/libpg_query/grammar/grammar.y"
    {
				pg_yyget_extra(yyscanner)->parsetree = (yyvsp[(1) - (1)].list);
			;}
    break;

  case 3:
#line 484 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (3)].list) != NIL)
					{
						/* update length of previous stmt */
						updateRawStmtEnd(llast_node(PGRawStmt, (yyvsp[(1) - (3)].list)), (yylsp[(2) - (3)]));
					}
					if ((yyvsp[(3) - (3)].node) != NULL)
						(yyval.list) = lappend((yyvsp[(1) - (3)].list), makeRawStmt((yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]) + 1));
					else
						(yyval.list) = (yyvsp[(1) - (3)].list);
				;}
    break;

  case 4:
#line 496 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (1)].node) != NULL)
						(yyval.list) = list_make1(makeRawStmt((yyvsp[(1) - (1)].node), 0));
					else
						(yyval.list) = NIL;
				;}
    break;

  case 39:
#line 539 "third_party/libpg_query/grammar/grammar.y"
    { (yyval.node) = NULL; ;}
    break;

  case 40:
#line 10 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 41:
#line 19 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 42:
#line 28 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 43:
#line 37 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 44:
#line 46 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 45:
#line 55 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 46:
#line 64 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 47:
#line 73 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 48:
#line 86 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 49:
#line 88 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 50:
#line 93 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(3) - (3)].node); ;}
    break;

  case 51:
#line 94 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 52:
#line 100 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 53:
#line 104 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 54:
#line 108 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					if (strcmp((yyvsp[(2) - (2)].defelt)->defname, "as") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "restart") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "owned_by") == 0)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("sequence option \"%s\" not supported here", (yyvsp[(2) - (2)].defelt)->defname),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
				;}
    break;

  case 55:
#line 119 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("generated", (PGNode *) makeInteger((yyvsp[(3) - (3)].ival)), (yylsp[(1) - (3)]));
				;}
    break;

  case 56:
#line 127 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 57:
#line 131 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 58:
#line 140 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(2) - (2)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 59:
#line 149 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(5) - (5)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 60:
#line 158 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(3) - (3)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 61:
#line 167 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(6) - (6)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 62:
#line 176 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ColumnDefault;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (yyvsp[(4) - (4)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 63:
#line 185 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 64:
#line 193 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 65:
#line 201 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStatistics;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeInteger((yyvsp[(6) - (6)].ival));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 66:
#line 210 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 67:
#line 219 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 68:
#line 228 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStorage;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeString((yyvsp[(6) - (6)].str));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 69:
#line 237 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);

					c->contype = PG_CONSTR_IDENTITY;
					c->generated_when = (yyvsp[(6) - (9)].ival);
					c->options = (yyvsp[(9) - (9)].list);
					c->location = (yylsp[(5) - (9)]);

					n->subtype = PG_AT_AddIdentity;
					n->name = (yyvsp[(3) - (9)].str);
					n->def = (PGNode *) c;

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 70:
#line 254 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetIdentity;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 71:
#line 263 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (5)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 72:
#line 272 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (7)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 73:
#line 281 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 74:
#line 291 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 75:
#line 304 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGColumnDef *def = makeNode(PGColumnDef);
					n->subtype = PG_AT_AlterColumnType;
					n->name = (yyvsp[(3) - (8)].str);
					n->def = (PGNode *) def;
					/* We only use these fields of the PGColumnDef node */
					def->typeName = (yyvsp[(6) - (8)].typnam);
					def->collClause = (PGCollateClause *) (yyvsp[(7) - (8)].node);
					def->raw_default = (yyvsp[(8) - (8)].node);
					def->location = (yylsp[(3) - (8)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 76:
#line 319 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AlterColumnGenericOptions;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 77:
#line 328 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddConstraint;
					n->def = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 78:
#line 336 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);
					n->subtype = PG_AT_AlterConstraint;
					n->def = (PGNode *) c;
					c->contype = PG_CONSTR_FOREIGN; /* others not supported, yet */
					c->conname = (yyvsp[(3) - (4)].str);
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "ALTER CONSTRAINT statement",
									&c->deferrable,
									&c->initdeferred,
									NULL, NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 79:
#line 351 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ValidateConstraint;
					n->name = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 80:
#line 359 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 81:
#line 369 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 82:
#line 379 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 83:
#line 386 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetUnLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 84:
#line 393 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 85:
#line 401 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 86:
#line 408 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_GenericOptions;
					n->def = (PGNode *)(yyvsp[(1) - (1)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 87:
#line 418 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 88:
#line 419 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 89:
#line 425 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(1) - (1)].defelt);
				;}
    break;

  case 90:
#line 429 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_SET;
				;}
    break;

  case 91:
#line 434 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_ADD;
				;}
    break;

  case 92:
#line 439 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElemExtended(NULL, (yyvsp[(2) - (2)].str), NULL, DEFELEM_DROP, (yylsp[(2) - (2)]));
				;}
    break;

  case 93:
#line 446 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 94:
#line 447 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 95:
#line 452 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 96:
#line 456 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 1; ;}
    break;

  case 97:
#line 457 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 0; ;}
    break;

  case 98:
#line 458 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 0; ;}
    break;

  case 99:
#line 8 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(2) - (2)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 100:
#line 14 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(3) - (3)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 101:
#line 20 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 102:
#line 26 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 103:
#line 7 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SCHEMA;
					n->subname = (yyvsp[(3) - (6)].str);
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 104:
#line 16 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 105:
#line 26 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 106:
#line 36 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 107:
#line 46 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 108:
#line 56 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 109:
#line 66 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 110:
#line 76 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 111:
#line 86 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 112:
#line 96 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 113:
#line 107 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 114:
#line 118 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 115:
#line 128 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 116:
#line 140 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = COLUMN; ;}
    break;

  case 117:
#line 141 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = 0; ;}
    break;

  case 118:
#line 10 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(5) - (7)].istmt)->relation = (yyvsp[(4) - (7)].range);
					(yyvsp[(5) - (7)].istmt)->onConflictClause = (yyvsp[(6) - (7)].onconflict);
					(yyvsp[(5) - (7)].istmt)->returningList = (yyvsp[(7) - (7)].list);
					(yyvsp[(5) - (7)].istmt)->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *) (yyvsp[(5) - (7)].istmt);
				;}
    break;

  case 119:
#line 22 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 120:
#line 28 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->override = (yyvsp[(2) - (4)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 121:
#line 35 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (4)].list);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 122:
#line 41 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (7)].list);
					(yyval.istmt)->override = (yyvsp[(5) - (7)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(7) - (7)].node);
				;}
    break;

  case 123:
#line 48 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = NULL;
				;}
    break;

  case 124:
#line 58 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 125:
#line 62 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].range)->alias = makeAlias((yyvsp[(3) - (3)].str), NIL);
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 126:
#line 71 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = (yyvsp[(2) - (4)].list);
					(yyval.infer)->whereClause = (yyvsp[(4) - (4)].node);
					(yyval.infer)->conname = NULL;
					(yyval.infer)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 127:
#line 80 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = NIL;
					(yyval.infer)->whereClause = NULL;
					(yyval.infer)->conname = (yyvsp[(3) - (3)].str);
					(yyval.infer)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 128:
#line 88 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = NULL;
				;}
    break;

  case 129:
#line 95 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = (yyvsp[(1) - (1)].with); ;}
    break;

  case 130:
#line 96 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = NULL; ;}
    break;

  case 131:
#line 102 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 132:
#line 114 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].target)->val = (PGNode *) (yyvsp[(3) - (3)].node);
					(yyval.list) = list_make1((yyvsp[(1) - (3)].target));
				;}
    break;

  case 133:
#line 119 "third_party/libpg_query/grammar/statements/insert.y"
    {
					int ncolumns = list_length((yyvsp[(2) - (5)].list));
					int i = 1;
					PGListCell *col_cell;

					/* Create a PGMultiAssignRef source for each target */
					foreach(col_cell, (yyvsp[(2) - (5)].list))
					{
						PGResTarget *res_col = (PGResTarget *) lfirst(col_cell);
						PGMultiAssignRef *r = makeNode(PGMultiAssignRef);

						r->source = (PGNode *) (yyvsp[(5) - (5)].node);
						r->colno = i;
						r->ncolumns = ncolumns;
						res_col->val = (PGNode *) r;
						i++;
					}

					(yyval.list) = (yyvsp[(2) - (5)].list);
				;}
    break;

  case 134:
#line 144 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_UPDATE;
					(yyval.onconflict)->infer = (yyvsp[(3) - (8)].infer);
					(yyval.onconflict)->targetList = (yyvsp[(7) - (8)].list);
					(yyval.onconflict)->whereClause = (yyvsp[(8) - (8)].node);
					(yyval.onconflict)->location = (yylsp[(1) - (8)]);
				;}
    break;

  case 135:
#line 154 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_NOTHING;
					(yyval.onconflict)->infer = (yyvsp[(3) - (5)].infer);
					(yyval.onconflict)->targetList = NIL;
					(yyval.onconflict)->whereClause = NULL;
					(yyval.onconflict)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 136:
#line 163 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = NULL;
				;}
    break;

  case 137:
#line 170 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = (yyvsp[(1) - (5)].str);
					(yyval.ielem)->expr = NULL;
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 138:
#line 181 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(1) - (5)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 139:
#line 192 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(2) - (7)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(4) - (7)].list);
					(yyval.ielem)->opclass = (yyvsp[(5) - (7)].list);
					(yyval.ielem)->ordering = (yyvsp[(6) - (7)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(7) - (7)].nullorder);
				;}
    break;

  case 140:
#line 206 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 141:
#line 207 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 142:
#line 213 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = PG_OVERRIDING_USER_VALUE; ;}
    break;

  case 143:
#line 214 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = OVERRIDING_SYSTEM_VALUE; ;}
    break;

  case 144:
#line 219 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 145:
#line 220 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].target)); ;}
    break;

  case 146:
#line 226 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 147:
#line 227 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 148:
#line 231 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 149:
#line 232 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 150:
#line 238 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 151:
#line 240 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 152:
#line 245 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 153:
#line 246 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_concat((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].list)); ;}
    break;

  case 154:
#line 250 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 155:
#line 251 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 156:
#line 254 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].ielem)); ;}
    break;

  case 157:
#line 255 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].ielem)); ;}
    break;

  case 158:
#line 261 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;	/* upper production sets this */
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 159:
#line 8 "third_party/libpg_query/grammar/statements/create_type.y"
    {
					PGCreateTypeStmt *n = makeNode(PGCreateTypeStmt);
					n->kind = PG_NEWTYPE_ENUM;
					n->typeName = (yyvsp[(3) - (8)].list);
					n->vals = (yyvsp[(7) - (8)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 160:
#line 16 "third_party/libpg_query/grammar/statements/create_type.y"
    {
					PGCreateTypeStmt *n = makeNode(PGCreateTypeStmt);
					n->kind = PG_NEWTYPE_ALIAS;
					n->typeName = (yyvsp[(3) - (5)].list);
					n->ofType = (yyvsp[(5) - (5)].typnam);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 161:
#line 26 "third_party/libpg_query/grammar/statements/create_type.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 162:
#line 27 "third_party/libpg_query/grammar/statements/create_type.y"
    { (yyval.list) = NIL; ;}
    break;

  case 163:
#line 31 "third_party/libpg_query/grammar/statements/create_type.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 164:
#line 33 "third_party/libpg_query/grammar/statements/create_type.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 165:
#line 8 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_NOTHING;
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 166:
#line 15 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_ASSIGNMENT;
					n->name = (yyvsp[(2) - (4)].str);
					n->args = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 167:
#line 23 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_CALL;
					n->name = (yyvsp[(2) - (5)].str);
					n->args = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 168:
#line 10 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(4) - (5)].range)->relpersistence = (yyvsp[(2) - (5)].ival);
					n->sequence = (yyvsp[(4) - (5)].range);
					n->options = (yyvsp[(5) - (5)].list);
					n->ownerId = InvalidOid;
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 169:
#line 20 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(7) - (8)].range)->relpersistence = (yyvsp[(2) - (8)].ival);
					n->sequence = (yyvsp[(7) - (8)].range);
					n->options = (yyvsp[(8) - (8)].list);
					n->ownerId = InvalidOid;
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 170:
#line 32 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 171:
#line 33 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = NIL; ;}
    break;

  case 172:
#line 8 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(2) - (3)].str);
					n->params = (yyvsp[(3) - (3)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 173:
#line 16 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(7) - (9)].str);
					n->params = (yyvsp[(8) - (9)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(4) - (9)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_ERROR_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (9)].into)->rel->relpersistence = (yyvsp[(2) - (9)].ival);
					(yyvsp[(4) - (9)].into)->skipData = !((yyvsp[(9) - (9)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 174:
#line 33 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(10) - (12)].str);
					n->params = (yyvsp[(11) - (12)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(7) - (12)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_IGNORE_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (12)].into)->rel->relpersistence = (yyvsp[(2) - (12)].ival);
					(yyvsp[(7) - (12)].into)->skipData = !((yyvsp[(12) - (12)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 175:
#line 51 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 176:
#line 52 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = NIL; ;}
    break;

  case 177:
#line 10 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(3) - (4)].range);
					n->options = (yyvsp[(4) - (4)].list);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 178:
#line 18 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(5) - (6)].range);
					n->options = (yyvsp[(6) - (6)].list);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 179:
#line 29 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 180:
#line 30 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 181:
#line 34 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 182:
#line 35 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 183:
#line 36 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 184:
#line 41 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(1) - (1)].str)); ;}
    break;

  case 185:
#line 42 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(2) - (2)].str)); ;}
    break;

  case 186:
#line 44 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.value) = makeFloat((yyvsp[(2) - (2)].str));
					doNegateFloat((yyval.value));
				;}
    break;

  case 187:
#line 48 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeInteger((yyvsp[(1) - (1)].ival)); ;}
    break;

  case 188:
#line 53 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("as", (PGNode *)(yyvsp[(2) - (2)].typnam), (yylsp[(1) - (2)]));
				;}
    break;

  case 189:
#line 57 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cache", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 190:
#line 61 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 191:
#line 65 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(false), (yylsp[(1) - (2)]));
				;}
    break;

  case 192:
#line 69 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("increment", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 193:
#line 73 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 194:
#line 77 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 195:
#line 81 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 196:
#line 85 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 197:
#line 89 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("owned_by", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 198:
#line 93 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					/* not documented, only used by pg_dump */
					(yyval.defelt) = makeDefElem("sequence_name", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 199:
#line 98 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("start", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 200:
#line 102 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 201:
#line 106 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 202:
#line 112 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 203:
#line 113 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 204:
#line 117 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 205:
#line 118 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = + (yyvsp[(2) - (2)].ival); ;}
    break;

  case 206:
#line 119 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = - (yyvsp[(2) - (2)].ival); ;}
    break;

  case 207:
#line 3 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 208:
#line 10 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_BEGIN;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 209:
#line 16 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_START;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 210:
#line 22 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 211:
#line 29 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 212:
#line 36 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 213:
#line 45 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 214:
#line 46 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 215:
#line 47 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 216:
#line 9 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(4) - (9)].range)->relpersistence = (yyvsp[(2) - (9)].ival);
					n->relation = (yyvsp[(4) - (9)].range);
					n->tableElts = (yyvsp[(6) - (9)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(8) - (9)].list);
					n->oncommit = (yyvsp[(9) - (9)].oncommit);
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 217:
#line 24 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(7) - (12)].range)->relpersistence = (yyvsp[(2) - (12)].ival);
					n->relation = (yyvsp[(7) - (12)].range);
					n->tableElts = (yyvsp[(9) - (12)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(11) - (12)].list);
					n->oncommit = (yyvsp[(12) - (12)].oncommit);
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 218:
#line 39 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(6) - (11)].range)->relpersistence = (yyvsp[(4) - (11)].ival);
					n->relation = (yyvsp[(6) - (11)].range);
					n->tableElts = (yyvsp[(8) - (11)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(10) - (11)].list);
					n->oncommit = (yyvsp[(11) - (11)].oncommit);
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 219:
#line 56 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 220:
#line 58 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * We must complain about conflicting options.
					 * We could, but choose not to, complain about redundant
					 * options (ie, where $2's bit is already set in $1).
					 */
					int		newspec = (yyvsp[(1) - (2)].ival) | (yyvsp[(2) - (2)].ival);

					/* special message for this case */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED)) == (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("constraint declared INITIALLY DEFERRED must be DEFERRABLE"),
								 parser_errposition((yylsp[(2) - (2)]))));
					/* generic message for other conflicts */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE)) == (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE) ||
						(newspec & (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED)) == (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("conflicting constraint properties"),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.ival) = newspec;
				;}
    break;

  case 221:
#line 84 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].typnam); ;}
    break;

  case 222:
#line 85 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 223:
#line 86 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].list); ;}
    break;

  case 224:
#line 87 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].value); ;}
    break;

  case 225:
#line 88 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 226:
#line 89 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 227:
#line 93 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 228:
#line 94 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 229:
#line 99 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 230:
#line 104 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_NOACTION; ;}
    break;

  case 231:
#line 105 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_RESTRICT; ;}
    break;

  case 232:
#line 106 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_CASCADE; ;}
    break;

  case 233:
#line 107 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETNULL; ;}
    break;

  case 234:
#line 108 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETDEFAULT; ;}
    break;

  case 235:
#line 114 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 236:
#line 120 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 237:
#line 121 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 238:
#line 123 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * Note: the PGCollateClause is momentarily included in
					 * the list built by ColQualList, but we split it out
					 * again in SplitColQualList.
					 */
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 239:
#line 140 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NOTNULL;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 240:
#line 147 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NULL;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 241:
#line 154 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (2)]);
					n->keys = NULL;
					n->options = (yyvsp[(2) - (2)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 242:
#line 164 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NULL;
					n->options = (yyvsp[(3) - (3)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 243:
#line 174 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->is_no_inherit = (yyvsp[(5) - (5)].boolean);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					n->skip_validation = false;
					n->initially_valid = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 244:
#line 186 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_COMPRESSION;
					n->location = (yylsp[(1) - (3)]);
					n->compression_name = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 245:
#line 194 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_DEFAULT;
					n->location = (yylsp[(1) - (2)]);
					n->raw_expr = (yyvsp[(2) - (2)].node);
					n->cooked_expr = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 246:
#line 203 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (5)]);
					n->pktable			= (yyvsp[(2) - (5)].range);
					n->fk_attrs			= NIL;
					n->pk_attrs			= (yyvsp[(3) - (5)].list);
					n->fk_matchtype		= (yyvsp[(4) - (5)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(5) - (5)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(5) - (5)].ival) & 0xFF);
					n->skip_validation  = false;
					n->initially_valid  = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 247:
#line 220 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.constr) = PG_CONSTR_GENERATED_VIRTUAL; ;}
    break;

  case 248:
#line 221 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.constr) = PG_CONSTR_GENERATED_STORED; ;}
    break;

  case 249:
#line 225 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.constr) = (yyvsp[(1) - (1)].constr) ;}
    break;

  case 250:
#line 226 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.constr) = PG_CONSTR_GENERATED_VIRTUAL; ;}
    break;

  case 251:
#line 231 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_IDENTITY;
					n->generated_when = (yyvsp[(2) - (5)].ival);
					n->options = (yyvsp[(5) - (5)].list);
					n->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 252:
#line 240 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = (yyvsp[(7) - (7)].constr);
					n->generated_when = (yyvsp[(2) - (7)].ival);
					n->raw_expr = (yyvsp[(5) - (7)].node);
					n->cooked_expr = NULL;
					n->location = (yylsp[(1) - (7)]);

					/*
					 * Can't do this in the grammar because of shift/reduce
					 * conflicts.  (IDENTITY allows both ALWAYS and BY
					 * DEFAULT, but generated columns only allow ALWAYS.)  We
					 * can also give a more useful error message and location.
					 */
					if ((yyvsp[(2) - (7)].ival) != PG_ATTRIBUTE_IDENTITY_ALWAYS)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("for a generated column, GENERATED ALWAYS must be specified"),
								 parser_errposition((yylsp[(2) - (7)]))));

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 253:
#line 263 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = (yyvsp[(5) - (5)].constr);
					n->generated_when = PG_ATTRIBUTE_IDENTITY_ALWAYS;
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					n->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 254:
#line 277 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 255:
#line 283 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 256:
#line 289 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (1)].ival) << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 257:
#line 291 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | ((yyvsp[(1) - (1)].ival) & 0xFF); ;}
    break;

  case 258:
#line 293 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (2)].ival) << 8) | ((yyvsp[(2) - (2)].ival) & 0xFF); ;}
    break;

  case 259:
#line 295 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(2) - (2)].ival) << 8) | ((yyvsp[(1) - (2)].ival) & 0xFF); ;}
    break;

  case 260:
#line 297 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 261:
#line 300 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = ONCOMMIT_DROP; ;}
    break;

  case 262:
#line 301 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_DELETE_ROWS; ;}
    break;

  case 263:
#line 302 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_PRESERVE_ROWS; ;}
    break;

  case 264:
#line 303 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_NOOP; ;}
    break;

  case 265:
#line 308 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 266:
#line 312 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = true; ;}
    break;

  case 267:
#line 313 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = false; ;}
    break;

  case 268:
#line 319 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 269:
#line 325 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 270:
#line 330 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_COMMENTS; ;}
    break;

  case 271:
#line 331 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_CONSTRAINTS; ;}
    break;

  case 272:
#line 332 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_DEFAULTS; ;}
    break;

  case 273:
#line 333 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_IDENTITY; ;}
    break;

  case 274:
#line 334 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_INDEXES; ;}
    break;

  case 275:
#line 335 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STATISTICS; ;}
    break;

  case 276:
#line 336 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STORAGE; ;}
    break;

  case 277:
#line 337 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_ALL; ;}
    break;

  case 278:
#line 343 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 279:
#line 344 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 280:
#line 348 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
    break;

  case 281:
#line 354 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRABLE;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 282:
#line 361 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_NOT_DEFERRABLE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 283:
#line 368 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRED;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 284:
#line 375 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_IMMEDIATE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 285:
#line 386 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 286:
#line 387 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(true), (yylsp[(1) - (2)]))); ;}
    break;

  case 287:
#line 388 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(false), (yylsp[(1) - (2)]))); ;}
    break;

  case 288:
#line 389 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 289:
#line 393 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 290:
#line 398 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 291:
#line 399 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) & ~(yyvsp[(3) - (3)].ival); ;}
    break;

  case 292:
#line 400 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 293:
#line 405 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 294:
#line 410 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_DEFERRABLE; ;}
    break;

  case 295:
#line 411 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_DEFERRABLE; ;}
    break;

  case 296:
#line 412 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_IMMEDIATE; ;}
    break;

  case 297:
#line 413 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_DEFERRED; ;}
    break;

  case 298:
#line 414 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_VALID; ;}
    break;

  case 299:
#line 415 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NO_INHERIT; ;}
    break;

  case 300:
#line 421 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->category = COL_STANDARD;
					n->colname = (yyvsp[(1) - (3)].str);
					n->typeName = (yyvsp[(2) - (3)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collOid = InvalidOid;
					SplitColQualList((yyvsp[(3) - (3)].list), &n->constraints, &n->collClause,
									 yyscanner);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *)n;
			;}
    break;

  case 301:
#line 441 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->category = COL_GENERATED;
					n->colname = (yyvsp[(1) - (4)].str);
					n->typeName = (yyvsp[(2) - (4)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collOid = InvalidOid;
					// merge the constraints with the generated column constraint
					auto constraints = (yyvsp[(4) - (4)].list);
					if (constraints) {
					    constraints = lappend(constraints, (yyvsp[(3) - (4)].node));
					} else {
					    constraints = list_make1((yyvsp[(3) - (4)].node));
					}
					SplitColQualList(constraints, &n->constraints, &n->collClause,
									 yyscanner);
					n->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)n;
			;}
    break;

  case 302:
#line 469 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 303:
#line 470 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 304:
#line 474 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 305:
#line 478 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 306:
#line 479 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 307:
#line 480 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 308:
#line 485 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 309:
#line 489 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 310:
#line 496 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 311:
#line 497 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 312:
#line 502 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 313:
#line 503 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 314:
#line 504 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 315:
#line 509 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str));
				;}
    break;

  case 316:
#line 516 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 317:
#line 517 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 318:
#line 522 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 319:
#line 523 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 320:
#line 527 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 321:
#line 533 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 322:
#line 537 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 323:
#line 541 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (5)].str), (yyvsp[(3) - (5)].str), (PGNode *) (yyvsp[(5) - (5)].node),
											 PG_DEFELEM_UNSPEC, (yylsp[(1) - (5)]));
				;}
    break;

  case 324:
#line 546 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str), NULL, PG_DEFELEM_UNSPEC, (yylsp[(1) - (3)]));
				;}
    break;

  case 325:
#line 553 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 326:
#line 554 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 327:
#line 558 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 328:
#line 559 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 329:
#line 563 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 330:
#line 565 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (4)].str)), (yyvsp[(2) - (4)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 331:
#line 571 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(2) - (5)].str)), (yyvsp[(3) - (5)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->setof = true;
					(yyval.typnam)->location = (yylsp[(2) - (5)]);
				;}
    break;

  case 332:
#line 582 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					processCASbits((yyvsp[(5) - (5)].ival), (yylsp[(5) - (5)]), "CHECK",
								   NULL, NULL, &n->skip_validation,
								   &n->is_no_inherit, yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 333:
#line 596 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (6)]);
					n->keys = (yyvsp[(3) - (6)].list);
					n->options = (yyvsp[(5) - (6)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(6) - (6)].ival), (yylsp[(6) - (6)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 334:
#line 609 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(2) - (3)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(3) - (3)].ival), (yylsp[(3) - (3)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 335:
#line 624 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (7)]);
					n->keys = (yyvsp[(4) - (7)].list);
					n->options = (yyvsp[(6) - (7)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(7) - (7)].ival), (yylsp[(7) - (7)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 336:
#line 637 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (4)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(3) - (4)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 337:
#line 652 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (11)]);
					n->pktable			= (yyvsp[(7) - (11)].range);
					n->fk_attrs			= (yyvsp[(4) - (11)].list);
					n->pk_attrs			= (yyvsp[(8) - (11)].list);
					n->fk_matchtype		= (yyvsp[(9) - (11)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(10) - (11)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(10) - (11)].ival) & 0xFF);
					processCASbits((yyvsp[(11) - (11)].ival), (yylsp[(11) - (11)]), "FOREIGN KEY",
								   &n->deferrable, &n->initdeferred,
								   &n->skip_validation, NULL,
								   yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 338:
#line 674 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 339:
#line 678 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 340:
#line 685 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_FULL;
			;}
    break;

  case 341:
#line 689 "third_party/libpg_query/grammar/statements/create.y"
    {
				ereport(ERROR,
						(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
						 errmsg("MATCH PARTIAL not yet implemented"),
						 parser_errposition((yylsp[(1) - (2)]))));
				(yyval.ival) = PG_FKCONSTR_MATCH_PARTIAL;
			;}
    break;

  case 342:
#line 697 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 343:
#line 701 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 344:
#line 709 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGTableLikeClause *n = makeNode(PGTableLikeClause);
					n->relation = (yyvsp[(2) - (3)].range);
					n->options = (yyvsp[(3) - (3)].ival);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 345:
#line 718 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 346:
#line 719 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 347:
#line 720 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 348:
#line 721 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 349:
#line 723 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 350:
#line 730 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 351:
#line 736 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_UNLOGGED; ;}
    break;

  case 352:
#line 737 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = RELPERSISTENCE_PERMANENT; ;}
    break;

  case 353:
#line 742 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_ATTRIBUTE_IDENTITY_ALWAYS; ;}
    break;

  case 354:
#line 743 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ATTRIBUTE_IDENTITY_BY_DEFAULT; ;}
    break;

  case 355:
#line 10 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 356:
#line 20 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 357:
#line 30 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 358:
#line 40 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 359:
#line 50 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->objects = list_make1(lappend((yyvsp[(5) - (6)].list), makeString((yyvsp[(3) - (6)].str))));
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 360:
#line 60 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (8)].objtype);
					n->objects = list_make1(lappend((yyvsp[(7) - (8)].list), makeString((yyvsp[(5) - (8)].str))));
					n->behavior = (yyvsp[(8) - (8)].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 361:
#line 70 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = PG_OBJECT_TYPE;
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 362:
#line 80 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = PG_OBJECT_TYPE;
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 363:
#line 93 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TABLE; ;}
    break;

  case 364:
#line 94 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SEQUENCE; ;}
    break;

  case 365:
#line 95 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 366:
#line 96 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 367:
#line 97 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TABLE_MACRO; ;}
    break;

  case 368:
#line 98 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_VIEW; ;}
    break;

  case 369:
#line 99 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_MATVIEW; ;}
    break;

  case 370:
#line 100 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_INDEX; ;}
    break;

  case 371:
#line 101 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_TABLE; ;}
    break;

  case 372:
#line 102 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_COLLATION; ;}
    break;

  case 373:
#line 103 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_CONVERSION; ;}
    break;

  case 374:
#line 104 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_STATISTIC_EXT; ;}
    break;

  case 375:
#line 105 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSPARSER; ;}
    break;

  case 376:
#line 106 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSDICTIONARY; ;}
    break;

  case 377:
#line 107 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSTEMPLATE; ;}
    break;

  case 378:
#line 108 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSCONFIGURATION; ;}
    break;

  case 379:
#line 113 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_ACCESS_METHOD; ;}
    break;

  case 380:
#line 114 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EVENT_TRIGGER; ;}
    break;

  case 381:
#line 115 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EXTENSION; ;}
    break;

  case 382:
#line 116 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FDW; ;}
    break;

  case 383:
#line 117 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_PUBLICATION; ;}
    break;

  case 384:
#line 118 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SCHEMA; ;}
    break;

  case 385:
#line 119 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_SERVER; ;}
    break;

  case 386:
#line 124 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 387:
#line 125 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 388:
#line 130 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_CASCADE; ;}
    break;

  case 389:
#line 131 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; ;}
    break;

  case 390:
#line 132 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; /* default */ ;}
    break;

  case 391:
#line 137 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_POLICY; ;}
    break;

  case 392:
#line 138 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_RULE; ;}
    break;

  case 393:
#line 139 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TRIGGER; ;}
    break;

  case 394:
#line 142 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 395:
#line 143 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 396:
#line 9 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				PGCreateFunctionStmt *n = makeNode(PGCreateFunctionStmt);
				n->relpersistence=(yyvsp[(2) - (8)].ival);
				n->name = (yyvsp[(4) - (8)].range);
				n->params = (yyvsp[(5) - (8)].list);
				n->function = NULL;
				n->query = (yyvsp[(8) - (8)].node);
				(yyval.node) = (PGNode *)n;
				
			;}
    break;

  case 397:
#line 21 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				PGCreateFunctionStmt *n = makeNode(PGCreateFunctionStmt);
				n->relpersistence=(yyvsp[(2) - (7)].ival);
				n->name = (yyvsp[(4) - (7)].range);
				n->params = (yyvsp[(5) - (7)].list);
				n->function = (yyvsp[(7) - (7)].node);
				n->query = NULL;
				(yyval.node) = (PGNode *)n;
                         ;}
    break;

  case 400:
#line 42 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = NIL;
			;}
    break;

  case 401:
#line 46 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = (yyvsp[(2) - (3)].list);
			;}
    break;

  case 402:
#line 12 "third_party/libpg_query/grammar/statements/update.y"
    {
					PGUpdateStmt *n = makeNode(PGUpdateStmt);
					n->relation = (yyvsp[(3) - (8)].range);
					n->targetList = (yyvsp[(5) - (8)].list);
					n->fromClause = (yyvsp[(6) - (8)].list);
					n->whereClause = (yyvsp[(7) - (8)].node);
					n->returningList = (yyvsp[(8) - (8)].list);
					n->withClause = (yyvsp[(1) - (8)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 403:
#line 3 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = (yyvsp[(3) - (11)].range);
					n->query = NULL;
					n->attlist = (yyvsp[(4) - (11)].list);
					n->is_from = (yyvsp[(6) - (11)].boolean);
					n->is_program = (yyvsp[(7) - (11)].boolean);
					n->filename = (yyvsp[(8) - (11)].str);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(8) - (11)]))));

					n->options = NIL;
					/* Concatenate user-supplied flags */
					if ((yyvsp[(2) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(2) - (11)].defelt));
					if ((yyvsp[(5) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(5) - (11)].defelt));
					if ((yyvsp[(9) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(9) - (11)].defelt));
					if ((yyvsp[(11) - (11)].list))
						n->options = list_concat(n->options, (yyvsp[(11) - (11)].list));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 404:
#line 31 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = NULL;
					n->query = (yyvsp[(3) - (9)].node);
					n->attlist = NIL;
					n->is_from = false;
					n->is_program = (yyvsp[(6) - (9)].boolean);
					n->filename = (yyvsp[(7) - (9)].str);
					n->options = (yyvsp[(9) - (9)].list);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(5) - (9)]))));

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 405:
#line 53 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 406:
#line 54 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 407:
#line 60 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(2) - (3)]));
				;}
    break;

  case 408:
#line 63 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 409:
#line 69 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 410:
#line 73 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 411:
#line 80 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 412:
#line 81 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 413:
#line 85 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 414:
#line 86 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 415:
#line 91 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 416:
#line 92 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 417:
#line 96 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 418:
#line 97 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 419:
#line 102 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 420:
#line 103 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 421:
#line 104 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeNode(PGAStar); ;}
    break;

  case 422:
#line 105 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (3)].list); ;}
    break;

  case 423:
#line 106 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = NULL; ;}
    break;

  case 424:
#line 112 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 425:
#line 120 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (2)]));
				;}
    break;

  case 426:
#line 123 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 427:
#line 128 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 428:
#line 129 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = NIL; ;}
    break;

  case 429:
#line 135 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 430:
#line 138 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 431:
#line 144 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 432:
#line 148 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 433:
#line 152 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("freeze", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 434:
#line 156 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 435:
#line 160 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("null", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 436:
#line 164 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("csv"), (yylsp[(1) - (1)]));
				;}
    break;

  case 437:
#line 168 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("header", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 438:
#line 172 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("quote", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 439:
#line 176 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("escape", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 440:
#line 180 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 441:
#line 184 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)makeNode(PGAStar), (yylsp[(1) - (3)]));
				;}
    break;

  case 442:
#line 188 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_not_null", (PGNode *)(yyvsp[(4) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 443:
#line 192 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_null", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 444:
#line 196 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("encoding", (PGNode *)makeString((yyvsp[(2) - (2)].str)), (yylsp[(1) - (2)]));
				;}
    break;

  case 445:
#line 203 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 446:
#line 209 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 447:
#line 210 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 448:
#line 211 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 449:
#line 217 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 450:
#line 221 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 453:
#line 52 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 454:
#line 53 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 455:
#line 68 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 456:
#line 70 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list), NIL,
										NULL, NULL, NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (2)].node);
				;}
    break;

  case 457:
#line 77 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(3) - (4)].list),
										(PGNode*) list_nth((yyvsp[(4) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 458:
#line 85 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(4) - (4)].list),
										(PGNode*) list_nth((yyvsp[(3) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(3) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 459:
#line 93 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (2)].node), NULL, NIL,
										NULL, NULL,
										(yyvsp[(1) - (2)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 460:
#line 101 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].list), NIL,
										NULL, NULL,
										(yyvsp[(1) - (3)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (3)].node);
				;}
    break;

  case 461:
#line 109 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(4) - (5)].list),
										(PGNode*) list_nth((yyvsp[(5) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(5) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 462:
#line 117 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(5) - (5)].list),
										(PGNode*) list_nth((yyvsp[(4) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 463:
#line 127 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 464:
#line 128 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 465:
#line 158 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->targetList = (yyvsp[(3) - (11)].list);
					n->intoClause = (yyvsp[(4) - (11)].into);
					n->fromClause = (yyvsp[(5) - (11)].list);
					n->whereClause = (yyvsp[(6) - (11)].node);
					n->groupClause = (yyvsp[(7) - (11)].list);
					n->havingClause = (yyvsp[(8) - (11)].node);
					n->windowClause = (yyvsp[(9) - (11)].list);
					n->qualifyClause = (yyvsp[(10) - (11)].node);
					n->sampleOptions = (yyvsp[(11) - (11)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 466:
#line 174 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->distinctClause = (yyvsp[(2) - (11)].list);
					n->targetList = (yyvsp[(3) - (11)].list);
					n->intoClause = (yyvsp[(4) - (11)].into);
					n->fromClause = (yyvsp[(5) - (11)].list);
					n->whereClause = (yyvsp[(6) - (11)].node);
					n->groupClause = (yyvsp[(7) - (11)].list);
					n->havingClause = (yyvsp[(8) - (11)].node);
					n->windowClause = (yyvsp[(9) - (11)].list);
					n->qualifyClause = (yyvsp[(10) - (11)].node);
					n->sampleOptions = (yyvsp[(11) - (11)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 467:
#line 188 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 468:
#line 190 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* same as SELECT * FROM relation_expr */
					PGColumnRef *cr = makeNode(PGColumnRef);
					PGResTarget *rt = makeNode(PGResTarget);
					PGSelectStmt *n = makeNode(PGSelectStmt);

					cr->fields = list_make1(makeNode(PGAStar));
					cr->location = -1;

					rt->name = NULL;
					rt->indirection = NIL;
					rt->val = (PGNode *)cr;
					rt->location = -1;

					n->targetList = list_make1(rt);
					n->fromClause = list_make1((yyvsp[(2) - (2)].range));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 469:
#line 209 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_UNION, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 470:
#line 213 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_INTERSECT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 471:
#line 217 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_EXCEPT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 472:
#line 234 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 473:
#line 241 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 474:
#line 248 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(3) - (3)].list);
				(yyval.with)->recursive = true;
				(yyval.with)->location = (yylsp[(1) - (3)]);
			;}
    break;

  case 475:
#line 257 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 476:
#line 258 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 477:
#line 262 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGCommonTableExpr *n = makeNode(PGCommonTableExpr);
				n->ctename = (yyvsp[(1) - (6)].str);
				n->aliascolnames = (yyvsp[(2) - (6)].list);
				n->ctequery = (yyvsp[(5) - (6)].node);
				n->location = (yylsp[(1) - (6)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 478:
#line 274 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(2) - (2)].range);
					(yyval.into)->colNames = NIL;
					(yyval.into)->options = NIL;
					(yyval.into)->onCommit = PG_ONCOMMIT_NOOP;
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;
				;}
    break;

  case 479:
#line 284 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.into) = NULL; ;}
    break;

  case 480:
#line 293 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 481:
#line 298 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 482:
#line 303 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 483:
#line 308 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 484:
#line 313 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 485:
#line 321 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 486:
#line 329 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_UNLOGGED;
				;}
    break;

  case 487:
#line 334 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 488:
#line 339 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 489:
#line 345 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 490:
#line 346 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 491:
#line 350 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 492:
#line 351 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 493:
#line 352 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 494:
#line 359 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(NIL); ;}
    break;

  case 495:
#line 360 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 496:
#line 364 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL;;}
    break;

  case 497:
#line 365 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 498:
#line 369 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true;;}
    break;

  case 499:
#line 370 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false;;}
    break;

  case 500:
#line 371 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 501:
#line 375 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 502:
#line 376 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 503:
#line 380 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 504:
#line 382 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSortBy *sort = makeNode(PGSortBy);
					sort->node = (PGNode *) makeNode(PGAStar);
					sort->sortby_dir = (yyvsp[(4) - (5)].sortorder);
					sort->sortby_nulls = (yyvsp[(5) - (5)].nullorder);
					sort->useOp = NIL;
					sort->location = -1;		/* no operator */
					(yyval.list) = list_make1(sort);
				;}
    break;

  case 505:
#line 392 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSortBy *sort = makeNode(PGSortBy);
					sort->node = (PGNode *) makeNode(PGAStar);
					sort->sortby_dir = (yyvsp[(4) - (5)].sortorder);
					sort->sortby_nulls = (yyvsp[(5) - (5)].nullorder);
					sort->useOp = NIL;
					sort->location = -1;		/* no operator */
					(yyval.list) = list_make1(sort);
				;}
    break;

  case 506:
#line 404 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].sortby)); ;}
    break;

  case 507:
#line 405 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].sortby)); ;}
    break;

  case 508:
#line 409 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (4)].node);
					(yyval.sortby)->sortby_dir = SORTBY_USING;
					(yyval.sortby)->sortby_nulls = (yyvsp[(4) - (4)].nullorder);
					(yyval.sortby)->useOp = (yyvsp[(3) - (4)].list);
					(yyval.sortby)->location = (yylsp[(3) - (4)]);
				;}
    break;

  case 509:
#line 418 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (3)].node);
					(yyval.sortby)->sortby_dir = (yyvsp[(2) - (3)].sortorder);
					(yyval.sortby)->sortby_nulls = (yyvsp[(3) - (3)].nullorder);
					(yyval.sortby)->useOp = NIL;
					(yyval.sortby)->location = -1;		/* no operator */
				;}
    break;

  case 510:
#line 428 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_ASC; ;}
    break;

  case 511:
#line 429 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DESC; ;}
    break;

  case 512:
#line 430 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DEFAULT; ;}
    break;

  case 513:
#line 433 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_FIRST; ;}
    break;

  case 514:
#line 434 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_LAST; ;}
    break;

  case 515:
#line 435 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_DEFAULT; ;}
    break;

  case 516:
#line 439 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(2) - (2)].node), (yyvsp[(1) - (2)].node)); ;}
    break;

  case 517:
#line 440 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 518:
#line 441 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL, (yyvsp[(1) - (1)].node)); ;}
    break;

  case 519:
#line 442 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (1)].node), NULL); ;}
    break;

  case 520:
#line 446 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 521:
#line 447 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL,NULL); ;}
    break;

  case 522:
#line 452 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 523:
#line 454 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Disabled because it was too confusing, bjm 2002-02-18 */
					ereport(ERROR,
							(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("LIMIT #,# syntax is not supported"),
							 errhint("Use separate LIMIT and OFFSET clauses."),
							 parser_errposition((yylsp[(1) - (4)]))));
				;}
    break;

  case 524:
#line 470 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(3) - (5)].node); ;}
    break;

  case 525:
#line 472 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst(1, -1); ;}
    break;

  case 526:
#line 477 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 527:
#line 480 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 528:
#line 488 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
		;}
    break;

  case 529:
#line 492 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
		;}
    break;

  case 530:
#line 496 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
		;}
    break;

  case 531:
#line 500 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
		;}
    break;

  case 532:
#line 504 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (1)].ival)), false);
		;}
    break;

  case 533:
#line 508 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), false);
		;}
    break;

  case 534:
#line 515 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(3) - (3)].node);
				;}
    break;

  case 535:
#line 519 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 536:
#line 526 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 537:
#line 527 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 538:
#line 532 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSampleOptions((yyvsp[(3) - (5)].node), (yyvsp[(1) - (5)].str), (yyvsp[(5) - (5)].ival), (yylsp[(1) - (5)]));
				;}
    break;

  case 539:
#line 536 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (1)].node), NULL, -1, (yylsp[(1) - (1)]));
		;}
    break;

  case 540:
#line 540 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (4)].node), (yyvsp[(3) - (4)].str), -1, (yylsp[(1) - (4)]));
		;}
    break;

  case 541:
#line 544 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (6)].node), (yyvsp[(3) - (6)].str), (yyvsp[(5) - (6)].ival), (yylsp[(1) - (6)]));
		;}
    break;

  case 542:
#line 551 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 543:
#line 557 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 544:
#line 558 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 545:
#line 563 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(3) - (4)].ival); ;}
    break;

  case 546:
#line 564 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = -1; ;}
    break;

  case 547:
#line 568 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 548:
#line 570 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* LIMIT ALL is represented as a NULL constant */
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 549:
#line 575 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeLimitPercent((yyvsp[(1) - (2)].node)); ;}
    break;

  case 550:
#line 577 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeLimitPercent(makeFloatConst((yyvsp[(1) - (2)].str),(yylsp[(1) - (2)]))); ;}
    break;

  case 551:
#line 579 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeLimitPercent(makeIntConst((yyvsp[(1) - (2)].ival),(yylsp[(1) - (2)]))); ;}
    break;

  case 552:
#line 583 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 553:
#line 603 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 554:
#line 605 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 555:
#line 607 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 556:
#line 611 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival),(yylsp[(1) - (1)])); ;}
    break;

  case 557:
#line 612 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str),(yylsp[(1) - (1)])); ;}
    break;

  case 558:
#line 616 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 559:
#line 617 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 560:
#line 620 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 561:
#line 621 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 562:
#line 646 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 563:
#line 648 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNode *node = (PGNode *) makeGroupingSet(GROUPING_SET_ALL, NIL, (yylsp[(3) - (3)]));
					(yyval.list) = list_make1(node);
				;}
    break;

  case 564:
#line 653 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNode *node = (PGNode *) makeGroupingSet(GROUPING_SET_ALL, NIL, (yylsp[(3) - (3)]));
					(yyval.list) = list_make1(node);
				;}
    break;

  case 565:
#line 657 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 566:
#line 661 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 567:
#line 662 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].node)); ;}
    break;

  case 568:
#line 666 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 569:
#line 667 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 570:
#line 671 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 571:
#line 672 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 572:
#line 673 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 573:
#line 674 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 574:
#line 675 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 575:
#line 680 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_EMPTY, NIL, (yylsp[(1) - (2)]));
				;}
    break;

  case 576:
#line 693 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_ROLLUP, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 577:
#line 700 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_CUBE, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 578:
#line 707 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_SETS, (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 579:
#line 713 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 580:
#line 714 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 581:
#line 718 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 582:
#line 719 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 583:
#line 723 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 584:
#line 724 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 585:
#line 728 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 586:
#line 729 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 587:
#line 733 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 588:
#line 734 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 589:
#line 738 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 590:
#line 739 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 591:
#line 744 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGLockingClause *n = makeNode(PGLockingClause);
					n->lockedRels = (yyvsp[(2) - (3)].list);
					n->strength = (yyvsp[(1) - (3)].lockstrength);
					n->waitPolicy = (yyvsp[(3) - (3)].lockwaitpolicy);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 592:
#line 754 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = LCS_FORUPDATE; ;}
    break;

  case 593:
#line 755 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORNOKEYUPDATE; ;}
    break;

  case 594:
#line 756 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORSHARE; ;}
    break;

  case 595:
#line 757 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORKEYSHARE; ;}
    break;

  case 596:
#line 761 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 597:
#line 762 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 598:
#line 767 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = LockWaitError; ;}
    break;

  case 599:
#line 768 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitSkip; ;}
    break;

  case 600:
#line 769 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitBlock; ;}
    break;

  case 601:
#line 779 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->valuesLists = list_make1((yyvsp[(3) - (4)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 602:
#line 785 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = (PGSelectStmt *) (yyvsp[(1) - (5)].node);
					n->valuesLists = lappend(n->valuesLists, (yyvsp[(4) - (5)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 603:
#line 793 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 604:
#line 794 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (2)].node); ;}
    break;

  case 605:
#line 807 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 606:
#line 808 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 607:
#line 812 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 608:
#line 813 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 609:
#line 817 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 610:
#line 818 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 611:
#line 825 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(1) - (3)].range)->alias = (yyvsp[(2) - (3)].alias);
					(yyvsp[(1) - (3)].range)->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) (yyvsp[(1) - (3)].range);
				;}
    break;

  case 612:
#line 831 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(1) - (3)].node);
					n->alias = (PGAlias*) linitial((yyvsp[(2) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(2) - (3)].list));
					n->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 613:
#line 839 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(2) - (3)].node);
					n->lateral = true;
					n->alias = (PGAlias*) linitial((yyvsp[(3) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(3) - (3)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 614:
#line 847 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = false;
					n->subquery = (yyvsp[(1) - (3)].node);
					n->alias = (yyvsp[(2) - (3)].alias);
					n->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 615:
#line 856 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = true;
					n->subquery = (yyvsp[(2) - (3)].node);
					n->alias = (yyvsp[(3) - (3)].alias);
					n->sample = NULL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 616:
#line 865 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) (yyvsp[(1) - (1)].jexpr);
				;}
    break;

  case 617:
#line 869 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(2) - (4)].jexpr)->alias = (yyvsp[(4) - (4)].alias);
					(yyval.node) = (PGNode *) (yyvsp[(2) - (4)].jexpr);
				;}
    break;

  case 618:
#line 895 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.jexpr) = (yyvsp[(2) - (3)].jexpr);
				;}
    break;

  case 619:
#line 899 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* CROSS JOIN is same as unqualified inner join */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL;
					n->quals = NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 620:
#line 912 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(2) - (5)].jtype);
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(4) - (5)].node);
					if ((yyvsp[(5) - (5)].node) != NULL && IsA((yyvsp[(5) - (5)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(5) - (5)].node); /* USING clause */
					else
						n->quals = (yyvsp[(5) - (5)].node); /* ON clause */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 621:
#line 926 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(3) - (4)].node);
					if ((yyvsp[(4) - (4)].node) != NULL && IsA((yyvsp[(4) - (4)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(4) - (4)].node); /* USING clause */
					else
						n->quals = (yyvsp[(4) - (4)].node); /* ON clause */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 622:
#line 941 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(3) - (5)].jtype);
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(5) - (5)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 623:
#line 953 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 624:
#line 969 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.alias)->colnames = (yyvsp[(4) - (5)].list);
				;}
    break;

  case 625:
#line 975 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (2)].str);
				;}
    break;

  case 626:
#line 980 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.alias)->colnames = (yyvsp[(3) - (4)].list);
				;}
    break;

  case 627:
#line 986 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (1)].str);
				;}
    break;

  case 628:
#line 992 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = (yyvsp[(1) - (1)].alias); ;}
    break;

  case 629:
#line 993 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = NULL; ;}
    break;

  case 630:
#line 1002 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (1)].alias), NIL);
				;}
    break;

  case 631:
#line 1006 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 632:
#line 1010 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.list) = list_make2(a, (yyvsp[(4) - (5)].list));
				;}
    break;

  case 633:
#line 1016 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.list) = list_make2(a, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 634:
#line 1022 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, NIL);
				;}
    break;

  case 635:
#line 1027 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_FULL; ;}
    break;

  case 636:
#line 1028 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_LEFT; ;}
    break;

  case 637:
#line 1029 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_RIGHT; ;}
    break;

  case 638:
#line 1030 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_INNER; ;}
    break;

  case 639:
#line 1034 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 640:
#line 1035 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 641:
#line 1047 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) (yyvsp[(3) - (4)].list); ;}
    break;

  case 642:
#line 1048 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 643:
#line 1054 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, implicitly */
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 644:
#line 1061 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, explicitly */
					(yyval.range) = (yyvsp[(1) - (2)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 645:
#line 1068 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance */
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 646:
#line 1075 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance, SQL99-style syntax */
					(yyval.range) = (yyvsp[(3) - (4)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 647:
#line 1107 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(2) - (2)].boolean);
					n->is_rowsfrom = false;
					n->functions = list_make1(list_make2((yyvsp[(1) - (2)].node), NIL));
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 648:
#line 1118 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(6) - (6)].boolean);
					n->is_rowsfrom = true;
					n->functions = (yyvsp[(4) - (6)].list);
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 649:
#line 1131 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 650:
#line 1135 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 651:
#line 1136 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 652:
#line 1139 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 653:
#line 1140 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 654:
#line 1143 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 655:
#line 1144 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 656:
#line 1149 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 657:
#line 1150 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 658:
#line 1156 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 659:
#line 1160 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 660:
#line 1166 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (3)].str);
					n->typeName = (yyvsp[(2) - (3)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collClause = (PGCollateClause *) (yyvsp[(3) - (3)].node);
					n->collOid = InvalidOid;
					n->constraints = NIL;
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 661:
#line 1187 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 662:
#line 1194 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 663:
#line 1207 "third_party/libpg_query/grammar/statements/select.y"
    {
             (yyval.list) = list_make1(list_make2(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].typnam)));
            ;}
    break;

  case 664:
#line 1210 "third_party/libpg_query/grammar/statements/select.y"
    {
             (yyval.list) = lappend((yyvsp[(1) - (4)].list), list_make2(makeString((yyvsp[(3) - (4)].str)), (yyvsp[(4) - (4)].typnam)));
            ;}
    break;

  case 667:
#line 1217 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 668:
#line 1218 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = NULL; ;}
    break;

  case 669:
#line 1221 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 670:
#line 1226 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->setof = true;
				;}
    break;

  case 671:
#line 1233 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (5)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(4) - (5)].ival)));
				;}
    break;

  case 672:
#line 1238 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (6)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(5) - (6)].ival)));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 673:
#line 1244 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
				;}
    break;

  case 674:
#line 1249 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 675:
#line 1254 "third_party/libpg_query/grammar/statements/select.y"
    {
               (yyval.typnam) = SystemTypeName("struct");
               (yyval.typnam)->arrayBounds = (yyvsp[(5) - (5)].list);
               (yyval.typnam)->typmods = (yyvsp[(3) - (5)].list);
               (yyval.typnam)->location = (yylsp[(1) - (5)]);
               ;}
    break;

  case 676:
#line 1260 "third_party/libpg_query/grammar/statements/select.y"
    {
               (yyval.typnam) = SystemTypeName("map");
               (yyval.typnam)->arrayBounds = (yyvsp[(5) - (5)].list);
               (yyval.typnam)->typmods = (yyvsp[(3) - (5)].list);
               (yyval.typnam)->location = (yylsp[(1) - (5)]);
			;}
    break;

  case 677:
#line 1270 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeInteger(-1)); ;}
    break;

  case 678:
#line 1272 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (4)].list), makeInteger((yyvsp[(3) - (4)].ival))); ;}
    break;

  case 679:
#line 1274 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = NIL; ;}
    break;

  case 680:
#line 1278 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 681:
#line 1279 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 682:
#line 1280 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 683:
#line 1281 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 684:
#line 1282 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 685:
#line 1284 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 686:
#line 1289 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (4)].typnam);
					(yyval.typnam)->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											 makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
				;}
    break;

  case 687:
#line 1308 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 688:
#line 1309 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 689:
#line 1310 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 690:
#line 1311 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 691:
#line 1323 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = makeTypeName((yyvsp[(1) - (2)].str));
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 692:
#line 1336 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 693:
#line 1337 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 694:
#line 1344 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 695:
#line 1349 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 696:
#line 1354 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int2");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 697:
#line 1359 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int8");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 698:
#line 1364 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 699:
#line 1369 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (2)].typnam);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 700:
#line 1374 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float8");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 701:
#line 1379 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 702:
#line 1385 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 703:
#line 1391 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 704:
#line 1397 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("bool");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 705:
#line 1404 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Check FLOAT() precision limits assuming IEEE floating
					 * types - thomas 1997-09-18
					 */
					if ((yyvsp[(2) - (3)].ival) < 1)
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be at least 1 bit"),
								 parser_errposition((yylsp[(2) - (3)]))));
					else if ((yyvsp[(2) - (3)].ival) <= 24)
						(yyval.typnam) = SystemTypeName("float4");
					else if ((yyvsp[(2) - (3)].ival) <= 53)
						(yyval.typnam) = SystemTypeName("float8");
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be less than 54 bits"),
								 parser_errposition((yylsp[(2) - (3)]))));
				;}
    break;

  case 706:
#line 1425 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
				;}
    break;

  case 707:
#line 1435 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 708:
#line 1439 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 709:
#line 1447 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 710:
#line 1451 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 711:
#line 1459 "third_party/libpg_query/grammar/statements/select.y"
    {
					const char *typname;

					typname = (yyvsp[(2) - (5)].boolean) ? "varbit" : "bit";
					(yyval.typnam) = SystemTypeName(typname);
					(yyval.typnam)->typmods = (yyvsp[(4) - (5)].list);
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 712:
#line 1471 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* bit defaults to bit(1), varbit to no limit */
					if ((yyvsp[(2) - (2)].boolean))
					{
						(yyval.typnam) = SystemTypeName("varbit");
					}
					else
					{
						(yyval.typnam) = SystemTypeName("bit");
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					}
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 713:
#line 1492 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 714:
#line 1496 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 715:
#line 1502 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 716:
#line 1506 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Length was not specified so allow to be unrestricted.
					 * This handles problems with fixed-length (bpchar) strings
					 * which in column definitions must default to a length
					 * of one, but should not be constrained if the length
					 * was not specified.
					 */
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 717:
#line 1519 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (4)].conststr));
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 718:
#line 1527 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (1)].conststr));
					/* char defaults to char(1), varchar to no limit */
					if (strcmp((yyvsp[(1) - (1)].conststr), "bpchar") == 0)
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 719:
#line 1537 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 720:
#line 1539 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 721:
#line 1541 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "varchar"; ;}
    break;

  case 722:
#line 1543 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 723:
#line 1545 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 724:
#line 1547 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 725:
#line 1551 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 726:
#line 1552 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 727:
#line 1560 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 728:
#line 1569 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 729:
#line 1577 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 730:
#line 1586 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 731:
#line 1597 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("interval");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 732:
#line 1604 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 733:
#line 1605 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 734:
#line 1606 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 751:
#line 1635 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR), (yylsp[(1) - (1)]))); ;}
    break;

  case 752:
#line 1637 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MONTH), (yylsp[(1) - (1)]))); ;}
    break;

  case 753:
#line 1639 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY), (yylsp[(1) - (1)]))); ;}
    break;

  case 754:
#line 1641 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR), (yylsp[(1) - (1)]))); ;}
    break;

  case 755:
#line 1643 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE), (yylsp[(1) - (1)]))); ;}
    break;

  case 756:
#line 1645 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 757:
#line 1647 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MILLISECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 758:
#line 1649 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MICROSECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 759:
#line 1651 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR) |
												 INTERVAL_MASK(MONTH), (yylsp[(1) - (3)])));
				;}
    break;

  case 760:
#line 1656 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR), (yylsp[(1) - (3)])));
				;}
    break;

  case 761:
#line 1661 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 762:
#line 1667 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 763:
#line 1674 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 764:
#line 1679 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 765:
#line 1685 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 766:
#line 1690 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 767:
#line 1721 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 768:
#line 1724 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), 0, (yylsp[(2) - (3)])); ;}
    break;

  case 769:
#line 1726 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = (yyvsp[(1) - (3)].node);
					n->collname = (yyvsp[(3) - (3)].list);
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 770:
#line 1734 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("timezone"),
											   list_make2((yyvsp[(5) - (5)].node), (yyvsp[(1) - (5)].node)),
											   (yylsp[(2) - (5)]));
				;}
    break;

  case 771:
#line 1749 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 772:
#line 1751 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 773:
#line 1753 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 774:
#line 1755 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 775:
#line 1757 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 776:
#line 1759 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 777:
#line 1761 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 778:
#line 1763 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 779:
#line 1765 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "**", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 780:
#line 1767 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 781:
#line 1769 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 782:
#line 1771 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 783:
#line 1773 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 784:
#line 1775 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 785:
#line 1777 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 786:
#line 1780 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 787:
#line 1782 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 788:
#line 1784 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 789:
#line 1787 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeAndExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 790:
#line 1789 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeOrExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 791:
#line 1791 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 792:
#line 1793 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 793:
#line 1796 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_GLOB, "~~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 794:
#line 1801 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 795:
#line 1806 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make3((yyvsp[(1) - (5)].node), (yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 796:
#line 1813 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "!~~",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 797:
#line 1818 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make3((yyvsp[(1) - (6)].node), (yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 798:
#line 1825 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 799:
#line 1830 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("ilike_escape"),
											   list_make3((yyvsp[(1) - (5)].node), (yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 800:
#line 1837 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 801:
#line 1842 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_ilike_escape"),
											   list_make3((yyvsp[(1) - (6)].node), (yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 802:
#line 1850 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (4)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (4)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (4)].node), (PGNode *) n, (yylsp[(2) - (4)]));
				;}
    break;

  case 803:
#line 1858 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 804:
#line 1866 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (5)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 805:
#line 1874 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
											   (yylsp[(2) - (7)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (7)].node), (PGNode *) n, (yylsp[(2) - (7)]));
				;}
    break;

  case 806:
#line 1892 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 807:
#line 1900 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 808:
#line 1908 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 809:
#line 1916 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 810:
#line 1924 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 811:
#line 1931 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("row"), (yyvsp[(1) - (1)].list), (yylsp[(1) - (1)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 812:
#line 1935 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("struct_pack"), (yyvsp[(2) - (3)].list), (yylsp[(2) - (3)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 813:
#line 1939 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("list_value"), (yyvsp[(2) - (3)].list), (yylsp[(2) - (3)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 814:
#line 1944 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGLambdaFunction *n = makeNode(PGLambdaFunction);
				n->lhs = (yyvsp[(1) - (3)].node);
				n->rhs = (yyvsp[(3) - (3)].node);
				n->location = (yylsp[(2) - (3)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 815:
#line 1952 "third_party/libpg_query/grammar/statements/select.y"
    {
                                        (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "->>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
                        ;}
    break;

  case 816:
#line 1956 "third_party/libpg_query/grammar/statements/select.y"
    {
					if (list_length((yyvsp[(1) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on left side of OVERLAPS expression"),
								 parser_errposition((yylsp[(1) - (3)]))));
					if (list_length((yyvsp[(3) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on right side of OVERLAPS expression"),
								 parser_errposition((yylsp[(3) - (3)]))));
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlaps"),
											   list_concat((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)),
											   (yylsp[(2) - (3)]));
				;}
    break;

  case 817:
#line 1972 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = PG_IS_TRUE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 818:
#line 1980 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_TRUE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 819:
#line 1988 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_FALSE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 820:
#line 1996 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_FALSE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 821:
#line 2004 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_UNKNOWN;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 822:
#line 2012 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_UNKNOWN;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 823:
#line 2020 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 824:
#line 2024 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 825:
#line 2028 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 826:
#line 2032 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 827:
#line 2036 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN,
												   "BETWEEN",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 828:
#line 2044 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN,
												   "NOT BETWEEN",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 829:
#line 2052 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN_SYM,
												   "BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 830:
#line 2060 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN_SYM,
												   "NOT BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 831:
#line 2068 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(3) - (3)].node), PGSubLink))
					{
						/* generate foo = ANY (subquery) */
						PGSubLink *n = (PGSubLink *) (yyvsp[(3) - (3)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (3)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (3)]);
						(yyval.node) = (PGNode *)n;
					}
					else
					{
						/* generate scalar IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
					}
				;}
    break;

  case 832:
#line 2088 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(4) - (4)].node), PGSubLink))
					{
						/* generate NOT (foo = ANY (subquery)) */
						/* Make an = ANY node */
						PGSubLink *n = (PGSubLink *) (yyvsp[(4) - (4)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (4)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (4)]);
						/* Stick a NOT on top; must have same parse location */
						(yyval.node) = makeNotExpr((PGNode *) n, (yylsp[(2) - (4)]));
					}
					else
					{
						/* generate scalar NOT IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "<>", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
					}
				;}
    break;

  case 833:
#line 2110 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = (yyvsp[(3) - (4)].subquerytype);
					n->subLinkId = 0;
					n->testexpr = (yyvsp[(1) - (4)].node);
					n->operName = (yyvsp[(2) - (4)].list);
					n->subselect = (yyvsp[(4) - (4)].node);
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 834:
#line 2121 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(3) - (6)].subquerytype) == PG_ANY_SUBLINK)
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ANY, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
					else
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ALL, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 835:
#line 2128 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * The SQL spec only allows DEFAULT in "contextually typed
					 * expressions", but for us, it's easier to allow it in
					 * any a_expr and then throw error during parse analysis
					 * if it's in an inappropriate context.  This way also
					 * lets us say something smarter than "syntax error".
					 */
					PGSetToDefault *n = makeNode(PGSetToDefault);
					/* parse analysis will fill in the rest */
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 836:
#line 2141 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGList *func_name = list_make1(makeString("construct_array"));
				PGFuncCall *n = makeFuncCall(func_name, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 837:
#line 2158 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 838:
#line 2160 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), 0, (yylsp[(2) - (3)])); ;}
    break;

  case 839:
#line 2162 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 840:
#line 2164 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 841:
#line 2166 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 842:
#line 2168 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 843:
#line 2170 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 844:
#line 2172 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 845:
#line 2174 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 846:
#line 2176 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 847:
#line 2178 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "**", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 848:
#line 2180 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 849:
#line 2182 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 850:
#line 2184 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 851:
#line 2186 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 852:
#line 2188 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 853:
#line 2190 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 854:
#line 2192 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 855:
#line 2194 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 856:
#line 2196 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 857:
#line 2198 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 858:
#line 2202 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 859:
#line 2206 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 860:
#line 2210 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 861:
#line 2223 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 862:
#line 2224 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 863:
#line 2226 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGPositionalReference *n = makeNode(PGPositionalReference);
					n->position = (yyvsp[(2) - (2)].ival);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 864:
#line 2233 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeParamRef(0, (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeParamRef(0, (yylsp[(1) - (2)]));
				;}
    break;

  case 865:
#line 2245 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGParamRef *p = makeNode(PGParamRef);
					p->number = (yyvsp[(1) - (2)].ival);
					p->location = (yylsp[(1) - (2)]);
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (PGNode *) p;
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = (PGNode *) p;
				;}
    break;

  case 866:
#line 2260 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(4) - (4)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(2) - (4)].node);
						n->indirection = check_indirection((yyvsp[(4) - (4)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else
						(yyval.node) = (yyvsp[(2) - (4)].node);
				;}
    break;

  case 867:
#line 2272 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 868:
#line 2274 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list)) {
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(1) - (2)].node);
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else {
						(yyval.node) = (yyvsp[(1) - (2)].node);
					}
				;}
    break;

  case 869:
#line 2286 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (1)].node);
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 870:
#line 2297 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Because the select_with_parens nonterminal is designed
					 * to "eat" as many levels of parens as possible, the
					 * '(' a_expr ')' opt_indirection production above will
					 * fail to match a sub-SELECT with indirection decoration;
					 * the sub-SELECT won't be regarded as an a_expr as long
					 * as there are parens around it.  To support applying
					 * subscripting or field selection to a sub-SELECT result,
					 * we need this redundant-looking production.
					 */
					PGSubLink *n = makeNode(PGSubLink);
					PGAIndirection *a = makeNode(PGAIndirection);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					a->arg = (PGNode *)n;
					a->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.node) = (PGNode *)a;
				;}
    break;

  case 871:
#line 2321 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXISTS_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(2) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 872:
#line 2332 "third_party/libpg_query/grammar/statements/select.y"
    {
				  PGGroupingFunc *g = makeNode(PGGroupingFunc);
				  g->args = (yyvsp[(3) - (4)].list);
				  g->location = (yylsp[(1) - (4)]);
				  (yyval.node) = (PGNode *)g;
			  ;}
    break;

  case 873:
#line 2341 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall((yyvsp[(1) - (3)].list), NIL, (yylsp[(1) - (3)]));
				;}
    break;

  case 874:
#line 2345 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(3) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(4) - (6)].list);
					n->agg_ignore_nulls = (yyvsp[(5) - (6)].boolean);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 875:
#line 2352 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (7)].list), list_make1((yyvsp[(4) - (7)].node)), (yylsp[(1) - (7)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(5) - (7)].list);
					n->agg_ignore_nulls = (yyvsp[(6) - (7)].boolean);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 876:
#line 2360 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (9)].list), lappend((yyvsp[(3) - (9)].list), (yyvsp[(6) - (9)].node)), (yylsp[(1) - (9)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(7) - (9)].list);
					n->agg_ignore_nulls = (yyvsp[(8) - (9)].boolean);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 877:
#line 2368 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (7)].list), (yyvsp[(4) - (7)].list), (yylsp[(1) - (7)]));
					n->agg_order = (yyvsp[(5) - (7)].list);
					n->agg_ignore_nulls = (yyvsp[(6) - (7)].boolean);
					/* Ideally we'd mark the PGFuncCall node to indicate
					 * "must be an aggregate", but there's no provision
					 * for that in PGFuncCall at the moment.
					 */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 878:
#line 2379 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (7)].list), (yyvsp[(4) - (7)].list), (yylsp[(1) - (7)]));
					n->agg_order = (yyvsp[(5) - (7)].list);
					n->agg_ignore_nulls = (yyvsp[(6) - (7)].boolean);
					n->agg_distinct = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 879:
#line 2387 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * We consider AGGREGATE(*) to invoke a parameterless
					 * aggregate.  This does the right thing for COUNT(*),
					 * and there are no other aggregates in SQL that accept
					 * '*' as parameter.
					 *
					 * The PGFuncCall node is also marked agg_star = true,
					 * so that later processing can detect what the argument
					 * really was.
					 */
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (4)].list), NIL, (yylsp[(1) - (4)]));
					n->agg_star = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 880:
#line 2415 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = (PGFuncCall *) (yyvsp[(1) - (5)].node);
					/*
					 * The order clause for WITHIN GROUP and the one for
					 * plain-aggregate ORDER BY share a field, so we have to
					 * check here that at most one is present.  We also check
					 * for DISTINCT and VARIADIC here to give a better error
					 * location.  Other consistency checks are deferred to
					 * parse analysis.
					 */
					if ((yyvsp[(2) - (5)].list) != NIL)
					{
						if (n->agg_order != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use multiple ORDER BY clauses with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (5)]))));
						if (n->agg_distinct)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use DISTINCT with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (5)]))));
						if (n->func_variadic)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use VARIADIC with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (5)]))));
						n->agg_order = (yyvsp[(2) - (5)].list);
						n->agg_within_group = true;
					}
					n->agg_filter = (yyvsp[(3) - (5)].node);
					n->export_state = (yyvsp[(4) - (5)].boolean);
					n->over = (yyvsp[(5) - (5)].windef);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 881:
#line 2451 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 882:
#line 2461 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 883:
#line 2462 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 884:
#line 2470 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("pg_collation_for"),
											   list_make1((yyvsp[(4) - (5)].node)),
											   (yylsp[(1) - (5)]));
				;}
    break;

  case 885:
#line 2476 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_DATE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 886:
#line 2480 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 887:
#line 2484 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 888:
#line 2488 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 889:
#line 2492 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 890:
#line 2496 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 891:
#line 2500 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 892:
#line 2504 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 893:
#line 2508 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 894:
#line 2512 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_ROLE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 895:
#line 2516 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 896:
#line 2520 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_SESSION_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 897:
#line 2524 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 898:
#line 2528 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_CATALOG, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 899:
#line 2532 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_SCHEMA, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 900:
#line 2536 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), 0, (yylsp[(1) - (6)])); ;}
    break;

  case 901:
#line 2538 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), 1, (yylsp[(1) - (6)])); ;}
    break;

  case 902:
#line 2540 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("date_part"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 903:
#line 2544 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* overlay(A PLACING B FROM C FOR D) is converted to
					 * overlay(A, B, C, D)
					 * overlay(A PLACING B FROM C) is converted to
					 * overlay(A, B, C)
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlay"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 904:
#line 2553 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* position(A in B) is converted to position(B, A) */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("position"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 905:
#line 2558 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* substring(A from B for C) is converted to
					 * substring(A, B, C) - thomas 2000-11-28
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("substring"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 906:
#line 2565 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* TREAT(expr AS target) converts expr of a particular type to target,
					 * which is defined to be a subtype of the original expression.
					 * In SQL99, this is intended for use with structured UDTs,
					 * but let's make this a generally useful form allowing stronger
					 * coercions than are handled by implicit casting.
					 *
					 * Convert SystemTypeName() to SystemFuncName() even though
					 * at the moment they result in the same thing.
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName(((PGValue *)llast((yyvsp[(5) - (6)].typnam)->names))->val.str),
												list_make1((yyvsp[(3) - (6)].node)),
												(yylsp[(1) - (6)]));
				;}
    break;

  case 907:
#line 2580 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* various trim expressions are defined in SQL
					 * - thomas 1997-07-19
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 908:
#line 2587 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("ltrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 909:
#line 2591 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("rtrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 910:
#line 2595 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 911:
#line 2599 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NULLIF, "=", (yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(1) - (6)]));
				;}
    break;

  case 912:
#line 2603 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCoalesceExpr *c = makeNode(PGCoalesceExpr);
					c->args = (yyvsp[(3) - (4)].list);
					c->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 913:
#line 2616 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 914:
#line 2617 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 915:
#line 2621 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(4) - (5)].node); ;}
    break;

  case 916:
#line 2622 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 917:
#line 2626 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 918:
#line 2627 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 919:
#line 2634 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 920:
#line 2635 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 921:
#line 2639 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].windef)); ;}
    break;

  case 922:
#line 2641 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].windef)); ;}
    break;

  case 923:
#line 2646 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(3) - (3)].windef);
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.windef) = n;
				;}
    break;

  case 924:
#line 2654 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = (yyvsp[(2) - (2)].windef); ;}
    break;

  case 925:
#line 2656 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = (yyvsp[(2) - (2)].str);
					n->refname = NULL;
					n->partitionClause = NIL;
					n->orderClause = NIL;
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.windef) = n;
				;}
    break;

  case 926:
#line 2669 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = NULL; ;}
    break;

  case 927:
#line 2674 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = NULL;
					n->refname = (yyvsp[(2) - (6)].str);
					n->partitionClause = (yyvsp[(3) - (6)].list);
					n->orderClause = (yyvsp[(4) - (6)].list);
					/* copy relevant fields of opt_frame_clause */
					n->frameOptions = (yyvsp[(5) - (6)].windef)->frameOptions;
					n->startOffset = (yyvsp[(5) - (6)].windef)->startOffset;
					n->endOffset = (yyvsp[(5) - (6)].windef)->endOffset;
					n->location = (yylsp[(1) - (6)]);
					(yyval.windef) = n;
				;}
    break;

  case 928:
#line 2699 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 929:
#line 2700 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 930:
#line 2703 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 931:
#line 2704 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 932:
#line 2716 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_RANGE;
					(yyval.windef) = n;
				;}
    break;

  case 933:
#line 2722 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_ROWS;
					(yyval.windef) = n;
				;}
    break;

  case 934:
#line 2728 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 935:
#line 2738 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(1) - (1)].windef);
					/* reject invalid cases */
					if (n->frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(1) - (1)]))));
					if (n->frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot end with current row"),
								 parser_errposition((yylsp[(1) - (1)]))));
					n->frameOptions |= FRAMEOPTION_END_CURRENT_ROW;
					(yyval.windef) = n;
				;}
    break;

  case 936:
#line 2755 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n1 = (yyvsp[(2) - (4)].windef);
					PGWindowDef *n2 = (yyvsp[(4) - (4)].windef);
					/* form merged options */
					int		frameOptions = n1->frameOptions;
					/* shift converts START_ options to END_ options */
					frameOptions |= n2->frameOptions << 1;
					frameOptions |= FRAMEOPTION_BETWEEN;
					/* reject invalid cases */
					if (frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(2) - (4)]))));
					if (frameOptions & FRAMEOPTION_END_UNBOUNDED_PRECEDING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame end cannot be UNBOUNDED PRECEDING"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_CURRENT_ROW) &&
						(frameOptions & FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from current row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING) &&
						(frameOptions & (FRAMEOPTION_END_VALUE_PRECEDING |
										 FRAMEOPTION_END_CURRENT_ROW)))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					n1->frameOptions = frameOptions;
					n1->endOffset = n2->startOffset;
					(yyval.windef) = n1;
				;}
    break;

  case 937:
#line 2800 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_PRECEDING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 938:
#line 2808 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_FOLLOWING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 939:
#line 2816 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_CURRENT_ROW;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 940:
#line 2824 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_PRECEDING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 941:
#line 2832 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_FOLLOWING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 942:
#line 2852 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 943:
#line 2853 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 944:
#line 2856 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 945:
#line 2857 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(2) - (5)].list), (yyvsp[(4) - (5)].node)); ;}
    break;

  case 946:
#line 2861 "third_party/libpg_query/grammar/statements/select.y"
    {
		PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
		na->name = (yyvsp[(1) - (3)].str);
		na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
		na->argnumber = -1;
		na->location = (yylsp[(1) - (3)]);
		(yyval.node) = (PGNode *) na;
	;}
    break;

  case 947:
#line 2871 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 948:
#line 2872 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 949:
#line 2876 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 950:
#line 2877 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 951:
#line 2881 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 952:
#line 2882 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 953:
#line 2883 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ALL_SUBLINK; ;}
    break;

  case 954:
#line 2886 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 955:
#line 2887 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) (yyvsp[(1) - (1)].conststr); ;}
    break;

  case 956:
#line 2890 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "+"; ;}
    break;

  case 957:
#line 2891 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "-"; ;}
    break;

  case 958:
#line 2892 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "*"; ;}
    break;

  case 959:
#line 2893 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "/"; ;}
    break;

  case 960:
#line 2894 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "%"; ;}
    break;

  case 961:
#line 2895 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "^"; ;}
    break;

  case 962:
#line 2896 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "**"; ;}
    break;

  case 963:
#line 2897 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<"; ;}
    break;

  case 964:
#line 2898 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">"; ;}
    break;

  case 965:
#line 2899 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "="; ;}
    break;

  case 966:
#line 2900 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<="; ;}
    break;

  case 967:
#line 2901 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">="; ;}
    break;

  case 968:
#line 2902 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<>"; ;}
    break;

  case 969:
#line 2906 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 970:
#line 2908 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 971:
#line 2913 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 972:
#line 2915 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 973:
#line 2920 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 974:
#line 2922 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 975:
#line 2924 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~")); ;}
    break;

  case 976:
#line 2926 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~")); ;}
    break;

  case 977:
#line 2928 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~~")); ;}
    break;

  case 978:
#line 2930 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~~")); ;}
    break;

  case 979:
#line 2932 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~*")); ;}
    break;

  case 980:
#line 2934 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~*")); ;}
    break;

  case 981:
#line 2948 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 982:
#line 2950 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 983:
#line 2954 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 984:
#line 2958 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 985:
#line 2965 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 986:
#line 2970 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (2)].list);
				;}
    break;

  case 987:
#line 2977 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 988:
#line 2981 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = NULL;
				;}
    break;

  case 989:
#line 2990 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 990:
#line 2994 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 991:
#line 3000 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 992:
#line 3004 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 993:
#line 3013 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 994:
#line 3023 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 995:
#line 3024 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 996:
#line 3029 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(makeStringConst((yyvsp[(1) - (3)].str), (yylsp[(1) - (3)])), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 997:
#line 3032 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 998:
#line 3039 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 999:
#line 3040 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "year"; ;}
    break;

  case 1000:
#line 3041 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "month"; ;}
    break;

  case 1001:
#line 3042 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "day"; ;}
    break;

  case 1002:
#line 3043 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "hour"; ;}
    break;

  case 1003:
#line 3044 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "minute"; ;}
    break;

  case 1004:
#line 3045 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "second"; ;}
    break;

  case 1005:
#line 3046 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "millisecond"; ;}
    break;

  case 1006:
#line 3047 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "microsecond"; ;}
    break;

  case 1007:
#line 3048 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1008:
#line 3059 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make4((yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].node), (yyvsp[(3) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 1009:
#line 3063 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 1010:
#line 3070 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1011:
#line 3076 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(3) - (3)].node), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 1012:
#line 3077 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1013:
#line 3094 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 1014:
#line 3098 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* not legal per SQL99, but might as well allow it */
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yyvsp[(2) - (3)].node));
				;}
    break;

  case 1015:
#line 3103 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 1016:
#line 3107 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Since there are no cases where this syntax allows
					 * a textual FOR value, we forcibly cast the argument
					 * to int4.  The possible matches in pg_proc are
					 * substring(text,int4) and substring(text,text),
					 * and we don't want the parser to choose the latter,
					 * which it is likely to do if the second argument
					 * is unknown or doesn't have an implicit cast to int4.
					 */
					(yyval.list) = list_make3((yyvsp[(1) - (2)].node), makeIntConst(1, -1),
									makeTypeCast((yyvsp[(2) - (2)].node),
												 SystemTypeName("int4"), 0, -1));
				;}
    break;

  case 1017:
#line 3122 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 1018:
#line 3126 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1019:
#line 3130 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1020:
#line 3133 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1021:
#line 3136 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(3) - (3)].list), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 1022:
#line 3137 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1023:
#line 3138 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1024:
#line 3142 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subselect = (yyvsp[(1) - (1)].node);
					/* other fields will be filled later */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1025:
#line 3148 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *)(yyvsp[(2) - (3)].list); ;}
    break;

  case 1026:
#line 3159 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseExpr *c = makeNode(PGCaseExpr);
					c->casetype = InvalidOid; /* not analyzed yet */
					c->arg = (PGExpr *) (yyvsp[(2) - (5)].node);
					c->args = (yyvsp[(3) - (5)].list);
					c->defresult = (PGExpr *) (yyvsp[(4) - (5)].node);
					c->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 1027:
#line 3172 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1028:
#line 3173 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 1029:
#line 3178 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseWhen *w = makeNode(PGCaseWhen);
					w->expr = (PGExpr *) (yyvsp[(2) - (4)].node);
					w->result = (PGExpr *) (yyvsp[(4) - (4)].node);
					w->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)w;
				;}
    break;

  case 1030:
#line 3188 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1031:
#line 3189 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1032:
#line 3192 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 1033:
#line 3193 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1034:
#line 3197 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (1)].str), NIL, (yylsp[(1) - (1)]), yyscanner);
				;}
    break;

  case 1035:
#line 3201 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].list), (yylsp[(1) - (2)]), yyscanner);
				;}
    break;

  case 1036:
#line 3208 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(2) - (2)].str));
				;}
    break;

  case 1037:
#line 3212 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = false;
					ai->lidx = NULL;
					ai->uidx = (yyvsp[(2) - (3)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 1038:
#line 3220 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = true;
					ai->lidx = (yyvsp[(2) - (5)].node);
					ai->uidx = (yyvsp[(4) - (5)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 1039:
#line 3230 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 1040:
#line 3231 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1041:
#line 3235 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1042:
#line 3236 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 1043:
#line 3240 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1044:
#line 3241 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 1047:
#line 3255 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1048:
#line 3256 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1049:
#line 3260 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 1050:
#line 3261 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 1051:
#line 3265 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1052:
#line 3266 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 1053:
#line 3270 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(3) - (3)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (3)].node);
					(yyval.target)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 1054:
#line 3286 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(2) - (2)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (2)].node);
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 1055:
#line 3294 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (1)].node);
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 1056:
#line 3302 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnRef *n = makeNode(PGColumnRef);
					PGAStar *star = makeNode(PGAStar);
					n->fields = list_make1(star);
					n->location = (yylsp[(1) - (3)]);
					star->except_list = (yyvsp[(2) - (3)].list);
					star->replace_list = (yyvsp[(3) - (3)].list);

					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)n;
					(yyval.target)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 1057:
#line 3317 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnRef *n = makeNode(PGColumnRef);
					PGAStar *star = makeNode(PGAStar);
					n->fields = list_make1(star);
					n->location = (yylsp[(1) - (5)]);
					star->relation = (yyvsp[(1) - (5)].str);
					star->except_list = (yyvsp[(4) - (5)].list);
					star->replace_list = (yyvsp[(5) - (5)].list);

					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)n;
					(yyval.target)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 1058:
#line 3334 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 1059:
#line 3335 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
    break;

  case 1060:
#line 3338 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1061:
#line 3339 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NULL; ;}
    break;

  case 1062:
#line 3342 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (3)].node), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1063:
#line 3346 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 1064:
#line 3347 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 1065:
#line 3351 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1066:
#line 3352 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 1067:
#line 3355 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 1068:
#line 3356 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(2) - (2)].list)); ;}
    break;

  case 1069:
#line 3357 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NULL; ;}
    break;

  case 1070:
#line 3367 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].range)); ;}
    break;

  case 1071:
#line 3368 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].range)); ;}
    break;

  case 1072:
#line 3380 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = makeRangeVar(NULL, (yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1073:
#line 3384 "third_party/libpg_query/grammar/statements/select.y"
    {
					check_qualified_name((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.range) = makeRangeVar(NULL, NULL, (yylsp[(1) - (2)]));
					switch (list_length((yyvsp[(2) - (2)].list)))
					{
						case 1:
							(yyval.range)->catalogname = NULL;
							(yyval.range)->schemaname = (yyvsp[(1) - (2)].str);
							(yyval.range)->relname = strVal(linitial((yyvsp[(2) - (2)].list)));
							break;
						case 2:
							(yyval.range)->catalogname = (yyvsp[(1) - (2)].str);
							(yyval.range)->schemaname = strVal(linitial((yyvsp[(2) - (2)].list)));
							(yyval.range)->relname = strVal(lsecond((yyvsp[(2) - (2)].list)));
							break;
						default:
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("improper qualified name (too many dotted names): %s",
											NameListToString(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)))),
									 parser_errposition((yylsp[(1) - (2)]))));
							break;
					}
				;}
    break;

  case 1074:
#line 3411 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1075:
#line 3413 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1076:
#line 3418 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1077:
#line 3419 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 1078:
#line 3422 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1079:
#line 3424 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1080:
#line 3435 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1081:
#line 3438 "third_party/libpg_query/grammar/statements/select.y"
    {
						(yyval.list) = check_func_name(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)),
											 yyscanner);
					;}
    break;

  case 1082:
#line 3449 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival), (yylsp[(1) - (1)]));
				;}
    break;

  case 1083:
#line 3453 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1084:
#line 3457 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeStringConst((yyvsp[(1) - (2)].str), (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeStringConst((yyvsp[(1) - (2)].str), (yylsp[(1) - (2)]));
				;}
    break;

  case 1085:
#line 3469 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1086:
#line 3473 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* This is a bit constant per SQL99:
					 * Without Feature F511, "BIT data type",
					 * a <general literal> shall not be a
					 * <bit string literal> or a <hex string literal>.
					 */
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1087:
#line 3482 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic type 'literal' syntax */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (2)].list));
					t->location = (yylsp[(1) - (2)]);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), t);
				;}
    break;

  case 1088:
#line 3489 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic syntax with a type modifier */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (7)].list));
					PGListCell *lc;

					/*
					 * We must use func_arg_list and opt_sort_clause in the
					 * production to avoid reduce/reduce conflicts, but we
					 * don't actually wish to allow PGNamedArgExpr in this
					 * context, ORDER BY, nor IGNORE NULLS.
					 */
					foreach(lc, (yyvsp[(3) - (7)].list))
					{
						PGNamedArgExpr *arg = (PGNamedArgExpr *) lfirst(lc);

						if (IsA(arg, PGNamedArgExpr))
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have parameter name"),
									 parser_errposition(arg->location)));
					}
					if ((yyvsp[(4) - (7)].list) != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have ORDER BY"),
									 parser_errposition((yylsp[(4) - (7)]))));
					if ((yyvsp[(5) - (7)].boolean) != false)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have IGNORE NULLS"),
									 parser_errposition((yylsp[(5) - (7)]))));


					t->typmods = (yyvsp[(3) - (7)].list);
					t->location = (yylsp[(1) - (7)]);
					(yyval.node) = makeStringConstCast((yyvsp[(7) - (7)].str), (yylsp[(7) - (7)]), t);
				;}
    break;

  case 1089:
#line 3527 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), (yyvsp[(1) - (2)].typnam));
				;}
    break;

  case 1090:
#line 3531 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(3) - (5)].node), (yylsp[(3) - (5)]), (yyvsp[(5) - (5)].list));
				;}
    break;

  case 1091:
#line 3535 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].ival), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 1092:
#line 3539 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 1093:
#line 3543 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(true, (yylsp[(1) - (1)]));
				;}
    break;

  case 1094:
#line 3547 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(false, (yylsp[(1) - (1)]));
				;}
    break;

  case 1095:
#line 3551 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 1096:
#line 3556 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1097:
#line 3557 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1098:
#line 3573 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1099:
#line 3574 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1100:
#line 3575 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1101:
#line 3578 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1102:
#line 3579 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1103:
#line 3585 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1104:
#line 3586 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1105:
#line 3587 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1106:
#line 3590 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1107:
#line 3591 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1108:
#line 3592 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1109:
#line 3595 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1110:
#line 3596 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1111:
#line 3597 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1112:
#line 3600 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1113:
#line 3601 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 1114:
#line 3605 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
    break;

  case 1115:
#line 3607 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1116:
#line 3611 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1117:
#line 3612 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1119:
#line 3623 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1120:
#line 3624 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1121:
#line 3625 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1122:
#line 3626 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1123:
#line 3629 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1124:
#line 3630 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1125:
#line 8 "third_party/libpg_query/grammar/statements/prepare.y"
    {
					PGPrepareStmt *n = makeNode(PGPrepareStmt);
					n->name = (yyvsp[(2) - (5)].str);
					n->argtypes = (yyvsp[(3) - (5)].list);
					n->query = (yyvsp[(5) - (5)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1126:
#line 18 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1127:
#line 19 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1132:
#line 8 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not both */
					n->schemaname = (yyvsp[(3) - (4)].str);
					n->schemaElts = (yyvsp[(4) - (4)].list);
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1133:
#line 17 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not here */
					n->schemaname = (yyvsp[(6) - (7)].str);
					if ((yyvsp[(7) - (7)].list) != NIL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("CREATE SCHEMA IF NOT EXISTS cannot include schema elements"),
								 parser_errposition((yylsp[(7) - (7)]))));
					n->schemaElts = (yyvsp[(7) - (7)].list);
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1134:
#line 35 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					if ((yyloc) < 0)			/* see comments for YYLLOC_DEFAULT */
						(yyloc) = (yylsp[(2) - (2)]);
					(yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 1135:
#line 41 "third_party/libpg_query/grammar/statements/create_schema.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1140:
#line 11 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (13)].boolean);
					n->concurrent = (yyvsp[(4) - (13)].boolean);
					n->idxname = (yyvsp[(5) - (13)].str);
					n->relation = (yyvsp[(7) - (13)].range);
					n->accessMethod = (yyvsp[(8) - (13)].str);
					n->indexParams = (yyvsp[(10) - (13)].list);
					n->options = (yyvsp[(12) - (13)].list);
					n->whereClause = (yyvsp[(13) - (13)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1141:
#line 36 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (16)].boolean);
					n->concurrent = (yyvsp[(4) - (16)].boolean);
					n->idxname = (yyvsp[(8) - (16)].str);
					n->relation = (yyvsp[(10) - (16)].range);
					n->accessMethod = (yyvsp[(11) - (16)].str);
					n->indexParams = (yyvsp[(13) - (16)].list);
					n->options = (yyvsp[(15) - (16)].list);
					n->whereClause = (yyvsp[(16) - (16)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1142:
#line 62 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1143:
#line 66 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
    break;

  case 1144:
#line 67 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (char*) DEFAULT_INDEX_TYPE; ;}
    break;

  case 1145:
#line 72 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1146:
#line 73 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1147:
#line 78 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1148:
#line 79 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = NULL; ;}
    break;

  case 1149:
#line 83 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1150:
#line 84 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1151:
#line 89 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1152:
#line 90 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1153:
#line 8 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1154:
#line 17 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1155:
#line 26 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1156:
#line 35 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1157:
#line 44 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1158:
#line 53 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1159:
#line 6 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					n->force = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1160:
#line 12 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					n->force = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1161:
#line 8 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGExportStmt *n = makeNode(PGExportStmt);
					n->filename = (yyvsp[(3) - (4)].str);
					n->options = NIL;
					if ((yyvsp[(4) - (4)].list)) {
						n->options = list_concat(n->options, (yyvsp[(4) - (4)].list));
					}
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1162:
#line 21 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGImportStmt *n = makeNode(PGImportStmt);
					n->filename = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1163:
#line 10 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(2) - (2)].node);
					n->options = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1164:
#line 17 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(4) - (4)].node);
					n->options = list_make1(makeDefElem("analyze", NULL, (yylsp[(2) - (4)])));
					if ((yyvsp[(3) - (4)].boolean))
						n->options = lappend(n->options,
											 makeDefElem("verbose", NULL, (yylsp[(3) - (4)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1165:
#line 27 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(3) - (3)].node);
					n->options = list_make1(makeDefElem("verbose", NULL, (yylsp[(2) - (3)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1166:
#line 34 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(5) - (5)].node);
					n->options = (yyvsp[(3) - (5)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1167:
#line 44 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1168:
#line 45 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1169:
#line 50 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 1170:
#line 51 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 1171:
#line 52 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1177:
#line 65 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1178:
#line 66 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1179:
#line 67 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1180:
#line 72 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1181:
#line 73 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1182:
#line 79 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 1183:
#line 83 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 1184:
#line 90 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1185:
#line 91 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1186:
#line 96 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "true"; ;}
    break;

  case 1187:
#line 97 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "false"; ;}
    break;

  case 1188:
#line 98 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "on"; ;}
    break;

  case 1189:
#line 104 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1190:
#line 110 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 1191:
#line 117 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1192:
#line 118 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "analyze"; ;}
    break;

  case 1193:
#line 11 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(2) - (2)].vsetstmt);
					n->scope = VAR_SET_SCOPE_DEFAULT;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1194:
#line 17 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->scope = VAR_SET_SCOPE_LOCAL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1195:
#line 23 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->scope = VAR_SET_SCOPE_SESSION;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1196:
#line 29 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->scope = VAR_SET_SCOPE_GLOBAL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1197:
#line 38 "third_party/libpg_query/grammar/statements/variable_set.y"
    {(yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt);;}
    break;

  case 1198:
#line 40 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_CURRENT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1199:
#line 48 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "timezone";
					if ((yyvsp[(3) - (3)].node) != NULL)
						n->args = list_make1((yyvsp[(3) - (3)].node));
					else
						n->kind = VAR_SET_DEFAULT;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1200:
#line 59 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "search_path";
					n->args = list_make1(makeStringConst((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)])));
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1201:
#line 71 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1202:
#line 79 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1203:
#line 87 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1204:
#line 94 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1205:
#line 104 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)])); ;}
    break;

  case 1206:
#line 106 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1207:
#line 112 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1208:
#line 116 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1209:
#line 120 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (3)].typnam);
					if ((yyvsp[(3) - (3)].list) != NIL)
					{
						PGAConst *n = (PGAConst *) linitial((yyvsp[(3) - (3)].list));
						if ((n->val.val.ival & ~(INTERVAL_MASK(HOUR) | INTERVAL_MASK(MINUTE))) != 0)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("time zone interval must be HOUR or HOUR TO MINUTE"),
									 parser_errposition((yylsp[(3) - (3)]))));
					}
					t->typmods = (yyvsp[(3) - (3)].list);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
				;}
    break;

  case 1210:
#line 135 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (5)].typnam);
					t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.node) = makeStringConstCast((yyvsp[(5) - (5)].str), (yylsp[(5) - (5)]), t);
				;}
    break;

  case 1211:
#line 141 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1212:
#line 142 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1213:
#line 143 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1214:
#line 147 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1215:
#line 148 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 1216:
#line 8 "third_party/libpg_query/grammar/statements/load.y"
    {
					PGLoadStmt *n = makeNode(PGLoadStmt);
					n->filename = (yyvsp[(2) - (2)].str);
					n->load_type = PG_LOAD_TYPE_LOAD;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1217:
#line 14 "third_party/libpg_query/grammar/statements/load.y"
    {
                    PGLoadStmt *n = makeNode(PGLoadStmt);
                    n->filename = (yyvsp[(2) - (2)].str);
                    n->load_type = PG_LOAD_TYPE_INSTALL;
                    (yyval.node) = (PGNode *)n;
				;}
    break;

  case 1218:
#line 20 "third_party/libpg_query/grammar/statements/load.y"
    {
                      PGLoadStmt *n = makeNode(PGLoadStmt);
                      n->filename = (yyvsp[(3) - (3)].str);
                      n->load_type = PG_LOAD_TYPE_FORCE_INSTALL;
                      (yyval.node) = (PGNode *)n;
                ;}
    break;

  case 1219:
#line 28 "third_party/libpg_query/grammar/statements/load.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1220:
#line 29 "third_party/libpg_query/grammar/statements/load.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1221:
#line 9 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (4)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1222:
#line 23 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(5) - (5)].range);
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1223:
#line 37 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = (PGVacuumStmt *) (yyvsp[(5) - (5)].node);
					n->options |= PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1224:
#line 49 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (4)].ival);
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1225:
#line 57 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (6)].ival);
					n->relation = (yyvsp[(5) - (6)].range);
					n->va_cols = (yyvsp[(6) - (6)].list);
					if (n->va_cols != NIL)	/* implies analyze */
						n->options |= PG_VACOPT_ANALYZE;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1226:
#line 70 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_ANALYZE; ;}
    break;

  case 1227:
#line 71 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_VERBOSE; ;}
    break;

  case 1228:
#line 72 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FREEZE; ;}
    break;

  case 1229:
#line 73 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FULL; ;}
    break;

  case 1230:
#line 75 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					if (strcmp((yyvsp[(1) - (1)].str), "disable_page_skipping") == 0)
						(yyval.ival) = PG_VACOPT_DISABLE_PAGE_SKIPPING;
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("unrecognized VACUUM option \"%s\"", (yyvsp[(1) - (1)].str)),
									 parser_errposition((yylsp[(1) - (1)]))));
				;}
    break;

  case 1231:
#line 87 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1232:
#line 88 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1233:
#line 93 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1234:
#line 94 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 1235:
#line 98 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1236:
#line 99 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1237:
#line 9 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGDeleteStmt *n = makeNode(PGDeleteStmt);
					n->relation = (yyvsp[(4) - (7)].range);
					n->usingClause = (yyvsp[(5) - (7)].list);
					n->whereClause = (yyvsp[(6) - (7)].node);
					n->returningList = (yyvsp[(7) - (7)].list);
					n->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1238:
#line 22 "third_party/libpg_query/grammar/statements/delete.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 1239:
#line 26 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(2) - (2)].str);
					(yyvsp[(1) - (2)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (2)].range);
				;}
    break;

  case 1240:
#line 33 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(3) - (3)].str);
					(yyvsp[(1) - (3)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 1241:
#line 43 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1242:
#line 44 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1243:
#line 50 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1244:
#line 51 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1245:
#line 10 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (2)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1246:
#line 20 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(3) - (4)].range);
					n->va_cols = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1247:
#line 2 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (2)].vsetstmt); ;}
    break;

  case 1248:
#line 8 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (yyvsp[(1) - (1)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1249:
#line 15 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET_ALL;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1250:
#line 24 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt); ;}
    break;

  case 1251:
#line 26 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "timezone";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1252:
#line 33 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "transaction_isolation";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1253:
#line 3 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowSelectStmt *n = makeNode(PGVariableShowSelectStmt);
				n->stmt = (yyvsp[(2) - (2)].node);
				n->name = (char*) "select";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1254:
#line 10 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowSelectStmt *n = makeNode(PGVariableShowSelectStmt);
				n->stmt = (yyvsp[(2) - (2)].node);
				n->name = (char*) "select";
				n->is_summary = 1;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1255:
#line 18 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (yyvsp[(2) - (2)].str);
				n->is_summary = 1;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1256:
#line 25 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (yyvsp[(2) - (2)].str);
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1257:
#line 32 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "timezone";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1258:
#line 39 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "transaction_isolation";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1259:
#line 46 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "__show_tables_expanded";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1260:
#line 53 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "__show_tables_expanded";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1263:
#line 63 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1264:
#line 65 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = psprintf("%s.%s", (yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str)); ;}
    break;

  case 1265:
#line 7 "third_party/libpg_query/grammar/statements/call.y"
    {
					PGCallStmt *n = makeNode(PGCallStmt);
					n->func = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1266:
#line 10 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(4) - (9)].range);
					n->view->relpersistence = (yyvsp[(2) - (9)].ival);
					n->aliases = (yyvsp[(5) - (9)].list);
					n->query = (yyvsp[(8) - (9)].node);
					n->onconflict = PG_ERROR_ON_CONFLICT;
					n->options = (yyvsp[(6) - (9)].list);
					n->withCheckOption = (yyvsp[(9) - (9)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1267:
#line 23 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(6) - (11)].range);
					n->view->relpersistence = (yyvsp[(4) - (11)].ival);
					n->aliases = (yyvsp[(7) - (11)].list);
					n->query = (yyvsp[(10) - (11)].node);
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					n->options = (yyvsp[(8) - (11)].list);
					n->withCheckOption = (yyvsp[(11) - (11)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1268:
#line 36 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(5) - (12)].range);
					n->view->relpersistence = (yyvsp[(2) - (12)].ival);
					n->aliases = (yyvsp[(7) - (12)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(11) - (12)].node));
					n->onconflict = PG_ERROR_ON_CONFLICT;
					n->options = (yyvsp[(9) - (12)].list);
					n->withCheckOption = (yyvsp[(12) - (12)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(12) - (12)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1269:
#line 54 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(7) - (14)].range);
					n->view->relpersistence = (yyvsp[(4) - (14)].ival);
					n->aliases = (yyvsp[(9) - (14)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(13) - (14)].node));
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					n->options = (yyvsp[(11) - (14)].list);
					n->withCheckOption = (yyvsp[(14) - (14)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(14) - (14)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1270:
#line 74 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1271:
#line 75 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1272:
#line 76 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_LOCAL_CHECK_OPTION; ;}
    break;

  case 1273:
#line 77 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_NO_CHECK_OPTION; ;}
    break;

  case 1274:
#line 12 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(6) - (7)].node);
					ctas->into = (yyvsp[(4) - (7)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_ERROR_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (7)].into)->rel->relpersistence = (yyvsp[(2) - (7)].ival);
					(yyvsp[(4) - (7)].into)->skipData = !((yyvsp[(7) - (7)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1275:
#line 25 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(9) - (10)].node);
					ctas->into = (yyvsp[(7) - (10)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_IGNORE_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (10)].into)->rel->relpersistence = (yyvsp[(2) - (10)].ival);
					(yyvsp[(7) - (10)].into)->skipData = !((yyvsp[(10) - (10)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1276:
#line 38 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(8) - (9)].node);
					ctas->into = (yyvsp[(6) - (9)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_REPLACE_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(6) - (9)].into)->rel->relpersistence = (yyvsp[(4) - (9)].ival);
					(yyvsp[(6) - (9)].into)->skipData = !((yyvsp[(9) - (9)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1277:
#line 54 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1278:
#line 55 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1279:
#line 56 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1280:
#line 62 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(1) - (4)].range);
					(yyval.into)->colNames = (yyvsp[(2) - (4)].list);
					(yyval.into)->options = (yyvsp[(3) - (4)].list);
					(yyval.into)->onCommit = (yyvsp[(4) - (4)].oncommit);
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;		/* might get changed later */
				;}
    break;


/* Line 1267 of yacc.c.  */
#line 25555 "third_party/libpg_query/grammar/grammar_out.cpp"
      default: break;
    }
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, yyscanner, YY_("syntax error"));
#else
      {
	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
	  {
	    YYSIZE_T yyalloc = 2 * yysize;
	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
	    if (yymsg != yymsgbuf)
	      YYSTACK_FREE (yymsg);
	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
	    if (yymsg)
	      yymsg_alloc = yyalloc;
	    else
	      {
		yymsg = yymsgbuf;
		yymsg_alloc = sizeof yymsgbuf;
	      }
	  }

	if (0 < yysize && yysize <= yymsg_alloc)
	  {
	    (void) yysyntax_error (yymsg, yystate, yychar);
	    yyerror (&yylloc, yyscanner, yymsg);
	  }
	else
	  {
	    yyerror (&yylloc, yyscanner, YY_("syntax error"));
	    if (yysize != 0)
	      goto yyexhaustedlab;
	  }
      }
#endif
    }

  yyerror_range[0] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse look-ahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
	{
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
	}
      else
	{
	  yydestruct ("Error: discarding",
		      yytoken, &yylval, &yylloc, yyscanner);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse look-ahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[0] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule which action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (yyn != YYPACT_NINF)
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;

      yyerror_range[0] = *yylsp;
      yydestruct ("Error: popping",
		  yystos[yystate], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  *++yyvsp = yylval;

  yyerror_range[1] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the look-ahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, (yyerror_range - 1), 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#ifndef yyoverflow
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, yyscanner, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEOF && yychar != YYEMPTY)
     yydestruct ("Cleanup: discarding lookahead",
		 yytoken, &yylval, &yylloc, yyscanner);
  /* Do not reclaim the symbols of the rule which action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  /* Make sure YYID is used.  */
  return YYID (yyresult);
}


#line 83 "third_party/libpg_query/grammar/statements/create_as.y"


#line 1 "third_party/libpg_query/grammar/grammar.cpp"
/*
 * The signature of this function is required by bison.  However, we
 * ignore the passed yylloc and instead use the last token position
 * available from the scanner.
 */
static void
base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner, const char *msg)
{
	parser_yyerror(msg);
}

static PGRawStmt *
makeRawStmt(PGNode *stmt, int stmt_location)
{
	PGRawStmt    *rs = makeNode(PGRawStmt);

	rs->stmt = stmt;
	rs->stmt_location = stmt_location;
	rs->stmt_len = 0;			/* might get changed later */
	return rs;
}

/* Adjust a PGRawStmt to reflect that it doesn't run to the end of the string */
static void
updateRawStmtEnd(PGRawStmt *rs, int end_location)
{
	/*
	 * If we already set the length, don't change it.  This is for situations
	 * like "select foo ;; select bar" where the same statement will be last
	 * in the string for more than one semicolon.
	 */
	if (rs->stmt_len > 0)
		return;

	/* OK, update length of PGRawStmt */
	rs->stmt_len = end_location - rs->stmt_location;
}

static PGNode *
makeColumnRef(char *colname, PGList *indirection,
			  int location, core_yyscan_t yyscanner)
{
	/*
	 * Generate a PGColumnRef node, with an PGAIndirection node added if there
	 * is any subscripting in the specified indirection list.  However,
	 * any field selection at the start of the indirection list must be
	 * transposed into the "fields" part of the PGColumnRef node.
	 */
	PGColumnRef  *c = makeNode(PGColumnRef);
	int		nfields = 0;
	PGListCell *l;

	c->location = location;
	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAIndices))
		{
			PGAIndirection *i = makeNode(PGAIndirection);

			if (nfields == 0)
			{
				/* easy case - all indirection goes to PGAIndirection */
				c->fields = list_make1(makeString(colname));
				i->indirection = check_indirection(indirection, yyscanner);
			}
			else
			{
				/* got to split the list in two */
				i->indirection = check_indirection(list_copy_tail(indirection,
																  nfields),
												   yyscanner);
				indirection = list_truncate(indirection, nfields);
				c->fields = lcons(makeString(colname), indirection);
			}
			i->arg = (PGNode *) c;
			return (PGNode *) i;
		}
		else if (IsA(lfirst(l), PGAStar))
		{
			/* We only allow '*' at the end of a PGColumnRef */
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
		nfields++;
	}
	/* No subscripting, so all indirection gets added to field list */
	c->fields = lcons(makeString(colname), indirection);
	return (PGNode *) c;
}

static PGNode *
makeTypeCast(PGNode *arg, PGTypeName *tpname, int trycast, int location)
{
	PGTypeCast *n = makeNode(PGTypeCast);
	n->arg = arg;
	n->typeName = tpname;
	n->tryCast = trycast;
	n->location = location;
	return (PGNode *) n;
}

static PGNode *
makeStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeStringConstCast(char *str, int location, PGTypeName *tpname)
{
	PGNode *s = makeStringConst(str, location);

	return makeTypeCast(s, tpname, 0, -1);
}

static PGNode *
makeIntervalNode(char *str, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGString;
	n->sval = str;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;

}

static PGNode *
makeIntervalNode(int val, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGInteger;
	n->ival = val;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeIntervalNode(PGNode *arg, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGAExpr;
	n->eval = arg;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeSampleSize(PGValue *sample_size, bool is_percentage) {
	PGSampleSize *n = makeNode(PGSampleSize);

	n->sample_size = *sample_size;
	n->is_percentage = is_percentage;

	return (PGNode *)n;
}

static PGNode *
makeSampleOptions(PGNode *sample_size, char *method, int seed, int location) {
	PGSampleOptions *n = makeNode(PGSampleOptions);

	n->sample_size = sample_size;
	n->method = method;
	n->seed = seed;
	n->location = location;

	return (PGNode *)n;
}

/* makeLimitPercent()
 * Make limit percent node
 */
static PGNode *
makeLimitPercent(PGNode *limit_percent) {
	PGLimitPercent *n = makeNode(PGLimitPercent);

	n->limit_percent = limit_percent;

	return (PGNode *)n;
}

static PGNode *
makeIntConst(int val, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGInteger;
	n->val.val.ival = val;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeFloatConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGFloat;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeBitStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGBitString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeNullAConst(int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGNull;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeAConst(PGValue *v, int location)
{
	PGNode *n;

	switch (v->type)
	{
		case T_PGFloat:
			n = makeFloatConst(v->val.str, location);
			break;

		case T_PGInteger:
			n = makeIntConst(v->val.ival, location);
			break;

		case T_PGString:
		default:
			n = makeStringConst(v->val.str, location);
			break;
	}

	return n;
}

/* makeBoolAConst()
 * Create an PGAConst string node and put it inside a boolean cast.
 */
static PGNode *
makeBoolAConst(bool state, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = (state ? (char*) "t" : (char*) "f");
	n->location = location;

	return makeTypeCast((PGNode *)n, SystemTypeName("bool"), 0, -1);
}

/* check_qualified_name --- check the result of qualified_name production
 *
 * It's easiest to let the grammar production for qualified_name allow
 * subscripts and '*', which we then must reject here.
 */
static void
check_qualified_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
}

/* check_func_name --- check the result of func_name production
 *
 * It's easiest to let the grammar production for func_name allow subscripts
 * and '*', which we then must reject here.
 */
static PGList *
check_func_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
	return names;
}

/* check_indirection --- check the result of indirection production
 *
 * We only allow '*' at the end of the list, but it's hard to enforce that
 * in the grammar, so do it here.
 */
static PGList *
check_indirection(PGList *indirection, core_yyscan_t yyscanner)
{
	PGListCell *l;

	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAStar))
		{
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
	}
	return indirection;
}

/* makeParamRef
 * Creates a new PGParamRef node
 */
static PGNode* makeParamRef(int number, int location)
{
	PGParamRef *p = makeNode(PGParamRef);
	p->number = number;
	p->location = location;
	return (PGNode *) p;
}


/* insertSelectOptions()
 * Insert ORDER BY, etc into an already-constructed SelectStmt.
 *
 * This routine is just to avoid duplicating code in PGSelectStmt productions.
 */
static void
insertSelectOptions(PGSelectStmt *stmt,
					PGList *sortClause, PGList *lockingClause,
					PGNode *limitOffset, PGNode *limitCount,
					PGWithClause *withClause,
					core_yyscan_t yyscanner)
{
	Assert(IsA(stmt, PGSelectStmt));

	/*
	 * Tests here are to reject constructs like
	 *	(SELECT foo ORDER BY bar) ORDER BY baz
	 */
	if (sortClause)
	{
		if (stmt->sortClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple ORDER BY clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) sortClause))));
		stmt->sortClause = sortClause;
	}
	/* We can handle multiple locking clauses, though */
	stmt->lockingClause = list_concat(stmt->lockingClause, lockingClause);
	if (limitOffset)
	{
		if (stmt->limitOffset)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple OFFSET clauses not allowed"),
					 parser_errposition(exprLocation(limitOffset))));
		stmt->limitOffset = limitOffset;
	}
	if (limitCount)
	{
		if (stmt->limitCount)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple LIMIT clauses not allowed"),
					 parser_errposition(exprLocation(limitCount))));
		stmt->limitCount = limitCount;
	}
	if (withClause)
	{
		if (stmt->withClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple WITH clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) withClause))));
		stmt->withClause = withClause;
	}
}

static PGNode *
makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg)
{
	PGSelectStmt *n = makeNode(PGSelectStmt);

	n->op = op;
	n->all = all;
	n->larg = (PGSelectStmt *) larg;
	n->rarg = (PGSelectStmt *) rarg;
	return (PGNode *) n;
}

/* SystemFuncName()
 * Build a properly-qualified reference to a built-in function.
 */
PGList *
SystemFuncName(const char *name)
{
	return list_make2(makeString(DEFAULT_SCHEMA), makeString(name));
}

/* SystemTypeName()
 * Build a properly-qualified reference to a built-in type.
 *
 * typmod is defaulted, but may be changed afterwards by caller.
 * Likewise for the location.
 */
PGTypeName *
SystemTypeName(const char *name)
{
	return makeTypeNameFromNameList(list_make2(makeString(DEFAULT_SCHEMA),
											   makeString(name)));
}

/* doNegate()
 * Handle negation of a numeric constant.
 *
 * Formerly, we did this here because the optimizer couldn't cope with
 * indexquals that looked like "var = -4" --- it wants "var = const"
 * and a unary minus operator applied to a constant didn't qualify.
 * As of Postgres 7.0, that problem doesn't exist anymore because there
 * is a constant-subexpression simplifier in the optimizer.  However,
 * there's still a good reason for doing this here, which is that we can
 * postpone committing to a particular internal representation for simple
 * negative constants.	It's better to leave "-123.456" in string form
 * until we know what the desired type is.
 */
static PGNode *
doNegate(PGNode *n, int location)
{
	if (IsA(n, PGAConst))
	{
		PGAConst *con = (PGAConst *)n;

		/* report the constant's location as that of the '-' sign */
		con->location = location;

		if (con->val.type == T_PGInteger)
		{
			con->val.val.ival = -con->val.val.ival;
			return n;
		}
		if (con->val.type == T_PGFloat)
		{
			doNegateFloat(&con->val);
			return n;
		}
	}

	return (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", NULL, n, location);
}

static void
doNegateFloat(PGValue *v)
{
	char   *oldval = v->val.str;

	Assert(IsA(v, PGFloat));
	if (*oldval == '+')
		oldval++;
	if (*oldval == '-')
		v->val.str = oldval+1;	/* just strip the '-' */
	else
		v->val.str = psprintf("-%s", oldval);
}

static PGNode *
makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a AND b AND c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_AND_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_AND_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a OR b OR c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_OR_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_OR_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeNotExpr(PGNode *expr, int location)
{
	return (PGNode *) makeBoolExpr(PG_NOT_EXPR, list_make1(expr), location);
}

static PGNode *
makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod, int location)
{
	PGSQLValueFunction *svf = makeNode(PGSQLValueFunction);

	svf->op = op;
	/* svf->type will be filled during parse analysis */
	svf->typmod = typmod;
	svf->location = location;
	return (PGNode *) svf;
}

/* Separate PGConstraint nodes from COLLATE clauses in a */
static void
SplitColQualList(PGList *qualList,
				 PGList **constraintList, PGCollateClause **collClause,
				 core_yyscan_t yyscanner)
{
	PGListCell   *cell;
	PGListCell   *prev;
	PGListCell   *next;

	*collClause = NULL;
	prev = NULL;
	for (cell = list_head(qualList); cell; cell = next)
	{
		PGNode   *n = (PGNode *) lfirst(cell);

		next = lnext(cell);
		if (IsA(n, PGConstraint))
		{
			/* keep it in list */
			prev = cell;
			continue;
		}
		if (IsA(n, PGCollateClause))
		{
			PGCollateClause *c = (PGCollateClause *) n;

			if (*collClause)
				ereport(ERROR,
						(errcode(PG_ERRCODE_SYNTAX_ERROR),
						 errmsg("multiple COLLATE clauses not allowed"),
						 parser_errposition(c->location)));
			*collClause = c;
		}
		else
			elog(ERROR, "unexpected node type %d", (int) n->type);
		/* remove non-Constraint nodes from qualList */
		qualList = list_delete_cell(qualList, cell, prev);
	}
	*constraintList = qualList;
}

/*
 * Process result of ConstraintAttributeSpec, and set appropriate bool flags
 * in the output command node.  Pass NULL for any flags the particular
 * command doesn't support.
 */
static void
processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner)
{
	/* defaults */
	if (deferrable)
		*deferrable = false;
	if (initdeferred)
		*initdeferred = false;
	if (not_valid)
		*not_valid = false;

	if (cas_bits & (CAS_DEFERRABLE | CAS_INITIALLY_DEFERRED))
	{
		if (deferrable)
			*deferrable = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_INITIALLY_DEFERRED)
	{
		if (initdeferred)
			*initdeferred = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NOT_VALID)
	{
		if (not_valid)
			*not_valid = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NOT VALID",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NO_INHERIT)
	{
		if (no_inherit)
			*no_inherit = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NO INHERIT",
							constrType),
					 parser_errposition(location)));
	}
}

/*----------
 * Recursive view transformation
 *
 * Convert
 *
 *     CREATE RECURSIVE VIEW relname (aliases) AS query
 *
 * to
 *
 *     CREATE VIEW relname (aliases) AS
 *         WITH RECURSIVE relname (aliases) AS (query)
 *         SELECT aliases FROM relname
 *
 * Actually, just the WITH ... part, which is then inserted into the original
 * view as the query.
 * ----------
 */
static PGNode *
makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query)
{
	PGSelectStmt *s = makeNode(PGSelectStmt);
	PGWithClause *w = makeNode(PGWithClause);
	PGCommonTableExpr *cte = makeNode(PGCommonTableExpr);
	PGList	   *tl = NIL;
	PGListCell   *lc;

	/* create common table expression */
	cte->ctename = relname;
	cte->aliascolnames = aliases;
	cte->ctequery = query;
	cte->location = -1;

	/* create WITH clause and attach CTE */
	w->recursive = true;
	w->ctes = list_make1(cte);
	w->location = -1;

	/* create target list for the new SELECT from the alias list of the
	 * recursive view specification */
	foreach (lc, aliases)
	{
		PGResTarget *rt = makeNode(PGResTarget);

		rt->name = NULL;
		rt->indirection = NIL;
		rt->val = makeColumnRef(strVal(lfirst(lc)), NIL, -1, 0);
		rt->location = -1;

		tl = lappend(tl, rt);
	}

	/* create new SELECT combining WITH clause, target list, and fake FROM
	 * clause */
	s->withClause = w;
	s->targetList = tl;
	s->fromClause = list_make1(makeRangeVar(NULL, relname, -1));

	return (PGNode *) s;
}

/* parser_init()
 * Initialize to parse one query string
 */
void
parser_init(base_yy_extra_type *yyext)
{
	yyext->parsetree = NIL;		/* in case grammar forgets to set it */
}

#undef yyparse
#undef yylex
#undef yyerror
#undef yylval
#undef yychar
#undef yydebug
#undef yynerrs
#undef yylloc

} // namespace duckdb_libpgquery

