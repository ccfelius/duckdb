/* A Bison parser, made by GNU Bison 2.3.  */

/* Skeleton implementation for Bison's Yacc-like parsers in C

   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.3"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Using locations.  */
#define YYLSP_NEEDED 1

/* Substitute the variable and function names.  */
#define yyparse base_yyparse
#define yylex   base_yylex
#define yyerror base_yyerror
#define yylval  base_yylval
#define yychar  base_yychar
#define yydebug base_yydebug
#define yynerrs base_yynerrs
#define yylloc base_yylloc

/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     IDENT = 258,
     FCONST = 259,
     SCONST = 260,
     BCONST = 261,
     XCONST = 262,
     Op = 263,
     ICONST = 264,
     PARAM = 265,
     TYPECAST = 266,
     DOT_DOT = 267,
     COLON_EQUALS = 268,
     EQUALS_GREATER = 269,
     LAMBDA_ARROW = 270,
     LESS_EQUALS = 271,
     GREATER_EQUALS = 272,
     NOT_EQUALS = 273,
     ABORT_P = 274,
     ABSOLUTE_P = 275,
     ACCESS = 276,
     ACTION = 277,
     ADD_P = 278,
     ADMIN = 279,
     AFTER = 280,
     AGGREGATE = 281,
     ALL = 282,
     ALSO = 283,
     ALTER = 284,
     ALWAYS = 285,
     ANALYSE = 286,
     ANALYZE = 287,
     AND = 288,
     ANY = 289,
     ARRAY = 290,
     AS = 291,
     ASC_P = 292,
     ASSERTION = 293,
     ASSIGNMENT = 294,
     ASYMMETRIC = 295,
     AT = 296,
     ATTACH = 297,
     ATTRIBUTE = 298,
     AUTHORIZATION = 299,
     BACKWARD = 300,
     BEFORE = 301,
     BEGIN_P = 302,
     BETWEEN = 303,
     BIGINT = 304,
     BINARY = 305,
     BIT = 306,
     BOOLEAN_P = 307,
     BOTH = 308,
     BY = 309,
     CACHE = 310,
     CALL_P = 311,
     CALLED = 312,
     CASCADE = 313,
     CASCADED = 314,
     CASE = 315,
     CAST = 316,
     CATALOG_P = 317,
     CHAIN = 318,
     CHAR_P = 319,
     CHARACTER = 320,
     CHARACTERISTICS = 321,
     CHECK_P = 322,
     CHECKPOINT = 323,
     CLASS = 324,
     CLOSE = 325,
     CLUSTER = 326,
     COALESCE = 327,
     COLLATE = 328,
     COLLATION = 329,
     COLUMN = 330,
     COLUMNS = 331,
     COMMENT = 332,
     COMMENTS = 333,
     COMMIT = 334,
     COMMITTED = 335,
     CONCURRENTLY = 336,
     CONFIGURATION = 337,
     CONFLICT = 338,
     CONNECTION = 339,
     CONSTRAINT = 340,
     CONSTRAINTS = 341,
     CONTENT_P = 342,
     CONTINUE_P = 343,
     CONVERSION_P = 344,
     COPY = 345,
     COST = 346,
     CREATE_P = 347,
     CROSS = 348,
     CSV = 349,
     CUBE = 350,
     CURRENT_P = 351,
     CURRENT_CATALOG = 352,
     CURRENT_DATE = 353,
     CURRENT_ROLE = 354,
     CURRENT_SCHEMA = 355,
     CURRENT_TIME = 356,
     CURRENT_TIMESTAMP = 357,
     CURRENT_USER = 358,
     CURSOR = 359,
     CYCLE = 360,
     DATA_P = 361,
     DATABASE = 362,
     DAY_P = 363,
     DAYS_P = 364,
     DEALLOCATE = 365,
     DEC = 366,
     DECIMAL_P = 367,
     DECLARE = 368,
     DEFAULT = 369,
     DEFAULTS = 370,
     DEFERRABLE = 371,
     DEFERRED = 372,
     DEFINER = 373,
     DELETE_P = 374,
     DELIMITER = 375,
     DELIMITERS = 376,
     DEPENDS = 377,
     DESC_P = 378,
     DESCRIBE = 379,
     DETACH = 380,
     DICTIONARY = 381,
     DISABLE_P = 382,
     DISCARD = 383,
     DISTINCT = 384,
     DO = 385,
     DOCUMENT_P = 386,
     DOMAIN_P = 387,
     DOUBLE_P = 388,
     DROP = 389,
     EACH = 390,
     ELSE = 391,
     ENABLE_P = 392,
     ENCODING = 393,
     ENCRYPTED = 394,
     END_P = 395,
     ENUM_P = 396,
     ESCAPE = 397,
     EVENT = 398,
     EXCEPT = 399,
     EXCLUDE = 400,
     EXCLUDING = 401,
     EXCLUSIVE = 402,
     EXECUTE = 403,
     EXISTS = 404,
     EXPLAIN = 405,
     EXPORT_P = 406,
     EXTENSION = 407,
     EXTERNAL = 408,
     EXTRACT = 409,
     FALSE_P = 410,
     FAMILY = 411,
     FETCH = 412,
     FILTER = 413,
     FIRST_P = 414,
     FLOAT_P = 415,
     FOLLOWING = 416,
     FOR = 417,
     FORCE = 418,
     FOREIGN = 419,
     FORWARD = 420,
     FREEZE = 421,
     FROM = 422,
     FULL = 423,
     FUNCTION = 424,
     FUNCTIONS = 425,
     GENERATED = 426,
     GLOB = 427,
     GLOBAL = 428,
     GRANT = 429,
     GRANTED = 430,
     GROUP_P = 431,
     GROUPING = 432,
     HANDLER = 433,
     HAVING = 434,
     HEADER_P = 435,
     HOLD = 436,
     HOUR_P = 437,
     HOURS_P = 438,
     IDENTITY_P = 439,
     IF_P = 440,
     ILIKE = 441,
     IMMEDIATE = 442,
     IMMUTABLE = 443,
     IMPLICIT_P = 444,
     IMPORT_P = 445,
     IN_P = 446,
     INCLUDING = 447,
     INCREMENT = 448,
     INDEX = 449,
     INDEXES = 450,
     INHERIT = 451,
     INHERITS = 452,
     INITIALLY = 453,
     INLINE_P = 454,
     INNER_P = 455,
     INOUT = 456,
     INPUT_P = 457,
     INSENSITIVE = 458,
     INSERT = 459,
     INSTEAD = 460,
     INT_P = 461,
     INTEGER = 462,
     INTERSECT = 463,
     INTERVAL = 464,
     INTO = 465,
     INVOKER = 466,
     IS = 467,
     ISNULL = 468,
     ISOLATION = 469,
     JOIN = 470,
     KEY = 471,
     LABEL = 472,
     LANGUAGE = 473,
     LARGE_P = 474,
     LAST_P = 475,
     LATERAL_P = 476,
     LEADING = 477,
     LEAKPROOF = 478,
     LEFT = 479,
     LEVEL = 480,
     LIKE = 481,
     LIMIT = 482,
     LISTEN = 483,
     LOAD = 484,
     LOCAL = 485,
     LOCALTIME = 486,
     LOCALTIMESTAMP = 487,
     LOCATION = 488,
     LOCK_P = 489,
     LOCKED = 490,
     LOGGED = 491,
     MACRO = 492,
     MAP = 493,
     MAPPING = 494,
     MATCH = 495,
     MATERIALIZED = 496,
     MAXVALUE = 497,
     METHOD = 498,
     MICROSECOND_P = 499,
     MICROSECONDS_P = 500,
     MILLISECOND_P = 501,
     MILLISECONDS_P = 502,
     MINUTE_P = 503,
     MINUTES_P = 504,
     MINVALUE = 505,
     MODE = 506,
     MONTH_P = 507,
     MONTHS_P = 508,
     MOVE = 509,
     NAME_P = 510,
     NAMES = 511,
     NATIONAL = 512,
     NATURAL = 513,
     NCHAR = 514,
     NEW = 515,
     NEXT = 516,
     NO = 517,
     NONE = 518,
     NOT = 519,
     NOTHING = 520,
     NOTIFY = 521,
     NOTNULL = 522,
     NOWAIT = 523,
     NULL_P = 524,
     NULLIF = 525,
     NULLS_P = 526,
     NUMERIC = 527,
     OBJECT_P = 528,
     OF = 529,
     OFF = 530,
     OFFSET = 531,
     OIDS = 532,
     OLD = 533,
     ON = 534,
     ONLY = 535,
     OPERATOR = 536,
     OPTION = 537,
     OPTIONS = 538,
     OR = 539,
     ORDER = 540,
     ORDINALITY = 541,
     OUT_P = 542,
     OUTER_P = 543,
     OVER = 544,
     OVERLAPS = 545,
     OVERLAY = 546,
     OVERRIDING = 547,
     OWNED = 548,
     OWNER = 549,
     PARALLEL = 550,
     PARSER = 551,
     PARTIAL = 552,
     PARTITION = 553,
     PASSING = 554,
     PASSWORD = 555,
     PERCENT = 556,
     PLACING = 557,
     PLANS = 558,
     POLICY = 559,
     POSITION = 560,
     PRAGMA_P = 561,
     PRECEDING = 562,
     PRECISION = 563,
     PREPARE = 564,
     PREPARED = 565,
     PRESERVE = 566,
     PRIMARY = 567,
     PRIOR = 568,
     PRIVILEGES = 569,
     PROCEDURAL = 570,
     PROCEDURE = 571,
     PROGRAM = 572,
     PUBLICATION = 573,
     QUOTE = 574,
     RANGE = 575,
     READ_P = 576,
     REAL = 577,
     REASSIGN = 578,
     RECHECK = 579,
     RECURSIVE = 580,
     REF = 581,
     REFERENCES = 582,
     REFERENCING = 583,
     REFRESH = 584,
     REINDEX = 585,
     RELATIVE_P = 586,
     RELEASE = 587,
     RENAME = 588,
     REPEATABLE = 589,
     REPLACE = 590,
     REPLICA = 591,
     RESET = 592,
     RESTART = 593,
     RESTRICT = 594,
     RETURNING = 595,
     RETURNS = 596,
     REVOKE = 597,
     RIGHT = 598,
     ROLE = 599,
     ROLLBACK = 600,
     ROLLUP = 601,
     ROW = 602,
     ROWS = 603,
     RULE = 604,
     SAMPLE = 605,
     SAVEPOINT = 606,
     SCHEMA = 607,
     SCHEMAS = 608,
     SCROLL = 609,
     SEARCH = 610,
     SECOND_P = 611,
     SECONDS_P = 612,
     SECURITY = 613,
     SELECT = 614,
     SEQUENCE = 615,
     SEQUENCES = 616,
     SERIALIZABLE = 617,
     SERVER = 618,
     SESSION = 619,
     SESSION_USER = 620,
     SET = 621,
     SETOF = 622,
     SETS = 623,
     SHARE = 624,
     SHOW = 625,
     SIMILAR = 626,
     SIMPLE = 627,
     SKIP = 628,
     SMALLINT = 629,
     SNAPSHOT = 630,
     SOME = 631,
     SQL_P = 632,
     STABLE = 633,
     STANDALONE_P = 634,
     START = 635,
     STATEMENT = 636,
     STATISTICS = 637,
     STDIN = 638,
     STDOUT = 639,
     STORAGE = 640,
     STRICT_P = 641,
     STRIP_P = 642,
     STRUCT = 643,
     SUBSCRIPTION = 644,
     SUBSTRING = 645,
     SUMMARIZE = 646,
     SYMMETRIC = 647,
     SYSID = 648,
     SYSTEM_P = 649,
     TABLE = 650,
     TABLES = 651,
     TABLESAMPLE = 652,
     TABLESPACE = 653,
     TEMP = 654,
     TEMPLATE = 655,
     TEMPORARY = 656,
     TEXT_P = 657,
     THEN = 658,
     TIME = 659,
     TIMESTAMP = 660,
     TO = 661,
     TRAILING = 662,
     TRANSACTION = 663,
     TRANSFORM = 664,
     TREAT = 665,
     TRIGGER = 666,
     TRIM = 667,
     TRUE_P = 668,
     TRUNCATE = 669,
     TRUSTED = 670,
     TRY_CAST = 671,
     TYPE_P = 672,
     TYPES_P = 673,
     UNBOUNDED = 674,
     UNCOMMITTED = 675,
     UNENCRYPTED = 676,
     UNION = 677,
     UNIQUE = 678,
     UNKNOWN = 679,
     UNLISTEN = 680,
     UNLOGGED = 681,
     UNTIL = 682,
     UPDATE = 683,
     USER = 684,
     USING = 685,
     VACUUM = 686,
     VALID = 687,
     VALIDATE = 688,
     VALIDATOR = 689,
     VALUE_P = 690,
     VALUES = 691,
     VARCHAR = 692,
     VARIADIC = 693,
     VARYING = 694,
     VERBOSE = 695,
     VERSION_P = 696,
     VIEW = 697,
     VIEWS = 698,
     VOLATILE = 699,
     WHEN = 700,
     WHERE = 701,
     WHITESPACE_P = 702,
     WINDOW = 703,
     WITH = 704,
     WITHIN = 705,
     WITHOUT = 706,
     WORK = 707,
     WRAPPER = 708,
     WRITE_P = 709,
     XML_P = 710,
     XMLATTRIBUTES = 711,
     XMLCONCAT = 712,
     XMLELEMENT = 713,
     XMLEXISTS = 714,
     XMLFOREST = 715,
     XMLNAMESPACES = 716,
     XMLPARSE = 717,
     XMLPI = 718,
     XMLROOT = 719,
     XMLSERIALIZE = 720,
     XMLTABLE = 721,
     YEAR_P = 722,
     YEARS_P = 723,
     YES_P = 724,
     ZONE = 725,
     NOT_LA = 726,
     NULLS_LA = 727,
     WITH_LA = 728,
     POSTFIXOP = 729,
     UMINUS = 730
   };
#endif
/* Tokens.  */
#define IDENT 258
#define FCONST 259
#define SCONST 260
#define BCONST 261
#define XCONST 262
#define Op 263
#define ICONST 264
#define PARAM 265
#define TYPECAST 266
#define DOT_DOT 267
#define COLON_EQUALS 268
#define EQUALS_GREATER 269
#define LAMBDA_ARROW 270
#define LESS_EQUALS 271
#define GREATER_EQUALS 272
#define NOT_EQUALS 273
#define ABORT_P 274
#define ABSOLUTE_P 275
#define ACCESS 276
#define ACTION 277
#define ADD_P 278
#define ADMIN 279
#define AFTER 280
#define AGGREGATE 281
#define ALL 282
#define ALSO 283
#define ALTER 284
#define ALWAYS 285
#define ANALYSE 286
#define ANALYZE 287
#define AND 288
#define ANY 289
#define ARRAY 290
#define AS 291
#define ASC_P 292
#define ASSERTION 293
#define ASSIGNMENT 294
#define ASYMMETRIC 295
#define AT 296
#define ATTACH 297
#define ATTRIBUTE 298
#define AUTHORIZATION 299
#define BACKWARD 300
#define BEFORE 301
#define BEGIN_P 302
#define BETWEEN 303
#define BIGINT 304
#define BINARY 305
#define BIT 306
#define BOOLEAN_P 307
#define BOTH 308
#define BY 309
#define CACHE 310
#define CALL_P 311
#define CALLED 312
#define CASCADE 313
#define CASCADED 314
#define CASE 315
#define CAST 316
#define CATALOG_P 317
#define CHAIN 318
#define CHAR_P 319
#define CHARACTER 320
#define CHARACTERISTICS 321
#define CHECK_P 322
#define CHECKPOINT 323
#define CLASS 324
#define CLOSE 325
#define CLUSTER 326
#define COALESCE 327
#define COLLATE 328
#define COLLATION 329
#define COLUMN 330
#define COLUMNS 331
#define COMMENT 332
#define COMMENTS 333
#define COMMIT 334
#define COMMITTED 335
#define CONCURRENTLY 336
#define CONFIGURATION 337
#define CONFLICT 338
#define CONNECTION 339
#define CONSTRAINT 340
#define CONSTRAINTS 341
#define CONTENT_P 342
#define CONTINUE_P 343
#define CONVERSION_P 344
#define COPY 345
#define COST 346
#define CREATE_P 347
#define CROSS 348
#define CSV 349
#define CUBE 350
#define CURRENT_P 351
#define CURRENT_CATALOG 352
#define CURRENT_DATE 353
#define CURRENT_ROLE 354
#define CURRENT_SCHEMA 355
#define CURRENT_TIME 356
#define CURRENT_TIMESTAMP 357
#define CURRENT_USER 358
#define CURSOR 359
#define CYCLE 360
#define DATA_P 361
#define DATABASE 362
#define DAY_P 363
#define DAYS_P 364
#define DEALLOCATE 365
#define DEC 366
#define DECIMAL_P 367
#define DECLARE 368
#define DEFAULT 369
#define DEFAULTS 370
#define DEFERRABLE 371
#define DEFERRED 372
#define DEFINER 373
#define DELETE_P 374
#define DELIMITER 375
#define DELIMITERS 376
#define DEPENDS 377
#define DESC_P 378
#define DESCRIBE 379
#define DETACH 380
#define DICTIONARY 381
#define DISABLE_P 382
#define DISCARD 383
#define DISTINCT 384
#define DO 385
#define DOCUMENT_P 386
#define DOMAIN_P 387
#define DOUBLE_P 388
#define DROP 389
#define EACH 390
#define ELSE 391
#define ENABLE_P 392
#define ENCODING 393
#define ENCRYPTED 394
#define END_P 395
#define ENUM_P 396
#define ESCAPE 397
#define EVENT 398
#define EXCEPT 399
#define EXCLUDE 400
#define EXCLUDING 401
#define EXCLUSIVE 402
#define EXECUTE 403
#define EXISTS 404
#define EXPLAIN 405
#define EXPORT_P 406
#define EXTENSION 407
#define EXTERNAL 408
#define EXTRACT 409
#define FALSE_P 410
#define FAMILY 411
#define FETCH 412
#define FILTER 413
#define FIRST_P 414
#define FLOAT_P 415
#define FOLLOWING 416
#define FOR 417
#define FORCE 418
#define FOREIGN 419
#define FORWARD 420
#define FREEZE 421
#define FROM 422
#define FULL 423
#define FUNCTION 424
#define FUNCTIONS 425
#define GENERATED 426
#define GLOB 427
#define GLOBAL 428
#define GRANT 429
#define GRANTED 430
#define GROUP_P 431
#define GROUPING 432
#define HANDLER 433
#define HAVING 434
#define HEADER_P 435
#define HOLD 436
#define HOUR_P 437
#define HOURS_P 438
#define IDENTITY_P 439
#define IF_P 440
#define ILIKE 441
#define IMMEDIATE 442
#define IMMUTABLE 443
#define IMPLICIT_P 444
#define IMPORT_P 445
#define IN_P 446
#define INCLUDING 447
#define INCREMENT 448
#define INDEX 449
#define INDEXES 450
#define INHERIT 451
#define INHERITS 452
#define INITIALLY 453
#define INLINE_P 454
#define INNER_P 455
#define INOUT 456
#define INPUT_P 457
#define INSENSITIVE 458
#define INSERT 459
#define INSTEAD 460
#define INT_P 461
#define INTEGER 462
#define INTERSECT 463
#define INTERVAL 464
#define INTO 465
#define INVOKER 466
#define IS 467
#define ISNULL 468
#define ISOLATION 469
#define JOIN 470
#define KEY 471
#define LABEL 472
#define LANGUAGE 473
#define LARGE_P 474
#define LAST_P 475
#define LATERAL_P 476
#define LEADING 477
#define LEAKPROOF 478
#define LEFT 479
#define LEVEL 480
#define LIKE 481
#define LIMIT 482
#define LISTEN 483
#define LOAD 484
#define LOCAL 485
#define LOCALTIME 486
#define LOCALTIMESTAMP 487
#define LOCATION 488
#define LOCK_P 489
#define LOCKED 490
#define LOGGED 491
#define MACRO 492
#define MAP 493
#define MAPPING 494
#define MATCH 495
#define MATERIALIZED 496
#define MAXVALUE 497
#define METHOD 498
#define MICROSECOND_P 499
#define MICROSECONDS_P 500
#define MILLISECOND_P 501
#define MILLISECONDS_P 502
#define MINUTE_P 503
#define MINUTES_P 504
#define MINVALUE 505
#define MODE 506
#define MONTH_P 507
#define MONTHS_P 508
#define MOVE 509
#define NAME_P 510
#define NAMES 511
#define NATIONAL 512
#define NATURAL 513
#define NCHAR 514
#define NEW 515
#define NEXT 516
#define NO 517
#define NONE 518
#define NOT 519
#define NOTHING 520
#define NOTIFY 521
#define NOTNULL 522
#define NOWAIT 523
#define NULL_P 524
#define NULLIF 525
#define NULLS_P 526
#define NUMERIC 527
#define OBJECT_P 528
#define OF 529
#define OFF 530
#define OFFSET 531
#define OIDS 532
#define OLD 533
#define ON 534
#define ONLY 535
#define OPERATOR 536
#define OPTION 537
#define OPTIONS 538
#define OR 539
#define ORDER 540
#define ORDINALITY 541
#define OUT_P 542
#define OUTER_P 543
#define OVER 544
#define OVERLAPS 545
#define OVERLAY 546
#define OVERRIDING 547
#define OWNED 548
#define OWNER 549
#define PARALLEL 550
#define PARSER 551
#define PARTIAL 552
#define PARTITION 553
#define PASSING 554
#define PASSWORD 555
#define PERCENT 556
#define PLACING 557
#define PLANS 558
#define POLICY 559
#define POSITION 560
#define PRAGMA_P 561
#define PRECEDING 562
#define PRECISION 563
#define PREPARE 564
#define PREPARED 565
#define PRESERVE 566
#define PRIMARY 567
#define PRIOR 568
#define PRIVILEGES 569
#define PROCEDURAL 570
#define PROCEDURE 571
#define PROGRAM 572
#define PUBLICATION 573
#define QUOTE 574
#define RANGE 575
#define READ_P 576
#define REAL 577
#define REASSIGN 578
#define RECHECK 579
#define RECURSIVE 580
#define REF 581
#define REFERENCES 582
#define REFERENCING 583
#define REFRESH 584
#define REINDEX 585
#define RELATIVE_P 586
#define RELEASE 587
#define RENAME 588
#define REPEATABLE 589
#define REPLACE 590
#define REPLICA 591
#define RESET 592
#define RESTART 593
#define RESTRICT 594
#define RETURNING 595
#define RETURNS 596
#define REVOKE 597
#define RIGHT 598
#define ROLE 599
#define ROLLBACK 600
#define ROLLUP 601
#define ROW 602
#define ROWS 603
#define RULE 604
#define SAMPLE 605
#define SAVEPOINT 606
#define SCHEMA 607
#define SCHEMAS 608
#define SCROLL 609
#define SEARCH 610
#define SECOND_P 611
#define SECONDS_P 612
#define SECURITY 613
#define SELECT 614
#define SEQUENCE 615
#define SEQUENCES 616
#define SERIALIZABLE 617
#define SERVER 618
#define SESSION 619
#define SESSION_USER 620
#define SET 621
#define SETOF 622
#define SETS 623
#define SHARE 624
#define SHOW 625
#define SIMILAR 626
#define SIMPLE 627
#define SKIP 628
#define SMALLINT 629
#define SNAPSHOT 630
#define SOME 631
#define SQL_P 632
#define STABLE 633
#define STANDALONE_P 634
#define START 635
#define STATEMENT 636
#define STATISTICS 637
#define STDIN 638
#define STDOUT 639
#define STORAGE 640
#define STRICT_P 641
#define STRIP_P 642
#define STRUCT 643
#define SUBSCRIPTION 644
#define SUBSTRING 645
#define SUMMARIZE 646
#define SYMMETRIC 647
#define SYSID 648
#define SYSTEM_P 649
#define TABLE 650
#define TABLES 651
#define TABLESAMPLE 652
#define TABLESPACE 653
#define TEMP 654
#define TEMPLATE 655
#define TEMPORARY 656
#define TEXT_P 657
#define THEN 658
#define TIME 659
#define TIMESTAMP 660
#define TO 661
#define TRAILING 662
#define TRANSACTION 663
#define TRANSFORM 664
#define TREAT 665
#define TRIGGER 666
#define TRIM 667
#define TRUE_P 668
#define TRUNCATE 669
#define TRUSTED 670
#define TRY_CAST 671
#define TYPE_P 672
#define TYPES_P 673
#define UNBOUNDED 674
#define UNCOMMITTED 675
#define UNENCRYPTED 676
#define UNION 677
#define UNIQUE 678
#define UNKNOWN 679
#define UNLISTEN 680
#define UNLOGGED 681
#define UNTIL 682
#define UPDATE 683
#define USER 684
#define USING 685
#define VACUUM 686
#define VALID 687
#define VALIDATE 688
#define VALIDATOR 689
#define VALUE_P 690
#define VALUES 691
#define VARCHAR 692
#define VARIADIC 693
#define VARYING 694
#define VERBOSE 695
#define VERSION_P 696
#define VIEW 697
#define VIEWS 698
#define VOLATILE 699
#define WHEN 700
#define WHERE 701
#define WHITESPACE_P 702
#define WINDOW 703
#define WITH 704
#define WITHIN 705
#define WITHOUT 706
#define WORK 707
#define WRAPPER 708
#define WRITE_P 709
#define XML_P 710
#define XMLATTRIBUTES 711
#define XMLCONCAT 712
#define XMLELEMENT 713
#define XMLEXISTS 714
#define XMLFOREST 715
#define XMLNAMESPACES 716
#define XMLPARSE 717
#define XMLPI 718
#define XMLROOT 719
#define XMLSERIALIZE 720
#define XMLTABLE 721
#define YEAR_P 722
#define YEARS_P 723
#define YES_P 724
#define ZONE 725
#define NOT_LA 726
#define NULLS_LA 727
#define WITH_LA 728
#define POSTFIXOP 729
#define UMINUS 730




/* Copy the first part of user declarations.  */
#line 1 "third_party/libpg_query/grammar/grammar.y.tmp"

#line 1 "third_party/libpg_query/grammar/grammar.hpp"
/*#define YYDEBUG 1*/
/*-------------------------------------------------------------------------
 *
 * gram.y
 *	  POSTGRESQL BISON rules/actions
 *
 * Portions Copyright (c) 1996-2017, PostgreSQL Global Development PGGroup
 * Portions Copyright (c) 1994, Regents of the University of California
 *
 *
 * IDENTIFICATION
 *	  src/backend/parser/gram.y
 *
 * HISTORY
 *	  AUTHOR			DATE			MAJOR EVENT
 *	  Andrew Yu			Sept, 1994		POSTQUEL to SQL conversion
 *	  Andrew Yu			Oct, 1994		lispy code conversion
 *
 * NOTES
 *	  CAPITALS are used to represent terminal symbols.
 *	  non-capitals are used to represent non-terminals.
 *
 *	  In general, nothing in this file should initiate database accesses
 *	  nor depend on changeable state (such as SET variables).  If you do
 *	  database accesses, your code will fail when we have aborted the
 *	  current transaction and are just parsing commands to find the next
 *	  ROLLBACK or COMMIT.  If you make use of SET variables, then you
 *	  will do the wrong thing in multi-query strings like this:
 *			SET constraint_exclusion TO off; SELECT * FROM foo;
 *	  because the entire string is parsed by gram.y before the SET gets
 *	  executed.  Anything that depends on the database or changeable state
 *	  should be handled during parse analysis so that it happens at the
 *	  right time not the wrong time.
 *
 * WARNINGS
 *	  If you use a list, make sure the datum is a node so that the printing
 *	  routines work.
 *
 *	  Sometimes we assign constants to makeStrings. Make sure we don't free
 *	  those.
 *
 *-------------------------------------------------------------------------
 */
#include "pg_functions.hpp"
#include <string.h>

#include <ctype.h>
#include <limits.h>

#include "nodes/makefuncs.hpp"
#include "nodes/nodeFuncs.hpp"
#include "parser/gramparse.hpp"
#include "parser/parser.hpp"
#include "utils/datetime.hpp"

namespace duckdb_libpgquery {
#define DEFAULT_SCHEMA "main"

/*
 * Location tracking support --- simpler than bison's default, since we only
 * want to track the start position not the end position of each nonterminal.
 */
#define YYLLOC_DEFAULT(Current, Rhs, N) \
	do { \
		if ((N) > 0) \
			(Current) = (Rhs)[1]; \
		else \
			(Current) = (-1); \
	} while (0)

/*
 * The above macro assigns -1 (unknown) as the parse location of any
 * nonterminal that was reduced from an empty rule, or whose leftmost
 * component was reduced from an empty rule.  This is problematic
 * for nonterminals defined like
 *		OptFooList: / * EMPTY * / { ... } | OptFooList Foo { ... } ;
 * because we'll set -1 as the location during the first reduction and then
 * copy it during each subsequent reduction, leaving us with -1 for the
 * location even when the list is not empty.  To fix that, do this in the
 * action for the nonempty rule(s):
 *		if (@$ < 0) @$ = @2;
 * (Although we have many nonterminals that follow this pattern, we only
 * bother with fixing @$ like this when the nonterminal's parse location
 * is actually referenced in some rule.)
 *
 * A cleaner answer would be to make YYLLOC_DEFAULT scan all the Rhs
 * locations until it's found one that's not -1.  Then we'd get a correct
 * location for any nonterminal that isn't entirely empty.  But this way
 * would add overhead to every rule reduction, and so far there's not been
 * a compelling reason to pay that overhead.
 */

/*
 * Bison doesn't allocate anything that needs to live across parser calls,
 * so we can easily have it use palloc instead of malloc.  This prevents
 * memory leaks if we error out during parsing.  Note this only works with
 * bison >= 2.0.  However, in bison 1.875 the default is to use alloca()
 * if possible, so there's not really much problem anyhow, at least if
 * you're building with gcc.
 */
#define YYMALLOC palloc
#define YYFREE   pfree
#define YYINITDEPTH 1000

/* yields an integer bitmask of these flags: */
#define CAS_NOT_DEFERRABLE			0x01
#define CAS_DEFERRABLE				0x02
#define CAS_INITIALLY_IMMEDIATE		0x04
#define CAS_INITIALLY_DEFERRED		0x08
#define CAS_NOT_VALID				0x10
#define CAS_NO_INHERIT				0x20


#define parser_yyerror(msg)  scanner_yyerror(msg, yyscanner)
#define parser_errposition(pos)  scanner_errposition(pos, yyscanner)

static void base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner,
						 const char *msg);
static PGRawStmt *makeRawStmt(PGNode *stmt, int stmt_location);
static void updateRawStmtEnd(PGRawStmt *rs, int end_location);
static PGNode *makeColumnRef(char *colname, PGList *indirection,
						   int location, core_yyscan_t yyscanner);
static PGNode *makeTypeCast(PGNode *arg, PGTypeName *tpname, int trycast, int location);
static PGNode *makeStringConst(char *str, int location);
static PGNode *makeStringConstCast(char *str, int location, PGTypeName *tpname);
static PGNode *makeIntervalNode(char *str, int location, PGList *typmods);
static PGNode *makeIntervalNode(int val, int location, PGList *typmods);
static PGNode *makeIntervalNode(PGNode *arg, int location, PGList *typmods);
static PGNode *makeSampleSize(PGValue *sample_size, bool is_percentage);
static PGNode *makeSampleOptions(PGNode *sample_size, char *method, int seed, int location);
static PGNode *makeIntConst(int val, int location);
static PGNode *makeFloatConst(char *str, int location);
static PGNode *makeBitStringConst(char *str, int location);
static PGNode *makeNullAConst(int location);
static PGNode *makeAConst(PGValue *v, int location);
static PGNode *makeBoolAConst(bool state, int location);
static PGNode *makeParamRef(int number, int location);
static void check_qualified_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_func_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_indirection(PGList *indirection, core_yyscan_t yyscanner);
static void insertSelectOptions(PGSelectStmt *stmt,
								PGList *sortClause, PGList *lockingClause,
								PGNode *limitOffset, PGNode *limitCount,
								PGWithClause *withClause,
								core_yyscan_t yyscanner);
static PGNode *makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg);
static PGNode *doNegate(PGNode *n, int location);
static void doNegateFloat(PGValue *v);
static PGNode *makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeNotExpr(PGNode *expr, int location);
static PGNode *makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod,
								  int location);
static void SplitColQualList(PGList *qualList,
							 PGList **constraintList, PGCollateClause **collClause,
							 core_yyscan_t yyscanner);
static void processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner);
static PGNode *makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query);



/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* Enabling the token table.  */
#ifndef YYTOKEN_TABLE
# define YYTOKEN_TABLE 0
#endif

#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE
#line 14 "third_party/libpg_query/grammar/grammar.y"
{
	core_YYSTYPE		core_yystype;
	/* these fields must match core_YYSTYPE: */
	int					ival;
	char				*str;
	const char			*keyword;
	const char          *conststr;

	char				chr;
	bool				boolean;
	PGJoinType			jtype;
	PGDropBehavior		dbehavior;
	PGOnCommitAction		oncommit;
	PGOnCreateConflict		oncreateconflict;
	PGList				*list;
	PGNode				*node;
	PGValue				*value;
	PGObjectType			objtype;
	PGTypeName			*typnam;
	PGObjectWithArgs		*objwithargs;
	PGDefElem				*defelt;
	PGSortBy				*sortby;
	PGWindowDef			*windef;
	PGJoinExpr			*jexpr;
	PGIndexElem			*ielem;
	PGAlias				*alias;
	PGRangeVar			*range;
	PGIntoClause			*into;
	PGWithClause			*with;
	PGInferClause			*infer;
	PGOnConflictClause	*onconflict;
	PGAIndices			*aind;
	PGResTarget			*target;
	PGInsertStmt			*istmt;
	PGVariableSetStmt		*vsetstmt;
	PGOverridingKind       override;
	PGSortByDir            sortorder;
	PGSortByNulls          nullorder;
	PGLockClauseStrength lockstrength;
	PGLockWaitPolicy lockwaitpolicy;
	PGSubLinkType subquerytype;
	PGViewCheckOption viewcheckoption;
}
/* Line 193 of yacc.c.  */
#line 1263 "third_party/libpg_query/grammar/grammar_out.cpp"
	YYSTYPE;
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
# define YYSTYPE_IS_TRIVIAL 1
#endif

#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif


/* Copy the second part of user declarations.  */


/* Line 216 of yacc.c.  */
#line 1288 "third_party/libpg_query/grammar/grammar_out.cpp"

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#elif (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
typedef signed char yytype_int8;
#else
typedef short int yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(msgid) dgettext ("bison-runtime", msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(msgid) msgid
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(e) ((void) (e))
#else
# define YYUSE(e) /* empty */
#endif

/* Identity function, used to suppress warnings about constant conditions.  */
#ifndef lint
# define YYID(n) (n)
#else
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static int
YYID (int i)
#else
static int
YYID (i)
    int i;
#endif
{
  return i;
}
#endif

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#     ifndef _STDLIB_H
#      define _STDLIB_H 1
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined _STDLIB_H \
       && ! ((defined YYMALLOC || defined malloc) \
	     && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef _STDLIB_H
#    define _STDLIB_H 1
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
	 || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
	     && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss;
  YYSTYPE yyvs;
    YYLTYPE yyls;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(To, From, Count) \
      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
#  else
#   define YYCOPY(To, From, Count)		\
      do					\
	{					\
	  YYSIZE_T yyi;				\
	  for (yyi = 0; yyi < (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (YYID (0))
#  endif
# endif

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack)					\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack, Stack, yysize);				\
	Stack = &yyptr->Stack;						\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))

#endif

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  587
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   50884

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  497
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  378
/* YYNRULES -- Number of rules.  */
#define YYNRULES  1776
/* YYNRULES -- Number of states.  */
#define YYNSTATES  2927

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   730

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,   494,     2,   482,     2,     2,
     487,   488,   480,   478,   491,   479,   489,   481,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   496,   490,
     474,   476,   475,   495,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,   485,     2,   486,   483,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   492,     2,   493,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   477,
     484
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const yytype_uint16 yyprhs[] =
{
       0,     0,     3,     5,     9,    11,    13,    15,    17,    19,
      21,    23,    25,    27,    29,    31,    33,    35,    37,    39,
      41,    43,    45,    47,    49,    51,    53,    55,    57,    59,
      61,    63,    65,    67,    69,    71,    73,    75,    77,    79,
      80,    85,    92,    97,   104,   109,   116,   121,   128,   130,
     133,   137,   140,   142,   146,   149,   153,   155,   159,   162,
     168,   172,   179,   184,   191,   198,   205,   211,   217,   224,
     234,   239,   245,   253,   260,   265,   274,   279,   282,   287,
     291,   298,   303,   306,   309,   312,   315,   317,   320,   321,
     323,   326,   329,   332,   334,   338,   343,   346,   348,   349,
     352,   356,   359,   363,   372,   374,   375,   377,   381,   388,
     395,   404,   411,   420,   427,   436,   443,   452,   461,   472,
     481,   492,   494,   495,   503,   505,   510,   515,   523,   526,
     528,   532,   537,   541,   542,   544,   545,   548,   552,   558,
     567,   573,   574,   580,   586,   594,   597,   598,   600,   602,
     604,   608,   611,   612,   614,   615,   617,   621,   623,   627,
     629,   633,   636,   639,   644,   650,   656,   665,   667,   668,
     672,   682,   695,   699,   700,   705,   712,   714,   717,   719,
     721,   722,   724,   727,   730,   732,   735,   738,   740,   743,
     747,   750,   753,   756,   759,   763,   767,   771,   773,   777,
     779,   780,   782,   785,   788,   791,   794,   797,   800,   803,
     806,   808,   810,   811,   821,   834,   846,   847,   850,   852,
     854,   856,   858,   860,   862,   866,   867,   869,   872,   874,
     876,   879,   882,   886,   888,   890,   893,   896,   898,   901,
     905,   911,   914,   920,   926,   929,   933,   935,   937,   940,
     943,   944,   949,   950,   954,   959,   964,   965,   969,   972,
     973,   977,   979,   981,   983,   985,   987,   989,   991,   993,
     995,   997,  1001,  1005,  1007,  1010,  1013,  1016,  1019,  1022,
    1025,  1026,  1030,  1034,  1038,  1039,  1041,  1044,  1046,  1049,
    1052,  1055,  1058,  1063,  1065,  1069,  1071,  1075,  1077,  1079,
    1081,  1083,  1087,  1089,  1092,  1093,  1095,  1096,  1098,  1102,
    1103,  1106,  1107,  1111,  1115,  1117,  1123,  1127,  1129,  1133,
    1135,  1140,  1146,  1152,  1159,  1163,  1171,  1176,  1188,  1190,
    1194,  1197,  1200,  1203,  1204,  1208,  1210,  1212,  1215,  1218,
    1221,  1224,  1226,  1227,  1229,  1232,  1239,  1244,  1251,  1256,
    1263,  1272,  1277,  1284,  1286,  1288,  1290,  1292,  1294,  1297,
    1299,  1302,  1304,  1306,  1308,  1312,  1316,  1320,  1324,  1327,
    1330,  1332,  1336,  1338,  1340,  1342,  1344,  1348,  1350,  1352,
    1353,  1355,  1357,  1359,  1361,  1365,  1372,  1374,  1376,  1379,
    1383,  1392,  1404,  1414,  1416,  1418,  1422,  1423,  1425,  1429,
    1431,  1432,  1434,  1435,  1437,  1438,  1440,  1444,  1446,  1448,
    1450,  1454,  1455,  1458,  1461,  1462,  1465,  1466,  1468,  1469,
    1471,  1473,  1475,  1479,  1483,  1485,  1487,  1491,  1495,  1499,
    1503,  1508,  1512,  1515,  1517,  1519,  1521,  1523,  1525,  1529,
    1531,  1533,  1537,  1541,  1543,  1546,  1551,  1556,  1559,  1563,
    1569,  1575,  1577,  1579,  1590,  1601,  1603,  1606,  1611,  1616,
    1621,  1624,  1627,  1631,  1633,  1637,  1644,  1647,  1648,  1652,
    1656,  1661,  1666,  1671,  1676,  1680,  1683,  1685,  1687,  1688,
    1690,  1692,  1693,  1695,  1701,  1703,  1704,  1706,  1707,  1711,
    1713,  1717,  1722,  1726,  1728,  1730,  1731,  1734,  1737,  1738,
    1741,  1744,  1746,  1748,  1750,  1751,  1754,  1759,  1765,  1770,
    1773,  1777,  1780,  1783,  1786,  1789,  1791,  1794,  1798,  1799,
    1801,  1802,  1808,  1810,  1815,  1822,  1825,  1827,  1828,  1833,
    1834,  1836,  1838,  1840,  1842,  1845,  1848,  1850,  1852,  1854,
    1856,  1858,  1860,  1864,  1865,  1867,  1871,  1873,  1875,  1878,
    1881,  1882,  1884,  1888,  1890,  1891,  1893,  1896,  1900,  1903,
    1908,  1911,  1915,  1918,  1919,  1921,  1924,  1925,  1930,  1936,
    1939,  1940,  1942,  1946,  1950,  1954,  1958,  1962,  1966,  1968,
    1973,  1977,  1982,  1988,  1993,  1999,  2004,  2010,  2013,  2018,
    2020,  2022,  2023,  2025,  2030,  2036,  2041,  2042,  2045,  2048,
    2051,  2053,  2055,  2056,  2061,  2064,  2066,  2069,  2072,  2077,
    2080,  2087,  2090,  2092,  2096,  2101,  2102,  2105,  2106,  2109,
    2110,  2112,  2116,  2120,  2123,  2124,  2127,  2132,  2134,  2136,
    2139,  2143,  2149,  2156,  2159,  2163,  2169,  2175,  2179,  2184,
    2185,  2187,  2189,  2191,  2193,  2195,  2198,  2203,  2205,  2207,
    2209,  2211,  2214,  2218,  2219,  2221,  2223,  2225,  2227,  2229,
    2232,  2235,  2238,  2241,  2244,  2246,  2250,  2251,  2253,  2255,
    2257,  2259,  2265,  2268,  2270,  2272,  2274,  2276,  2281,  2283,
    2286,  2289,  2291,  2295,  2299,  2302,  2304,  2305,  2311,  2314,
    2320,  2323,  2325,  2329,  2333,  2334,  2336,  2338,  2340,  2342,
    2344,  2346,  2348,  2350,  2352,  2354,  2356,  2358,  2360,  2362,
    2364,  2366,  2368,  2370,  2372,  2374,  2376,  2378,  2380,  2382,
    2386,  2390,  2394,  2398,  2402,  2406,  2410,  2411,  2413,  2417,
    2421,  2427,  2430,  2433,  2437,  2441,  2445,  2449,  2453,  2457,
    2461,  2465,  2469,  2473,  2477,  2481,  2485,  2488,  2491,  2495,
    2499,  2502,  2505,  2509,  2513,  2519,  2524,  2531,  2535,  2541,
    2546,  2553,  2558,  2565,  2571,  2579,  2583,  2586,  2591,  2595,
    2598,  2600,  2604,  2608,  2612,  2616,  2620,  2624,  2629,  2633,
    2638,  2642,  2647,  2653,  2660,  2667,  2675,  2682,  2690,  2697,
    2705,  2709,  2714,  2719,  2726,  2728,  2733,  2735,  2739,  2742,
    2745,  2749,  2753,  2757,  2761,  2765,  2769,  2773,  2777,  2781,
    2785,  2789,  2793,  2797,  2800,  2803,  2809,  2816,  2823,  2831,
    2833,  2835,  2838,  2841,  2844,  2849,  2851,  2854,  2856,  2859,
    2862,  2866,  2872,  2879,  2888,  2895,  2902,  2907,  2912,  2914,
    2916,  2918,  2924,  2926,  2928,  2933,  2935,  2940,  2942,  2947,
    2949,  2954,  2956,  2958,  2960,  2962,  2964,  2966,  2973,  2980,
    2985,  2990,  2995,  3000,  3007,  3013,  3019,  3025,  3030,  3037,
    3042,  3048,  3049,  3055,  3056,  3059,  3060,  3062,  3066,  3070,
    3073,  3076,  3077,  3084,  3086,  3087,  3091,  3092,  3095,  3098,
    3099,  3101,  3106,  3109,  3112,  3115,  3118,  3121,  3126,  3130,
    3132,  3138,  3142,  3144,  3148,  3150,  3152,  3154,  3156,  3158,
    3160,  3162,  3164,  3166,  3168,  3170,  3172,  3174,  3176,  3178,
    3180,  3182,  3184,  3189,  3191,  3196,  3198,  3203,  3205,  3208,
    3210,  3213,  3215,  3218,  3220,  3224,  3226,  3230,  3232,  3233,
    3235,  3239,  3241,  3245,  3249,  3251,  3255,  3259,  3260,  3262,
    3264,  3266,  3268,  3270,  3272,  3274,  3276,  3278,  3280,  3285,
    3289,  3292,  3296,  3297,  3301,  3305,  3308,  3311,  3313,  3314,
    3317,  3320,  3324,  3327,  3329,  3331,  3335,  3341,  3343,  3346,
    3351,  3354,  3355,  3357,  3358,  3360,  3363,  3366,  3370,  3376,
    3378,  3379,  3381,  3384,  3385,  3388,  3390,  3391,  3393,  3394,
    3396,  3400,  3404,  3407,  3409,  3413,  3419,  3424,  3427,  3429,
    3430,  3434,  3436,  3440,  3445,  3448,  3449,  3451,  3455,  3457,
    3460,  3462,  3466,  3468,  3470,  3472,  3475,  3477,  3479,  3482,
    3484,  3486,  3489,  3496,  3499,  3505,  3509,  3513,  3515,  3517,
    3519,  3521,  3523,  3525,  3527,  3529,  3531,  3533,  3535,  3537,
    3539,  3541,  3543,  3545,  3547,  3549,  3551,  3553,  3556,  3559,
    3563,  3567,  3568,  3570,  3572,  3574,  3576,  3578,  3580,  3582,
    3588,  3592,  3593,  3595,  3597,  3599,  3601,  3606,  3614,  3617,
    3618,  3620,  3622,  3624,  3626,  3640,  3657,  3659,  3662,  3663,
    3665,  3666,  3668,  3669,  3672,  3673,  3675,  3676,  3683,  3692,
    3699,  3708,  3715,  3724,  3727,  3729,  3734,  3738,  3741,  3746,
    3750,  3756,  3758,  3759,  3761,  3763,  3764,  3766,  3768,  3770,
    3772,  3774,  3776,  3778,  3780,  3782,  3784,  3786,  3790,  3792,
    3794,  3796,  3798,  3800,  3802,  3805,  3807,  3809,  3812,  3816,
    3820,  3824,  3826,  3830,  3834,  3837,  3841,  3845,  3849,  3853,
    3855,  3857,  3859,  3861,  3865,  3871,  3873,  3875,  3877,  3879,
    3883,  3886,  3888,  3893,  3899,  3905,  3910,  3917,  3919,  3921,
    3923,  3925,  3927,  3929,  3930,  3932,  3936,  3938,  3939,  3947,
    3949,  3952,  3956,  3959,  3960,  3963,  3964,  3967,  3972,  3975,
    3977,  3979,  3981,  3984,  3988,  3991,  3994,  3997,  4000,  4004,
    4009,  4012,  4014,  4016,  4018,  4022,  4025,  4035,  4047,  4060,
    4075,  4079,  4084,  4089,  4090,  4098,  4109,  4112,  4116,  4117,
    4122,  4124,  4126,  4128,  4130,  4132,  4134,  4136,  4138,  4140,
    4142,  4144,  4146,  4148,  4150,  4152,  4154,  4156,  4158,  4160,
    4162,  4164,  4166,  4168,  4170,  4172,  4174,  4176,  4178,  4180,
    4182,  4184,  4186,  4188,  4190,  4192,  4194,  4196,  4198,  4200,
    4202,  4204,  4206,  4208,  4210,  4212,  4214,  4216,  4218,  4220,
    4222,  4224,  4226,  4228,  4230,  4232,  4234,  4236,  4238,  4240,
    4242,  4244,  4246,  4248,  4250,  4252,  4254,  4256,  4258,  4260,
    4262,  4264,  4266,  4268,  4270,  4272,  4274,  4276,  4278,  4280,
    4282,  4284,  4286,  4288,  4290,  4292,  4294,  4296,  4298,  4300,
    4302,  4304,  4306,  4308,  4310,  4312,  4314,  4316,  4318,  4320,
    4322,  4324,  4326,  4328,  4330,  4332,  4334,  4336,  4338,  4340,
    4342,  4344,  4346,  4348,  4350,  4352,  4354,  4356,  4358,  4360,
    4362,  4364,  4366,  4368,  4370,  4372,  4374,  4376,  4378,  4380,
    4382,  4384,  4386,  4388,  4390,  4392,  4394,  4396,  4398,  4400,
    4402,  4404,  4406,  4408,  4410,  4412,  4414,  4416,  4418,  4420,
    4422,  4424,  4426,  4428,  4430,  4432,  4434,  4436,  4438,  4440,
    4442,  4444,  4446,  4448,  4450,  4452,  4454,  4456,  4458,  4460,
    4462,  4464,  4466,  4468,  4470,  4472,  4474,  4476,  4478,  4480,
    4482,  4484,  4486,  4488,  4490,  4492,  4494,  4496,  4498,  4500,
    4502,  4504,  4506,  4508,  4510,  4512,  4514,  4516,  4518,  4520,
    4522,  4524,  4526,  4528,  4530,  4532,  4534,  4536,  4538,  4540,
    4542,  4544,  4546,  4548,  4550,  4552,  4554,  4556,  4558,  4560,
    4562,  4564,  4566,  4568,  4570,  4572,  4574,  4576,  4578,  4580,
    4582,  4584,  4586,  4588,  4590,  4592,  4594,  4596,  4598,  4600,
    4602,  4604,  4606,  4608,  4610,  4612,  4614,  4616,  4618,  4620,
    4622,  4624,  4626,  4628,  4630,  4632,  4634,  4636,  4638,  4640,
    4642,  4644,  4646,  4648,  4650,  4652,  4654,  4656,  4658,  4660,
    4662,  4664,  4666,  4668,  4670,  4672,  4674,  4676,  4678,  4680,
    4682,  4684,  4686,  4688,  4690,  4692,  4694,  4696,  4698,  4700,
    4702,  4704,  4706,  4708,  4710,  4712,  4714,  4716,  4718,  4720,
    4722,  4724,  4726,  4728,  4730,  4732,  4734,  4736,  4738,  4740,
    4742,  4744,  4746,  4748,  4750,  4752,  4754,  4756,  4758,  4760,
    4762,  4764,  4766,  4768,  4770,  4772,  4774,  4776,  4778,  4780,
    4782,  4784,  4786,  4788,  4790,  4792,  4794,  4796,  4798,  4800,
    4802,  4804,  4806,  4808,  4810,  4812,  4814,  4816,  4818,  4820,
    4822,  4824,  4826,  4828,  4830,  4832,  4834,  4836,  4838,  4840,
    4842,  4844,  4846,  4848,  4850,  4852,  4854,  4856,  4858,  4860,
    4862,  4864,  4866,  4868,  4870,  4872,  4874,  4876,  4878,  4880,
    4882,  4884,  4886,  4888,  4890,  4892,  4894,  4896,  4898,  4900,
    4902,  4904,  4906,  4908,  4910,  4912,  4914,  4916,  4918,  4920,
    4922,  4924,  4926,  4928,  4930,  4932,  4934,  4936,  4938,  4940,
    4942,  4944,  4946,  4948,  4950,  4952,  4954,  4956,  4958,  4960,
    4962,  4964,  4966,  4968,  4970,  4972,  4974,  4976,  4978,  4980,
    4982,  4984,  4986,  4988,  4990,  4992,  4994,  4996,  4998,  5000,
    5002,  5004,  5006,  5008,  5010,  5012,  5014,  5016,  5018,  5020,
    5022,  5024,  5026,  5028,  5030,  5032,  5034,  5036,  5038,  5040,
    5042,  5044,  5046,  5048,  5050,  5052,  5054,  5056,  5058,  5060,
    5062,  5064,  5066,  5068,  5070,  5072,  5074,  5076,  5078,  5080,
    5082,  5084,  5086,  5088,  5090,  5092,  5094,  5096,  5098,  5100,
    5102,  5104,  5106,  5108,  5110,  5112,  5114,  5116,  5118,  5120,
    5122,  5124,  5126,  5128,  5130,  5132,  5134,  5136,  5138,  5140,
    5142,  5144,  5146,  5148,  5150,  5152,  5154,  5156,  5158,  5160,
    5162,  5164,  5166,  5168,  5170,  5172,  5174,  5176,  5178,  5180,
    5182,  5184,  5186,  5188,  5190,  5192,  5194,  5196,  5198,  5200,
    5202,  5204,  5206,  5208,  5210,  5212,  5214,  5216,  5218,  5220,
    5222,  5224,  5226,  5228,  5230,  5232,  5234
};

/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
static const yytype_int16 yyrhs[] =
{
     498,     0,    -1,   499,    -1,   499,   490,   500,    -1,   500,
      -1,   823,    -1,   541,    -1,   501,    -1,   855,    -1,   862,
      -1,   824,    -1,   607,    -1,   865,    -1,   513,    -1,   603,
      -1,   813,    -1,   537,    -1,   550,    -1,   512,    -1,   851,
      -1,   596,    -1,   539,    -1,   827,    -1,   825,    -1,   826,
      -1,   816,    -1,   518,    -1,   844,    -1,   536,    -1,   810,
      -1,   516,    -1,   624,    -1,   548,    -1,   606,    -1,   846,
      -1,   856,    -1,   838,    -1,   859,    -1,   863,    -1,    -1,
      29,   395,   684,   509,    -1,    29,   395,   185,   149,   684,
     509,    -1,    29,   194,   791,   509,    -1,    29,   194,   185,
     149,   791,   509,    -1,    29,   360,   791,   509,    -1,    29,
     360,   185,   149,   791,   509,    -1,    29,   442,   791,   509,
      -1,    29,   442,   185,   149,   791,   509,    -1,   504,    -1,
     502,   504,    -1,   366,   114,   726,    -1,   134,   114,    -1,
     338,    -1,   338,   543,   544,    -1,   366,   545,    -1,   366,
     171,   595,    -1,   508,    -1,   505,   491,   508,    -1,    23,
     575,    -1,    23,   185,   264,   149,   575,    -1,    23,    75,
     575,    -1,    23,    75,   185,   264,   149,   575,    -1,    29,
     517,   799,   503,    -1,    29,   517,   799,   134,   264,   269,
      -1,    29,   517,   799,   366,   264,   269,    -1,    29,   517,
     799,   366,   382,   547,    -1,    29,   517,   799,   366,   563,
      -1,    29,   517,   799,   337,   563,    -1,    29,   517,   799,
     366,   385,   799,    -1,    29,   517,   799,    23,   171,   595,
      36,   184,   553,    -1,    29,   517,   799,   502,    -1,    29,
     517,   799,   134,   184,    -1,    29,   517,   799,   134,   184,
     185,   149,    -1,   134,   517,   185,   149,   799,   600,    -1,
     134,   517,   799,   600,    -1,    29,   517,   799,   511,   417,
     696,   693,   507,    -1,    29,   517,   799,   510,    -1,    23,
     565,    -1,    29,    85,   793,   551,    -1,   433,    85,   793,
      -1,   134,    85,   185,   149,   793,   600,    -1,   134,    85,
     793,   600,    -1,   366,   236,    -1,   366,   426,    -1,   366,
     563,    -1,   337,   563,    -1,   510,    -1,   430,   726,    -1,
      -1,   558,    -1,   366,   558,    -1,    23,   558,    -1,   134,
     573,    -1,   506,    -1,   509,   491,   506,    -1,   283,   487,
     505,   488,    -1,   366,   106,    -1,   366,    -1,    -1,   110,
     793,    -1,   110,   309,   793,    -1,   110,    27,    -1,   110,
     309,    27,    -1,    92,   417,   804,    36,   141,   487,   514,
     488,    -1,   515,    -1,    -1,   798,    -1,   515,   491,   798,
      -1,    29,   352,   793,   333,   406,   793,    -1,    29,   395,
     684,   333,   406,   793,    -1,    29,   395,   185,   149,   684,
     333,   406,   793,    -1,    29,   360,   791,   333,   406,   793,
      -1,    29,   360,   185,   149,   791,   333,   406,   793,    -1,
      29,   442,   791,   333,   406,   793,    -1,    29,   442,   185,
     149,   791,   333,   406,   793,    -1,    29,   194,   791,   333,
     406,   793,    -1,    29,   194,   185,   149,   791,   333,   406,
     793,    -1,    29,   395,   684,   333,   517,   793,   406,   793,
      -1,    29,   395,   185,   149,   684,   333,   517,   793,   406,
     793,    -1,    29,   395,   684,   333,    85,   793,   406,   793,
      -1,    29,   395,   185,   149,   684,   333,    85,   793,   406,
     793,    -1,    75,    -1,    -1,   522,   204,   210,   520,   519,
     525,   527,    -1,   624,    -1,   292,   528,   435,   624,    -1,
     487,   532,   488,   624,    -1,   487,   532,   488,   292,   528,
     435,   624,    -1,   114,   436,    -1,   791,    -1,   791,    36,
     799,    -1,   487,   534,   488,   690,    -1,   279,    85,   793,
      -1,    -1,   629,    -1,    -1,   799,   780,    -1,   535,   476,
     726,    -1,   487,   529,   488,   476,   726,    -1,   279,    83,
     521,   130,   428,   366,   533,   690,    -1,   279,    83,   521,
     130,   265,    -1,    -1,   799,   530,   531,   642,   643,    -1,
     731,   530,   531,   642,   643,    -1,   487,   726,   488,   530,
     531,   642,   643,    -1,   340,   783,    -1,    -1,   429,    -1,
     394,    -1,   535,    -1,   529,   491,   535,    -1,    73,   804,
      -1,    -1,   804,    -1,    -1,   523,    -1,   532,   491,   523,
      -1,   524,    -1,   533,   491,   524,    -1,   526,    -1,   534,
     491,   526,    -1,   799,   780,    -1,   306,   799,    -1,   306,
     799,   476,   843,    -1,   306,   799,   487,   758,   488,    -1,
      92,   594,   360,   791,   538,    -1,    92,   594,   360,   185,
     264,   149,   791,   538,    -1,   542,    -1,    -1,   148,   793,
     540,    -1,    92,   594,   395,   867,    36,   148,   793,   540,
     866,    -1,    92,   594,   395,   185,   264,   149,   867,    36,
     148,   793,   540,   866,    -1,   487,   756,   488,    -1,    -1,
      29,   360,   791,   542,    -1,    29,   360,   185,   149,   791,
     542,    -1,   545,    -1,   542,   545,    -1,   449,    -1,   473,
      -1,    -1,     4,    -1,   478,     4,    -1,   479,     4,    -1,
     547,    -1,    36,   698,    -1,    55,   544,    -1,   105,    -1,
     262,   105,    -1,   193,   546,   544,    -1,   242,   544,    -1,
     250,   544,    -1,   262,   242,    -1,   262,   250,    -1,   293,
      54,   804,    -1,   360,   255,   804,    -1,   380,   543,   544,
      -1,   338,    -1,   338,   543,   544,    -1,    54,    -1,    -1,
     797,    -1,   478,   797,    -1,   479,   797,    -1,    19,   549,
      -1,    47,   549,    -1,   380,   549,    -1,    79,   549,    -1,
     140,   549,    -1,   345,   549,    -1,   452,    -1,   408,    -1,
      -1,    92,   594,   395,   791,   487,   582,   488,   570,   562,
      -1,    92,   594,   395,   185,   264,   149,   791,   487,   582,
     488,   570,   562,    -1,    92,   284,   335,   594,   395,   791,
     487,   582,   488,   570,   562,    -1,    -1,   551,   574,    -1,
     589,    -1,   874,    -1,   753,    -1,   544,    -1,   798,    -1,
     263,    -1,   487,   542,   488,    -1,    -1,   798,    -1,   262,
      22,    -1,   339,    -1,    58,    -1,   366,   269,    -1,   366,
     114,    -1,    85,   793,   557,    -1,   557,    -1,   569,    -1,
      73,   804,    -1,   264,   269,    -1,   269,    -1,   423,   581,
      -1,   312,   216,   581,    -1,    67,   487,   726,   488,   564,
      -1,   114,   727,    -1,   171,   595,    36,   184,   553,    -1,
     327,   791,   584,   592,   560,    -1,   573,   554,    -1,   279,
     428,   555,    -1,   559,    -1,   586,    -1,   559,   586,    -1,
     586,   559,    -1,    -1,   283,   487,   576,   488,    -1,    -1,
     279,    79,   134,    -1,   279,    79,   119,   348,    -1,   279,
      79,   311,   348,    -1,    -1,   487,   567,   488,    -1,   262,
     196,    -1,    -1,    85,   793,   590,    -1,   590,    -1,    78,
      -1,    86,    -1,   115,    -1,   184,    -1,   195,    -1,   382,
      -1,   385,    -1,    27,    -1,   587,    -1,   567,   491,   587,
      -1,   430,   194,   578,    -1,   116,    -1,   264,   116,    -1,
     198,   117,    -1,   198,   187,    -1,   449,   563,    -1,   449,
     277,    -1,   451,   277,    -1,    -1,   487,   577,   488,    -1,
     572,   192,   566,    -1,   572,   146,   566,    -1,    -1,   808,
      -1,   264,   116,    -1,   116,    -1,   198,   187,    -1,   198,
     117,    -1,   264,   432,    -1,   262,   196,    -1,   799,   696,
     561,   585,    -1,   558,    -1,   576,   491,   558,    -1,   580,
      -1,   577,   491,   580,    -1,   799,    -1,   575,    -1,   593,
      -1,   565,    -1,   808,   476,   552,    -1,   808,    -1,   449,
     571,    -1,    -1,   591,    -1,    -1,   799,    -1,   487,   588,
     488,    -1,    -1,   585,   556,    -1,    -1,   279,   119,   555,
      -1,   808,   476,   552,    -1,   808,    -1,   808,   489,   808,
     476,   552,    -1,   808,   489,   808,    -1,   583,    -1,   588,
     491,   583,    -1,   696,    -1,   801,   805,   482,   417,    -1,
     367,   801,   805,   482,   417,    -1,    67,   487,   726,   488,
     551,    -1,   423,   487,   588,   488,   581,   551,    -1,   423,
     568,   551,    -1,   312,   216,   487,   588,   488,   581,   551,
      -1,   312,   216,   568,   551,    -1,   164,   216,   487,   588,
     488,   327,   791,   584,   592,   560,   551,    -1,   579,    -1,
     591,   491,   579,    -1,   240,   168,    -1,   240,   297,    -1,
     240,   372,    -1,    -1,   226,   791,   572,    -1,   401,    -1,
     399,    -1,   230,   401,    -1,   230,   399,    -1,   173,   401,
      -1,   173,   399,    -1,   426,    -1,    -1,    30,    -1,    54,
     114,    -1,   134,   597,   185,   149,   599,   600,    -1,   134,
     597,   599,   600,    -1,   134,   598,   185,   149,   792,   600,
      -1,   134,   598,   792,   600,    -1,   134,   601,   793,   279,
     804,   600,    -1,   134,   601,   185,   149,   793,   279,   804,
     600,    -1,   134,   417,   602,   600,    -1,   134,   417,   185,
     149,   602,   600,    -1,   395,    -1,   360,    -1,   169,    -1,
     237,    -1,   442,    -1,   241,   442,    -1,   194,    -1,   164,
     395,    -1,    74,    -1,    89,    -1,   382,    -1,   402,   355,
     296,    -1,   402,   355,   126,    -1,   402,   355,   400,    -1,
     402,   355,    82,    -1,    21,   243,    -1,   143,   411,    -1,
     152,    -1,   164,   106,   453,    -1,   318,    -1,   352,    -1,
     363,    -1,   804,    -1,   599,   491,   804,    -1,    58,    -1,
     339,    -1,    -1,   304,    -1,   349,    -1,   411,    -1,   696,
      -1,   602,   491,   696,    -1,    92,   604,   791,   605,    36,
     726,    -1,   169,    -1,   237,    -1,   487,   488,    -1,   487,
     758,   488,    -1,   522,   428,   852,   366,   533,   674,   853,
     527,    -1,    90,   619,   791,   584,   617,   608,   613,   622,
     609,   543,   614,    -1,    90,   487,   812,   488,   406,   613,
     622,   543,   614,    -1,   167,    -1,   406,    -1,   611,   121,
     798,    -1,    -1,   621,    -1,   610,   491,   621,    -1,   430,
      -1,    -1,    36,    -1,    -1,   317,    -1,    -1,   618,    -1,
     487,   623,   488,    -1,   835,    -1,   544,    -1,   480,    -1,
     487,   610,   488,    -1,    -1,   808,   615,    -1,   449,   277,
      -1,    -1,   618,   620,    -1,    -1,    50,    -1,    -1,    50,
      -1,   277,    -1,   166,    -1,   120,   612,   798,    -1,   269,
     612,   798,    -1,    94,    -1,   180,    -1,   319,   612,   798,
      -1,   142,   612,   798,    -1,   163,   319,   588,    -1,   163,
     319,   480,    -1,   163,   264,   269,   588,    -1,   163,   269,
     588,    -1,   138,   798,    -1,   835,    -1,   798,    -1,   383,
      -1,   384,    -1,   616,    -1,   623,   491,   616,    -1,   626,
      -1,   625,    -1,   487,   626,   488,    -1,   487,   625,   488,
      -1,   628,    -1,   627,   639,    -1,   627,   638,   666,   645,
      -1,   627,   638,   644,   667,    -1,   629,   627,    -1,   629,
     627,   639,    -1,   629,   627,   638,   666,   645,    -1,   629,
     627,   638,   644,   667,    -1,   628,    -1,   625,    -1,   359,
     637,   782,   632,   674,   690,   661,   665,   735,   649,    -1,
     359,   636,   783,   632,   674,   690,   661,   665,   735,   649,
      -1,   673,    -1,   395,   684,    -1,   627,   422,   635,   627,
      -1,   627,   208,   635,   627,    -1,   627,   144,   635,   627,
      -1,   449,   630,    -1,   473,   630,    -1,   449,   325,   630,
      -1,   631,    -1,   630,   491,   631,    -1,   793,   806,    36,
     487,   812,   488,    -1,   210,   633,    -1,    -1,   401,   634,
     791,    -1,   399,   634,   791,    -1,   230,   401,   634,   791,
      -1,   230,   399,   634,   791,    -1,   173,   401,   634,   791,
      -1,   173,   399,   634,   791,    -1,   426,   634,   791,    -1,
     395,   791,    -1,   791,    -1,   395,    -1,    -1,    27,    -1,
     129,    -1,    -1,   129,    -1,   129,   279,   487,   756,   488,
      -1,    27,    -1,    -1,   639,    -1,    -1,   285,    54,   640,
      -1,   641,    -1,   640,   491,   641,    -1,   726,   430,   753,
     643,    -1,   726,   642,   643,    -1,    37,    -1,   123,    -1,
      -1,   472,   159,    -1,   472,   220,    -1,    -1,   646,   647,
      -1,   647,   646,    -1,   646,    -1,   647,    -1,   644,    -1,
      -1,   227,   655,    -1,   227,   655,   491,   656,    -1,   157,
     660,   657,   659,   280,    -1,   157,   660,   659,   280,    -1,
     276,   656,    -1,   276,   657,   659,    -1,     4,   482,    -1,
       9,   482,    -1,     4,   301,    -1,     9,   301,    -1,     9,
      -1,     9,   348,    -1,   430,   350,   651,    -1,    -1,   799,
      -1,    -1,   650,   487,   648,   488,   654,    -1,   648,    -1,
     648,   487,   799,   488,    -1,   648,   487,   799,   491,     9,
     488,    -1,   397,   651,    -1,   652,    -1,    -1,   334,   487,
       9,   488,    -1,    -1,   726,    -1,    27,    -1,   726,    -1,
     728,    -1,   478,   658,    -1,   479,   658,    -1,   797,    -1,
       4,    -1,   347,    -1,   348,    -1,   159,    -1,   261,    -1,
     176,    54,   662,    -1,    -1,   663,    -1,   662,   491,   663,
      -1,   726,    -1,   664,    -1,   487,   488,    -1,   179,   726,
      -1,    -1,   668,    -1,   162,   321,   280,    -1,   666,    -1,
      -1,   669,    -1,   668,   669,    -1,   670,   671,   672,    -1,
     162,   428,    -1,   162,   262,   216,   428,    -1,   162,   369,
      -1,   162,   216,   369,    -1,   274,   790,    -1,    -1,   268,
      -1,   373,   235,    -1,    -1,   436,   487,   756,   488,    -1,
     673,   491,   487,   756,   488,    -1,   167,   675,    -1,    -1,
     676,    -1,   675,   491,   676,    -1,   684,   679,   653,    -1,
     685,   680,   653,    -1,   221,   685,   680,    -1,   625,   679,
     653,    -1,   221,   625,   679,    -1,   677,    -1,   487,   677,
     488,   678,    -1,   487,   677,   488,    -1,   676,    93,   215,
     676,    -1,   676,   681,   215,   676,   683,    -1,   676,   215,
     676,   683,    -1,   676,   258,   681,   215,   676,    -1,   676,
     258,   215,   676,    -1,    36,   799,   487,   792,   488,    -1,
      36,   800,    -1,   799,   487,   792,   488,    -1,   799,    -1,
     678,    -1,    -1,   678,    -1,    36,   487,   691,   488,    -1,
      36,   799,   487,   691,   488,    -1,   799,   487,   691,   488,
      -1,    -1,   168,   682,    -1,   224,   682,    -1,   343,   682,
      -1,   200,    -1,   288,    -1,    -1,   430,   487,   792,   488,
      -1,   279,   726,    -1,   791,    -1,   791,   480,    -1,   280,
     791,    -1,   280,   487,   791,   488,    -1,   731,   689,    -1,
     348,   167,   487,   687,   488,   689,    -1,   731,   688,    -1,
     686,    -1,   687,   491,   686,    -1,    36,   487,   691,   488,
      -1,    -1,   473,   286,    -1,    -1,   446,   726,    -1,    -1,
     692,    -1,   691,   491,   692,    -1,   799,   696,   693,    -1,
      73,   804,    -1,    -1,   799,   696,    -1,   694,   491,   799,
     696,    -1,   347,    -1,   388,    -1,   698,   697,    -1,   367,
     698,   697,    -1,   698,    35,   485,   797,   486,    -1,   367,
     698,    35,   485,   797,   486,    -1,   698,    35,    -1,   367,
     698,    35,    -1,   695,   487,   694,   488,   697,    -1,   238,
     487,   760,   488,   697,    -1,   697,   485,   486,    -1,   697,
     485,   797,   486,    -1,    -1,   700,    -1,   702,    -1,   704,
      -1,   708,    -1,   714,    -1,   715,   725,    -1,   715,   487,
     797,   488,    -1,   702,    -1,   705,    -1,   709,    -1,   714,
      -1,   803,   701,    -1,   487,   756,   488,    -1,    -1,   206,
      -1,   207,    -1,   374,    -1,    49,    -1,   322,    -1,   160,
     703,    -1,   133,   308,    -1,   112,   701,    -1,   111,   701,
      -1,   272,   701,    -1,    52,    -1,   487,   797,   488,    -1,
      -1,   706,    -1,   707,    -1,   706,    -1,   707,    -1,    51,
     713,   487,   756,   488,    -1,    51,   713,    -1,   710,    -1,
     711,    -1,   710,    -1,   711,    -1,   712,   487,   797,   488,
      -1,   712,    -1,    65,   713,    -1,    64,   713,    -1,   437,
      -1,   257,    65,   713,    -1,   257,    64,   713,    -1,   259,
     713,    -1,   439,    -1,    -1,   405,   487,   797,   488,   716,
      -1,   405,   716,    -1,   404,   487,   797,   488,   716,    -1,
     404,   716,    -1,   209,    -1,   473,   404,   470,    -1,   451,
     404,   470,    -1,    -1,   467,    -1,   468,    -1,   252,    -1,
     253,    -1,   108,    -1,   109,    -1,   182,    -1,   183,    -1,
     248,    -1,   249,    -1,   356,    -1,   357,    -1,   246,    -1,
     247,    -1,   244,    -1,   245,    -1,   717,    -1,   718,    -1,
     719,    -1,   720,    -1,   721,    -1,   722,    -1,   723,    -1,
     724,    -1,   717,   406,   718,    -1,   719,   406,   720,    -1,
     719,   406,   721,    -1,   719,   406,   722,    -1,   720,   406,
     721,    -1,   720,   406,   722,    -1,   721,   406,   722,    -1,
      -1,   728,    -1,   726,    11,   696,    -1,   726,    73,   804,
      -1,   726,    41,   404,   470,   726,    -1,   478,   726,    -1,
     479,   726,    -1,   726,   478,   726,    -1,   726,   479,   726,
      -1,   726,   480,   726,    -1,   726,   481,   726,    -1,   726,
     482,   726,    -1,   726,   483,   726,    -1,   726,   474,   726,
      -1,   726,   475,   726,    -1,   726,   476,   726,    -1,   726,
      16,   726,    -1,   726,    17,   726,    -1,   726,    18,   726,
      -1,   726,   752,   726,    -1,   752,   726,    -1,   726,   752,
      -1,   726,    33,   726,    -1,   726,   284,   726,    -1,   264,
     726,    -1,   471,   726,    -1,   726,   172,   726,    -1,   726,
     226,   726,    -1,   726,   226,   726,   142,   726,    -1,   726,
     471,   226,   726,    -1,   726,   471,   226,   726,   142,   726,
      -1,   726,   186,   726,    -1,   726,   186,   726,   142,   726,
      -1,   726,   471,   186,   726,    -1,   726,   471,   186,   726,
     142,   726,    -1,   726,   371,   406,   726,    -1,   726,   371,
     406,   726,   142,   726,    -1,   726,   471,   371,   406,   726,
      -1,   726,   471,   371,   406,   726,   142,   726,    -1,   726,
     212,   269,    -1,   726,   213,    -1,   726,   212,   264,   269,
      -1,   726,   264,   269,    -1,   726,   267,    -1,   746,    -1,
     492,   748,   493,    -1,   485,   757,   486,    -1,   746,    15,
     726,    -1,   776,    15,   726,    -1,   746,   290,   746,    -1,
     726,   212,   413,    -1,   726,   212,   264,   413,    -1,   726,
     212,   155,    -1,   726,   212,   264,   155,    -1,   726,   212,
     424,    -1,   726,   212,   264,   424,    -1,   726,   212,   129,
     167,   726,    -1,   726,   212,   264,   129,   167,   726,    -1,
     726,   212,   274,   487,   760,   488,    -1,   726,   212,   264,
     274,   487,   760,   488,    -1,   726,    48,   781,   727,    33,
     726,    -1,   726,   471,    48,   781,   727,    33,   726,    -1,
     726,    48,   392,   727,    33,   726,    -1,   726,   471,    48,
     392,   727,    33,   726,    -1,   726,   191,   770,    -1,   726,
     471,   191,   770,    -1,   726,   754,   749,   625,    -1,   726,
     754,   749,   487,   726,   488,    -1,   114,    -1,    35,   485,
     757,   486,    -1,   728,    -1,   727,    11,   696,    -1,   478,
     727,    -1,   479,   727,    -1,   727,   478,   727,    -1,   727,
     479,   727,    -1,   727,   480,   727,    -1,   727,   481,   727,
      -1,   727,   482,   727,    -1,   727,   483,   727,    -1,   727,
     474,   727,    -1,   727,   475,   727,    -1,   727,   476,   727,
      -1,   727,    16,   727,    -1,   727,    17,   727,    -1,   727,
      18,   727,    -1,   727,   752,   727,    -1,   752,   727,    -1,
     727,   752,    -1,   727,   212,   129,   167,   727,    -1,   727,
     212,   264,   129,   167,   727,    -1,   727,   212,   274,   487,
     760,   488,    -1,   727,   212,   264,   274,   487,   760,   488,
      -1,   776,    -1,   796,    -1,   494,     9,    -1,   495,   780,
      -1,    10,   780,    -1,   487,   726,   488,   780,    -1,   771,
      -1,   730,   780,    -1,   625,    -1,   625,   779,    -1,   149,
     625,    -1,   795,   487,   488,    -1,   795,   487,   758,   638,
     488,    -1,   795,   487,   438,   759,   638,   488,    -1,   795,
     487,   758,   491,   438,   759,   638,   488,    -1,   795,   487,
      27,   758,   638,   488,    -1,   795,   487,   129,   758,   638,
     488,    -1,   795,   487,   480,   488,    -1,   729,   733,   734,
     738,    -1,   732,    -1,   729,    -1,   732,    -1,    74,   162,
     487,   726,   488,    -1,    98,    -1,   101,    -1,   101,   487,
     797,   488,    -1,   102,    -1,   102,   487,   797,   488,    -1,
     231,    -1,   231,   487,   797,   488,    -1,   232,    -1,   232,
     487,   797,   488,    -1,    99,    -1,   103,    -1,   365,    -1,
     429,    -1,    97,    -1,   100,    -1,    61,   487,   726,    36,
     696,   488,    -1,   416,   487,   726,    36,   696,   488,    -1,
     154,   487,   761,   488,    -1,   291,   487,   763,   488,    -1,
     305,   487,   765,   488,    -1,   390,   487,   766,   488,    -1,
     410,   487,   726,    36,   696,   488,    -1,   412,   487,    53,
     769,   488,    -1,   412,   487,   222,   769,   488,    -1,   412,
     487,   407,   769,   488,    -1,   412,   487,   769,   488,    -1,
     270,   487,   726,   491,   726,   488,    -1,    72,   487,   756,
     488,    -1,   450,   176,   487,   639,   488,    -1,    -1,   158,
     487,   446,   726,   488,    -1,    -1,   448,   736,    -1,    -1,
     737,    -1,   736,   491,   737,    -1,   799,    36,   739,    -1,
     289,   739,    -1,   289,   799,    -1,    -1,   487,   740,   741,
     638,   742,   488,    -1,   799,    -1,    -1,   298,    54,   756,
      -1,    -1,   320,   743,    -1,   348,   743,    -1,    -1,   744,
      -1,    48,   744,    33,   744,    -1,   419,   307,    -1,   419,
     161,    -1,    96,   347,    -1,   726,   307,    -1,   726,   161,
      -1,   347,   487,   756,   488,    -1,   347,   487,   488,    -1,
     745,    -1,   487,   756,   491,   726,   488,    -1,   800,   496,
     726,    -1,   747,    -1,   748,   491,   747,    -1,    34,    -1,
     376,    -1,    27,    -1,     8,    -1,   751,    -1,   478,    -1,
     479,    -1,   480,    -1,   481,    -1,   482,    -1,   483,    -1,
     474,    -1,   475,    -1,   476,    -1,    16,    -1,    17,    -1,
      18,    -1,     8,    -1,   281,   487,   755,   488,    -1,   750,
      -1,   281,   487,   755,   488,    -1,   750,    -1,   281,   487,
     755,   488,    -1,   226,    -1,   471,   226,    -1,   172,    -1,
     471,   172,    -1,   186,    -1,   471,   186,    -1,   750,    -1,
     799,   489,   755,    -1,   726,    -1,   756,   491,   726,    -1,
     756,    -1,    -1,   759,    -1,   758,   491,   759,    -1,   726,
      -1,   807,    13,   726,    -1,   807,    14,   726,    -1,   696,
      -1,   760,   491,   696,    -1,   762,   167,   726,    -1,    -1,
       3,    -1,   717,    -1,   718,    -1,   719,    -1,   720,    -1,
     721,    -1,   722,    -1,   723,    -1,   724,    -1,   798,    -1,
     726,   764,   767,   768,    -1,   726,   764,   767,    -1,   302,
     726,    -1,   727,   191,   727,    -1,    -1,   726,   767,   768,
      -1,   726,   768,   767,    -1,   726,   767,    -1,   726,   768,
      -1,   756,    -1,    -1,   167,   726,    -1,   162,   726,    -1,
     726,   167,   756,    -1,   167,   756,    -1,   756,    -1,   625,
      -1,   487,   756,   488,    -1,    60,   775,   772,   774,   140,
      -1,   773,    -1,   772,   773,    -1,   445,   726,   403,   726,
      -1,   136,   726,    -1,    -1,   726,    -1,    -1,   799,    -1,
     799,   779,    -1,   489,   794,    -1,   485,   726,   486,    -1,
     485,   778,   496,   778,   486,    -1,   726,    -1,    -1,   777,
      -1,   779,   777,    -1,    -1,   780,   777,    -1,    40,    -1,
      -1,   783,    -1,    -1,   784,    -1,   783,   491,   784,    -1,
     726,    36,   809,    -1,   726,     3,    -1,   726,    -1,   480,
     786,   789,    -1,   799,   489,   480,   786,   789,    -1,   145,
     487,   792,   488,    -1,   145,   799,    -1,   785,    -1,    -1,
     726,    36,   799,    -1,   787,    -1,   788,   491,   787,    -1,
     335,   487,   788,   488,    -1,   335,   787,    -1,    -1,   791,
      -1,   790,   491,   791,    -1,   800,    -1,   799,   779,    -1,
     793,    -1,   792,   491,   793,    -1,   799,    -1,   808,    -1,
     802,    -1,   799,   779,    -1,   797,    -1,     4,    -1,   798,
     780,    -1,     6,    -1,     7,    -1,   795,   798,    -1,   795,
     487,   758,   638,   488,   798,    -1,   699,   798,    -1,   715,
     487,   726,   488,   725,    -1,   715,   797,   725,    -1,   715,
     798,   725,    -1,   413,    -1,   155,    -1,   269,    -1,     9,
      -1,     5,    -1,     3,    -1,   868,    -1,   869,    -1,   799,
      -1,     5,    -1,     3,    -1,   868,    -1,   873,    -1,     3,
      -1,   868,    -1,   870,    -1,     3,    -1,   868,    -1,   871,
      -1,   799,    -1,   799,   805,    -1,   489,   794,    -1,   805,
     489,   794,    -1,   487,   792,   488,    -1,    -1,   801,    -1,
       3,    -1,   872,    -1,   868,    -1,   874,    -1,   808,    -1,
       5,    -1,   309,   793,   811,    36,   812,    -1,   487,   760,
     488,    -1,    -1,   624,    -1,   518,    -1,   606,    -1,   851,
      -1,    92,   352,   799,   814,    -1,    92,   352,   185,   264,
     149,   799,   814,    -1,   814,   815,    -1,    -1,   550,    -1,
     816,    -1,   537,    -1,   863,    -1,    92,   822,   194,   819,
     820,   279,   791,   818,   487,   534,   488,   821,   690,    -1,
      92,   822,   194,   819,   185,   264,   149,   578,   279,   791,
     818,   487,   534,   488,   821,   690,    -1,   799,    -1,   430,
     817,    -1,    -1,    81,    -1,    -1,   578,    -1,    -1,   449,
     563,    -1,    -1,   423,    -1,    -1,    29,   395,   684,   366,
     352,   793,    -1,    29,   395,   185,   149,   684,   366,   352,
     793,    -1,    29,   360,   791,   366,   352,   793,    -1,    29,
     360,   185,   149,   791,   366,   352,   793,    -1,    29,   442,
     791,   366,   352,   793,    -1,    29,   442,   185,   149,   791,
     366,   352,   793,    -1,   163,    68,    -1,    68,    -1,   151,
     107,   798,   614,    -1,   190,   107,   798,    -1,   150,   830,
      -1,   150,   834,   828,   830,    -1,   150,   440,   830,    -1,
     150,   487,   833,   488,   830,    -1,   440,    -1,    -1,   835,
      -1,   544,    -1,    -1,   624,    -1,   518,    -1,   606,    -1,
     851,    -1,   865,    -1,     3,    -1,   868,    -1,   872,    -1,
     831,    -1,   798,    -1,   836,    -1,   833,   491,   836,    -1,
      32,    -1,    31,    -1,   413,    -1,   155,    -1,   279,    -1,
     832,    -1,   837,   829,    -1,   831,    -1,   834,    -1,   366,
     839,    -1,   366,   230,   839,    -1,   366,   364,   839,    -1,
     366,   173,   839,    -1,   840,    -1,   861,   167,    96,    -1,
     404,   470,   842,    -1,   352,   798,    -1,   861,   406,   843,
      -1,   861,   476,   843,    -1,   861,   406,   114,    -1,   861,
     476,   114,    -1,   835,    -1,   544,    -1,   798,    -1,     3,
      -1,   715,   798,   725,    -1,   715,   487,   797,   488,   798,
      -1,   544,    -1,   114,    -1,   230,    -1,   841,    -1,   843,
     491,   841,    -1,   229,   845,    -1,   798,    -1,   431,   848,
     850,   828,    -1,   431,   848,   850,   828,   791,    -1,   431,
     848,   850,   828,   855,    -1,   431,   487,   849,   488,    -1,
     431,   487,   849,   488,   791,   806,    -1,   834,    -1,   440,
      -1,   166,    -1,   168,    -1,     3,    -1,   168,    -1,    -1,
     847,    -1,   849,   491,   847,    -1,   166,    -1,    -1,   522,
     119,   167,   852,   854,   853,   527,    -1,   684,    -1,   684,
     799,    -1,   684,    36,   799,    -1,   446,   726,    -1,    -1,
     430,   675,    -1,    -1,   834,   828,    -1,   834,   828,   791,
     806,    -1,   337,   858,    -1,   861,    -1,    27,    -1,   857,
      -1,   404,   470,    -1,   408,   214,   225,    -1,   860,   624,
      -1,   391,   624,    -1,   391,   861,    -1,   860,   861,    -1,
     860,   404,   470,    -1,   860,   408,   214,   225,    -1,   860,
      27,    -1,   370,    -1,   124,    -1,   799,    -1,   861,   489,
     799,    -1,    56,   729,    -1,    92,   594,   442,   791,   584,
     821,    36,   624,   864,    -1,    92,   284,   335,   594,   442,
     791,   584,   821,    36,   624,   864,    -1,    92,   594,   325,
     442,   791,   487,   588,   488,   821,    36,   624,   864,    -1,
      92,   284,   335,   594,   325,   442,   791,   487,   588,   488,
     821,    36,   624,   864,    -1,   449,    67,   282,    -1,   449,
      59,    67,   282,    -1,   449,   230,    67,   282,    -1,    -1,
      92,   594,   395,   867,    36,   624,   866,    -1,    92,   594,
     395,   185,   264,   149,   867,    36,   624,   866,    -1,   449,
     106,    -1,   449,   262,   106,    -1,    -1,   791,   584,   570,
     562,    -1,    19,    -1,    20,    -1,    21,    -1,    22,    -1,
      23,    -1,    24,    -1,    25,    -1,    26,    -1,    28,    -1,
      29,    -1,    30,    -1,    38,    -1,    39,    -1,    41,    -1,
      42,    -1,    43,    -1,    45,    -1,    46,    -1,    47,    -1,
      54,    -1,    55,    -1,    56,    -1,    57,    -1,    58,    -1,
      59,    -1,    62,    -1,    63,    -1,    66,    -1,    68,    -1,
      69,    -1,    70,    -1,    71,    -1,    76,    -1,    77,    -1,
      78,    -1,    79,    -1,    80,    -1,    82,    -1,    83,    -1,
      84,    -1,    86,    -1,    87,    -1,    88,    -1,    89,    -1,
      90,    -1,    91,    -1,    94,    -1,    95,    -1,    96,    -1,
     104,    -1,   105,    -1,   106,    -1,   107,    -1,   108,    -1,
     109,    -1,   110,    -1,   113,    -1,   115,    -1,   117,    -1,
     118,    -1,   119,    -1,   120,    -1,   121,    -1,   122,    -1,
     124,    -1,   125,    -1,   126,    -1,   127,    -1,   128,    -1,
     131,    -1,   132,    -1,   133,    -1,   134,    -1,   135,    -1,
     137,    -1,   138,    -1,   139,    -1,   141,    -1,   142,    -1,
     143,    -1,   145,    -1,   146,    -1,   147,    -1,   148,    -1,
     150,    -1,   151,    -1,   152,    -1,   153,    -1,   156,    -1,
     158,    -1,   159,    -1,   161,    -1,   163,    -1,   165,    -1,
     169,    -1,   170,    -1,   171,    -1,   173,    -1,   175,    -1,
     178,    -1,   180,    -1,   181,    -1,   182,    -1,   183,    -1,
     184,    -1,   185,    -1,   187,    -1,   188,    -1,   189,    -1,
     190,    -1,   192,    -1,   193,    -1,   194,    -1,   195,    -1,
     196,    -1,   197,    -1,   199,    -1,   202,    -1,   203,    -1,
     204,    -1,   205,    -1,   211,    -1,   214,    -1,   216,    -1,
     217,    -1,   218,    -1,   219,    -1,   220,    -1,   223,    -1,
     225,    -1,   228,    -1,   229,    -1,   230,    -1,   233,    -1,
     234,    -1,   235,    -1,   236,    -1,   237,    -1,   239,    -1,
     240,    -1,   241,    -1,   242,    -1,   243,    -1,   244,    -1,
     245,    -1,   246,    -1,   247,    -1,   248,    -1,   249,    -1,
     250,    -1,   251,    -1,   252,    -1,   253,    -1,   254,    -1,
     255,    -1,   256,    -1,   260,    -1,   261,    -1,   262,    -1,
     265,    -1,   266,    -1,   268,    -1,   271,    -1,   273,    -1,
     274,    -1,   275,    -1,   277,    -1,   278,    -1,   281,    -1,
     282,    -1,   283,    -1,   286,    -1,   289,    -1,   292,    -1,
     293,    -1,   294,    -1,   295,    -1,   296,    -1,   297,    -1,
     298,    -1,   299,    -1,   300,    -1,   301,    -1,   303,    -1,
     304,    -1,   306,    -1,   307,    -1,   309,    -1,   310,    -1,
     311,    -1,   313,    -1,   314,    -1,   315,    -1,   316,    -1,
     317,    -1,   318,    -1,   319,    -1,   320,    -1,   321,    -1,
     323,    -1,   324,    -1,   325,    -1,   326,    -1,   328,    -1,
     329,    -1,   330,    -1,   331,    -1,   332,    -1,   333,    -1,
     334,    -1,   335,    -1,   336,    -1,   337,    -1,   338,    -1,
     339,    -1,   341,    -1,   342,    -1,   344,    -1,   345,    -1,
     346,    -1,   348,    -1,   349,    -1,   350,    -1,   351,    -1,
     352,    -1,   353,    -1,   354,    -1,   355,    -1,   356,    -1,
     357,    -1,   358,    -1,   360,    -1,   361,    -1,   362,    -1,
     363,    -1,   364,    -1,   366,    -1,   368,    -1,   369,    -1,
     370,    -1,   372,    -1,   373,    -1,   375,    -1,   377,    -1,
     378,    -1,   379,    -1,   380,    -1,   381,    -1,   382,    -1,
     383,    -1,   384,    -1,   385,    -1,   386,    -1,   387,    -1,
     389,    -1,   391,    -1,   393,    -1,   394,    -1,   396,    -1,
     398,    -1,   399,    -1,   400,    -1,   401,    -1,   402,    -1,
     408,    -1,   409,    -1,   411,    -1,   414,    -1,   415,    -1,
     417,    -1,   418,    -1,   419,    -1,   420,    -1,   421,    -1,
     424,    -1,   425,    -1,   426,    -1,   427,    -1,   428,    -1,
     431,    -1,   432,    -1,   433,    -1,   434,    -1,   435,    -1,
     439,    -1,   441,    -1,   442,    -1,   443,    -1,   444,    -1,
     447,    -1,   450,    -1,   451,    -1,   452,    -1,   453,    -1,
     454,    -1,   455,    -1,   467,    -1,   468,    -1,   469,    -1,
     470,    -1,    48,    -1,    49,    -1,    51,    -1,    52,    -1,
      64,    -1,    65,    -1,    72,    -1,   111,    -1,   112,    -1,
     149,    -1,   154,    -1,   160,    -1,   177,    -1,   201,    -1,
     206,    -1,   207,    -1,   209,    -1,   238,    -1,   257,    -1,
     259,    -1,   263,    -1,   270,    -1,   272,    -1,   287,    -1,
     291,    -1,   305,    -1,   308,    -1,   322,    -1,   347,    -1,
     367,    -1,   374,    -1,   388,    -1,   390,    -1,   404,    -1,
     405,    -1,   410,    -1,   412,    -1,   416,    -1,   436,    -1,
     437,    -1,   456,    -1,   457,    -1,   458,    -1,   459,    -1,
     460,    -1,   461,    -1,   462,    -1,   463,    -1,   464,    -1,
     465,    -1,   466,    -1,    44,    -1,    50,    -1,    74,    -1,
      81,    -1,    93,    -1,   100,    -1,   166,    -1,   168,    -1,
     172,    -1,   186,    -1,   200,    -1,   212,    -1,   213,    -1,
     215,    -1,   224,    -1,   226,    -1,   238,    -1,   258,    -1,
     267,    -1,   288,    -1,   290,    -1,   343,    -1,   371,    -1,
     388,    -1,   397,    -1,   440,    -1,    44,    -1,    50,    -1,
      74,    -1,    81,    -1,    93,    -1,   100,    -1,   166,    -1,
     168,    -1,   172,    -1,   186,    -1,   200,    -1,   212,    -1,
     213,    -1,   215,    -1,   224,    -1,   226,    -1,   258,    -1,
     267,    -1,   288,    -1,   290,    -1,   343,    -1,   371,    -1,
     397,    -1,   416,    -1,   440,    -1,    48,    -1,    49,    -1,
      51,    -1,    52,    -1,    65,    -1,    64,    -1,    72,    -1,
     111,    -1,   112,    -1,   149,    -1,   154,    -1,   160,    -1,
     177,    -1,   201,    -1,   207,    -1,   209,    -1,   206,    -1,
     238,    -1,   257,    -1,   259,    -1,   263,    -1,   270,    -1,
     272,    -1,   287,    -1,   291,    -1,   305,    -1,   308,    -1,
     322,    -1,   347,    -1,   367,    -1,   374,    -1,   388,    -1,
     390,    -1,   404,    -1,   405,    -1,   410,    -1,   412,    -1,
     416,    -1,   436,    -1,   437,    -1,   456,    -1,   457,    -1,
     458,    -1,   459,    -1,   460,    -1,   461,    -1,   462,    -1,
     463,    -1,   464,    -1,   465,    -1,   466,    -1,    44,    -1,
      50,    -1,    74,    -1,    81,    -1,    93,    -1,   100,    -1,
     166,    -1,   168,    -1,   172,    -1,   186,    -1,   200,    -1,
     212,    -1,   213,    -1,   215,    -1,   224,    -1,   226,    -1,
     238,    -1,   258,    -1,   267,    -1,   288,    -1,   290,    -1,
     343,    -1,   371,    -1,   388,    -1,   397,    -1,   416,    -1,
     440,    -1,    27,    -1,    31,    -1,    32,    -1,    33,    -1,
      34,    -1,    35,    -1,    36,    -1,    37,    -1,    40,    -1,
      53,    -1,    60,    -1,    61,    -1,    67,    -1,    73,    -1,
      75,    -1,    85,    -1,    92,    -1,    97,    -1,    98,    -1,
      99,    -1,   101,    -1,   102,    -1,   103,    -1,   114,    -1,
     116,    -1,   123,    -1,   129,    -1,   130,    -1,   136,    -1,
     140,    -1,   144,    -1,   155,    -1,   157,    -1,   162,    -1,
     164,    -1,   167,    -1,   174,    -1,   176,    -1,   179,    -1,
     191,    -1,   198,    -1,   208,    -1,   210,    -1,   221,    -1,
     222,    -1,   227,    -1,   231,    -1,   232,    -1,   264,    -1,
     269,    -1,   276,    -1,   279,    -1,   280,    -1,   284,    -1,
     285,    -1,   302,    -1,   312,    -1,   327,    -1,   340,    -1,
     359,    -1,   365,    -1,   376,    -1,   392,    -1,   395,    -1,
     403,    -1,   406,    -1,   407,    -1,   413,    -1,   422,    -1,
     423,    -1,   429,    -1,   430,    -1,   438,    -1,   445,    -1,
     446,    -1,   448,    -1,   449,    -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,   464,   464,   480,   492,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   536,
       9,    18,    27,    36,    45,    54,    63,    72,    85,    87,
      93,    94,    99,   103,   107,   118,   126,   130,   139,   148,
     157,   166,   175,   184,   192,   200,   209,   218,   227,   236,
     253,   262,   271,   280,   290,   303,   318,   327,   335,   350,
     358,   368,   378,   385,   392,   400,   407,   418,   419,   424,
     428,   433,   438,   446,   447,   452,   456,   457,   458,     7,
      13,    19,    25,     7,    17,    18,    21,    23,     6,    15,
      25,    35,    45,    55,    65,    75,    85,    95,   106,   117,
     127,   140,   141,     8,    21,    27,    34,    40,    47,    57,
      61,    70,    79,    88,    95,    96,   101,   113,   118,   143,
     153,   163,   169,   180,   191,   206,   207,   213,   214,   219,
     220,   226,   227,   231,   232,   237,   239,   245,   246,   250,
     251,   256,     7,    14,    22,     9,    19,    32,    33,     7,
      14,    31,    51,    52,     9,    17,    29,    30,    34,    35,
      36,    41,    42,    43,    48,    52,    56,    60,    64,    68,
      72,    76,    80,    84,    88,    92,    97,   101,   105,   112,
     113,   117,   118,   119,     2,     9,    15,    21,    28,    35,
      45,    46,    47,     7,    21,    36,    56,    57,    84,    85,
      86,    87,    88,    89,    93,    94,    99,   104,   105,   106,
     107,   108,   113,   120,   121,   122,   139,   146,   153,   163,
     173,   185,   194,   203,   222,   229,   234,   236,   238,   240,
     243,   248,   249,   253,   254,   255,   256,   261,   265,   266,
     271,   278,   283,   284,   285,   286,   287,   288,   289,   290,
     296,   297,   301,   306,   313,   320,   327,   339,   340,   341,
     342,   346,   351,   352,   353,   358,   363,   364,   365,   366,
     367,   368,   373,   396,   400,   407,   408,   412,   416,   417,
     418,   422,   426,   434,   435,   440,   441,   445,   453,   454,
     459,   460,   464,   469,   473,   477,   482,   490,   491,   495,
     496,   502,   513,   526,   540,   554,   568,   582,   605,   609,
     616,   620,   628,   633,   640,   650,   651,   652,   653,   654,
     661,   668,   669,   674,   675,     9,    19,    29,    39,    49,
      59,    69,    79,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   112,   113,
     114,   115,   116,   117,   118,   123,   124,   129,   130,   131,
     136,   137,   138,   141,   142,     7,    18,    19,    23,    27,
       7,     1,    30,    53,    54,    59,    63,    68,    72,    80,
      81,    85,    86,    91,    92,    96,    97,   102,   103,   104,
     105,   106,   111,   119,   123,   128,   129,   134,   138,   143,
     147,   151,   155,   159,   163,   167,   171,   175,   179,   183,
     187,   191,   195,   203,   209,   210,   211,   216,   220,    47,
      48,    52,    53,    68,    69,    76,    84,    92,   100,   108,
     116,   127,   128,   155,   170,   186,   187,   206,   210,   214,
     231,   238,   245,   255,   256,   259,   271,   282,   290,   295,
     300,   305,   310,   318,   326,   331,   336,   343,   344,   348,
     349,   350,   357,   358,   362,   363,   367,   368,   372,   376,
     377,   380,   389,   400,   401,   402,   405,   406,   407,   411,
     412,   413,   414,   418,   419,   423,   425,   441,   443,   448,
     451,   459,   463,   467,   471,   475,   479,   486,   491,   498,
     499,   503,   507,   511,   515,   522,   529,   530,   535,   536,
     540,   541,   549,   569,   570,   572,   577,   578,   582,   583,
     586,   587,   612,   613,   617,   618,   622,   623,   627,   640,
     641,   645,   646,   650,   651,   655,   656,   660,   671,   672,
     673,   674,   678,   679,   684,   685,   686,   695,   701,   719,
     720,   724,   725,   731,   737,   745,   753,   762,   771,   775,
     801,   805,   818,   832,   847,   859,   875,   881,   886,   892,
     899,   900,   908,   912,   916,   922,   929,   934,   935,   936,
     937,   941,   942,   954,   955,   960,   967,   974,   981,  1013,
    1024,  1037,  1042,  1043,  1046,  1047,  1050,  1051,  1056,  1057,
    1062,  1066,  1072,  1093,  1101,  1114,  1117,  1121,  1121,  1123,
    1128,  1135,  1140,  1146,  1151,  1157,  1163,  1172,  1174,  1177,
    1181,  1182,  1183,  1184,  1185,  1186,  1191,  1211,  1212,  1213,
    1214,  1225,  1239,  1240,  1246,  1251,  1256,  1261,  1266,  1271,
    1276,  1281,  1287,  1293,  1299,  1306,  1328,  1337,  1341,  1349,
    1353,  1361,  1373,  1394,  1398,  1404,  1408,  1421,  1429,  1439,
    1441,  1443,  1445,  1447,  1449,  1454,  1455,  1462,  1471,  1479,
    1488,  1499,  1507,  1508,  1509,  1513,  1513,  1516,  1516,  1519,
    1519,  1522,  1522,  1525,  1525,  1528,  1528,  1531,  1531,  1534,
    1534,  1537,  1539,  1541,  1543,  1545,  1547,  1549,  1551,  1553,
    1558,  1563,  1569,  1576,  1581,  1587,  1593,  1624,  1626,  1628,
    1636,  1651,  1653,  1655,  1657,  1659,  1661,  1663,  1665,  1667,
    1669,  1671,  1673,  1675,  1677,  1680,  1682,  1684,  1687,  1689,
    1691,  1693,  1696,  1701,  1706,  1713,  1718,  1725,  1730,  1738,
    1743,  1752,  1760,  1768,  1776,  1794,  1802,  1810,  1818,  1826,
    1834,  1838,  1842,  1846,  1854,  1862,  1878,  1886,  1894,  1902,
    1910,  1918,  1926,  1930,  1934,  1938,  1942,  1950,  1958,  1966,
    1974,  1994,  2016,  2027,  2034,  2048,  2064,  2066,  2068,  2070,
    2072,  2074,  2076,  2078,  2080,  2082,  2084,  2086,  2088,  2090,
    2092,  2094,  2096,  2098,  2100,  2102,  2106,  2110,  2114,  2128,
    2129,  2130,  2137,  2149,  2164,  2176,  2178,  2190,  2201,  2225,
    2238,  2242,  2248,  2255,  2262,  2272,  2279,  2307,  2342,  2353,
    2354,  2361,  2367,  2371,  2375,  2379,  2383,  2387,  2391,  2395,
    2399,  2403,  2407,  2411,  2415,  2419,  2423,  2427,  2429,  2431,
    2435,  2444,  2449,  2456,  2471,  2478,  2482,  2486,  2490,  2494,
    2508,  2509,  2513,  2514,  2522,  2523,  2527,  2528,  2533,  2541,
    2543,  2557,  2560,  2587,  2588,  2591,  2592,  2603,  2609,  2616,
    2625,  2642,  2687,  2695,  2703,  2711,  2719,  2740,  2741,  2744,
    2745,  2749,  2759,  2760,  2762,  2763,  2764,  2767,  2768,  2771,
    2772,  2773,  2774,  2775,  2776,  2777,  2778,  2779,  2780,  2781,
    2782,  2785,  2787,  2792,  2794,  2799,  2801,  2803,  2805,  2807,
    2809,  2811,  2813,  2827,  2829,  2833,  2837,  2844,  2849,  2856,
    2860,  2866,  2870,  2879,  2890,  2891,  2895,  2899,  2906,  2907,
    2908,  2909,  2910,  2911,  2912,  2913,  2914,  2915,  2925,  2929,
    2936,  2943,  2944,  2960,  2964,  2969,  2973,  2988,  2993,  2997,
    3000,  3003,  3004,  3005,  3008,  3015,  3025,  3039,  3040,  3044,
    3055,  3056,  3059,  3060,  3063,  3067,  3074,  3078,  3086,  3097,
    3098,  3102,  3103,  3107,  3108,  3111,  3112,  3122,  3123,  3127,
    3128,  3131,  3147,  3155,  3163,  3178,  3196,  3197,  3200,  3201,
    3204,  3208,  3209,  3212,  3213,  3214,  3224,  3225,  3236,  3240,
    3267,  3269,  3274,  3276,  3286,  3289,  3300,  3304,  3308,  3320,
    3324,  3333,  3340,  3372,  3376,  3380,  3384,  3388,  3392,  3396,
    3402,  3403,  3419,  3420,  3421,  3424,  3425,  3431,  3432,  3433,
    3436,  3437,  3438,  3441,  3442,  3443,  3446,  3447,  3450,  3452,
    3457,  3458,  3461,  3469,  3470,  3471,  3472,  3475,  3476,     7,
      18,    19,    23,    24,    25,    26,     7,    16,    34,    41,
      46,    47,    48,    49,     8,    33,    62,    66,    67,    72,
      73,    78,    79,    83,    84,    89,    90,     7,    16,    25,
      34,    43,    52,     5,    11,     7,    20,     9,    16,    26,
      33,    44,    45,    50,    51,    52,    57,    58,    59,    60,
      61,    65,    66,    67,    72,    73,    78,    82,    90,    91,
      96,    97,    98,   104,   109,   117,   118,    10,    16,    22,
      28,    38,    39,    47,    58,    70,    78,    86,    93,   103,
     105,   111,   115,   119,   134,   141,   142,   143,   147,   148,
       7,    16,     8,    22,    36,    48,    56,    70,    71,    72,
      73,    74,    87,    88,    93,    94,    98,    99,     7,    21,
      25,    32,    43,    44,    50,    51,     9,    19,     2,     7,
      14,    24,    25,    32,     3,    10,    17,    24,    31,    38,
      45,    55,    55,    57,    58,     6,     8,    21,    34,    52,
      74,    75,    76,    77,    11,    24,    41,    42,    43,    48,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    63,    63,    63,    63,    63,    63,    63,    63,    63,
      63,    63,    63,    63,    63,    63,    63,    63,    63,    63,
      63,    63,    63,    63,    63,    63,    63,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    65,    65,    65,    65,    65,    65,    65,    65,
      65,    65,    65,    65,    65,    65,    65,    65,    65,    65,
      65,    65,    65,    65,    65,    65,    65,    65,    65,    65,
      65,    65,    65,    65,    65,    65,    65,    65,    65,    65,
      65,    65,    65,    65,    65,    65,    65,    65,    65,    65,
      65,    65,    65,    66,    66,    66,    66,    66,    66,    66,
      66,    66,    66,    66,    66,    66,    66,    66,    66,    66,
      66,    66,    66,    66,    66,    66,    66,    66,    66,    66,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "IDENT", "FCONST", "SCONST", "BCONST",
  "XCONST", "Op", "ICONST", "PARAM", "TYPECAST", "DOT_DOT", "COLON_EQUALS",
  "EQUALS_GREATER", "LAMBDA_ARROW", "LESS_EQUALS", "GREATER_EQUALS",
  "NOT_EQUALS", "ABORT_P", "ABSOLUTE_P", "ACCESS", "ACTION", "ADD_P",
  "ADMIN", "AFTER", "AGGREGATE", "ALL", "ALSO", "ALTER", "ALWAYS",
  "ANALYSE", "ANALYZE", "AND", "ANY", "ARRAY", "AS", "ASC_P", "ASSERTION",
  "ASSIGNMENT", "ASYMMETRIC", "AT", "ATTACH", "ATTRIBUTE", "AUTHORIZATION",
  "BACKWARD", "BEFORE", "BEGIN_P", "BETWEEN", "BIGINT", "BINARY", "BIT",
  "BOOLEAN_P", "BOTH", "BY", "CACHE", "CALL_P", "CALLED", "CASCADE",
  "CASCADED", "CASE", "CAST", "CATALOG_P", "CHAIN", "CHAR_P", "CHARACTER",
  "CHARACTERISTICS", "CHECK_P", "CHECKPOINT", "CLASS", "CLOSE", "CLUSTER",
  "COALESCE", "COLLATE", "COLLATION", "COLUMN", "COLUMNS", "COMMENT",
  "COMMENTS", "COMMIT", "COMMITTED", "CONCURRENTLY", "CONFIGURATION",
  "CONFLICT", "CONNECTION", "CONSTRAINT", "CONSTRAINTS", "CONTENT_P",
  "CONTINUE_P", "CONVERSION_P", "COPY", "COST", "CREATE_P", "CROSS", "CSV",
  "CUBE", "CURRENT_P", "CURRENT_CATALOG", "CURRENT_DATE", "CURRENT_ROLE",
  "CURRENT_SCHEMA", "CURRENT_TIME", "CURRENT_TIMESTAMP", "CURRENT_USER",
  "CURSOR", "CYCLE", "DATA_P", "DATABASE", "DAY_P", "DAYS_P", "DEALLOCATE",
  "DEC", "DECIMAL_P", "DECLARE", "DEFAULT", "DEFAULTS", "DEFERRABLE",
  "DEFERRED", "DEFINER", "DELETE_P", "DELIMITER", "DELIMITERS", "DEPENDS",
  "DESC_P", "DESCRIBE", "DETACH", "DICTIONARY", "DISABLE_P", "DISCARD",
  "DISTINCT", "DO", "DOCUMENT_P", "DOMAIN_P", "DOUBLE_P", "DROP", "EACH",
  "ELSE", "ENABLE_P", "ENCODING", "ENCRYPTED", "END_P", "ENUM_P", "ESCAPE",
  "EVENT", "EXCEPT", "EXCLUDE", "EXCLUDING", "EXCLUSIVE", "EXECUTE",
  "EXISTS", "EXPLAIN", "EXPORT_P", "EXTENSION", "EXTERNAL", "EXTRACT",
  "FALSE_P", "FAMILY", "FETCH", "FILTER", "FIRST_P", "FLOAT_P",
  "FOLLOWING", "FOR", "FORCE", "FOREIGN", "FORWARD", "FREEZE", "FROM",
  "FULL", "FUNCTION", "FUNCTIONS", "GENERATED", "GLOB", "GLOBAL", "GRANT",
  "GRANTED", "GROUP_P", "GROUPING", "HANDLER", "HAVING", "HEADER_P",
  "HOLD", "HOUR_P", "HOURS_P", "IDENTITY_P", "IF_P", "ILIKE", "IMMEDIATE",
  "IMMUTABLE", "IMPLICIT_P", "IMPORT_P", "IN_P", "INCLUDING", "INCREMENT",
  "INDEX", "INDEXES", "INHERIT", "INHERITS", "INITIALLY", "INLINE_P",
  "INNER_P", "INOUT", "INPUT_P", "INSENSITIVE", "INSERT", "INSTEAD",
  "INT_P", "INTEGER", "INTERSECT", "INTERVAL", "INTO", "INVOKER", "IS",
  "ISNULL", "ISOLATION", "JOIN", "KEY", "LABEL", "LANGUAGE", "LARGE_P",
  "LAST_P", "LATERAL_P", "LEADING", "LEAKPROOF", "LEFT", "LEVEL", "LIKE",
  "LIMIT", "LISTEN", "LOAD", "LOCAL", "LOCALTIME", "LOCALTIMESTAMP",
  "LOCATION", "LOCK_P", "LOCKED", "LOGGED", "MACRO", "MAP", "MAPPING",
  "MATCH", "MATERIALIZED", "MAXVALUE", "METHOD", "MICROSECOND_P",
  "MICROSECONDS_P", "MILLISECOND_P", "MILLISECONDS_P", "MINUTE_P",
  "MINUTES_P", "MINVALUE", "MODE", "MONTH_P", "MONTHS_P", "MOVE", "NAME_P",
  "NAMES", "NATIONAL", "NATURAL", "NCHAR", "NEW", "NEXT", "NO", "NONE",
  "NOT", "NOTHING", "NOTIFY", "NOTNULL", "NOWAIT", "NULL_P", "NULLIF",
  "NULLS_P", "NUMERIC", "OBJECT_P", "OF", "OFF", "OFFSET", "OIDS", "OLD",
  "ON", "ONLY", "OPERATOR", "OPTION", "OPTIONS", "OR", "ORDER",
  "ORDINALITY", "OUT_P", "OUTER_P", "OVER", "OVERLAPS", "OVERLAY",
  "OVERRIDING", "OWNED", "OWNER", "PARALLEL", "PARSER", "PARTIAL",
  "PARTITION", "PASSING", "PASSWORD", "PERCENT", "PLACING", "PLANS",
  "POLICY", "POSITION", "PRAGMA_P", "PRECEDING", "PRECISION", "PREPARE",
  "PREPARED", "PRESERVE", "PRIMARY", "PRIOR", "PRIVILEGES", "PROCEDURAL",
  "PROCEDURE", "PROGRAM", "PUBLICATION", "QUOTE", "RANGE", "READ_P",
  "REAL", "REASSIGN", "RECHECK", "RECURSIVE", "REF", "REFERENCES",
  "REFERENCING", "REFRESH", "REINDEX", "RELATIVE_P", "RELEASE", "RENAME",
  "REPEATABLE", "REPLACE", "REPLICA", "RESET", "RESTART", "RESTRICT",
  "RETURNING", "RETURNS", "REVOKE", "RIGHT", "ROLE", "ROLLBACK", "ROLLUP",
  "ROW", "ROWS", "RULE", "SAMPLE", "SAVEPOINT", "SCHEMA", "SCHEMAS",
  "SCROLL", "SEARCH", "SECOND_P", "SECONDS_P", "SECURITY", "SELECT",
  "SEQUENCE", "SEQUENCES", "SERIALIZABLE", "SERVER", "SESSION",
  "SESSION_USER", "SET", "SETOF", "SETS", "SHARE", "SHOW", "SIMILAR",
  "SIMPLE", "SKIP", "SMALLINT", "SNAPSHOT", "SOME", "SQL_P", "STABLE",
  "STANDALONE_P", "START", "STATEMENT", "STATISTICS", "STDIN", "STDOUT",
  "STORAGE", "STRICT_P", "STRIP_P", "STRUCT", "SUBSCRIPTION", "SUBSTRING",
  "SUMMARIZE", "SYMMETRIC", "SYSID", "SYSTEM_P", "TABLE", "TABLES",
  "TABLESAMPLE", "TABLESPACE", "TEMP", "TEMPLATE", "TEMPORARY", "TEXT_P",
  "THEN", "TIME", "TIMESTAMP", "TO", "TRAILING", "TRANSACTION",
  "TRANSFORM", "TREAT", "TRIGGER", "TRIM", "TRUE_P", "TRUNCATE", "TRUSTED",
  "TRY_CAST", "TYPE_P", "TYPES_P", "UNBOUNDED", "UNCOMMITTED",
  "UNENCRYPTED", "UNION", "UNIQUE", "UNKNOWN", "UNLISTEN", "UNLOGGED",
  "UNTIL", "UPDATE", "USER", "USING", "VACUUM", "VALID", "VALIDATE",
  "VALIDATOR", "VALUE_P", "VALUES", "VARCHAR", "VARIADIC", "VARYING",
  "VERBOSE", "VERSION_P", "VIEW", "VIEWS", "VOLATILE", "WHEN", "WHERE",
  "WHITESPACE_P", "WINDOW", "WITH", "WITHIN", "WITHOUT", "WORK", "WRAPPER",
  "WRITE_P", "XML_P", "XMLATTRIBUTES", "XMLCONCAT", "XMLELEMENT",
  "XMLEXISTS", "XMLFOREST", "XMLNAMESPACES", "XMLPARSE", "XMLPI",
  "XMLROOT", "XMLSERIALIZE", "XMLTABLE", "YEAR_P", "YEARS_P", "YES_P",
  "ZONE", "NOT_LA", "NULLS_LA", "WITH_LA", "'<'", "'>'", "'='",
  "POSTFIXOP", "'+'", "'-'", "'*'", "'/'", "'%'", "'^'", "UMINUS", "'['",
  "']'", "'('", "')'", "'.'", "';'", "','", "'{'", "'}'", "'#'", "'?'",
  "':'", "$accept", "stmtblock", "stmtmulti", "stmt", "AlterTableStmt",
  "alter_identity_column_option_list", "alter_column_default",
  "alter_identity_column_option", "alter_generic_option_list",
  "alter_table_cmd", "alter_using", "alter_generic_option_elem",
  "alter_table_cmds", "alter_generic_options", "opt_set_data",
  "DeallocateStmt", "CreateEnumStmt", "opt_enum_val_list", "enum_val_list",
  "RenameStmt", "opt_column", "InsertStmt", "insert_rest", "insert_target",
  "opt_conf_expr", "opt_with_clause", "insert_column_item", "set_clause",
  "opt_on_conflict", "index_elem", "returning_clause", "override_kind",
  "set_target_list", "opt_collate", "opt_class", "insert_column_list",
  "set_clause_list", "index_params", "set_target", "PragmaStmt",
  "CreateSeqStmt", "OptSeqOptList", "ExecuteStmt", "execute_param_clause",
  "AlterSeqStmt", "SeqOptList", "opt_with", "NumericOnly", "SeqOptElem",
  "opt_by", "SignedIconst", "TransactionStmt", "opt_transaction",
  "CreateStmt", "ConstraintAttributeSpec", "def_arg",
  "OptParenthesizedSeqOptList", "generic_option_arg", "key_action",
  "ColConstraint", "ColConstraintElem", "generic_option_elem",
  "key_update", "key_actions", "create_generic_options", "OnCommitOption",
  "reloptions", "opt_no_inherit", "TableConstraint", "TableLikeOption",
  "reloption_list", "ExistingIndex", "ConstraintAttr", "OptWith",
  "definition", "TableLikeOptionList", "generic_option_name",
  "ConstraintAttributeElem", "columnDef", "generic_option_list",
  "def_list", "index_name", "TableElement", "def_elem", "opt_definition",
  "OptTableElementList", "columnElem", "opt_column_list", "ColQualList",
  "key_delete", "reloption_elem", "columnList", "func_type",
  "ConstraintElem", "TableElementList", "key_match", "TableLikeClause",
  "OptTemp", "generated_when", "DropStmt", "drop_type_any_name",
  "drop_type_name", "any_name_list", "opt_drop_behavior",
  "drop_type_name_on_any_name", "type_name_list", "CreateFunctionStmt",
  "macro_alias", "param_list", "UpdateStmt", "CopyStmt", "copy_from",
  "copy_delimiter", "copy_generic_opt_arg_list", "opt_using", "opt_as",
  "opt_program", "copy_options", "copy_generic_opt_arg",
  "copy_generic_opt_elem", "opt_oids", "copy_opt_list", "opt_binary",
  "copy_opt_item", "copy_generic_opt_arg_list_item", "copy_file_name",
  "copy_generic_opt_list", "SelectStmt", "select_with_parens",
  "select_no_parens", "select_clause", "simple_select", "with_clause",
  "cte_list", "common_table_expr", "into_clause", "OptTempTableName",
  "opt_table", "all_or_distinct", "distinct_clause", "opt_all_clause",
  "opt_sort_clause", "sort_clause", "sortby_list", "sortby",
  "opt_asc_desc", "opt_nulls_order", "select_limit", "opt_select_limit",
  "limit_clause", "offset_clause", "sample_count", "sample_clause",
  "opt_sample_func", "tablesample_entry", "tablesample_clause",
  "opt_tablesample_clause", "opt_repeatable_clause", "select_limit_value",
  "select_offset_value", "select_fetch_first_value", "I_or_F_const",
  "row_or_rows", "first_or_next", "group_clause", "group_by_list",
  "group_by_item", "empty_grouping_set", "having_clause",
  "for_locking_clause", "opt_for_locking_clause", "for_locking_items",
  "for_locking_item", "for_locking_strength", "locked_rels_list",
  "opt_nowait_or_skip", "values_clause", "from_clause", "from_list",
  "table_ref", "joined_table", "alias_clause", "opt_alias_clause",
  "func_alias_clause", "join_type", "join_outer", "join_qual",
  "relation_expr", "func_table", "rowsfrom_item", "rowsfrom_list",
  "opt_col_def_list", "opt_ordinality", "where_clause",
  "TableFuncElementList", "TableFuncElement", "opt_collate_clause",
  "colid_type_list", "RowOrStruct", "Typename", "opt_array_bounds",
  "SimpleTypename", "ConstTypename", "GenericType", "opt_type_modifiers",
  "Numeric", "opt_float", "Bit", "ConstBit", "BitWithLength",
  "BitWithoutLength", "Character", "ConstCharacter", "CharacterWithLength",
  "CharacterWithoutLength", "character", "opt_varying", "ConstDatetime",
  "ConstInterval", "opt_timezone", "year_keyword", "month_keyword",
  "day_keyword", "hour_keyword", "minute_keyword", "second_keyword",
  "millisecond_keyword", "microsecond_keyword", "opt_interval", "a_expr",
  "b_expr", "c_expr", "func_application", "func_expr",
  "func_expr_windowless", "func_expr_common_subexpr",
  "within_group_clause", "filter_clause", "window_clause",
  "window_definition_list", "window_definition", "over_clause",
  "window_specification", "opt_existing_window_name",
  "opt_partition_clause", "opt_frame_clause", "frame_extent",
  "frame_bound", "qualified_row", "row", "dict_arg", "dict_arguments",
  "sub_type", "all_Op", "MathOp", "qual_Op", "qual_all_Op", "subquery_Op",
  "any_operator", "expr_list", "opt_expr_list", "func_arg_list",
  "func_arg_expr", "type_list", "extract_list", "extract_arg",
  "overlay_list", "overlay_placing", "position_list", "substr_list",
  "substr_from", "substr_for", "trim_list", "in_expr", "case_expr",
  "when_clause_list", "when_clause", "case_default", "case_arg",
  "columnref", "indirection_el", "opt_slice_bound", "indirection",
  "opt_indirection", "opt_asymmetric", "opt_target_list", "target_list",
  "target_el", "except_list", "opt_except_list", "replace_list_el",
  "replace_list", "opt_replace_list", "qualified_name_list",
  "qualified_name", "name_list", "name", "attr_name", "func_name",
  "AexprConst", "Iconst", "Sconst", "ColId", "ColIdOrString",
  "type_function_name", "function_name_token", "type_name_token",
  "any_name", "attrs", "opt_name_list", "param_name", "ColLabel",
  "ColLabelOrString", "PrepareStmt", "prep_type_clause", "PreparableStmt",
  "CreateSchemaStmt", "OptSchemaEltList", "schema_stmt", "IndexStmt",
  "access_method", "access_method_clause", "opt_concurrently",
  "opt_index_name", "opt_reloptions", "opt_unique",
  "AlterObjectSchemaStmt", "CheckPointStmt", "ExportStmt", "ImportStmt",
  "ExplainStmt", "opt_verbose", "explain_option_arg", "ExplainableStmt",
  "NonReservedWord", "NonReservedWord_or_Sconst", "explain_option_list",
  "analyze_keyword", "opt_boolean_or_string", "explain_option_elem",
  "explain_option_name", "VariableSetStmt", "set_rest", "generic_set",
  "var_value", "zone_value", "var_list", "LoadStmt", "file_name",
  "VacuumStmt", "vacuum_option_elem", "opt_full", "vacuum_option_list",
  "opt_freeze", "DeleteStmt", "relation_expr_opt_alias",
  "where_or_current_clause", "using_clause", "AnalyzeStmt",
  "VariableResetStmt", "generic_reset", "reset_rest", "VariableShowStmt",
  "show_or_describe", "var_name", "CallStmt", "ViewStmt",
  "opt_check_option", "CreateAsStmt", "opt_with_data", "create_as_target",
  "unreserved_keyword", "col_name_keyword", "func_name_keyword",
  "type_name_keyword", "other_keyword", "type_func_name_keyword",
  "reserved_keyword", 0
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,    60,    62,    61,   729,    43,    45,
      42,    47,    37,    94,   730,    91,    93,    40,    41,    46,
      59,    44,   123,   125,    35,    63,    58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   497,   498,   499,   499,   500,   500,   500,   500,   500,
     500,   500,   500,   500,   500,   500,   500,   500,   500,   500,
     500,   500,   500,   500,   500,   500,   500,   500,   500,   500,
     500,   500,   500,   500,   500,   500,   500,   500,   500,   500,
     501,   501,   501,   501,   501,   501,   501,   501,   502,   502,
     503,   503,   504,   504,   504,   504,   505,   505,   506,   506,
     506,   506,   506,   506,   506,   506,   506,   506,   506,   506,
     506,   506,   506,   506,   506,   506,   506,   506,   506,   506,
     506,   506,   506,   506,   506,   506,   506,   507,   507,   508,
     508,   508,   508,   509,   509,   510,   511,   511,   511,   512,
     512,   512,   512,   513,   514,   514,   515,   515,   516,   516,
     516,   516,   516,   516,   516,   516,   516,   516,   516,   516,
     516,   517,   517,   518,   519,   519,   519,   519,   519,   520,
     520,   521,   521,   521,   522,   522,   523,   524,   524,   525,
     525,   525,   526,   526,   526,   527,   527,   528,   528,   529,
     529,   530,   530,   531,   531,   532,   532,   533,   533,   534,
     534,   535,   536,   536,   536,   537,   537,   538,   538,   539,
     539,   539,   540,   540,   541,   541,   542,   542,   543,   543,
     543,   544,   544,   544,   544,   545,   545,   545,   545,   545,
     545,   545,   545,   545,   545,   545,   545,   545,   545,   546,
     546,   547,   547,   547,   548,   548,   548,   548,   548,   548,
     549,   549,   549,   550,   550,   550,   551,   551,   552,   552,
     552,   552,   552,   552,   553,   553,   554,   555,   555,   555,
     555,   555,   556,   556,   556,   556,   557,   557,   557,   557,
     557,   557,   557,   557,   558,   559,   560,   560,   560,   560,
     560,   561,   561,   562,   562,   562,   562,   563,   564,   564,
     565,   565,   566,   566,   566,   566,   566,   566,   566,   566,
     567,   567,   568,   569,   569,   569,   569,   570,   570,   570,
     570,   571,   572,   572,   572,   573,   574,   574,   574,   574,
     574,   574,   575,   576,   576,   577,   577,   578,   579,   579,
     579,   580,   580,   581,   581,   582,   582,   583,   584,   584,
     585,   585,   586,   587,   587,   587,   587,   588,   588,   589,
     589,   589,   590,   590,   590,   590,   590,   590,   591,   591,
     592,   592,   592,   592,   593,   594,   594,   594,   594,   594,
     594,   594,   594,   595,   595,   596,   596,   596,   596,   596,
     596,   596,   596,   597,   597,   597,   597,   597,   597,   597,
     597,   597,   597,   597,   597,   597,   597,   597,   598,   598,
     598,   598,   598,   598,   598,   599,   599,   600,   600,   600,
     601,   601,   601,   602,   602,   603,   604,   604,   605,   605,
     606,   607,   607,   608,   608,   609,   609,   610,   610,   611,
     611,   612,   612,   613,   613,   614,   614,   615,   615,   615,
     615,   615,   616,   617,   617,   618,   618,   619,   619,   620,
     620,   620,   620,   620,   620,   620,   620,   620,   620,   620,
     620,   620,   620,   621,   622,   622,   622,   623,   623,   624,
     624,   625,   625,   626,   626,   626,   626,   626,   626,   626,
     626,   627,   627,   628,   628,   628,   628,   628,   628,   628,
     629,   629,   629,   630,   630,   631,   632,   632,   633,   633,
     633,   633,   633,   633,   633,   633,   633,   634,   634,   635,
     635,   635,   636,   636,   637,   637,   638,   638,   639,   640,
     640,   641,   641,   642,   642,   642,   643,   643,   643,   644,
     644,   644,   644,   645,   645,   646,   646,   646,   646,   647,
     647,   648,   648,   648,   648,   648,   648,   649,   649,   650,
     650,   651,   651,   651,   651,   652,   653,   653,   654,   654,
     655,   655,   656,   657,   657,   657,   658,   658,   659,   659,
     660,   660,   661,   661,   662,   662,   663,   663,   664,   665,
     665,   666,   666,   667,   667,   668,   668,   669,   670,   670,
     670,   670,   671,   671,   672,   672,   672,   673,   673,   674,
     674,   675,   675,   676,   676,   676,   676,   676,   676,   676,
     677,   677,   677,   677,   677,   677,   678,   678,   678,   678,
     679,   679,   680,   680,   680,   680,   680,   681,   681,   681,
     681,   682,   682,   683,   683,   684,   684,   684,   684,   685,
     685,   686,   687,   687,   688,   688,   689,   689,   690,   690,
     691,   691,   692,   693,   693,   694,   694,   695,   695,   696,
     696,   696,   696,   696,   696,   696,   696,   697,   697,   697,
     698,   698,   698,   698,   698,   698,   698,   699,   699,   699,
     699,   700,   701,   701,   702,   702,   702,   702,   702,   702,
     702,   702,   702,   702,   702,   703,   703,   704,   704,   705,
     705,   706,   707,   708,   708,   709,   709,   710,   711,   712,
     712,   712,   712,   712,   712,   713,   713,   714,   714,   714,
     714,   715,   716,   716,   716,   717,   717,   718,   718,   719,
     719,   720,   720,   721,   721,   722,   722,   723,   723,   724,
     724,   725,   725,   725,   725,   725,   725,   725,   725,   725,
     725,   725,   725,   725,   725,   725,   725,   726,   726,   726,
     726,   726,   726,   726,   726,   726,   726,   726,   726,   726,
     726,   726,   726,   726,   726,   726,   726,   726,   726,   726,
     726,   726,   726,   726,   726,   726,   726,   726,   726,   726,
     726,   726,   726,   726,   726,   726,   726,   726,   726,   726,
     726,   726,   726,   726,   726,   726,   726,   726,   726,   726,
     726,   726,   726,   726,   726,   726,   726,   726,   726,   726,
     726,   726,   726,   726,   726,   726,   727,   727,   727,   727,
     727,   727,   727,   727,   727,   727,   727,   727,   727,   727,
     727,   727,   727,   727,   727,   727,   727,   727,   727,   728,
     728,   728,   728,   728,   728,   728,   728,   728,   728,   728,
     729,   729,   729,   729,   729,   729,   729,   730,   730,   731,
     731,   732,   732,   732,   732,   732,   732,   732,   732,   732,
     732,   732,   732,   732,   732,   732,   732,   732,   732,   732,
     732,   732,   732,   732,   732,   732,   732,   732,   732,   732,
     733,   733,   734,   734,   735,   735,   736,   736,   737,   738,
     738,   738,   739,   740,   740,   741,   741,   742,   742,   742,
     743,   743,   744,   744,   744,   744,   744,   745,   745,   746,
     746,   747,   748,   748,   749,   749,   749,   750,   750,   751,
     751,   751,   751,   751,   751,   751,   751,   751,   751,   751,
     751,   752,   752,   753,   753,   754,   754,   754,   754,   754,
     754,   754,   754,   755,   755,   756,   756,   757,   757,   758,
     758,   759,   759,   759,   760,   760,   761,   761,   762,   762,
     762,   762,   762,   762,   762,   762,   762,   762,   763,   763,
     764,   765,   765,   766,   766,   766,   766,   766,   766,   767,
     768,   769,   769,   769,   770,   770,   771,   772,   772,   773,
     774,   774,   775,   775,   776,   776,   777,   777,   777,   778,
     778,   779,   779,   780,   780,   781,   781,   782,   782,   783,
     783,   784,   784,   784,   784,   784,   785,   785,   786,   786,
     787,   788,   788,   789,   789,   789,   790,   790,   791,   791,
     792,   792,   793,   794,   795,   795,   796,   796,   796,   796,
     796,   796,   796,   796,   796,   796,   796,   796,   796,   796,
     797,   798,   799,   799,   799,   800,   800,   801,   801,   801,
     802,   802,   802,   803,   803,   803,   804,   804,   805,   805,
     806,   806,   807,   808,   808,   808,   808,   809,   809,   810,
     811,   811,   812,   812,   812,   812,   813,   813,   814,   814,
     815,   815,   815,   815,   816,   816,   817,   818,   818,   819,
     819,   820,   820,   821,   821,   822,   822,   823,   823,   823,
     823,   823,   823,   824,   824,   825,   826,   827,   827,   827,
     827,   828,   828,   829,   829,   829,   830,   830,   830,   830,
     830,   831,   831,   831,   832,   832,   833,   833,   834,   834,
     835,   835,   835,   835,   836,   837,   837,   838,   838,   838,
     838,   839,   839,   839,   839,   840,   840,   840,   840,   841,
     841,   842,   842,   842,   842,   842,   842,   842,   843,   843,
     844,   845,   846,   846,   846,   846,   846,   847,   847,   847,
     847,   847,   848,   848,   849,   849,   850,   850,   851,   852,
     852,   852,   853,   853,   854,   854,   855,   855,   856,   857,
     857,   858,   858,   858,   859,   859,   859,   859,   859,   859,
     859,   860,   860,   861,   861,   862,   863,   863,   863,   863,
     864,   864,   864,   864,   865,   865,   866,   866,   866,   867,
     868,   868,   868,   868,   868,   868,   868,   868,   868,   868,
     868,   868,   868,   868,   868,   868,   868,   868,   868,   868,
     868,   868,   868,   868,   868,   868,   868,   868,   868,   868,
     868,   868,   868,   868,   868,   868,   868,   868,   868,   868,
     868,   868,   868,   868,   868,   868,   868,   868,   868,   868,
     868,   868,   868,   868,   868,   868,   868,   868,   868,   868,
     868,   868,   868,   868,   868,   868,   868,   868,   868,   868,
     868,   868,   868,   868,   868,   868,   868,   868,   868,   868,
     868,   868,   868,   868,   868,   868,   868,   868,   868,   868,
     868,   868,   868,   868,   868,   868,   868,   868,   868,   868,
     868,   868,   868,   868,   868,   868,   868,   868,   868,   868,
     868,   868,   868,   868,   868,   868,   868,   868,   868,   868,
     868,   868,   868,   868,   868,   868,   868,   868,   868,   868,
     868,   868,   868,   868,   868,   868,   868,   868,   868,   868,
     868,   868,   868,   868,   868,   868,   868,   868,   868,   868,
     868,   868,   868,   868,   868,   868,   868,   868,   868,   868,
     868,   868,   868,   868,   868,   868,   868,   868,   868,   868,
     868,   868,   868,   868,   868,   868,   868,   868,   868,   868,
     868,   868,   868,   868,   868,   868,   868,   868,   868,   868,
     868,   868,   868,   868,   868,   868,   868,   868,   868,   868,
     868,   868,   868,   868,   868,   868,   868,   868,   868,   868,
     868,   868,   868,   868,   868,   868,   868,   868,   868,   868,
     868,   868,   868,   868,   868,   868,   868,   868,   868,   868,
     868,   868,   868,   868,   868,   868,   868,   868,   868,   868,
     868,   868,   868,   868,   868,   868,   868,   868,   868,   868,
     868,   868,   868,   868,   868,   868,   868,   868,   868,   868,
     868,   868,   868,   868,   868,   868,   868,   868,   868,   868,
     868,   868,   868,   868,   868,   868,   868,   868,   868,   868,
     868,   868,   868,   868,   868,   868,   868,   868,   868,   868,
     868,   868,   868,   868,   868,   868,   868,   868,   868,   868,
     869,   869,   869,   869,   869,   869,   869,   869,   869,   869,
     869,   869,   869,   869,   869,   869,   869,   869,   869,   869,
     869,   869,   869,   869,   869,   869,   869,   869,   869,   869,
     869,   869,   869,   869,   869,   869,   869,   869,   869,   869,
     869,   869,   869,   869,   869,   869,   869,   869,   869,   869,
     869,   870,   870,   870,   870,   870,   870,   870,   870,   870,
     870,   870,   870,   870,   870,   870,   870,   870,   870,   870,
     870,   870,   870,   870,   870,   870,   870,   871,   871,   871,
     871,   871,   871,   871,   871,   871,   871,   871,   871,   871,
     871,   871,   871,   871,   871,   871,   871,   871,   871,   871,
     871,   871,   872,   872,   872,   872,   872,   872,   872,   872,
     872,   872,   872,   872,   872,   872,   872,   872,   872,   872,
     872,   872,   872,   872,   872,   872,   872,   872,   872,   872,
     872,   872,   872,   872,   872,   872,   872,   872,   872,   872,
     872,   872,   872,   872,   872,   872,   872,   872,   872,   872,
     872,   872,   872,   873,   873,   873,   873,   873,   873,   873,
     873,   873,   873,   873,   873,   873,   873,   873,   873,   873,
     873,   873,   873,   873,   873,   873,   873,   873,   873,   873,
     874,   874,   874,   874,   874,   874,   874,   874,   874,   874,
     874,   874,   874,   874,   874,   874,   874,   874,   874,   874,
     874,   874,   874,   874,   874,   874,   874,   874,   874,   874,
     874,   874,   874,   874,   874,   874,   874,   874,   874,   874,
     874,   874,   874,   874,   874,   874,   874,   874,   874,   874,
     874,   874,   874,   874,   874,   874,   874,   874,   874,   874,
     874,   874,   874,   874,   874,   874,   874,   874,   874,   874,
     874,   874,   874,   874,   874,   874,   874
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       4,     6,     4,     6,     4,     6,     4,     6,     1,     2,
       3,     2,     1,     3,     2,     3,     1,     3,     2,     5,
       3,     6,     4,     6,     6,     6,     5,     5,     6,     9,
       4,     5,     7,     6,     4,     8,     4,     2,     4,     3,
       6,     4,     2,     2,     2,     2,     1,     2,     0,     1,
       2,     2,     2,     1,     3,     4,     2,     1,     0,     2,
       3,     2,     3,     8,     1,     0,     1,     3,     6,     6,
       8,     6,     8,     6,     8,     6,     8,     8,    10,     8,
      10,     1,     0,     7,     1,     4,     4,     7,     2,     1,
       3,     4,     3,     0,     1,     0,     2,     3,     5,     8,
       5,     0,     5,     5,     7,     2,     0,     1,     1,     1,
       3,     2,     0,     1,     0,     1,     3,     1,     3,     1,
       3,     2,     2,     4,     5,     5,     8,     1,     0,     3,
       9,    12,     3,     0,     4,     6,     1,     2,     1,     1,
       0,     1,     2,     2,     1,     2,     2,     1,     2,     3,
       2,     2,     2,     2,     3,     3,     3,     1,     3,     1,
       0,     1,     2,     2,     2,     2,     2,     2,     2,     2,
       1,     1,     0,     9,    12,    11,     0,     2,     1,     1,
       1,     1,     1,     1,     3,     0,     1,     2,     1,     1,
       2,     2,     3,     1,     1,     2,     2,     1,     2,     3,
       5,     2,     5,     5,     2,     3,     1,     1,     2,     2,
       0,     4,     0,     3,     4,     4,     0,     3,     2,     0,
       3,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     3,     3,     1,     2,     2,     2,     2,     2,     2,
       0,     3,     3,     3,     0,     1,     2,     1,     2,     2,
       2,     2,     4,     1,     3,     1,     3,     1,     1,     1,
       1,     3,     1,     2,     0,     1,     0,     1,     3,     0,
       2,     0,     3,     3,     1,     5,     3,     1,     3,     1,
       4,     5,     5,     6,     3,     7,     4,    11,     1,     3,
       2,     2,     2,     0,     3,     1,     1,     2,     2,     2,
       2,     1,     0,     1,     2,     6,     4,     6,     4,     6,
       8,     4,     6,     1,     1,     1,     1,     1,     2,     1,
       2,     1,     1,     1,     3,     3,     3,     3,     2,     2,
       1,     3,     1,     1,     1,     1,     3,     1,     1,     0,
       1,     1,     1,     1,     3,     6,     1,     1,     2,     3,
       8,    11,     9,     1,     1,     3,     0,     1,     3,     1,
       0,     1,     0,     1,     0,     1,     3,     1,     1,     1,
       3,     0,     2,     2,     0,     2,     0,     1,     0,     1,
       1,     1,     3,     3,     1,     1,     3,     3,     3,     3,
       4,     3,     2,     1,     1,     1,     1,     1,     3,     1,
       1,     3,     3,     1,     2,     4,     4,     2,     3,     5,
       5,     1,     1,    10,    10,     1,     2,     4,     4,     4,
       2,     2,     3,     1,     3,     6,     2,     0,     3,     3,
       4,     4,     4,     4,     3,     2,     1,     1,     0,     1,
       1,     0,     1,     5,     1,     0,     1,     0,     3,     1,
       3,     4,     3,     1,     1,     0,     2,     2,     0,     2,
       2,     1,     1,     1,     0,     2,     4,     5,     4,     2,
       3,     2,     2,     2,     2,     1,     2,     3,     0,     1,
       0,     5,     1,     4,     6,     2,     1,     0,     4,     0,
       1,     1,     1,     1,     2,     2,     1,     1,     1,     1,
       1,     1,     3,     0,     1,     3,     1,     1,     2,     2,
       0,     1,     3,     1,     0,     1,     2,     3,     2,     4,
       2,     3,     2,     0,     1,     2,     0,     4,     5,     2,
       0,     1,     3,     3,     3,     3,     3,     3,     1,     4,
       3,     4,     5,     4,     5,     4,     5,     2,     4,     1,
       1,     0,     1,     4,     5,     4,     0,     2,     2,     2,
       1,     1,     0,     4,     2,     1,     2,     2,     4,     2,
       6,     2,     1,     3,     4,     0,     2,     0,     2,     0,
       1,     3,     3,     2,     0,     2,     4,     1,     1,     2,
       3,     5,     6,     2,     3,     5,     5,     3,     4,     0,
       1,     1,     1,     1,     1,     2,     4,     1,     1,     1,
       1,     2,     3,     0,     1,     1,     1,     1,     1,     2,
       2,     2,     2,     2,     1,     3,     0,     1,     1,     1,
       1,     5,     2,     1,     1,     1,     1,     4,     1,     2,
       2,     1,     3,     3,     2,     1,     0,     5,     2,     5,
       2,     1,     3,     3,     0,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     3,
       3,     3,     3,     3,     3,     3,     0,     1,     3,     3,
       5,     2,     2,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     2,     2,     3,     3,
       2,     2,     3,     3,     5,     4,     6,     3,     5,     4,
       6,     4,     6,     5,     7,     3,     2,     4,     3,     2,
       1,     3,     3,     3,     3,     3,     3,     4,     3,     4,
       3,     4,     5,     6,     6,     7,     6,     7,     6,     7,
       3,     4,     4,     6,     1,     4,     1,     3,     2,     2,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     2,     2,     5,     6,     6,     7,     1,
       1,     2,     2,     2,     4,     1,     2,     1,     2,     2,
       3,     5,     6,     8,     6,     6,     4,     4,     1,     1,
       1,     5,     1,     1,     4,     1,     4,     1,     4,     1,
       4,     1,     1,     1,     1,     1,     1,     6,     6,     4,
       4,     4,     4,     6,     5,     5,     5,     4,     6,     4,
       5,     0,     5,     0,     2,     0,     1,     3,     3,     2,
       2,     0,     6,     1,     0,     3,     0,     2,     2,     0,
       1,     4,     2,     2,     2,     2,     2,     4,     3,     1,
       5,     3,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     4,     1,     4,     1,     4,     1,     2,     1,
       2,     1,     2,     1,     3,     1,     3,     1,     0,     1,
       3,     1,     3,     3,     1,     3,     3,     0,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     4,     3,
       2,     3,     0,     3,     3,     2,     2,     1,     0,     2,
       2,     3,     2,     1,     1,     3,     5,     1,     2,     4,
       2,     0,     1,     0,     1,     2,     2,     3,     5,     1,
       0,     1,     2,     0,     2,     1,     0,     1,     0,     1,
       3,     3,     2,     1,     3,     5,     4,     2,     1,     0,
       3,     1,     3,     4,     2,     0,     1,     3,     1,     2,
       1,     3,     1,     1,     1,     2,     1,     1,     2,     1,
       1,     2,     6,     2,     5,     3,     3,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     2,     2,     3,
       3,     0,     1,     1,     1,     1,     1,     1,     1,     5,
       3,     0,     1,     1,     1,     1,     4,     7,     2,     0,
       1,     1,     1,     1,    13,    16,     1,     2,     0,     1,
       0,     1,     0,     2,     0,     1,     0,     6,     8,     6,
       8,     6,     8,     2,     1,     4,     3,     2,     4,     3,
       5,     1,     0,     1,     1,     0,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     3,     1,     1,
       1,     1,     1,     1,     2,     1,     1,     2,     3,     3,
       3,     1,     3,     3,     2,     3,     3,     3,     3,     1,
       1,     1,     1,     3,     5,     1,     1,     1,     1,     3,
       2,     1,     4,     5,     5,     4,     6,     1,     1,     1,
       1,     1,     1,     0,     1,     3,     1,     0,     7,     1,
       2,     3,     2,     0,     2,     0,     2,     4,     2,     1,
       1,     1,     2,     3,     2,     2,     2,     2,     3,     4,
       2,     1,     1,     1,     3,     2,     9,    11,    12,    14,
       3,     4,     4,     0,     7,    10,     2,     3,     0,     4,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1
};

/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
     135,   212,     0,  1129,  1128,   212,     0,  1104,   212,   418,
     342,     0,  1202,     0,   212,     0,   135,     0,     0,     0,
       0,     0,     0,     0,   212,   485,     0,  1201,   212,     0,
       0,  1173,     0,     0,     0,     0,     0,     2,     4,     7,
      18,    13,    30,    26,     0,    28,    16,    21,     6,    32,
      17,    20,    14,    33,    11,    31,   452,   439,   487,   451,
     134,   455,    29,    15,    25,     5,    10,    23,    24,    22,
    1112,    36,    27,    34,    19,     8,    35,    37,     0,     9,
      38,    12,   211,   210,   204,     0,     0,     0,     0,     0,
     205,  1042,  1220,  1221,  1222,  1223,  1224,  1225,  1226,  1227,
    1228,  1229,  1230,  1231,  1232,  1233,  1234,  1235,  1571,  1236,
    1237,  1238,  1520,  1521,  1572,  1522,  1523,  1239,  1240,  1241,
    1242,  1243,  1244,  1245,  1246,  1524,  1525,  1247,  1248,  1249,
    1250,  1251,  1526,  1573,  1252,  1253,  1254,  1255,  1256,  1574,
    1257,  1258,  1259,  1260,  1261,  1262,  1263,  1264,  1265,  1575,
    1266,  1267,  1268,  1576,  1269,  1270,  1271,  1272,  1273,  1274,
    1275,  1527,  1528,  1276,  1277,  1278,  1279,  1280,  1281,  1282,
    1283,  1284,  1285,  1286,  1287,  1288,  1289,  1290,  1291,  1292,
    1293,  1294,  1295,  1296,  1297,  1298,  1299,  1300,  1301,  1302,
    1303,  1529,  1304,  1305,  1306,  1307,  1530,  1308,  1309,  1310,
    1531,  1311,  1312,  1313,  1577,  1578,  1314,  1315,  1316,  1579,
    1317,  1318,  1532,  1319,  1320,  1321,  1322,  1323,  1324,  1325,
    1580,  1326,  1327,  1328,  1329,  1330,  1331,  1332,  1333,  1334,
    1335,  1336,  1581,  1533,  1337,  1338,  1339,  1340,  1534,  1535,
    1536,  1341,  1582,  1583,  1342,  1584,  1343,  1344,  1345,  1346,
    1347,  1348,  1585,  1349,  1586,  1350,  1351,  1352,  1353,  1354,
    1355,  1356,  1357,  1537,  1358,  1359,  1360,  1361,  1362,  1363,
    1364,  1365,  1366,  1367,  1368,  1369,  1370,  1371,  1372,  1373,
    1374,  1375,  1538,  1588,  1539,  1376,  1377,  1378,  1540,  1379,
    1380,  1589,  1381,  1541,  1382,  1542,  1383,  1384,  1385,  1386,
    1387,  1388,  1389,  1390,  1391,  1543,  1590,  1392,  1591,  1544,
    1393,  1394,  1395,  1396,  1397,  1398,  1399,  1400,  1401,  1402,
    1403,  1404,  1545,  1405,  1406,  1546,  1407,  1408,  1409,  1410,
    1411,  1412,  1413,  1414,  1415,  1416,  1417,  1418,  1547,  1419,
    1420,  1421,  1422,  1423,  1424,  1425,  1426,  1427,  1428,  1429,
    1430,  1431,  1432,  1433,  1434,  1435,  1436,  1592,  1437,  1438,
    1439,  1548,  1440,  1441,  1442,  1443,  1444,  1445,  1446,  1447,
    1448,  1449,  1450,  1451,  1452,  1453,  1454,  1455,  1456,  1549,
    1457,  1458,  1459,  1593,  1460,  1461,  1550,  1462,  1463,  1464,
    1465,  1466,  1467,  1468,  1469,  1470,  1471,  1472,  1473,  1551,
    1474,  1552,  1475,  1476,  1477,  1478,  1595,  1479,  1480,  1481,
    1482,  1483,  1553,  1554,  1484,  1485,  1555,  1486,  1556,  1487,
    1488,  1557,  1489,  1490,  1491,  1492,  1493,  1494,  1495,  1496,
    1497,  1498,  1499,  1500,  1501,  1502,  1503,  1558,  1559,  1504,
    1596,  1505,  1506,  1507,  1508,  1509,  1510,  1511,  1512,  1513,
    1514,  1515,  1560,  1561,  1562,  1563,  1564,  1565,  1566,  1567,
    1568,  1569,  1570,  1516,  1517,  1518,  1519,  1205,     0,     0,
    1024,  1043,  1044,  1052,   207,   417,   135,     0,   386,     0,
       0,   387,     0,     0,   336,   335,     0,  1095,   341,     0,
       0,     0,  1042,   101,  1537,  1407,  1551,    99,  1022,  1043,
       0,   361,   362,     0,   370,     0,   355,   359,   356,     0,
     380,   372,   381,   373,   354,   374,   363,   353,     0,   382,
       0,   357,     0,     0,     0,   208,   173,   342,   135,     0,
    1117,  1118,  1116,  1107,  1112,  1119,  1120,     0,  1103,     0,
    1041,  1161,  1160,   162,  1071,  1190,  1553,  1484,  1203,  1191,
    1188,  1189,   209,   484,   482,     0,   998,  1317,  1352,  1444,
    1455,  1553,  1137,  1141,     0,   206,  1558,  1195,     0,  1196,
    1046,     0,   456,   605,  1045,  1018,  1172,     0,  1177,     0,
    1421,   460,   463,  1061,   461,   452,     0,     1,   135,     0,
       0,     0,   481,   481,     0,   481,     0,   444,   452,   447,
     451,     0,  1111,  1186,  1200,  1553,  1484,  1194,  1197,  1325,
       0,     0,  1325,     0,  1325,     0,  1325,     0,     0,   990,
       0,   991,  1025,  1073,  1074,  1072,     0,  1075,   309,   340,
     339,   338,   337,   342,  1325,  1079,  1056,     0,     0,     0,
       0,     0,     0,  1090,   102,   100,   368,   369,     0,   360,
     358,     0,  1053,  1597,   657,  1598,   686,   664,   686,   686,
    1599,  1600,  1601,  1602,   653,   653,  1291,   666,  1603,  1604,
    1605,  1325,  1606,  1607,   654,   655,   691,  1608,  1609,  1610,
    1611,  1612,     0,     0,  1613,   686,  1614,   653,  1615,  1616,
     658,  1617,   627,     0,  1618,   656,   628,  1619,   694,   694,
    1620,   681,  1621,   379,     0,   383,   639,   640,   641,   642,
     667,   668,   643,   673,   674,   678,   644,   726,   653,  1054,
    1055,  1325,   379,   375,  1325,   379,  1020,  1325,     0,     0,
     169,     0,  1109,  1121,  1622,  1623,  1624,  1625,  1627,  1626,
    1628,  1629,  1630,  1631,  1632,  1633,  1634,  1635,  1638,  1636,
    1637,  1639,  1640,  1641,  1642,  1643,  1644,  1645,  1646,  1647,
    1648,  1649,  1650,  1651,  1652,  1653,  1654,  1655,  1656,  1657,
    1658,  1659,  1660,  1661,  1662,  1663,  1664,  1665,  1666,  1667,
    1668,  1669,  1670,  1671,  1672,  1135,     0,  1136,  1126,  1115,
    1122,  1123,   135,   416,  1106,     0,     0,     0,     0,  1192,
       0,     0,     0,  1027,  1029,  1030,   921,  1040,   993,     0,
    1521,  1522,  1523,   983,     0,  1524,  1525,  1526,  1573,   855,
     842,   851,   856,   843,   845,   852,  1527,  1528,   794,  1529,
    1530,  1038,  1531,  1534,  1535,  1536,   847,   849,  1538,  1539,
       0,  1039,  1541,  1542,  1388,  1544,  1545,  1547,  1548,   853,
    1550,  1552,  1553,  1554,  1555,  1556,  1037,  1557,   854,  1559,
       0,     0,     0,  1009,   938,     0,     0,     0,   993,   827,
       0,   647,   648,   669,   670,   649,   675,   676,   650,     0,
    1003,   727,   871,   993,   838,   899,   770,     0,   825,   819,
     467,   999,     0,   820,  1026,   993,   984,   467,   997,  1140,
    1138,  1144,  1139,     0,     0,     0,     0,     0,   607,   606,
    1019,  1171,  1169,  1170,  1168,  1167,  1174,     0,  1176,  1112,
     935,     0,   984,   462,     0,     0,     0,   442,   441,     3,
       0,     0,  1179,     0,   479,   480,     0,     0,     0,     0,
       0,     0,     0,     0,   554,   501,   502,   504,   551,   555,
     563,     0,   448,     0,  1061,  1198,     0,     0,     0,   122,
     122,     0,     0,     0,     0,     0,    93,    42,    86,     0,
       0,     0,     0,   187,   200,     0,     0,     0,     0,     0,
     197,     0,     0,   180,    44,   174,   176,     0,   122,     0,
      40,     0,     0,     0,    46,  1042,     0,  1571,  1572,  1573,
    1574,  1575,   856,     0,  1577,  1578,  1579,  1580,  1581,  1582,
    1583,  1584,  1585,  1586,  1537,  1588,  1589,  1590,  1591,  1592,
    1593,  1551,  1595,  1557,     0,  1596,     0,   830,   941,   487,
     939,  1062,     0,  1043,  1049,   989,     0,  1063,  1700,  1701,
    1702,  1703,  1704,  1705,  1706,  1707,  1708,  1709,  1710,  1711,
    1712,  1713,  1714,  1715,  1716,  1717,  1718,  1719,  1720,  1721,
    1722,  1723,  1724,  1725,  1726,  1727,  1728,  1729,  1730,  1731,
    1732,  1733,  1734,  1735,  1736,  1737,  1738,  1739,  1740,  1741,
    1742,  1743,  1744,  1745,  1746,  1747,  1748,  1749,  1750,  1751,
    1752,  1753,  1754,  1755,  1756,  1757,  1758,  1759,  1760,  1761,
    1762,  1763,  1764,  1765,  1766,  1767,  1768,  1769,  1770,  1771,
    1660,  1772,  1773,  1774,  1775,  1776,   986,  1023,  1065,  1064,
    1066,   992,     0,     0,   414,     0,     0,  1076,     0,  1057,
       0,     0,  1325,   168,  1325,   309,     0,   309,     0,     0,
    1089,  1092,   371,   367,   365,   364,   366,   685,   672,   680,
     679,     0,   662,   661,   660,     0,   659,     0,     0,   686,
     686,   684,   663,   639,     0,     0,     0,   690,     0,   688,
     377,   378,     0,   351,     0,   633,   629,     0,   699,   700,
     701,   702,   709,   710,   707,   708,   703,   704,   697,   698,
     705,   706,   695,   696,     0,   711,   712,   713,   714,   715,
     716,   717,   718,   645,   651,     0,     0,   346,     0,     0,
     348,     0,     0,     0,     0,   135,     0,   181,  1131,  1132,
    1130,     0,     0,  1114,   184,   201,  1125,  1134,  1124,  1133,
    1113,  1108,     0,  1105,   405,  1150,  1149,  1158,   163,     0,
     944,     0,   135,  1193,  1204,     0,   823,   938,   982,     0,
       0,     0,     0,     0,     0,   829,   947,     0,     0,   750,
       0,     0,     0,   962,     0,   968,     0,     0,     0,   751,
     731,   732,     0,  1008,  1015,   937,     0,   827,   935,     0,
     902,     0,  1045,     0,   821,   822,   828,  1033,     0,   726,
     726,  1002,   921,     0,   918,   919,   920,     0,     0,     0,
     996,     0,   929,   931,     0,     0,   766,   927,     0,   769,
       0,     0,     0,     0,   915,   916,   917,   909,   910,   911,
     912,   913,   914,   925,   908,   747,     0,     0,   873,   826,
       0,     0,   746,     0,     0,     0,   570,     0,  1031,  1028,
       0,   985,   570,  1152,  1156,  1157,  1155,     0,  1151,  1143,
    1142,  1147,  1145,  1148,  1146,     0,  1165,     0,  1162,   567,
       0,   464,     0,     0,  1185,     0,   129,     0,  1180,     0,
     459,   458,   488,   489,   495,   457,   540,   541,     0,     0,
       0,     0,   560,   558,   531,   505,   530,     0,     0,   509,
       0,   532,   727,   553,   446,   499,   500,   503,   445,     0,
     556,     0,   566,   554,   504,     0,  1187,  1199,     0,     0,
       0,     0,     0,  1325,     0,     0,    77,    58,   261,     0,
     121,     0,     0,     0,     0,     0,     0,     0,    85,    82,
      83,    84,     0,     0,     0,     0,   185,   186,   199,     0,
     190,   191,   188,   192,   193,     0,     0,   178,   179,     0,
       0,     0,     0,   177,     0,     0,     0,     0,     0,     0,
       0,     0,   487,   487,   487,   836,     0,     0,   486,     0,
       0,   987,   990,   404,   317,     0,   307,     0,     0,     0,
       0,     0,     0,   342,  1082,  1080,  1078,  1081,  1083,  1058,
       0,     0,     0,     0,   165,   167,     0,   306,   280,     0,
    1094,   388,     0,     0,  1325,  1091,   297,     0,     0,     0,
       0,   379,     0,   683,   682,   634,   630,     0,     0,     0,
       0,   384,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   379,   376,   379,  1021,     0,   379,   172,  1325,
     309,     0,  1110,  1127,   182,   202,   183,   203,   437,     0,
     411,   419,   424,   402,     0,   402,     0,   421,   425,   402,
     420,   402,   415,     0,   164,     0,  1070,     0,  1069,     0,
     994,     0,     0,   981,   977,     0,     0,     0,     0,     0,
     948,   949,   950,   951,   952,   953,   954,   955,   956,     0,
       0,   957,     0,     0,     0,   907,   918,   919,   920,   915,
     916,   917,   909,   910,   911,   912,   913,   914,   933,     0,
       0,     0,     0,     0,     0,     0,     0,   796,     0,     0,
     819,   898,     0,   935,   967,     0,     0,     0,     0,     0,
       0,   935,   973,     0,     0,     0,  1007,     0,  1004,   772,
     993,     0,     0,   771,     0,     0,  1035,  1036,   728,   742,
     743,   744,   748,  1068,  1067,  1001,     0,   995,     0,     0,
     729,   752,   757,     0,   974,   790,     0,   778,     0,   765,
       0,   776,   780,   753,   768,     0,   749,     0,   996,   930,
     932,     0,   928,     0,   739,   740,   741,   733,   734,   735,
     736,   737,   738,   745,   906,   904,   905,     0,     0,     0,
     881,   773,     0,     0,   775,   774,  1317,  1352,     0,   478,
     478,   478,   466,   476,  1000,     0,   619,   487,  1009,   619,
       0,   726,   608,  1061,  1175,  1163,  1164,   936,  1060,   135,
       0,  1183,     0,     0,     0,   141,   124,     0,  1181,     0,
     157,   570,     0,   993,     0,   493,   494,     0,   498,  1548,
    1440,     0,     0,     0,     0,   533,   561,     0,   552,     0,
    1027,   534,  1026,   535,   538,   539,   510,   562,  1016,   564,
       0,   557,   450,   449,   568,     0,    43,     0,  1325,    60,
       0,     0,     0,     0,     0,     0,   216,   252,   216,    98,
    1325,   379,  1325,   379,  1224,  1292,  1456,     0,    56,    89,
       0,   285,   115,     0,   270,   314,    79,    94,   108,     0,
       0,    45,   175,   189,   194,   111,   198,   195,  1099,   196,
     122,     0,    41,     0,   109,     0,  1097,     0,     0,    47,
     113,  1101,     0,     0,     0,     0,   940,   831,   942,   943,
     989,     0,   403,     0,   308,     0,   413,   393,   394,   404,
       0,     0,   309,  1079,     0,  1059,   105,     0,     0,     0,
       0,   300,   298,   328,     0,   305,   299,   307,     0,     0,
     256,     0,  1218,     0,     0,   389,   385,     0,     0,     0,
     652,   665,   352,   639,     0,   693,   692,   694,   694,   639,
       0,   625,     0,   637,     0,   677,   646,   719,   720,   721,
     722,   723,   724,   725,   345,   347,     0,   349,     0,     0,
     406,     0,   409,     0,   408,   412,   407,   401,     0,   432,
       0,     0,     0,     0,     0,     0,  1159,   945,   483,   795,
       0,     0,   978,     0,     0,   869,     0,   844,   846,   859,
       0,   848,   850,     0,   922,     0,     0,     0,   860,   798,
     799,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   814,   813,
     861,   897,     0,     0,   965,   966,   862,     0,     0,   972,
       0,     0,     0,   867,     0,     0,     0,     0,  1014,   824,
     936,   903,   901,   726,     0,     0,     0,     0,     0,     0,
       0,   779,   767,     0,   777,   781,     0,     0,     0,   761,
       0,     0,   759,   791,   755,     0,     0,   792,     0,     0,
       0,   837,   478,   478,   478,   478,   475,   477,     0,     0,
       0,     0,  1440,     0,   591,   569,   571,   578,   591,   596,
     839,   617,   840,  1045,     0,   543,     0,  1015,   543,     0,
    1153,  1166,     0,  1184,     0,   146,   128,   148,   147,     0,
     155,     0,   993,     0,   146,   130,     0,   149,     0,  1183,
       0,   161,   490,     0,   923,   498,     0,   492,   537,   536,
       0,   508,   559,   506,     0,   565,     0,     0,     0,   260,
       0,     0,     0,   216,     0,     0,   324,     0,   311,    78,
       0,     0,     0,    52,    97,    70,    62,    48,    76,     0,
       0,    81,     0,    74,    91,    92,    90,    95,     0,   244,
     226,   257,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   834,   835,   832,   487,   988,
     435,   436,   180,   434,   318,     0,     0,   306,  1094,  1077,
       0,     0,   104,   106,     0,   168,   309,     0,   284,   280,
       0,   278,   277,   279,     0,  1219,   173,     0,  1214,  1093,
       0,     0,  1088,   671,   636,     0,   689,   687,   635,     0,
     631,   638,   379,     0,   438,     0,   397,   433,   422,   427,
       0,   431,   429,   428,   423,   426,     0,   980,   976,     0,
     841,   946,     0,   934,   960,   959,   797,   809,   810,   811,
     961,     0,     0,     0,   806,   807,   808,   800,   801,   802,
     803,   804,   805,   812,   970,   969,   963,   964,     0,   864,
     865,   866,   971,     0,  1006,   935,  1011,     0,     0,   900,
    1034,   730,     0,     0,   758,   975,   782,     0,     0,     0,
     754,   922,     0,     0,     0,     0,     0,   763,     0,     0,
       0,   884,   879,   880,     0,     0,     0,     0,   469,   468,
     474,   591,   596,     0,   452,     0,   578,     0,   590,   527,
     589,     0,     0,   602,   600,     0,   602,     0,   602,     0,
     527,     0,   592,   527,   589,     0,   609,  1019,   618,     0,
     550,   831,  1005,   550,     0,   465,  1182,     0,  1178,     0,
       0,     0,   136,   133,   123,     0,     0,   158,   146,   137,
       0,   491,   496,   497,   507,  1017,   116,   216,     0,     0,
      59,     0,   326,   272,   304,   287,     0,     0,     0,   217,
       0,   292,     0,    51,    71,     0,    67,     0,    96,     0,
       0,     0,     0,     0,    54,    66,     0,    49,     0,   379,
     379,    57,   271,  1053,  1597,  1598,  1599,  1600,  1601,  1602,
    1603,  1604,  1605,  1606,  1607,  1608,  1609,  1610,  1611,  1612,
    1689,  1613,   223,  1614,  1388,  1615,  1616,  1617,     0,  1618,
     628,  1619,  1620,  1621,   909,   910,   221,   313,   218,   319,
     220,   222,     0,  1054,   219,   316,   112,  1100,     0,   110,
       0,  1098,   119,   117,   114,  1102,     0,   416,   396,     0,
       0,     0,  1325,     0,   103,     0,  1094,   166,   306,     0,
     334,   256,   329,     0,  1218,  1216,     0,  1213,     0,     0,
       0,   632,   626,   350,     0,   410,     0,   430,   979,   857,
     868,   958,     0,     0,     0,     0,   863,   858,  1013,     0,
    1010,   788,   786,   783,     0,   784,   762,     0,     0,   760,
     756,     0,   793,   870,     0,   886,   883,   473,   472,   471,
     470,   577,   575,     0,   580,  1045,   587,   520,   526,   576,
       0,   572,     0,   601,   597,     0,   598,     0,     0,   599,
       0,   573,     0,  1045,   574,     0,   616,     0,     0,   875,
    1032,   875,  1154,   145,   125,     0,   126,   156,     0,     0,
       0,     0,   150,   390,     0,   322,    61,     0,   304,     0,
     216,   289,   288,   291,   286,   290,   293,     0,     0,     0,
       0,     0,   273,     0,     0,     0,   237,     0,     0,   304,
     310,   233,   234,   343,     0,     0,     0,    63,    53,    50,
      55,    64,     0,     0,    65,    68,   624,    80,    73,  1689,
    1696,     0,     0,     0,     0,     0,   833,   392,   399,   180,
       0,     0,   280,     0,     0,   306,   107,     0,     0,     0,
    1218,     0,     0,   213,     0,   253,     0,   170,  1217,     0,
    1206,     0,  1086,  1087,     0,     0,   398,   815,     0,     0,
       0,  1012,   785,   789,   787,   764,   872,     0,   487,   612,
       0,   615,   579,     0,     0,   515,   522,     0,   525,   519,
       0,   581,     0,     0,   583,   585,     0,     0,     0,   620,
       0,     0,     0,  1022,     0,   542,   544,   547,   546,   549,
       0,   518,   518,     0,     0,     0,   159,     0,   152,   152,
       0,   138,   924,     0,   216,     0,   303,   323,   251,     0,
       0,   235,     0,   241,     0,   275,   276,   274,   236,   304,
     309,   238,   344,     0,    72,     0,    88,     0,     0,   315,
     120,   118,   416,     0,  1094,   256,  1213,     0,     0,   280,
     173,  1215,   269,   262,   263,   264,   265,   266,   267,   268,
     283,   282,   254,   255,     0,     0,     0,  1088,     0,   816,
       0,   817,     0,   889,   617,     0,     0,   611,     0,   513,
     511,   514,   516,   512,     0,     0,   588,   604,     0,   584,
     582,   593,     0,   624,     0,   595,   548,     0,   874,   876,
       0,     0,   454,   453,     0,   132,     0,   619,     0,     0,
     154,   154,   140,     0,   309,   325,     0,   295,   302,   294,
       0,     0,   232,     0,   239,   333,   225,   623,     0,    75,
       0,   320,   391,   395,     0,   215,  1207,     0,  1213,   256,
    1218,     0,  1210,     0,     0,  1094,   818,   885,     0,     0,
       0,   610,   613,     0,   586,     0,     0,     0,   621,   622,
     594,   545,     0,     0,   520,   127,   152,   131,   160,   151,
     495,   153,   495,     0,   333,   281,     0,     0,   259,   225,
       0,   250,     0,    69,    87,   321,     0,   306,  1208,   214,
     171,  1211,  1212,     0,   619,  1520,  1268,  1491,     0,   887,
     890,   888,   882,     0,   523,     0,   529,   603,   877,   878,
     517,   154,   498,   498,   619,   250,   296,   301,     0,   240,
     242,   330,   331,   332,     0,   246,   243,   247,     0,  1213,
       0,  1084,     0,   894,   893,   892,   896,   895,   614,     0,
       0,   521,   495,   143,   142,   139,   216,   258,     0,     0,
       0,   248,     0,   249,   224,  1209,  1094,     0,   524,     0,
     498,   327,   229,     0,   228,     0,   312,   245,   619,   891,
       0,   144,   227,   231,   230,  1085,   528
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    36,    37,    38,    39,  2105,  2106,  2107,  1797,   966,
    2779,  1798,   967,   968,  2109,    40,    41,  2151,  2152,    42,
    1422,   530,  1735,  1365,  2520,    44,  2060,  1740,  2064,  2656,
    2308,  2059,  2066,  2760,  2820,  2061,  1741,  2657,  1742,    45,
      46,  1494,    47,   730,    48,  1495,  1449,  1235,   986,  1439,
    1224,    49,    84,    50,  2096,  2397,  2833,  2119,  2916,  2550,
    2551,  1799,  2875,  2876,  2098,  2165,  1431,  2869,  1861,  2710,
    1803,  1786,  2552,  1870,  2666,  2430,  1800,  2339,  1862,  2537,
    2766,  1505,  1863,  2767,  2530,  1864,  1474,  1498,  2341,  2877,
    1804,  1475,  2398,  1418,  1865,  2831,  1866,   489,  2555,    51,
     522,   523,   722,  1173,   524,   703,    52,   490,  1139,   531,
      54,  1849,  2579,  2185,  2580,  1918,  1843,  1233,  1915,  1548,
    1478,  1234,   477,  1562,  2186,  2142,  1549,   532,   869,    57,
      58,    59,   568,   581,   582,  1336,  1712,  2028,   936,   555,
     556,   596,  1468,  1372,  1373,  1748,  2077,  1397,  1398,   945,
     946,  2626,  2752,  2627,  2628,  2488,  2489,  2891,  1385,  1389,
    1390,  1761,  1754,  1378,  2300,  2645,  2646,  2647,  2509,  1393,
    1394,   948,   949,   950,  1402,  1771,    61,  1716,  2035,  2036,
    2037,  2278,  2279,  2293,  2289,  2494,  2634,  2038,  2039,  2619,
    2620,  2727,  2296,  2045,  2638,  2639,  2686,  1522,   704,  1240,
    1176,   706,   870,   707,  1152,   871,  1156,   709,   872,   873,
     874,   712,   875,   876,   877,   715,  1148,   878,   879,  1167,
    1195,  1196,  1197,  1198,  1199,  1200,  1201,  1202,  1203,   920,
    1616,   881,   882,   883,  2041,   884,  1328,  1700,  2651,  2748,
    2749,  2021,  2262,  2475,  2618,  2800,  2849,  2850,   885,   886,
    1280,  1281,  1697,  1323,  1324,   887,  2400,  1326,  1609,  1279,
    1276,  1029,  1030,  1241,  1589,  1590,  1612,  1947,  1619,  1625,
    1974,  1975,  1633,  1665,   888,  1573,  1574,  1933,  1249,   889,
     621,  1036,   622,  1246,  1659,   897,   890,   891,  1273,  1274,
    1988,  2237,  1638,  1767,   573,  2630,   726,  1116,   892,   893,
     894,   895,   922,   575,  1031,   470,   718,  2821,  1129,   926,
    1032,  1801,  1655,    62,   798,   626,    63,  1127,  1486,    64,
    2603,  2440,  1141,  1507,  1874,   491,    65,    66,    67,    68,
      69,   603,  1227,   533,  1228,  1229,   786,    70,  1236,   788,
     789,    71,   562,   563,  1237,  1349,  1238,    72,   542,    73,
     916,   578,   917,   919,   535,   933,  2055,  1731,    75,    76,
     549,   550,    77,    78,   564,    79,    80,  2600,   536,  2168,
    1136,   499,   472,   473,   720,  1119,  1034,  1120
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -2540
static const int yypact[] =
{
    4573,   341,   440, -2540, -2540,   341, 31739, -2540,   341,    43,
    3264, 36419, -2540,  5641,   341, 42503,    79,   233,   304,   250,
     426, 42503, 42503, 36887,   341,   218, 42971, -2540,   341, 21487,
   34079,    -9,    58, 43439, 42503,  1056,   641,   239, -2540, -2540,
   -2540, -2540, -2540, -2540,   111, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540,    88, -2540,   110,    97,
     -63,   183, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
     168, -2540, -2540, -2540, -2540, -2540, -2540, -2540, 21018, -2540,
   -2540, -2540, -2540, -2540, -2540, 37355, 42503, 37823, 34547, 38291,
   -2540,   136, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540,   138, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,   140,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,   298,   475,
   -2540,   142, -2540, -2540, -2540, -2540,  1056, 38759, -2540,   519,
     636, -2540,   373, 43907, -2540, -2540, 42503, -2540, -2540,   674,
   38759,   543, -2540, -2540, -2540, 39227, -2540, -2540, -2540, -2540,
     528, -2540, -2540,   401, -2540,    75, -2540, -2540, -2540,   376,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,   473, -2540,
   48587, -2540, 44375, 44843, 45311, -2540,   389,   407,   617, 20549,
   -2540, -2540, -2540, -2540,   168, -2540, -2540,   426, -2540,   426,
   -2540, -2540, -2540,   289,   408, -2540,   442,   712, -2540, -2540,
   -2540,   485, -2540, -2540,   701,  8397,  8397, 45779, 45779,   426,
   45779,   544, -2540, -2540,    37, -2540,    58, -2540,   -63,   485,
   -2540, 21956, -2540,   546,   475, -2540, -2540,   192,   864, 11355,
   42503,   507, -2540,   549,   507,   603,   626, -2540,  4573,   954,
     915, 34079,   240,   240,  1110,   240,    90,   599, -2540,  1352,
   -2540,   691, -2540, 38759, -2540,   732,   994, -2540,   485,  1067,
     384,   891,  1079,  4460,  1089,  1095,  1093,  1367,  6425, 11355,
   30335, -2540,   475, -2540, -2540, -2540,   764, -2540,   786, -2540,
   -2540, -2540, -2540,   407,  1013, -2540,   782,  1266,   862, 39695,
   40163, 38759,   830,  1249, -2540, -2540, -2540, -2540,   890, -2540,
   -2540,   127, -2540, -2540, -2540, -2540,   900, -2540,   900,   900,
   -2540, -2540, -2540, -2540,   870,   870,  1043,   898, -2540, -2540,
   -2540,  1213, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540,   902,  1082, -2540,   900, -2540,   870, -2540, -2540,
   -2540, -2540, -2540, 50414, -2540, -2540, -2540, -2540,   351,   488,
   -2540, -2540, -2540,    73,   910, -2540,  1364, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540,   929, -2540,  2987,   870, -2540,
   -2540,  1269,   156, -2540,  1293,   245, -2540,  1299,  1176, 11355,
   -2540,  1062, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540,    58, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540,   360, -2540, -2540, 28020,
   -2540, -2540,   617,   983, -2540, 28020, 11848, 49040,  1452, -2540,
    1268, 42503,  1026, -2540, -2540, -2540, -2540, -2540, -2540,  1035,
    1527,   101,  1534, 11355,  1060,   101,   101,  1080,  1392, -2540,
   -2540, -2540,   143,  1091,  1097, -2540,   144,   144, -2540,  1102,
    1104, -2540,   146,  1559,  1577,   114,  1107,  1109,  1082,   101,
   11355, -2540,  1119,   144,  1133,  1142,  1147,  1631,  1157, -2540,
    1646,  1168,    80,    82,  1173,  1177, -2540,  1179, -2540,   148,
   11355, 11355, 11355,  1523, 11355,  7411, 38759,  1663, -2540,   475,
     426, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,   133,
    4984, -2540,  1225, -2540, -2540, -2540,   169, 11355, -2540,  1662,
     -34, -2540,   149, -2540, -2540, -2540,   497,  1479,  1203, -2540,
   -2540, -2540, -2540,   256,  1607, 27084, 27552, 38759, -2540, -2540,
     475, -2540, -2540, -2540, -2540, -2540, -2540,   467, -2540,   168,
   29196,   481,   475,   507, 42503, 42503,  1665, -2540, -2540, -2540,
   34079, 38759, 46247,  1342, -2540, -2540,   -63,   -63, 11355,   -63,
     118,   495,  8890, 12341,  1551,  1438,   147,   471,  1556, -2540,
    1445,    90,   599, 11355,   549, -2540,  1495, 38759, 32207,   234,
     728,  1234,  1316,  1236,     4,  1640, -2540,  1241, -2540,  1330,
   38759, 50414,   161, -2540,  1686,   161,   161,   258,  1689,  1338,
     173,  1490,   562,  -125,  1241,  3546, -2540, 34079,   115,   605,
    1241, 38759,  1340,   748,  1241,    85, 11848,  1066,  1156,   313,
    1193,  1220,    87, 11848,  1308,  1336,  1355,  1366,  1381,  1411,
    1422,  1517,  1567,  1574,   102,  1590,  1597,  1602,  1605,  1612,
    1619,   108,  1626,   116, 11848,  1629,  1259, -2540, 29196,   -58,
   -2540, -2540,  1649,   112, -2540,  5875,  1254, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540,  1349, 42503,  1309,   -81,  1610,  1669, 30335,  1274,
    1623, 38759,  1504,  3546,  1505,  1279,  1734,   786,  9383,  1736,
   -2540, 46715, -2540, -2540, -2540, -2540, -2540, -2540,  1286, -2540,
   -2540, 11355, -2540, -2540, -2540,  1766, -2540, 49040, 49040,   900,
     900, -2540, -2540,  1742,  1375,  1376,  1766, -2540,  1766, -2540,
   -2540, -2540, 49040, -2540, 42503,  1297,  1300,  1766, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540,  1766,  1378, -2540,  1380,  1388,  1390,
   -2540, -2540, -2540, -2540, -2540, 42503, 42503, -2540, 42503, 42503,
   -2540, 42503, 42503,   503, 40631,   617, 35015, -2540, -2540, -2540,
   -2540,   768,   858, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, 30335, -2540,  1958, -2540, -2540, -2540,  1296,   555,
   -2540,   563,  1056, -2540, -2540, 11355,   475, 11355, 29196,  1353,
   11355, 11355,  1314,  1766,  1766, -2540,  2164,  1766,  1766,  1094,
   11355, 24773, 11355, 15792,  9876, 11355, 11355,  7904, 11355,  1094,
    1791,  1791, 22894, -2540,  1468,  1315,  1319,  2108,  5023,  1320,
   -2540,   403, -2540,  1311, -2540,   475,   475, -2540, 11355,  2150,
    2150, -2540,   100, 49040, 11355, 11355, 11355, 11355, 29867,  1406,
     117, 42503, 11355, 11355,  1325,   535, -2540, 11355,  1545, -2540,
    1329, 11355,  1409,   801, 11355, 11355, 11355, 11355, 11355, 11355,
   11355, 11355, 11355, -2540, -2540, 17257,   159,  1641,  1660,   475,
   11355,  -104,   190, 11355, 35483,  8397,  1653,  6425, -2540,   475,
   26148,   109,  1653, -2540, -2540, -2540, -2540,   151, -2540, -2540,
   -2540, -2540,  1296, -2540,  1296,  1333, 38759,   192, 33611, -2540,
   11355, -2540,   587,  1341,  1393,    47,  1786, 42503, -2540, 23363,
    1617, -2540,  1344, -2540, 28484,  1617, -2540, -2540, 16271,  1464,
    1611,  1558, -2540, -2540, -2540,  1345, 29196, 12834, 12834, -2540,
    1178, 29196,  1335, -2540, -2540, -2540, -2540, -2540, -2540,   585,
   -2540, 38759,   448,  1551,   471,   608, -2540, -2540,  1458,  1354,
   47183, 42503,  1624,  1575,  1627,  -141, -2540, -2540, -2540, 49040,
   -2540, 42503, 42503, 47651, 48119, 30803, 42503, 30335, -2540, -2540,
   -2540, -2540, 42503,   834, 42503,  5395, -2540, -2540, -2540,   161,
   -2540, -2540, -2540, -2540, -2540, 42503, 42503, -2540, -2540,   161,
   42503, 42503,   161, -2540,  1471, 42503, 42503, 42503, 42503,  1493,
   42503, 42503,   -56,   -56,  1561, -2540, 10369,  1356, -2540, 11355,
   11355, -2540, 11355,  1531, -2540,   650, -2540,  1572,    35,  1412,
   38759, 38759, 42503,   877, -2540, -2540, -2540, -2540, -2540, -2540,
   30335,  1369,  1370,  1704, -2540,  3546,  1709, 32675,   593,   657,
    1413, -2540,   652, 11355,  1596, -2540, -2540,  1584, 11355,   667,
    1379,    73,   677, -2540, -2540,  1384,  1300,  1394,  1400,  1385,
    1386, -2540,   729, 49040,  1766,    93,  1389,  1395,  1432,  1229,
      -7,  1331,   156, -2540,   245, -2540,  1592,   141, -2540,  1608,
     786,  1840, -2540, -2540, -2540, -2540, -2540, -2540, -2540,   730,
   20080, -2540, -2540,  1842,   426,  1842,   619, -2540, -2540,  1842,
   -2540,  1842, -2540, 28020, -2540, 11848, -2540, 49040, -2540,   758,
   -2540,  1396, 11355,    24, -2540, 28548,   760, 11355,  1397,  1398,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,  1401,
    1721, -2540,  1402,  1404,  4917, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,  1407,
    1405, 28668,  1408, 15792, 15792,  7411,   993, -2540, 15792,  1410,
   -2540, -2540,   762, 28502,  1315,  1414, 28820, 10862, 11355, 10862,
   10862, 28849,  1315,  1418, 28895, 42503, -2540, 13327, -2540, -2540,
   -2540, 11355, 38759, -2540, 11355,  5741, -2540, -2540, -2540,  5342,
    5342,  5342,  1094, -2540, -2540, -2540,  1427, -2540, 15792, 15792,
   -2540,   922,  1606,  7411, -2540, -2540,  1732, -2540,   798, -2540,
    1423, -2540, -2540,  2723, -2540, 24773, 29214, 11355,   132, -2540,
   11355,  1325, 11355,  1475,  5342,  5342,  5342,   162,   162,    94,
      94,    94,   711,   190, -2540, -2540, -2540,  1424,  1426,  1428,
    1620, 29196,  1157, 11355, -2540, 29196,   659,   800, 38759,  2981,
    3001,  4296, -2540, -2540, -2540, 18673,  1455,   -58,  1523,  1455,
    1766,  2150, -2540,   549, -2540, -2540, -2540, 29196, -2540,  1056,
   18673,  1470,  1482,   295, 21487,  1648, -2540, 42503, -2540, 42503,
   -2540,   -23,  1444, -2540, 11355, -2540, -2540,  3392,  1457,  1651,
    1655,   906,   906,  1178,  1656, -2540, -2540,  1510, -2540, 11355,
    1351, -2540,  1358, -2540, -2540, -2540, -2540,  1439, -2540, -2540,
    1698, -2540, -2540, -2540, -2540,  1533,  1241, 11355,  1677, -2540,
      70,  1456,  1793,  -133,  1750, 42503, -2540,  1668, -2540,   702,
    1796,   141,  1803,   141, 30335, 30335, 30335,   784, -2540, -2540,
     426, -2540, -2540,   795, -2540,   286, -2540, -2540, -2540,  1557,
     797,  1241,  3546, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
     199,   873,  1241,  1562, -2540,  1563, -2540,  1566,   927,  1241,
   -2540, -2540,  1477,  1485,  1486, 11848, -2540, -2540, 29196, 29196,
   29196,  1489, -2540,   158, -2540, 42503, -2540, -2540, -2540,  1531,
   38759,  1492,   786, -2540,   681, -2540,   426, 42503, 38759, 38759,
   38759, -2540, -2540, -2540,  1494,  1499, -2540, 49040,   -72,  1706,
    1702, 42503,  1535,  1236,  1949, -2540, 29196,  1837, 38759,   807,
   -2540, -2540, -2540, -2540,  1766, -2540, -2540,   294,   294, -2540,
   42503, -2540,  1506, -2540,  1511, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540, -2540, -2540, 42503, -2540,  1847,  1056,
   -2540, 30335, -2540, 33143, -2540, -2540, -2540, -2540,   426, -2540,
     426,  1730, 42503, 26616,   426,   426, -2540, -2540, -2540, -2540,
   29052, 11355, -2540,  1863, 49040, -2540, 25249, -2540, -2540, -2540,
   11355, -2540, -2540, 11355, -2540, 24773, 11355,  1839, -2540,  2001,
    2001,  5023, 49040, 15792, 15792, 15792, 15792,   586,  1133, 15792,
   15792, 15792, 15792, 15792, 15792, 15792, 15792, 15792, 16764,   261,
   -2540, -2540, 11355, 11355,  1851,  1839, -2540, 49040,  1526,  1315,
    1528,  1529, 11355, -2540, 49040,   837,  7411, 29167, -2540,   475,
   25267, -2540, 29196,  2150, 11355,  3968,  4077, 11355,   849, 11355,
    1848, -2540, -2540,  1532, -2540, -2540, 49040, 11355,  1530,  3250,
   15792, 15792,  3663, -2540,  3678, 11355,  7411, -2540,  1561,  1576,
   23832, -2540,  1625,  1625,  1625,  1625, -2540, -2540, 38759, 38759,
   38759, 19142,  1854, 18204, 41099,  1538,   120, -2540, 41099, 41567,
   -2540,  1550, -2540,   475, 11355,  1850,  1536,  1468,  1850,  1542,
   -2540, -2540,  1544,  1538, 11355,  1697, -2540, -2540, -2540,  1609,
   -2540,   850, -2540,  1957,  1697, -2540,   856, -2540, 23363,  1470,
   11355,   475, -2540,  1554, -2540,  1457,   123, -2540, -2540, -2540,
    1762, -2540, -2540, -2540, 38759, -2540, 42503, 25285,  1897, -2540,
   42503, 42503, 42503, -2540, 42503,   875,   533,  1560, -2540,   533,
    1878,   202,  1236,   173,  2806,   -44, -2540, -2540, -2540,  1633,
   42503, -2540, 42503, -2540, -2540, -2540, -2540, -2540, 30803, -2540,
   -2540, -2540, 30335, 24304, 30335, 42503, 42503, 42503, 42503, 42503,
   42503, 42503, 42503, 42503, 42503, -2540, -2540, -2540,  1561, -2540,
   -2540, -2540,  -125, -2540, -2540,   158,  1564, 32675,  1413,  1669,
   42035,  1565,  1570, -2540,   876,  3546,  1569,  2021, -2540,   593,
   32675, -2540, -2540, -2540,  1979, -2540,   389,   189, -2540, -2540,
    1056, 42503,  1632, -2540,  1300,  1579, -2540, -2540,  1300, 49040,
   -2540, -2540,   141, 38759, -2540,   885, -2540, -2540, -2540, -2540,
   42503,  1580, -2540,  1580, -2540, -2540, 11355, 29196, -2540,  1578,
   -2540, 29196, 25313, -2540, 29196,  1851, -2540,   180,   180,   180,
    3092,  1906,   418,  1587,   180,   180,   180,   214,   214,    78,
      78,    78,  2001,   261, 29196, 29196, -2540, -2540,  1591, -2540,
   -2540, -2540,  1315,  1593, -2540,  5499, -2540,   886, 42503, -2540,
   -2540,   282, 11355, 11355,   922, -2540, 29402, 11355, 49040,   918,
     922,   221, 11355,  4286,  4387, 11355, 11355,  3803, 25331,  1594,
   11355, 49493, -2540, -2540, 38759, 38759, 38759, 38759, -2540, -2540,
   -2540, 41099, 41567,  1588, 17734,   120,  1603, 38759, -2540,  1683,
    1614, 18673,  1875,  1806, -2540, 18673,  1806,   832,  1806,  1882,
    1683, 22425, -2540,  1683,  1615,  1812, -2540,   518, 29196,  2050,
    1926,   426, -2540,  1926,   426, -2540, 29196,  8397, -2540,  1056,
    1063, 42503,   475,   -53, -2540,  1634, 42503, -2540,  1697, 29196,
   24773, -2540, -2540, -2540, -2540, -2540, -2540, -2540, 42503,   919,
   -2540,   932,   533, -2540,  1658, -2540,   184,  1913,    52, -2540,
   30335,  2058,   311, -2540,  1929,  1859, -2540,   161, -2540, 11355,
     311,  1860,   198, 42503, -2540, -2540,  3272, -2540, 49040,   141,
     141, -2540, -2540,  1622,  1630,  1643,  1644,  1645,  1652,  1657,
    1659,  1661,  1666,  1667,  1670,  1672,  1673,  1674,  1676,  1679,
     902,  1681, -2540,  1682,  1554,  1687,  1688,  1690, 49961,  1693,
    1695,  1696,  1699,  1700,   768,   858, -2540, -2540, -2540, -2540,
   -2540, -2540,   782,  1703, -2540,  1647, -2540, -2540,  1724, -2540,
    1729, -2540, -2540, -2540, -2540, -2540,  1654,   983,   160, 42503,
    1705,  2084,  1873,  1671, -2540,   426,  1413, -2540, 32675,   845,
     185,  1702, -2540,   166,  1535, -2540,  2039,  1737,  1868, 42503,
    1707, -2540, -2540, -2540,  2113, -2540, 33143,  1580, 29196, -2540,
   -2540, -2540, 15792,  1987,  1708, 49040, -2540, -2540, -2540, 11355,
   -2540,   922,   922, 29402,   938, -2540,   922, 11355, 11355,   922,
     922, 11355, -2540, -2540, 25401,  1889, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, 31271, 41099,  1710, -2540, 35951, -2540, -2540,
   42503,   120, 18673, -2540, -2540,  1502, -2540, 18673,  1976, -2540,
   18673, -2540, 42503,  1711, -2540, 42503, -2540, 13820, 11355,  1748,
   -2540,  1748, -2540,  1203, -2540,   295, -2540, -2540,  2114, 19611,
    2070, 11355, -2540, -2540,  1713,   533, -2540,  1877,  1658,  1715,
   -2540, -2540, -2540, -2540, -2540, -2540, -2540,   942,  1718, 42503,
   42503, 15792, -2540,   311,   665,   171, -2540,  1991, 38759,  1658,
   -2540, -2540, -2540, -2540,  2094,  2173,  2062, -2540, -2540, 29196,
   -2540, -2540,  1766,  1766, -2540, -2540,  2139, -2540, -2540, -2540,
   -2540,   782,   397, 24304, 42503, 42503, -2540, -2540, -2540,  -125,
    2092,   946,   593,  1056,  2065, 32675, -2540,  2179,  1728, 42503,
    1535,   751,   751, -2540,  1870, -2540,  1871, -2540, -2540,   219,
   -2540, 38759, -2540, -2540, 19611,  1056, -2540,  3110, 15792, 49040,
     950, -2540, -2540,   922,   922,   922, -2540,  2168,  1561, -2540,
     952,  2188, -2540, 42503,   -50,   -68,  1738,  1739, -2540, -2540,
     959, -2540, 11355,  1741, -2540, -2540, 18673,  1502,   961, -2540,
   49040, 42503,   965, 49040,  6918,  1740, -2540, -2540, 29196, 29196,
   42503,  1800,  1800,  1798, 42503, 11355, -2540,   971,  2165,    59,
      26, 29196, -2540, 38759, -2540, 30335, -2540,   533, -2540, 30335,
   11355, -2540,   152,  3092,  2203, -2540, -2540, -2540, -2540,  1658,
     786, -2540, -2540,  2056, -2540, 42503,  1813,   452,  1827, -2540,
   -2540, -2540,   983,   426,  1413,  1702,  1737, 38759,  1056,   593,
     389, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540, -2540,
   -2540, -2540, -2540, -2540,  2178,  1965,  2181,  1632,   991,  3110,
     998, -2540, 11355,   333,  1550, 31271,  1764, -2540,  1007, -2540,
   -2540, -2540, -2540, -2540, 42503,   947, -2540, 29196, 42503, -2540,
   -2540, -2540, 42503,  2139,  1015, -2540, -2540, 13820,  1771, -2540,
    2219,  1907, -2540, -2540,  1056, -2540, 25631,  1455, 19611, 42503,
   42503, 42503, -2540,  1898,   786,   533,  1019, -2540,  1787, -2540,
   25678,  1997, -2540,  2083, -2540,  2028,  1784, -2540, 11355, -2540,
    1861, -2540, -2540, -2540,  2240, -2540, -2540,  1795,  1737,  1702,
    1535,  2002, -2540,  2004,  1801,  1413, -2540,  1315, 14313, 14313,
    1799, -2540, -2540, 42503, -2540,  1020,  1804,  1033, -2540, -2540,
   -2540, -2540, 42503,  1807, 35951, -2540,  2165, -2540, -2540, -2540,
     236, -2540,   236, 23363,  2028, -2540, 30335, 24304,  2033,  1784,
      54,  2017,  3546, -2540, 29196, -2540,  1056, 32675, -2540, -2540,
   -2540, -2540, -2540, 19611,  1455, 15299,  1936,   164, 28520, -2540,
   -2540, -2540, -2540,  1049, -2540,  2289,  1968, -2540, -2540, -2540,
   -2540, 42503,  1457,  1457,  -138,  2017, -2540, -2540,  2103, -2540,
   -2540, -2540, -2540, -2540,   179,  2026, -2540,  2027,   835,  1737,
    1064, -2540,  2274, -2540, -2540, -2540, -2540, -2540, -2540,  1820,
    1822, -2540,   236, -2540, -2540, -2540, -2540, -2540,   362,   362,
    2191, -2540,  1883, -2540, -2540, -2540,  1413, 14806, -2540,  2303,
    1457,   533, -2540,  2295, -2540,   191, -2540, -2540,  1455, -2540,
    1830, -2540, -2540, -2540, -2540, -2540, -2540
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -2540, -2540, -2540,  1731, -2540, -2540, -2540,   220, -2540,   893,
   -2540,   205,  -543,   539, -2540, -2540, -2540, -2540, -2540, -2540,
    -911,    22, -2540, -2540, -2540, -2540,    18,   262, -2540,  -427,
   -1889,  -191, -2540, -2422, -2486, -2540,  -486, -2398, -1668, -2540,
   -1101,   186, -2540, -2082, -2540,  -612,  -966,  -764,  -970, -2540,
     -14, -2540,  1328, -1094, -1757, -2381,  -485, -2540,  -557, -2540,
    -324, -1748,  -527,  -514, -2540, -2273,  -906, -2540,  1399,  -239,
   -2540,   572, -2540, -2080, -2540, -2540,   561, -2540,  -937, -2540,
   -2540, -1838,   212,  -468, -2270, -2083,   514,  -625, -2540,  -502,
     252, -1705, -2540,   595, -2540,  -448, -2540,  -487, -2118, -2540,
   -2540, -2540,  1174,  -631, -2540,  1223, -2540, -2540, -2540,    23,
   -2540, -2540, -2540, -2540, -2540,  -578,   532, -2230, -2540,   472,
   -2540, -2540, -2540, -2540,   -60,   242, -2540,     5,   150,   -22,
      -8,    13,    28,    41,  1465,  1491, -2540,  -941,   508, -2540,
   -2540,  -590,   -48, -2540,   646, -1995, -2017,  -463,   987,  1446,
    1459,  -335,  -251, -2540,  -408, -2540, -1137, -2540, -2540,   655,
    1037, -1270, -1266, -2540,   370, -2540,  -327, -2540,   119,  -434,
    1018, -2540,  1478, -2540, -2540, -2540, -2540, -1230,   693, -1929,
     392, -1930, -1818,   155,   145, -1157,  -209,    15,   398,  -295,
   -2540, -2540,  -291, -1687, -2331,  -303,  -305, -2540, -2540,  -304,
   -1102,  -681, -2540, -2540,  -416,   226, -2540, -2540, -2540,   694,
    1383, -2540, -2540,  1714,  1857, -2540,  -577,  2053,   -84,  -675,
    1185, -1073,  1191, -1062,  -750,  -699,  1192,  1194, -1227,  2905,
   -1563,  -774,     0, -2540, -2075, -1575, -2540, -2540,   -59, -2540,
    -361, -2540,  -359, -2540, -2540, -2540,  -343, -2539, -2540,  1126,
     816, -2540, -2540, -1225, -2540,  3644,   716, -2540, -1608,  -565,
    1217,  -720,  -965, -1129, -2540, -2540, -2540, -2540, -2540, -2540,
   -1558, -1753,  -610,   785, -2540, -2540,   894, -2540, -2540,  1077,
    -581,   996,  -558,  -830,   793, -2540,  -545,  1137, -2540,   755,
   -1900, -2540,   428, -2540,  1650,  -515,   235, -1000,    12, -2540,
    3175,    -1,  1512,  -846, -2076, -2540, -2540,  -479, -2187,  -912,
   -2540,  -566, -2540, -2540, -2540, -1164, -2540,   623, -2540, -1092,
   -2540,  -238, -2540, -2540, -2092, -2540, -2540, -2540, -2540, -2540,
   -2540,  -414, -2540,  -462,  -461, -2540, -2540,    14,  -787,  1262,
   -2540, -2540,   464, -2540,   917, -2540,   805, -2540, -2540, -2540,
    1127, -2540, -2540, -2540,    27,  1555,   419, -2540,  1129, -2540,
   -2540, -2540, -2540, -2540,   284, -2540, -1090, -2460,    69, -2298,
   -1175,    -6, -2540, -2540, -2540,  -525, -2540, -2063
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If zero, do what YYDEFACT says.
   If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -1700
static const yytype_int16 yytable[] =
{
     471,   985,  1230,  1124,   791,    55,   467,   637,   725,   951,
     597,   898,  1163,   586,   921,  1453,   910,  1452,   468,   541,
    1283,  1417,    43,    53,  1169,  1223,  1484,    74,    60,  1512,
     534,  2099,  2048,  1485,   567,  1487,  1608,  1488,  1285,  1541,
     731,  1121,  1406,   723,    60,   572,  2114,  2402,  2116,  1424,
    1949,  1950,   599,  1329,  1117,  1969,  2421,  1428,  2321,  1464,
    2404,  1516,  1646,  1647,  2420,  1339,   732,  2008,   785,    81,
     984,  2067,   990,   600,   994,   584,  1239,  1457,  1568,  2431,
    2095,  1149,  1150,   607,  2434,  -694,  2236,  -694,  -440,  1952,
   -1050,  1207, -1576,   475,  1210,  1995,  1996,  -443, -1047, -1047,
   -1678, -1678,   807,   615,  2275,  1293,  -686, -1587,  1161,  2292,
       3,     4,  1719, -1594, -1025, -1689, -1689, -1051,  1763,  -691,
     792, -1696, -1696,  -691,  1766, -1048, -1048,  -907,  1489, -1698,
   -1698,  1170,  2759,   944,  -907,  1299,  2597,  1409,   540,  1346,
    2042, -1050,   807, -1587,  1715, -1594,  1125, -1051, -1576,  -653,
      56,  -666,  2154,  -681,   540,  2042,   540,  1657,  2593,   576,
    1931,  1732,   947,   540,  1213,  1217,    56,  1301,  2534,  1392,
     807,   527,  1657,  1293,  2642,  2314,  1334,  -180,  1169,    56,
    -440,   648,  -180,  1582,  1330,   585,  1694,  2577,   806,  -443,
    1420,  1952,  2689,  1695,  1584,   911, -1700, -1700, -1700,  1170,
    1455,  1293,  1847,  1299,   904,  2161,  2718,   807,  1437,  1143,
     598,  1440,  1441,  2282,  1170,  2572,   705,  2191,  2193,  2538,
    2290,  2226,  2871,     3,     4,  1952,  2518,   594,    56,   594,
     589,  1299,  2560,  2731,  1412,  1301,  2786,  2761,  1149,  1150,
    1429,  1186,  1187,  1702,  1479,   553,   497,   940,  -926,  1153,
     526,  2729,   941,  1144,   592,  -926,  2333,   544,  2664,  1343,
    1217,   540,  1161,  1301,   791,   807,  2541,   934,   583,   583,
     791,  1162,  1952,  1745,  1420,  2822,  1462,  1376,  2714,  2681,
    2732,  -400,  2322,  1463,  2127,  2594,  2715,  2677,  2283,  1784,
    1436,  2762,  2701,  1293,  2103,  2435,    25,  1784,  2898,  1275,
    2595,  2531,  1204,  1170,   940,  2923,  2882,   551,  2044,  1420,
    2744,  1286,  2571,   569,  1480,   590,  2343,   942,   593,  1421,
    2284,   611,  2356,  2543,  1447,  2884, -1675, -1675,  2838,  1121,
    1231,  2591,    30,  2438,  2587,  2285,  2332,  2203,  1341,  1733,
     537,  2553,  2292,  2323,  2286,  2588,  1785,   554,  1448,  1190,
    1191,  2872,  2491,  2068,  2092,  1301,  2495,   539,   912,  1746,
     913,  1481,   608,  1442,  1341,  2554,   943,  -440,  2919,   935,
    1344,  2532,   538,    32,   942,  2892,  -443,  2592,  2287,  1377,
     791,   791,  1414,  1703,  2687,  2329,  2344,  2331,  1405,  2205,
    2207,  2208,  2209,  2210,  2861,   594,  2214,  2215,  2216,  2217,
    2218,  2219,  2220,  2221,  2222,  2223,    25,   958,  2621,  2774,
    1362,  1153,  1171,   959,  2733,  1427,  2771,  2227,  1502,  2905,
    2912,  2546,  2785,  1145,    35,  2674,  2873,  1162,  -440,  2523,
    1430,   540,  2730,  1466,  2519,  1565,   717,  -443,    25,  1467,
    2678,  1848,    30,   905,  2658,  2880,  2867,  2253,  2254,  2716,
    1608,  2436,  2451,  2481,  2763,  1897,  2042,  1335,  2042,  1331,
    2924,  1958,  2782,  2288,  2547,   676,  2345,  1898,  2068,  1572,
     649,  2885,  2853,  1779,    30,  1252,  -907,  2596,   577,  2548,
    1171,   625,  1763,    32,  2535,  2447,  1345,  2080,  1403,  1617,
    1855,  1427,  2840,  1415,  2050,  1171,    33,  2402,   623,   624,
    1443,  1836,  2695,   627,    60,  1358,  1585,   586,  1444,  1658,
    2404,  2069,  1500,   906,   719,    32,  2839,  1404,   960,   528,
      34,  1456,  2074,   790,  2010,  1453,   801,  1146,    33,  2658,
     476,  1164,   595,  1164,  1734,  1696,   793,  -440,   794,   591,
    1147,  2140,  2141,   787,   619,   579,  -443,  2453,   620,   471,
     471,   952,    34,  1165,  2622,  1165,    60,  1586,   901,  2611,
     599,  1967,  1117,  2631,  1172,  2052,   529,  1166,  2635,  1168,
    2525,  2637, -1050,   471, -1576,  2549,  -440,  1322,  -440,  1893,
     479,   600,  1513,  1514,  1171,  -443,  1509,  -443,  -686, -1587,
    2578,   915,  2536,    55,   619, -1594, -1025,  -926,   620, -1051,
    1836,  -691,  2784,  1268,  1755,  2128,   932,  2899,   602,   717,
      43,    53,  1033,   471,  1118,    74,    60,  1717,  2790,  2789,
    1288,   923,  1447, -1050,  2913, -1587,    56, -1594,   940, -1051,
   -1576,  1151,   914,  1155,    85,  -681,  1337,   480,  1720,  1221,
    1222,   587,  1319,  1320,  1321,  1322,  1448,  1206,  2522,  2335,
    2621,  -180,  -180,  2798, -1700, -1700, -1700,    81,  1962,  1963,
    1964,  1965,  1966,  1967,  1666,  1570,  1550,   961,  1317,  1318,
    1319,  1320,  1321,  1322,   601,  1813,  2562,  2563,    56,   585,
    1569,  2799,  1275,  2658,  2157,  1816,  1576,   719,  1819,  2057,
    1667,   791,  2454,  1534,  1964,  1965,  1966,  1967,   942,  1622,
    1624,  2914,  1632,  2844,  1570,  1121,  2042,  2739,   633,   527,
    2042,  1379,  2524,   717,  2581,  2211,  1769,   962,   598,  1286,
    1608,   963,  1293,   471,  2058,  2100,   723,  1533,  2915,   588,
     645,  2336,  1654,  1537,  1221,  1222,  1209,   643,    56,  1962,
    1963,  1964,  1965,  1966,  1967,  1164,   708,   943,  1570,    82,
     964,  2402,  1299,  1542,  2588,   785,  -486,  1380,  1570,   728,
    1121,  -486,  2123,  1916,  2404,   795,  2240,  1165,  2658,  2029,
    2030,   646,  1544,  2667,  1117,  2124,   796,   807,  2702,  1899,
    1901,  2174,  2675,   790,  1301,   618,  1914,  2178,  1226,   790,
    1033,   719,    86,    83,  1226,  2337,  1283,  2338,  1429,  1668,
      87,  1379,  1164,  1420,  1669,  1871,   484,   471,   485,  1670,
    1989,  2051,   647,  1423,  2918,   583,  1381,   965,   650,  1347,
      60,  1770,  1660,  1812,  1165,  2862,  -486,  2863,   651,  2703,
    1900,  1902,  1903,   488,   471,    88,  2101,  2704,  1166,  1617,
    1617,  1429,  1453,   586,  1617,  2893,  2894,  1380,  1215,  1678,
    2212,  1216,  2676,   705,   471,   471,   471,   958,   471,   471,
    2213,  1805,  1546,   959,  1382,  1776,  2705,   807,  1521,  1287,
    2138,   971,  1832,  1833,  1834,  -486,   729,  2249,  1290,  2688,
    1882,   471,    89,  1921,  1617,  1617,  1490,   717,  1922,  2607,
     972,  1338,  1811,  2921,  1642,   797,  1643,  2910,  2074,   790,
     790,  1904,  1348,  1905,  1226,  1226,  1907,  2765,  2042,  2129,
    2078,  1822,   799,  2071,  1451,   807,  1829,  2042,   629,   708,
     630,  2769,  2042,  1383,  1117,  2042,   800,  2000,  1370,  1371,
    1292,  1375,   471,  1293,  2780,  2706,   471,   471,  1923,  1164,
     973,  1490,    56,  1879,  2042,   932,  2707,   471,  1671,   600,
     600,  2624,   600,  2001,  1382,  1356,  2625,  1458,  1357,  1672,
     619,  1165,  2162,  1299,   620,   719,  1814,  2169,   960,  1359,
   -1700,  1817,  1360,  1679,   801,  1168,    25,  1920,  2673,  1255,
     802,  1924,   619,  1925,  1429,   961,  1340,  1680,  1430,  1648,
    1033,  1538,  1681,  2589,  1360,  1301,  1854,  1033,   924,   638,
    2283,   806,  1454,   619,  1952, -1025,   638,   620,  2444,  1953,
    1954,  1955,    30,  1383,   903,  1277,    25,  1978,  1033,  1980,
    1981,   899,   900,   708,   902,   791,   909,  1682,   974,  2042,
     918,  1430,  2284,  1429,   639,   631,   925,   632,   791,  2102,
    2103,   639,  1868,  1564,  1869,  2719,  1565,  2497,  1484,  1427,
     479,  1566,    30,    32,  1567,  1485,  2286,  1487,  2022,  1488,
    2023,  2042,  1632,  1979,  1632,  1632,    33,  2002,  2104,   640,
    2817, -1096,  2003,   717,   717,  1728,  2150,   975,  1209, -1673,
   -1673,  2264,  2265,  2266,  2267,   976,   598,   598,   717,   598,
      34,   927,  1427,    32, -1700,  1608,  1774,   977,  1998,  1360,
    1461,   937,  1292,   939,    35,  1293,    33,   480, -1700,  1429,
    1294,  1295,  1296, -1700,   928,  1787,   641,   961,   958,  2464,
    1985,   930,  1118,   641,   959,   931,  2187,  2046,   978,  2496,
      34,  2499,  1033,  2708,  2354,  1299,  2709,  2347,  1844,  2911,
    1875,  1845,  1300,  1565,    35,   471,  1159,  1160, -1700,  2126,
    2042,   719,   719,  2501,  2330,  1880,  2504,  2881,  1360,   583,
    2111,   482,  2113,  1429,   938,  1883,   719,  1301,  1567, -1674,
   -1674,   963,  1683,   980,  1430,  2288,  2417,  2895,   953,  1617,
    1617,  1617,  1617,  2042,  1956,  1617,  1617,  1617,  1617,  1617,
    1617,  1617,  1617,  1617,  1617,   981,  2346,   708,  2355,  2024,
     964,  2025,   955,  1310,    25,  1957, -1676, -1676,   956,   717,
     790,  2004,  2176,  2177,   710,   983,   957,  1889,  1910,  1891,
    1890,  1911,  2005,  1430,   969,  2130,  1118,  2148,   970,   960,
     787,  2925,  2312, -1677, -1677,  1427,  1617,  1617,   987,   471,
      30,   471,   991,    60,   471,   471,  1928,   625,  1935,  1360,
    1971,  1360,  1122,  1360,   471,  1591,   471,   471,   471,   471,
     471,   471,   471,  1927,   623,   624,  1302,   965,  2042,   627,
      60,  1128,  2117,  1123,  1958,  2118,   484,  1126,   485,  2134,
    1303,    32,   471,  2121,  1427,  1304,  2122,   719,   471,   471,
     471,   471,  1118, -1700,    33,  2173,   471,   471,  1360,  1430,
     487,   471,  1130,   488,  1131,   471,  1305,  1306,   471,   471,
     471,   471,   471,   471,   471,   471,   471,  1138,    34,   471,
    1307, -1679, -1679,  2904,   471,  2234,  2610,   471,  1209,   471,
    1140,  1033,    35,    90,  1118,   717,   474,  2245,  2310,  1147,
    1360,  2311,   525,  1142,  2315,  1550,  1721,  2316,  2074, -1680,
   -1680,  1154,   552,  1430,   471,  2515,   565,  1151,  1308,  2396,
    1427,  1309,  1157,  2334,  2426,    56,  1845,  1845, -1681, -1681,
    1736,   915,   471,  2445,  2458,  1310,  2446,  2459,   961, -1682,
   -1682,   471,   471,   708,   708,  1155,  2354,   710,   791,  1158,
     958,  2526,    56, -1700, -1683, -1683,   959,  1174,   708,  1175,
    1317,  1318,  1319,  1320,  1321,  1322,  2465,  2527,  1570,  1567,
    1845,  1180,  1181,   719,  1427,    25,  1177,  2232,  1205,  1118,
    2528,  1118,    25,  1845, -1684, -1684,  2612,  2182,   988,  1567,
    2668,  2486,   963,  2669,  2694, -1685, -1685,  1845,  2721,   717,
    2724,  1567,  1208,  2725,  1535,  2486,  1536,  2736,  1211,  2741,
    1209,    30,  2742,  2745,  1664,  1212,  2742,  1214,    30,  2757,
    1033,   989,  2758,   471,   471,  1312,   471,  1959,  1960,  1961,
    1232,  1962,  1963,  1964,  1965,  1966,  1967,  1186,  1187,  2795,
    2720,   958,  2758,   717,  1118,  2297,  2796,   959,  1242,  1567,
    1570,   710,    32,  1243,   958,  2804,   592,   471,  1209,    32,
     959,   960,   471,  2810,  1872,    33,  2742,  2825,  2854,  -487,
    2826,  2855,    33,  1245,  -487,    56,   958,   719,   469,   708,
    1247,  2857,   959,   498,  1209,  1764,  1765,   498,   965,    34,
   -1686, -1686,  -657,   543,   498,   548,    34,  2888,   548,  -664,
    2742,   548,   574,    35,   790,   498,   498,  1250,  2416,  1226,
      35,  2443,  2906,  1919,  1252,  2758,  1805,   790,  2405,  1033,
     593,   719,  1226,  1787,  -654,  1313,   471,  1251,  1314,  1315,
    1316,   471,  1317,  1318,  1319,  1320,  1321,  1322,  1253,  -487,
   -1687, -1687,  -655,  2558,  1254,  1190,  1191, -1688, -1688,    35,
     548,  1256,   960,   586,  1257,  2282,  1258,   574,   498,   574,
     574,   574,  2074, -1690, -1690,   960,  1260,   471,   471,   471,
   -1691, -1691,   471,  2692,  1292, -1692, -1692,  1293, -1693, -1693,
    1261,   471,   471,   471,   471, -1694, -1694,   960,  -487,  1262,
    2199,   471, -1695, -1695,  1263,   471,  -658,   594,   471, -1697,
   -1697,   586, -1699, -1699,  1264,   708,  1780,  1299,  2206,    56,
     961,  -656,   471,   471, -1700,  1265,  1788,   471,  1791,  2187,
    1266,  1802,  1469,  1470,  1267,   710,  1268,  1806,  1272,  1808,
    2283,   471,  1284,  2228,   471,  1327,   471,  1333,  1617,  1301,
    2233,  1815,  -533,  -533,  1188,  1189,  1818,  1190,  1191,  1334,
    1823,  1824,  1825,  1826,  1335,  1830,  1831,   471,  -537,  -537,
     992,  1363,  2284,  1350,   963,  -536,  -536,  1163,  1369,   471,
    1352,  1354,   586,   941,   943,  2040,  1121,  2285,  1399,  1401,
    1407,  1425,  1426,  1427,   471,  1432,  2286,   468,  2567,  2568,
    2040,  1570,  1433,   993,   625,   610,  1434,   613,   471,   617,
    1438,   961,   468,  1445,  1446,  1450,  1460,  1465,  1997,   708,
    1472,   623,   624,   471,   961,  1473,   627,    60,  1477,  1482,
    2287,  1483,  2513,  1490,  1491,  1277,  1497,  1617,  1493,  1496,
    1499,   471,  1503,  1508,   595,   807,   961,  1515, -1700,  1517,
    1518,  2632,  1524,   717,  1528,  1525,  1529,  1563,  1118,  1118,
    1118,  1775, -1700,   708,  1530,   963,  1531, -1700,  1572,  2120,
     965,  1577,  1293,  1637,  1820,  1639,  1360,  1644,   963,  2396,
    1656,  1641,  1663,  1277,  1674,  1677,  1675,  1698,  1699,  2399,
    1715,  1722,  1737,  1730,   964,   593,  1827,  1757,  1729,  1033,
     963,  1664, -1700,  1756,  1617,  1744,  1759,  1821,  1758,  1782,
    1781,  1777,  2143,  1783,  1837,  2288,   594,  2017,  1842,  1846,
     717,   710,   710,  1858,  1850,  2153,  1856,  1857,  1859,  1828,
    1877,   719,  1873,  1878,  1885,  2034,   710,  1881,   717,  1884,
    1886,  1906,  1908,  1887,  1888,  2442,  1909,  1895,  1917,    56,
    2034,  2015,  1929,  1896,   585,  1937,  1938,  1310,  1940,  1939,
    1941,   965,  1942,   717,  1945,  1944,  1948,  1994,  1970,  1999,
     717,  2044,  1976,   711,   965,  1118,  1983,   790,  1453,  2020,
    2006,  2016,  1226,  2018,  1872,  2019,  2054,  2188,  2056,  2189,
    2070,   791,   717,  2194,  2195,   471,   965,  2063,   719,  2076,
    2084,  -538,  2633,  2085,   471,  -539,  2081,   471,  2082,  2086,
     471,  2088,  2091,  2090,  2094,  2110,   719,   471,   471,   471,
     471,  2097,  2112,   471,   471,   471,   471,   471,   471,   471,
     471,   471,   471,  2125,   586,  2135,   471,   471,  2131,  2132,
    2259,   719,  2133,  2136,  2137,  2139,   471, -1700,   719,  2147,
     471,  2164,  2159,  2163,  2167,  2170,  2171,   710,   471,   574,
    2160,   471,  2180,   471,   586,   635,  2183,  2181,   636,  2190,
     719,   471,   574,  2198,   471,   471,  1973,   498,  1551,   471,
     471,   586,  1952,  1972,  2229,  2247,  2230,  2231,  2251,  2248,
    2027,  2273,  2260,  2295,  2301,   471,  2299,   471,  2723,  2281,
    2304,  2040,  2305,  2040,   636,   498,   498,  2307,   471,   717,
    2313,  2320,  2324,   468,  2309,   468,  2328,  2340,   471,  2342,
    2358,  2419,  1552,  2424,  2566,  2775,  2428,  2429,  2433,    56,
    2671,  2425,  2439,  2396,   471,  2441,  2449,   896,   896,   548,
     548,  1845,   548,  2452,  2455,  2483,   711, -1700,  1553,  2456,
    2487,  2457,  2473,   574,  1317,  1318,  1319,  1320,  1321,  1322,
    2492,  2484,   498,   708,  2493,   717,  1554,  2500,  2506,  2768,
    1555,  2490,  2505,   574,  2507,  2508,  2166,  2529,  2728,  2533,
    2521, -1047,  1118,   710,  2556,   574,  1118,  2403,  1118, -1673,
    2583,  1556,  2401,  2573,  1557,  2538,  2728,   628,  2557,  2561,
    2574,  2539, -1674, -1675, -1676,  2575,  1277,  2584,  1558,  2824,
     642, -1677,  2576,  2540,  2143,  2598, -1678,  2601, -1679,  2605,
   -1680,   574,   574,   574,  2608, -1681, -1682,  2797,  2585, -1683,
     708, -1684, -1685, -1686,   717, -1687,  1277,  1580, -1688,   540,
   -1690, -1691,  2541,   719,  2542,  2437, -1692, -1693,   708, -1694,
     711,  2271, -1695,  2274, -1696, -1697,  2599,  2617, -1698, -1699,
     471,  2636, -1048,  2582,  2604,  2609,  2650,  2623,  2641,  2654,
    2660,  2662,  2665,   708,  2663,  2670,  2777,  2679,  2682,  2683,
     708,  2684,  2685,  2693,  2697,  2698,  2699,   710,  2712,  2713,
    2878,   908,  2722,  2807,  2726,  2734,  2735,  1559,  2738,  2543,
    2751,  2747,   708,  2754,   713,  1560,   471,   471,  2759,  2773,
    2776,   471,   719,  2778,  2781,  2791,   471,  2792,  2793,   471,
     471,  2803,  -452,   954,   471,  2813,  2544,  2814,  1178,  1179,
    2768,   710,  2812,  2827,  2823,  -452,  2678,  2829,  2830,  2399,
    -452,  2832,  1178,  1179,   717,   471,  2836,  1561,  2835,   471,
    2819,  2040,  2837,  2883,  2841,  2040,  2842,  2852,  2843,  1133,
    1135,  1137,  2856,   468,  2261,  2868,  2874,   468,  2889,  2897,
    2510,   471,  2890,  2512,   717,  2900,  2902,  2907,  2908,  2909,
    2898,  2899,  2920,  1244,  2514,  2516,  -452,  2922,  2926,   929,
      56,  2326,  2545,  2361,  2653,  2357,  1807,  2546,  2108,  2517,
    2317,  2818,  1180,  1181,  1118,  -452,  2743,  2864,  2564,  2743,
    1620,  2427,  2917,   471,  2870,  2359,  1180,  1181,  2772,   708,
    2903,  2896,   719,  2711,   711,  2093,  2115,  1416,  2866,  2144,
    2406,  2407,  2408,  2409,  2410,  2411,  2412,  2413,  2414,  2415,
    2547,   717,  2432,  2901,  2362,  2089,  2865,   714,  1282,  1532,
    1511,  2145,  2403,  2184,  -452,  2548,  2606,  2418,  1342,  1361,
    2072,  1773,  1396,  -452,  1182,  1183,  1184,  1185,  1186,  1187,
    2806,  2753,  1188,  1189,  1395,   708,  2860,   713,  1182,  1183,
    1184,  1185,  1186,  1187,  2083,  1753,  1188,  1189,  2303,   574,
    2811,  1772,  2511,  2053,  2586,  2276,  1400,  2482,  2740,  2272,
    2802,  2034,  2498,  2801,  2590,  2034,   498,   498,  2809,  2808,
     790,  1581,   574,   574,  1368,  1226,   471,  1583,  1587,   719,
    1588,  2858,  2652,   471,  2859,  1620,  2851,  1704,  1991,    56,
      56,   471,   471,  2075,  1571,   471,  2013,  1932,  1841,   574,
    1419,  2011,  1714,  2047,   708,  2302,  2149,   471,  1543,  2794,
    1926,  2549,   574,  2040,  1724,  1364,   471,  1726,  2318,   717,
       0,   471,  2040,     0,   471,   468,     0,  2040,     0,   574,
    2040,   471,   471,   574,   468,     0,  1190,  1191,     0,   468,
       0,   713,   468,   471,     0,   471,     0,     0,     0,  2040,
    1190,  1191,     0,  2399,     0,   717,     0,     0,     0,     0,
    -452,   468,     0,     0,     0,   471,     0,     0,     0,     0,
     711,   711,     0,     0,     0,     0,     0,     0,     0,     0,
     714,     0,     0,     0,     0,   711,   717,  1355,     0,   717,
       0,   710,     0,     0,     0,     0,     0,  2403,     0,     0,
       0,     0,  2401,   716,     0,     0,     0,     0,     0,    56,
       0,  1366,     0,     0,   708,     0,     0,     0,  2696,     0,
       0,     0,     0,   619,     0,     0,   927,   620,   471,     0,
       0,     0,   471,   719,  2040,     0,     0,  1408,     0,     0,
    2590,     0,     0,     0,   708,     0,   468,  1192,  1193,     0,
    1435,     0,   586,     0,     0,     0,   471,     0,   710,     0,
     471,  1192,  1193,     0,   719,  1476,  2040,   719,   471,     0,
       0,  1459,  2034,   574,     0,     0,   710,  2034,   468,   471,
    2034,     0,     0,  1506,   714,     0,     0,     0,     0,  1118,
       0,     0,     0,  1118,   471,     0,     0,     0,     0,     0,
       0,   710,     0,     0,     0,     0,   711,     0,   710,     0,
       0,   708,     0,     0,     0,   713,  1523,     0,     0,     0,
    1620,  1620,  2783,     0,     0,  1620,     0,     0,     0,     0,
     710,     0,     0,  2788,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   471,   636,   636,   471,
     498,   498,     0,   498,   636,  2040,   574,     0,     0,     0,
       0,  1292,     0,    56,  1293,  1620,  1620,   468,     0,     0,
       0,   471,     0,   717,     0,     0,   716,     0,     0,     0,
       0,     0,   471,     0,     0,    56,     0,     0,  2040,  2815,
       0,     0,     0,     0,  1299,     0,     0,     0,     0,     0,
     468, -1700,   471,  1610,     0,  2672,     0,     0,     0,     0,
       0,  1492,     0,     0,  1636,     0,  2034,     0,     0,     0,
       0,     0,   471,   471,  1277,     0,  1301,     0,     0,   708,
       0,     0,   711,     0,     0,     0,     0,     0,     0,  2690,
    2691,     0,     0,   636,     0,     0,     0,   710,     0,     0,
    1118,  2403,     0,     0,  2700,     0,  2401,     0,   714,     0,
       0,     0,     0,     0,     0,   708,     0,   471,     0,   471,
       0,  2879,   971,  2040,     0,     0,   574,   896,    56,     0,
     716,     0,     0,     0,     0,   468,     0,     0,     0,     0,
       0,   972,     0,     0,  1540,  2007,   708,     0,   574,   708,
     574,   713,   713,   710,     0,     0,     0,     0,     0,  1738,
       0,  1743,     0,     0,     0,     0,   713,     0,     0,  2755,
       0,     0,     0,     0,     0, -1700,     0,     0,     0,     0,
       0,   471,     0,     0,    56,     0,   711,     0,     0, -1700,
       0,   973,  2348,   574, -1700,     0,     0,     0,     0,     0,
    2349,     0,  1419,   498,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   498,  1789,   498,  1793,     0,   498,     0,
       0,     0,   710,     0,   498,     0,   498,     0,     0, -1700,
     711,     0,     0,     0,     0,     0,     0,   636,   498,     0,
       0,     0,   636,   498,     0,     0,     0,   498,   498,   498,
     498,     0,   498,   498,     0,     0,     0,  2350,     0,     0,
       0, -1480,     0,     0,  1713,     0,    56,     0,     0,     0,
       0,     0,   574,   574,  1853,     0,     0,     0,     0,   974,
       0, -1482,     0,     0,  1310,     0,  1723,   713,  1725,  1867,
       0,     0,     0,     0,   714,   714,     0,     0,     0,     0,
       0,     0,     0,     0,   716,     0,     0,     0,     0,   714,
    1620,  1620,  1620,  1620,     0,     0,  1620,  1620,  1620,  1620,
    1620,  1620,  1620,  1620,  1620,  1620,     0,     0,   975,     0,
       0,  1768,   710,   708,     0,     0,   976,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   977,     0,
    2351,     0,     0, -1480,     0,     0,     0,     0,     0,     0,
       0,     0,   710,     0,     0,     0,     0,  1620,  1620,     0,
       0,     0,     0, -1482, -1700,  1178,  1179,     0,     0,   978,
     806,     0,     0,  1952,     0,     0,     0,     0,  1953,  1954,
    1955,     0,     0,     0,     0,     0,     0,     0,   806,     0,
       0,  1952,     0,     0,     0, -1480,  1953,  1954,  1955,     0,
    1851,  1852,     0,   713,     0,     0,     0,     0, -1480,     0,
       0,     0,     0, -1480,   980, -1482,     0,   498, -1480,   710,
     714,     0,     0,     0,  1282,     0,     0, -1480, -1482,     0,
   -1480,     0,     0, -1482,     0,     0,   981,     0, -1482,  1180,
    1181,     0,     0,     0,     0,     0,     0, -1482,     0,     0,
   -1482,     0,     0,     0,     0,     0,   983,  1610,  2352, -1480,
       0,  2353,     0,     0, -1700,     0,     0,     0,     0,     0,
       0,  1317,  1318,  1319,  1320,  1321,  1322,     0, -1480, -1482,
     716,   716,     0,     0,     0,     0,     0,     0,     0,     0,
     574,     0,     0,     0,     0,   716,     0,  2043, -1482,     0,
       0,  1182,  1183,  1184,  1185,  1186,  1187,   713,     0,  1188,
    1189,     0,  2043,     0,     0,     0,  2062,     0,     0,  2065,
     711,  1743,     0,     0,     0,     0,     0, -1480,  1292,     0,
   -1480,  1293,     0,     0,     0,     0, -1480,   710,     0,     0,
       0,     0,     0,     0,     0,     0,   714, -1482,     0,     0,
   -1482,   713,     0,     0,     0,     0, -1482,     0,     0,     0,
       0,  1299,     0,  1427,     0,     0,     0,  1476, -1700,     0,
       0,     0,     0,   710,  1957,     0,     0,     0,   971,     0,
       0,     0,     0,     0,     0,     0,     0,   711,     0,     0,
       0, -1480, -1700,  1301,     0,     0,     0,   972,     0,     0,
       0,     0,     0,     0,   710,   711,     0,   710,     0,     0,
       0, -1482,     0,  1190,  1191,     0,   716,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1476,  2026,     0,
     711,     0,   574,     0,     0,     0,     0,   711,     0,  1476,
     574,   574,   574,  1958,     0,     0,  2027,   973,     0,     0,
     714,     0,     0,   498,     0,     0,     0,     0,     0,   711,
     574,  1958,  2252,     0,     0,     0,  2027,     0,     0,     0,
    1595,     0,  2179, -1480,     0,     0,     0,     0,  1596,  1597,
    1598, -1480,     0,     0,     0,     0,     0,     0,   636,     0,
       0,     0, -1700, -1482,   714,     0,     0, -1480,     0, -1480,
   -1480, -1482,     0,   478,  1476,  1476, -1700,   479,     0,     0,
       0, -1700,     0,  2350,     0,     0,     0, -1482,     0, -1482,
   -1482,     0,     0,     0,  1192,  1193,     0,  1610, -1096,     0,
     880,   880,     0,     0,     0,   974, -1480,     0,     0, -1480,
   -1480, -1480,   716,     0,  1194,     0, -1700,     0,     0,     0,
       0,     0,     0,     0,     0,     0, -1482,     0,     0, -1482,
   -1482, -1482,     0,     0,   480,     0,     0,     0,     0,     0,
    2146,   481,     0,     0,     0,     0,   711,     0,  2155,  2156,
    2158,     0,     0,     0,   975,     0,     0,     0,     0,     0,
       0,   710,   976,  1028,  1035,     0,     0,     0,  2172,  1620,
       0,  1310,  2263,     0,   977,     0,     0,     0,     0,     0,
     574,   574,   574,   469,     0,  2043,  2280,     0,   482,     0,
    2280,  2294,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   711,     0,     0,   978,  1959,  1960,  1961,     0,
    1962,  1963,  1964,  1965,  1966,  1967,   716,     0,     0,     0,
    1743,   713,   971,     0,  1959,  1960,  1961,     0,  1962,  1963,
    1964,  1965,  1966,  1967,     0,     0,   574,     0,   498,     0,
       0,   972,  1476,  1419,  1476,     0,  1506,     0,     0,     0,
     980,     0,     0,     0,     0,     0,   483,     0,  1620,     0,
     716, -1700,   498,     0,  2360,     0,     0,     0,     0,     0,
       0,   711,   981,     0,     0,     0,     0,   498,   498,   498,
     498,   498,   498,   498,   498,   498,   498,     0,   713,     0,
       0,   973,   983,     0,     0,     0,     0,     0,     0,  1419,
       0,     0,   574,   484,     0,   485,   713,     0,     0,     0,
       0,  1292,  1419,  2073,  1293,     0,     0,     0,  2268,  2269,
    2270,   486,     0,  1506,     0,  1620,  1292,   487,     0,  1293,
     488,   713,     0,     0,     0,   574,     0,     0,   713,     0,
       0,  1028,  1476,     0,  1299,     0,     0,     0,     0,     0,
       0, -1700,     0,     0,     0,     0,     0,     0,  1248,  1299,
     713, -1700,     0,     0,   714,     0, -1700,     0,  1317,  1318,
    1319,  1320,  1321,  1322,  2325,     0,  1301,     0,     0,   974,
       0,   711,     0,     0,     0,  1259,     0,     0,     0,     0,
    2460,  1301,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1269,  1270,  1271,     0,     0,
    1278,   711,     0,  2476,     0,     0,   574,   574,   574,   574,
       0,     0,     0,  2280,  2294,     0,  2280,     0,   975,  2485,
       0,   714,  1332,  2043,     0,     0,   976,  2043,     0,     0,
    2423,     0,     0,  2503,     0,  2255,     0,     0,   977,   714,
       0,  1292,     0,     0,  1293,     0,     0,     0,     0,   896,
    2256,     0,     0,  2062,     0,     0,     0,     0,  1743,     0,
       0,     0,  1610,  1540,   714, -1700,     0,   713,   711,   978,
    1419,   714,     0,  1374,  1299,     0,     0,  1386,  1391, -1700,
   -1700, -1700,     0,     0, -1700,     0,     0,     0,     0,     0,
       0,     0,     0,   714, -1700,  2565,  1599,  1600,  1601, -1700,
    1602,  1603,  1604,  1605,  1606,  1607,  1301,     0,     0,     0,
       0,     0,     0,     0,   980,     0,     0,     0,     0, -1700,
       0,     0,     0,   713,     0,     0,     0,     0,     0,     0,
       0,  1028,     0,     0, -1700,     0,   981,     0,  1028,     0,
       0,     0,     0,     0,  2477,  2478,  2479,  2480,     0,     0,
     716,     0,     0,     0,     0,     0,   983,     0,     0,  1028,
       0,  1476,     0,     0,     0,     0,     0,     0,     0,     0,
    1867,     0,     0,     0,  1310,  2471,     0,     0,     0,     0,
       0,  2602,     0,     0,     0,     0,   711,     0,     0,  1310,
       0,     0,   713,     0,  1225,     0,     0,     0,     0,     0,
    1225,     0,     0,     0,     0, -1700,   806,     0,     0,  1952,
     714,     0,     0,     0,  1953,  1954,  1955,   716,     0, -1700,
       0,     0,   711,     0, -1700,   469,  2280,     0,     0,  2629,
       0,  2242,   498,     0,  2043,   716,     0,     0,     0,  2043,
       0,     0,  2043,     0,  2640,     0,     0,  2643,     0,     0,
       0,     0,     0,   711,     0,     0,   711,     0,     0, -1700,
     716,  2659,     0,     0, -1700,     0,   714,   716,     0,     0,
       0,     0,     0,  1028,     0,     0,     0,     0,     0, -1700,
       0,   636,   498,     0,  1289,     0,     0,     0,     0,   716,
     574,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   713,     0,     0,     0,     0,     0,  1225,     0,
    1225,  1225,     0,     0,  1310,   806,   498,   498,  1952,     0,
       0,     0,     0,  1953,  1954,  1955,     0,  1419,     0,     0,
       0,   498,   713,     0,     0,   714,     0,     0,     0,     0,
    2243,     0,     0,   574,     0,     0,  2659,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0, -1700,   498,     0,     0,     0,     0,
       0,  1317,  1318,  1319,  1320,  1321,  1322,  1225,  2043, -1700,
    1225,  1225,     0,  2643,     0,  1575,  1317,  1318,  1319,  1320,
    1321,  1322,  2750,     0,     0,  1594,   498,  1611,     0,   713,
    1623,  1626,  1631,  1634, -1700,   574,   716,     0,     0,     0,
    1957,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1645,     0,     0,     0,   636,  2680,  1649,
    1650,  1651,  1652,     0,     0,     0,     0,  1661,  1662,   574,
     711,     0,  1673,     0,     0,   714,  1676,     0,     0,  1684,
    1685,  1686,  1687,  1688,  1689,  1690,  1691,  1692,     0,     0,
    1693,     0,   716,     0,     0,  1701,     0,   469,  1705,     0,
     880,     0,  1028,     0,     0,   714,  2805,     0,     0,  1958,
     498,  2717,     0,     0,  2640,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1727,     0,     0,     0,     0,
    2659,   636,   636,   636, -1700,     0,     0,     0,     0,     0,
       0,  1317,  1318,  1319,  1320,  1321,  1322,   713,     0,  1957,
       0,     0,  1270,  1271,   806,     0, -1496,  1952,     0,     0,
       0,   716,  1953,  1954,  1955,     0,     0,     0,     0,     0,
       0,     0,   714,  2764,     0,  2640,     0,     0,     0,  2467,
       0,     0,     0,   713,  2750,     0,  2629,     0,     0,     0,
    1510,     0,     0,     0,     0,  1743,     0,     0,     0,     0,
       0,  1519,     0,  1520,     0,     0,     0,  2787,     0,  1419,
       0,     0,  1526,     0,   713,  2659,     0,   713,  1958,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1527,
       0,  1028,     0,   636,  1838,  1839,     0,  1840,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0, -1496,     0,
       0,     0,     0,     0,     0,   806,  1545,  1547,  1952,     0,
       0,     0,     0,  1953,  1954,  1955,     0,     0,  1876,     0,
       0,   716,     0,     0,     0,     0,     0,     0,     0,     0,
    2468,     0,     0,     0,     0,     0,     0,     0,  1578,  1579,
     714,     0,  1592,  1593,     0,     0,     0,     0,     0,     0,
   -1496,   716,  1959,  1960,  1961,     0,  1962,  1963,  1964,  1965,
    1966,  1967,     0, -1496,     0,     0,     0,     0, -1496,     0,
       0,     0,     0, -1496,     0,     0,   714,     0,     0,     0,
    1028,     0, -1496,     0,     0, -1496,     0,  1930,     0,     0,
       0,     0,  1936,   958,     0,     0,     0,     0,     0,   959,
       0,     0,     0,     0,     0,     0,   971,   714,  1957,     0,
     714,     0,     0,     0, -1496,     0,     0,     0,   716,     0,
       0,     0,     0,     0,     0,   972,     0,     0,     0,     0,
    1951,     0,     0, -1496,  1325,     0,     0,     0,     0,     0,
       0,     0,  1631,     0,  1631,  1631,     0,     0,     0,     0,
       0,   713,  1987,     0,     0,     0,  1990,     0,     0,  1992,
       0,  1959,  1960,  1961,     0,  1962,  1963,  1964,  1965,  1966,
    1967,     0,  1762,  1762,  1325,   973,     0,  1958,     0,     0,
       0,     0, -1496,   -39,     0, -1496,     0,     0,     0,     0,
       0, -1496,  2009,     0,     0,  2012,     0,  2014,     0,     0,
       0,     0,     1,     0,   960,     0,     0,     0,     0,  1957,
       0,     0,     2,     0,     3,     4,     0,     0,     0,     0,
       0,     0,     0,     0,  1225,     0,     0,     0,     0,     0,
       5,     0,     0,     0,  1225,     0,   716,  1225,     0,     6,
       0,     0,     0,     0,     0,     0, -1496,     0,     0,     0,
       0,     7,     0,     0,     0,     0,     0,     0,     0,  1374,
       0,     0,     8,   974,     0,     0,     0,     0,     0,     0,
       0,     0,   716,     9,  1391,    10,     0,     0,  1958,     0,
       0,     0,  1325,     0,     0,     0,     0,     0,     0,  1325,
       0,     0,  2087,    11,   714,     0,     0,     0,     0,     0,
       0,  2027,     0,   716,     0,     0,   716,    12,     0,  1892,
    1894,     0,   975,     0,     0,     0,     0,    13,     0,     0,
     976,     0,     0,    14,     0,     0,     0,     0, -1496,     0,
       0,    15,   977,    16,    17,  1225, -1496,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    18,     0,  1225,     0,
    1028,     0, -1496,   961, -1496, -1496,     0,     0,     0,     0,
       0,     0,     0,   978,     0,     0,     0,     0,     0,     0,
    1959,  1960,  1961,    19,  1962,  1963,  1964,  1965,  1966,  1967,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0, -1496,     0,     0, -1496, -1496, -1496,     0,     0,     0,
       0,     0,     0,   979,     0,     0,     0,   963,   980,     0,
       0,     0,    20,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     981,     0,     0,     0,     0,     0,   982,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2197,     0,     0,     0,
     983,     0,     0,     0,     0,  2201,     0,     0,  2202,     0,
       0,  2204,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1959,  1960,  1961,     0,  1962,  1963,  1964,  1965,  1966,
    1967,     0,     0,     0,     0,     0,     0,  2224,  2225,    21,
     716,     0,    22,     0,     0,     0,     0,     0,     0,     0,
       0,  2235,  1325,   965,     0,  2049,     0,     0,     0,  2241,
       0,     0,  2244,  1325,  2246,     0,     0,  1618,     0,     0,
      23,     0,  2250,  1325,  1325,  1325,     0,     0,    24,     0,
    2257,  2258,  1325,     0,     0,  1292,  2079,  2079,  1293,     0,
       0,     0,    25,  1294,  1295,  1296,     0,     0,     0,    26,
       0,     0,     0,    27,     0,     0,     0,     0,     0,  2298,
    1297,     0,     0,    28,     0,     0,     0,     0,  1299,  2306,
       0,     0,     0,     0,    29,  1300,     0,     0,    30,     0,
       0,     0,     0,     0,     0,  2319,  1325,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1291,     0,     0,
    1301,     0,  1292,     0,     0,  1293,     0,     0,     0,     0,
    1294,  1295,  1296,     0,    31,     0,     0,     0,     0,    32,
       0,     0,     0,     0,     0,     0,     0,  1297,  1325,     0,
    1298,     0,    33,     0,     0,  1299,     0,     0,     0,     0,
    1325,  1292,  1300,     0,  1293,  1325,     0,     0,     0,  1294,
    1295,  1296,     0,     0,     0,     0,    34,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1297,  1301,     0,  2175,
      35,     0,     0,   -39,  1299,     0,     0,     0,     0,     0,
       0,  1300,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1302,
       0,     0,     0,     0,     0,     0,  1301,     0,     0,     0,
       0,  2448,     0,  1303,     0,     0,     0,     0,  1304,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1305,
    1306,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1307,     0,     0,     0,  2461,  2462,     0,
       0,     0,  2463,     0,     0,     0,  1302,  2466,     0,     0,
    2469,  2470,     0,     0,     0,  2474,     0,     0,     0,     0,
    1303,     0,     0,     0,     0,  1304,     0,     0,     0,     0,
       0,  1308,     0,     0,  1309,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1302,  1305,  1306,  1310,     0,
       0,  1311,     0,     0,     0,     0,     0,     0,     0,  1303,
    1307,     0,   880,     0,  1304,     0,     0,     0,     0,  1325,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1305,  1306,     0,  1325,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1308,  1307,
       0,  1309,     0,     0,  2559,  1325,     0,  1618,  1618,     0,
    1968,     0,  1618,     0,     0,  1310,     0,  1325,  1311,     0,
    1325,     0,     0,     0,     0,  1325,     0,     0,  1325,     0,
       0,     0,     0,     0,     0,     0,     0,  1308,  1312,  1325,
    1309,     0,     0,  1325,  1325,  1325,  1325,     0,  1225,     0,
       0,     0,  1618,  1618,  1310,  1325,  1325,  1311,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1325,     0,     0,
    1325,     0,     0,     0,     0,     0,     0,     0,  1325,  1325,
    1325,  1325,  1325,  1325,  1325,  1325,  1325,  1325,     0,     0,
       0,     0,     0,     0,     0,  1325,     0,     0,     0,  1325,
    1292,     0,     0,  1293,     0,  1312,     0,     0, -1700, -1700,
   -1700,     0,     0,     0,  1987,     0,     0,     0,     0,     0,
       0,  1325,  2613,  2614,     0,     0,  2615,     0,     0,     0,
       0,     0,     0,  1299,     0,     0,     0,     0,  1313,     0,
    1300,  1314,  1315,  1316,  1312,  1317,  1318,  1319,  1320,  1321,
    1322,     0,     0,     0,     0,     0,     0,     0,  1943,     0,
       0,     0,  2648,  2649,     0,  1301,     0,     0,   958,     0,
       0,     0,     0,     0,   959,     0,  2661,     0,     0,     0,
       0,   971,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     972,     0,     0,     0,     0,  1313,     0,     0,  1314,  1315,
    1316,     0,  1317,  1318,  1319,  1320,  1321,  1322,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1325,  1325,  1325,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1313,     0,     0,  1314,  1315,  1316,
     973,  1317,  1318,  1319,  1320,  1321,  1322,  1292,     0,     0,
    1293,  1640,     0,     0,  1302,  1294,  1295,  1296,     0,     0,
    1325,     0,  1225,     0,     0,     0,     0,  1225,  1303,   960,
       0,     0,  1297,  1304,     0,  2238,     0,  2737,     0,     0,
    1299,     0,     0,     0,     0,     0,     0,  1300,     0,  1278,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2756,     0,     0,     0,     0,     0,     0,     0,  1307,  1545,
    1547,     0,  1301,     0,  1325,  2770,     0,     0,     0,     0,
    1325,     0,     0,     0,     0,     0,     0,     0,   974,     0,
       0,     0,     0,  1968,  1968,  1325,     0,  1618,  1618,  1618,
    1618,     0,     0,  1618,  1618,  1618,  1618,  1618,  1618,  1618,
    1618,  1618,  1618,  1968,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1310,     0,     0,     0,     0,     0,     0,
       0,  1325,     0,     0,  1325,     0,  1325,   975,     0,  1968,
    1968,     0,     0,     0,     0,   976,     0,     0,     0,     0,
       0,     0,  2648,  1325,  1618,  1618,  1325,   977,  1325,     0,
       0,     0,   500,     0,     0,     0,     0,     0,     0,     0,
       0,  1302,     0,     0,     0,     0,     0,     0,   961,     0,
       0,     0,     0,  2834,     0,  1303,     0,     0,   978,     0,
    1304,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2848,  2848,     0,     0,     0,     0,     0,
       0,  1305,  1306,  1312,     0,   501,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1307,     0,     0,  1809,     0,
     502,  1325,   963,   980,     0,     0,     0,  1545,  1547,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1225,  1292,
    2848,     0,  1293,     0,     0,   981,     0,  1294,  1295,  1296,
       0,  1810,     0,  1308,     0,     0,  1309,     0,     0,     0,
       0,     0,     0,     0,  1297,   983,     0,     0,     0,     0,
    1310,     0,  1299,  1311,   503,     0,     0,     0,     0,  1300,
       0,     0,     0,   504,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   505,     0,     0,     0,     0,
     506,     0,  2848,  1313,  1301,     0, -1700, -1700, -1700,     0,
    1317,  1318,  1319,  1320,  1321,  1322,     0,     0,   965,     0,
       0,     0,     0,     0,     0,   507,     0,     0,     0,     0,
       0,  1325,     0,     0,     0,  1325,  1325,     0,  1325,     0,
       0,  1968,  1968,  1968,  1968,     0,     0,     0,  1968,  1968,
    1968,  1968,  1968,  1968,  1968,  1968,  1968,  1968,  1325,  1325,
    1312,     0,     0,     0,     0,     0,     0,     0,   508,  1325,
       0,     0,   509,  1292,     0,  1325,  1293,     0,  1325,     0,
    1325,  1294,  1295,  1296,  1325,     0,     0,  1968,  1968,     0,
       0,  1325,  1325,     0,     0,     0,     0,     0,  1297,     0,
       0,     0,     0,  1302,     0,     0,  1299,     0,     0,     0,
       0,     0,     0,  1300,     0,     0,     0,  1303,     0,     0,
       0,     0,  1304,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1325,     0,     0,   510,     0,     0,  1301,     0,
    1325,     0,     0,  1305,  1306,     0,     0,     0,     0,   511,
       0,     0,     0,  1325,     0,     0,     0,  1307,     0,     0,
    1313,     0,     0,  1314,  1315,  1316,     0,  1317,  1318,  1319,
    1320,  1321,  1322,     0,     0,     0,     0,  1640,     0,     0,
     512,     0,     0,   513,     0,     0,     0,     0,     0,     0,
       0,   514,  1225,     0,   515,  1308,     0,     0,  1309,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1310,   516,     0,  1311,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   517,     0,     0,     0,
       0,     0,     0,   518,     0,     0,     0,  1302,     0,     0,
       0,     0,   519,     0,     0,     0,     0,     0,   520,     0,
       0,  1303,     0,     0,     0,     0,  1304,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   521,     0,     0,     0,  1305,  1306,     0,
       0,     0,  1325,     0,     0,     0,  1618,     0,     0,     0,
       0,  1307,     0,     0,     0,  1325,  1325,  1325,     0,     0,
    1325,     0,  1312,  1325,  1325,     0,     0,     0,  1325,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1308,
       0,     0,  1309,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1310,     0,     0,  1311,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1618,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1325,     0,     0,     0,     0,     0,     0,
       0,     0,  1313,     0,     0,  1314,  1315,  1316,     0,  1317,
    1318,  1319,  1320,  1321,  1322,     0,     0,     0,     0,  1993,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1312,     0,     0,     0,
       0,  1968,  1618,     0,     0,     0,     0,  1325,  1325,  1325,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1325,  1325,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1325,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1968,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1313,     0,     0,  1314,
    1315,  1316,     0,  1317,  1318,  1319,  1320,  1321,  1322,     0,
       0,  1471,     0,  1968,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1325,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1325,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1325,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   995,   803,
     540,   804,   805,   806,   807,   808,     0,     0,     0,     0,
       0,     0,     0,     0,    92,    93,    94,    95,    96,    97,
      98,    99,   996,   100,   101,   102,     0,     0,     0,     0,
     809,     0,     0,   103,   104,     0,   105,   106,   107,   997,
     109,   110,   111,   112,   810,   998,   811,   812,  1325,   117,
     118,   119,   120,   121,   122,   813,   814,   123,   124,   815,
     816,   127,  1325,   128,   129,   130,   131,   817,     0,   999,
       0,   134,   135,   136,   137,   138,  1000,   140,   141,   142,
       0,   143,   144,   145,   146,   147,   148,     0,  1001,   150,
     151,   152,   819,   820,   821,  1002,   823,   824,   825,   154,
     155,   156,   157,   158,   159,   160,   826,   827,   163,   828,
     164,     0,   165,   166,   167,   168,   169,   170,     0,   171,
     172,   173,   174,   175,  1003,     0,   176,   177,   666,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,     0,
     187,   188,   189,   190,   829,   192,   193,   194,   195,   830,
     831,   197,     0,   198,   199,   832,   201,     0,   202,     0,
     203,  1004,     0,  1005,   206,   207,   208,  1006,   210,     0,
     211,     0,   212,   213,     0,   214,   215,   216,   217,   218,
     219,  1007,   221,   222,   223,   224,     0,   225,   226,   227,
     228,   229,   230,     0,   231,  1008,   233,   234,   235,   236,
     237,   833,   834,     0,   835,     0,   241,  1009,  1010,   244,
    1011,   246,   247,   248,   249,   250,     0,     0,   251,  1012,
     253,  1013,     0,   255,   256,   257,   836,   837,   258,   259,
     260,   261,   262,  1014,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   838,  1015,   839,   285,   286,   287,   288,   840,
     289,   290,  1016,   292,   841,   842,   294,   843,   296,   297,
     298,     0,   299,   300,     0,     0,   844,   302,   303,     0,
       0,   304,   305,  1017,   307,  1018,   845,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,     0,   320,   321,
     846,   323,   324,   325,   326,   327,   328,     0,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   847,   339,   340,
     341,   342,     0,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,  1019,   358,
     359,   360,   848,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,     0,   373,   374,   375,   376,   377,
     849,   378,   379,   380,   381,   382,  1020,   384,   385,   850,
     387,     0,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,  1021,   400,   851,   402,     0,   403,   404,
       0,   405,  1022,   407,   408,   409,   410,   411,     0,   852,
     853,     0,     0,   414,   415,   854,   417,   855,   856,   419,
     420,  1023,   422,   423,   424,   425,   426,     0,     0,   427,
     428,   429,   430,   431,   858,     0,   432,   433,   434,   435,
     436,   437,   859,  1024,   439,  1025,   441,   442,   443,   444,
       0,     0,   445,     0,     0,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   860,     0,     0,     0,
       0,     0,     0,   861,   862,  1026,     0,     0,     0,     0,
     864,     0,   865,  1027,     0,     0,     0,   866,     0,   867,
     868,    91,   803,   540,   804,   805,   806,   807,   808,     0,
       0,     0,     0,     0,     0,     0,     0,    92,    93,    94,
      95,    96,    97,    98,    99,     0,   100,   101,   102,     0,
       0,     0,     0,   809,     0,     0,   103,   104,     0,   105,
     106,   107,   108,   109,   110,   111,   112,   810,   114,   811,
     812,     0,   117,   118,   119,   120,   121,   122,   813,   814,
     123,   124,   815,   816,   127,     0,   128,   129,   130,   131,
     817,     0,   818,     0,   134,   135,   136,   137,   138,   139,
     140,   141,   142,     0,   143,   144,   145,   146,   147,   148,
       0,   149,   150,   151,   152,   819,   820,   821,   822,   823,
     824,   825,   154,   155,   156,   157,   158,   159,   160,   826,
     827,   163,   828,   164,     0,   165,   166,   167,   168,   169,
     170,     0,   171,   172,   173,   174,   175,     0,     0,   176,
     177,   666,   179,   180,     0,   181,   182,   183,     0,   184,
     185,   186,     0,   187,   188,   189,   190,   829,   192,   193,
     194,   195,   830,   831,   197,     0,   198,   199,   832,   201,
       0,   202,     0,   203,   204,     0,   205,   206,   207,   208,
     209,   210,     0,   211,     0,   212,   213,     0,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,     0,
     225,   226,   227,   228,   229,   230,     0,   231,   232,   233,
     234,   235,   236,   237,   833,   834,     0,   835,     0,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,     0,
       0,   251,   252,   253,   254,     0,   255,   256,   257,   836,
     837,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   838,   283,   839,   285,   286,
     287,   288,   840,   289,   290,   291,   292,   841,   842,   294,
     843,   296,   297,   298,     0,   299,   300,     0,     0,   844,
     302,   303,     0,     0,   304,   305,   306,   307,   308,   845,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
       0,   320,   321,   846,   323,   324,   325,   326,   327,   328,
       0,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     847,   339,   340,   341,   342,     0,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,     0,   355,
     356,   357,   358,   359,   360,   848,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,    25,   373,   374,
     375,   376,   377,   849,   378,   379,   380,   381,   382,   383,
     384,   385,   850,   387,     0,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   851,   402,
       0,   403,   404,    30,   405,   406,   407,   408,   409,   410,
     411,     0,   852,   853,     0,     0,   414,   415,   854,   417,
     855,   856,   419,   420,   857,   422,   423,   424,   425,   426,
       0,     0,   427,   428,   429,   430,   431,   858,     0,   432,
     433,   434,   435,   436,   566,   859,     0,   439,   440,   441,
     442,   443,   444,     0,     0,   445,     0,    33,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   860,
       0,    34,     0,     0,     0,     0,   861,   862,     0,     0,
       0,     0,     0,   864,     0,   865,  2746,     0,     0,     0,
     866,     0,   867,   868,    91,   803,   540,   804,   805,   806,
     807,   808,     0,     0,     0,     0,     0,     0,     0,     0,
      92,    93,    94,    95,    96,    97,    98,    99,     0,   100,
     101,   102,     0,     0,     0,     0,   809,     0,     0,   103,
     104,     0,   105,   106,   107,   108,   109,   110,   111,   112,
     810,   114,   811,   812,     0,   117,   118,   119,   120,   121,
     122,   813,   814,   123,   124,   815,   816,   127,     0,   128,
     129,   130,   131,   817,     0,   818,     0,   134,   135,   136,
     137,   138,   139,   140,   141,   142,     0,   143,   144,   145,
     146,   147,   148,     0,   149,   150,   151,   152,   819,   820,
     821,   822,   823,   824,   825,   154,   155,   156,   157,   158,
     159,   160,   826,   827,   163,   828,   164,     0,   165,   166,
     167,   168,   169,   170,     0,   171,   172,   173,   174,   175,
       0,     0,   176,   177,   666,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,     0,   187,   188,   189,   190,
     829,   192,   193,   194,   195,   830,   831,   197,     0,   198,
     199,   832,   201,     0,   202,     0,   203,   204,     0,   205,
     206,   207,   208,   209,   210,     0,   211,     0,   212,   213,
       0,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,     0,   225,   226,   227,   228,   229,   230,     0,
     231,   232,   233,   234,   235,   236,   237,   833,   834,     0,
     835,     0,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,     0,     0,   251,   252,   253,   254,     0,   255,
     256,   257,   836,   837,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   838,   283,
     839,   285,   286,   287,   288,   840,   289,   290,   291,   292,
     841,   842,   294,   843,   296,   297,   298,     0,   299,   300,
       0,     0,   844,   302,   303,     0,     0,   304,   305,   306,
     307,   308,   845,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,     0,   320,   321,   846,   323,   324,   325,
     326,   327,   328,     0,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   847,   339,   340,   341,   342,     0,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,     0,   355,   356,   357,   358,   359,   360,   848,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
      25,   373,   374,   375,   376,   377,   849,   378,   379,   380,
     381,   382,   383,   384,   385,   850,   387,     0,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   851,   402,     0,   403,   404,    30,   405,   406,   407,
     408,   409,   410,   411,     0,   852,   853,     0,     0,   414,
     415,   854,   417,   855,   856,   419,   420,   857,   422,   423,
     424,   425,   426,     0,     0,   427,   428,   429,   430,   431,
     858,     0,   432,   433,   434,   435,   436,   566,   859,     0,
     439,   440,   441,   442,   443,   444,     0,     0,   445,     0,
      33,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   860,     0,    34,     0,     0,     0,     0,   861,
     862,     0,     0,     0,     0,     0,   864,     0,   865,     0,
       0,     0,     0,   866,     0,   867,   868,    91,   803,   540,
     804,   805,   806,   807,   808,     0,     0,     0,     0,     0,
       0,     0,     0,    92,    93,    94,    95,    96,    97,    98,
      99,     0,   100,   101,   102,     0,     0,     0,     0,   809,
       0,     0,   103,   104,     0,   105,   106,   107,   108,   109,
     110,   111,   112,   810,   114,   811,   812,  1627,   117,   118,
     119,   120,   121,   122,   813,   814,   123,   124,   815,   816,
     127,     0,   128,   129,   130,   131,   817,     0,   818,     0,
     134,   135,   136,   137,   138,   139,   140,   141,   142,     0,
     143,   144,   145,   146,   147,   148,     0,   149,   150,   151,
     152,   819,   820,   821,   822,   823,   824,   825,   154,   155,
     156,   157,   158,   159,   160,   826,   827,   163,   828,   164,
       0,   165,   166,   167,   168,   169,   170,     0,   171,   172,
     173,   174,   175,     0,     0,   176,   177,   666,   179,   180,
       0,   181,   182,   183,     0,   184,   185,   186,     0,   187,
     188,   189,   190,   829,   192,   193,   194,   195,   830,   831,
     197,     0,   198,   199,   832,   201,     0,   202,     0,   203,
     204,  1628,   205,   206,   207,   208,   209,   210,     0,   211,
       0,   212,   213,     0,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,     0,   225,   226,   227,   228,
     229,   230,     0,   231,   232,   233,   234,   235,   236,   237,
     833,   834,     0,   835,     0,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,     0,  1629,   251,   252,   253,
     254,     0,   255,   256,   257,   836,   837,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   838,   283,   839,   285,   286,   287,   288,   840,   289,
     290,   291,   292,   841,   842,   294,   843,   296,   297,   298,
       0,   299,   300,     0,     0,   844,   302,   303,     0,     0,
     304,   305,   306,   307,   308,   845,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,     0,   320,   321,   846,
     323,   324,   325,   326,   327,   328,     0,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   847,   339,   340,   341,
     342,     0,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,     0,   355,   356,   357,   358,   359,
     360,   848,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,     0,   373,   374,   375,   376,   377,   849,
     378,   379,   380,   381,   382,   383,   384,   385,   850,   387,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   851,   402,     0,   403,   404,     0,
     405,   406,   407,   408,   409,   410,   411,     0,   852,   853,
       0,  1630,   414,   415,   854,   417,   855,   856,   419,   420,
     857,   422,   423,   424,   425,   426,     0,     0,   427,   428,
     429,   430,   431,   858,     0,   432,   433,   434,   435,   436,
     437,   859,     0,   439,   440,   441,   442,   443,   444,     0,
       0,   445,     0,     0,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   860,     0,     0,     0,     0,
       0,     0,   861,   862,     0,     0,     0,     0,     0,   864,
       0,   865,     0,     0,     0,     0,   866,     0,   867,   868,
      91,   803,   540,   804,   805,   806,   807,   808,     0,     0,
       0,     0,     0,     0,     0,     0,    92,    93,    94,    95,
      96,    97,    98,    99,     0,   100,   101,   102,     0,     0,
       0,     0,   809,     0,     0,   103,   104,     0,   105,   106,
     107,   108,   109,   110,   111,   112,   810,   114,   811,   812,
       0,   117,   118,   119,   120,   121,   122,   813,   814,   123,
     124,   815,   816,   127,     0,   128,   129,   130,   131,   817,
       0,   818,     0,   134,   135,   136,   137,   138,   139,   140,
     141,   142,     0,   143,   144,   145,   146,   147,   148,     0,
     149,   150,   151,   152,   819,   820,   821,   822,   823,   824,
     825,   154,   155,   156,   157,   158,   159,   160,   826,   827,
     163,   828,   164,     0,   165,   166,   167,   168,   169,   170,
       0,   171,   172,   173,   174,   175,     0,     0,   176,   177,
     666,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,     0,   187,   188,   189,   190,   829,   192,   193,   194,
     195,   830,   831,   197,     0,   198,   199,   832,   201,     0,
     202,     0,   203,   204,     0,   205,   206,   207,   208,   209,
     210,     0,   211,     0,   212,   213,     0,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,     0,   225,
     226,   227,   228,   229,   230,     0,   231,   232,   233,   234,
     235,   236,   237,   833,   834,     0,   835,     0,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,     0,     0,
     251,   252,   253,   254,     0,   255,   256,   257,   836,   837,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   838,   283,   839,   285,   286,   287,
     288,   840,   289,   290,   291,   292,   841,   842,   294,   843,
     296,   297,   298,     0,   299,   300,     0,     0,   844,   302,
     303,     0,     0,   304,   305,   306,   307,   308,   845,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,     0,
     320,   321,   846,   323,   324,   325,   326,   327,   328,     0,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   847,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,     0,   355,   356,
     357,   358,   359,   360,   848,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,     0,   373,   374,   375,
     376,   377,   849,   378,   379,   380,   381,   382,   383,   384,
     385,   850,   387,     0,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   851,   402,     0,
     403,   404,     0,   405,   406,   407,   408,   409,   410,   411,
       0,   852,   853,     0,     0,   414,   415,   854,   417,   855,
     856,   419,   420,   857,   422,   423,   424,   425,   426,     0,
       0,   427,   428,   429,   430,   431,   858,     0,   432,   433,
     434,   435,   436,   437,   859,     0,   439,   440,   441,   442,
     443,   444,     0,     0,   445,     0,     0,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   860,     0,
       0,     0,     0,     0,     0,   861,   862,   863,     0,     0,
       0,     0,   864,     0,   865,     0,     0,     0,     0,   866,
       0,   867,   868,    91,   803,   540,   804,   805,   806,   807,
     808,     0,     0,     0,     0,     0,     0,     0,     0,    92,
      93,    94,    95,    96,    97,    98,    99,  1384,   100,   101,
     102,     0,     0,     0,     0,   809,     0,     0,   103,   104,
       0,   105,   106,   107,   108,   109,   110,   111,   112,   810,
     114,   811,   812,     0,   117,   118,   119,   120,   121,   122,
     813,   814,   123,   124,   815,   816,   127,     0,   128,   129,
     130,   131,   817,     0,   818,     0,   134,   135,   136,   137,
     138,   139,   140,   141,   142,     0,   143,   144,   145,   146,
     147,   148,     0,   149,   150,   151,   152,   819,   820,   821,
     822,   823,   824,   825,   154,   155,   156,   157,   158,   159,
     160,   826,   827,   163,   828,   164,     0,   165,   166,   167,
     168,   169,   170,     0,   171,   172,   173,   174,   175,     0,
       0,   176,   177,   666,   179,   180,     0,   181,   182,   183,
       0,   184,   185,   186,     0,   187,   188,   189,   190,   829,
     192,   193,   194,   195,   830,   831,   197,     0,   198,   199,
     832,   201,     0,   202,     0,   203,   204,     0,   205,   206,
     207,   208,   209,   210,     0,   211,     0,   212,   213,     0,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,     0,   225,   226,   227,   228,   229,   230,     0,   231,
     232,   233,   234,   235,   236,   237,   833,   834,     0,   835,
       0,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,     0,     0,   251,   252,   253,   254,     0,   255,   256,
     257,   836,   837,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   838,   283,   839,
     285,   286,   287,   288,   840,   289,   290,   291,   292,   841,
     842,   294,   843,   296,   297,   298,     0,   299,   300,     0,
       0,   844,   302,   303,     0,     0,   304,   305,   306,   307,
     308,   845,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,     0,   320,   321,   846,   323,   324,   325,   326,
     327,   328,     0,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   847,   339,   340,   341,   342,     0,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
       0,   355,   356,   357,   358,   359,   360,   848,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,     0,
     373,   374,   375,   376,   377,   849,   378,   379,   380,   381,
     382,   383,   384,   385,   850,   387,     0,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     851,   402,     0,   403,   404,     0,   405,   406,   407,   408,
     409,   410,   411,     0,   852,   853,     0,     0,   414,   415,
     854,   417,   855,   856,   419,   420,   857,   422,   423,   424,
     425,   426,     0,     0,   427,   428,   429,   430,   431,   858,
       0,   432,   433,   434,   435,   436,   437,   859,     0,   439,
     440,   441,   442,   443,   444,     0,     0,   445,     0,     0,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   860,     0,     0,     0,     0,     0,     0,   861,   862,
       0,     0,     0,     0,     0,   864,     0,   865,     0,     0,
       0,     0,   866,     0,   867,   868,   995,   803,   540,   804,
     805,   806,   807,   808,     0,     0,     0,     0,     0,     0,
       0,     0,    92,    93,    94,    95,    96,    97,    98,    99,
       0,   100,   101,   102,     0,     0,     0,     0,   809,     0,
       0,   103,   104,     0,   105,   106,   107,   997,   109,   110,
     111,   112,   810,   998,   811,   812,     0,   117,   118,   119,
     120,   121,   122,   813,   814,   123,   124,   815,   816,   127,
       0,   128,   129,   130,   131,   817,     0,   999,     0,   134,
     135,   136,   137,   138,  1000,   140,   141,   142,     0,   143,
     144,   145,   146,   147,   148,     0,  1001,   150,   151,   152,
     819,   820,   821,  1002,   823,   824,   825,   154,   155,   156,
     157,   158,   159,   160,   826,   827,   163,   828,   164,     0,
     165,   166,   167,   168,   169,   170,     0,   171,   172,   173,
     174,   175,     0,     0,   176,   177,   666,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,     0,   187,   188,
     189,   190,   829,   192,   193,   194,   195,   830,   831,   197,
       0,   198,   199,   832,   201,     0,   202,     0,   203,  1004,
       0,  1005,   206,   207,   208,  1006,   210,     0,   211,     0,
     212,   213,     0,   214,   215,   216,   217,   218,   219,  1007,
     221,   222,   223,   224,     0,   225,   226,   227,   228,   229,
     230,     0,   231,  1008,   233,   234,   235,   236,   237,   833,
     834,     0,   835,     0,   241,  1009,  1010,   244,  1011,   246,
     247,   248,   249,   250,     0,     0,   251,  1012,   253,  1013,
       0,   255,   256,   257,   836,   837,   258,   259,   260,   261,
     262,  1014,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     838,  1015,   839,   285,   286,   287,   288,   840,   289,   290,
    1016,   292,   841,   842,   294,   843,   296,   297,   298,     0,
     299,   300,     0,     0,   844,   302,   303,     0,     0,   304,
     305,  1017,   307,  1018,   845,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,     0,   320,   321,   846,   323,
     324,   325,   326,   327,   328,     0,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   847,   339,   340,   341,   342,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,     0,   355,   356,  1019,   358,   359,   360,
     848,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,     0,   373,   374,   375,   376,   377,   849,   378,
     379,   380,   381,   382,  1020,   384,   385,   850,   387,     0,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,  1021,   400,   851,   402,     0,   403,   404,     0,   405,
    1022,   407,   408,   409,   410,   411,     0,   852,   853,     0,
       0,   414,   415,   854,   417,   855,   856,   419,   420,  1023,
     422,   423,   424,   425,   426,     0,     0,   427,   428,   429,
     430,   431,   858,     0,   432,   433,   434,   435,   436,   437,
     859,     0,   439,  1025,   441,   442,   443,   444,     0,     0,
     445,     0,     0,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   860,     0,     0,     0,     0,     0,
       0,   861,   862,     0,     0,     0,     0,     0,   864,     0,
     865,  1501,     0,     0,     0,   866,     0,   867,   868,    91,
     803,   540,   804,   805,   806,   807,   808,     0,     0,     0,
       0,     0,     0,     0,     0,    92,    93,    94,    95,    96,
      97,    98,    99,     0,   100,   101,   102,     0,     0,     0,
       0,   809,     0,     0,   103,   104,     0,   105,   106,   107,
     108,   109,   110,   111,   112,   810,   114,   811,   812,     0,
     117,   118,   119,   120,   121,   122,   813,   814,   123,   124,
     815,   816,   127,     0,   128,   129,   130,   131,   817,     0,
     818,     0,   134,   135,   136,   137,   138,   139,   140,   141,
     142,     0,   143,   144,   145,   146,   147,   148,     0,   149,
     150,   151,   152,   819,   820,   821,   822,   823,   824,   825,
     154,   155,   156,   157,   158,   159,   160,   826,   827,   163,
     828,   164,     0,   165,   166,   167,   168,   169,   170,     0,
     171,   172,   173,   174,   175,     0,     0,   176,   177,   666,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,   190,   829,   192,   193,   194,   195,
     830,   831,   197,     0,   198,   199,   832,   201,     0,   202,
       0,   203,   204,     0,   205,   206,   207,   208,   209,   210,
       0,   211,     0,   212,   213,     0,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,     0,   225,   226,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,   237,   833,   834,     0,   835,     0,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,     0,     0,   251,
     252,   253,   254,     0,   255,   256,   257,   836,   837,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   838,   283,   839,   285,   286,   287,   288,
     840,   289,   290,   291,   292,   841,   842,   294,   843,   296,
     297,   298,     0,   299,   300,     0,     0,   844,   302,   303,
       0,     0,   304,   305,   306,   307,   308,   845,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,     0,   320,
     321,   846,   323,   324,   325,   326,   327,   328,     0,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   847,   339,
     340,   341,   342,     0,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,     0,   355,   356,   357,
     358,   359,   360,   848,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,     0,   373,   374,   375,   376,
     377,   849,   378,   379,   380,   381,   382,   383,   384,   385,
     850,   387,     0,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   851,   402,     0,   403,
     404,     0,   405,   406,   407,   408,   409,   410,   411,     0,
     852,   853,     0,     0,   414,   415,   854,   417,   855,   856,
     419,   420,   857,   422,   423,   424,   425,   426,     0,     0,
     427,   428,   429,   430,   431,   858,     0,   432,   433,   434,
     435,   436,   437,   859,     0,   439,   440,   441,   442,   443,
     444,     0,     0,   445,     0,     0,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   860,     0,     0,
       0,     0,     0,     0,   861,   862,     0,     0,     0,     0,
       0,   864,     0,   865,  1621,     0,     0,     0,   866,     0,
     867,   868,   995,   803,   540,   804,   805,   806,   807,   808,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,   809,     0,     0,   103,   104,     0,
     105,   106,   107,   997,   109,   110,   111,   112,   810,   998,
     811,   812,     0,   117,   118,   119,   120,   121,   122,   813,
     814,   123,   124,   815,   816,   127,     0,   128,   129,   130,
     131,   817,     0,   999,     0,   134,   135,   136,   137,   138,
    1000,   140,   141,   142,     0,   143,   144,   145,   146,   147,
     148,     0,  1001,   150,   151,   152,   819,   820,   821,  1002,
     823,   824,   825,   154,   155,   156,   157,   158,   159,   160,
     826,   827,   163,   828,   164,     0,   165,   166,   167,   168,
     169,   170,     0,   171,   172,   173,   174,   175,     0,     0,
     176,   177,   666,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,     0,   187,   188,   189,   190,   829,   192,
     193,   194,   195,   830,   831,   197,     0,   198,   199,   832,
     201,     0,   202,     0,   203,  1004,     0,  1005,   206,   207,
     208,  1006,   210,     0,   211,     0,   212,   213,     0,   214,
     215,   216,   217,   218,   219,  1007,   221,   222,   223,   224,
       0,   225,   226,   227,   228,   229,   230,     0,   231,  1008,
     233,   234,   235,   236,   237,   833,   834,     0,   835,     0,
     241,  1009,  1010,   244,  1011,   246,   247,   248,   249,   250,
       0,     0,   251,  1012,   253,  1013,     0,   255,   256,   257,
     836,   837,   258,   259,   260,   261,   262,  1014,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   838,  1015,   839,   285,
     286,   287,   288,   840,   289,   290,  1016,   292,   841,   842,
     294,   843,   296,   297,   298,     0,   299,   300,     0,     0,
     844,   302,   303,     0,     0,   304,   305,  1017,   307,  1018,
     845,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,     0,   320,   321,   846,   323,   324,   325,   326,   327,
     328,     0,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   847,   339,   340,   341,   342,     0,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,     0,
     355,   356,  1019,   358,   359,   360,   848,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,     0,   373,
     374,   375,   376,   377,   849,   378,   379,   380,   381,   382,
    1020,   384,   385,   850,   387,     0,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,  1021,   400,   851,
     402,     0,   403,   404,     0,   405,  1022,   407,   408,   409,
     410,   411,     0,   852,   853,     0,     0,   414,   415,   854,
     417,   855,   856,   419,   420,  1023,   422,   423,   424,   425,
     426,     0,     0,   427,   428,   429,   430,   431,   858,     0,
     432,   433,   434,   435,   436,   437,   859,  1835,   439,  1025,
     441,   442,   443,   444,     0,     0,   445,     0,     0,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     860,     0,     0,     0,     0,     0,     0,   861,   862,     0,
       0,     0,     0,     0,   864,     0,   865,     0,     0,     0,
       0,   866,     0,   867,   868,    91,   803,   540,   804,   805,
     806,   807,   808,     0,     0,     0,     0,     0,     0,     0,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     100,   101,   102,     0,     0,     0,     0,   809,     0,     0,
     103,   104,     0,   105,   106,   107,   108,   109,   110,   111,
     112,   810,   114,   811,   812,     0,   117,   118,   119,   120,
     121,   122,   813,   814,   123,   124,   815,   816,   127,     0,
     128,   129,   130,   131,   817,     0,   818,     0,   134,   135,
     136,   137,   138,   139,   140,   141,   142,     0,   143,   144,
     145,   146,   147,   148,     0,   149,   150,   151,   152,   819,
     820,   821,   822,   823,   824,   825,   154,   155,   156,   157,
     158,   159,   160,   826,   827,   163,   828,   164,     0,   165,
     166,   167,   168,   169,   170,     0,   171,   172,   173,   174,
     175,     0,     0,   176,   177,   666,   179,   180,     0,   181,
     182,   183,     0,   184,   185,   186,     0,   187,   188,   189,
     190,   829,   192,   193,   194,   195,   830,   831,   197,     0,
     198,   199,   832,   201,     0,   202,     0,   203,   204,  1628,
     205,   206,   207,   208,   209,   210,     0,   211,     0,   212,
     213,     0,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,     0,   225,   226,   227,   228,   229,   230,
       0,   231,   232,   233,   234,   235,   236,   237,   833,   834,
       0,   835,     0,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,     0,     0,   251,   252,   253,   254,     0,
     255,   256,   257,   836,   837,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   838,
     283,   839,   285,   286,   287,   288,   840,   289,   290,   291,
     292,   841,   842,   294,   843,   296,   297,   298,     0,   299,
     300,     0,     0,   844,   302,   303,     0,     0,   304,   305,
     306,   307,   308,   845,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,     0,   320,   321,   846,   323,   324,
     325,   326,   327,   328,     0,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   847,   339,   340,   341,   342,     0,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,     0,   355,   356,   357,   358,   359,   360,   848,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,     0,   373,   374,   375,   376,   377,   849,   378,   379,
     380,   381,   382,   383,   384,   385,   850,   387,     0,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   851,   402,     0,   403,   404,     0,   405,   406,
     407,   408,   409,   410,   411,     0,   852,   853,     0,     0,
     414,   415,   854,   417,   855,   856,   419,   420,   857,   422,
     423,   424,   425,   426,     0,     0,   427,   428,   429,   430,
     431,   858,     0,   432,   433,   434,   435,   436,   437,   859,
       0,   439,   440,   441,   442,   443,   444,     0,     0,   445,
       0,     0,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   860,     0,     0,     0,     0,     0,     0,
     861,   862,     0,     0,     0,     0,     0,   864,     0,   865,
       0,     0,     0,     0,   866,     0,   867,   868,    91,   803,
     540,   804,   805,   806,   807,   808,     0,     0,     0,     0,
       0,     0,     0,     0,    92,    93,    94,    95,    96,    97,
      98,    99,     0,   100,   101,   102,     0,     0,     0,     0,
     809,     0,     0,   103,   104,     0,   105,   106,   107,   108,
     109,   110,   111,   112,   810,   114,   811,   812,     0,   117,
     118,   119,   120,   121,   122,   813,   814,   123,   124,   815,
     816,   127,     0,   128,   129,   130,   131,   817,     0,   818,
       0,   134,   135,   136,   137,   138,   139,   140,   141,   142,
       0,   143,   144,   145,   146,   147,   148,     0,   149,   150,
     151,   152,   819,   820,   821,   822,   823,   824,   825,   154,
     155,   156,   157,   158,   159,   160,   826,   827,   163,   828,
     164,     0,   165,   166,   167,   168,   169,   170,     0,   171,
     172,   173,   174,   175,     0,     0,   176,   177,   666,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,     0,
     187,   188,   189,   190,   829,   192,   193,   194,   195,   830,
     831,   197,     0,   198,   199,   832,   201,     0,   202,     0,
     203,   204,     0,   205,   206,   207,   208,   209,   210,     0,
     211,     0,   212,   213,     0,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,     0,   225,   226,   227,
     228,   229,   230,     0,   231,   232,   233,   234,   235,   236,
     237,   833,   834,     0,   835,     0,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,     0,     0,   251,   252,
     253,   254,     0,   255,   256,   257,   836,   837,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   838,   283,   839,   285,   286,   287,   288,   840,
     289,   290,   291,   292,   841,   842,   294,   843,   296,   297,
     298,     0,   299,   300,     0,     0,   844,   302,   303,     0,
       0,   304,   305,   306,   307,   308,   845,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,     0,   320,   321,
     846,   323,   324,   325,   326,   327,   328,     0,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   847,   339,   340,
     341,   342,     0,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
     359,   360,   848,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,     0,   373,   374,   375,   376,   377,
     849,   378,   379,   380,   381,   382,   383,   384,   385,   850,
     387,     0,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   851,   402,     0,   403,   404,
       0,   405,   406,   407,   408,   409,   410,   411,     0,   852,
     853,     0,     0,   414,   415,   854,   417,   855,   856,   419,
     420,   857,   422,   423,   424,   425,   426,     0,     0,   427,
     428,   429,   430,   431,   858,     0,   432,   433,   434,   435,
     436,   437,   859,     0,   439,   440,   441,   442,   443,   444,
       0,     0,   445,     0,     0,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   860,     0,     0,     0,
       0,     0,     0,   861,   862,     0,     0,     0,     0,     0,
     864,     0,   865,     0,     0,     0,     0,   866,     0,   867,
     868,   995,   803,   540,   804,   805,   806,   807,   808,     0,
       0,     0,     0,     0,     0,     0,     0,    92,    93,    94,
      95,    96,    97,    98,    99,     0,   100,   101,   102,     0,
       0,     0,     0,   809,     0,     0,   103,   104,     0,   105,
     106,   107,   997,   109,   110,   111,   112,   810,   998,   811,
     812,     0,   117,   118,   119,   120,   121,   122,   813,   814,
     123,   124,   815,   816,   127,     0,   128,   129,   130,   131,
     817,     0,   999,     0,   134,   135,   136,   137,   138,  1000,
     140,   141,   142,     0,   143,   144,   145,   146,   147,   148,
       0,  1001,   150,   151,   152,   819,   820,   821,  1002,   823,
     824,   825,   154,   155,   156,   157,   158,   159,   160,   826,
     827,   163,   828,   164,     0,   165,   166,   167,   168,   169,
     170,     0,   171,   172,   173,   174,   175,     0,     0,   176,
     177,   666,   179,   180,     0,   181,   182,   183,     0,   184,
     185,   186,     0,   187,   188,   189,   190,   829,   192,   193,
     194,   195,   830,   831,   197,     0,   198,   199,   832,   201,
       0,   202,     0,   203,  1004,     0,  1005,   206,   207,   208,
    1006,   210,     0,   211,     0,   212,   213,     0,   214,   215,
     216,   217,   218,   219,  1007,   221,   222,   223,   224,     0,
     225,   226,   227,   228,   229,   230,     0,   231,  1008,   233,
     234,   235,   236,   237,   833,   834,     0,   835,     0,   241,
    1009,  1010,   244,  1011,   246,   247,   248,   249,   250,     0,
       0,   251,  1012,   253,  1013,     0,   255,   256,   257,   836,
     837,   258,   259,   260,   261,   262,  1014,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   838,  1015,   839,   285,   286,
     287,   288,   840,   289,   290,  1016,   292,   841,   842,   294,
     843,   296,   297,   298,     0,   299,   300,     0,     0,   844,
     302,   303,     0,     0,   304,   305,  1017,   307,  1018,   845,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
       0,   320,   321,   846,   323,   324,   325,   326,   327,   328,
       0,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     847,   339,   340,   341,   342,     0,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,     0,   355,
     356,  1019,   358,   359,   360,   848,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,     0,   373,   374,
     375,   376,   377,   849,   378,   379,   380,   381,   382,  1020,
     384,   385,   850,   387,     0,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,  1021,   400,   851,   402,
       0,   403,   404,     0,   405,  1022,   407,   408,   409,   410,
     411,     0,   852,   853,     0,     0,   414,   415,   854,   417,
     855,   856,   419,   420,  1023,   422,   423,   424,   425,   426,
       0,     0,   427,   428,   429,   430,   431,   858,     0,   432,
     433,   434,   435,   436,   437,   859,     0,   439,  1025,   441,
     442,   443,   444,     0,     0,   445,     0,     0,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   860,
       0,     0,     0,     0,     0,     0,   861,   862,     0,     0,
       0,     0,     0,   864,     0,   865,     0,     0,     0,     0,
     866,     0,   867,   868,    91,   803,   540,   804,   805,   806,
     807,   808,     0,     0,     0,     0,     0,     0,     0,     0,
      92,    93,    94,    95,    96,    97,    98,    99,     0,   100,
     101,   102,     0,     0,     0,     0,   809,     0,     0,   103,
     104,     0,   105,   106,   107,   108,   109,   110,   111,   112,
     810,   114,   811,   812,     0,   117,   118,   119,   120,   121,
     122,   813,   814,   123,   124,   815,   816,   127,     0,   128,
     129,   130,   131,   817,     0,   818,     0,   134,   135,   136,
     137,   138,   139,   140,   141,   142,     0,   143,   144,   145,
     146,   147,   148,     0,   149,   150,   151,   152,   819,   820,
     821,   822,   823,   824,   825,   154,   155,   156,   157,   158,
     159,   160,   826,   827,   163,   828,   164,     0,   165,   166,
     167,   168,   169,   170,     0,   171,   172,   173,   174,   175,
       0,     0,   176,   177,   666,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,     0,   187,   188,   189,   190,
     829,   192,   193,   194,   195,   830,   831,   197,     0,   198,
     199,   832,   201,     0,   202,     0,   203,   204,     0,   205,
     206,   207,   208,   209,   210,     0,   211,     0,   212,   213,
       0,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,     0,   225,   226,   227,   228,   229,   230,     0,
     231,   232,   233,   234,   235,   236,   237,   833,   834,     0,
     835,     0,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,     0,     0,   251,   252,   253,   254,     0,   255,
     256,   257,   836,   837,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   838,   283,
     839,   285,   286,   287,   288,   840,   289,   290,   291,   292,
     841,   842,   294,   843,   296,   297,   298,     0,   299,   300,
       0,     0,   844,   302,   303,     0,     0,   304,   305,   306,
     307,   308,   845,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,     0,   320,   321,   846,   323,   324,   325,
     326,   327,   328,     0,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   847,   339,   340,   341,   342,     0,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,     0,   355,   356,   357,   358,   359,   360,   848,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
       0,   373,   374,   375,   376,   377,   849,   378,   379,   380,
     381,   382,   383,   384,   385,   850,   387,     0,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   851,   402,     0,   403,   404,     0,   405,   406,   407,
     408,   409,   410,   411,     0,   852,   853,     0,     0,   414,
     415,   854,   417,   855,   856,   419,   420,   857,   422,   423,
     424,   425,   426,     0,     0,   427,   428,   429,   430,   431,
     858,     0,   432,   433,   434,   435,   436,   437,   859,     0,
     439,   440,   441,   442,   443,   444,     0,     0,   445,     0,
       0,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   860,     0,     0,     0,     0,     0,     0,  1387,
    1388,     0,     0,     0,     0,     0,   864,     0,   865,     0,
       0,     0,     0,   866,     0,   867,   868,    91,  1760,   540,
     804,   805,   806,   807,   808,     0,     0,     0,     0,     0,
       0,     0,     0,    92,    93,    94,    95,    96,    97,    98,
      99,     0,   100,   101,   102,     0,     0,     0,     0,   809,
       0,     0,   103,   104,     0,   105,   106,   107,   108,   109,
     110,   111,   112,   810,   114,   811,   812,     0,   117,   118,
     119,   120,   121,   122,   813,   814,   123,   124,   815,   816,
     127,     0,   128,   129,   130,   131,   817,     0,   818,     0,
     134,   135,   136,   137,   138,   139,   140,   141,   142,     0,
     143,   144,   145,   146,   147,   148,     0,   149,   150,   151,
     152,   819,   820,   821,   822,   823,   824,   825,   154,   155,
     156,   157,   158,   159,   160,   826,   827,   163,   828,   164,
       0,   165,   166,   167,   168,   169,   170,     0,   171,   172,
     173,   174,   175,     0,     0,   176,   177,   666,   179,   180,
       0,   181,   182,   183,     0,   184,   185,   186,     0,   187,
     188,   189,   190,   829,   192,   193,   194,   195,   830,   831,
     197,     0,   198,   199,   832,   201,     0,   202,     0,   203,
     204,     0,   205,   206,   207,   208,   209,   210,     0,   211,
       0,   212,   213,     0,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,     0,   225,   226,   227,   228,
     229,   230,     0,   231,   232,   233,   234,   235,   236,   237,
     833,   834,     0,   835,     0,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,     0,     0,   251,   252,   253,
     254,     0,   255,   256,   257,   836,   837,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   838,   283,   839,   285,   286,   287,   288,   840,   289,
     290,   291,   292,   841,   842,   294,   843,   296,   297,   298,
       0,   299,   300,     0,     0,   844,   302,   303,     0,     0,
     304,   305,   306,   307,   308,   845,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,     0,   320,   321,   846,
     323,   324,   325,   326,   327,   328,     0,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   847,   339,   340,   341,
     342,     0,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,     0,   355,   356,   357,   358,   359,
     360,   848,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,     0,   373,   374,   375,   376,   377,   849,
     378,   379,   380,   381,   382,   383,   384,   385,   850,   387,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   851,   402,     0,   403,   404,     0,
     405,   406,   407,   408,   409,   410,   411,     0,   852,   853,
       0,     0,   414,   415,   854,   417,   855,   856,   419,   420,
     857,   422,   423,   424,   425,   426,     0,     0,   427,   428,
     429,   430,   431,   858,     0,   432,   433,   434,   435,   436,
     437,   859,     0,   439,   440,   441,   442,   443,   444,     0,
       0,   445,     0,     0,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   860,     0,     0,     0,     0,
       0,     0,   861,   862,     0,     0,     0,     0,     0,   864,
       0,   865,     0,     0,     0,     0,   866,     0,   867,   868,
      91,   803,   540,   804,   805,   806,   807,   808,     0,     0,
       0,     0,     0,     0,     0,     0,    92,    93,    94,    95,
      96,    97,    98,    99,     0,   100,   101,   102,     0,     0,
       0,     0,   809,     0,     0,   103,   104,     0,   105,   106,
     107,   108,   109,   110,   111,   112,   810,   114,   811,   812,
       0,   117,   118,   119,   120,   121,   122,   813,   814,   123,
     124,   815,   816,   127,     0,   128,   129,   130,   131,   817,
       0,   818,     0,   134,   135,   136,   137,   138,   139,   140,
     141,   142,     0,   143,   144,   145,   146,   147,   148,     0,
     149,   150,   151,   152,   819,   820,   821,   822,   823,   824,
     825,   154,   155,   156,   157,   158,   159,   160,   826,   827,
     163,   828,   164,     0,   165,   166,   167,   168,   169,   170,
       0,   171,   172,   173,   174,   175,     0,     0,   176,   177,
     666,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,     0,   187,   188,   189,   190,   829,   192,   193,   194,
     195,   830,   831,   197,     0,   198,   199,   832,   201,     0,
     202,     0,   203,   204,     0,   205,   206,   207,   208,   209,
     210,     0,   211,     0,   212,   213,     0,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,     0,   225,
     226,   227,   228,   229,   230,     0,   231,   232,   233,   234,
     235,   236,   237,   833,   834,     0,   835,     0,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,     0,     0,
     251,   252,   253,   254,     0,   255,   256,   257,   836,   837,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   838,   283,   839,   285,   286,   287,
     288,   840,   289,   290,   291,   292,   841,   842,   294,   843,
     296,   297,   298,     0,   299,   300,     0,     0,   844,   302,
     303,     0,     0,   304,   305,   306,   307,   308,   845,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,     0,
     320,   321,   846,   323,   324,   325,   326,   327,   328,     0,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   847,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,     0,   355,   356,
     357,   358,   359,   360,   848,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,     0,   373,   374,   375,
     376,   377,   849,   378,   379,   380,   381,   382,   383,   384,
     385,   850,   387,     0,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   851,   402,     0,
     403,   404,     0,   405,   406,   407,   408,   409,   410,   411,
       0,   852,   853,     0,     0,   414,   415,   854,   417,   855,
     856,   419,   420,   857,   422,   423,   424,   425,   426,     0,
       0,   427,   428,   429,   430,   431,   858,     0,   432,   433,
     434,   435,   436,   437,   859,     0,   439,   440,   441,   442,
     443,   444,     0,     0,   445,     0,     0,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   860,     0,
       0,     0,     0,     0,     0,   861,   862,     0,     0,     0,
       0,     0,   864,     0,  1986,     0,     0,     0,     0,   866,
       0,   867,   868,    91,   803,   540,   804,   805,   806,   807,
     808,     0,     0,     0,     0,     0,     0,     0,     0,    92,
      93,    94,    95,    96,    97,    98,    99,     0,   100,   101,
     102,     0,     0,     0,     0,   809,     0,     0,   103,   104,
       0,   105,   106,   107,   108,   109,   110,   111,   112,   810,
     114,   811,   812,     0,   117,   118,   119,   120,   121,   122,
     813,   814,   123,   124,   815,   816,   127,     0,   128,   129,
     130,   131,   817,     0,   818,     0,   134,   135,   136,   137,
     138,   139,   140,   141,   142,     0,   143,   144,   145,   146,
     147,   148,     0,   149,   150,   151,   152,   819,   820,   821,
     822,   823,   824,   825,   154,   155,   156,   157,   158,   159,
     160,   826,   827,   163,   828,   164,     0,   165,   166,   167,
     168,   169,   170,     0,   171,   172,   173,   174,   175,     0,
       0,   176,   177,   666,   179,   180,     0,   181,   182,   183,
       0,   184,   185,   186,     0,   187,   188,   189,   190,   829,
     192,   193,   194,   195,   830,   831,   197,     0,   198,   199,
     832,   201,     0,   202,     0,   203,   204,     0,   205,   206,
     207,   208,   209,   210,     0,   211,     0,   212,   213,     0,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,     0,   225,   226,   227,   228,   229,   230,     0,   231,
     232,   233,   234,   235,   236,   237,   833,   834,     0,   835,
       0,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,     0,     0,   251,   252,   253,   254,     0,   255,   256,
     257,   836,   837,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   838,   283,   839,
     285,   286,   287,   288,   840,   289,   290,   291,   292,   841,
     842,   294,   843,   296,   297,   298,     0,   299,   300,     0,
       0,   844,   302,   303,     0,     0,   304,   305,   306,   307,
     308,   845,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,     0,   320,   321,   846,   323,   324,   325,   326,
     327,   328,     0,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   847,   339,   340,   341,   342,     0,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
       0,   355,   356,   357,   358,   359,   360,   848,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,     0,
     373,   374,   375,   376,   377,   849,   378,   379,   380,   381,
     382,   383,   384,   385,   850,   387,     0,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     851,   402,     0,   403,   404,     0,   405,   406,   407,   408,
     409,   410,   411,     0,   852,   853,     0,     0,   414,   415,
     854,   417,   855,   856,   419,   420,   857,   422,   423,   424,
     425,   426,     0,     0,   427,   428,   429,   430,   431,   858,
       0,   432,   433,   434,   435,   436,   437,   859,     0,   439,
     440,   441,   442,   443,   444,     0,     0,   445,     0,     0,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   860,     0,     0,     0,     0,     0,     0,   861,   862,
       0,     0,     0,     0,     0,   864,     0,  2644,     0,     0,
       0,     0,   866,     0,   867,   868,    91,   803,   540,   804,
     805,   806,   807,   808,     0,     0,     0,     0,     0,     0,
       0,     0,    92,    93,    94,    95,    96,    97,    98,    99,
       0,   100,   101,   102,     0,     0,     0,     0,   809,     0,
       0,   103,   104,     0,   105,   106,   107,   108,   109,   110,
     111,  2845,   810,   114,   811,   812,     0,   117,   118,   119,
     120,   121,   122,   813,   814,   123,   124,   815,   816,   127,
       0,   128,   129,   130,   131,   817,     0,   818,     0,   134,
     135,   136,   137,   138,   139,   140,   141,   142,     0,   143,
     144,   145,   146,   147,   148,     0,   149,   150,   151,  2846,
     819,   820,   821,   822,   823,   824,   825,   154,   155,   156,
     157,   158,   159,   160,   826,   827,   163,   828,   164,     0,
     165,   166,   167,   168,   169,   170,     0,   171,   172,   173,
     174,   175,     0,     0,   176,   177,   666,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,     0,   187,   188,
     189,   190,   829,   192,   193,   194,   195,   830,   831,   197,
       0,   198,   199,   832,   201,     0,   202,     0,   203,   204,
       0,   205,   206,   207,   208,   209,   210,     0,   211,     0,
     212,   213,     0,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,     0,   225,   226,   227,   228,   229,
     230,     0,   231,   232,   233,   234,   235,   236,   237,   833,
     834,     0,   835,     0,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,     0,     0,   251,   252,   253,   254,
       0,   255,   256,   257,   836,   837,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     838,   283,   839,   285,   286,   287,   288,   840,   289,   290,
     291,   292,   841,   842,   294,   843,   296,   297,   298,     0,
     299,   300,     0,     0,   844,   302,   303,     0,     0,   304,
     305,   306,   307,   308,   845,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,     0,   320,   321,   846,   323,
     324,   325,   326,   327,   328,     0,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   847,   339,   340,   341,   342,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,     0,   355,   356,   357,   358,   359,   360,
     848,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,     0,   373,   374,   375,   376,   377,   849,   378,
     379,   380,   381,   382,   383,   384,   385,   850,   387,     0,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   851,   402,     0,   403,   404,     0,   405,
     406,   407,   408,   409,   410,   411,     0,   852,   853,     0,
       0,   414,   415,   854,   417,   855,   856,   419,   420,   857,
     422,   423,  2847,   425,   426,     0,     0,   427,   428,   429,
     430,   431,   858,     0,   432,   433,   434,   435,   436,   437,
     859,     0,   439,   440,   441,   442,   443,   444,     0,     0,
     445,     0,     0,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   860,     0,     0,     0,     0,     0,
       0,   861,   862,     0,     0,     0,     0,     0,   864,     0,
     865,     0,     0,     0,     0,   866,     0,   867,   868,    91,
     803,   540,   804,   805,   806,   807,   808,     0,     0,     0,
       0,     0,     0,     0,     0,    92,    93,    94,    95,    96,
      97,    98,    99,     0,   100,   101,   102,     0,     0,     0,
       0,   809,     0,     0,   103,   104,     0,   105,   106,   107,
     108,   109,   110,   111,   112,   810,   114,   811,   812,     0,
     117,   118,   119,   120,   121,   122,   813,   814,   123,   124,
     815,   816,   127,     0,   128,   129,   130,   131,   817,     0,
     818,     0,   134,   135,   136,   137,   138,   139,   140,   141,
     142,     0,   143,   144,   145,   146,   147,   148,     0,   149,
     150,   151,  2846,   819,   820,   821,   822,   823,   824,   825,
     154,   155,   156,   157,   158,   159,   160,   826,   827,   163,
     828,   164,     0,   165,   166,   167,   168,   169,   170,     0,
     171,   172,   173,   174,   175,     0,     0,   176,   177,   666,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,   190,   829,   192,   193,   194,   195,
     830,   831,   197,     0,   198,   199,   832,   201,     0,   202,
       0,   203,   204,     0,   205,   206,   207,   208,   209,   210,
       0,   211,     0,   212,   213,     0,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,     0,   225,   226,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,   237,   833,   834,     0,   835,     0,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,     0,     0,   251,
     252,   253,   254,     0,   255,   256,   257,   836,   837,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   838,   283,   839,   285,   286,   287,   288,
     840,   289,   290,   291,   292,   841,   842,   294,   843,   296,
     297,   298,     0,   299,   300,     0,     0,   844,   302,   303,
       0,     0,   304,   305,   306,   307,   308,   845,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,     0,   320,
     321,   846,   323,   324,   325,   326,   327,   328,     0,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   847,   339,
     340,   341,   342,     0,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,     0,   355,   356,   357,
     358,   359,   360,   848,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,     0,   373,   374,   375,   376,
     377,   849,   378,   379,   380,   381,   382,   383,   384,   385,
     850,   387,     0,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   851,   402,     0,   403,
     404,     0,   405,   406,   407,   408,   409,   410,   411,     0,
     852,   853,     0,     0,   414,   415,   854,   417,   855,   856,
     419,   420,   857,   422,   423,  2847,   425,   426,     0,     0,
     427,   428,   429,   430,   431,   858,     0,   432,   433,   434,
     435,   436,   437,   859,     0,   439,   440,   441,   442,   443,
     444,     0,     0,   445,     0,     0,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   860,     0,     0,
       0,     0,     0,     0,   861,   862,     0,     0,     0,     0,
       0,   864,     0,   865,     0,     0,     0,     0,   866,     0,
     867,   868,    91,   803,   540,   804,   805,   806,   807,   808,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,   809,     0,     0,   103,   104,     0,
     105,   106,   107,   108,   109,   110,   111, -1700,   810,   114,
     811,   812,     0,   117,   118,   119,   120,   121,   122,   813,
     814,   123,   124,   815,   816,   127,     0,   128,   129,   130,
     131,   817,     0,   818,     0,   134,   135,   136,   137,   138,
     139,   140,   141,   142,     0,   143,   144,   145,   146,   147,
     148,     0,   149,   150,   151,  2846,   819,   820,   821,   822,
     823,   824,   825,   154,   155,   156,   157,   158,   159,   160,
     826,   827,   163,   828,   164,     0,   165,   166,   167,   168,
     169,   170,     0,   171,   172,   173,   174,   175,     0,     0,
     176,   177,   666,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,     0,   187,   188,   189,   190,   829,   192,
     193,   194,   195,   830,   831,   197,     0,   198,   199,   832,
     201,     0,   202,     0,   203,   204,     0,   205,   206,   207,
     208, -1700,   210,     0,   211,     0,   212,   213,     0,   214,
     215,   216,   217,   218,   219, -1700,   221,   222,   223,   224,
       0,   225,   226,   227,   228,   229,   230,     0,   231,   232,
     233,   234,   235,   236,   237,   833,   834,     0,   835,     0,
     241,     0,     0,   244,   245,   246,   247,   248,   249,   250,
       0,     0,   251,   252,   253, -1700,     0,   255,   256,   257,
     836,   837,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   838,   283,   839,   285,
     286,   287,   288,     0,   289,   290,     0,   292,   841,   842,
     294,   843,   296,   297,   298,     0,   299,   300,     0,     0,
     844,   302,   303,     0,     0,   304,   305,   306,   307,   308,
     845,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,     0,   320,   321,   846,   323,   324,   325,   326,   327,
     328,     0,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   847,   339,   340,   341,   342,     0,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,     0,
     355,   356,   357,   358,   359,   360,   848,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,     0,   373,
     374,   375,   376,   377,   849,   378,   379,   380,   381,   382,
   -1700,   384,   385,   850,   387,     0,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   851,
     402,     0,   403,   404,     0,   405,   406,   407,   408,   409,
     410,   411,     0,   852,   853,     0,     0,   414,   415,   854,
     417,   855,   856,   419,   420,   857,   422,   423,  2847,   425,
     426,     0,     0,   427,   428,   429,   430,   431,   858,     0,
     432,   433,   434,   435,   436,   437,   859,     0,   439,   440,
     441,   442,   443,   444,     0,     0,   445,     0,     0,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
   -1700,     0,     0,     0,     0,     0,     0,   861,   862,     0,
       0,     0,     0,     0,   864,     0,   865,     0,     0,     0,
       0,   866,     0,   867,   868,    91,   803,   540,   804,   805,
     806,   807,   808,     0,     0,     0,     0,     0,     0,     0,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     100,   101,   102,     0,     0,     0,     0,     0,     0,     0,
     103,   104,     0,   105,   106,   107,   108,   109,   110,   111,
     112,   810,   114,   811,   812,     0,   117,   118,   119,   120,
     121,   122,   813,   814,   123,   124,   815,   816,   127,     0,
     128,   129,   130,   131,   817,     0,   818,     0,   134,   135,
     136,   137,   138,   139,   140,   141,   142,     0,   143,   144,
     145,   146,   147,   148,     0,   149,   150,   151,   152,   819,
     820,   821,   822,   823,   824,   825,   154,   155,   156,   157,
     158,   159,   160,   826,   827,   163,     0,   164,     0,   165,
     166,   167,   168,   169,   170,     0,   171,   172,   173,   174,
     175,     0,     0,   176,   177,   666,   179,   180,     0,   181,
     182,   183,     0,   184,   185,   186,     0,   187,   188,   189,
     190,   829,   192,   193,   194,   195,   830,   831,   197,     0,
     198,   199,   832,   201,     0,   202,     0,   203,   204,     0,
     205,   206,   207,   208,   209,   210,     0,   211,     0,   212,
     213,     0,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,     0,   225,   226,   227,   228,   229,   230,
       0,   231,   232,   233,   234,   235,   236,   237,   833,   834,
       0,   835,     0,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,     0,     0,   251,   252,   253,   254,     0,
     255,   256,   257,   836,   837,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   838,
     283,   839,   285,   286,   287,   288,     0,   289,   290,   291,
     292,   841,   842,   294,   843,   296,   297,   298,     0,   299,
     300,     0,     0,   844,   302,   303,     0,     0,   304,   305,
     306,   307,   308,   845,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,     0,   320,   321,   846,   323,   324,
     325,   326,   327,   328,     0,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   847,   339,   340,   341,   342,     0,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,     0,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,     0,   373,   374,   375,   376,   377,   849,   378,   379,
     380,   381,   382,   383,   384,   385,   850,   387,     0,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   851,   402,     0,   403,   404,     0,   405,   406,
     407,   408,   409,   410,   411,     0,   852,   853,     0,     0,
     414,   415,   854,   417,   855,   856,   419,   420,   857,   422,
     423,   424,   425,   426,     0,     0,   427,   428,   429,   430,
     431,   858,     0,   432,   433,   434,   435,   436,   437,   859,
       0,   439,   440,   441,   442,   443,   444,     0,     0,   445,
       0,     0,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,     0,     0,     0,     0,     0,     0,     0,
    1613,  1614,     0,     0,    91,   803,   540,   804,   805,  1615,
     807,   808,     0,     0,     0,     0,   867,   868,     0,     0,
      92,    93,    94,    95,    96,    97,    98,    99,     0,   100,
     101,   102,     0,     0,     0,     0,     0,     0,     0,   103,
     104,     0,   105,   106,   107,   108,   109,   110,   111,   112,
     810,   114,   811,   812,     0,   117,   118,   119,   120,   121,
     122,   813,   814,   123,   124,   815,   816,   127,     0,   128,
     129,   130,   131,   817,     0,   818,     0,   134,   135,   136,
     137,   138,   139,   140,   141,   142,     0,   143,   144,   145,
     146,   147,   148,     0,   149,   150,   151,   152,   819,   820,
     821,   822,   823,   824,   825,   154,   155,   156,   157,   158,
     159,   160,   826,   827,   163,     0,   164,     0,   165,   166,
     167,   168,   169,   170,     0,   171,   172,   173,   174,   175,
       0,     0,   176,   177,   666,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,     0,   187,   188,   189,   190,
     829,   192,   193,   194,   195,   830,   831,   197,     0,   198,
     199,   832,   201,     0,   202,     0,   203,   204,     0,   205,
     206,   207,   208,   209,   210,     0,   211,     0,   212,   213,
       0,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,     0,   225,   226,   227,   228,   229,   230,     0,
     231,   232,   233,   234,   235,   236,   237,   833,   834,     0,
     835,     0,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,     0,     0,   251,   252,   253,   254,     0,   255,
     256,   257,   836,   837,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   838,   283,
     839,   285,   286,   287,   288,     0,   289,   290,   291,   292,
     841,   842,   294,   843,   296,   297,   298,     0,   299,   300,
       0,     0,   301,   302,   303,     0,     0,   304,   305,   306,
     307,   308,   845,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,     0,   320,   321,   846,   323,   324,   325,
     326,   327,   328,     0,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   847,   339,   340,   341,   342,     0,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,     0,   355,   356,   357,   358,   359,   360,  1749,  1750,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
       0,   373,   374,   375,   376,   377,   849,   378,   379,   380,
     381,   382,   383,   384,   385,   850,   387,     0,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   851,   402,     0,   403,   404,     0,   405,   406,   407,
     408,   409,   410,   411,     0,   852,   853,     0,     0,   414,
     415,   854,   417,   855,   856,   419,   420,   857,   422,   423,
     424,   425,   426,     0,     0,   427,   428,   429,   430,   431,
     858,     0,   432,   433,   434,   435,   436,   437,   859,     0,
     439,   440,   441,   442,   443,   444,     0,     0,   445,     0,
       0,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,     0,     0,     0,     0,     0,     0,     0,  1751,
    1752,     0,     0,     0,     0,     0,     0,     0,  1615,     0,
       0,     0,     0,     0,     0,   867,   868,    91,   803,   540,
     804,   805,   806,   807,   808,     0,     0,     0,     0,     0,
       0,     0,     0,    92,    93,    94,    95,    96,    97,    98,
      99,     0,   100,   101,   102,     0,     0,     0,     0,     0,
       0,     0,   103,   104,     0,   105,   106,   107,   108,   109,
     110,   111,   112,   810,   114,   811,   812,     0,   117,   118,
     119,   120,   121,   122,   813,   814,   123,   124,   815,   816,
     127,     0,   128,   129,   130,   131,   817,     0,   818,     0,
     134,   135,   136,   137,   138,   139,   140,   141,   142,     0,
     143,   144,   145,   146,   147,   148,     0,   149,   150,   151,
     152,   819,   820,   821,   822,   823,   824,   825,   154,   155,
     156,   157,   158,   159,   160,   826,   827,   163,     0,   164,
       0,   165,   166,   167,   168,   169,   170,     0,   171,   172,
     173,   174,   175,     0,     0,   176,   177,   666,   179,   180,
       0,   181,   182,   183,     0,   184,   185,   186,     0,   187,
     188,   189,   190,   829,   192,   193,   194,   195,   830,   831,
     197,     0,   198,   199,   832,   201,     0,   202,     0,   203,
     204,     0,   205,   206,   207,   208,   209,   210,     0,   211,
       0,   212,   213,     0,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,     0,   225,   226,   227,   228,
     229,   230,     0,   231,   232,   233,   234,   235,   236,   237,
     833,   834,     0,   835,     0,   241,     0,   243,   244,   245,
     246,   247,   248,   249,   250,     0,     0,   251,   252,   253,
     254,     0,   255,   256,   257,   836,   837,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   838,   283,   839,   285,   286,   287,   288,     0,   289,
     290,   291,   292,   841,   842,   294,   843,   296,   297,   298,
       0,   299,   300,     0,     0,   844,   302,   303,     0,     0,
     304,   305,   306,   307,   308,   845,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,     0,   320,   321,   846,
     323,   324,   325,   326,   327,   328,     0,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   847,   339,   340,   341,
     342,     0,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,     0,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,     0,   373,   374,   375,   376,   377,   849,
     378,   379,   380,   381,   382,   383,   384,   385,   850,   387,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   851,   402,     0,   403,   404,     0,
     405,   406,   407,   408,   409,   410,   411,     0,   852,   853,
       0,     0,   414,   415,   854,   417,   855,   856,   419,   420,
     857,   422,   423,   424,   425,   426,     0,     0,   427,   428,
     429,   430,   431,   858,     0,   432,   433,   434,   435,   436,
     437,   859,     0,   439,   440,   441,   442,   443,   444,     0,
       0,   445,     0,     0,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,     0,     0,     0,     0,     0,
       0,     0,  1613,  1614,     0,     0,     0,     0,     0,     0,
       0,  1615,     0,     0,     0,     0,     0,     0,   867,   868,
      91,   803,   540,   804,   805,   806,   807,   808,     0,     0,
       0,     0,     0,     0,     0,     0,    92,    93,    94,    95,
      96,    97,    98,    99,     0,   100,   101,   102,     0,     0,
       0,     0,   809,     0,     0,   103,   104,     0,   105,   106,
     107,   108,   109,   110,   111,     0,   810,   114,   811,   812,
       0,   117,   118,   119,   120,   121,   122,   813,   814,   123,
     124,   815,   816,   127,     0,   128,   129,   130,   131,   817,
       0,   818,     0,   134,   135,   136,   137,   138,   139,   140,
     141,   142,     0,   143,   144,   145,   146,   147,   148,     0,
     149,   150,   151,   152,   819,   820,   821,   822,   823,   824,
     825,   154,   155,   156,   157,   158,   159,   160,   826,   827,
     163,   828,   164,     0,   165,   166,   167,   168,   169,   170,
       0,   171,   172,   173,   174,   175,     0,     0,   176,   177,
     666,   179,   180,     0,   181,   182,   183,     0,   184,     0,
     186,     0,   187,   188,   189,   190,   829,   192,   193,   194,
     195,   830,   831,   197,     0,   198,   199,   832,   201,     0,
     202,     0,   203,   204,     0,   205,   206,   207,   208,     0,
     210,     0,   211,     0,   212,   213,     0,   214,   215,   216,
     217,   218,   219,     0,   221,   222,   223,   224,     0,   225,
     226,   227,   228,   229,   230,     0,   231,   232,   233,   234,
     235,   236,   237,   833,   834,     0,   835,     0,   241,     0,
       0,   244,   245,   246,   247,   248,   249,   250,     0,     0,
     251,   252,   253,     0,     0,   255,   256,   257,   836,   837,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   838,   283,   839,   285,   286,   287,
     288,     0,   289,   290,     0,   292,   841,   842,   294,   843,
     296,   297,   298,     0,   299,   300,     0,     0,   844,   302,
     303,     0,     0,   304,   305,   306,   307,   308,   845,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,     0,
     320,   321,   846,   323,   324,   325,   326,   327,   328,     0,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   847,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,     0,   355,   356,
     357,   358,   359,   360,   848,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,     0,   373,   374,   375,
     376,   377,   849,   378,   379,   380,   381,   382,     0,   384,
     385,   850,   387,     0,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   851,   402,     0,
     403,   404,     0,   405,   406,   407,   408,   409,   410,   411,
       0,   852,   853,     0,     0,   414,   415,   854,   417,   855,
     856,   419,   420,   857,   422,   423,   424,   425,   426,     0,
       0,   427,   428,   429,   430,   431,   858,     0,   432,   433,
     434,   435,   436,   437,   859,     0,   439,   440,   441,   442,
     443,   444,     0,     0,   445,     0,     0,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,     0,     0,
       0,     0,     0,     0,     0,   861,   862,   492,     0,     0,
       0,     0,   864,     0,   865,     0,     0,     0,     0,   866,
       0,   867,   868,    92,    93,    94,    95,    96,    97,    98,
      99,     0,   100,   101,   102,     0,     0,     0,     0,     0,
    2277,     0,   103,   104,     0,   105,   106,   107,     0,   109,
     110,   111,   112,   113,     0,   115,   116,     0,   117,   118,
     119,   120,   121,   122,     0,     0,   123,   124,   125,   126,
     127,     0,   128,   129,   130,   131,   132,     0,     0,     0,
     134,   135,   136,   137,   138,     0,   140,   141,   142,     0,
     143,   144,   145,   146,   147,   148,     0,  -591,   150,   151,
     152,     0,     0,     0,     0,     0,     0,     0,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,     0,   164,
       0,   165,   166,   167,   168,   169,   170,     0,   171,   172,
     173,   174,   175,     0,     0,   176,   177,   178,   179,   180,
       0,   181,   182,   183,     0,   184,   185,   186,     0,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,     0,
     197,     0,   198,   199,   200,   201,     0,   202,     0,   203,
       0,     0,  -591,   206,   207,   208,     0,   210,     0,   211,
       0,   212,   213,     0,   214,   215,   216,   217,   218,   219,
       0,   221,   222,   223,   224,     0,   225,   226,   227,   228,
     229,   230,     0,   231,  -591,   233,   234,   235,   236,   237,
     238,   239,     0,   240,     0,   241,     0,     0,   244,  -591,
     246,   247,   248,   249,   250,     0,     0,   251,  -591,   253,
       0,     0,   255,   256,   257,     0,     0,   258,   259,   260,
     261,   262,   494,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,  -591,   284,   285,   286,   287,   288,     0,   289,
     290,     0,   292,     0,   293,   294,   295,   296,   297,   298,
       0,   299,   300,     0,     0,   301,   302,   303,     0,     0,
     304,   305,     0,   307,     0,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,     0,   320,   321,   322,
     323,   324,   325,   326,   327,   328,     0,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,     0,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,     0,   355,   356,  -591,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,     0,   373,   374,   375,   376,   377,     0,
     378,   379,   380,   381,   382,     0,   384,   385,   386,   387,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   496,   400,   401,   402,     0,   403,   404,     0,
     405,  -591,   407,   408,   409,   410,   411,     0,   412,   413,
       0,     0,   414,   415,   416,   417,   418,     0,   419,   420,
     421,   422,   423,   424,   425,   426,     0,     0,   427,   428,
     429,   430,   431,     0,     0,   432,   433,   434,   435,   436,
     437,   438,     0,   439,     0,   441,   442,   443,   444,     0,
       0,   445,     0,     0,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,     0,     0,    91,     0,   570,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   927,    92,    93,    94,    95,    96,    97,    98,
      99,     0,   100,   101,   102,     0,     0,     0,     0,     0,
       0,     0,   103,   104,     0,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,     0,   117,   118,
     119,   120,   121,   122,     0,   814,   123,   124,   125,   126,
     127,     0,   128,   129,   130,   131,   817,     0,   818,     0,
     134,   135,   136,   137,   138,   139,   140,   141,   142,     0,
     143,   144,   145,   146,   147,   148,     0,   149,   150,   151,
     152,   819,   820,   821,   822,   823,   824,   825,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,     0,   164,
       0,   165,   166,   167,   168,   169,   170,     0,   171,   172,
     173,   174,   175,     0,     0,   176,   177,   178,   179,   180,
       0,   181,   182,   183,     0,   184,   185,   186,     0,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   830,     0,
     197,     0,   198,   199,   200,   201,     0,   202,     0,   203,
     204,     0,   205,   206,   207,   208,   209,   210,     0,   211,
       0,   212,   213,     0,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,     0,   225,   226,   227,   228,
     229,   230,     0,   231,   232,   233,   234,   235,   236,   237,
     238,   239,     0,   240,     0,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,  2031,     0,   251,   252,   253,
     254,     0,   255,   256,   257,   836,   837,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,     0,   289,
     290,   291,   292,     0,   842,   294,   295,   296,   297,   298,
       0,   299,   300,     0,   571,   301,   302,   303,     0,     0,
     304,   305,   306,   307,   308,   845,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,     0,   320,   321,   846,
     323,   324,   325,   326,   327,   328,     0,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,     0,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,     0,   355,   356,   357,   358,   359,
     360,   361,  2032,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,    25,   373,   374,   375,   376,   377,   849,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   851,   402,     0,   403,   404,    30,
     405,   406,   407,   408,   409,   410,   411,     0,   412,   413,
       0,     0,   414,   415,   854,   417,   855,     0,   419,   420,
     857,   422,   423,   424,   425,   426,     0,     0,   427,   428,
     429,   430,   431,   858,     0,   432,   433,   434,   435,   436,
     566,   438,     0,   439,   440,   441,   442,   443,   444,     0,
       0,   445,     0,    33,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,     0,    91,    34,   570,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2033,    92,    93,    94,    95,    96,    97,    98,    99,
       0,   100,   101,   102,     0,     0,     0,     0,     0,     0,
       0,   103,   104,     0,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,     0,   117,   118,   119,
     120,   121,   122,     0,   814,   123,   124,   125,   126,   127,
       0,   128,   129,   130,   131,   817,     0,   818,     0,   134,
     135,   136,   137,   138,   139,   140,   141,   142,     0,   143,
     144,   145,   146,   147,   148,     0,   149,   150,   151,   152,
     819,   820,   821,   822,   823,   824,   825,   154,   155,   156,
     157,   158,   159,   160,   161,   162,   163,     0,   164,     0,
     165,   166,   167,   168,   169,   170,     0,   171,   172,   173,
     174,   175,     0,     0,   176,   177,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,     0,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   830,     0,   197,
       0,   198,   199,   200,   201,     0,   202,     0,   203,   204,
       0,   205,   206,   207,   208,   209,   210,     0,   211,     0,
     212,   213,     0,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,     0,   225,   226,   227,   228,   229,
     230,     0,   231,   232,   233,   234,   235,   236,   237,   238,
     239,     0,   240,     0,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,  2031,     0,   251,   252,   253,   254,
       0,   255,   256,   257,   836,   837,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,     0,   289,   290,
     291,   292,     0,   842,   294,   295,   296,   297,   298,     0,
     299,   300,     0,   571,   301,   302,   303,     0,     0,   304,
     305,   306,   307,   308,   845,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,     0,   320,   321,   846,   323,
     324,   325,   326,   327,   328,     0,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,     0,   355,   356,   357,   358,   359,   360,
     361,  2032,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,     0,   373,   374,   375,   376,   377,   849,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,     0,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   851,   402,     0,   403,   404,     0,   405,
     406,   407,   408,   409,   410,   411,     0,   412,   413,     0,
       0,   414,   415,   854,   417,   855,     0,   419,   420,   857,
     422,   423,   424,   425,   426,     0,     0,   427,   428,   429,
     430,   431,   858,     0,   432,   433,   434,   435,   436,   437,
     438,     0,   439,   440,   441,   442,   443,   444,     0,     0,
     445,     0,     0,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,     0,    91,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2033,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     100,   101,   102,     0,     0,     0,     0,     0,     0,     0,
     103,   104,     0,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,     0,   117,   118,   119,   120,
     121,   122,     0,   814,   123,   124,   125,   126,   127,     0,
     128,   129,   130,   131,   817,     0,   818,     0,   134,   135,
     136,   137,   138,   139,   140,   141,   142,     0,   143,   144,
     145,   146,   147,   148,     0,   149,   150,   151,   152,   819,
     820,   821,   822,   823,   824,   825,   154,   155,   156,   157,
     158,   159,   160,   161,   162,   163,     0,   164,     0,   165,
     166,   167,   168,   169,   170,     0,   171,   172,   173,   174,
     175,     0,     0,   176,   177,   178,   179,   180,     0,   181,
     182,   183,     0,   184,   185,   186,     0,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   830,     0,   197,     0,
     198,   199,   200,   201,     0,   202,     0,   203,   204,     0,
     205,   206,   207,   208,   209,   210,     0,   211,     0,   212,
     213,     0,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,     0,   225,   226,   227,   228,   229,   230,
       0,   231,   232,   233,   234,   235,   236,   237,   238,   239,
       0,   240,     0,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,     0,     0,   251,   252,   253,   254,     0,
     255,   256,   257,   836,   837,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,     0,   289,   290,   291,
     292,     0,   842,   294,   295,   296,   297,   298,     0,   299,
     300,     0,     0,   301,   302,   303,     0,     0,   304,   305,
     306,   307,   308,   845,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,     0,   320,   321,   846,   323,   324,
     325,   326,   327,   328,     0,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,     0,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,     0,   355,   356,   357,   358,   359,   360,   361,
    2032,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,     0,   373,   374,   375,   376,   377,   849,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,     0,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   851,   402,     0,   403,   404,     0,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,     0,     0,
     414,   415,   854,   417,   855,     0,   419,   420,   857,   422,
     423,   424,   425,   426,     0,     0,   427,   428,   429,   430,
     431,   858,     0,   432,   433,   434,   435,   436,   437,   438,
       0,   439,   440,   441,   442,   443,   444,     0,     0,   445,
       0,     0,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,     0,    91,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    35,
      92,    93,    94,    95,    96,    97,    98,    99,     0,   100,
     101,   102,     0,     0,     0,     0,     0,     0,     0,   103,
     104,     0,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,     0,   117,   118,   119,   120,   121,
     122,     0,   814,   123,   124,   125,   126,   127,     0,   128,
     129,   130,   131,   817,     0,   818,     0,   134,   135,   136,
     137,   138,   139,   140,   141,   142,     0,   143,   144,   145,
     146,   147,   148,     0,   149,   150,   151,   152,   819,   820,
     821,   822,   823,   824,   825,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,     0,   164,     0,   165,   166,
     167,   168,   169,   170,     0,   171,   172,   173,   174,   175,
       0,     0,   176,   177,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,     0,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   830,     0,   197,     0,   198,
     199,   200,   201,     0,   202,     0,   203,   204,     0,   205,
     206,   207,   208,   209,   210,     0,   211,     0,   212,   213,
       0,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,     0,   225,   226,   227,   228,   229,   230,     0,
     231,   232,   233,   234,   235,   236,   237,   238,   239,     0,
     240,     0,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,     0,     0,   251,   252,   253,   254,     0,   255,
     256,   257,   836,   837,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,     0,   289,   290,   291,   292,
       0,   842,   294,   295,   296,   297,   298,     0,   299,   300,
       0,     0,   301,   302,   303,     0,     0,   304,   305,   306,
     307,   308,   845,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,     0,   320,   321,   846,   323,   324,   325,
     326,   327,   328,     0,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,     0,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,     0,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
       0,   373,   374,   375,   376,   377,   849,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,     0,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   851,   402,     0,   403,   404,     0,   405,   406,   407,
     408,   409,   410,   411,     0,   412,   413,     0,     0,   414,
     415,   854,   417,   855,     0,   419,   420,   857,   422,   423,
     424,   425,   426,     0,     0,   427,   428,   429,   430,   431,
     858,     0,   432,   433,   434,   435,   436,   437,   438,     0,
     439,   440,   441,   442,   443,   444,     0,     0,   445,     0,
       0,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,     0,   733,  1217,   540,     0,     0,     0,   807,
       0,     0,     0,     0,     0,     0,     0,     0,  2655,    92,
      93,    94,    95,    96,    97,    98,    99,     0,   100,   101,
     102,     0,     0,     0,     0,     0,     0,     0,   103,   104,
       0,   105,   106,   107,     0,   109,   110,   111,   734,   735,
       0,   736,   737,     0,   117,   118,   119,   120,   121,   122,
       0,     0,   123,   124,   738,   739,   127,     0,   128,   129,
     130,   131,   740,     0,     0,     0,   134,   135,   136,   137,
     138,     0,   140,   141,   142,     0,   143,   144,   145,   146,
     147,   148,     0,     0,   150,   151,   152,     0,     0,     0,
       0,     0,     0,     0,   154,   155,   156,   157,   158,   159,
     160,   741,   742,   163,     0,   164,     0,   165,   166,   167,
     168,   169,   170,     0,   171,   172,   173,   174,   175,     0,
       0,   176,   177,   178,   179,   180,     0,   181,   182,   183,
       0,   184,   185,   186,     0,   187,   188,   189,   190,   743,
     192,   193,   194,   195,   744,  1218,   197,     0,   198,   199,
     745,   201,     0,   202,     0,   203,     0,     0,     0,   206,
     207,   208,     0,   210,     0,   211,     0,   746,   213,     0,
     214,   215,   216,   217,   218,   219,     0,   221,   222,   223,
     224,     0,   225,   226,   227,   228,   229,   230,     0,   231,
       0,   747,   234,   235,   236,   237,   748,   749,     0,   750,
       0,   241,     0,     0,   244,     0,   246,   247,   248,   249,
     250,     0,     0,   251,     0,   253,     0,     0,   255,   256,
     257,     0,     0,   258,   259,   260,   261,   262,   751,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   752,     0,   753,
     285,   286,   287,   754,     0,   289,   290,     0,   292,     0,
     755,   294,   756,   296,   297,   298,     0,   299,   300,  1219,
       0,   301,   302,   303,     0,     0,   304,   757,     0,   307,
       0,   758,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,     0,   320,   321,   759,   323,   324,   760,   326,
     327,   328,     0,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   761,   339,   340,   341,   342,     0,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
       0,   355,   356,     0,   358,   359,   360,   762,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,     0,
     373,   374,   375,   376,   377,     0,   378,   763,   380,   381,
     382,     0,   384,   385,   764,   387,     0,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   765,   400,
     766,   402,     0,   403,   404,     0,   405,     0,   407,   408,
     409,   410,   411,     0,   767,   768,     0,     0,   414,   415,
     769,   417,   770,  1220,   419,   420,   771,   422,   423,   424,
     425,   426,     0,     0,   427,   428,   429,   430,   431,     0,
       0,   432,   433,   434,   435,   436,  1110,   773,     0,   439,
       0,   441,   442,   443,   444,     0,     0,   445,     0,     0,
     446,   447,   448,   449,   450,   451,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   463,   464,   465,
     466,     0,   733,     0,     0,     0,     0,     0,  1221,  1222,
    1912,     0,     0,     0,     0,     0,     0,  1913,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       3,     4,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   734,   735,     0,
     736,   737,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   738,   739,   127,     0,   128,   129,   130,
     131,   740,     0,     0,     0,   134,   135,   136,   137,   138,
       0,   140,   141,   142,     0,   143,   144,   145,   146,   147,
     148,     0,     0,   150,   151,   152,     0,     0,     0,     0,
       0,     0,     0,   154,   155,   156,   157,   158,   159,   160,
     741,   742,   163,     0,   164,     0,   165,   166,   167,   168,
     169,   170,     0,   171,   172,   173,   174,   175,     0,     0,
     176,   177,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,     0,   187,   188,   189,   190,   743,   192,
     193,   194,   195,   744,     0,   197,     0,   198,   199,   745,
     201,     0,   202,     0,   203,     0,     0,     0,   206,   207,
     208,     0,   210,     0,   211,     0,   746,   213,     0,   214,
     215,   216,   217,   218,   219,     0,   221,   222,   223,   224,
       0,   225,   226,   227,   228,   229,   230,     0,   231,     0,
     747,   234,   235,   236,   237,   748,   749,     0,   750,     0,
     241,     0,     0,   244,     0,   246,   247,   248,   249,   250,
       0,     0,   251,     0,   253,     0,     0,   255,   256,   257,
       0,     0,   258,   259,   260,   261,   262,   751,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   752,     0,   753,   285,
     286,   287,   754,     0,   289,   290,     0,   292,     0,   755,
     294,   756,   296,   297,   298,     0,   299,   300,     0,     0,
     301,   302,   303,     0,     0,   304,   757,     0,   307,     0,
     758,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,     0,   320,   321,   759,   323,   324,   760,   326,   327,
     328,     0,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   761,   339,   340,   341,   342,     0,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,     0,
     355,   356,     0,   358,   359,   360,   762,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,    25,   373,
     374,   375,   376,   377,     0,   378,   763,   380,   381,   382,
       0,   384,   385,   764,   387,     0,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   765,   400,   766,
     402,     0,   403,   404,    30,   405,     0,   407,   408,   409,
     410,   411,     0,   767,   768,     0,     0,   414,   415,   769,
     417,   770,     0,   419,   420,   771,   422,   423,   424,   425,
     426,     0,     0,   427,   428,   429,   430,   431,     0,     0,
     432,   433,   434,   435,   436,   772,   773,     0,   439,     0,
     441,   442,   443,   444,     0,     0,   445,     0,    33,   446,
     447,   448,   449,   450,   451,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   463,   464,   465,   466,
       0,   492,    34,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    35,    92,    93,    94,
      95,    96,    97,    98,    99,   604,   100,   101,   102,     0,
       0,     0,     0,     0,     0,     0,   103,   104,     0,   105,
     106,   107,     0,   109,   110,   111,   112,   113,     0,   115,
     116,     0,   117,   118,   119,   120,   121,   122,     0,     0,
     123,   124,   125,   126,   127,     0,   128,   129,   130,   131,
     132,     0,     0,     0,   134,   135,   136,   137,   138,     0,
     140,   141,   142,     0,   143,   144,   145,   146,   147,   148,
       0,     0,   150,   151,   152,     0,     0,     0,     0,     0,
       0,     0,   154,   155,   156,   157,   158,   159,   160,   161,
     162,   163,     0,   164,     0,   165,   166,   167,   168,   169,
     170,     0,   171,   172,   173,   174,   175,     0,     0,   176,
     177,   178,   179,   180,     0,   181,   182,   183,     0,   184,
     185,   186,     0,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,     0,   197,     0,   198,   199,   200,   201,
       0,   202,     0,   203,     0,     0,     0,   206,   207,   208,
       0,   210,     0,   211,     0,   212,   213,     0,   214,   215,
     216,   217,   218,   219,     0,   221,   222,   223,   224,     0,
     225,   226,   227,   228,   229,   230,     0,   231,     0,   233,
     234,   235,   236,   237,   238,   239,     0,   240,     0,   241,
       0,     0,   244,     0,   246,   247,   248,   249,   250,     0,
       0,   251,     0,   253,     0,     0,   255,   256,   257,     0,
       0,   258,   259,   260,   261,   262,   494,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,     0,   284,   285,   286,
     287,   288,     0,   289,   290,     0,   292,     0,   293,   294,
     295,   296,   297,   298,     0,   299,   300,     0,     0,   301,
     302,   303,     0,     0,   304,   305,     0,   307,     0,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
       0,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,     0,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,     0,   355,
     356,     0,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,    25,   373,   374,
     375,   376,   377,     0,   378,   379,   380,   381,   382,     0,
     384,   385,   386,   387,     0,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   496,   400,   401,   402,
       0,   403,   404,    30,   405,     0,   407,   408,   409,   410,
     411,     0,   605,   413,     0,     0,   606,   415,   416,   417,
     418,     0,   419,   420,   421,   422,   423,   424,   425,   426,
       0,     0,   427,   428,   429,   430,   431,     0,     0,   432,
     433,   434,   435,   436,   566,   438,     0,   439,     0,   441,
     442,   443,   444,     0,     0,   445,     0,    33,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,     0,
     492,    34,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    35,    92,    93,    94,    95,
      96,    97,    98,    99,     0,   100,   101,   102,     0,     0,
       0,     0,     0,     0,     0,   103,   104,     0,   105,   106,
     107,     0,   109,   110,   111,   112,   113,     0,   115,   116,
       0,   117,   118,   119,   120,   121,   122,     0,     0,   123,
     124,   125,   126,   127,     0,   128,   129,   130,   131,   132,
       0,     0,     0,   134,   135,   136,   137,   138,     0,   140,
     141,   142,     0,   143,   144,   145,   146,   147,   148,     0,
       0,   150,   151,   152,     0,     0,     0,     0,     0,     0,
       0,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,     0,   164,     0,   165,   166,   167,   168,   169,   170,
       0,   171,   172,   173,   174,   175,     0,     0,   176,   177,
     178,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,     0,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,     0,   197,     0,   198,   199,   200,   201,     0,
     202,     0,   203,     0,     0,     0,   206,   207,   208,     0,
     210,     0,   211,     0,   212,   213,     0,   214,   215,   216,
     217,   218,   219,     0,   221,   222,   223,   224,     0,   225,
     226,   227,   228,   229,   230,     0,   231,     0,   233,   234,
     235,   236,   237,   238,   239,     0,   240,     0,   241,     0,
       0,   244,     0,   246,   247,   248,   249,   250,     0,     0,
     251,     0,   253,     0,     0,   255,   256,   257,     0,     0,
     258,   259,   260,   261,   262,   494,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,     0,   284,   285,   286,   287,
     288,     0,   289,   290,     0,   292,     0,   293,   294,   295,
     296,   297,   298,     0,   299,   300,     0,     0,   301,   302,
     303,     0,     0,   304,   305,     0,   307,     0,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,     0,
     320,   321,   322,   323,   324,   325,   326,   327,   328,     0,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,     0,   355,   356,
       0,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,    25,   373,   374,   375,
     376,   377,     0,   378,   379,   380,   381,   382,     0,   384,
     385,   386,   387,     0,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   496,   400,   401,   402,     0,
     403,   404,    30,   405,     0,   407,   408,   409,   410,   411,
       0,   412,   413,     0,     0,   414,   415,   416,   417,   418,
       0,   419,   420,   421,   422,   423,   424,   425,   426,     0,
       0,   427,   428,   429,   430,   431,     0,     0,   432,   433,
     434,   435,   436,   566,   438,     0,   439,     0,   441,   442,
     443,   444,     0,     0,   445,     0,    33,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,     0,   492,
      34,   570,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    35,    92,    93,    94,    95,    96,
      97,    98,    99,     0,   100,   101,   102,     0,     0,     0,
       0,     0,     0,     0,   103,   104,     0,   105,   106,   107,
       0,   109,   110,   111,   112,   113,     0,   115,   116,     0,
     117,   118,   119,   120,   121,   122,     0,     0,   123,   124,
     125,   126,   127,     0,   128,   129,   130,   131,   132,     0,
       0,     0,   134,   135,   136,   137,   138,     0,   140,   141,
     142,     0,   143,   144,   145,   146,   147,   148,     0,     0,
     150,   151,   152,     0,     0,     0,     0,     0,     0,     0,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
       0,   164,     0,   165,   166,   167,   168,   169,   170,     0,
     171,   172,   173,   174,   175,     0,     0,   176,   177,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,     0,   197,     0,   198,   199,   200,   201,     0,   202,
       0,   203,     0,     0,     0,   206,   207,   208,     0,   210,
       0,   211,     0,   212,   213,     0,   214,   215,   216,   217,
     218,   219,     0,   221,   222,   223,   224,     0,   225,   226,
     227,   228,   229,   230,     0,   231,     0,   233,   234,   235,
     236,   237,   238,   239,     0,   240,     0,   241,     0,     0,
     244,     0,   246,   247,   248,   249,   250,     0,     0,   251,
       0,   253,     0,     0,   255,   256,   257,     0,     0,   258,
     259,   260,   261,   262,   494,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,     0,   284,   285,   286,   287,   288,
       0,   289,   290,     0,   292,     0,   293,   294,   295,   296,
     297,   298,     0,   299,   300,     0,     0,   301,   302,   303,
       0,     0,   304,   305,     0,   307,     0,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,     0,   320,
     321,   322,   323,   324,   325,   326,   327,   328,     0,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,     0,   355,   356,     0,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,     0,   373,   374,   375,   376,
     377,     0,   378,   379,   380,   381,   382,     0,   384,   385,
     386,   387,     0,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   496,   400,   401,   402,     0,   403,
     404,     0,   405,     0,   407,   408,   409,   410,   411,     0,
     412,   413,     0,     0,   414,   415,   416,   417,   418,     0,
     419,   420,   421,   422,   423,   424,   425,   426,     0,     0,
     427,   428,   429,   430,   431,     0,     0,   432,   433,   434,
     435,   436,   437,   438,     0,   439,     0,   441,   442,   443,
     444,     0,     0,   445,     0,     0,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,     0,   492,     0,
     570,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   907,    92,    93,    94,    95,    96,    97,
      98,    99,     0,   100,   101,   102,     0,     0,     0,     0,
       0,     0,     0,   103,   104,     0,   105,   106,   107,     0,
     109,   110,   111,   112,   113,     0,   115,   116,     0,   117,
     118,   119,   120,   121,   122,     0,     0,   123,   124,   125,
     126,   127,     0,   128,   129,   130,   131,   132,     0,     0,
       0,   134,   135,   136,   137,   138,     0,   140,   141,   142,
       0,   143,   144,   145,   146,   147,   148,     0,     0,   150,
     151,   152,     0,     0,     0,     0,     0,     0,     0,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,     0,
     164,     0,   165,   166,   167,   168,   169,   170,     0,   171,
     172,   173,   174,   175,     0,     0,   176,   177,   178,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,     0,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
       0,   197,     0,   198,   199,   200,   201,     0,   202,     0,
     203,     0,     0,     0,   206,   207,   208,     0,   210,     0,
     211,     0,   212,   213,     0,   214,   215,   216,   217,   218,
     219,     0,   221,   222,   223,   224,     0,   225,   226,   227,
     228,   229,   230,     0,   231,     0,   233,   234,   235,   236,
     237,   238,   239,     0,   240,     0,   241,     0,     0,   244,
       0,   246,   247,   248,   249,   250,     0,     0,   251,     0,
     253,     0,     0,   255,   256,   257,     0,     0,   258,   259,
     260,   261,   262,   494,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,     0,   284,   285,   286,   287,   288,     0,
     289,   290,     0,   292,     0,   293,   294,   295,   296,   297,
     298,     0,   299,   300,     0,     0,   301,   302,   303,     0,
       0,   304,   305,     0,   307,     0,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,     0,   320,   321,
     322,   323,   324,   325,   326,   327,   328,     0,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,     0,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,     0,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,     0,   373,   374,   375,   376,   377,
       0,   378,   379,   380,   381,   382,     0,   384,   385,   386,
     387,     0,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   496,   400,   401,   402,     0,   403,   404,
       0,   405,     0,   407,   408,   409,   410,   411,     0,   412,
     413,     0,     0,   414,   415,   416,   417,   418,     0,   419,
     420,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,   429,   430,   431,     0,     0,   432,   433,   434,   435,
     436,   437,   438,     0,   439,     0,   441,   442,   443,   444,
       0,     0,   445,     0,     0,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,     0,   492,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2502,    92,    93,    94,    95,    96,    97,    98,
      99,     0,   100,   101,   102,     0,     0,     0,     0,     0,
       0,     0,   103,   104,     0,   105,   106,   107,     0,   109,
     110,   111,   112,   113,     0,   115,   116,     0,   117,   118,
     119,   120,   121,   122,     0,     0,   123,   124,   125,   126,
     127,     0,   128,   129,   130,   131,   132,     0,     0,     0,
     134,   135,   136,   137,   138,     0,   140,   141,   142,     0,
     143,   144,   145,   146,   147,   148,     0,     0,   150,   151,
     152,     0,     0,     0,     0,     0,     0,     0,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,     0,   164,
       0,   165,   166,   167,   168,   169,   170,     0,   171,   172,
     173,   174,   175,     0,     0,   176,   177,   178,   179,   180,
       0,   181,   182,   183,     0,   184,   185,   186,     0,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,     0,
     197,     0,   198,   199,   200,   201,     0,   202,     0,   203,
       0,     0,     0,   206,   207,   208,     0,   210,     0,   211,
       0,   212,   213,     0,   214,   215,   216,   217,   218,   219,
       0,   221,   222,   223,   224,     0,   225,   226,   227,   228,
     229,   230,     0,   231,     0,   233,   234,   235,   236,   237,
     238,   239,     0,   240,     0,   241,     0,     0,   244,     0,
     246,   247,   248,   249,   250,     0,     0,   251,     0,   253,
       0,     0,   255,   256,   257,     0,     0,   258,   259,   260,
     261,   262,   494,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,     0,   284,   285,   286,   287,   288,     0,   289,
     290,     0,   292,     0,   293,   294,   295,   296,   297,   298,
       0,   299,   300,     0,     0,   301,   302,   303,     0,     0,
     304,   305,     0,   307,     0,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,     0,   320,   321,   322,
     323,   324,   325,   326,   327,   328,     0,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,     0,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,     0,   355,   356,     0,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,     0,   373,   374,   375,   376,   377,     0,
     378,   379,   380,   381,   382,     0,   384,   385,   386,   387,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   496,   400,   401,   402,     0,   403,   404,     0,
     405,     0,   407,   408,   409,   410,   411,     0,   412,   413,
       0,     0,   414,   415,   416,   417,   418,     0,   419,   420,
     421,   422,   423,   424,   425,   426,     0,     0,   427,   428,
     429,   430,   431,     0,     0,   432,   433,   434,   435,   436,
     437,   438,     0,   439,     0,   441,   442,   443,   444,     0,
       0,   445,     0,     0,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,     0,   492,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1635,    92,    93,    94,    95,    96,    97,    98,    99,
       0,   100,   101,   102,     0,     0,     0,     0,     0,     0,
       0,   103,   104,     0,   105,   106,   107,     0,   109,   110,
     111,   112,   113,     0,   115,   116,     0,   117,   118,   119,
     120,   121,   122,     0,     0,   123,   124,   125,   126,   127,
       0,   128,   129,   130,   131,   132,     0,     0,     0,   134,
     135,   136,   137,   138,     0,   140,   141,   142,     0,   143,
     144,   145,   146,   147,   148,     0,     0,   150,   151,   152,
       0,     0,     0,     0,     0,     0,     0,   154,   155,   156,
     157,   158,   159,   160,   161,   162,   163,     0,   164,     0,
     165,   166,   167,   168,   169,   170,     0,   171,   172,   173,
     174,   175,     0,     0,   176,   177,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,     0,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,     0,   197,
       0,   198,   199,   200,   201,     0,   202,     0,   203,     0,
       0,     0,   206,   207,   208,     0,   210,     0,   211,     0,
     212,   213,     0,   214,   215,   216,   217,   218,   219,     0,
     221,   222,   223,   224,     0,   225,   226,   227,   228,   229,
     230,     0,   231,     0,   233,   234,   235,   236,   237,   238,
     239,     0,   240,     0,   241,     0,     0,   244,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,   253,     0,
       0,   255,   256,   257,     0,     0,   258,   259,   260,   261,
     262,   494,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,     0,   284,   285,   286,   287,   288,     0,   289,   290,
       0,   292,     0,   293,   294,   295,   296,   297,   298,     0,
     299,   300,     0,     0,   301,   302,   303,     0,     0,   304,
     305,     0,   307,     0,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,     0,   320,   321,   322,   323,
     324,   325,   326,   327,   328,     0,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,     0,   355,   356,     0,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,     0,   373,   374,   375,   376,   377,     0,   378,
     379,   380,   381,   382,     0,   384,   385,   386,   387,     0,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   496,   400,   401,   402,     0,   403,   404,     0,   405,
       0,   407,   408,   409,   410,   411,     0,   412,   413,     0,
       0,   414,   415,   416,   417,   418,     0,   419,   420,   421,
     422,   423,   424,   425,   426,     0,     0,   427,   428,   429,
     430,   431,     0,     0,   432,   433,   434,   435,   436,   437,
     438,     0,   439,     0,   441,   442,   443,   444,     0,     0,
     445,     0,     0,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,     0,   492,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1739,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     100,   101,   102,     0,     0,     0,     0,     0,     0,     0,
     103,   104,     0,   105,   106,   107,     0,   109,   110,   111,
     112,   113,     0,   115,   116,     0,   117,   118,   119,   120,
     121,   122,     0,     0,   123,   124,   125,   126,   127,     0,
     128,   129,   130,   131,   132,     0,     0,     0,   134,   135,
     136,   137,   138,     0,   140,   141,   142,     0,   143,   144,
     145,   146,   147,   148,     0,     0,   150,   151,   152,     0,
       0,     0,     0,     0,     0,     0,   154,   155,   156,   157,
     158,   159,   160,   161,   162,   163,     0,   164,     0,   165,
     166,   167,   168,   169,   170,     0,   171,   172,   173,   174,
     175,     0,     0,   176,   177,   178,   179,   180,     0,   181,
     182,   183,     0,   184,   185,   186,     0,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,     0,   197,     0,
     198,   199,   200,   201,     0,   202,     0,   203,     0,     0,
       0,   206,   207,   208,     0,   210,     0,   211,     0,   212,
     213,     0,   214,   215,   216,   217,   218,   219,     0,   221,
     222,   223,   224,     0,   225,   226,   227,   228,   229,   230,
       0,   231,     0,   233,   234,   235,   236,   237,   238,   239,
       0,   240,     0,   241,     0,     0,   244,     0,   246,   247,
     248,   249,   250,     0,     0,   251,     0,   253,     0,     0,
     255,   256,   257,     0,     0,   258,   259,   260,   261,   262,
     494,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
       0,   284,   285,   286,   287,   288,     0,   289,   290,     0,
     292,     0,   293,   294,   295,   296,   297,   298,     0,   299,
     300,     0,     0,   301,   302,   303,     0,     0,   304,   305,
       0,   307,     0,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,     0,   320,   321,   322,   323,   324,
     325,   326,   327,   328,     0,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,     0,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,     0,   355,   356,     0,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,     0,   373,   374,   375,   376,   377,     0,   378,   379,
     380,   381,   382,     0,   384,   385,   386,   387,     0,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     496,   400,   401,   402,     0,   403,   404,     0,   405,     0,
     407,   408,   409,   410,   411,     0,   412,   413,     0,     0,
     414,   415,   416,   417,   418,     0,   419,   420,   421,   422,
     423,   424,   425,   426,     0,     0,   427,   428,   429,   430,
     431,     0,     0,   432,   433,   434,   435,   436,   437,   438,
       0,   439,     0,   441,   442,   443,   444,     0,     0,   445,
       0,     0,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,     0,     0,     0,     0,  2363,  1217,   540,
       0,     0,  1595,   807,     0,     0,     0,     0,     0,  2261,
    1596,  1597,  1598,    92,    93,    94,    95,    96,    97,    98,
      99,  1038,   100,   101,   102,  1039,  1040,  1041,  1042,  1043,
    1044,  1045,   103,   104,  1046,   105,   106,   107,  2364,   109,
     110,   111,     0,   654,  2365,   656,   657,  1047,   117,   118,
     119,   120,   121,   122,  1048,  1049,   123,   124,   658,   659,
     127,  1050,   128,   129,   130,   131,     0,  1051,  2366,  1052,
     134,   135,   136,   137,   138,  2367,   140,   141,   142,  1053,
     143,   144,   145,   146,   147,   148,  1054,  2368,   150,   151,
     152,  1055,  1056,  1057,  2369,  1058,  1059,  1060,   154,   155,
     156,   157,   158,   159,   160,   664,   665,   163,  1061,   164,
    1062,   165,   166,   167,   168,   169,   170,  1063,   171,   172,
     173,   174,   175,  1064,  1065,   176,   177,   666,   179,   180,
    1066,   181,   182,   183,  1067,   184,   185,   186,  1068,   187,
     188,   189,   190,     0,   192,   193,   194,   195,     0,  1069,
     197,  1070,   198,   199,   667,   201,  1071,   202,  1072,   203,
    2370,  1073,  2371,   206,   207,   208,  2372,   210,  1074,   211,
    1075,     0,   213,  1076,   214,   215,   216,   217,   218,   219,
    2373,   221,   222,   223,   224,  1077,   225,   226,   227,   228,
     229,   230,  1078,   231,  2374,     0,   234,   235,   236,   237,
     674,   675,  1079,   676,  1080,   241,  2375,  2376,   244,  2377,
     246,   247,   248,   249,   250,  1081,  1082,   251,  2378,   253,
    2379,  1083,   255,   256,   257,  1084,  1085,   258,   259,   260,
     261,   262,  2380,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   683,  2381,   685,   285,   286,   287,  2382,  1086,   289,
     290,  2383,   292,  1087,     0,   294,   687,   296,   297,   298,
    1088,   299,   300,  1089,  1090,  2384,   302,   303,  1091,  1092,
     304,     0,  2385,   307,  2386,     0,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,  1093,   320,   321,     0,
     323,   324,     0,   326,   327,   328,  1094,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   690,   339,   340,   341,
     342,  1095,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,  1096,   355,   356,  2387,   358,   359,
     360,   692,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,  1097,   373,   374,   375,   376,   377,  1098,
     378,  2388,   380,   381,   382,  2389,   384,   385,   695,   387,
    1099,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,  2390,   400,     0,   402,  1100,   403,   404,  1101,
     405,  2391,   407,   408,   409,   410,   411,  1102,   698,   699,
    1103,  1104,   414,   415,     0,   417,     0,  1105,   419,   420,
    2392,   422,   423,   424,   425,   426,  1106,  1107,   427,   428,
     429,   430,   431,  1108,  1109,   432,   433,   434,   435,   436,
       0,   701,  1111,   439,  2393,   441,   442,   443,   444,  1112,
    1113,   445,  1114,  1115,   446,   447,   448,   449,   450,   451,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   463,   464,   465,   466,     0,   492,     0,  1599,  1600,
    1601,  1595,  2394,  2395,  1604,  1605,  1606,  1607,     0,  1596,
    1597,  1598,    92,    93,    94,    95,    96,    97,    98,    99,
       0,   100,   101,   102,     0,     0,     0,     0,     0,     0,
       0,   103,   104,     0,   105,   106,   107,     0,   109,   110,
     111,   112,   113,     0,   115,   116,     0,   117,   118,   119,
     120,   121,   122,     0,     0,   123,   124,   125,   126,   127,
       0,   128,   129,   130,   131,   132,     0,     0,     0,   134,
     135,   136,   137,   138,     0,   140,   141,   142,     0,   143,
     144,   145,   146,   147,   148,     0,     0,   150,   151,   152,
       0,     0,     0,     0,     0,     0,     0,   154,   155,   156,
     157,   158,   159,   160,   161,   162,   163,     0,   164,     0,
     165,   166,   167,   168,   169,   170,     0,   171,   172,   173,
     174,   175,     0,     0,   176,   177,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,     0,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,     0,   197,
       0,   198,   199,   200,   201,     0,   202,     0,   203,     0,
       0,     0,   206,   207,   208,     0,   210,     0,   211,     0,
     212,   213,     0,   214,   215,   216,   217,   218,   219,     0,
     221,   222,   223,   224,     0,   225,   226,   227,   228,   229,
     230,     0,   231,     0,   233,   234,   235,   236,   237,   238,
     239,     0,   240,     0,   241,     0,     0,   244,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,   253,     0,
       0,   255,   256,   257,     0,     0,   258,   259,   260,   261,
     262,   494,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,     0,   284,   285,   286,   287,   288,     0,   289,   290,
       0,   292,     0,   293,   294,   295,   296,   297,   298,     0,
     299,   300,     0,     0,   301,   302,   303,     0,     0,   304,
     305,     0,   307,     0,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,     0,   320,   321,   322,   323,
     324,   325,   326,   327,   328,     0,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,     0,   355,   356,     0,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,     0,   373,   374,   375,   376,   377,     0,   378,
     379,   380,   381,   382,     0,   384,   385,   386,   387,     0,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   496,   400,   401,   402,     0,   403,   404,     0,   405,
       0,   407,   408,   409,   410,   411,     0,   412,   413,     0,
       0,   414,   415,   416,   417,   418,     0,   419,   420,   421,
     422,   423,   424,   425,   426,     0,     0,   427,   428,   429,
     430,   431,     0,     0,   432,   433,   434,   435,   436,   437,
     438,     0,   439,     0,   441,   442,   443,   444,     0,     0,
     445,     0,     0,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,     0,     0,     0,  1599,  1600,  1601,
       0,  1602,  1603,  1604,  1605,  1606,  1607,  1292,     0,     0,
    1293,     0,     0,     0,     0,  1294,  1295,  1296,     0,     0,
       0,     0,     0,     0,     0,  1292,     0,     0,  1293,     0,
       0,     0,  1297,  1294,  1295,  1296,     0,     0,     0,     0,
    1299,     0,     0,  1292,     0,     0,  1293,  1300,     0,     0,
    1297,  1294,  1295,  1296,     0,     0,     0,     0,  1299,     0,
       0,     0,     0,     0,     0,  1300,     0,     0,  1297,     0,
       0,  1292,  1301,     0,  1293,     0,  1299,     0,     0,  1294,
    1295,  1296,     0,  1300,     0,     0,     0,     0,     0,  1292,
    1301,     0,  1293,     0,     0,     0,  1297,  1294,  1295,  1296,
       0,     0,     0,     0,  1299,     0,     0,     0,  1301,     0,
       0,  1300,     0,     0,  1297,     0,     0,     0,     0,     0,
       0,     0,  1299,     0,     0,     0,     0,     0,     0,  1300,
       0,     0,     0,     0,     0,     0,  1301,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1301,     0,     0,     0,     0,  1292,
       0,     0,  1293,     0,     0,     0,     0,  1294,  1295,  1296,
       0,  1302,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1297,  1303,     0,     0,     0,  1302,
    1304,     0,  1299,     0,     0,     0,     0,     0,     0,  1300,
       0,     0,     0,  1303,     0,     0,     0,  1302,  1304,     0,
       0,  1305,  1306,     0,     0,     0,     0,     0,     0,     0,
       0,  1303,     0,     0,  1301,  1307,  1304,     0,     0,  1305,
    1306,     0,     0,     0,     0,  1302,     0,     0,     0,     0,
       0,     0,     0,  1307,     0,     0,     0,  1305,  1306,  1303,
       0,     0,     0,  1302,  1304,     0,     0,     0,     0,     0,
       0,  1307,     0,  1308,     0,     0,  1309,  1303,     0,     0,
       0,     0,  1304,     0,     0,  1305,  1306,     0,     0,     0,
    1310,  1308,     0,  1311,  1309,     0,     0,     0,     0,  1307,
       0,     0,     0,  1305,  1306,     0,     0,     0,  1310,  1308,
       0,  1311,  1309,     0,     0,     0,     0,  1307,     0,     0,
       0,     0,     0,     0,     0,     0,  1310,     0,     0,  1311,
       0,     0,     0,  1302,     0,     0,     0,  1308,     0,     0,
    1309,     0,     0,     0,     0,     0,     0,  1303,     0,     0,
       0,     0,  1304,     0,  1310,  1308,     0,  1311,  1309,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1310,  1305,  1306,  1311,     0,     0,     0,     0,
    1312,     0,     0,     0,     0,     0,     0,  1307,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1312,  1292,
       0,     0,  1293,     0,     0,     0,     0,  1294,  1295,  1296,
       0,     0,     0,     0,     0,     0,  1312,     0,     0,     0,
       0,     0,     0,     0,  1297,  1308,     0,     0,  1309,     0,
       0,     0,  1299,     0,     0,     0,     0,     0,     0,  1300,
       0,     0,  1310,     0,  1312,  1311,  1292,     0,     0,  1293,
       0,     0,     0,     0,  1294,  1295,  1296,     0,     0,     0,
       0,     0,  1312,     0,  1301,     0,     0,     0,     0,     0,
       0,  1297,     0,     0,     0,     0,     0,     0,     0,  1299,
    1313,     0,     0,  1314,  1315,  1316,  1300,  1317,  1318,  1319,
    1320,  1321,  1322,     0,     0,     0,     0,  2200,  1313,     0,
       0,  1314,  1315,  1316,     0,  1317,  1318,  1319,  1320,  1321,
    1322,  1301,     0,     0,     0,  2239,  1313,     0,     0,  1314,
    1315,  1316,     0,  1317,  1318,  1319,  1320,  1321,  1322,     0,
       0,     0,  1312,  2327,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1313,     0,     0,  1314,  1315,  1316,
       0,  1317,  1318,  1319,  1320,  1321,  1322,     0,     0,     0,
       0,  2450,  1313,  1302,     0,  1314,  1315,  1316,     0,  1317,
    1318,  1319,  1320,  1321,  1322,     0,     0,  1303,     0,  2472,
       0,     0,  1304,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1305,  1306,     0,     0,     0,     0,     0,
    1302,     0,     0,     0,     0,     0,     0,  1307,     0,     0,
       0,     0,     0,     0,  1303,     0,     0,     0,     0,  1304,
       0,     0,  1313,     0,     0,  1314,  1315,  1316,     0,  1317,
    1318,  1319,  1320,  1321,  1322,     0,     0,     0,     0,  2616,
    1305,  1306,     0,     0,     0,  1308,     0,     0,  1309,     0,
       0,     0,     0,     0,  1307,     0,     0,     0,     0,     0,
       0,     0,  1310,     0,     0,  1311,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1308,     0,     0,  1309,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1310,
       0,     0,  1311,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1312,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1312,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1313,     0,     0,  1314,  1315,  1316,     0,  1317,
    1318,  1319,  1320,  1321,  1322,     0,     0,     0,     0,  2816,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1313,
       0,  1037,  1314,  1315,  1316,     0,  1317,  1318,  1319,  1320,
    1321,  1322,     0,     0,     0,     0,  2828,    92,    93,    94,
      95,    96,    97,    98,    99,  1038,   100,   101,   102,  1039,
    1040,  1041,  1042,  1043,  1044,  1045,   103,   104,  1046,   105,
     106,   107,     0,   109,   110,   111,   734,   735,     0,   736,
     737,  1047,   117,   118,   119,   120,   121,   122,  1048,  1049,
     123,   124,   738,   739,   127,  1050,   128,   129,   130,   131,
     740,  1051,     0,  1052,   134,   135,   136,   137,   138,     0,
     140,   141,   142,  1053,   143,   144,   145,   146,   147,   148,
    1054,     0,   150,   151,   152,  1055,  1056,  1057,     0,  1058,
    1059,  1060,   154,   155,   156,   157,   158,   159,   160,   741,
     742,   163,  1061,   164,  1062,   165,   166,   167,   168,   169,
     170,  1063,   171,   172,   173,   174,   175,  1064,  1065,   176,
     177,   178,   179,   180,  1066,   181,   182,   183,  1067,   184,
     185,   186,  1068,   187,   188,   189,   190,   743,   192,   193,
     194,   195,   744,  1069,   197,  1070,   198,   199,   745,   201,
    1071,   202,  1072,   203,     0,  1073,     0,   206,   207,   208,
       0,   210,  1074,   211,  1075,   746,   213,  1076,   214,   215,
     216,   217,   218,   219,     0,   221,   222,   223,   224,  1077,
     225,   226,   227,   228,   229,   230,  1078,   231,     0,   747,
     234,   235,   236,   237,   748,   749,  1079,   750,  1080,   241,
       0,     0,   244,     0,   246,   247,   248,   249,   250,  1081,
    1082,   251,     0,   253,     0,  1083,   255,   256,   257,  1084,
    1085,   258,   259,   260,   261,   262,   751,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   752,     0,   753,   285,   286,
     287,   754,  1086,   289,   290,     0,   292,  1087,   755,   294,
     756,   296,   297,   298,  1088,   299,   300,  1089,  1090,   301,
     302,   303,  1091,  1092,   304,   757,     0,   307,     0,   758,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
    1093,   320,   321,   759,   323,   324,   760,   326,   327,   328,
    1094,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     761,   339,   340,   341,   342,  1095,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,  1096,   355,
     356,     0,   358,   359,   360,   762,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,  1097,   373,   374,
     375,   376,   377,  1098,   378,   763,   380,   381,   382,     0,
     384,   385,   764,   387,  1099,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   765,   400,   766,   402,
    1100,   403,   404,  1101,   405,     0,   407,   408,   409,   410,
     411,  1102,   767,   768,  1103,  1104,   414,   415,   769,   417,
     770,  1105,   419,   420,   771,   422,   423,   424,   425,   426,
    1106,  1107,   427,   428,   429,   430,   431,  1108,  1109,   432,
     433,   434,   435,   436,  1110,   773,  1111,   439,     0,   441,
     442,   443,   444,  1112,  1113,   445,  1114,  1115,   446,   447,
     448,   449,   450,   451,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   463,   464,   465,   466,   492,
       0,     0,     0,     0,     0,     0,     0,     0,  1718,     0,
       0,     0,     0,     0,     0,    92,    93,    94,    95,    96,
      97,    98,    99,     0,   100,   101,   102,     0,     0,     0,
       0,     0,     0,     0,   103,   104,     0,   105,   106,   107,
       0,   109,   110,   111,   112,   113,     0,   115,   116,     0,
     117,   118,   119,   120,   121,   122,     0,     0,   123,   124,
     125,   126,   127,     0,   128,   129,   130,   131,   132,     0,
       0,     0,   134,   135,   136,   137,   138,     0,   140,   141,
     142,     0,   143,   144,   145,   146,   147,   148,     0,     0,
     150,   151,   152,     0,     0,     0,     0,     0,     0,     0,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
       0,   164,     0,   165,   166,   167,   168,   169,   170,     0,
     171,   172,   173,   174,   175,     0,     0,   176,   177,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,     0,   197,     0,   198,   199,   200,   201,     0,   202,
       0,   203,     0,     0,     0,   206,   207,   208,     0,   210,
       0,   211,     0,   212,   213,     0,   214,   215,   216,   217,
     218,   219,     0,   221,   222,   223,   224,     0,   225,   226,
     227,   228,   229,   230,     0,   231,     0,   233,   234,   235,
     236,   237,   238,   239,     0,   240,     0,   241,     0,     0,
     244,     0,   246,   247,   248,   249,   250,     0,     0,   251,
       0,   253,     0,     0,   255,   256,   257,     0,     0,   258,
     259,   260,   261,   262,   494,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,     0,   284,   285,   286,   287,   288,
       0,   289,   290,     0,   292,     0,   293,   294,   295,   296,
     297,   298,     0,   299,   300,     0,     0,   301,   302,   303,
       0,     0,   304,   305,     0,   307,     0,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,     0,   320,
     321,   322,   323,   324,   325,   326,   327,   328,     0,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,     0,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,     0,   355,   356,     0,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,     0,   373,   374,   375,   376,
     377,     0,   378,   379,   380,   381,   382,     0,   384,   385,
     386,   387,     0,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   496,   400,   401,   402,     0,   403,
     404,     0,   405,     0,   407,   408,   409,   410,   411,     0,
     412,   413,     0,     0,   414,   415,   416,   417,   418,     0,
     419,   420,   421,   422,   423,   424,   425,   426,     0,     0,
     427,   428,   429,   430,   431,     0,     0,   432,   433,   434,
     435,   436,   437,   438,     0,   439,     0,   441,   442,   443,
     444,     0,     0,   445,     0,     0,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   733,  1217,   540,
       0,     0,     0,   807,     0,     0,  2192,     0,     0,     0,
       0,     0,     0,    92,    93,    94,    95,    96,    97,    98,
      99,     0,   100,   101,   102,     0,     0,     0,     0,     0,
       0,     0,   103,   104,     0,   105,   106,   107,     0,   109,
     110,   111,   734,   735,     0,   736,   737,     0,   117,   118,
     119,   120,   121,   122,     0,     0,   123,   124,   738,   739,
     127,     0,   128,   129,   130,   131,   740,     0,     0,     0,
     134,   135,   136,   137,   138,     0,   140,   141,   142,     0,
     143,   144,   145,   146,   147,   148,     0,     0,   150,   151,
     152,     0,     0,     0,     0,     0,     0,     0,   154,   155,
     156,   157,   158,   159,   160,   741,   742,   163,  1351,   164,
       0,   165,   166,   167,   168,   169,   170,     0,   171,   172,
     173,   174,   175,     0,     0,   176,   177,   178,   179,   180,
       0,   181,   182,   183,     0,   184,   185,   186,     0,   187,
     188,   189,   190,   743,   192,   193,   194,   195,   744,  1218,
     197,     0,   198,   199,   745,   201,     0,   202,     0,   203,
       0,     0,     0,   206,   207,   208,     0,   210,     0,   211,
       0,   746,   213,     0,   214,   215,   216,   217,   218,   219,
       0,   221,   222,   223,   224,     0,   225,   226,   227,   228,
     229,   230,     0,   231,     0,   747,   234,   235,   236,   237,
     748,   749,     0,   750,     0,   241,     0,     0,   244,     0,
     246,   247,   248,   249,   250,     0,     0,   251,     0,   253,
       0,     0,   255,   256,   257,     0,     0,   258,   259,   260,
     261,   262,   751,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   752,     0,   753,   285,   286,   287,   754,     0,   289,
     290,     0,   292,     0,   755,   294,   756,   296,   297,   298,
       0,   299,   300,  1219,     0,   301,   302,   303,     0,     0,
     304,   757,     0,   307,     0,   758,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,     0,   320,   321,   759,
     323,   324,   760,   326,   327,   328,     0,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   761,   339,   340,   341,
     342,     0,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,     0,   355,   356,     0,   358,   359,
     360,   762,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,     0,   373,   374,   375,   376,   377,     0,
     378,   763,   380,   381,   382,     0,   384,   385,   764,   387,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   765,   400,   766,   402,     0,   403,   404,     0,
     405,     0,   407,   408,   409,   410,   411,     0,   767,   768,
       0,     0,   414,   415,   769,   417,   770,  1220,   419,   420,
     771,   422,   423,   424,   425,   426,     0,     0,   427,   428,
     429,   430,   431,     0,     0,   432,   433,   434,   435,   436,
    1110,   773,     0,   439,     0,   441,   442,   443,   444,     0,
       0,   445,     0,     0,   446,   447,   448,   449,   450,   451,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   463,   464,   465,   466,   733,  1217,   540,     0,     0,
       0,   807,  1221,  1222,     0,     0,     0,     0,     0,     0,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     100,   101,   102,     0,     0,     0,     0,     0,     0,     0,
     103,   104,     0,   105,   106,   107,     0,   109,   110,   111,
     734,   735,     0,   736,   737,     0,   117,   118,   119,   120,
     121,   122,     0,     0,   123,   124,   738,   739,   127,     0,
     128,   129,   130,   131,   740,     0,     0,     0,   134,   135,
     136,   137,   138,     0,   140,   141,   142,     0,   143,   144,
     145,   146,   147,   148,     0,     0,   150,   151,   152,     0,
       0,     0,     0,     0,     0,     0,   154,   155,   156,   157,
     158,   159,   160,   741,   742,   163,  1353,   164,     0,   165,
     166,   167,   168,   169,   170,     0,   171,   172,   173,   174,
     175,     0,     0,   176,   177,   178,   179,   180,     0,   181,
     182,   183,     0,   184,   185,   186,     0,   187,   188,   189,
     190,   743,   192,   193,   194,   195,   744,  1218,   197,     0,
     198,   199,   745,   201,     0,   202,     0,   203,     0,     0,
       0,   206,   207,   208,     0,   210,     0,   211,     0,   746,
     213,     0,   214,   215,   216,   217,   218,   219,     0,   221,
     222,   223,   224,     0,   225,   226,   227,   228,   229,   230,
       0,   231,     0,   747,   234,   235,   236,   237,   748,   749,
       0,   750,     0,   241,     0,     0,   244,     0,   246,   247,
     248,   249,   250,     0,     0,   251,     0,   253,     0,     0,
     255,   256,   257,     0,     0,   258,   259,   260,   261,   262,
     751,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   752,
       0,   753,   285,   286,   287,   754,     0,   289,   290,     0,
     292,     0,   755,   294,   756,   296,   297,   298,     0,   299,
     300,  1219,     0,   301,   302,   303,     0,     0,   304,   757,
       0,   307,     0,   758,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,     0,   320,   321,   759,   323,   324,
     760,   326,   327,   328,     0,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   761,   339,   340,   341,   342,     0,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,     0,   355,   356,     0,   358,   359,   360,   762,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,     0,   373,   374,   375,   376,   377,     0,   378,   763,
     380,   381,   382,     0,   384,   385,   764,   387,     0,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     765,   400,   766,   402,     0,   403,   404,     0,   405,     0,
     407,   408,   409,   410,   411,     0,   767,   768,     0,     0,
     414,   415,   769,   417,   770,  1220,   419,   420,   771,   422,
     423,   424,   425,   426,     0,     0,   427,   428,   429,   430,
     431,     0,     0,   432,   433,   434,   435,   436,  1110,   773,
       0,   439,     0,   441,   442,   443,   444,     0,     0,   445,
       0,     0,   446,   447,   448,   449,   450,   451,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   463,
     464,   465,   466,   733,  1217,   540,     0,     0,     0,   807,
    1221,  1222,     0,     0,     0,     0,     0,     0,     0,    92,
      93,    94,    95,    96,    97,    98,    99,     0,   100,   101,
     102,     0,     0,     0,     0,     0,     0,     0,   103,   104,
       0,   105,   106,   107,     0,   109,   110,   111,   734,   735,
       0,   736,   737,     0,   117,   118,   119,   120,   121,   122,
       0,     0,   123,   124,   738,   739,   127,     0,   128,   129,
     130,   131,   740,     0,     0,     0,   134,   135,   136,   137,
     138,     0,   140,   141,   142,     0,   143,   144,   145,   146,
     147,   148,     0,     0,   150,   151,   152,     0,     0,     0,
       0,     0,     0,     0,   154,   155,   156,   157,   158,   159,
     160,   741,   742,   163,     0,   164,     0,   165,   166,   167,
     168,   169,   170,     0,   171,   172,   173,   174,   175,     0,
       0,   176,   177,   178,   179,   180,     0,   181,   182,   183,
       0,   184,   185,   186,     0,   187,   188,   189,   190,   743,
     192,   193,   194,   195,   744,  1218,   197,     0,   198,   199,
     745,   201,     0,   202,     0,   203,     0,     0,     0,   206,
     207,   208,     0,   210,     0,   211,     0,   746,   213,     0,
     214,   215,   216,   217,   218,   219,     0,   221,   222,   223,
     224,     0,   225,   226,   227,   228,   229,   230,     0,   231,
       0,   747,   234,   235,   236,   237,   748,   749,     0,   750,
       0,   241,     0,     0,   244,     0,   246,   247,   248,   249,
     250,     0,     0,   251,     0,   253,     0,     0,   255,   256,
     257,     0,     0,   258,   259,   260,   261,   262,   751,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   752,     0,   753,
     285,   286,   287,   754,     0,   289,   290,     0,   292,     0,
     755,   294,   756,   296,   297,   298,     0,   299,   300,  1219,
       0,   301,   302,   303,     0,     0,   304,   757,     0,   307,
       0,   758,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,     0,   320,   321,   759,   323,   324,   760,   326,
     327,   328,     0,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   761,   339,   340,   341,   342,     0,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
       0,   355,   356,     0,   358,   359,   360,   762,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,     0,
     373,   374,   375,   376,   377,     0,   378,   763,   380,   381,
     382,     0,   384,   385,   764,   387,     0,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   765,   400,
     766,   402,     0,   403,   404,     0,   405,     0,   407,   408,
     409,   410,   411,     0,   767,   768,     0,     0,   414,   415,
     769,   417,   770,  1220,   419,   420,   771,   422,   423,   424,
     425,   426,     0,     0,   427,   428,   429,   430,   431,     0,
       0,   432,   433,   434,   435,   436,  1110,   773,     0,   439,
       0,   441,   442,   443,   444,     0,     0,   445,     0,     0,
     446,   447,   448,   449,   450,   451,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   463,   464,   465,
     466,     0,  1292,     0,     0,  1293,     0,     0,  1221,  1222,
    1294,  1295,  1296,     0,     0,     0,     0,     0,     0,     0,
    1292,     0,     0,  1293,     0,     0,     0,  1297,  1294,  1295,
    1296,  1745,     0,     0,     0,  1299,     0,     0,  1292,     0,
       0,  1293,  1300,     0,     0,  1297,  1294,  1295,  1296,     0,
       0,     0,     0,  1299,     0,     0,     0,     0,     0,     0,
    1300,     0,     0,  1297,     0,     0,  1292,  1301,     0,  1293,
       0,  1299,     0,     0,  1294,  1295,  1296,     0,  1300,     0,
       0,     0,     0,     0,     0,  1301,     0,     0,     0,     0,
       0,  1297,     0,     0,  1934,     0,     0,     0,     0,  1299,
       0,     0,     0,  1301,     0,     0,  1300,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1746,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1301,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1302,     0,     0,     0,
       0,     0,     0,     0,  1972,     0,     0,     0,     0,  1973,
    1303,     0,     0,     0,  1302,  1304,  1292,     0,     0,  1293,
       0,  2886,     0,     0,  1294,  1295,  1296,     0,  1303,     0,
       0,     0,  1302,  1304,     0,     0,  1305,  1306,     0,     0,
       0,  1297,     0,     0,     0,     0,  1303,     0,     0,  1299,
    1307,  1304,     0,     0,  1305,  1306,  1300,     0,     0,     0,
    1302,     0,     0,     0,     0,     0,     0,     0,  1307,     0,
       0,     0,  1305,  1306,  1303,     0,     0,     0,     0,  1304,
       0,  1301,     0,     0,     0,     0,  1307,     0,  1308,     0,
       0,  1309,     0,     0,     0,     0,     0,     0,     0,     0,
    1305,  1306,     0,     0,     0,  1310,  1308,     0,  1311,  1309,
       0,     0,     0,     0,  1307,     0,     0,     0,     0,     0,
       0,     0,     0,  1310,  1308,     0,  1311,  1309,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1310,     0,     0,  1311,     0,     0,     0,     0,     0,
       0,     0,  1308,     0,     0,  1309,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2887,  1292,  1310,
       0,  1293,  1311,     0,     0,     0,  1294,  1295,  1296,     0,
    1302,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1297,  1303,  1312,  1977,  1292,     0,  1304,
    1293,  1299,     0,     0,     0,  1294,  1295,  1296,  1300,     0,
       0,     0,     0,  1312,     0,     0,     0,     0,     0,     0,
    1305,  1306,  1297,     0,     0,     0,     0,     0,     0,     0,
    1299,  1312,     0,  1301,  1307,     0,     0,  1300,     0,     0,
       0,     0,     0,  1292,     0,     0,  1293,     0,     0,     0,
       0,  1294,  1295,  1296,  1747,     0,     0,     0,     0,  1312,
       0,     0,  1301,     0,     0,     0,     0,     0,  1297,     0,
       0,  1984,  1308,     0,     0,  1309,  1299,     0,     0,     0,
       0,     0,     0,  1300,     0,     0,     0,     0,     0,  1310,
       0,     0,  1311,     0,     0,  1313,     0,     0,  1314,  1315,
    1316,     0,  1317,  1318,  1319,  1320,  1321,  1322,  1301,     0,
    1946,     0,     0,  1313,     0,     0,  1314,  1315,  1316,     0,
    1317,  1318,  1319,  1320,  1321,  1322,     0,     0,     0,     0,
       0,  1313,  1302,     0,  1314,  1315,  1316,     0,  1317,  1318,
    1319,  1320,  1321,  1322,     0,     0,  1303,     0,     0,     0,
       0,  1304,     0,     0,     0,     0,  1982,     0,     0,  1313,
       0,  1302,  1314,  1315,  1316,     0,  1317,  1318,  1319,  1320,
    1321,  1322,  1305,  1306,     0,  1303,     0,     0,     0,  1312,
    1304,     0,     0,     0,     0,     0,  1307,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1292,  1305,  1306,  1293,     0,     0,     0,  1302,  1294,  1295,
    1296,     0,     0,     0,     0,  1307,     0,     0,     0,     0,
       0,  1303,     0,     0,  1308,  1297,  1304,  1309,     0,     0,
       0,     0,     0,  1299,     0,     0,     0,     0,     0,     0,
    1300,  1310,     0,     0,  1311,     0,     0,  1305,  1306,     0,
       0,     0,     0,  1308,     0,     0,  1309,     0,     0,     0,
       0,  1307,     0,     0,     0,  1301,     0,     0,     0,     0,
    1310,     0,     0,  1311,     0,     0,     0,     0,     0,  1313,
       0,     0,  1314,  1315,  1316,     0,  1317,  1318,  1319,  1320,
    1321,  1322,     0,     0,     0,     0,     0,     0,     0,  1308,
       0,     0,  1309,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1292,  1310,     0,  1293,  1311,
       0,     0,     0,  1294,  1295,  1296,     0,     0,     0,     0,
       0,  1312,     0,     0,     0,     0,     0,     0,     0,     0,
    1297,     0,     0,  2238,  1292,     0,     0,  1293,  1299,     0,
       0,     0,  1294,  1295,  1296,  1300,     0,     0,     0,     0,
    1312,     0,  1292,     0,  1302,  1293,     0,     0,     0,  1297,
    1294,  1295,  1296,     0,     0,     0,     0,  1299,  1303,     0,
    1301,     0,     0,  1304,  1300,     0,     0,  1297,     0,     0,
       0,     0,     0,     0,     0,  1299,     0,     0,     0,     0,
       0,     0,  1300,     0,  1305,  1306,  1312,     0,     0,  1301,
       0,     0,     0,     0,     0,     0,     0,     0,  1307,     0,
       0,     0,     0,     0,     0,     0,     0,  1301,     0,     0,
       0,  1313,     0,     0,  1314,  1315,  1316,     0,  1317,  1318,
    1319,  1320,  1321,  1322,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1308,     0,     0,  1309,
    1313,     0,     0,  1314,  1315,  1316,     0,  1317,  1318,  1319,
    1320,  1321,  1322,  1310,     0,     0,  1311,     0,     0,  1302,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1303,     0,     0,     0,     0,  1304,     0,
       0,     0,     0,     0,     0,     0,  1313,     0,  1302,  1314,
    1315,  1316,     0,  1317,  1318,  1319,  1320,  1321,  1322,  1305,
    1306,     0,  1303,     0,     0,     0,  1302,  1304,     0,     0,
       0,     0,     0,  1307,     0,     0,     0,     0,     0,     0,
    1303,     0,     0,     0,     0,  1304,     0,     0,  1305,  1306,
    1292,     0,     0,  1293,     0,     0,     0,     0,  1294,  1295,
    1296,     0,  1307,  1312,     0,     0,  1305,  1306,     0,     0,
       0,  1308,     0,     0,  1309,     0,     0,     0,     0,     0,
    1307,     0,     0,  1299,     0,     0,     0,     0,  1310,     0,
    1300,  1311,     0,     0,     0,  2196,     0,     0,     0,     0,
    1308,     0,     0,  1309,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1301,     0,  1310,  1308,     0,
    1311,  1309,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1310,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1313,     0,     0,  1314,  1315,  1316,     0,
    1317,  1318,  1319,  1320,  1321,  1322,     0,     0,  1312,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1312,     0,     0,
       0,     0,     0,     0,  1302,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1312,     0,     0,  1303,     0,
       0,     0,     0,  1304,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0, -1700, -1700,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1307,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1313,     0,
       0,  1314,  1315,  1316,     0,  1317,  1318,  1319,  1320,  1321,
    1322,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1313,     0, -1700,
    1314,  1315,  1316,     0,  1317,  1318,  1319,  1320,  1321,  1322,
       0,     0,     0,  1310,     0,  1313,     0,     0,  1314,  1315,
    1316,     0,  1317,  1318,  1319,  1320,  1321,  1322,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1312,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1037,     0,  1653,  1313,     0,     0,  1314,  1315,  1316,     0,
    1317,  1318,  1319,  1320,  1321,  1322,    92,    93,    94,    95,
      96,    97,    98,    99,  1038,   100,   101,   102,  1039,  1040,
    1041,  1042,  1043,  1044,  1045,   103,   104,  1046,   105,   106,
     107,     0,   109,   110,   111,   734,   735,     0,   736,   737,
    1047,   117,   118,   119,   120,   121,   122,  1048,  1049,   123,
     124,   738,   739,   127,  1050,   128,   129,   130,   131,   740,
    1051,     0,  1052,   134,   135,   136,   137,   138,     0,   140,
     141,   142,  1053,   143,   144,   145,   146,   147,   148,  1054,
       0,   150,   151,   152,  1055,  1056,  1057,     0,  1058,  1059,
    1060,   154,   155,   156,   157,   158,   159,   160,   741,   742,
     163,  1061,   164,  1062,   165,   166,   167,   168,   169,   170,
    1063,   171,   172,   173,   174,   175,  1064,  1065,   176,   177,
     178,   179,   180,  1066,   181,   182,   183,  1067,   184,   185,
     186,  1068,   187,   188,   189,   190,   743,   192,   193,   194,
     195,   744,  1069,   197,  1070,   198,   199,   745,   201,  1071,
     202,  1072,   203,     0,  1073,     0,   206,   207,   208,     0,
     210,  1074,   211,  1075,   746,   213,  1076,   214,   215,   216,
     217,   218,   219,     0,   221,   222,   223,   224,  1077,   225,
     226,   227,   228,   229,   230,  1078,   231,     0,   747,   234,
     235,   236,   237,   748,   749,  1079,   750,  1080,   241,     0,
       0,   244,     0,   246,   247,   248,   249,   250,  1081,  1082,
     251,     0,   253,     0,  1083,   255,   256,   257,  1084,  1085,
     258,   259,   260,   261,   262,   751,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   752,     0,   753,   285,   286,   287,
     754,  1086,   289,   290,     0,   292,  1087,   755,   294,   756,
     296,   297,   298,  1088,   299,   300,  1089,  1090,   301,   302,
     303,  1091,  1092,   304,   757,     0,   307,     0,   758,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,  1093,
     320,   321,   759,   323,   324,   760,   326,   327,   328,  1094,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   761,
     339,   340,   341,   342,  1095,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,  1096,   355,   356,
       0,   358,   359,   360,   762,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,  1097,   373,   374,   375,
     376,   377,  1098,   378,   763,   380,   381,   382,     0,   384,
     385,   764,   387,  1099,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   765,   400,   766,   402,  1100,
     403,   404,  1101,   405,     0,   407,   408,   409,   410,   411,
    1102,   767,   768,  1103,  1104,   414,   415,   769,   417,   770,
    1105,   419,   420,   771,   422,   423,   424,   425,   426,  1106,
    1107,   427,   428,   429,   430,   431,  1108,  1109,   432,   433,
     434,   435,   436,  1110,   773,  1111,   439,     0,   441,   442,
     443,   444,  1112,  1113,   445,  1114,  1115,   446,   447,   448,
     449,   450,   451,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   463,   464,   465,   466,  1037,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    92,    93,    94,    95,    96,    97,
      98,    99,  1038,   100,   101,   102,  1039,  1040,  1041,  1042,
    1043,  1044,  1045,   103,   104,  1046,   105,   106,   107,     0,
     109,   110,   111,   734,   735,     0,   736,   737,  1047,   117,
     118,   119,   120,   121,   122,  1048,  1049,   123,   124,   738,
     739,   127,  1050,   128,   129,   130,   131,   740,  1051,     0,
    1052,   134,   135,   136,   137,   138,     0,   140,   141,   142,
    1053,   143,   144,   145,   146,   147,   148,  1054,     0,   150,
     151,   152,  1055,  1056,  1057,     0,  1058,  1059,  1060,   154,
     155,   156,   157,   158,   159,   160,   741,   742,   163,  1061,
     164,  1062,   165,   166,   167,   168,   169,   170,  1063,   171,
     172,   173,   174,   175,  1064,  1065,   176,   177,   178,   179,
     180,  1066,   181,   182,   183,  1067,   184,   185,   186,  1068,
     187,   188,   189,   190,   743,   192,   193,   194,   195,   744,
    1069,   197,  1070,   198,   199,   745,   201,  1071,   202,  1072,
     203,     0,  1073,     0,   206,   207,   208,     0,   210,  1074,
     211,  1075,   746,   213,  1076,   214,   215,   216,   217,   218,
     219,     0,   221,   222,   223,   224,  1077,   225,   226,   227,
     228,   229,   230,  1078,   231,     0,   747,   234,   235,   236,
     237,   748,   749,  1079,   750,  1080,   241,     0,     0,   244,
       0,   246,   247,   248,   249,   250,  1081,  1082,   251,     0,
     253,     0,  1083,   255,   256,   257,  1084,  1085,   258,   259,
     260,   261,   262,   751,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   752,     0,   753,   285,   286,   287,   754,  1086,
     289,   290,     0,   292,  1087,   755,   294,   756,   296,   297,
     298,  1088,   299,   300,  1089,  1090,   301,   302,   303,  1091,
    1092,   304,   757,     0,   307,     0,   758,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,  1093,   320,   321,
     759,   323,   324,   760,   326,   327,   328,  1094,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   761,   339,   340,
     341,   342,  1095,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,  1096,   355,   356,     0,   358,
     359,   360,   762,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,  1097,   373,   374,   375,   376,   377,
    1098,   378,   763,   380,   381,   382,     0,   384,   385,   764,
     387,  1099,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   765,   400,   766,   402,  1100,   403,   404,
    1101,   405,     0,   407,   408,   409,   410,   411,  1102,   767,
     768,  1103,  1104,   414,   415,   769,   417,   770,  1105,   419,
     420,   771,   422,   423,   424,   425,   426,  1106,  1107,   427,
     428,   429,   430,   431,  1108,  1109,   432,   433,   434,   435,
     436,  1110,   773,  1111,   439,     0,   441,   442,   443,   444,
    1112,  1113,   445,  1114,  1115,   446,   447,   448,   449,   450,
     451,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   463,   464,   465,   466,  1037,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    92,    93,    94,    95,  1794,    97,    98,    99,
    1038,   100,   101,   102,  1039,  1040,  1041,  1042,  1043,  1044,
    1045,   103,   104,  1046,   105,   106,   107,     0,   109,   110,
     111,   734,   735,     0,   736,   737,  1047,   117,   118,   119,
     120,   121,   122,  1048,  1049,   123,   124,   738,   739,   127,
    1050,   128,   129,   130,   131,   740,  1051,     0,  1052,   134,
     135,   136,   137,   138,     0,   140,   141,   142,  1053,   143,
     144,   145,   146,   147,   148,  1054,     0,   150,   151,   152,
    1055,  1056,  1057,     0,  1058,  1059,  1060,   154,   155,   156,
     157,   158,   159,   160,   741,   742,   163,  1061,   164,  1062,
     165,   166,   167,   168,   169,   170,  1063,   171,   172,   173,
     174,   175,  1064,  1065,   176,   177,   178,  1795,   180,  1066,
     181,   182,   183,  1067,   184,   185,   186,  1068,   187,   188,
     189,   190,   743,   192,   193,   194,   195,   744,  1069,   197,
    1070,   198,   199,   745,   201,  1071,   202,  1072,   203,     0,
    1073,     0,   206,   207,   208,     0,   210,  1074,   211,  1075,
     746,   213,  1076,   214,   215,   216,   217,   218,   219,     0,
     221,   222,   223,   224,  1077,   225,   226,   227,   228,   229,
     230,  1078,   231,     0,   747,   234,   235,   236,   237,   748,
     749,  1079,   750,  1080,   241,     0,     0,   244,     0,   246,
     247,   248,   249,   250,  1081,  1082,   251,     0,   253,     0,
    1083,   255,   256,   257,  1084,  1085,   258,   259,   260,   261,
     262,   751,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     752,     0,   753,   285,   286,   287,   754,  1086,   289,   290,
       0,   292,  1087,   755,   294,   756,   296,   297,   298,  1088,
     299,   300,  1089,  1090,   301,   302,   303,  1091,  1092,   304,
     757,     0,   307,     0,   758,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,  1093,   320,   321,   759,   323,
     324,   760,   326,   327,   328,  1094,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   761,   339,   340,   341,   342,
    1095,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,  1096,   355,   356,     0,   358,   359,   360,
     762,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,  1097,   373,   374,   375,   376,   377,  1098,  1796,
     763,   380,   381,   382,     0,   384,   385,   764,   387,  1099,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   765,   400,   766,   402,  1100,   403,   404,  1101,   405,
       0,   407,   408,   409,   410,   411,  1102,   767,   768,  1103,
    1104,   414,   415,   769,   417,   770,  1105,   419,   420,   771,
     422,   423,   424,   425,   426,  1106,  1107,   427,   428,   429,
     430,   431,  1108,  1109,   432,   433,   434,   435,   436,  1110,
     773,  1111,   439,     0,   441,   442,   443,   444,  1112,  1113,
     445,  1114,  1115,   446,   447,   448,   449,   450,   451,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     463,   464,   465,   466,    91,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      92,    93,    94,    95,    96,    97,    98,    99,     0,   100,
     101,   102,     0,     0,     0,     0,     0,     0,     0,   103,
     104,     0,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,     0,   117,   118,   119,   120,   121,
     122,     0,   814,   123,   124,   125,   126,   127,     0,   128,
     129,   130,   131,   817,     0,   818,     0,   134,   135,   136,
     137,   138,   139,   140,   141,   142,     0,   143,   144,   145,
     146,   147,   148,     0,   149,   150,   151,   152,   819,   820,
     821,   822,   823,   824,   825,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,     0,   164,     0,   165,   166,
     167,   168,   169,   170,     0,   171,   172,   173,   174,   175,
       0,     0,   176,   177,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,     0,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   830,     0,   197,     0,   198,
     199,   200,   201,     0,   202,     0,   203,   204,     0,   205,
     206,   207,   208,   209,   210,     0,   211,     0,   212,   213,
       0,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,     0,   225,   226,   227,   228,   229,   230,     0,
     231,   232,   233,   234,   235,   236,   237,   238,   239,     0,
     240,     0,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,     0,     0,   251,   252,   253,   254,     0,   255,
     256,   257,   836,   837,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,     0,   289,   290,   291,   292,
       0,   842,   294,   295,   296,   297,   298,     0,   299,   300,
       0,     0,   301,   302,   303,     0,     0,   304,   305,   306,
     307,   308,   845,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,     0,   320,   321,   846,   323,   324,   325,
     326,   327,   328,     0,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,     0,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,     0,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
       0,   373,   374,   375,   376,   377,   849,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,     0,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   851,   402,     0,   403,   404,     0,   405,   406,   407,
     408,   409,   410,   411,     0,   412,   413,     0,     0,   414,
     415,   854,   417,   855,     0,   419,   420,   857,   422,   423,
     424,   425,   426,     0,     0,   427,   428,   429,   430,   431,
     858,     0,   432,   433,   434,   435,   436,   437,   438,     0,
     439,   440,   441,   442,   443,   444,     0,     0,   445,     0,
       0,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,    91,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,   133,     0,   134,   135,   136,   137,   138,
     139,   140,   141,   142,     0,   143,   144,   145,   146,   147,
     148,     0,   149,   150,   151,   152,     0,     0,     0,   153,
       0,     0,     0,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,     0,   164,     0,   165,   166,   167,   168,
     169,   170,     0,   171,   172,   173,   174,   175,     0,     0,
     176,   177,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,     0,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,     0,   197,     0,   198,   199,   200,
     201,     0,   202,     0,   203,   204,     0,   205,   206,   207,
     208,   209,   210,     0,   211,     0,   212,   213,     0,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
       0,   225,   226,   227,   228,   229,   230,     0,   231,   232,
     233,   234,   235,   236,   237,   238,   239,     0,   240,     0,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
       0,     0,   251,   252,   253,   254,     0,   255,   256,   257,
       0,     0,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,     0,   289,   290,   291,   292,     0,   293,
     294,   295,   296,   297,   298,     0,   299,   300,     0,     0,
     301,   302,   303,     0,     0,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,     0,   320,   321,   322,   323,   324,   325,   326,   327,
     328,     0,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,     0,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,     0,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,     0,   373,
     374,   375,   376,   377,     0,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,     0,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,     0,   403,   404,     0,   405,   406,   407,   408,   409,
     410,   411,     0,   412,   413,     0,     0,   414,   415,   416,
     417,   418,     0,   419,   420,   421,   422,   423,   424,   425,
     426,     0,     0,   427,   428,   429,   430,   431,     0,     0,
     432,   433,   434,   435,   436,   437,   438,     0,   439,   440,
     441,   442,   443,   444,     0,     0,   445,     0,     0,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     492,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    92,    93,    94,    95,
      96,    97,    98,    99,     0,   100,   101,   102,     0,     0,
       0,     0,     0,     0,     0,   103,   104,     0,   105,   106,
     107,     0,   109,   110,   111,   112,   113,     0,   115,   116,
       0,   117,   118,   119,   120,   121,   122,     0,     0,   123,
     124,   125,   126,   127,  1409,   128,   129,   130,   131,   132,
       0,     0,  1410,   134,   135,   136,   137,   138,     0,   140,
     141,   142,  1411,   143,   144,   145,   146,   147,   148,     0,
       0,   150,   151,   152,     0,     0,     0,     0,     0,     0,
       0,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,     0,   164,     0,   165,   166,   167,   168,   169,   170,
       0,   171,   172,   173,   174,   175,     0,     0,   176,   177,
     178,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,     0,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,     0,   197,     0,   198,   199,   200,   201,     0,
     202,  1412,   203,     0,     0,     0,   206,   207,   208,     0,
     210,     0,   211,     0,   212,   213,     0,   214,   215,   216,
     217,   218,  1413,     0,   221,   222,   223,   224,     0,   225,
     226,   227,   228,   229,   230,     0,   231,     0,   233,   234,
     235,   236,   237,   238,   239,     0,   240,     0,   241,     0,
       0,   244,     0,   246,   247,   248,   249,   250,     0,     0,
     251,     0,   253,     0,     0,   255,   256,   257,     0,     0,
     258,   259,   260,   261,   262,   494,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,     0,   284,   285,   286,   287,
     288,     0,   289,   290,     0,   292,     0,   293,   294,   295,
     296,   297,   298,     0,   299,   300,     0,     0,   301,   302,
     303,     0,     0,   304,   305,     0,   307,     0,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,     0,
     320,   321,   322,   323,   324,   325,   326,   327,   328,  1414,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,     0,   355,   356,
       0,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,     0,   373,   374,   375,
     376,   377,     0,   378,   379,   380,   381,   382,     0,   384,
     385,   386,   387,     0,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   496,   400,   401,   402,     0,
     403,   404,     0,   405,     0,   407,   408,   409,   410,   411,
       0,   412,   413,     0,     0,   414,   415,   416,   417,   418,
       0,   419,   420,   421,   422,   423,   424,   425,   426,     0,
    1415,   427,   428,   429,   430,   431,     0,     0,   432,   433,
     434,   435,   436,   437,   438,     0,   439,     0,   441,   442,
     443,   444,     0,     0,   445,     0,     0,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   492,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    92,    93,    94,    95,    96,    97,
      98,    99,     0,   100,   101,   102,     0,     0,     0,     0,
       0,     0,     0,   103,   104,     0,   105,   106,   107,     0,
     109,   110,   111,   112,   113,     0,   115,   116,     0,   117,
     118,   119,   120,   121,   122,     0,     0,   123,   124,   125,
     126,   127,  1409,   128,   129,   130,   131,   132,     0,     0,
       0,   134,   135,   136,   137,   138,     0,   140,   141,   142,
    1411,   143,   144,   145,   146,   147,   148,     0,     0,   150,
     151,   152,     0,     0,     0,     0,     0,     0,     0,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,     0,
     164,     0,   165,   166,   167,   168,   169,   170,     0,   171,
     172,   173,   174,   175,     0,     0,   176,   177,   178,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,     0,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
       0,   197,     0,   198,   199,   200,   201,     0,   202,  1412,
     203,     0,     0,     0,   206,   207,   208,     0,   210,     0,
     211,     0,   212,   213,     0,   214,   215,   216,   217,   218,
     219,     0,   221,   222,   223,   224,     0,   225,   226,   227,
     228,   229,   230,     0,   231,     0,   233,   234,   235,   236,
     237,   238,   239,     0,   240,     0,   241,     0,     0,   244,
       0,   246,   247,   248,   249,   250,     0,     0,   251,     0,
     253,  1860,     0,   255,   256,   257,     0,     0,   258,   259,
     260,   261,   262,   494,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,     0,   284,   285,   286,   287,   288,     0,
     289,   290,     0,   292,     0,   293,   294,   295,   296,   297,
     298,     0,   299,   300,     0,     0,   301,   302,   303,     0,
       0,   304,   305,     0,   307,     0,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,     0,   320,   321,
     322,   323,   324,   325,   326,   327,   328,  1414,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,     0,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,     0,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,     0,   373,   374,   375,   376,   377,
       0,   378,   379,   380,   381,   382,     0,   384,   385,   386,
     387,     0,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   496,   400,   401,   402,     0,   403,   404,
       0,   405,     0,   407,   408,   409,   410,   411,     0,   412,
     413,     0,     0,   414,   415,   416,   417,   418,     0,   419,
     420,   421,   422,   423,   424,   425,   426,     0,  1415,   427,
     428,   429,   430,   431,     0,     0,   432,   433,   434,   435,
     436,   437,   438,     0,   439,     0,   441,   442,   443,   444,
       0,     0,   445,     0,     0,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   733,     0,   540,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    92,    93,    94,    95,    96,    97,    98,    99,
       0,   100,   101,   102,     0,     0,     0,     0,     0,     0,
       0,   103,   104,     0,   105,   106,   107,     0,   109,   110,
     111,   734,   735,     0,   736,   737,     0,   117,   118,   119,
     120,   121,   122,     0,     0,   123,   124,   738,   739,   127,
       0,   128,   129,   130,   131,   740,     0,     0,     0,   134,
     135,   136,   137,   138,     0,   140,   141,   142,     0,   143,
     144,   145,   146,   147,   148,     0,     0,   150,   151,   152,
       0,     0,     0,     0,     0,     0,     0,   154,   155,   156,
     157,   158,   159,   160,   741,   742,   163,     0,   164,     0,
     165,   166,   167,   168,   169,   170,     0,   171,   172,   173,
     174,   175,     0,     0,   176,   177,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,     0,   187,   188,
     189,   190,   743,   192,   193,   194,   195,   744,  1218,   197,
       0,   198,   199,   745,   201,     0,   202,     0,   203,     0,
       0,     0,   206,   207,   208,     0,   210,     0,   211,     0,
     746,   213,     0,   214,   215,   216,   217,   218,   219,     0,
     221,   222,   223,   224,     0,   225,   226,   227,   228,   229,
     230,     0,   231,     0,   747,   234,   235,   236,   237,   748,
     749,     0,   750,     0,   241,     0,     0,   244,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,   253,     0,
       0,   255,   256,   257,     0,     0,   258,   259,   260,   261,
     262,   751,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     752,     0,   753,   285,   286,   287,   754,     0,   289,   290,
       0,   292,     0,   755,   294,   756,   296,   297,   298,     0,
     299,   300,  1219,     0,   301,   302,   303,     0,     0,   304,
     757,     0,   307,     0,   758,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,     0,   320,   321,   759,   323,
     324,   760,   326,   327,   328,     0,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   761,   339,   340,   341,   342,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,     0,   355,   356,     0,   358,   359,   360,
     762,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,     0,   373,   374,   375,   376,   377,     0,   378,
     763,   380,   381,   382,     0,   384,   385,   764,   387,     0,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   765,   400,   766,   402,     0,   403,   404,     0,   405,
       0,   407,   408,   409,   410,   411,     0,   767,   768,     0,
       0,   414,   415,   769,   417,   770,  1220,   419,   420,   771,
     422,   423,   424,   425,   426,     0,     0,   427,   428,   429,
     430,   431,     0,     0,   432,   433,   434,   435,   436,  1110,
     773,     0,   439,     0,   441,   442,   443,   444,     0,     0,
     445,     0,     0,   446,   447,   448,   449,   450,   451,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     463,   464,   465,   466,   492,     0,   570,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      92,    93,    94,    95,    96,    97,    98,    99,     0,   100,
     101,   102,     3,     4,     0,     0,     0,     0,     0,   103,
     104,     0,   105,   106,   107,     0,   109,   110,   111,   112,
     113,     0,   115,   116,     0,   117,   118,   119,   120,   121,
     122,     0,     0,   123,   124,   125,   126,   127,     0,   128,
     129,   130,   131,   132,     0,     0,     0,   134,   135,   136,
     137,   138,     0,   140,   141,   142,     0,   143,   144,   145,
     146,   147,   148,     0,     0,   150,   151,   152,     0,     0,
       0,     0,     0,     0,     0,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,     0,   164,     0,   165,   166,
     167,   168,   169,   170,     0,   171,   172,   173,   174,   175,
       0,     0,   176,   177,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,     0,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,     0,   197,     0,   198,
     199,   200,   201,     0,   202,     0,   203,     0,     0,     0,
     206,   207,   208,     0,   210,     0,   211,     0,   212,   213,
       0,   214,   215,   216,   217,   218,   219,     0,   221,   222,
     223,   224,     0,   225,   226,   227,   228,   229,   230,     0,
     231,     0,   233,   234,   235,   236,   237,   238,   239,     0,
     240,     0,   241,     0,     0,   244,     0,   246,   247,   248,
     249,   250,     0,     0,   251,     0,   253,     0,     0,   255,
     256,   257,     0,     0,   258,   259,   260,   261,   262,   494,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,     0,
     284,   285,   286,   287,   288,     0,   289,   290,     0,   292,
       0,   293,   294,   295,   296,   297,   298,     0,   299,   300,
       0,     0,   301,   302,   303,     0,     0,   304,   305,     0,
     307,     0,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,     0,   320,   321,   322,   323,   324,   325,
     326,   327,   328,     0,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,     0,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,     0,   355,   356,     0,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
       0,   373,   374,   375,   376,   377,     0,   378,   379,   380,
     381,   382,     0,   384,   385,   386,   387,     0,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   496,
     400,   401,   402,     0,   403,   404,     0,   405,     0,   407,
     408,   409,   410,   411,     0,   412,   413,     0,     0,   414,
     415,   416,   417,   418,     0,   419,   420,   421,   422,   423,
     424,   425,   426,     0,     0,   427,   428,   429,   430,   431,
       0,     0,   432,   433,   434,   435,   436,   437,   438,     0,
     439,     0,   441,   442,   443,   444,     0,     0,   445,     0,
       0,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   492,     0,   570,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   112,   113,     0,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   134,   135,   136,   137,   138,
       0,   140,   141,   142,     0,   143,   144,   145,   146,   147,
     148,     0,     0,   150,   151,   152,     0,     0,     0,     0,
       0,     0,     0,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,     0,   164,     0,   165,   166,   167,   168,
     169,   170,     0,   171,   172,   173,   174,   175,     0,     0,
     176,   177,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,     0,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,     0,   197,     0,   198,   199,   200,
     201,     0,   202,     0,   203,     0,     0,     0,   206,   207,
     208,     0,   210,     0,   211,     0,   212,   213,     0,   214,
     215,   216,   217,   218,   219,     0,   221,   222,   223,   224,
       0,   225,   226,   227,   228,   229,   230,     0,   231,     0,
     233,   234,   235,   236,   237,   238,   239,     0,   240,     0,
     241,     0,     0,   244,     0,   246,   247,   248,   249,   250,
       0,     0,   251,     0,   253,     0,     0,   255,   256,   257,
       0,     0,   258,   259,   260,   261,   262,   494,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,     0,   284,   285,
     286,   287,   288,     0,   289,   290,     0,   292,     0,   293,
     294,   295,   296,   297,   298,     0,   299,   300,     0,   571,
     301,   302,   303,     0,     0,   304,   305,     0,   307,     0,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,     0,   320,   321,   322,   323,   324,   325,   326,   327,
     328,     0,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,     0,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,     0,
     355,   356,     0,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,     0,   373,
     374,   375,   376,   377,     0,   378,   379,   380,   381,   382,
       0,   384,   385,   386,   387,     0,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   496,   400,   401,
     402,     0,   403,   404,     0,   405,     0,   407,   408,   409,
     410,   411,     0,   412,   413,     0,     0,   414,   415,   416,
     417,   418,     0,   419,   420,   421,   422,   423,   424,   425,
     426,     0,     0,   427,   428,   429,   430,   431,     0,     0,
     432,   433,   434,   435,   436,   437,   438,     0,   439,     0,
     441,   442,   443,   444,     0,     0,   445,     0,     0,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     492,     0,   570,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    92,    93,    94,    95,
      96,    97,    98,    99,     0,   100,   101,   102,     0,     0,
       0,     0,     0,     0,     0,   103,   104,     0,   105,   106,
     107,     0,   109,   110,   111,   112,   113,     0,   115,   116,
       0,   117,   118,   119,   120,   121,   122,     0,     0,   123,
     124,   125,   126,   127,     0,   128,   129,   130,   131,   132,
       0,     0,     0,   134,   135,   136,   137,   138,     0,   140,
     141,   142,     0,   143,   144,   145,   146,   147,   148,     0,
       0,   150,   151,   152,     0,     0,     0,     0,     0,     0,
       0,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,     0,   164,     0,   165,   166,   167,   168,   169,   170,
       0,   171,   172,   173,   174,   175,     0,     0,   176,   177,
     178,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,     0,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,     0,   197,     0,   198,   199,   200,   201,     0,
     202,     0,   203,     0,     0,     0,   206,   207,   208,     0,
     210,     0,   211,     0,   212,   213,     0,   214,   215,   216,
     217,   218,   614,     0,   221,   222,   223,   224,     0,   225,
     226,   227,   228,   229,   230,     0,   231,     0,   233,   234,
     235,   236,   237,   238,   239,     0,   240,     0,   241,     0,
       0,   244,     0,   246,   247,   248,   249,   250,     0,     0,
     251,     0,   253,     0,     0,   255,   256,   257,     0,     0,
     258,   259,   260,   261,   262,   494,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,     0,   284,   285,   286,   287,
     288,     0,   289,   290,     0,   292,     0,   293,   294,   295,
     296,   297,   298,     0,   299,   300,     0,   571,   301,   302,
     303,     0,     0,   304,   305,     0,   307,     0,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,     0,
     320,   321,   322,   323,   324,   325,   326,   327,   328,     0,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,     0,   355,   356,
       0,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,     0,   373,   374,   375,
     376,   377,     0,   378,   379,   380,   381,   382,     0,   384,
     385,   386,   387,     0,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   496,   400,   401,   402,     0,
     403,   404,     0,   405,     0,   407,   408,   409,   410,   411,
       0,   412,   413,     0,     0,   414,   415,   416,   417,   418,
       0,   419,   420,   421,   422,   423,   424,   425,   426,     0,
       0,   427,   428,   429,   430,   431,     0,     0,   432,   433,
     434,   435,   436,   437,   438,     0,   439,     0,   441,   442,
     443,   444,     0,     0,   445,     0,     0,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   733,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    92,    93,    94,    95,    96,    97,
      98,    99,     0,   100,   101,   102,     3,     4,     0,     0,
       0,     0,     0,   103,   104,     0,   105,   106,   107,     0,
     109,   110,   111,   734,   735,     0,   736,   737,     0,   117,
     118,   119,   120,   121,   122,     0,     0,   123,   124,   738,
     739,   127,     0,   128,   129,   130,   131,   740,     0,     0,
       0,   134,   135,   136,   137,   138,     0,   140,   141,   142,
       0,   143,   144,   145,   146,   147,   148,     0,     0,   150,
     151,   152,     0,     0,     0,     0,     0,     0,     0,   154,
     155,   156,   157,   158,   159,   160,   741,   742,   163,     0,
     164,     0,   165,   166,   167,   168,   169,   170,     0,   171,
     172,   173,   174,   175,     0,     0,   176,   177,   178,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,     0,
     187,   188,   189,   190,   743,   192,   193,   194,   195,   744,
       0,   197,     0,   198,   199,   745,   201,     0,   202,     0,
     203,     0,     0,     0,   206,   207,   208,     0,   210,     0,
     211,     0,   746,   213,     0,   214,   215,   216,   217,   218,
     219,     0,   221,   222,   223,   224,     0,   225,   226,   227,
     228,   229,   230,     0,   231,     0,   747,   234,   235,   236,
     237,   748,   749,     0,   750,     0,   241,     0,     0,   244,
       0,   246,   247,   248,   249,   250,     0,     0,   251,     0,
     253,     0,     0,   255,   256,   257,     0,     0,   258,   259,
     260,   261,   262,   751,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   752,     0,   753,   285,   286,   287,   754,     0,
     289,   290,     0,   292,     0,   755,   294,   756,   296,   297,
     298,     0,   299,   300,     0,     0,   301,   302,   303,     0,
       0,   304,   757,     0,   307,     0,   758,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,     0,   320,   321,
     759,   323,   324,   760,   326,   327,   328,     0,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   761,   339,   340,
     341,   342,     0,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,     0,   358,
     359,   360,   762,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,     0,   373,   374,   375,   376,   377,
       0,   378,   763,   380,   381,   382,     0,   384,   385,   764,
     387,     0,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   765,   400,   766,   402,     0,   403,   404,
       0,   405,     0,   407,   408,   409,   410,   411,     0,   767,
     768,     0,     0,   414,   415,   769,   417,   770,     0,   419,
     420,   771,   422,   423,   424,   425,   426,     0,     0,   427,
     428,   429,   430,   431,     0,     0,   432,   433,   434,   435,
     436,  1110,   773,     0,   439,     0,   441,   442,   443,   444,
       0,     0,   445,     0,     0,   446,   447,   448,   449,   450,
     451,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   463,   464,   465,   466,   492,     0,   570,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    92,    93,    94,    95,    96,    97,    98,    99,
       0,   100,   101,   102,     0,     0,     0,     0,     0,     0,
       0,   103,   104,     0,   105,   106,   107,     0,   109,   110,
     111,   112,   113,     0,   115,   116,     0,   117,   118,   119,
     120,   121,   122,     0,     0,   123,   124,   125,   126,   127,
       0,   128,   129,   130,   131,   132,     0,     0,     0,   134,
     135,   136,   137,   138,     0,   140,   141,   142,     0,   143,
     144,   145,   146,   147,   148,     0,     0,   150,   151,   152,
       0,     0,     0,     0,     0,     0,     0,   154,   155,   156,
     157,   158,   159,   160,   161,   162,   163,     0,   164,     0,
     165,   166,   167,   168,   169,   170,     0,   171,   172,   173,
     174,   175,     0,     0,   176,   177,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,     0,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,     0,   197,
       0,   198,   199,   200,   201,     0,   202,     0,   203,     0,
       0,     0,   206,   207,   208,     0,  1706,     0,   211,     0,
     212,   213,     0,   214,   215,   216,   217,   218,   219,     0,
     221,   222,   223,   224,     0,   225,   226,   227,   228,   229,
     230,     0,   231,     0,   233,   234,   235,   236,   237,   238,
     239,     0,   240,     0,   241,     0,     0,   244,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,   253,     0,
       0,   255,   256,  1707,     0,     0,   258,   259,   260,   261,
     262,   494,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,     0,   284,   285,   286,   287,   288,     0,   289,   290,
       0,   292,     0,   293,   294,   295,   296,   297,   298,     0,
     299,   300,     0,     0,   301,   302,   303,     0,     0,   304,
     305,     0,   307,     0,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,     0,   320,   321,   322,   323,
     324,   325,   326,   327,   328,     0,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,     0,   355,   356,     0,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,     0,   373,   374,   375,   376,   377,     0,   378,
     379,   380,   381,   382,     0,   384,   385,   386,   387,     0,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   496,   400,   401,   402,     0,   403,   404,  1708,   405,
       0,   407,  1709,   409,  1710,   411,     0,   412,   413,     0,
       0,   414,   415,   416,   417,   418,     0,   419,   420,   421,
     422,   423,   424,   425,   426,     0,     0,   427,   428,  1711,
     430,   431,     0,     0,   432,   433,   434,   435,   436,   437,
     438,     0,   439,     0,   441,   442,   443,   444,     0,     0,
     445,     0,     0,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   492,  2624,     0,     0,     0,     0,
    2625,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      92,    93,    94,    95,    96,    97,    98,    99,     0,   100,
     101,   102,     0,     0,     0,     0,     0,     0,     0,   103,
     104,     0,   105,   106,   107,     0,   109,   110,   111,   112,
     113,     0,   115,   116,     0,   117,   118,   119,   120,   121,
     122,     0,     0,   123,   124,   125,   126,   127,     0,   128,
     129,   130,   131,   132,     0,     0,     0,   134,   135,   136,
     137,   138,     0,   140,   141,   142,     0,   143,   144,   145,
     146,   147,   148,     0,     0,   150,   151,   152,     0,     0,
       0,     0,     0,     0,     0,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,     0,   164,     0,   165,   166,
     167,   168,   169,   170,     0,   171,   172,   173,   174,   175,
       0,     0,   176,   177,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,     0,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,     0,   197,     0,   198,
     199,   200,   201,     0,   202,     0,   203,     0,     0,     0,
     206,   207,   208,     0,   210,     0,   211,     0,   212,   213,
       0,   214,   215,   216,   217,   218,   219,     0,   221,   222,
     223,   224,     0,   225,   226,   227,   228,   229,   230,     0,
     231,     0,   233,   234,   235,   236,   237,   238,   239,     0,
     240,     0,   241,     0,     0,   244,     0,   246,   247,   248,
     249,   250,     0,     0,   251,     0,   253,     0,     0,   255,
     256,   257,     0,     0,   258,   259,   260,   261,   262,   494,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,     0,
     284,   285,   286,   287,   288,     0,   289,   290,     0,   292,
       0,   293,   294,   295,   296,   297,   298,     0,   299,   300,
       0,     0,   301,   302,   303,     0,     0,   304,   305,     0,
     307,     0,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,     0,   320,   321,   322,   323,   324,   325,
     326,   327,   328,     0,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,     0,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,     0,   355,   356,     0,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
       0,   373,   374,   375,   376,   377,     0,   378,   379,   380,
     381,   382,     0,   384,   385,   386,   387,     0,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   496,
     400,   401,   402,     0,   403,   404,     0,   405,     0,   407,
     408,   409,   410,   411,     0,   412,   413,     0,     0,   414,
     415,   416,   417,   418,     0,   419,   420,   421,   422,   423,
     424,   425,   426,     0,     0,   427,   428,   429,   430,   431,
       0,     0,   432,   433,   434,   435,   436,   437,   438,     0,
     439,     0,   441,   442,   443,   444,     0,     0,   445,     0,
       0,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   492,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,   493,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   112,   113,     0,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   134,   135,   136,   137,   138,
       0,   140,   141,   142,     0,   143,   144,   145,   146,   147,
     148,     0,     0,   150,   151,   152,     0,     0,     0,     0,
       0,     0,     0,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,     0,   164,     0,   165,   166,   167,   168,
     169,   170,     0,   171,   172,   173,   174,   175,     0,     0,
     176,   177,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,     0,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,     0,   197,     0,   198,   199,   200,
     201,     0,   202,     0,   203,     0,     0,     0,   206,   207,
     208,     0,   210,     0,   211,     0,   212,   213,     0,   214,
     215,   216,   217,   218,   219,     0,   221,   222,   223,   224,
       0,   225,   226,   227,   228,   229,   230,     0,   231,     0,
     233,   234,   235,   236,   237,   238,   239,     0,   240,     0,
     241,     0,     0,   244,     0,   246,   247,   248,   249,   250,
       0,     0,   251,     0,   253,     0,     0,   255,   256,   257,
       0,     0,   258,   259,   260,   261,   262,   494,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,     0,   284,   285,
     286,   287,   288,     0,   289,   290,     0,   292,     0,   293,
     294,   295,   296,   297,   298,     0,   299,   300,     0,     0,
     301,   302,   303,     0,     0,   304,   305,     0,   307,     0,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,     0,   320,   321,   322,   323,   324,   325,   495,   327,
     328,     0,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,     0,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,     0,
     355,   356,     0,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,     0,   373,
     374,   375,   376,   377,     0,   378,   379,   380,   381,   382,
       0,   384,   385,   386,   387,     0,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   496,   400,   401,
     402,     0,   403,   404,     0,   405,     0,   407,   408,   409,
     410,   411,     0,   412,   413,     0,     0,   414,   415,   416,
     417,   418,     0,   419,   420,   421,   422,   423,   424,   425,
     426,     0,     0,   427,   428,   429,   430,   431,     0,     0,
     432,   433,   434,   435,   436,   437,   438,     0,   439,     0,
     441,   442,   443,   444,     0,     0,   445,     0,     0,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     492,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    92,    93,    94,    95,
      96,    97,    98,    99,   545,   100,   101,   102,     0,     0,
       0,     0,     0,     0,     0,   103,   104,     0,   105,   106,
     107,     0,   109,   110,   111,   112,   113,     0,   115,   116,
       0,   117,   118,   119,   120,   121,   122,     0,     0,   123,
     124,   125,   126,   127,     0,   128,   129,   130,   131,   132,
       0,     0,     0,   134,   135,   136,   137,   138,     0,   140,
     141,   142,     0,   143,   144,   145,   146,   147,   148,     0,
       0,   150,   151,   152,     0,     0,     0,     0,     0,     0,
       0,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,     0,   164,     0,   165,   166,   167,   168,   169,   170,
       0,   171,   172,   173,   174,   175,     0,     0,   176,   177,
     178,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,     0,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,     0,   197,     0,   198,   199,   200,   201,     0,
     202,     0,   203,     0,     0,     0,   206,   207,   208,     0,
     210,     0,   211,     0,   212,   213,     0,   214,   215,   216,
     217,   218,   219,     0,   221,   222,   223,   224,     0,   225,
     226,   227,   228,   229,   230,     0,   231,     0,   233,   234,
     235,   236,   237,   238,   239,     0,   240,     0,   241,     0,
       0,   244,     0,   246,   247,   248,   249,   250,     0,     0,
     251,     0,   253,     0,     0,   255,   256,   257,     0,     0,
     258,   259,   260,   261,   262,   494,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,     0,   284,   285,   286,   287,
     288,     0,   289,   290,     0,   292,     0,   293,   294,   295,
     296,   297,   298,     0,   299,   300,     0,     0,   301,   302,
     303,     0,     0,   304,   305,     0,   307,     0,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,     0,
     320,   321,   322,   323,   324,   325,   326,   327,   328,     0,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,     0,   355,   356,
       0,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,     0,   373,   374,   375,
     376,   377,     0,   378,   379,   380,   381,   382,     0,   384,
     385,   386,   387,     0,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   496,   400,   401,   402,     0,
     403,   404,     0,   405,     0,   407,   408,   409,   410,   411,
       0,   546,   413,     0,     0,   547,   415,   416,   417,   418,
       0,   419,   420,   421,   422,   423,   424,   425,   426,     0,
       0,   427,   428,   429,   430,   431,     0,     0,   432,   433,
     434,   435,   436,   437,   438,     0,   439,     0,   441,   442,
     443,   444,     0,     0,   445,     0,     0,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   492,     0,
     570,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    92,    93,    94,    95,    96,    97,
      98,    99,     0,   100,   101,   102,     0,     0,     0,     0,
       0,     0,     0,   103,   104,     0,   105,   106,   107,     0,
     109,   110,   111,   112,   113,     0,   115,   116,     0,   117,
     118,   119,   120,   121,   122,     0,     0,   123,   124,   125,
     126,   127,     0,   128,   129,   130,   131,   132,     0,     0,
       0,   134,   135,   136,   137,   138,     0,   140,   141,   142,
       0,   143,   144,   145,   146,   147,   148,     0,     0,   150,
     151,   152,     0,     0,     0,     0,     0,     0,     0,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,     0,
     164,     0,   165,   166,   167,   168,   169,   170,     0,   171,
     172,   173,   174,   175,     0,     0,   176,   177,   178,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,     0,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
       0,   197,     0,   198,   199,   200,   201,     0,   202,     0,
     203,     0,     0,     0,   206,   207,   208,     0,   210,     0,
     211,     0,   212,   213,     0,   214,   215,   216,   217,   218,
     609,     0,   221,   222,   223,   224,     0,   225,   226,   227,
     228,   229,   230,     0,   231,     0,   233,   234,   235,   236,
     237,   238,   239,     0,   240,     0,   241,     0,     0,   244,
       0,   246,   247,   248,   249,   250,     0,     0,   251,     0,
     253,     0,     0,   255,   256,   257,     0,     0,   258,   259,
     260,   261,   262,   494,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,     0,   284,   285,   286,   287,   288,     0,
     289,   290,     0,   292,     0,   293,   294,   295,   296,   297,
     298,     0,   299,   300,     0,     0,   301,   302,   303,     0,
       0,   304,   305,     0,   307,     0,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,     0,   320,   321,
     322,   323,   324,   325,   326,   327,   328,     0,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,     0,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,     0,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,     0,   373,   374,   375,   376,   377,
       0,   378,   379,   380,   381,   382,     0,   384,   385,   386,
     387,     0,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   496,   400,   401,   402,     0,   403,   404,
       0,   405,     0,   407,   408,   409,   410,   411,     0,   412,
     413,     0,     0,   414,   415,   416,   417,   418,     0,   419,
     420,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,   429,   430,   431,     0,     0,   432,   433,   434,   435,
     436,   437,   438,     0,   439,     0,   441,   442,   443,   444,
       0,     0,   445,     0,     0,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   492,     0,   570,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    92,    93,    94,    95,    96,    97,    98,    99,
       0,   100,   101,   102,     0,     0,     0,     0,     0,     0,
       0,   103,   104,     0,   105,   106,   107,     0,   109,   110,
     111,   112,   113,     0,   115,   116,     0,   117,   118,   119,
     120,   121,   122,     0,     0,   123,   124,   125,   126,   127,
       0,   128,   129,   130,   131,   132,     0,     0,     0,   134,
     135,   136,   137,   138,     0,   140,   141,   142,     0,   143,
     144,   145,   146,   147,   148,     0,     0,   150,   151,   152,
       0,     0,     0,     0,     0,     0,     0,   154,   155,   156,
     157,   158,   159,   160,   161,   162,   163,     0,   164,     0,
     165,   166,   167,   168,   169,   170,     0,   171,   172,   173,
     174,   175,     0,     0,   176,   177,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,     0,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,     0,   197,
       0,   198,   199,   200,   201,     0,   202,     0,   203,     0,
       0,     0,   206,   207,   208,     0,   210,     0,   211,     0,
     212,   213,     0,   214,   215,   216,   217,   218,   612,     0,
     221,   222,   223,   224,     0,   225,   226,   227,   228,   229,
     230,     0,   231,     0,   233,   234,   235,   236,   237,   238,
     239,     0,   240,     0,   241,     0,     0,   244,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,   253,     0,
       0,   255,   256,   257,     0,     0,   258,   259,   260,   261,
     262,   494,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,     0,   284,   285,   286,   287,   288,     0,   289,   290,
       0,   292,     0,   293,   294,   295,   296,   297,   298,     0,
     299,   300,     0,     0,   301,   302,   303,     0,     0,   304,
     305,     0,   307,     0,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,     0,   320,   321,   322,   323,
     324,   325,   326,   327,   328,     0,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,     0,   355,   356,     0,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,     0,   373,   374,   375,   376,   377,     0,   378,
     379,   380,   381,   382,     0,   384,   385,   386,   387,     0,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   496,   400,   401,   402,     0,   403,   404,     0,   405,
       0,   407,   408,   409,   410,   411,     0,   412,   413,     0,
       0,   414,   415,   416,   417,   418,     0,   419,   420,   421,
     422,   423,   424,   425,   426,     0,     0,   427,   428,   429,
     430,   431,     0,     0,   432,   433,   434,   435,   436,   437,
     438,     0,   439,     0,   441,   442,   443,   444,     0,     0,
     445,     0,     0,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   492,     0,   570,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      92,    93,    94,    95,    96,    97,    98,    99,     0,   100,
     101,   102,     0,     0,     0,     0,     0,     0,     0,   103,
     104,     0,   105,   106,   107,     0,   109,   110,   111,   112,
     113,     0,   115,   116,     0,   117,   118,   119,   120,   121,
     122,     0,     0,   123,   124,   125,   126,   127,     0,   128,
     129,   130,   131,   132,     0,     0,     0,   134,   135,   136,
     137,   138,     0,   140,   141,   142,     0,   143,   144,   145,
     146,   147,   148,     0,     0,   150,   151,   152,     0,     0,
       0,     0,     0,     0,     0,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,     0,   164,     0,   165,   166,
     167,   168,   169,   170,     0,   171,   172,   173,   174,   175,
       0,     0,   176,   177,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,     0,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,     0,   197,     0,   198,
     199,   200,   201,     0,   202,     0,   203,     0,     0,     0,
     206,   207,   208,     0,   210,     0,   211,     0,   212,   213,
       0,   214,   215,   216,   217,   218,   616,     0,   221,   222,
     223,   224,     0,   225,   226,   227,   228,   229,   230,     0,
     231,     0,   233,   234,   235,   236,   237,   238,   239,     0,
     240,     0,   241,     0,     0,   244,     0,   246,   247,   248,
     249,   250,     0,     0,   251,     0,   253,     0,     0,   255,
     256,   257,     0,     0,   258,   259,   260,   261,   262,   494,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,     0,
     284,   285,   286,   287,   288,     0,   289,   290,     0,   292,
       0,   293,   294,   295,   296,   297,   298,     0,   299,   300,
       0,     0,   301,   302,   303,     0,     0,   304,   305,     0,
     307,     0,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,     0,   320,   321,   322,   323,   324,   325,
     326,   327,   328,     0,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,     0,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,     0,   355,   356,     0,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
       0,   373,   374,   375,   376,   377,     0,   378,   379,   380,
     381,   382,     0,   384,   385,   386,   387,     0,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   496,
     400,   401,   402,     0,   403,   404,     0,   405,     0,   407,
     408,   409,   410,   411,     0,   412,   413,     0,     0,   414,
     415,   416,   417,   418,     0,   419,   420,   421,   422,   423,
     424,   425,   426,     0,     0,   427,   428,   429,   430,   431,
       0,     0,   432,   433,   434,   435,   436,   437,   438,     0,
     439,     0,   441,   442,   443,   444,     0,     0,   445,     0,
       0,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   492,     0,   570,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   112,   113,     0,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   134,   135,   136,   137,   138,
       0,   140,   141,   142,     0,   143,   144,   145,   146,   147,
     148,     0,     0,   150,   151,   152,     0,     0,     0,     0,
       0,     0,     0,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,     0,   164,     0,   165,   166,   167,   168,
     169,   170,     0,   171,   172,   173,   174,   175,     0,     0,
     176,   177,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,     0,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,     0,   197,     0,   198,   199,   200,
     201,     0,   202,     0,   203,     0,     0,     0,   206,   207,
     208,     0,   210,     0,   211,     0,   212,   213,     0,   214,
     215,   216,   217,   218,   219,     0,   221,   222,   223,   224,
       0,   225,   226,   227,   228,   229,   230,     0,   231,     0,
     233,   234,   235,   236,   237,   238,   239,     0,   240,     0,
     241,     0,     0,   244,     0,   246,   247,   248,   249,   250,
       0,     0,   251,     0,   253,     0,     0,   255,   256,   257,
       0,     0,   258,   259,   260,   261,   262,   494,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,     0,   284,   285,
     286,   287,   288,     0,   289,   290,     0,   292,     0,   293,
     294,   295,   296,   297,   298,     0,   299,   300,     0,     0,
     301,   302,   303,     0,     0,   304,   305,     0,   307,     0,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,     0,   320,   321,   322,   323,   324,   325,   326,   327,
     328,     0,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,     0,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,     0,
     355,   356,     0,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,     0,   373,
     374,   375,   376,   377,     0,   378,   379,   380,   381,   382,
       0,   384,   385,   386,   387,     0,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   496,   400,   401,
     402,     0,   403,   404,     0,   405,     0,   407,   408,   409,
     410,   411,     0,   412,   413,     0,     0,   414,   415,   416,
     417,   418,     0,   419,   420,   421,   422,   423,   424,   425,
     426,     0,     0,   427,   428,   429,   430,   431,     0,     0,
     432,   433,   434,   435,   436,   437,   438,     0,   439,     0,
     441,   442,   443,   444,     0,     0,   445,     0,     0,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     492,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    92,    93,    94,    95,
      96,    97,    98,    99,   644,   100,   101,   102,     0,     0,
       0,     0,     0,     0,     0,   103,   104,     0,   105,   106,
     107,     0,   109,   110,   111,   112,   113,     0,   115,   116,
       0,   117,   118,   119,   120,   121,   122,     0,     0,   123,
     124,   125,   126,   127,     0,   128,   129,   130,   131,   132,
       0,     0,     0,   134,   135,   136,   137,   138,     0,   140,
     141,   142,     0,   143,   144,   145,   146,   147,   148,     0,
       0,   150,   151,   152,     0,     0,     0,     0,     0,     0,
       0,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,     0,   164,     0,   165,   166,   167,   168,   169,   170,
       0,   171,   172,   173,   174,   175,     0,     0,   176,   177,
     178,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,     0,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,     0,   197,     0,   198,   199,   200,   201,     0,
     202,     0,   203,     0,     0,     0,   206,   207,   208,     0,
     210,     0,   211,     0,   212,   213,     0,   214,   215,   216,
     217,   218,   219,     0,   221,   222,   223,   224,     0,   225,
     226,   227,   228,   229,   230,     0,   231,     0,   233,   234,
     235,   236,   237,   238,   239,     0,   240,     0,   241,     0,
       0,   244,     0,   246,   247,   248,   249,   250,     0,     0,
     251,     0,   253,     0,     0,   255,   256,   257,     0,     0,
     258,   259,   260,   261,   262,   494,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,     0,   284,   285,   286,   287,
     288,     0,   289,   290,     0,   292,     0,   293,   294,   295,
     296,   297,   298,     0,   299,   300,     0,     0,   301,   302,
     303,     0,     0,   304,   305,     0,   307,     0,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,     0,
     320,   321,   322,   323,   324,   325,   326,   327,   328,     0,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,     0,   355,   356,
       0,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,     0,   373,   374,   375,
     376,   377,     0,   378,   379,   380,   381,   382,     0,   384,
     385,   386,   387,     0,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   496,   400,   401,   402,     0,
     403,   404,     0,   405,     0,   407,   408,   409,   410,   411,
       0,   412,   413,     0,     0,   414,   415,   416,   417,   418,
       0,   419,   420,   421,   422,   423,   424,   425,   426,     0,
       0,   427,   428,   429,   430,   431,     0,     0,   432,   433,
     434,   435,   436,   437,   438,     0,   439,     0,   441,   442,
     443,   444,     0,     0,   445,     0,     0,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   492,     0,
     570,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    92,    93,    94,    95,    96,    97,
      98,    99,     0,   100,   101,   102,     0,     0,     0,     0,
       0,     0,     0,   103,   104,     0,   105,   106,   107,     0,
     109,   110,   111,   112,   113,     0,   115,   116,     0,   117,
     118,   119,   120,   121,   122,     0,     0,   123,   124,   125,
     126,   127,     0,   128,   129,   130,   131,   132,     0,     0,
       0,   134,   135,   136,   137,   138,     0,   140,   141,   142,
       0,   143,   144,   145,   146,   147,   148,     0,     0,   150,
     151,   152,     0,     0,     0,     0,     0,     0,     0,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,     0,
     164,     0,   165,   166,   167,   168,   169,   170,     0,   171,
     172,   173,   174,   175,     0,     0,   176,   177,   178,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,     0,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
       0,   197,     0,   198,   199,   200,   201,     0,   202,     0,
     203,     0,     0,     0,   206,   207,   208,     0,   210,     0,
     211,     0,   212,   213,     0,   214,   215,   216,   217,   218,
    1132,     0,   221,   222,   223,   224,     0,   225,   226,   227,
     228,   229,   230,     0,   231,     0,   233,   234,   235,   236,
     237,   238,   239,     0,   240,     0,   241,     0,     0,   244,
       0,   246,   247,   248,   249,   250,     0,     0,   251,     0,
     253,     0,     0,   255,   256,   257,     0,     0,   258,   259,
     260,   261,   262,   494,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,     0,   284,   285,   286,   287,   288,     0,
     289,   290,     0,   292,     0,   293,   294,   295,   296,   297,
     298,     0,   299,   300,     0,     0,   301,   302,   303,     0,
       0,   304,   305,     0,   307,     0,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,     0,   320,   321,
     322,   323,   324,   325,   326,   327,   328,     0,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,     0,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,     0,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,     0,   373,   374,   375,   376,   377,
       0,   378,   379,   380,   381,   382,     0,   384,   385,   386,
     387,     0,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   496,   400,   401,   402,     0,   403,   404,
       0,   405,     0,   407,   408,   409,   410,   411,     0,   412,
     413,     0,     0,   414,   415,   416,   417,   418,     0,   419,
     420,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,   429,   430,   431,     0,     0,   432,   433,   434,   435,
     436,   437,   438,     0,   439,     0,   441,   442,   443,   444,
       0,     0,   445,     0,     0,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   492,     0,   570,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    92,    93,    94,    95,    96,    97,    98,    99,
       0,   100,   101,   102,     0,     0,     0,     0,     0,     0,
       0,   103,   104,     0,   105,   106,   107,     0,   109,   110,
     111,   112,   113,     0,   115,   116,     0,   117,   118,   119,
     120,   121,   122,     0,     0,   123,   124,   125,   126,   127,
       0,   128,   129,   130,   131,   132,     0,     0,     0,   134,
     135,   136,   137,   138,     0,   140,   141,   142,     0,   143,
     144,   145,   146,   147,   148,     0,     0,   150,   151,   152,
       0,     0,     0,     0,     0,     0,     0,   154,   155,   156,
     157,   158,   159,   160,   161,   162,   163,     0,   164,     0,
     165,   166,   167,   168,   169,   170,     0,   171,   172,   173,
     174,   175,     0,     0,   176,   177,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,     0,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,     0,   197,
       0,   198,   199,   200,   201,     0,   202,     0,   203,     0,
       0,     0,   206,   207,   208,     0,   210,     0,   211,     0,
     212,   213,     0,   214,   215,   216,   217,   218,  1134,     0,
     221,   222,   223,   224,     0,   225,   226,   227,   228,   229,
     230,     0,   231,     0,   233,   234,   235,   236,   237,   238,
     239,     0,   240,     0,   241,     0,     0,   244,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,   253,     0,
       0,   255,   256,   257,     0,     0,   258,   259,   260,   261,
     262,   494,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,     0,   284,   285,   286,   287,   288,     0,   289,   290,
       0,   292,     0,   293,   294,   295,   296,   297,   298,     0,
     299,   300,     0,     0,   301,   302,   303,     0,     0,   304,
     305,     0,   307,     0,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,     0,   320,   321,   322,   323,
     324,   325,   326,   327,   328,     0,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,     0,   355,   356,     0,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,     0,   373,   374,   375,   376,   377,     0,   378,
     379,   380,   381,   382,     0,   384,   385,   386,   387,     0,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   496,   400,   401,   402,     0,   403,   404,     0,   405,
       0,   407,   408,   409,   410,   411,     0,   412,   413,     0,
       0,   414,   415,   416,   417,   418,     0,   419,   420,   421,
     422,   423,   424,   425,   426,     0,     0,   427,   428,   429,
     430,   431,     0,     0,   432,   433,   434,   435,   436,   437,
     438,     0,   439,     0,   441,   442,   443,   444,     0,     0,
     445,     0,     0,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   492,     0,   570,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      92,    93,    94,    95,    96,    97,    98,    99,     0,   100,
     101,   102,     0,     0,     0,     0,     0,     0,     0,   103,
     104,     0,   105,   106,   107,     0,   109,   110,   111,   112,
     113,     0,   115,   116,     0,   117,   118,   119,   120,   121,
     122,     0,     0,   123,   124,   125,   126,   127,     0,   128,
     129,   130,   131,   132,     0,     0,     0,   134,   135,   136,
     137,   138,     0,   140,   141,   142,     0,   143,   144,   145,
     146,   147,   148,     0,     0,   150,   151,   152,     0,     0,
       0,     0,     0,     0,     0,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,     0,   164,     0,   165,   166,
     167,   168,   169,   170,     0,   171,   172,   173,   174,   175,
       0,     0,   176,   177,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,     0,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,     0,   197,     0,   198,
     199,   200,   201,     0,   202,     0,   203,     0,     0,     0,
     206,   207,   208,     0,   210,     0,   211,     0,   212,   213,
       0,   214,   215,   216,   217,   218,  1539,     0,   221,   222,
     223,   224,     0,   225,   226,   227,   228,   229,   230,     0,
     231,     0,   233,   234,   235,   236,   237,   238,   239,     0,
     240,     0,   241,     0,     0,   244,     0,   246,   247,   248,
     249,   250,     0,     0,   251,     0,   253,     0,     0,   255,
     256,   257,     0,     0,   258,   259,   260,   261,   262,   494,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,     0,
     284,   285,   286,   287,   288,     0,   289,   290,     0,   292,
       0,   293,   294,   295,   296,   297,   298,     0,   299,   300,
       0,     0,   301,   302,   303,     0,     0,   304,   305,     0,
     307,     0,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,     0,   320,   321,   322,   323,   324,   325,
     326,   327,   328,     0,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,     0,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,     0,   355,   356,     0,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
       0,   373,   374,   375,   376,   377,     0,   378,   379,   380,
     381,   382,     0,   384,   385,   386,   387,     0,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   496,
     400,   401,   402,     0,   403,   404,     0,   405,     0,   407,
     408,   409,   410,   411,     0,   412,   413,     0,     0,   414,
     415,   416,   417,   418,     0,   419,   420,   421,   422,   423,
     424,   425,   426,     0,     0,   427,   428,   429,   430,   431,
       0,     0,   432,   433,   434,   435,   436,   437,   438,     0,
     439,     0,   441,   442,   443,   444,     0,     0,   445,     0,
       0,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   492,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,  2277,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   112,   113,     0,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   134,   135,   136,   137,   138,
       0,   140,   141,   142,     0,   143,   144,   145,   146,   147,
     148,     0,     0,   150,   151,   152,     0,     0,     0,     0,
       0,     0,     0,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,     0,   164,     0,   165,   166,   167,   168,
     169,   170,     0,   171,   172,   173,   174,   175,     0,     0,
     176,   177,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,     0,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,     0,   197,     0,   198,   199,   200,
     201,     0,   202,     0,   203,     0,     0,     0,   206,   207,
     208,     0,   210,     0,   211,     0,   212,   213,     0,   214,
     215,   216,   217,   218,   219,     0,   221,   222,   223,   224,
       0,   225,   226,   227,   228,   229,   230,     0,   231,     0,
     233,   234,   235,   236,   237,   238,   239,     0,   240,     0,
     241,     0,     0,   244,     0,   246,   247,   248,   249,   250,
       0,     0,   251,     0,   253,     0,     0,   255,   256,   257,
       0,     0,   258,   259,   260,   261,   262,   494,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,     0,   284,   285,
     286,   287,   288,     0,   289,   290,     0,   292,     0,   293,
     294,   295,   296,   297,   298,     0,   299,   300,     0,     0,
     301,   302,   303,     0,     0,   304,   305,     0,   307,     0,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,     0,   320,   321,   322,   323,   324,   325,   326,   327,
     328,     0,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,     0,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,     0,
     355,   356,     0,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,     0,   373,
     374,   375,   376,   377,     0,   378,   379,   380,   381,   382,
       0,   384,   385,   386,   387,     0,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   496,   400,   401,
     402,     0,   403,   404,     0,   405,     0,   407,   408,   409,
     410,   411,     0,   412,   413,     0,     0,   414,   415,   416,
     417,   418,     0,   419,   420,   421,   422,   423,   424,   425,
     426,     0,     0,   427,   428,   429,   430,   431,     0,     0,
     432,   433,   434,   435,   436,   437,   438,     0,   439,     0,
     441,   442,   443,   444,     0,     0,   445,     0,     0,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     492,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    92,    93,    94,    95,
      96,    97,    98,    99,     0,   100,   101,   102,     0,     0,
       0,     0,     0,  2291,     0,   103,   104,     0,   105,   106,
     107,     0,   109,   110,   111,   112,   113,     0,   115,   116,
       0,   117,   118,   119,   120,   121,   122,     0,     0,   123,
     124,   125,   126,   127,     0,   128,   129,   130,   131,   132,
       0,     0,     0,   134,   135,   136,   137,   138,     0,   140,
     141,   142,     0,   143,   144,   145,   146,   147,   148,     0,
       0,   150,   151,   152,     0,     0,     0,     0,     0,     0,
       0,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,     0,   164,     0,   165,   166,   167,   168,   169,   170,
       0,   171,   172,   173,   174,   175,     0,     0,   176,   177,
     178,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,     0,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,     0,   197,     0,   198,   199,   200,   201,     0,
     202,     0,   203,     0,     0,     0,   206,   207,   208,     0,
     210,     0,   211,     0,   212,   213,     0,   214,   215,   216,
     217,   218,   219,     0,   221,   222,   223,   224,     0,   225,
     226,   227,   228,   229,   230,     0,   231,     0,   233,   234,
     235,   236,   237,   238,   239,     0,   240,     0,   241,     0,
       0,   244,     0,   246,   247,   248,   249,   250,     0,     0,
     251,     0,   253,     0,     0,   255,   256,   257,     0,     0,
     258,   259,   260,   261,   262,   494,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,     0,   284,   285,   286,   287,
     288,     0,   289,   290,     0,   292,     0,   293,   294,   295,
     296,   297,   298,     0,   299,   300,     0,     0,   301,   302,
     303,     0,     0,   304,   305,     0,   307,     0,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,     0,
     320,   321,   322,   323,   324,   325,   326,   327,   328,     0,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,     0,   355,   356,
       0,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,     0,   373,   374,   375,
     376,   377,     0,   378,   379,   380,   381,   382,     0,   384,
     385,   386,   387,     0,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   496,   400,   401,   402,     0,
     403,   404,     0,   405,     0,   407,   408,   409,   410,   411,
       0,   412,   413,     0,     0,   414,   415,   416,   417,   418,
       0,   419,   420,   421,   422,   423,   424,   425,   426,     0,
       0,   427,   428,   429,   430,   431,     0,     0,   432,   433,
     434,   435,   436,   437,   438,     0,   439,     0,   441,   442,
     443,   444,     0,     0,   445,     0,     0,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   492,     0,
     570,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    92,    93,    94,    95,    96,    97,
      98,    99,     0,   100,   101,   102,     0,     0,     0,     0,
       0,     0,     0,   103,   104,     0,   105,   106,   107,     0,
     109,   110,   111,   112,   113,     0,   115,   116,     0,   117,
     118,   119,   120,   121,   122,     0,     0,   123,   124,   125,
     126,   127,     0,   128,   129,   130,   131,   132,     0,     0,
       0,   134,   135,   136,   137,   138,     0,   140,   141,   142,
       0,   143,   144,   145,   146,   147,   148,     0,     0,   150,
     151,   152,     0,     0,     0,     0,     0,     0,     0,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,     0,
     164,     0,   165,   166,   167,   168,   169,   170,     0,   171,
     172,   173,   174,   175,     0,     0,   176,   177,   178,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,     0,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
       0,   197,     0,   198,   199,   200,   201,     0,   202,     0,
     203,     0,     0,     0,   206,   207,   208,     0,   210,     0,
     211,     0,   212,   213,     0,   214,   215,   216,   217,   218,
    2422,     0,   221,   222,   223,   224,     0,   225,   226,   227,
     228,   229,   230,     0,   231,     0,   233,   234,   235,   236,
     237,   238,   239,     0,   240,     0,   241,     0,     0,   244,
       0,   246,   247,   248,   249,   250,     0,     0,   251,     0,
     253,     0,     0,   255,   256,   257,     0,     0,   258,   259,
     260,   261,   262,   494,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,     0,   284,   285,   286,   287,   288,     0,
     289,   290,     0,   292,     0,   293,   294,   295,   296,   297,
     298,     0,   299,   300,     0,     0,   301,   302,   303,     0,
       0,   304,   305,     0,   307,     0,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,     0,   320,   321,
     322,   323,   324,   325,   326,   327,   328,     0,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,     0,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,     0,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,     0,   373,   374,   375,   376,   377,
       0,   378,   379,   380,   381,   382,     0,   384,   385,   386,
     387,     0,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   496,   400,   401,   402,     0,   403,   404,
       0,   405,     0,   407,   408,   409,   410,   411,     0,   412,
     413,     0,     0,   414,   415,   416,   417,   418,     0,   419,
     420,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,   429,   430,   431,     0,     0,   432,   433,   434,   435,
     436,   437,   438,     0,   439,     0,   441,   442,   443,   444,
       0,     0,   445,     0,     0,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   492,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    92,    93,    94,    95,    96,    97,    98,    99,
       0,   100,   101,   102,     0,     0,     0,     0,     0,     0,
       0,   103,   104,     0,   105,   106,   107,     0,   109,   110,
     111,   112,   113,     0,   115,   116,     0,   117,   118,   119,
     120,   121,   122,     0,     0,   123,   124,   125,   126,   127,
       0,   128,   129,   130,   131,   132,     0,     0,     0,   134,
     135,   136,   137,   138,     0,   140,   141,   142,     0,   143,
     144,   145,   146,   147,   148,     0,     0,   150,   151,   152,
       0,     0,     0,     0,     0,     0,     0,   154,   155,   156,
     157,   158,   159,   160,   161,   162,   163,     0,   164,     0,
     165,   166,   167,   168,   169,   170,     0,   171,   172,   173,
     174,   175,     0,     0,   176,   177,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,     0,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,     0,   197,
       0,   198,   199,   200,   201,     0,   202,     0,   203,     0,
       0,     0,   206,   207,   208,     0,   210,     0,   211,     0,
     212,   213,     0,   214,   215,   216,   217,   218,   219,     0,
     221,   222,   223,   224,     0,   225,   226,   227,   228,   229,
     230,     0,   231,     0,   233,   234,   235,   236,   237,   238,
     239,     0,   240,     0,   241,     0,     0,   244,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,   253,     0,
       0,   255,   256,   257,     0,     0,   258,   259,   260,   261,
     262,   494,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,     0,   284,   285,   286,   287,   288,     0,   289,   290,
       0,   292,     0,   293,   294,   295,   296,   297,   298,     0,
     299,   300,     0,     0,   301,   302,   303,     0,     0,   304,
     305,     0,   307,     0,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,     0,   320,   321,   322,   323,
     324,   325,   326,   327,   328,     0,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,     0,   355,   356,     0,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,     0,   373,   374,   375,   376,   377,     0,   378,
     379,   380,   381,   382,     0,   384,   385,   386,   387,     0,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   496,   400,   401,   402,     0,   403,   404,     0,   405,
       0,   407,   408,   409,   410,   411,     0,   412,   413,     0,
       0,   414,   415,   416,   417,   418,     0,   419,   420,   421,
     422,   423,   424,   425,   426,     0,     0,   427,   428,   429,
     430,   431,     0,     0,   432,   433,   434,   435,   436,   437,
     438,     0,   439,     0,   441,   442,   443,   444,     0,     0,
     445,     0,     0,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   492,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      92,    93,    94,    95,    96,    97,    98,    99,     0,   100,
     101,   102,     0,     0,     0,     0,     0,     0,     0,   103,
     104,     0,   105,   106,   107,     0,   109,   110,   111,   112,
     113,     0,   115,   116,     0,   117,   118,   119,   120,   121,
     122,     0,     0,   123,   124,   125,   126,   127,     0,   128,
     129,   130,   131,   132,     0,     0,     0,   134,   135,   136,
     137,   138,     0,   140,   141,   142,     0,   143,   144,   145,
     146,   147,   148,     0,     0,   150,   151,   152,     0,     0,
       0,     0,     0,     0,     0,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,     0,   164,     0,   165,   166,
     167,   168,   169,   170,     0,   171,   172,   173,   174,   175,
       0,     0,   176,   177,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,     0,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,     0,   197,     0,   198,
     199,   200,   201,     0,   202,     0,   203,     0,     0,     0,
     206,   207,   208,     0,   557,     0,   211,     0,   212,   213,
       0,   214,   215,   216,   217,   218,   219,     0,   221,   222,
     223,   224,     0,   225,   226,   227,   228,   229,   230,     0,
     231,     0,   233,   234,   235,   236,   237,   238,   239,     0,
     240,     0,   241,     0,     0,   244,     0,   246,   247,   248,
     249,   250,     0,     0,   251,     0,   253,     0,     0,   255,
     256,   558,     0,     0,   258,   259,   260,   261,   262,   494,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,     0,
     284,   285,   286,   287,   288,     0,   289,   290,     0,   292,
       0,   293,   294,   295,   296,   297,   298,     0,   299,   300,
       0,     0,   301,   302,   303,     0,     0,   304,   305,     0,
     307,     0,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,     0,   320,   321,   322,   323,   324,   325,
     326,   327,   328,     0,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,     0,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,     0,   355,   356,     0,   358,   359,   360,   361,   362,
     363,   364,   365,   559,   367,   368,   369,   370,   371,   372,
       0,   373,   374,   375,   376,   560,     0,   378,   379,   380,
     381,   382,     0,   384,   385,   386,   387,     0,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   496,
     400,   401,   402,     0,   403,   404,     0,   405,     0,   407,
     408,   409,   410,   411,     0,   561,   413,     0,     0,   414,
     415,   416,   417,   418,     0,   419,   420,   421,   422,   423,
     424,   425,   426,     0,     0,   427,   428,   429,   430,   431,
       0,     0,   432,   433,   434,   435,   436,   437,   438,     0,
     439,     0,   441,   442,   443,   444,     0,     0,   445,     0,
       0,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   492,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   112,   113,     0,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   134,   135,   136,   137,   138,
       0,   140,   141,   142,     0,   143,   144,   145,   146,   147,
     148,     0,     0,   150,   151,   152,     0,     0,     0,     0,
       0,     0,     0,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,     0,   164,     0,   165,   166,   167,   168,
     169,   170,     0,   171,   172,   173,   174,   175,     0,     0,
     176,   177,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,     0,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,     0,   197,     0,   198,   199,   200,
     201,     0,   202,     0,   203,     0,     0,     0,   206,   207,
     208,     0,   210,     0,   211,     0,   212,   213,     0,   214,
     215,   216,   217,   218,   219,     0,   221,   222,   223,   224,
       0,   225,   226,   227,   228,   229,   230,     0,   231,     0,
     233,   234,   235,   236,   237,   238,   239,     0,   240,     0,
     241,     0,     0,   244,     0,   246,   247,   248,   249,   250,
       0,     0,   251,     0,   253,     0,     0,   255,   256,   257,
       0,     0,   258,   259,   260,   261,   262,   494,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,     0,   284,   285,
     286,   287,   288,     0,   289,   290,     0,   292,     0,   293,
     294,   295,   296,   297,   298,     0,   299,   300,     0,     0,
     301,   302,   303,     0,     0,   304,   305,     0,   307,     0,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,     0,   320,   321,   322,   323,   324,   325,   326,   327,
     328,     0,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   580,   342,     0,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,     0,
     355,   356,     0,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,     0,   373,
     374,   375,   376,   377,     0,   378,   379,   380,   381,   382,
       0,   384,   385,   386,   387,     0,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   496,   400,   401,
     402,     0,   403,   404,     0,   405,     0,   407,   408,   409,
     410,   411,     0,   412,   413,     0,     0,   414,   415,   416,
     417,   418,     0,   419,   420,   421,   422,   423,   424,   425,
     426,     0,     0,   427,   428,   429,   430,   431,     0,     0,
     432,   433,   434,   435,   436,   437,   438,     0,   439,     0,
     441,   442,   443,   444,     0,     0,   445,     0,     0,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     492,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    92,    93,    94,    95,
      96,    97,    98,    99,     0,   100,   101,   102,     0,     0,
       0,     0,     0,     0,     0,   103,   104,     0,   105,   106,
     107,     0,   109,   110,   111,   112,   113,     0,   115,   116,
       0,   117,   118,   119,   120,   121,   122,     0,     0,   123,
     124,   125,   126,   127,     0,   128,   129,   130,   131,   132,
       0,     0,     0,   134,   135,   136,   137,   138,     0,   140,
     141,   142,     0,   143,   144,   145,   146,   147,   148,     0,
       0,   150,   151,   152,     0,     0,     0,     0,     0,     0,
       0,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,     0,   164,     0,   165,   166,   167,   168,   169,   170,
       0,   171,   172,   173,   174,   175,     0,     0,   176,   177,
     178,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,     0,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,     0,   197,     0,   198,   199,   200,   201,     0,
     202,     0,   203,     0,     0,     0,   206,   207,   208,     0,
     210,     0,   211,     0,   212,   213,     0,   214,   215,   216,
     217,   218,   634,     0,   221,   222,   223,   224,     0,   225,
     226,   227,   228,   229,   230,     0,   231,     0,   233,   234,
     235,   236,   237,   238,   239,     0,   240,     0,   241,     0,
       0,   244,     0,   246,   247,   248,   249,   250,     0,     0,
     251,     0,   253,     0,     0,   255,   256,   257,     0,     0,
     258,   259,   260,   261,   262,   494,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,     0,   284,   285,   286,   287,
     288,     0,   289,   290,     0,   292,     0,   293,   294,   295,
     296,   297,   298,     0,   299,   300,     0,     0,   301,   302,
     303,     0,     0,   304,   305,     0,   307,     0,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,     0,
     320,   321,   322,   323,   324,   325,   326,   327,   328,     0,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,     0,   355,   356,
       0,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,     0,   373,   374,   375,
     376,   377,     0,   378,   379,   380,   381,   382,     0,   384,
     385,   386,   387,     0,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   496,   400,   401,   402,     0,
     403,   404,     0,   405,     0,   407,   408,   409,   410,   411,
       0,   412,   413,     0,     0,   414,   415,   416,   417,   418,
       0,   419,   420,   421,   422,   423,   424,   425,   426,     0,
       0,   427,   428,   429,   430,   431,     0,     0,   432,   433,
     434,   435,   436,   437,   438,     0,   439,     0,   441,   442,
     443,   444,     0,     0,   445,     0,     0,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   492,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    92,    93,    94,    95,    96,    97,
      98,    99,     0,   100,   101,   102,     0,     0,     0,     0,
       0,     0,     0,   103,   104,     0,   105,   106,   107,     0,
     109,   110,   111,   112,   113,     0,   115,   116,     0,   117,
     118,   119,   120,   121,   122,     0,     0,   123,   124,   125,
     126,   127,     0,   128,   129,   130,   131,   132,     0,     0,
       0,   134,   135,   136,   137,   138,     0,   140,   141,   142,
       0,   143,   144,   145,   146,   147,   148,     0,     0,   150,
     151,   152,     0,     0,     0,     0,     0,     0,     0,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,     0,
     164,     0,   165,   166,   167,   168,   169,   170,     0,   171,
     172,   173,   174,   175,     0,     0,   176,   177,   178,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,     0,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
       0,   197,     0,   198,   199,   200,   201,     0,   202,     0,
     203,     0,     0,     0,   206,   207,   208,     0,   210,     0,
     211,     0,   212,   213,     0,   214,   215,   216,   217,   218,
     721,     0,   221,   222,   223,   224,     0,   225,   226,   227,
     228,   229,   230,     0,   231,     0,   233,   234,   235,   236,
     237,   238,   239,     0,   240,     0,   241,     0,     0,   244,
       0,   246,   247,   248,   249,   250,     0,     0,   251,     0,
     253,     0,     0,   255,   256,   257,     0,     0,   258,   259,
     260,   261,   262,   494,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,     0,   284,   285,   286,   287,   288,     0,
     289,   290,     0,   292,     0,   293,   294,   295,   296,   297,
     298,     0,   299,   300,     0,     0,   301,   302,   303,     0,
       0,   304,   305,     0,   307,     0,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,     0,   320,   321,
     322,   323,   324,   325,   326,   327,   328,     0,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,     0,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,     0,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,     0,   373,   374,   375,   376,   377,
       0,   378,   379,   380,   381,   382,     0,   384,   385,   386,
     387,     0,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   496,   400,   401,   402,     0,   403,   404,
       0,   405,     0,   407,   408,   409,   410,   411,     0,   412,
     413,     0,     0,   414,   415,   416,   417,   418,     0,   419,
     420,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,   429,   430,   431,     0,     0,   432,   433,   434,   435,
     436,   437,   438,     0,   439,     0,   441,   442,   443,   444,
       0,     0,   445,     0,     0,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   492,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    92,    93,    94,    95,    96,    97,    98,    99,
       0,   100,   101,   102,     0,     0,     0,     0,     0,     0,
       0,   103,   104,     0,   105,   106,   107,     0,   109,   110,
     111,   112,   113,     0,   115,   116,     0,   117,   118,   119,
     120,   121,   122,     0,     0,   123,   124,   125,   126,   127,
       0,   128,   129,   130,   131,   132,     0,     0,     0,   134,
     135,   136,   137,   138,     0,   140,   141,   142,     0,   143,
     144,   145,   146,   147,   148,     0,     0,   150,   151,   152,
       0,     0,     0,     0,     0,     0,     0,   154,   155,   156,
     157,   158,   159,   160,   161,   162,   163,     0,   164,     0,
     165,   166,   167,   168,   169,   170,     0,   171,   172,   173,
     174,   175,     0,     0,   176,   177,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,     0,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,     0,   197,
       0,   198,   199,   200,   201,     0,   202,     0,   203,     0,
       0,     0,   206,   207,   208,     0,   210,     0,   211,     0,
     212,   213,     0,   214,   215,   216,   217,   218,   724,     0,
     221,   222,   223,   224,     0,   225,   226,   227,   228,   229,
     230,     0,   231,     0,   233,   234,   235,   236,   237,   238,
     239,     0,   240,     0,   241,     0,     0,   244,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,   253,     0,
       0,   255,   256,   257,     0,     0,   258,   259,   260,   261,
     262,   494,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,     0,   284,   285,   286,   287,   288,     0,   289,   290,
       0,   292,     0,   293,   294,   295,   296,   297,   298,     0,
     299,   300,     0,     0,   301,   302,   303,     0,     0,   304,
     305,     0,   307,     0,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,     0,   320,   321,   322,   323,
     324,   325,   326,   327,   328,     0,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,     0,   355,   356,     0,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,     0,   373,   374,   375,   376,   377,     0,   378,
     379,   380,   381,   382,     0,   384,   385,   386,   387,     0,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   496,   400,   401,   402,     0,   403,   404,     0,   405,
       0,   407,   408,   409,   410,   411,     0,   412,   413,     0,
       0,   414,   415,   416,   417,   418,     0,   419,   420,   421,
     422,   423,   424,   425,   426,     0,     0,   427,   428,   429,
     430,   431,     0,     0,   432,   433,   434,   435,   436,   437,
     438,     0,   439,     0,   441,   442,   443,   444,     0,     0,
     445,     0,     0,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   492,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      92,    93,    94,    95,    96,    97,    98,    99,     0,   100,
     101,   102,     0,     0,     0,     0,     0,     0,     0,   103,
     104,     0,   105,   106,   107,     0,   109,   110,   111,   112,
     113,     0,   115,   116,     0,   117,   118,   119,   120,   121,
     122,     0,     0,   123,   124,   125,   126,   127,     0,   128,
     129,   130,   131,   132,     0,     0,     0,   134,   135,   136,
     137,   138,     0,   140,   141,   142,     0,   143,   144,   145,
     146,   147,   148,     0,     0,   150,   151,   152,     0,     0,
       0,     0,     0,     0,     0,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,     0,   164,     0,   165,   166,
     167,   168,   169,   170,     0,   171,   172,   173,   174,   175,
       0,     0,   176,   177,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,     0,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,     0,   197,     0,   198,
     199,   200,   201,     0,   202,     0,   203,     0,     0,     0,
     206,   207,   208,     0,   210,     0,   211,     0,   212,   213,
       0,   214,   215,   216,   217,   218,   727,     0,   221,   222,
     223,   224,     0,   225,   226,   227,   228,   229,   230,     0,
     231,     0,   233,   234,   235,   236,   237,   238,   239,     0,
     240,     0,   241,     0,     0,   244,     0,   246,   247,   248,
     249,   250,     0,     0,   251,     0,   253,     0,     0,   255,
     256,   257,     0,     0,   258,   259,   260,   261,   262,   494,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,     0,
     284,   285,   286,   287,   288,     0,   289,   290,     0,   292,
       0,   293,   294,   295,   296,   297,   298,     0,   299,   300,
       0,     0,   301,   302,   303,     0,     0,   304,   305,     0,
     307,     0,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,     0,   320,   321,   322,   323,   324,   325,
     326,   327,   328,     0,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,     0,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,     0,   355,   356,     0,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
       0,   373,   374,   375,   376,   377,     0,   378,   379,   380,
     381,   382,     0,   384,   385,   386,   387,     0,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   496,
     400,   401,   402,     0,   403,   404,     0,   405,     0,   407,
     408,   409,   410,   411,     0,   412,   413,     0,     0,   414,
     415,   416,   417,   418,     0,   419,   420,   421,   422,   423,
     424,   425,   426,     0,     0,   427,   428,   429,   430,   431,
       0,     0,   432,   433,   434,   435,   436,   437,   438,     0,
     439,     0,   441,   442,   443,   444,     0,     0,   445,     0,
       0,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   492,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   112,   113,     0,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   134,   135,   136,   137,   138,
       0,   140,   141,   142,     0,   143,   144,   145,   146,   147,
     148,     0,     0,   150,   151,   152,     0,     0,     0,     0,
       0,     0,     0,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,     0,   164,     0,   165,   166,   167,   168,
     169,   170,     0,   171,   172,   173,   174,   175,     0,     0,
     176,   177,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,     0,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,     0,   197,     0,   198,   199,   200,
     201,     0,   202,     0,   203,     0,     0,     0,   206,   207,
     208,     0,   210,     0,   211,     0,   212,   213,     0,   214,
     215,   216,   217,   218,   219,     0,   221,   222,   223,   224,
       0,   225,   226,   227,   228,   229,   230,     0,   231,     0,
     233,   234,   235,   236,   237,   238,   239,     0,   240,     0,
     241,     0,     0,   244,     0,   246,   247,   248,   249,   250,
       0,     0,   251,     0,   253,     0,     0,   255,   256,   257,
       0,     0,   258,   259,   260,   261,   262,   494,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,     0,   284,   285,
     286,   287,   288,     0,   289,   290,     0,   292,     0,   293,
     294,   295,   296,   297,   298,     0,   299,   300,     0,     0,
     301,   302,   303,     0,     0,   304,   305,     0,   307,     0,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,     0,   320,   321,   322,   323,   324,   325,   326,   327,
     328,     0,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,     0,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,     0,
     355,   356,     0,   358,   359,   360,   361,   362,   363,   364,
     365,   559,   367,   368,   369,   370,   371,   372,     0,   373,
     374,   375,   376,   377,     0,   378,   379,   380,   381,   382,
       0,   384,   385,   386,   387,     0,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   496,   400,   401,
     402,     0,   403,   404,     0,   405,     0,   407,   408,   409,
     410,   411,     0,   561,   413,     0,     0,   414,   415,   416,
     417,   418,     0,   419,   420,   421,   422,   423,   424,   425,
     426,     0,     0,   427,   428,   429,   430,   431,     0,     0,
     432,   433,   434,   435,   436,   437,   438,     0,   439,     0,
     441,   442,   443,   444,     0,     0,   445,     0,     0,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     492,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    92,    93,    94,    95,
      96,    97,    98,    99,     0,   100,   101,   102,     0,     0,
       0,     0,     0,  1367,     0,   103,   104,     0,   105,   106,
     107,     0,   109,   110,   111,   112,   113,     0,   115,   116,
       0,   117,   118,   119,   120,   121,   122,     0,     0,   123,
     124,   125,   126,   127,     0,   128,   129,   130,   131,   132,
       0,     0,     0,   134,   135,   136,   137,   138,     0,   140,
     141,   142,     0,   143,   144,   145,   146,   147,   148,     0,
       0,   150,   151,   152,     0,     0,     0,     0,     0,     0,
       0,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,     0,   164,     0,   165,   166,   167,   168,   169,   170,
       0,   171,   172,   173,   174,   175,     0,     0,   176,   177,
     178,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,     0,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,     0,   197,     0,   198,   199,   200,   201,     0,
     202,     0,   203,     0,     0,     0,   206,   207,   208,     0,
     210,     0,   211,     0,   212,   213,     0,   214,   215,   216,
     217,   218,   219,     0,   221,   222,   223,   224,     0,   225,
     226,   227,   228,   229,   230,     0,   231,     0,   233,   234,
     235,   236,   237,   238,   239,     0,   240,     0,   241,     0,
       0,   244,     0,   246,   247,   248,   249,   250,     0,     0,
     251,     0,   253,     0,     0,   255,   256,   257,     0,     0,
     258,   259,   260,   261,   262,   494,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,     0,   284,   285,   286,   287,
     288,     0,   289,   290,     0,   292,     0,   293,   294,   295,
     296,   297,   298,     0,   299,   300,     0,     0,   301,   302,
     303,     0,     0,   304,   305,     0,   307,     0,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,     0,
     320,   321,   322,   323,   324,   325,   326,   327,   328,     0,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,     0,   355,   356,
       0,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,     0,   373,   374,   375,
     376,   377,     0,     0,   379,   380,   381,   382,     0,   384,
     385,   386,   387,     0,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   496,   400,   401,   402,     0,
     403,   404,     0,   405,     0,   407,   408,   409,   410,   411,
       0,   412,   413,     0,     0,   414,   415,   416,   417,   418,
       0,   419,   420,   421,   422,   423,   424,   425,   426,     0,
       0,   427,   428,   429,   430,   431,     0,     0,   432,   433,
     434,   435,   436,   437,   438,     0,   439,     0,   441,   442,
     443,   444,     0,     0,   445,     0,     0,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   492,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    92,    93,    94,    95,    96,    97,
      98,    99,     0,   100,   101,   102,     0,     0,     0,     0,
       0,     0,     0,   103,   104,     0,   105,   106,   107,     0,
     109,   110,   111,   112,   113,     0,   115,   116,     0,   117,
     118,   119,   120,   121,   122,     0,     0,   123,   124,   125,
     126,   127,     0,   128,   129,   130,   131,   132,     0,     0,
       0,   134,   135,   136,   137,   138,     0,   140,   141,   142,
       0,   143,   144,   145,   146,   147,   148,     0,     0,   150,
     151,   152,     0,     0,     0,     0,     0,     0,     0,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,     0,
     164,     0,   165,   166,   167,   168,   169,   170,     0,   171,
     172,   173,   174,   175,     0,     0,   176,   177,   178,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,     0,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
       0,   197,     0,   198,   199,   200,   201,     0,   202,     0,
     203,     0,     0,     0,   206,   207,   208,     0,   210,     0,
     211,     0,   212,   213,     0,   214,   215,   216,   217,   218,
    1504,     0,   221,   222,   223,   224,     0,   225,   226,   227,
     228,   229,   230,     0,   231,     0,   233,   234,   235,   236,
     237,   238,   239,     0,   240,     0,   241,     0,     0,   244,
       0,   246,   247,   248,   249,   250,     0,     0,   251,     0,
     253,     0,     0,   255,   256,   257,     0,     0,   258,   259,
     260,   261,   262,   494,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,     0,   284,   285,   286,   287,   288,     0,
     289,   290,     0,   292,     0,   293,   294,   295,   296,   297,
     298,     0,   299,   300,     0,     0,   301,   302,   303,     0,
       0,   304,   305,     0,   307,     0,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,     0,   320,   321,
     322,   323,   324,   325,   326,   327,   328,     0,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,     0,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,   355,   356,     0,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,     0,   373,   374,   375,   376,   377,
       0,   378,   379,   380,   381,   382,     0,   384,   385,   386,
     387,     0,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   496,   400,   401,   402,     0,   403,   404,
       0,   405,     0,   407,   408,   409,   410,   411,     0,   412,
     413,     0,     0,   414,   415,   416,   417,   418,     0,   419,
     420,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,   429,   430,   431,     0,     0,   432,   433,   434,   435,
     436,   437,   438,     0,   439,     0,   441,   442,   443,   444,
       0,     0,   445,     0,     0,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   492,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    92,    93,    94,    95,    96,    97,    98,    99,
       0,   100,   101,   102,     0,     0,     0,     0,     0,     0,
       0,   103,   104,     0,   105,   106,   107,     0,   109,   110,
     111,   112,   113,     0,   115,   116,     0,   117,   118,   119,
     120,   121,   122,     0,     0,   123,   124,   125,   126,   127,
       0,   128,   129,   130,   131,   132,     0,     0,     0,   134,
     135,   136,   137,   138,     0,   140,   141,   142,     0,   143,
     144,   145,   146,   147,   148,     0,     0,   150,   151,   152,
       0,     0,     0,     0,     0,     0,     0,   154,   155,   156,
     157,   158,   159,   160,   161,   162,   163,     0,   164,     0,
     165,   166,   167,   168,   169,   170,     0,   171,   172,   173,
     174,   175,     0,     0,   176,   177,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,     0,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,     0,   197,
       0,   198,   199,   200,   201,     0,   202,     0,   203,     0,
       0,     0,   206,   207,   208,     0,   210,     0,   211,     0,
     212,   213,     0,   214,   215,   216,   217,   218,  1778,     0,
     221,   222,   223,   224,     0,   225,   226,   227,   228,   229,
     230,     0,   231,     0,   233,   234,   235,   236,   237,   238,
     239,     0,   240,     0,   241,     0,     0,   244,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,   253,     0,
       0,   255,   256,   257,     0,     0,   258,   259,   260,   261,
     262,   494,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,     0,   284,   285,   286,   287,   288,     0,   289,   290,
       0,   292,     0,   293,   294,   295,   296,   297,   298,     0,
     299,   300,     0,     0,   301,   302,   303,     0,     0,   304,
     305,     0,   307,     0,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,     0,   320,   321,   322,   323,
     324,   325,   326,   327,   328,     0,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,     0,   355,   356,     0,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,     0,   373,   374,   375,   376,   377,     0,   378,
     379,   380,   381,   382,     0,   384,   385,   386,   387,     0,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   496,   400,   401,   402,     0,   403,   404,     0,   405,
       0,   407,   408,   409,   410,   411,     0,   412,   413,     0,
       0,   414,   415,   416,   417,   418,     0,   419,   420,   421,
     422,   423,   424,   425,   426,     0,     0,   427,   428,   429,
     430,   431,     0,     0,   432,   433,   434,   435,   436,   437,
     438,     0,   439,     0,   441,   442,   443,   444,     0,     0,
     445,     0,     0,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   492,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      92,    93,    94,    95,    96,    97,    98,    99,     0,   100,
     101,   102,     0,     0,     0,     0,     0,     0,     0,   103,
     104,     0,   105,   106,   107,     0,   109,   110,   111,   112,
     113,     0,   115,   116,     0,   117,   118,   119,   120,   121,
     122,     0,     0,   123,   124,   125,   126,   127,     0,   128,
     129,   130,   131,   132,     0,     0,     0,   134,   135,   136,
     137,   138,     0,   140,   141,   142,     0,   143,   144,   145,
     146,   147,   148,     0,     0,   150,   151,   152,     0,     0,
       0,     0,     0,     0,     0,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,     0,   164,     0,   165,   166,
     167,   168,   169,   170,     0,   171,   172,   173,   174,   175,
       0,     0,   176,   177,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,     0,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,     0,   197,     0,   198,
     199,   200,   201,     0,   202,     0,   203,     0,     0,     0,
     206,   207,   208,     0,   210,     0,   211,     0,   212,   213,
       0,   214,   215,   216,   217,   218,  1790,     0,   221,   222,
     223,   224,     0,   225,   226,   227,   228,   229,   230,     0,
     231,     0,   233,   234,   235,   236,   237,   238,   239,     0,
     240,     0,   241,     0,     0,   244,     0,   246,   247,   248,
     249,   250,     0,     0,   251,     0,   253,     0,     0,   255,
     256,   257,     0,     0,   258,   259,   260,   261,   262,   494,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,     0,
     284,   285,   286,   287,   288,     0,   289,   290,     0,   292,
       0,   293,   294,   295,   296,   297,   298,     0,   299,   300,
       0,     0,   301,   302,   303,     0,     0,   304,   305,     0,
     307,     0,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,     0,   320,   321,   322,   323,   324,   325,
     326,   327,   328,     0,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,     0,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,     0,   355,   356,     0,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
       0,   373,   374,   375,   376,   377,     0,   378,   379,   380,
     381,   382,     0,   384,   385,   386,   387,     0,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   496,
     400,   401,   402,     0,   403,   404,     0,   405,     0,   407,
     408,   409,   410,   411,     0,   412,   413,     0,     0,   414,
     415,   416,   417,   418,     0,   419,   420,   421,   422,   423,
     424,   425,   426,     0,     0,   427,   428,   429,   430,   431,
       0,     0,   432,   433,   434,   435,   436,   437,   438,     0,
     439,     0,   441,   442,   443,   444,     0,     0,   445,     0,
       0,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   492,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   100,   101,   102,
       0,     0,     0,     0,     0,     0,     0,   103,   104,     0,
     105,   106,   107,     0,   109,   110,   111,   112,   113,     0,
     115,   116,     0,   117,   118,   119,   120,   121,   122,     0,
       0,   123,   124,   125,   126,   127,     0,   128,   129,   130,
     131,   132,     0,     0,     0,   134,   135,   136,   137,   138,
       0,   140,   141,   142,     0,   143,   144,   145,   146,   147,
     148,     0,     0,   150,   151,   152,     0,     0,     0,     0,
       0,     0,     0,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,     0,   164,     0,   165,   166,   167,   168,
     169,   170,     0,   171,   172,   173,   174,   175,     0,     0,
     176,   177,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,     0,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,     0,   197,     0,   198,   199,   200,
     201,     0,   202,     0,   203,     0,     0,     0,   206,   207,
     208,     0,   210,     0,   211,     0,   212,   213,     0,   214,
     215,   216,   217,   218,  1792,     0,   221,   222,   223,   224,
       0,   225,   226,   227,   228,   229,   230,     0,   231,     0,
     233,   234,   235,   236,   237,   238,   239,     0,   240,     0,
     241,     0,     0,   244,     0,   246,   247,   248,   249,   250,
       0,     0,   251,     0,   253,     0,     0,   255,   256,   257,
       0,     0,   258,   259,   260,   261,   262,   494,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,     0,   284,   285,
     286,   287,   288,     0,   289,   290,     0,   292,     0,   293,
     294,   295,   296,   297,   298,     0,   299,   300,     0,     0,
     301,   302,   303,     0,     0,   304,   305,     0,   307,     0,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,     0,   320,   321,   322,   323,   324,   325,   326,   327,
     328,     0,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,     0,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,     0,
     355,   356,     0,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,     0,   373,
     374,   375,   376,   377,     0,   378,   379,   380,   381,   382,
       0,   384,   385,   386,   387,     0,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   496,   400,   401,
     402,     0,   403,   404,     0,   405,     0,   407,   408,   409,
     410,   411,     0,   412,   413,     0,     0,   414,   415,   416,
     417,   418,     0,   419,   420,   421,   422,   423,   424,   425,
     426,     0,     0,   427,   428,   429,   430,   431,     0,     0,
     432,   433,   434,   435,   436,   437,   438,     0,   439,     0,
     441,   442,   443,   444,     0,     0,   445,     0,     0,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     652,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    92,    93,    94,    95,
      96,    97,    98,    99,     0,   100,   101,   102,     0,     0,
       0,     0,     0,     0,     0,   103,   104,     0,   105,   106,
     107,   653,   109,   110,   111,     0,   654,   655,   656,   657,
       0,   117,   118,   119,   120,   121,   122,     0,     0,   123,
     124,   658,   659,   127,     0,   128,   129,   130,   131,     0,
       0,   660,     0,   134,   135,   136,   137,   138,   661,   140,
     141,   142,     0,   143,   144,   145,   146,   147,   148,     0,
     662,   150,   151,   152,     0,     0,     0,   663,     0,     0,
       0,   154,   155,   156,   157,   158,   159,   160,   664,   665,
     163,     0,   164,     0,   165,   166,   167,   168,   169,   170,
       0,   171,   172,   173,   174,   175,     0,     0,   176,   177,
     666,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,     0,   187,   188,   189,   190,     0,   192,   193,   194,
     195,     0,     0,   197,     0,   198,   199,   667,   201,     0,
     202,     0,   203,   668,     0,   669,   206,   207,   208,   670,
     210,     0,   211,     0,     0,   213,     0,   214,   215,   216,
     217,   218,   671,   672,   221,   222,   223,   224,     0,   225,
     226,   227,   228,   229,   230,     0,   231,   673,     0,   234,
     235,   236,   237,   674,   675,     0,   676,     0,   241,   677,
     678,   244,   679,   246,   247,   248,   249,   250,     0,     0,
     251,   680,   253,   681,     0,   255,   256,   257,     0,     0,
     258,   259,   260,   261,   262,   682,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   683,   684,   685,   285,   286,   287,
       0,     0,   289,   290,   686,   292,     0,     0,   294,   687,
     296,   297,   298,     0,   299,   300,     0,     0,   301,   302,
     303,     0,     0,   304,     0,   688,   307,   689,     0,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,     0,
     320,   321,     0,   323,   324,     0,   326,   327,   328,     0,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   690,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,     0,   355,   356,
     691,   358,   359,   360,   692,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,     0,   373,   374,   375,
     376,   377,     0,   378,   693,   380,   381,   382,   694,   384,
     385,   695,   387,     0,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   696,   400,     0,   402,     0,
     403,   404,     0,   405,   697,   407,   408,   409,   410,   411,
       0,   698,   699,     0,     0,   414,   415,     0,   417,     0,
       0,   419,   420,   700,   422,   423,   424,   425,   426,     0,
       0,   427,   428,   429,   430,   431,     0,     0,   432,   433,
     434,   435,   436,     0,   701,     0,   439,   702,   441,   442,
     443,   444,     0,     0,   445,     0,     0,   446,   447,   448,
     449,   450,   451,   652,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   463,   464,   465,   466,     0,    92,
      93,    94,    95,    96,    97,    98,    99,     0,   100,   101,
     102,     0,     0,     0,     0,     0,     0,     0,   103,   104,
       0,   105,   106,   107,   653,   109,   110,   111,     0,   654,
     655,   656,   657,     0,   117,   118,   119,   120,   121,   122,
       0,     0,   123,   124,   658,   659,   127,     0,   128,   129,
     130,   131,     0,     0,   660,     0,   134,   135,   136,   137,
     138,   661,   140,   141,   142,     0,   143,   144,   145,   146,
     147,   148,     0,   662,   150,   151,   152,     0,     0,     0,
     663,     0,     0,     0,   154,   155,   156,   157,   158,   159,
     160,   664,   665,   163,     0,   164,     0,   165,   166,   167,
     168,   169,   170,     0,   171,   172,   173,   174,   175,     0,
       0,   176,   177,   666,   179,   180,     0,   181,   182,   183,
       0,   184,   185,   186,     0,   187,   188,   189,   190,     0,
     192,   193,   194,   195,     0,     0,   197,     0,   198,   199,
     667,   201,     0,   202,     0,   203,   668,     0,   669,   206,
     207,   208,   670,   210,     0,   211,     0,     0,   213,     0,
     214,   215,   216,   217,   218,   219,   672,   221,   222,   223,
     224,     0,   225,   226,   227,   228,   229,   230,     0,   231,
     673,     0,   234,   235,   236,   237,   674,   675,     0,   676,
       0,   241,   677,   678,   244,   679,   246,   247,   248,   249,
     250,     0,     0,   251,   680,   253,   681,     0,   255,   256,
     257,     0,     0,   258,   259,   260,   261,   262,   682,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   683,   684,   685,
     285,   286,   287,     0,     0,   289,   290,   686,   292,     0,
       0,   294,   687,   296,   297,   298,     0,   299,   300,     0,
       0,   301,   302,   303,     0,     0,   304,     0,   688,   307,
     689,     0,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,     0,   320,   321,     0,   323,   324,     0,   326,
     327,   328,     0,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   690,   339,   340,   341,   342,     0,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
       0,   355,   356,   691,   358,   359,   360,   692,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,     0,
     373,   374,   375,   376,   377,     0,   378,   693,   380,   381,
     382,   694,   384,   385,   695,   387,     0,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   696,   400,
       0,   402,     0,   403,   404,     0,   405,   697,   407,   408,
     409,   410,   411,     0,   698,   699,     0,     0,   414,   415,
       0,   417,     0,     0,   419,   420,   700,   422,   423,   424,
     425,   426,     0,     0,   427,   428,   429,   430,   431,     0,
       0,   432,   433,   434,   435,   436,     0,   701,     0,   439,
     702,   441,   442,   443,   444,     0,     0,   445,     0,     0,
     446,   447,   448,   449,   450,   451,   492,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   463,   464,   465,
     466,     0,    92,    93,    94,    95,    96,    97,    98,    99,
       0,   100,   101,   102,     0,     0,     0,     0,     0,     0,
       0,   103,   104,     0,   105,   106,   107,     0,   109,   110,
     111,   112,   113,     0,   115,   116,     0,   117,   118,   119,
     120,   121,   122,     0,     0,   123,   124,   125,   126,   127,
       0,   128,   129,   130,   131,   132,     0,     0,     0,   134,
     135,   136,   137,   138,     0,   140,   141,   142,     0,   143,
     144,   145,   146,   147,   148,     0,     0,   150,   151,   152,
       0,     0,     0,     0,     0,     0,     0,   154,   155,   156,
     157,   158,   159,   160,   161,   162,   163,     0,   164,     0,
     165,   166,   167,   168,   169,   170,     0,   171,   172,   173,
     174,   175,     0,     0,   176,   177,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,     0,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,     0,   197,
       0,   198,   199,   200,   201,     0,   202,     0,   203,     0,
       0,     0,   206,   207,   208,     0,   210,     0,   211,     0,
     212,   213,     0,   214,   215,   216,   217,   218,   219,     0,
     221,   222,   223,   224,     0,   225,   226,   227,   228,   229,
     230,     0,   231,     0,   233,   234,   235,   236,   237,   238,
     239,     0,   240,     0,   241,     0,     0,   244,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,   253,     0,
       0,   255,   256,   257,     0,     0,   258,   259,   260,   261,
     262,   494,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,     0,   284,   285,   286,   287,   288,     0,   289,   290,
       0,   292,     0,   293,   294,   295,   296,   297,   298,     0,
     299,   300,     0,     0,   301,   302,   303,     0,     0,   304,
     305,     0,   307,     0,   309,   310,   311,   312,   313,   314,
     315,     0,   317,   318,   319,     0,   320,   321,   322,   323,
     324,   325,   326,   327,   328,     0,   329,   330,   331,   332,
     333,   334,   335,     0,   337,   338,   339,   340,   341,   342,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,     0,   355,   356,     0,   358,   359,   360,
     361,     0,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,     0,   373,   374,   375,   376,   377,     0,   378,
     379,   380,   381,   382,     0,   384,   385,   386,   387,     0,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   496,   400,   401,   402,     0,   403,   404,     0,   405,
       0,   407,   408,   409,   410,   411,     0,   412,   413,     0,
       0,   414,   415,   416,   417,   418,     0,   419,   420,   421,
     422,   423,   424,   425,   426,     0,     0,   427,   428,   429,
     430,   431,     0,     0,   432,   433,   434,   435,   436,   437,
     438,     0,   439,     0,   441,   442,   443,   444,     0,     0,
     445,     0,     0,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,  2363,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      92,    93,    94,    95,    96,    97,    98,    99,     0,   100,
     101,   102,     0,     0,     0,     0,     0,     0,     0,   103,
     104,     0,   105,   106,   107,  2364,   109,   110,   111,     0,
     654,  2365,   656,   657,     0,   117,   118,   119,   120,   121,
     122,     0,     0,   123,   124,   658,   659,   127,     0,   128,
     129,   130,   131,     0,     0,  2366,     0,   134,   135,   136,
     137,   138,  2367,   140,   141,   142,     0,   143,   144,   145,
     146,   147,   148,     0,  2368,   150,   151,   152,     0,     0,
       0,  2369,     0,     0,     0,   154,   155,   156,   157,   158,
     159,   160,   664,   665,   163,     0,   164,     0,   165,   166,
     167,   168,   169,   170,     0,   171,   172,   173,   174,   175,
       0,     0,   176,   177,   666,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,     0,   187,   188,   189,   190,
       0,   192,   193,   194,   195,     0,     0,   197,     0,   198,
     199,   667,   201,     0,   202,     0,   203,  2370,     0,  2371,
     206,   207,   208,  2372,   210,     0,   211,     0,     0,   213,
       0,   214,   215,   216,   217,   218,   219,  2373,   221,   222,
     223,   224,     0,   225,   226,   227,   228,   229,   230,     0,
     231,  2374,     0,   234,   235,   236,   237,   674,   675,     0,
     676,     0,   241,  2375,  2376,   244,  2377,   246,   247,   248,
     249,   250,     0,     0,   251,  2378,   253,  2379,     0,   255,
     256,   257,     0,     0,   258,   259,   260,   261,   262,  2569,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   683,  2381,
     685,   285,   286,   287,     0,     0,   289,   290,  2383,   292,
       0,     0,   294,   687,   296,   297,   298,     0,   299,   300,
       0,     0,   301,   302,   303,     0,     0,   304,     0,  2385,
     307,  2386,     0,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,     0,   320,   321,     0,   323,   324,     0,
     326,   327,   328,     0,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   690,   339,   340,   341,   342,     0,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,     0,   355,   356,  2387,   358,   359,   360,     0,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
       0,   373,   374,   375,   376,   377,     0,   378,     0,   380,
     381,   382,  2389,   384,   385,   695,   387,     0,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,  2570,
     400,     0,   402,     0,   403,   404,     0,   405,  2391,   407,
     408,   409,   410,   411,     0,   698,   699,     0,     0,   414,
     415,     0,   417,     0,     0,   419,   420,  2392,   422,   423,
     424,   425,   426,     0,     0,   427,   428,   429,   430,   431,
       0,     0,   432,   433,   434,   435,   436,     0,   701,     0,
     439,  2393,   441,   442,   443,   444,     0,     0,   445,     0,
       0,   446,   447,   448,   449,   450,   451,   652,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   463,   464,
     465,   466,     0,    92,    93,    94,    95,    96,    97,    98,
      99,     0,   100,   101,   102,     0,     0,     0,     0,     0,
       0,     0,   103,   104,     0,   105,   106,   107,   653,   109,
     110,   111,     0,   654,   655,   656,   657,     0,   117,   118,
     119,   120,   121,   122,     0,     0,   123,   124,   658,   659,
     127,     0,   128,   129,   130,   131,     0,     0,   660,     0,
     134,   135,   136,   137,   138,   661,   140,   141,   142,     0,
     143,   144,   145,   146,   147,   148,     0,   662,   150,   151,
     152,     0,     0,     0,   663,     0,     0,     0,   154,   155,
     156,   157,   158,   159,   160,   664,   665,   163,     0,   164,
       0,   165,   166,   167,   168,   169,   170,     0,   171,   172,
     173,   174,   175,     0,     0,   176,   177,   666,   179,   180,
       0,   181,   182,   183,     0,   184,   185,   186,     0,   187,
     188,   189,   190,     0,   192,   193,   194,   195,     0,     0,
     197,     0,   198,   199,   667,   201,     0,   202,     0,   203,
     668,     0,   669,   206,   207,   208,   670,   210,     0,   211,
       0,     0,   213,     0,   214,   215,   216,   217,   218,   219,
     672,   221,   222,   223,   224,     0,   225,   226,   227,   228,
     229,   230,     0,   231,   673,     0,   234,   235,   236,   237,
     674,   675,     0,   676,     0,   241,   677,   678,   244,   679,
     246,   247,   248,   249,   250,     0,     0,   251,   680,   253,
     681,     0,   255,   256,   257,     0,     0,   258,   259,   260,
     261,   262,     0,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   683,   684,   685,   285,   286,   287,     0,     0,   289,
     290,   686,   292,     0,     0,   294,   687,   296,   297,   298,
       0,   299,   300,     0,     0,   301,   302,   303,     0,     0,
     304,     0,   688,   307,   689,     0,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,     0,   320,   321,     0,
     323,   324,     0,   326,   327,   328,     0,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   690,   339,   340,   341,
     342,     0,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,     0,   355,   356,   691,   358,   359,
     360,     0,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,     0,   373,   374,   375,   376,   377,     0,
     378,     0,   380,   381,   382,   694,   384,   385,   695,   387,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,     0,   400,     0,   402,     0,   403,   404,     0,
     405,   697,   407,   408,   409,   410,   411,     0,   698,   699,
       0,     0,   414,   415,     0,   417,     0,     0,   419,   420,
     700,   422,   423,   424,   425,   426,     0,     0,   427,   428,
     429,   430,   431,     0,     0,   432,   433,   434,   435,   436,
       0,   701,     0,   439,   702,   441,   442,   443,   444,     0,
       0,   445,     0,     0,   446,   447,   448,   449,   450,   451,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   463,   464,   465,   466
};

static const yytype_int16 yycheck[] =
{
       6,   613,   789,   628,   529,     0,     6,   486,   523,   599,
      58,   556,   693,    35,   579,   985,   574,   983,     6,    20,
     866,   958,     0,     0,   699,   789,  1127,     0,     0,  1158,
      16,  1788,  1719,  1127,    29,  1127,  1261,  1127,   868,  1214,
     527,   622,   954,   522,    16,    30,  1794,  2123,  1796,   960,
    1613,  1614,    60,   883,   620,  1618,  2148,   963,  2075,  1024,
    2123,  1163,  1289,  1290,  2147,   895,   528,  1675,   529,     0,
     613,  1739,   615,    60,   617,    34,   796,   988,  1242,  2159,
    1785,   658,   659,    78,  2166,     5,  1986,     5,     0,    11,
       5,   722,     5,    50,   725,  1658,  1659,     0,    13,    14,
      13,    14,     9,    88,  2033,    11,     5,     5,   685,  2039,
      31,    32,  1342,     5,     5,    13,    14,     5,  1388,     5,
     534,    13,    14,     9,  1390,    13,    14,    27,  1128,    13,
      14,    58,    73,   596,    34,    41,  2434,    67,     5,   903,
    1715,     5,     9,     5,   167,     5,   633,     5,     5,     5,
       0,     5,  1857,     5,     5,  1730,     5,    40,  2431,   168,
     136,   114,   596,     5,   729,     4,    16,    73,   116,   943,
       9,    92,    40,    11,  2505,  2064,   210,     4,   853,    29,
      92,   106,     9,  1256,    15,    35,    27,  2417,     8,    92,
      75,    11,  2573,    34,  1256,     3,    16,    17,    18,    58,
      85,    11,   167,    41,   167,   277,  2604,     9,   972,    82,
      60,   975,   976,    93,    58,  2402,   520,  1922,  1923,    67,
    2038,  1974,   168,    31,    32,    11,   279,   285,    78,   285,
     119,    41,  2350,   301,   164,    73,  2696,  2659,   815,   816,
     236,   248,   249,   347,   325,    27,    11,   157,    27,   665,
      15,   301,   162,   126,   144,    34,  2094,    22,  2528,     3,
       4,     5,   839,    73,   789,     9,   114,    27,    33,    34,
     795,   687,    11,    37,    75,  2761,   996,   159,    59,  2549,
     348,   121,   159,  1003,    85,   119,    67,   116,   168,   430,
     971,   265,  2590,    11,   338,   106,   359,   430,   119,   864,
     134,   117,   718,    58,   157,   114,  2845,    23,   446,    75,
    2641,   869,  2388,    29,   395,   204,   114,   227,   208,    85,
     200,    86,   366,   171,   449,   161,    13,    14,  2788,   910,
     792,   146,   395,  2171,  2426,   215,  2093,  1945,   896,   292,
     107,    30,  2272,   220,   224,  2428,   487,   129,   473,   356,
     357,   297,  2281,   491,   487,    73,  2285,   107,   166,   123,
     168,   442,    78,   105,   922,    54,   276,   279,  2907,   129,
     114,   187,    68,   436,   227,  2861,   279,   192,   258,   261,
     905,   906,   312,   487,  2571,  2090,   184,  2092,   953,  1947,
    1953,  1954,  1955,  1956,  2816,   285,  1959,  1960,  1961,  1962,
    1963,  1964,  1965,  1966,  1967,  1968,   359,    23,  2483,  2679,
     925,   827,   339,    29,   482,   487,   264,  1975,  1138,  2879,
      58,   269,  2695,   296,   487,  2543,   372,   843,   340,  2318,
     426,     5,   482,   491,   487,   491,   520,   340,   359,  1029,
     269,   406,   395,   406,  2519,  2843,  2827,  2010,  2011,   230,
    1675,   262,  2205,  2271,   428,  1528,  2031,   491,  2033,   290,
     269,   281,  2692,   343,   312,   209,   264,  1529,   491,   445,
     395,   307,  2803,  1410,   395,   162,   376,   311,   487,   327,
     339,   476,  1752,   436,   432,  2190,   230,  1753,   951,  1263,
    1490,   487,  2790,   423,  1721,   339,   449,  2573,   476,   476,
     242,  1466,  2582,   476,   476,   919,  1256,   529,   250,   392,
    2573,  1741,  1137,   476,   520,   436,  2789,   951,   134,   440,
     473,   406,  1747,   529,   392,  1495,   489,   400,   449,  2604,
     487,   451,   422,   451,   487,   376,   537,   449,   539,   428,
     439,   383,   384,   529,   485,   487,   449,   129,   489,   555,
     556,   599,   473,   473,  2484,   473,   528,  1256,   559,  2459,
     568,   483,  1128,  2492,   491,  1729,   487,   487,  2497,   487,
    2327,  2500,   487,   579,   487,   423,   488,   483,   490,   486,
     173,   568,  1159,  1160,   339,   488,  1151,   490,   487,   487,
     430,   577,  2340,   588,   485,   487,   487,   376,   489,   487,
    1565,   487,  2694,   487,  1378,   406,   591,   428,   440,   693,
     588,   588,   618,   619,   620,   588,   588,  1337,  2700,  2699,
     487,   580,   449,   487,   262,   487,   476,   487,   157,   487,
     487,   487,   440,   487,   194,   487,   487,   230,   487,   478,
     479,     0,   480,   481,   482,   483,   473,   491,  2316,   116,
    2725,   478,   479,   320,   474,   475,   476,   588,   478,   479,
     480,   481,   482,   483,   129,  1246,  1232,   283,   478,   479,
     480,   481,   482,   483,   491,  1439,   478,   479,   528,   529,
    1245,   348,  1247,  2758,  1859,  1449,  1251,   693,  1452,   394,
     155,  1216,   274,  1208,   480,   481,   482,   483,   227,  1264,
    1265,   339,  1267,  2795,  1285,  1286,  2281,  2636,   335,    92,
    2285,   216,  2320,   797,  2419,   129,   268,   333,   568,  1277,
    1945,   337,    11,   729,   429,    23,  1205,  1206,   366,   490,
     495,   198,  1298,  1212,   478,   479,   491,   194,   588,   478,
     479,   480,   481,   482,   483,   451,   520,   276,  1329,   408,
     366,  2827,    41,  1215,  2837,  1216,   157,   262,  1339,   524,
    1341,   162,   476,  1550,  2827,   476,  1993,   473,  2843,  1710,
    1711,   243,     4,  2530,  1340,   489,   487,     9,    27,  1529,
    1530,  1883,   117,   789,    73,   487,  1550,  1889,   789,   795,
     796,   797,   352,   452,   795,   262,  1642,   264,   236,   264,
     360,   216,   451,    75,   269,   148,   399,   813,   401,   274,
    1640,  1723,   411,    85,  2906,   580,   321,   433,   442,   903,
     792,   373,  1301,  1435,   473,  2820,   227,  2822,   355,    78,
    1529,  1530,  1531,   426,   840,   395,   134,    86,   487,  1613,
    1614,   236,  1812,   865,  1618,  2862,  2863,   262,   488,    48,
     264,   491,   187,  1157,   860,   861,   862,    23,   864,   865,
     274,  1427,     4,    29,   369,  1408,   115,     9,  1172,   870,
    1835,    36,  1462,  1463,  1464,   276,   487,  2006,   879,   482,
    1511,   887,   442,   264,  1658,  1659,   489,   971,   269,  2452,
      55,   892,  1435,  2910,   491,   487,   493,  2892,  2123,   905,
     906,  1532,   903,  1534,   905,   906,  1537,  2664,  2483,  1820,
       4,  1454,   470,  1743,   352,     9,  1459,  2492,   399,   693,
     401,  2669,  2497,   428,  1490,  2500,   214,   129,   936,   937,
       8,   939,   938,    11,   482,   184,   942,   943,   319,   451,
     105,   489,   792,  1508,  2519,   930,   195,   953,   413,   936,
     937,     4,   939,   155,   369,   488,     9,   352,   491,   424,
     485,   473,  1868,    41,   489,   971,  1445,  1873,   134,   488,
      48,  1450,   491,   172,   489,   487,   359,  1555,  2541,   829,
     279,  1559,   485,  1561,   236,   283,   489,   186,   426,  1293,
     996,   488,   191,   148,   491,    73,  1483,  1003,   491,   325,
     168,     8,   987,   485,    11,   487,   325,   489,  2183,    16,
      17,    18,   395,   428,   470,   865,   359,  1627,  1024,  1629,
    1630,   557,   558,   797,   560,  1550,   480,   226,   193,  2604,
     166,   426,   200,   236,   360,   399,   487,   401,  1563,   337,
     338,   360,   449,   488,   451,  2608,   491,   215,  2149,   487,
     173,   488,   395,   436,   491,  2149,   224,  2149,   399,  2149,
     401,  2636,  1627,  1628,  1629,  1630,   449,   269,   366,   395,
    2757,   194,   274,  1157,  1158,   488,   395,   242,   491,    13,
      14,  2022,  2023,  2024,  2025,   250,   936,   937,  1172,   939,
     473,   488,   487,   436,   172,  2320,   488,   262,  1663,   491,
     352,   593,     8,   595,   487,    11,   449,   230,   186,   236,
      16,    17,    18,   191,   488,  1419,   442,   283,    23,  2248,
    1635,   167,  1128,   442,    29,   210,  1913,  1717,   293,  2286,
     473,  2288,  1138,   382,  2104,    41,   385,  2103,   488,  2896,
     488,   491,    48,   491,   487,  1151,    64,    65,   226,   352,
    2725,  1157,  1158,  2290,  2091,   488,  2293,  2844,   491,   924,
    1791,   284,  1793,   236,    54,   488,  1172,    73,   491,    13,
      14,   337,   371,   338,   426,   343,  2142,  2864,   487,  1953,
    1954,  1955,  1956,  2758,   191,  1959,  1960,  1961,  1962,  1963,
    1964,  1965,  1966,  1967,  1968,   360,  2102,   971,  2104,   399,
     366,   401,   470,   281,   359,   212,    13,    14,   214,  1293,
    1216,   413,  1887,  1888,   520,   380,   149,   488,   488,  1523,
     491,   491,   424,   426,   333,   352,  1232,  1852,   149,   134,
    1216,  2918,  2062,    13,    14,   487,  2010,  2011,   149,  1245,
     395,  1247,   149,  1215,  1250,  1251,   488,  1242,   488,   491,
     488,   491,   488,   491,  1260,  1256,  1262,  1263,  1264,  1265,
    1266,  1267,  1268,  1567,  1242,  1242,   172,   433,  2843,  1242,
    1242,   489,   488,   487,   281,   491,   399,   264,   401,   352,
     186,   436,  1288,   488,   487,   191,   491,  1293,  1294,  1295,
    1296,  1297,  1298,   371,   449,   488,  1302,  1303,   491,   426,
     423,  1307,    36,   426,   442,  1311,   212,   213,  1314,  1315,
    1316,  1317,  1318,  1319,  1320,  1321,  1322,   487,   473,  1325,
     226,    13,    14,   488,  1330,   488,  2455,  1333,   491,  1335,
      81,  1337,   487,     5,  1340,  1419,     8,   488,   488,   439,
     491,   491,    14,   453,   488,  1911,  1347,   491,  2573,    13,
      14,   308,    24,   426,  1360,   292,    28,   487,   264,  2123,
     487,   267,   149,   488,   488,  1215,   491,   491,    13,    14,
    1365,  1357,  1378,   488,   488,   281,   491,   491,   283,    13,
      14,  1387,  1388,  1157,  1158,   487,  2356,   693,  1913,   487,
      23,  2328,  1242,   471,    13,    14,    29,   487,  1172,    35,
     478,   479,   480,   481,   482,   483,   488,   488,  1989,   491,
     491,   182,   183,  1419,   487,   359,   487,  1982,   149,  1425,
     488,  1427,   359,   491,    13,    14,   488,  1906,   333,   491,
     488,  2277,   337,   491,   488,    13,    14,   491,   488,  1523,
     488,   491,   149,   491,  1209,  2291,  1211,   488,   149,   488,
     491,   395,   491,   488,  1304,   279,   491,   395,   395,   488,
    1466,   366,   491,  1469,  1470,   371,  1472,   474,   475,   476,
     487,   478,   479,   480,   481,   482,   483,   248,   249,   488,
    2609,    23,   491,  1567,  1490,  2043,   488,    29,    36,   491,
    2071,   797,   436,   225,    23,   488,   144,  1503,   491,   436,
      29,   134,  1508,   488,  1499,   449,   491,   488,   488,   157,
     491,   491,   449,   487,   162,  1365,    23,  1523,     6,  1293,
     485,   488,    29,    11,   491,   347,   348,    15,   433,   473,
      13,    14,     5,    21,    22,    23,   473,   488,    26,     5,
     491,    29,    30,   487,  1550,    33,    34,   487,  2138,  1550,
     487,  2182,   488,  1554,   162,   491,  2122,  1563,  2124,  1565,
     208,  1567,  1563,  1867,     5,   471,  1572,   487,   474,   475,
     476,  1577,   478,   479,   480,   481,   482,   483,   487,   227,
      13,    14,     5,  2347,   487,   356,   357,    13,    14,   487,
      78,   487,   134,  1615,   487,    93,   487,    85,    86,    87,
      88,    89,  2827,    13,    14,   134,   487,  1613,  1614,  1615,
      13,    14,  1618,  2579,     8,    13,    14,    11,    13,    14,
     487,  1627,  1628,  1629,  1630,    13,    14,   134,   276,   487,
    1934,  1637,    13,    14,   487,  1641,     5,   285,  1644,    13,
      14,  1663,    13,    14,   487,  1419,  1411,    41,  1952,  1499,
     283,     5,  1658,  1659,    48,   487,  1421,  1663,  1423,  2446,
     487,  1426,    13,    14,   487,   971,   487,  1432,   145,  1434,
     168,  1677,     9,  1977,  1680,   450,  1682,    15,  2452,    73,
    1984,  1446,   347,   348,   252,   253,  1451,   356,   357,   210,
    1455,  1456,  1457,  1458,   491,  1460,  1461,  1703,   347,   348,
     333,    36,   200,    96,   337,   347,   348,  2388,   366,  1715,
     905,   906,  1734,   162,   276,  1715,  2297,   215,   162,   274,
     225,   487,   406,   487,  1730,    85,   224,  1715,  2359,  2360,
    1730,  2312,   491,   366,  1729,    85,   406,    87,  1744,    89,
      54,   283,  1730,    54,   406,   255,   406,   488,   142,  1523,
     496,  1729,  1729,  1759,   283,   406,  1729,  1729,   449,   149,
     258,    92,  2307,   489,   141,  1615,   487,  2541,   264,   264,
      36,  1777,    36,   487,   422,     9,   283,    35,   172,   404,
     404,   279,   485,  1867,   406,   485,   406,   491,  1794,  1795,
    1796,   333,   186,  1567,   406,   337,   406,   191,   445,  1800,
     433,   487,    11,   335,   333,   486,   491,   496,   337,  2573,
     404,   491,   487,  1663,   269,   406,   487,   176,   158,  2123,
     167,   488,    36,   430,   366,   208,   333,   216,   487,  1835,
     337,  1681,   226,   369,  2608,   491,   491,   366,   280,   264,
     216,   487,  1843,   216,   488,   343,   285,  1697,   317,   277,
    1934,  1157,  1158,   149,   442,  1856,   487,   487,   149,   366,
     264,  1867,   449,   279,   470,  1715,  1172,   488,  1952,   485,
     470,   279,   264,   488,   488,  2179,    36,   488,    36,  1729,
    1730,   406,   486,   488,  1734,   488,   488,   281,   167,   488,
     488,   433,   488,  1977,   489,   488,   488,   470,   488,   167,
    1984,   446,   488,   520,   433,  1911,   488,  1913,  2878,   289,
     487,   487,  1913,   487,  1909,   487,   446,  1918,   436,  1920,
     476,  2446,  2006,  1924,  1925,  1931,   433,   279,  1934,   472,
     491,   280,   430,   235,  1940,   280,   280,  1943,   428,   406,
    1946,   264,   149,   487,   194,   149,  1952,  1953,  1954,  1955,
    1956,   283,   149,  1959,  1960,  1961,  1962,  1963,  1964,  1965,
    1966,  1967,  1968,   406,  1986,   488,  1972,  1973,   406,   406,
    2018,  1977,   406,   488,   488,   486,  1982,   371,  1984,   487,
    1986,   279,   488,   277,   449,    36,   149,  1293,  1994,   477,
     491,  1997,   486,  1999,  2016,   483,   149,   486,   486,   269,
    2006,  2007,   490,   140,  2010,  2011,   167,   495,    50,  2015,
    2016,  2033,    11,   162,   488,   167,   488,   488,   488,   487,
     395,   167,   446,   473,   488,  2031,   176,  2033,  2618,   491,
     488,  2031,   488,  2033,   522,   523,   524,   340,  2044,  2123,
      83,   487,   280,  2031,   435,  2033,   149,   487,  2054,   171,
     417,   487,    94,   488,  2358,  2680,   487,    36,    79,  1909,
    2539,   491,   430,  2827,  2070,   486,   488,   555,   556,   557,
     558,   491,   560,   167,   487,   487,   693,   471,   120,   488,
     397,   488,   488,   571,   478,   479,   480,   481,   482,   483,
     215,   488,   580,  1867,   288,  2179,   138,   215,   286,  2665,
     142,   487,   487,   591,    54,   179,  1871,   449,  2623,   196,
     476,   489,  2118,  1419,   185,   603,  2122,  2123,  2124,   489,
      36,   163,  2123,   476,   166,    67,  2641,   477,   269,   269,
     406,    73,   489,   489,   489,   406,  1986,   264,   180,  2764,
     490,   489,   488,    85,  2145,   106,   489,   279,   489,    36,
     489,   639,   640,   641,   167,   489,   489,  2722,   487,   489,
    1934,   489,   489,   489,  2248,   489,  2016,     3,   489,     5,
     489,   489,   114,  2179,   116,  2170,   489,   489,  1952,   489,
     797,  2031,   489,  2033,   489,   489,   449,   298,   489,   489,
    2196,   215,   489,   488,   487,   487,   448,   487,   487,    85,
     130,   488,   487,  1977,   327,   487,  2685,   216,   114,    36,
    1984,   149,    73,   121,   149,    36,   488,  1523,   348,   348,
    2832,   571,    54,  2738,    36,   487,   487,   269,   487,   171,
     430,   491,  2006,   435,   520,   277,  2242,  2243,    73,    36,
     184,  2247,  2248,   430,   417,    67,  2252,   282,    67,  2255,
    2256,   487,   144,   603,  2260,    36,   198,   350,   108,   109,
    2826,  1567,   491,   476,   366,   157,   269,   184,   240,  2573,
     162,   487,   108,   109,  2358,  2281,    36,   319,   417,  2285,
    2759,  2281,   487,   347,   282,  2285,   282,   488,   487,   639,
     640,   641,   488,  2281,   487,   262,   279,  2285,     9,   196,
    2301,  2307,   334,  2304,  2388,   279,   279,    33,   488,   487,
     119,   428,     9,   801,  2309,  2310,   208,    22,   488,   588,
    2170,  2086,   264,  2118,  2515,  2105,  1433,   269,  1789,  2311,
    2068,  2758,   182,   183,  2340,   227,  2640,  2823,  2352,  2643,
    1263,  2155,  2899,  2349,  2829,  2110,   182,   183,  2672,  2123,
    2877,  2865,  2358,  2592,   971,  1783,  1795,   958,  2826,  1845,
    2125,  2126,  2127,  2128,  2129,  2130,  2131,  2132,  2133,  2134,
     312,  2455,  2160,  2875,  2122,  1780,  2824,   520,   866,  1205,
    1157,  1849,  2388,  1911,   276,   327,  2446,  2145,   897,   924,
    1744,  1404,   946,   285,   244,   245,   246,   247,   248,   249,
    2735,  2652,   252,   253,   945,  2179,  2814,   693,   244,   245,
     246,   247,   248,   249,  1759,  1378,   252,   253,  2048,   907,
    2747,  1403,  2303,  1730,  2425,  2033,   948,  2272,  2637,  2031,
    2725,  2281,  2287,  2724,  2429,  2285,   924,   925,  2743,  2742,
    2446,  1256,   930,   931,   932,  2446,  2452,  1256,  1256,  2455,
    1256,  2812,  2511,  2459,  2813,  1378,  2799,  1331,  1642,  2309,
    2310,  2467,  2468,  1747,  1247,  2471,  1681,  1573,  1472,   957,
     958,  1678,  1335,  1718,  2248,  2047,  1853,  2483,  1216,  2717,
    1563,   423,   970,  2483,  1357,   930,  2492,  1358,  2069,  2573,
      -1,  2497,  2492,    -1,  2500,  2483,    -1,  2497,    -1,   987,
    2500,  2507,  2508,   991,  2492,    -1,   356,   357,    -1,  2497,
      -1,   797,  2500,  2519,    -1,  2521,    -1,    -1,    -1,  2519,
     356,   357,    -1,  2827,    -1,  2609,    -1,    -1,    -1,    -1,
     422,  2519,    -1,    -1,    -1,  2541,    -1,    -1,    -1,    -1,
    1157,  1158,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     693,    -1,    -1,    -1,    -1,  1172,  2640,   907,    -1,  2643,
      -1,  1867,    -1,    -1,    -1,    -1,    -1,  2573,    -1,    -1,
      -1,    -1,  2573,   520,    -1,    -1,    -1,    -1,    -1,  2429,
      -1,   931,    -1,    -1,  2358,    -1,    -1,    -1,  2583,    -1,
      -1,    -1,    -1,   485,    -1,    -1,   488,   489,  2604,    -1,
      -1,    -1,  2608,  2609,  2604,    -1,    -1,   957,    -1,    -1,
    2605,    -1,    -1,    -1,  2388,    -1,  2604,   467,   468,    -1,
     970,    -1,  2644,    -1,    -1,    -1,  2632,    -1,  1934,    -1,
    2636,   467,   468,    -1,  2640,  1123,  2636,  2643,  2644,    -1,
      -1,   991,  2492,  1131,    -1,    -1,  1952,  2497,  2636,  2655,
    2500,    -1,    -1,  1141,   797,    -1,    -1,    -1,    -1,  2665,
      -1,    -1,    -1,  2669,  2670,    -1,    -1,    -1,    -1,    -1,
      -1,  1977,    -1,    -1,    -1,    -1,  1293,    -1,  1984,    -1,
      -1,  2455,    -1,    -1,    -1,   971,  1174,    -1,    -1,    -1,
    1613,  1614,  2693,    -1,    -1,  1618,    -1,    -1,    -1,    -1,
    2006,    -1,    -1,  2698,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2722,  1205,  1206,  2725,
    1208,  1209,    -1,  1211,  1212,  2725,  1214,    -1,    -1,    -1,
      -1,     8,    -1,  2583,    11,  1658,  1659,  2725,    -1,    -1,
      -1,  2747,    -1,  2827,    -1,    -1,   693,    -1,    -1,    -1,
      -1,    -1,  2758,    -1,    -1,  2605,    -1,    -1,  2758,  2754,
      -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,
    2758,    48,  2778,  1261,    -1,  2540,    -1,    -1,    -1,    -1,
      -1,  1131,    -1,    -1,  1272,    -1,  2636,    -1,    -1,    -1,
      -1,    -1,  2798,  2799,  2644,    -1,    73,    -1,    -1,  2573,
      -1,    -1,  1419,    -1,    -1,    -1,    -1,    -1,    -1,  2574,
    2575,    -1,    -1,  1301,    -1,    -1,    -1,  2123,    -1,    -1,
    2826,  2827,    -1,    -1,  2589,    -1,  2827,    -1,   971,    -1,
      -1,    -1,    -1,    -1,    -1,  2609,    -1,  2843,    -1,  2845,
      -1,  2836,    36,  2843,    -1,    -1,  1334,  1335,  2698,    -1,
     797,    -1,    -1,    -1,    -1,  2843,    -1,    -1,    -1,    -1,
      -1,    55,    -1,    -1,  1214,   142,  2640,    -1,  1356,  2643,
    1358,  1157,  1158,  2179,    -1,    -1,    -1,    -1,    -1,  1367,
      -1,  1369,    -1,    -1,    -1,    -1,  1172,    -1,    -1,  2654,
      -1,    -1,    -1,    -1,    -1,   172,    -1,    -1,    -1,    -1,
      -1,  2907,    -1,    -1,  2754,    -1,  1523,    -1,    -1,   186,
      -1,   105,   106,  1401,   191,    -1,    -1,    -1,    -1,    -1,
     114,    -1,  1410,  1411,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1421,  1422,  1423,  1424,    -1,  1426,    -1,
      -1,    -1,  2248,    -1,  1432,    -1,  1434,    -1,    -1,   226,
    1567,    -1,    -1,    -1,    -1,    -1,    -1,  1445,  1446,    -1,
      -1,    -1,  1450,  1451,    -1,    -1,    -1,  1455,  1456,  1457,
    1458,    -1,  1460,  1461,    -1,    -1,    -1,   171,    -1,    -1,
      -1,     0,    -1,    -1,  1334,    -1,  2836,    -1,    -1,    -1,
      -1,    -1,  1480,  1481,  1482,    -1,    -1,    -1,    -1,   193,
      -1,     0,    -1,    -1,   281,    -1,  1356,  1293,  1358,  1497,
      -1,    -1,    -1,    -1,  1157,  1158,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   971,    -1,    -1,    -1,    -1,  1172,
    1953,  1954,  1955,  1956,    -1,    -1,  1959,  1960,  1961,  1962,
    1963,  1964,  1965,  1966,  1967,  1968,    -1,    -1,   242,    -1,
      -1,  1401,  2358,  2827,    -1,    -1,   250,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   262,    -1,
     264,    -1,    -1,    92,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2388,    -1,    -1,    -1,    -1,  2010,  2011,    -1,
      -1,    -1,    -1,    92,   371,   108,   109,    -1,    -1,   293,
       8,    -1,    -1,    11,    -1,    -1,    -1,    -1,    16,    17,
      18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,
      -1,    11,    -1,    -1,    -1,   144,    16,    17,    18,    -1,
    1480,  1481,    -1,  1419,    -1,    -1,    -1,    -1,   157,    -1,
      -1,    -1,    -1,   162,   338,   144,    -1,  1635,   167,  2455,
    1293,    -1,    -1,    -1,  1642,    -1,    -1,   176,   157,    -1,
     179,    -1,    -1,   162,    -1,    -1,   360,    -1,   167,   182,
     183,    -1,    -1,    -1,    -1,    -1,    -1,   176,    -1,    -1,
     179,    -1,    -1,    -1,    -1,    -1,   380,  1675,   382,   208,
      -1,   385,    -1,    -1,   471,    -1,    -1,    -1,    -1,    -1,
      -1,   478,   479,   480,   481,   482,   483,    -1,   227,   208,
    1157,  1158,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1708,    -1,    -1,    -1,    -1,  1172,    -1,  1715,   227,    -1,
      -1,   244,   245,   246,   247,   248,   249,  1523,    -1,   252,
     253,    -1,  1730,    -1,    -1,    -1,  1734,    -1,    -1,  1737,
    1867,  1739,    -1,    -1,    -1,    -1,    -1,   276,     8,    -1,
     279,    11,    -1,    -1,    -1,    -1,   285,  2573,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1419,   276,    -1,    -1,
     279,  1567,    -1,    -1,    -1,    -1,   285,    -1,    -1,    -1,
      -1,    41,    -1,   487,    -1,    -1,    -1,  1785,    48,    -1,
      -1,    -1,    -1,  2609,   212,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1934,    -1,    -1,
      -1,   340,   212,    73,    -1,    -1,    -1,    55,    -1,    -1,
      -1,    -1,    -1,    -1,  2640,  1952,    -1,  2643,    -1,    -1,
      -1,   340,    -1,   356,   357,    -1,  1293,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1845,  1708,    -1,
    1977,    -1,  1850,    -1,    -1,    -1,    -1,  1984,    -1,  1857,
    1858,  1859,  1860,   281,    -1,    -1,   395,   105,    -1,    -1,
    1523,    -1,    -1,  1871,    -1,    -1,    -1,    -1,    -1,  2006,
    1878,   281,   142,    -1,    -1,    -1,   395,    -1,    -1,    -1,
       8,    -1,  1890,   422,    -1,    -1,    -1,    -1,    16,    17,
      18,   430,    -1,    -1,    -1,    -1,    -1,    -1,  1906,    -1,
      -1,    -1,   172,   422,  1567,    -1,    -1,   446,    -1,   448,
     449,   430,    -1,   169,  1922,  1923,   186,   173,    -1,    -1,
      -1,   191,    -1,   171,    -1,    -1,    -1,   446,    -1,   448,
     449,    -1,    -1,    -1,   467,   468,    -1,  1945,   194,    -1,
     555,   556,    -1,    -1,    -1,   193,   485,    -1,    -1,   488,
     489,   490,  1419,    -1,   487,    -1,   226,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   485,    -1,    -1,   488,
     489,   490,    -1,    -1,   230,    -1,    -1,    -1,    -1,    -1,
    1850,   237,    -1,    -1,    -1,    -1,  2123,    -1,  1858,  1859,
    1860,    -1,    -1,    -1,   242,    -1,    -1,    -1,    -1,    -1,
      -1,  2827,   250,   618,   619,    -1,    -1,    -1,  1878,  2452,
      -1,   281,  2020,    -1,   262,    -1,    -1,    -1,    -1,    -1,
    2028,  2029,  2030,  2031,    -1,  2033,  2034,    -1,   284,    -1,
    2038,  2039,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2179,    -1,    -1,   293,   474,   475,   476,    -1,
     478,   479,   480,   481,   482,   483,  1523,    -1,    -1,    -1,
    2068,  1867,    36,    -1,   474,   475,   476,    -1,   478,   479,
     480,   481,   482,   483,    -1,    -1,  2084,    -1,  2086,    -1,
      -1,    55,  2090,  2091,  2092,    -1,  2094,    -1,    -1,    -1,
     338,    -1,    -1,    -1,    -1,    -1,   352,    -1,  2541,    -1,
    1567,   371,  2110,    -1,  2112,    -1,    -1,    -1,    -1,    -1,
      -1,  2248,   360,    -1,    -1,    -1,    -1,  2125,  2126,  2127,
    2128,  2129,  2130,  2131,  2132,  2133,  2134,    -1,  1934,    -1,
      -1,   105,   380,    -1,    -1,    -1,    -1,    -1,    -1,  2147,
      -1,    -1,  2150,   399,    -1,   401,  1952,    -1,    -1,    -1,
      -1,     8,  2160,   281,    11,    -1,    -1,    -1,  2028,  2029,
    2030,   417,    -1,  2171,    -1,  2608,     8,   423,    -1,    11,
     426,  1977,    -1,    -1,    -1,  2183,    -1,    -1,  1984,    -1,
      -1,   796,  2190,    -1,    41,    -1,    -1,    -1,    -1,    -1,
      -1,    48,    -1,    -1,    -1,    -1,    -1,    -1,   813,    41,
    2006,   471,    -1,    -1,  1867,    -1,    48,    -1,   478,   479,
     480,   481,   482,   483,  2084,    -1,    73,    -1,    -1,   193,
      -1,  2358,    -1,    -1,    -1,   840,    -1,    -1,    -1,    -1,
    2238,    73,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   860,   861,   862,    -1,    -1,
     865,  2388,    -1,  2261,    -1,    -1,  2264,  2265,  2266,  2267,
      -1,    -1,    -1,  2271,  2272,    -1,  2274,    -1,   242,  2277,
      -1,  1934,   887,  2281,    -1,    -1,   250,  2285,    -1,    -1,
    2150,    -1,    -1,  2291,    -1,   142,    -1,    -1,   262,  1952,
      -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    -1,  2307,
     142,    -1,    -1,  2311,    -1,    -1,    -1,    -1,  2316,    -1,
      -1,    -1,  2320,  2183,  1977,   172,    -1,  2123,  2455,   293,
    2328,  1984,    -1,   938,    41,    -1,    -1,   942,   943,   186,
     172,    48,    -1,    -1,   191,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2006,   186,  2353,   474,   475,   476,   191,
     478,   479,   480,   481,   482,   483,    73,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   338,    -1,    -1,    -1,    -1,   226,
      -1,    -1,    -1,  2179,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   996,    -1,    -1,   226,    -1,   360,    -1,  1003,    -1,
      -1,    -1,    -1,    -1,  2264,  2265,  2266,  2267,    -1,    -1,
    1867,    -1,    -1,    -1,    -1,    -1,   380,    -1,    -1,  1024,
      -1,  2419,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2428,    -1,    -1,    -1,   281,   142,    -1,    -1,    -1,    -1,
      -1,  2439,    -1,    -1,    -1,    -1,  2573,    -1,    -1,   281,
      -1,    -1,  2248,    -1,   789,    -1,    -1,    -1,    -1,    -1,
     795,    -1,    -1,    -1,    -1,   172,     8,    -1,    -1,    11,
    2123,    -1,    -1,    -1,    16,    17,    18,  1934,    -1,   186,
      -1,    -1,  2609,    -1,   191,  2483,  2484,    -1,    -1,  2487,
      -1,    33,  2490,    -1,  2492,  1952,    -1,    -1,    -1,  2497,
      -1,    -1,  2500,    -1,  2502,    -1,    -1,  2505,    -1,    -1,
      -1,    -1,    -1,  2640,    -1,    -1,  2643,    -1,    -1,   226,
    1977,  2519,    -1,    -1,   371,    -1,  2179,  1984,    -1,    -1,
      -1,    -1,    -1,  1138,    -1,    -1,    -1,    -1,    -1,   371,
      -1,  2539,  2540,    -1,   879,    -1,    -1,    -1,    -1,  2006,
    2548,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2358,    -1,    -1,    -1,    -1,    -1,   903,    -1,
     905,   906,    -1,    -1,   281,     8,  2574,  2575,    11,    -1,
      -1,    -1,    -1,    16,    17,    18,    -1,  2585,    -1,    -1,
      -1,  2589,  2388,    -1,    -1,  2248,    -1,    -1,    -1,    -1,
      33,    -1,    -1,  2601,    -1,    -1,  2604,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   471,  2623,    -1,    -1,    -1,    -1,
      -1,   478,   479,   480,   481,   482,   483,   972,  2636,   471,
     975,   976,    -1,  2641,    -1,  1250,   478,   479,   480,   481,
     482,   483,  2650,    -1,    -1,  1260,  2654,  1262,    -1,  2455,
    1265,  1266,  1267,  1268,   371,  2663,  2123,    -1,    -1,    -1,
     212,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1288,    -1,    -1,    -1,  2685,  2548,  1294,
    1295,  1296,  1297,    -1,    -1,    -1,    -1,  1302,  1303,  2697,
    2827,    -1,  1307,    -1,    -1,  2358,  1311,    -1,    -1,  1314,
    1315,  1316,  1317,  1318,  1319,  1320,  1321,  1322,    -1,    -1,
    1325,    -1,  2179,    -1,    -1,  1330,    -1,  2725,  1333,    -1,
    1335,    -1,  1337,    -1,    -1,  2388,  2734,    -1,    -1,   281,
    2738,  2601,    -1,    -1,  2742,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1360,    -1,    -1,    -1,    -1,
    2758,  2759,  2760,  2761,   471,    -1,    -1,    -1,    -1,    -1,
      -1,   478,   479,   480,   481,   482,   483,  2573,    -1,   212,
      -1,    -1,  1387,  1388,     8,    -1,     0,    11,    -1,    -1,
      -1,  2248,    16,    17,    18,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2455,  2663,    -1,  2803,    -1,    -1,    -1,    33,
      -1,    -1,    -1,  2609,  2812,    -1,  2814,    -1,    -1,    -1,
    1155,    -1,    -1,    -1,    -1,  2823,    -1,    -1,    -1,    -1,
      -1,  1166,    -1,  1168,    -1,    -1,    -1,  2697,    -1,  2837,
      -1,    -1,  1177,    -1,  2640,  2843,    -1,  2643,   281,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1194,
      -1,  1466,    -1,  2861,  1469,  1470,    -1,  1472,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    92,    -1,
      -1,    -1,    -1,    -1,    -1,     8,  1221,  1222,    11,    -1,
      -1,    -1,    -1,    16,    17,    18,    -1,    -1,  1503,    -1,
      -1,  2358,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1253,  1254,
    2573,    -1,  1257,  1258,    -1,    -1,    -1,    -1,    -1,    -1,
     144,  2388,   474,   475,   476,    -1,   478,   479,   480,   481,
     482,   483,    -1,   157,    -1,    -1,    -1,    -1,   162,    -1,
      -1,    -1,    -1,   167,    -1,    -1,  2609,    -1,    -1,    -1,
    1565,    -1,   176,    -1,    -1,   179,    -1,  1572,    -1,    -1,
      -1,    -1,  1577,    23,    -1,    -1,    -1,    -1,    -1,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    36,  2640,   212,    -1,
    2643,    -1,    -1,    -1,   208,    -1,    -1,    -1,  2455,    -1,
      -1,    -1,    -1,    -1,    -1,    55,    -1,    -1,    -1,    -1,
    1615,    -1,    -1,   227,   880,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1627,    -1,  1629,  1630,    -1,    -1,    -1,    -1,
      -1,  2827,  1637,    -1,    -1,    -1,  1641,    -1,    -1,  1644,
      -1,   474,   475,   476,    -1,   478,   479,   480,   481,   482,
     483,    -1,  1387,  1388,   920,   105,    -1,   281,    -1,    -1,
      -1,    -1,   276,     0,    -1,   279,    -1,    -1,    -1,    -1,
      -1,   285,  1677,    -1,    -1,  1680,    -1,  1682,    -1,    -1,
      -1,    -1,    19,    -1,   134,    -1,    -1,    -1,    -1,   212,
      -1,    -1,    29,    -1,    31,    32,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1439,    -1,    -1,    -1,    -1,    -1,
      47,    -1,    -1,    -1,  1449,    -1,  2573,  1452,    -1,    56,
      -1,    -1,    -1,    -1,    -1,    -1,   340,    -1,    -1,    -1,
      -1,    68,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1744,
      -1,    -1,    79,   193,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2609,    90,  1759,    92,    -1,    -1,   281,    -1,
      -1,    -1,  1028,    -1,    -1,    -1,    -1,    -1,    -1,  1035,
      -1,    -1,  1777,   110,  2827,    -1,    -1,    -1,    -1,    -1,
      -1,   395,    -1,  2640,    -1,    -1,  2643,   124,    -1,  1524,
    1525,    -1,   242,    -1,    -1,    -1,    -1,   134,    -1,    -1,
     250,    -1,    -1,   140,    -1,    -1,    -1,    -1,   422,    -1,
      -1,   148,   262,   150,   151,  1550,   430,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   163,    -1,  1563,    -1,
    1835,    -1,   446,   283,   448,   449,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   293,    -1,    -1,    -1,    -1,    -1,    -1,
     474,   475,   476,   190,   478,   479,   480,   481,   482,   483,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   485,    -1,    -1,   488,   489,   490,    -1,    -1,    -1,
      -1,    -1,    -1,   333,    -1,    -1,    -1,   337,   338,    -1,
      -1,    -1,   229,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     360,    -1,    -1,    -1,    -1,    -1,   366,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1931,    -1,    -1,    -1,
     380,    -1,    -1,    -1,    -1,  1940,    -1,    -1,  1943,    -1,
      -1,  1946,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   474,   475,   476,    -1,   478,   479,   480,   481,   482,
     483,    -1,    -1,    -1,    -1,    -1,    -1,  1972,  1973,   306,
    2827,    -1,   309,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1986,  1248,   433,    -1,  1720,    -1,    -1,    -1,  1994,
      -1,    -1,  1997,  1259,  1999,    -1,    -1,  1263,    -1,    -1,
     337,    -1,  2007,  1269,  1270,  1271,    -1,    -1,   345,    -1,
    2015,  2016,  1278,    -1,    -1,     8,  1751,  1752,    11,    -1,
      -1,    -1,   359,    16,    17,    18,    -1,    -1,    -1,   366,
      -1,    -1,    -1,   370,    -1,    -1,    -1,    -1,    -1,  2044,
      33,    -1,    -1,   380,    -1,    -1,    -1,    -1,    41,  2054,
      -1,    -1,    -1,    -1,   391,    48,    -1,    -1,   395,    -1,
      -1,    -1,    -1,    -1,    -1,  2070,  1332,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,     3,    -1,    -1,
      73,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    -1,
      16,    17,    18,    -1,   431,    -1,    -1,    -1,    -1,   436,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,  1374,    -1,
      36,    -1,   449,    -1,    -1,    41,    -1,    -1,    -1,    -1,
    1386,     8,    48,    -1,    11,  1391,    -1,    -1,    -1,    16,
      17,    18,    -1,    -1,    -1,    -1,   473,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    73,    -1,  1884,
     487,    -1,    -1,   490,    41,    -1,    -1,    -1,    -1,    -1,
      -1,    48,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   172,
      -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,    -1,
      -1,  2196,    -1,   186,    -1,    -1,    -1,    -1,   191,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   212,
     213,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   226,    -1,    -1,    -1,  2242,  2243,    -1,
      -1,    -1,  2247,    -1,    -1,    -1,   172,  2252,    -1,    -1,
    2255,  2256,    -1,    -1,    -1,  2260,    -1,    -1,    -1,    -1,
     186,    -1,    -1,    -1,    -1,   191,    -1,    -1,    -1,    -1,
      -1,   264,    -1,    -1,   267,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   172,   212,   213,   281,    -1,
      -1,   284,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   186,
     226,    -1,  2307,    -1,   191,    -1,    -1,    -1,    -1,  1575,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   212,   213,    -1,  1594,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   264,   226,
      -1,   267,    -1,    -1,  2349,  1611,    -1,  1613,  1614,    -1,
    1616,    -1,  1618,    -1,    -1,   281,    -1,  1623,   284,    -1,
    1626,    -1,    -1,    -1,    -1,  1631,    -1,    -1,  1634,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   264,   371,  1645,
     267,    -1,    -1,  1649,  1650,  1651,  1652,    -1,  2123,    -1,
      -1,    -1,  1658,  1659,   281,  1661,  1662,   284,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1673,    -1,    -1,
    1676,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1684,  1685,
    1686,  1687,  1688,  1689,  1690,  1691,  1692,  1693,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1701,    -1,    -1,    -1,  1705,
       8,    -1,    -1,    11,    -1,   371,    -1,    -1,    16,    17,
      18,    -1,    -1,    -1,  2459,    -1,    -1,    -1,    -1,    -1,
      -1,  1727,  2467,  2468,    -1,    -1,  2471,    -1,    -1,    -1,
      -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,   471,    -1,
      48,   474,   475,   476,   371,   478,   479,   480,   481,   482,
     483,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   491,    -1,
      -1,    -1,  2507,  2508,    -1,    73,    -1,    -1,    23,    -1,
      -1,    -1,    -1,    -1,    29,    -1,  2521,    -1,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      55,    -1,    -1,    -1,    -1,   471,    -1,    -1,   474,   475,
     476,    -1,   478,   479,   480,   481,   482,   483,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1838,  1839,  1840,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   471,    -1,    -1,   474,   475,   476,
     105,   478,   479,   480,   481,   482,   483,     8,    -1,    -1,
      11,   488,    -1,    -1,   172,    16,    17,    18,    -1,    -1,
    1876,    -1,  2347,    -1,    -1,    -1,    -1,  2352,   186,   134,
      -1,    -1,    33,   191,    -1,    36,    -1,  2632,    -1,    -1,
      41,    -1,    -1,    -1,    -1,    -1,    -1,    48,    -1,  2644,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2655,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   226,  2394,
    2395,    -1,    73,    -1,  1930,  2670,    -1,    -1,    -1,    -1,
    1936,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   193,    -1,
      -1,    -1,    -1,  1949,  1950,  1951,    -1,  1953,  1954,  1955,
    1956,    -1,    -1,  1959,  1960,  1961,  1962,  1963,  1964,  1965,
    1966,  1967,  1968,  1969,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   281,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1987,    -1,    -1,  1990,    -1,  1992,   242,    -1,  1995,
    1996,    -1,    -1,    -1,    -1,   250,    -1,    -1,    -1,    -1,
      -1,    -1,  2747,  2009,  2010,  2011,  2012,   262,  2014,    -1,
      -1,    -1,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   172,    -1,    -1,    -1,    -1,    -1,    -1,   283,    -1,
      -1,    -1,    -1,  2778,    -1,   186,    -1,    -1,   293,    -1,
     191,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2798,  2799,    -1,    -1,    -1,    -1,    -1,
      -1,   212,   213,   371,    -1,    74,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   226,    -1,    -1,   333,    -1,
      89,  2087,   337,   338,    -1,    -1,    -1,  2562,  2563,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2573,     8,
    2845,    -1,    11,    -1,    -1,   360,    -1,    16,    17,    18,
      -1,   366,    -1,   264,    -1,    -1,   267,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,   380,    -1,    -1,    -1,    -1,
     281,    -1,    41,   284,   143,    -1,    -1,    -1,    -1,    48,
      -1,    -1,    -1,   152,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   164,    -1,    -1,    -1,    -1,
     169,    -1,  2907,   471,    73,    -1,   474,   475,   476,    -1,
     478,   479,   480,   481,   482,   483,    -1,    -1,   433,    -1,
      -1,    -1,    -1,    -1,    -1,   194,    -1,    -1,    -1,    -1,
      -1,  2197,    -1,    -1,    -1,  2201,  2202,    -1,  2204,    -1,
      -1,  2207,  2208,  2209,  2210,    -1,    -1,    -1,  2214,  2215,
    2216,  2217,  2218,  2219,  2220,  2221,  2222,  2223,  2224,  2225,
     371,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   237,  2235,
      -1,    -1,   241,     8,    -1,  2241,    11,    -1,  2244,    -1,
    2246,    16,    17,    18,  2250,    -1,    -1,  2253,  2254,    -1,
      -1,  2257,  2258,    -1,    -1,    -1,    -1,    -1,    33,    -1,
      -1,    -1,    -1,   172,    -1,    -1,    41,    -1,    -1,    -1,
      -1,    -1,    -1,    48,    -1,    -1,    -1,   186,    -1,    -1,
      -1,    -1,   191,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2298,    -1,    -1,   304,    -1,    -1,    73,    -1,
    2306,    -1,    -1,   212,   213,    -1,    -1,    -1,    -1,   318,
      -1,    -1,    -1,  2319,    -1,    -1,    -1,   226,    -1,    -1,
     471,    -1,    -1,   474,   475,   476,    -1,   478,   479,   480,
     481,   482,   483,    -1,    -1,    -1,    -1,   488,    -1,    -1,
     349,    -1,    -1,   352,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   360,  2827,    -1,   363,   264,    -1,    -1,   267,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   281,   382,    -1,   284,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   395,    -1,    -1,    -1,
      -1,    -1,    -1,   402,    -1,    -1,    -1,   172,    -1,    -1,
      -1,    -1,   411,    -1,    -1,    -1,    -1,    -1,   417,    -1,
      -1,   186,    -1,    -1,    -1,    -1,   191,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   442,    -1,    -1,    -1,   212,   213,    -1,
      -1,    -1,  2448,    -1,    -1,    -1,  2452,    -1,    -1,    -1,
      -1,   226,    -1,    -1,    -1,  2461,  2462,  2463,    -1,    -1,
    2466,    -1,   371,  2469,  2470,    -1,    -1,    -1,  2474,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   264,
      -1,    -1,   267,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   281,    -1,    -1,   284,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2541,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2559,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   471,    -1,    -1,   474,   475,   476,    -1,   478,
     479,   480,   481,   482,   483,    -1,    -1,    -1,    -1,   488,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   371,    -1,    -1,    -1,
      -1,  2607,  2608,    -1,    -1,    -1,    -1,  2613,  2614,  2615,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2648,  2649,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2661,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2673,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   471,    -1,    -1,   474,
     475,   476,    -1,   478,   479,   480,   481,   482,   483,    -1,
      -1,   486,    -1,  2719,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2737,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2756,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2770,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    -1,    -1,    -1,    -1,
      35,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,  2834,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,  2848,    68,    69,    70,    71,    72,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,   129,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,   166,    -1,   168,   169,   170,   171,   172,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,   200,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,    -1,    -1,   223,   224,
     225,   226,    -1,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,    -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,
      -1,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,    -1,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,    -1,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,    -1,   393,   394,
      -1,   396,   397,   398,   399,   400,   401,   402,    -1,   404,
     405,    -1,    -1,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,    -1,    -1,   424,
     425,   426,   427,   428,   429,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
      -1,    -1,   447,    -1,    -1,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,    -1,    -1,    -1,
      -1,    -1,    -1,   478,   479,   480,    -1,    -1,    -1,    -1,
     485,    -1,   487,   488,    -1,    -1,    -1,   492,    -1,   494,
     495,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,   166,    -1,   168,   169,   170,   171,
     172,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,   200,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,    -1,
      -1,   223,   224,   225,   226,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,    -1,   277,   278,    -1,    -1,   281,
     282,   283,    -1,    -1,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
      -1,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
      -1,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,    -1,   404,   405,    -1,    -1,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
      -1,    -1,   424,   425,   426,   427,   428,   429,    -1,   431,
     432,   433,   434,   435,   436,   437,    -1,   439,   440,   441,
     442,   443,   444,    -1,    -1,   447,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
      -1,   473,    -1,    -1,    -1,    -1,   478,   479,    -1,    -1,
      -1,    -1,    -1,   485,    -1,   487,   488,    -1,    -1,    -1,
     492,    -1,   494,   495,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,   166,    -1,   168,
     169,   170,   171,   172,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,   200,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,    -1,    -1,   223,   224,   225,   226,    -1,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
      -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,    -1,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,    -1,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,    -1,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,    -1,   404,   405,    -1,    -1,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,    -1,    -1,   424,   425,   426,   427,   428,
     429,    -1,   431,   432,   433,   434,   435,   436,   437,    -1,
     439,   440,   441,   442,   443,   444,    -1,    -1,   447,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,    -1,   473,    -1,    -1,    -1,    -1,   478,
     479,    -1,    -1,    -1,    -1,    -1,   485,    -1,   487,    -1,
      -1,    -1,    -1,   492,    -1,   494,   495,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,    -1,   222,   223,   224,   225,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,    -1,   393,   394,    -1,
     396,   397,   398,   399,   400,   401,   402,    -1,   404,   405,
      -1,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,    -1,    -1,   424,   425,
     426,   427,   428,   429,    -1,   431,   432,   433,   434,   435,
     436,   437,    -1,   439,   440,   441,   442,   443,   444,    -1,
      -1,   447,    -1,    -1,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,    -1,    -1,    -1,    -1,
      -1,    -1,   478,   479,    -1,    -1,    -1,    -1,    -1,   485,
      -1,   487,    -1,    -1,    -1,    -1,   492,    -1,   494,   495,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,   166,    -1,   168,   169,   170,   171,   172,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,   200,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,    -1,    -1,
     223,   224,   225,   226,    -1,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,    -1,   277,   278,    -1,    -1,   281,   282,
     283,    -1,    -1,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,    -1,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,    -1,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,    -1,
     393,   394,    -1,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,    -1,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,    -1,
      -1,   424,   425,   426,   427,   428,   429,    -1,   431,   432,
     433,   434,   435,   436,   437,    -1,   439,   440,   441,   442,
     443,   444,    -1,    -1,   447,    -1,    -1,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,    -1,
      -1,    -1,    -1,    -1,    -1,   478,   479,   480,    -1,    -1,
      -1,    -1,   485,    -1,   487,    -1,    -1,    -1,    -1,   492,
      -1,   494,   495,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    -1,    -1,    -1,    -1,    35,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,   166,    -1,   168,   169,
     170,   171,   172,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
     200,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,    -1,    -1,   223,   224,   225,   226,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,    -1,   277,   278,    -1,
      -1,   281,   282,   283,    -1,    -1,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,    -1,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
      -1,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,    -1,   393,   394,    -1,   396,   397,   398,   399,
     400,   401,   402,    -1,   404,   405,    -1,    -1,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,    -1,    -1,   424,   425,   426,   427,   428,   429,
      -1,   431,   432,   433,   434,   435,   436,   437,    -1,   439,
     440,   441,   442,   443,   444,    -1,    -1,   447,    -1,    -1,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,    -1,    -1,    -1,    -1,    -1,    -1,   478,   479,
      -1,    -1,    -1,    -1,    -1,   485,    -1,   487,    -1,    -1,
      -1,    -1,   492,    -1,   494,   495,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,   166,
      -1,   168,   169,   170,   171,   172,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,   200,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,    -1,    -1,   223,   224,   225,   226,
      -1,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,    -1,
     277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,    -1,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,    -1,   393,   394,    -1,   396,
     397,   398,   399,   400,   401,   402,    -1,   404,   405,    -1,
      -1,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,    -1,    -1,   424,   425,   426,
     427,   428,   429,    -1,   431,   432,   433,   434,   435,   436,
     437,    -1,   439,   440,   441,   442,   443,   444,    -1,    -1,
     447,    -1,    -1,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,    -1,    -1,    -1,    -1,    -1,
      -1,   478,   479,    -1,    -1,    -1,    -1,    -1,   485,    -1,
     487,   488,    -1,    -1,    -1,   492,    -1,   494,   495,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,   166,    -1,   168,   169,   170,   171,   172,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,   200,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,    -1,    -1,   223,
     224,   225,   226,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,    -1,    -1,   281,   282,   283,
      -1,    -1,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,    -1,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,    -1,   393,
     394,    -1,   396,   397,   398,   399,   400,   401,   402,    -1,
     404,   405,    -1,    -1,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,    -1,    -1,
     424,   425,   426,   427,   428,   429,    -1,   431,   432,   433,
     434,   435,   436,   437,    -1,   439,   440,   441,   442,   443,
     444,    -1,    -1,   447,    -1,    -1,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,    -1,    -1,
      -1,    -1,    -1,    -1,   478,   479,    -1,    -1,    -1,    -1,
      -1,   485,    -1,   487,   488,    -1,    -1,    -1,   492,    -1,
     494,   495,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,   166,    -1,   168,   169,   170,
     171,   172,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,   200,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
      -1,    -1,   223,   224,   225,   226,    -1,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,    -1,    -1,
     281,   282,   283,    -1,    -1,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,    -1,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,    -1,   393,   394,    -1,   396,   397,   398,   399,   400,
     401,   402,    -1,   404,   405,    -1,    -1,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,    -1,    -1,   424,   425,   426,   427,   428,   429,    -1,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,    -1,    -1,   447,    -1,    -1,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,    -1,    -1,    -1,    -1,    -1,    -1,   478,   479,    -1,
      -1,    -1,    -1,    -1,   485,    -1,   487,    -1,    -1,    -1,
      -1,   492,    -1,   494,   495,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,   172,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,   200,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,    -1,    -1,   223,   224,   225,   226,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,    -1,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,    -1,   393,   394,    -1,   396,   397,
     398,   399,   400,   401,   402,    -1,   404,   405,    -1,    -1,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,    -1,    -1,   424,   425,   426,   427,
     428,   429,    -1,   431,   432,   433,   434,   435,   436,   437,
      -1,   439,   440,   441,   442,   443,   444,    -1,    -1,   447,
      -1,    -1,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,    -1,    -1,    -1,    -1,    -1,    -1,
     478,   479,    -1,    -1,    -1,    -1,    -1,   485,    -1,   487,
      -1,    -1,    -1,    -1,   492,    -1,   494,   495,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      35,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,   166,    -1,   168,   169,   170,   171,   172,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,   200,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,    -1,    -1,   223,   224,
     225,   226,    -1,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,    -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,
      -1,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,    -1,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,    -1,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,    -1,   393,   394,
      -1,   396,   397,   398,   399,   400,   401,   402,    -1,   404,
     405,    -1,    -1,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,    -1,    -1,   424,
     425,   426,   427,   428,   429,    -1,   431,   432,   433,   434,
     435,   436,   437,    -1,   439,   440,   441,   442,   443,   444,
      -1,    -1,   447,    -1,    -1,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,    -1,    -1,    -1,
      -1,    -1,    -1,   478,   479,    -1,    -1,    -1,    -1,    -1,
     485,    -1,   487,    -1,    -1,    -1,    -1,   492,    -1,   494,
     495,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,   166,    -1,   168,   169,   170,   171,
     172,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,   200,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,    -1,
      -1,   223,   224,   225,   226,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,    -1,   277,   278,    -1,    -1,   281,
     282,   283,    -1,    -1,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
      -1,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
      -1,   393,   394,    -1,   396,   397,   398,   399,   400,   401,
     402,    -1,   404,   405,    -1,    -1,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
      -1,    -1,   424,   425,   426,   427,   428,   429,    -1,   431,
     432,   433,   434,   435,   436,   437,    -1,   439,   440,   441,
     442,   443,   444,    -1,    -1,   447,    -1,    -1,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
      -1,    -1,    -1,    -1,    -1,    -1,   478,   479,    -1,    -1,
      -1,    -1,    -1,   485,    -1,   487,    -1,    -1,    -1,    -1,
     492,    -1,   494,   495,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,   166,    -1,   168,
     169,   170,   171,   172,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,   200,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,    -1,    -1,   223,   224,   225,   226,    -1,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
      -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,    -1,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,    -1,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,    -1,   393,   394,    -1,   396,   397,   398,
     399,   400,   401,   402,    -1,   404,   405,    -1,    -1,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,    -1,    -1,   424,   425,   426,   427,   428,
     429,    -1,   431,   432,   433,   434,   435,   436,   437,    -1,
     439,   440,   441,   442,   443,   444,    -1,    -1,   447,    -1,
      -1,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,    -1,    -1,    -1,    -1,    -1,    -1,   478,
     479,    -1,    -1,    -1,    -1,    -1,   485,    -1,   487,    -1,
      -1,    -1,    -1,   492,    -1,   494,   495,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,    -1,    -1,   223,   224,   225,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,    -1,   393,   394,    -1,
     396,   397,   398,   399,   400,   401,   402,    -1,   404,   405,
      -1,    -1,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,    -1,    -1,   424,   425,
     426,   427,   428,   429,    -1,   431,   432,   433,   434,   435,
     436,   437,    -1,   439,   440,   441,   442,   443,   444,    -1,
      -1,   447,    -1,    -1,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,    -1,    -1,    -1,    -1,
      -1,    -1,   478,   479,    -1,    -1,    -1,    -1,    -1,   485,
      -1,   487,    -1,    -1,    -1,    -1,   492,    -1,   494,   495,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,   166,    -1,   168,   169,   170,   171,   172,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,   200,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,    -1,    -1,
     223,   224,   225,   226,    -1,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,    -1,   277,   278,    -1,    -1,   281,   282,
     283,    -1,    -1,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,    -1,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,    -1,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,    -1,
     393,   394,    -1,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,    -1,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,    -1,
      -1,   424,   425,   426,   427,   428,   429,    -1,   431,   432,
     433,   434,   435,   436,   437,    -1,   439,   440,   441,   442,
     443,   444,    -1,    -1,   447,    -1,    -1,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,    -1,
      -1,    -1,    -1,    -1,    -1,   478,   479,    -1,    -1,    -1,
      -1,    -1,   485,    -1,   487,    -1,    -1,    -1,    -1,   492,
      -1,   494,   495,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    35,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,   166,    -1,   168,   169,
     170,   171,   172,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
     200,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,    -1,    -1,   223,   224,   225,   226,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,    -1,   277,   278,    -1,
      -1,   281,   282,   283,    -1,    -1,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,    -1,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
      -1,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,    -1,   393,   394,    -1,   396,   397,   398,   399,
     400,   401,   402,    -1,   404,   405,    -1,    -1,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,    -1,    -1,   424,   425,   426,   427,   428,   429,
      -1,   431,   432,   433,   434,   435,   436,   437,    -1,   439,
     440,   441,   442,   443,   444,    -1,    -1,   447,    -1,    -1,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,    -1,    -1,    -1,    -1,    -1,    -1,   478,   479,
      -1,    -1,    -1,    -1,    -1,   485,    -1,   487,    -1,    -1,
      -1,    -1,   492,    -1,   494,   495,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,   166,
      -1,   168,   169,   170,   171,   172,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,   200,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,    -1,    -1,   223,   224,   225,   226,
      -1,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,    -1,
     277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,    -1,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,    -1,   393,   394,    -1,   396,
     397,   398,   399,   400,   401,   402,    -1,   404,   405,    -1,
      -1,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,    -1,    -1,   424,   425,   426,
     427,   428,   429,    -1,   431,   432,   433,   434,   435,   436,
     437,    -1,   439,   440,   441,   442,   443,   444,    -1,    -1,
     447,    -1,    -1,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,    -1,    -1,    -1,    -1,    -1,
      -1,   478,   479,    -1,    -1,    -1,    -1,    -1,   485,    -1,
     487,    -1,    -1,    -1,    -1,   492,    -1,   494,   495,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,   166,    -1,   168,   169,   170,   171,   172,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,   200,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,    -1,    -1,   223,
     224,   225,   226,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,    -1,    -1,   281,   282,   283,
      -1,    -1,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,    -1,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,    -1,   393,
     394,    -1,   396,   397,   398,   399,   400,   401,   402,    -1,
     404,   405,    -1,    -1,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,    -1,    -1,
     424,   425,   426,   427,   428,   429,    -1,   431,   432,   433,
     434,   435,   436,   437,    -1,   439,   440,   441,   442,   443,
     444,    -1,    -1,   447,    -1,    -1,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,    -1,    -1,
      -1,    -1,    -1,    -1,   478,   479,    -1,    -1,    -1,    -1,
      -1,   485,    -1,   487,    -1,    -1,    -1,    -1,   492,    -1,
     494,   495,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,   166,    -1,   168,   169,   170,
     171,   172,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,   200,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,   214,   215,   216,   217,   218,   219,   220,
      -1,    -1,   223,   224,   225,   226,    -1,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,    -1,   265,   266,    -1,   268,   269,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,    -1,    -1,
     281,   282,   283,    -1,    -1,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,    -1,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,    -1,   393,   394,    -1,   396,   397,   398,   399,   400,
     401,   402,    -1,   404,   405,    -1,    -1,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,    -1,    -1,   424,   425,   426,   427,   428,   429,    -1,
     431,   432,   433,   434,   435,   436,   437,    -1,   439,   440,
     441,   442,   443,   444,    -1,    -1,   447,    -1,    -1,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,    -1,    -1,    -1,    -1,    -1,    -1,   478,   479,    -1,
      -1,    -1,    -1,    -1,   485,    -1,   487,    -1,    -1,    -1,
      -1,   492,    -1,   494,   495,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,   166,    -1,
     168,   169,   170,   171,   172,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,   200,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,    -1,    -1,   223,   224,   225,   226,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,    -1,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,    -1,   393,   394,    -1,   396,   397,
     398,   399,   400,   401,   402,    -1,   404,   405,    -1,    -1,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,    -1,    -1,   424,   425,   426,   427,
     428,   429,    -1,   431,   432,   433,   434,   435,   436,   437,
      -1,   439,   440,   441,   442,   443,   444,    -1,    -1,   447,
      -1,    -1,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     478,   479,    -1,    -1,     3,     4,     5,     6,     7,   487,
       9,    10,    -1,    -1,    -1,    -1,   494,   495,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,   166,    -1,   168,
     169,   170,   171,   172,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,   200,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,    -1,    -1,   223,   224,   225,   226,    -1,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,    -1,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
      -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,    -1,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,    -1,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,    -1,   393,   394,    -1,   396,   397,   398,
     399,   400,   401,   402,    -1,   404,   405,    -1,    -1,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,    -1,    -1,   424,   425,   426,   427,   428,
     429,    -1,   431,   432,   433,   434,   435,   436,   437,    -1,
     439,   440,   441,   442,   443,   444,    -1,    -1,   447,    -1,
      -1,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   478,
     479,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   487,    -1,
      -1,    -1,    -1,    -1,    -1,   494,   495,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,   213,   214,   215,
     216,   217,   218,   219,   220,    -1,    -1,   223,   224,   225,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,    -1,   393,   394,    -1,
     396,   397,   398,   399,   400,   401,   402,    -1,   404,   405,
      -1,    -1,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,    -1,    -1,   424,   425,
     426,   427,   428,   429,    -1,   431,   432,   433,   434,   435,
     436,   437,    -1,   439,   440,   441,   442,   443,   444,    -1,
      -1,   447,    -1,    -1,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   478,   479,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   487,    -1,    -1,    -1,    -1,    -1,    -1,   494,   495,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    -1,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,    -1,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,   166,    -1,   168,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,   200,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,   215,   216,   217,   218,   219,   220,    -1,    -1,
     223,   224,   225,    -1,    -1,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,    -1,   265,   266,    -1,   268,   269,   270,   271,   272,
     273,   274,   275,    -1,   277,   278,    -1,    -1,   281,   282,
     283,    -1,    -1,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,    -1,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,    -1,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,    -1,
     393,   394,    -1,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,    -1,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,    -1,
      -1,   424,   425,   426,   427,   428,   429,    -1,   431,   432,
     433,   434,   435,   436,   437,    -1,   439,   440,   441,   442,
     443,   444,    -1,    -1,   447,    -1,    -1,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   478,   479,     3,    -1,    -1,
      -1,    -1,   485,    -1,   487,    -1,    -1,    -1,    -1,   492,
      -1,   494,   495,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      36,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    -1,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,    -1,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
      -1,    -1,   168,   169,   170,   171,    -1,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,   215,
     216,   217,   218,   219,   220,    -1,    -1,   223,   224,   225,
      -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,    -1,   268,    -1,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,    -1,   289,    -1,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,    -1,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,    -1,   393,   394,    -1,
     396,   397,   398,   399,   400,   401,   402,    -1,   404,   405,
      -1,    -1,   408,   409,   410,   411,   412,    -1,   414,   415,
     416,   417,   418,   419,   420,   421,    -1,    -1,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,    -1,   439,    -1,   441,   442,   443,   444,    -1,
      -1,   447,    -1,    -1,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,    -1,    -1,     3,    -1,     5,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   488,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,    -1,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,    -1,   223,   224,   225,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,   267,   268,    -1,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,   280,   281,   282,   283,    -1,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,    -1,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,    -1,   404,   405,
      -1,    -1,   408,   409,   410,   411,   412,    -1,   414,   415,
     416,   417,   418,   419,   420,   421,    -1,    -1,   424,   425,
     426,   427,   428,   429,    -1,   431,   432,   433,   434,   435,
     436,   437,    -1,   439,   440,   441,   442,   443,   444,    -1,
      -1,   447,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,    -1,     3,   473,     5,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   487,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,    -1,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,    -1,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,   166,
      -1,   168,   169,   170,   171,   172,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,   200,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,    -1,   223,   224,   225,   226,
      -1,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,    -1,   265,   266,
     267,   268,    -1,   270,   271,   272,   273,   274,   275,    -1,
     277,   278,    -1,   280,   281,   282,   283,    -1,    -1,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,    -1,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,    -1,   393,   394,    -1,   396,
     397,   398,   399,   400,   401,   402,    -1,   404,   405,    -1,
      -1,   408,   409,   410,   411,   412,    -1,   414,   415,   416,
     417,   418,   419,   420,   421,    -1,    -1,   424,   425,   426,
     427,   428,   429,    -1,   431,   432,   433,   434,   435,   436,
     437,    -1,   439,   440,   441,   442,   443,   444,    -1,    -1,
     447,    -1,    -1,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,    -1,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     487,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,   166,    -1,
     168,   169,   170,   171,   172,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,   200,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,    -1,    -1,   223,   224,   225,   226,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,   267,
     268,    -1,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,    -1,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,    -1,   393,   394,    -1,   396,   397,
     398,   399,   400,   401,   402,    -1,   404,   405,    -1,    -1,
     408,   409,   410,   411,   412,    -1,   414,   415,   416,   417,
     418,   419,   420,   421,    -1,    -1,   424,   425,   426,   427,
     428,   429,    -1,   431,   432,   433,   434,   435,   436,   437,
      -1,   439,   440,   441,   442,   443,   444,    -1,    -1,   447,
      -1,    -1,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,    -1,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   487,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,    -1,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,   166,    -1,   168,
     169,   170,   171,   172,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,   200,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,    -1,    -1,   223,   224,   225,   226,    -1,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,    -1,   265,   266,   267,   268,
      -1,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
      -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,    -1,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,    -1,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,    -1,   393,   394,    -1,   396,   397,   398,
     399,   400,   401,   402,    -1,   404,   405,    -1,    -1,   408,
     409,   410,   411,   412,    -1,   414,   415,   416,   417,   418,
     419,   420,   421,    -1,    -1,   424,   425,   426,   427,   428,
     429,    -1,   431,   432,   433,   434,   435,   436,   437,    -1,
     439,   440,   441,   442,   443,   444,    -1,    -1,   447,    -1,
      -1,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,    -1,     3,     4,     5,    -1,    -1,    -1,     9,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   487,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    -1,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,    -1,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,
     170,   171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
      -1,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,   219,
     220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,
     230,    -1,    -1,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,    -1,   259,
     260,   261,   262,   263,    -1,   265,   266,    -1,   268,    -1,
     270,   271,   272,   273,   274,   275,    -1,   277,   278,   279,
      -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,   289,
      -1,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,    -1,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
      -1,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,    -1,   393,   394,    -1,   396,    -1,   398,   399,
     400,   401,   402,    -1,   404,   405,    -1,    -1,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,    -1,    -1,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,    -1,   439,
      -1,   441,   442,   443,   444,    -1,    -1,   447,    -1,    -1,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,    -1,     3,    -1,    -1,    -1,    -1,    -1,   478,   479,
     480,    -1,    -1,    -1,    -1,    -1,    -1,   487,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      31,    32,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,
     171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,    -1,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,   214,    -1,   216,   217,   218,   219,   220,
      -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,
      -1,    -1,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,    -1,   259,   260,
     261,   262,   263,    -1,   265,   266,    -1,   268,    -1,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,    -1,    -1,
     281,   282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,    -1,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,    -1,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,    -1,   393,   394,   395,   396,    -1,   398,   399,   400,
     401,   402,    -1,   404,   405,    -1,    -1,   408,   409,   410,
     411,   412,    -1,   414,   415,   416,   417,   418,   419,   420,
     421,    -1,    -1,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,    -1,   439,    -1,
     441,   442,   443,   444,    -1,    -1,   447,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
      -1,     3,   473,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   487,    19,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,    -1,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,    -1,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,
      -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,    -1,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,   214,    -1,   216,   217,   218,   219,   220,    -1,
      -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,
      -1,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,    -1,   259,   260,   261,
     262,   263,    -1,   265,   266,    -1,   268,    -1,   270,   271,
     272,   273,   274,   275,    -1,   277,   278,    -1,    -1,   281,
     282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
      -1,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,    -1,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
      -1,   393,   394,   395,   396,    -1,   398,   399,   400,   401,
     402,    -1,   404,   405,    -1,    -1,   408,   409,   410,   411,
     412,    -1,   414,   415,   416,   417,   418,   419,   420,   421,
      -1,    -1,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,    -1,   439,    -1,   441,
     442,   443,   444,    -1,    -1,   447,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,    -1,
       3,   473,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   487,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,    -1,   259,   260,   261,   262,
     263,    -1,   265,   266,    -1,   268,    -1,   270,   271,   272,
     273,   274,   275,    -1,   277,   278,    -1,    -1,   281,   282,
     283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,    -1,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,    -1,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,    -1,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,    -1,
     393,   394,   395,   396,    -1,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,    -1,   408,   409,   410,   411,   412,
      -1,   414,   415,   416,   417,   418,   419,   420,   421,    -1,
      -1,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,    -1,   439,    -1,   441,   442,
     443,   444,    -1,    -1,   447,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,    -1,     3,
     473,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   487,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    -1,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    -1,
      94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
      -1,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,    -1,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,    -1,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
     214,    -1,   216,   217,   218,   219,   220,    -1,    -1,   223,
      -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,    -1,   259,   260,   261,   262,   263,
      -1,   265,   266,    -1,   268,    -1,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,    -1,    -1,   281,   282,   283,
      -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,    -1,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,    -1,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,    -1,   393,
     394,    -1,   396,    -1,   398,   399,   400,   401,   402,    -1,
     404,   405,    -1,    -1,   408,   409,   410,   411,   412,    -1,
     414,   415,   416,   417,   418,   419,   420,   421,    -1,    -1,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,    -1,   439,    -1,   441,   442,   443,
     444,    -1,    -1,   447,    -1,    -1,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,    -1,     3,    -1,
       5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   487,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    -1,    94,
      95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
      -1,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,    -1,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,
      -1,   216,   217,   218,   219,   220,    -1,    -1,   223,    -1,
     225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,    -1,   259,   260,   261,   262,   263,    -1,
     265,   266,    -1,   268,    -1,   270,   271,   272,   273,   274,
     275,    -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,
      -1,   286,   287,    -1,   289,    -1,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,    -1,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,    -1,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,    -1,   393,   394,
      -1,   396,    -1,   398,   399,   400,   401,   402,    -1,   404,
     405,    -1,    -1,   408,   409,   410,   411,   412,    -1,   414,
     415,   416,   417,   418,   419,   420,   421,    -1,    -1,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,    -1,   439,    -1,   441,   442,   443,   444,
      -1,    -1,   447,    -1,    -1,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,    -1,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   487,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    -1,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    -1,    94,    95,
      96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,    -1,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
      -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,    -1,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,
     216,   217,   218,   219,   220,    -1,    -1,   223,    -1,   225,
      -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,    -1,   259,   260,   261,   262,   263,    -1,   265,
     266,    -1,   268,    -1,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,    -1,   289,    -1,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,    -1,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,    -1,   393,   394,    -1,
     396,    -1,   398,   399,   400,   401,   402,    -1,   404,   405,
      -1,    -1,   408,   409,   410,   411,   412,    -1,   414,   415,
     416,   417,   418,   419,   420,   421,    -1,    -1,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,    -1,   439,    -1,   441,   442,   443,   444,    -1,
      -1,   447,    -1,    -1,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,    -1,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   487,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    -1,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    -1,    94,    95,    96,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,    -1,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,    -1,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,    -1,
      -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,    -1,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,
     217,   218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,
      -1,   228,   229,   230,    -1,    -1,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,    -1,   259,   260,   261,   262,   263,    -1,   265,   266,
      -1,   268,    -1,   270,   271,   272,   273,   274,   275,    -1,
     277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,
     287,    -1,   289,    -1,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,    -1,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,    -1,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,    -1,   393,   394,    -1,   396,
      -1,   398,   399,   400,   401,   402,    -1,   404,   405,    -1,
      -1,   408,   409,   410,   411,   412,    -1,   414,   415,   416,
     417,   418,   419,   420,   421,    -1,    -1,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,    -1,   439,    -1,   441,   442,   443,   444,    -1,    -1,
     447,    -1,    -1,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,    -1,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     487,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    -1,    94,    95,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,
      -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,
     218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
      -1,   259,   260,   261,   262,   263,    -1,   265,   266,    -1,
     268,    -1,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,
      -1,   289,    -1,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,    -1,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,    -1,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,    -1,   393,   394,    -1,   396,    -1,
     398,   399,   400,   401,   402,    -1,   404,   405,    -1,    -1,
     408,   409,   410,   411,   412,    -1,   414,   415,   416,   417,
     418,   419,   420,   421,    -1,    -1,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
      -1,   439,    -1,   441,   442,   443,   444,    -1,    -1,   447,
      -1,    -1,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,    -1,    -1,    -1,    -1,     3,     4,     5,
      -1,    -1,     8,     9,    -1,    -1,    -1,    -1,    -1,   487,
      16,    17,    18,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    31,    32,    33,    34,    35,
      36,    37,    38,    39,    40,    41,    42,    43,    44,    45,
      46,    47,    -1,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    -1,    73,    74,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      86,    87,    88,    89,    90,    91,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
     146,   147,   148,    -1,   150,   151,   152,   153,    -1,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,    -1,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,    -1,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,    -1,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,    -1,   288,   289,   290,    -1,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,    -1,
     306,   307,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,    -1,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,    -1,   411,    -1,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
      -1,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   467,   468,   469,   470,    -1,     3,    -1,   474,   475,
     476,     8,   478,   479,   480,   481,   482,   483,    -1,    16,
      17,    18,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    -1,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    -1,    94,    95,    96,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,    -1,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,    -1,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,    -1,
      -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,    -1,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,
     217,   218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,
      -1,   228,   229,   230,    -1,    -1,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,    -1,   259,   260,   261,   262,   263,    -1,   265,   266,
      -1,   268,    -1,   270,   271,   272,   273,   274,   275,    -1,
     277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,
     287,    -1,   289,    -1,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,    -1,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,    -1,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,    -1,   393,   394,    -1,   396,
      -1,   398,   399,   400,   401,   402,    -1,   404,   405,    -1,
      -1,   408,   409,   410,   411,   412,    -1,   414,   415,   416,
     417,   418,   419,   420,   421,    -1,    -1,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,    -1,   439,    -1,   441,   442,   443,   444,    -1,    -1,
     447,    -1,    -1,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,    -1,    -1,    -1,   474,   475,   476,
      -1,   478,   479,   480,   481,   482,   483,     8,    -1,    -1,
      11,    -1,    -1,    -1,    -1,    16,    17,    18,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,
      -1,    -1,    33,    16,    17,    18,    -1,    -1,    -1,    -1,
      41,    -1,    -1,     8,    -1,    -1,    11,    48,    -1,    -1,
      33,    16,    17,    18,    -1,    -1,    -1,    -1,    41,    -1,
      -1,    -1,    -1,    -1,    -1,    48,    -1,    -1,    33,    -1,
      -1,     8,    73,    -1,    11,    -1,    41,    -1,    -1,    16,
      17,    18,    -1,    48,    -1,    -1,    -1,    -1,    -1,     8,
      73,    -1,    11,    -1,    -1,    -1,    33,    16,    17,    18,
      -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,    73,    -1,
      -1,    48,    -1,    -1,    33,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,    48,
      -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    73,    -1,    -1,    -1,    -1,     8,
      -1,    -1,    11,    -1,    -1,    -1,    -1,    16,    17,    18,
      -1,   172,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,   186,    -1,    -1,    -1,   172,
     191,    -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,    48,
      -1,    -1,    -1,   186,    -1,    -1,    -1,   172,   191,    -1,
      -1,   212,   213,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   186,    -1,    -1,    73,   226,   191,    -1,    -1,   212,
     213,    -1,    -1,    -1,    -1,   172,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   226,    -1,    -1,    -1,   212,   213,   186,
      -1,    -1,    -1,   172,   191,    -1,    -1,    -1,    -1,    -1,
      -1,   226,    -1,   264,    -1,    -1,   267,   186,    -1,    -1,
      -1,    -1,   191,    -1,    -1,   212,   213,    -1,    -1,    -1,
     281,   264,    -1,   284,   267,    -1,    -1,    -1,    -1,   226,
      -1,    -1,    -1,   212,   213,    -1,    -1,    -1,   281,   264,
      -1,   284,   267,    -1,    -1,    -1,    -1,   226,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   281,    -1,    -1,   284,
      -1,    -1,    -1,   172,    -1,    -1,    -1,   264,    -1,    -1,
     267,    -1,    -1,    -1,    -1,    -1,    -1,   186,    -1,    -1,
      -1,    -1,   191,    -1,   281,   264,    -1,   284,   267,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   281,   212,   213,   284,    -1,    -1,    -1,    -1,
     371,    -1,    -1,    -1,    -1,    -1,    -1,   226,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   371,     8,
      -1,    -1,    11,    -1,    -1,    -1,    -1,    16,    17,    18,
      -1,    -1,    -1,    -1,    -1,    -1,   371,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,   264,    -1,    -1,   267,    -1,
      -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,    48,
      -1,    -1,   281,    -1,   371,   284,     8,    -1,    -1,    11,
      -1,    -1,    -1,    -1,    16,    17,    18,    -1,    -1,    -1,
      -1,    -1,   371,    -1,    73,    -1,    -1,    -1,    -1,    -1,
      -1,    33,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    41,
     471,    -1,    -1,   474,   475,   476,    48,   478,   479,   480,
     481,   482,   483,    -1,    -1,    -1,    -1,   488,   471,    -1,
      -1,   474,   475,   476,    -1,   478,   479,   480,   481,   482,
     483,    73,    -1,    -1,    -1,   488,   471,    -1,    -1,   474,
     475,   476,    -1,   478,   479,   480,   481,   482,   483,    -1,
      -1,    -1,   371,   488,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   471,    -1,    -1,   474,   475,   476,
      -1,   478,   479,   480,   481,   482,   483,    -1,    -1,    -1,
      -1,   488,   471,   172,    -1,   474,   475,   476,    -1,   478,
     479,   480,   481,   482,   483,    -1,    -1,   186,    -1,   488,
      -1,    -1,   191,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   212,   213,    -1,    -1,    -1,    -1,    -1,
     172,    -1,    -1,    -1,    -1,    -1,    -1,   226,    -1,    -1,
      -1,    -1,    -1,    -1,   186,    -1,    -1,    -1,    -1,   191,
      -1,    -1,   471,    -1,    -1,   474,   475,   476,    -1,   478,
     479,   480,   481,   482,   483,    -1,    -1,    -1,    -1,   488,
     212,   213,    -1,    -1,    -1,   264,    -1,    -1,   267,    -1,
      -1,    -1,    -1,    -1,   226,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   281,    -1,    -1,   284,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   264,    -1,    -1,   267,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   281,
      -1,    -1,   284,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   371,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   371,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   471,    -1,    -1,   474,   475,   476,    -1,   478,
     479,   480,   481,   482,   483,    -1,    -1,    -1,    -1,   488,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   471,
      -1,     3,   474,   475,   476,    -1,   478,   479,   480,   481,
     482,   483,    -1,    -1,    -1,    -1,   488,    19,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    33,    34,    35,    36,    37,    38,    39,    40,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    -1,
      82,    83,    84,    85,    86,    87,    88,    89,    90,    91,
      92,    -1,    94,    95,    96,    97,    98,    99,    -1,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   139,   140,   141,
     142,   143,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,    -1,   167,    -1,   169,   170,   171,
      -1,   173,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,    -1,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
      -1,    -1,   214,    -1,   216,   217,   218,   219,   220,   221,
     222,   223,    -1,   225,    -1,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,    -1,   259,   260,   261,
     262,   263,   264,   265,   266,    -1,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,    -1,   289,    -1,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,    -1,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,    -1,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   480,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    -1,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    -1,
      94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
      -1,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,    -1,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,    -1,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
     214,    -1,   216,   217,   218,   219,   220,    -1,    -1,   223,
      -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,    -1,   259,   260,   261,   262,   263,
      -1,   265,   266,    -1,   268,    -1,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,    -1,    -1,   281,   282,   283,
      -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,    -1,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,    -1,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,    -1,   393,
     394,    -1,   396,    -1,   398,   399,   400,   401,   402,    -1,
     404,   405,    -1,    -1,   408,   409,   410,   411,   412,    -1,
     414,   415,   416,   417,   418,   419,   420,   421,    -1,    -1,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,    -1,   439,    -1,   441,   442,   443,
     444,    -1,    -1,   447,    -1,    -1,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,     3,     4,     5,
      -1,    -1,    -1,     9,    -1,    -1,   480,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    -1,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    -1,    94,    95,
      96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
      -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,    -1,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,
     216,   217,   218,   219,   220,    -1,    -1,   223,    -1,   225,
      -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,    -1,   259,   260,   261,   262,   263,    -1,   265,
     266,    -1,   268,    -1,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,   279,    -1,   281,   282,   283,    -1,    -1,
     286,   287,    -1,   289,    -1,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,    -1,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,    -1,   393,   394,    -1,
     396,    -1,   398,   399,   400,   401,   402,    -1,   404,   405,
      -1,    -1,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,    -1,    -1,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,    -1,   439,    -1,   441,   442,   443,   444,    -1,
      -1,   447,    -1,    -1,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,     3,     4,     5,    -1,    -1,
      -1,     9,   478,   479,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    -1,    94,    95,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,
      -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,
     218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
      -1,   259,   260,   261,   262,   263,    -1,   265,   266,    -1,
     268,    -1,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,   279,    -1,   281,   282,   283,    -1,    -1,   286,   287,
      -1,   289,    -1,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,    -1,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,    -1,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,    -1,   393,   394,    -1,   396,    -1,
     398,   399,   400,   401,   402,    -1,   404,   405,    -1,    -1,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,    -1,    -1,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
      -1,   439,    -1,   441,   442,   443,   444,    -1,    -1,   447,
      -1,    -1,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,     3,     4,     5,    -1,    -1,    -1,     9,
     478,   479,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    -1,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,    -1,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,
     170,   171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
      -1,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,   219,
     220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,
     230,    -1,    -1,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,    -1,   259,
     260,   261,   262,   263,    -1,   265,   266,    -1,   268,    -1,
     270,   271,   272,   273,   274,   275,    -1,   277,   278,   279,
      -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,   289,
      -1,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,    -1,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
      -1,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,    -1,   393,   394,    -1,   396,    -1,   398,   399,
     400,   401,   402,    -1,   404,   405,    -1,    -1,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,    -1,    -1,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,    -1,   439,
      -1,   441,   442,   443,   444,    -1,    -1,   447,    -1,    -1,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,    -1,     8,    -1,    -1,    11,    -1,    -1,   478,   479,
      16,    17,    18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
       8,    -1,    -1,    11,    -1,    -1,    -1,    33,    16,    17,
      18,    37,    -1,    -1,    -1,    41,    -1,    -1,     8,    -1,
      -1,    11,    48,    -1,    -1,    33,    16,    17,    18,    -1,
      -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,
      48,    -1,    -1,    33,    -1,    -1,     8,    73,    -1,    11,
      -1,    41,    -1,    -1,    16,    17,    18,    -1,    48,    -1,
      -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,    -1,    -1,
      -1,    33,    -1,    -1,    36,    -1,    -1,    -1,    -1,    41,
      -1,    -1,    -1,    73,    -1,    -1,    48,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   123,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    73,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   172,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   162,    -1,    -1,    -1,    -1,   167,
     186,    -1,    -1,    -1,   172,   191,     8,    -1,    -1,    11,
      -1,   161,    -1,    -1,    16,    17,    18,    -1,   186,    -1,
      -1,    -1,   172,   191,    -1,    -1,   212,   213,    -1,    -1,
      -1,    33,    -1,    -1,    -1,    -1,   186,    -1,    -1,    41,
     226,   191,    -1,    -1,   212,   213,    48,    -1,    -1,    -1,
     172,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   226,    -1,
      -1,    -1,   212,   213,   186,    -1,    -1,    -1,    -1,   191,
      -1,    73,    -1,    -1,    -1,    -1,   226,    -1,   264,    -1,
      -1,   267,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     212,   213,    -1,    -1,    -1,   281,   264,    -1,   284,   267,
      -1,    -1,    -1,    -1,   226,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   281,   264,    -1,   284,   267,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   281,    -1,    -1,   284,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   264,    -1,    -1,   267,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   307,     8,   281,
      -1,    11,   284,    -1,    -1,    -1,    16,    17,    18,    -1,
     172,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    33,   186,   371,    36,     8,    -1,   191,
      11,    41,    -1,    -1,    -1,    16,    17,    18,    48,    -1,
      -1,    -1,    -1,   371,    -1,    -1,    -1,    -1,    -1,    -1,
     212,   213,    33,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      41,   371,    -1,    73,   226,    -1,    -1,    48,    -1,    -1,
      -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,
      -1,    16,    17,    18,   430,    -1,    -1,    -1,    -1,   371,
      -1,    -1,    73,    -1,    -1,    -1,    -1,    -1,    33,    -1,
      -1,    36,   264,    -1,    -1,   267,    41,    -1,    -1,    -1,
      -1,    -1,    -1,    48,    -1,    -1,    -1,    -1,    -1,   281,
      -1,    -1,   284,    -1,    -1,   471,    -1,    -1,   474,   475,
     476,    -1,   478,   479,   480,   481,   482,   483,    73,    -1,
     302,    -1,    -1,   471,    -1,    -1,   474,   475,   476,    -1,
     478,   479,   480,   481,   482,   483,    -1,    -1,    -1,    -1,
      -1,   471,   172,    -1,   474,   475,   476,    -1,   478,   479,
     480,   481,   482,   483,    -1,    -1,   186,    -1,    -1,    -1,
      -1,   191,    -1,    -1,    -1,    -1,   167,    -1,    -1,   471,
      -1,   172,   474,   475,   476,    -1,   478,   479,   480,   481,
     482,   483,   212,   213,    -1,   186,    -1,    -1,    -1,   371,
     191,    -1,    -1,    -1,    -1,    -1,   226,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
       8,   212,   213,    11,    -1,    -1,    -1,   172,    16,    17,
      18,    -1,    -1,    -1,    -1,   226,    -1,    -1,    -1,    -1,
      -1,   186,    -1,    -1,   264,    33,   191,   267,    -1,    -1,
      -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,
      48,   281,    -1,    -1,   284,    -1,    -1,   212,   213,    -1,
      -1,    -1,    -1,   264,    -1,    -1,   267,    -1,    -1,    -1,
      -1,   226,    -1,    -1,    -1,    73,    -1,    -1,    -1,    -1,
     281,    -1,    -1,   284,    -1,    -1,    -1,    -1,    -1,   471,
      -1,    -1,   474,   475,   476,    -1,   478,   479,   480,   481,
     482,   483,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   264,
      -1,    -1,   267,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,     8,   281,    -1,    11,   284,
      -1,    -1,    -1,    16,    17,    18,    -1,    -1,    -1,    -1,
      -1,   371,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    -1,    -1,    36,     8,    -1,    -1,    11,    41,    -1,
      -1,    -1,    16,    17,    18,    48,    -1,    -1,    -1,    -1,
     371,    -1,     8,    -1,   172,    11,    -1,    -1,    -1,    33,
      16,    17,    18,    -1,    -1,    -1,    -1,    41,   186,    -1,
      73,    -1,    -1,   191,    48,    -1,    -1,    33,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,
      -1,    -1,    48,    -1,   212,   213,   371,    -1,    -1,    73,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   226,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,
      -1,   471,    -1,    -1,   474,   475,   476,    -1,   478,   479,
     480,   481,   482,   483,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   264,    -1,    -1,   267,
     471,    -1,    -1,   474,   475,   476,    -1,   478,   479,   480,
     481,   482,   483,   281,    -1,    -1,   284,    -1,    -1,   172,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   186,    -1,    -1,    -1,    -1,   191,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   471,    -1,   172,   474,
     475,   476,    -1,   478,   479,   480,   481,   482,   483,   212,
     213,    -1,   186,    -1,    -1,    -1,   172,   191,    -1,    -1,
      -1,    -1,    -1,   226,    -1,    -1,    -1,    -1,    -1,    -1,
     186,    -1,    -1,    -1,    -1,   191,    -1,    -1,   212,   213,
       8,    -1,    -1,    11,    -1,    -1,    -1,    -1,    16,    17,
      18,    -1,   226,   371,    -1,    -1,   212,   213,    -1,    -1,
      -1,   264,    -1,    -1,   267,    -1,    -1,    -1,    -1,    -1,
     226,    -1,    -1,    41,    -1,    -1,    -1,    -1,   281,    -1,
      48,   284,    -1,    -1,    -1,   403,    -1,    -1,    -1,    -1,
     264,    -1,    -1,   267,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    73,    -1,   281,   264,    -1,
     284,   267,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   281,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   471,    -1,    -1,   474,   475,   476,    -1,
     478,   479,   480,   481,   482,   483,    -1,    -1,   371,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   371,    -1,    -1,
      -1,    -1,    -1,    -1,   172,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   371,    -1,    -1,   186,    -1,
      -1,    -1,    -1,   191,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   212,   213,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   226,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   471,    -1,
      -1,   474,   475,   476,    -1,   478,   479,   480,   481,   482,
     483,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   471,    -1,   267,
     474,   475,   476,    -1,   478,   479,   480,   481,   482,   483,
      -1,    -1,    -1,   281,    -1,   471,    -1,    -1,   474,   475,
     476,    -1,   478,   479,   480,   481,   482,   483,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   371,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
       3,    -1,     5,   471,    -1,    -1,   474,   475,   476,    -1,
     478,   479,   480,   481,   482,   483,    19,    20,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
      33,    34,    35,    36,    37,    38,    39,    40,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    85,    86,    87,    88,    89,    90,    91,    92,
      -1,    94,    95,    96,    97,    98,    99,    -1,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   138,   139,   140,   141,   142,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,    -1,   167,    -1,   169,   170,   171,    -1,
     173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,   221,   222,
     223,    -1,   225,    -1,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,    -1,   259,   260,   261,   262,
     263,   264,   265,   266,    -1,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,    -1,   289,    -1,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,    -1,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,    -1,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    -1,    94,
      95,    96,    97,    98,    99,    -1,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,    -1,   167,    -1,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,    -1,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,    -1,    -1,   214,
      -1,   216,   217,   218,   219,   220,   221,   222,   223,    -1,
     225,    -1,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,    -1,   259,   260,   261,   262,   263,   264,
     265,   266,    -1,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,    -1,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,    -1,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,    -1,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      27,    28,    29,    30,    31,    32,    33,    34,    35,    36,
      37,    38,    39,    40,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    -1,    82,    83,    84,    85,    86,
      87,    88,    89,    90,    91,    92,    -1,    94,    95,    96,
      97,    98,    99,    -1,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   129,   130,   131,   132,   133,   134,   135,   136,
     137,   138,   139,   140,   141,   142,   143,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,    -1,
     167,    -1,   169,   170,   171,    -1,   173,   174,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,    -1,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   210,   211,    -1,    -1,   214,    -1,   216,
     217,   218,   219,   220,   221,   222,   223,    -1,   225,    -1,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,    -1,   259,   260,   261,   262,   263,   264,   265,   266,
      -1,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,    -1,   289,    -1,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
      -1,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,    -1,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,    -1,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,   166,    -1,   168,
     169,   170,   171,   172,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,   200,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,    -1,    -1,   223,   224,   225,   226,    -1,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,    -1,   265,   266,   267,   268,
      -1,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
      -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,    -1,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,    -1,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,    -1,   393,   394,    -1,   396,   397,   398,
     399,   400,   401,   402,    -1,   404,   405,    -1,    -1,   408,
     409,   410,   411,   412,    -1,   414,   415,   416,   417,   418,
     419,   420,   421,    -1,    -1,   424,   425,   426,   427,   428,
     429,    -1,   431,   432,   433,   434,   435,   436,   437,    -1,
     439,   440,   441,   442,   443,   444,    -1,    -1,   447,    -1,
      -1,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    93,    94,    95,    96,    -1,    -1,    -1,   100,
      -1,    -1,    -1,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,   166,    -1,   168,   169,   170,
     171,   172,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,   200,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
      -1,    -1,   223,   224,   225,   226,    -1,   228,   229,   230,
      -1,    -1,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,    -1,   265,   266,   267,   268,    -1,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,    -1,    -1,
     281,   282,   283,    -1,    -1,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,    -1,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,    -1,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,    -1,   393,   394,    -1,   396,   397,   398,   399,   400,
     401,   402,    -1,   404,   405,    -1,    -1,   408,   409,   410,
     411,   412,    -1,   414,   415,   416,   417,   418,   419,   420,
     421,    -1,    -1,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,    -1,   439,   440,
     441,   442,   443,   444,    -1,    -1,   447,    -1,    -1,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      -1,    -1,    75,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    85,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,   164,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,    -1,   259,   260,   261,   262,
     263,    -1,   265,   266,    -1,   268,    -1,   270,   271,   272,
     273,   274,   275,    -1,   277,   278,    -1,    -1,   281,   282,
     283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,    -1,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,    -1,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,    -1,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,    -1,
     393,   394,    -1,   396,    -1,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,    -1,   408,   409,   410,   411,   412,
      -1,   414,   415,   416,   417,   418,   419,   420,   421,    -1,
     423,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,    -1,   439,    -1,   441,   442,
     443,   444,    -1,    -1,   447,    -1,    -1,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    -1,    -1,    94,
      95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
      -1,   156,    -1,   158,   159,   160,   161,    -1,   163,   164,
     165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,    -1,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,
      -1,   216,   217,   218,   219,   220,    -1,    -1,   223,    -1,
     225,   226,    -1,   228,   229,   230,    -1,    -1,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,    -1,   259,   260,   261,   262,   263,    -1,
     265,   266,    -1,   268,    -1,   270,   271,   272,   273,   274,
     275,    -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,
      -1,   286,   287,    -1,   289,    -1,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,    -1,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,    -1,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,    -1,   393,   394,
      -1,   396,    -1,   398,   399,   400,   401,   402,    -1,   404,
     405,    -1,    -1,   408,   409,   410,   411,   412,    -1,   414,
     415,   416,   417,   418,   419,   420,   421,    -1,   423,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,    -1,   439,    -1,   441,   442,   443,   444,
      -1,    -1,   447,    -1,    -1,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     3,    -1,     5,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    -1,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    -1,    94,    95,    96,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,    -1,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,    -1,
      -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,    -1,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,
     217,   218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,
      -1,   228,   229,   230,    -1,    -1,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,    -1,   259,   260,   261,   262,   263,    -1,   265,   266,
      -1,   268,    -1,   270,   271,   272,   273,   274,   275,    -1,
     277,   278,   279,    -1,   281,   282,   283,    -1,    -1,   286,
     287,    -1,   289,    -1,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,    -1,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,    -1,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,    -1,   393,   394,    -1,   396,
      -1,   398,   399,   400,   401,   402,    -1,   404,   405,    -1,
      -1,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,    -1,    -1,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,    -1,   439,    -1,   441,   442,   443,   444,    -1,    -1,
     447,    -1,    -1,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     3,    -1,     5,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,    -1,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,
     169,   170,   171,    -1,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,    -1,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,    -1,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,
     219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,
     229,   230,    -1,    -1,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,    -1,
     259,   260,   261,   262,   263,    -1,   265,   266,    -1,   268,
      -1,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
      -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,
     289,    -1,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,    -1,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,    -1,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,    -1,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,    -1,   393,   394,    -1,   396,    -1,   398,
     399,   400,   401,   402,    -1,   404,   405,    -1,    -1,   408,
     409,   410,   411,   412,    -1,   414,   415,   416,   417,   418,
     419,   420,   421,    -1,    -1,   424,   425,   426,   427,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,    -1,
     439,    -1,   441,   442,   443,   444,    -1,    -1,   447,    -1,
      -1,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,
     171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,    -1,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,   214,    -1,   216,   217,   218,   219,   220,
      -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,
      -1,    -1,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,    -1,   259,   260,
     261,   262,   263,    -1,   265,   266,    -1,   268,    -1,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,    -1,   280,
     281,   282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,    -1,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,    -1,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,    -1,   393,   394,    -1,   396,    -1,   398,   399,   400,
     401,   402,    -1,   404,   405,    -1,    -1,   408,   409,   410,
     411,   412,    -1,   414,   415,   416,   417,   418,   419,   420,
     421,    -1,    -1,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,    -1,   439,    -1,
     441,   442,   443,   444,    -1,    -1,   447,    -1,    -1,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,    -1,   259,   260,   261,   262,
     263,    -1,   265,   266,    -1,   268,    -1,   270,   271,   272,
     273,   274,   275,    -1,   277,   278,    -1,   280,   281,   282,
     283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,    -1,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,    -1,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,    -1,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,    -1,
     393,   394,    -1,   396,    -1,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,    -1,   408,   409,   410,   411,   412,
      -1,   414,   415,   416,   417,   418,   419,   420,   421,    -1,
      -1,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,    -1,   439,    -1,   441,   442,
     443,   444,    -1,    -1,   447,    -1,    -1,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    31,    32,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    -1,    94,
      95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
      -1,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,    -1,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,
      -1,   216,   217,   218,   219,   220,    -1,    -1,   223,    -1,
     225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,    -1,   259,   260,   261,   262,   263,    -1,
     265,   266,    -1,   268,    -1,   270,   271,   272,   273,   274,
     275,    -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,
      -1,   286,   287,    -1,   289,    -1,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,    -1,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,    -1,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,    -1,   393,   394,
      -1,   396,    -1,   398,   399,   400,   401,   402,    -1,   404,
     405,    -1,    -1,   408,   409,   410,   411,   412,    -1,   414,
     415,   416,   417,   418,   419,   420,   421,    -1,    -1,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,    -1,   439,    -1,   441,   442,   443,   444,
      -1,    -1,   447,    -1,    -1,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     3,    -1,     5,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    -1,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    -1,    94,    95,    96,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,    -1,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,    -1,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,    -1,
      -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,    -1,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,
     217,   218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,
      -1,   228,   229,   230,    -1,    -1,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,    -1,   259,   260,   261,   262,   263,    -1,   265,   266,
      -1,   268,    -1,   270,   271,   272,   273,   274,   275,    -1,
     277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,
     287,    -1,   289,    -1,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,    -1,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,    -1,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,    -1,   393,   394,   395,   396,
      -1,   398,   399,   400,   401,   402,    -1,   404,   405,    -1,
      -1,   408,   409,   410,   411,   412,    -1,   414,   415,   416,
     417,   418,   419,   420,   421,    -1,    -1,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,    -1,   439,    -1,   441,   442,   443,   444,    -1,    -1,
     447,    -1,    -1,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     3,     4,    -1,    -1,    -1,    -1,
       9,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,    -1,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,
     169,   170,   171,    -1,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,    -1,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,    -1,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,
     219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,
     229,   230,    -1,    -1,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,    -1,
     259,   260,   261,   262,   263,    -1,   265,   266,    -1,   268,
      -1,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
      -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,
     289,    -1,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,    -1,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,    -1,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,    -1,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,    -1,   393,   394,    -1,   396,    -1,   398,
     399,   400,   401,   402,    -1,   404,   405,    -1,    -1,   408,
     409,   410,   411,   412,    -1,   414,   415,   416,   417,   418,
     419,   420,   421,    -1,    -1,   424,   425,   426,   427,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,    -1,
     439,    -1,   441,   442,   443,   444,    -1,    -1,   447,    -1,
      -1,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,
     171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,    -1,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,   214,    -1,   216,   217,   218,   219,   220,
      -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,
      -1,    -1,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,    -1,   259,   260,
     261,   262,   263,    -1,   265,   266,    -1,   268,    -1,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,    -1,    -1,
     281,   282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,    -1,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,    -1,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,    -1,   393,   394,    -1,   396,    -1,   398,   399,   400,
     401,   402,    -1,   404,   405,    -1,    -1,   408,   409,   410,
     411,   412,    -1,   414,   415,   416,   417,   418,   419,   420,
     421,    -1,    -1,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,    -1,   439,    -1,
     441,   442,   443,   444,    -1,    -1,   447,    -1,    -1,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,    -1,   259,   260,   261,   262,
     263,    -1,   265,   266,    -1,   268,    -1,   270,   271,   272,
     273,   274,   275,    -1,   277,   278,    -1,    -1,   281,   282,
     283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,    -1,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,    -1,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,    -1,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,    -1,
     393,   394,    -1,   396,    -1,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,    -1,   408,   409,   410,   411,   412,
      -1,   414,   415,   416,   417,   418,   419,   420,   421,    -1,
      -1,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,    -1,   439,    -1,   441,   442,
     443,   444,    -1,    -1,   447,    -1,    -1,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     3,    -1,
       5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    -1,    94,
      95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
      -1,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,    -1,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,
      -1,   216,   217,   218,   219,   220,    -1,    -1,   223,    -1,
     225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,    -1,   259,   260,   261,   262,   263,    -1,
     265,   266,    -1,   268,    -1,   270,   271,   272,   273,   274,
     275,    -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,
      -1,   286,   287,    -1,   289,    -1,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,    -1,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,    -1,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,    -1,   393,   394,
      -1,   396,    -1,   398,   399,   400,   401,   402,    -1,   404,
     405,    -1,    -1,   408,   409,   410,   411,   412,    -1,   414,
     415,   416,   417,   418,   419,   420,   421,    -1,    -1,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,    -1,   439,    -1,   441,   442,   443,   444,
      -1,    -1,   447,    -1,    -1,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     3,    -1,     5,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    -1,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    -1,    94,    95,    96,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,    -1,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,    -1,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,    -1,
      -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,    -1,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,
     217,   218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,
      -1,   228,   229,   230,    -1,    -1,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,    -1,   259,   260,   261,   262,   263,    -1,   265,   266,
      -1,   268,    -1,   270,   271,   272,   273,   274,   275,    -1,
     277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,
     287,    -1,   289,    -1,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,    -1,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,    -1,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,    -1,   393,   394,    -1,   396,
      -1,   398,   399,   400,   401,   402,    -1,   404,   405,    -1,
      -1,   408,   409,   410,   411,   412,    -1,   414,   415,   416,
     417,   418,   419,   420,   421,    -1,    -1,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,    -1,   439,    -1,   441,   442,   443,   444,    -1,    -1,
     447,    -1,    -1,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     3,    -1,     5,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,    -1,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,
     169,   170,   171,    -1,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,    -1,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,    -1,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,
     219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,
     229,   230,    -1,    -1,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,    -1,
     259,   260,   261,   262,   263,    -1,   265,   266,    -1,   268,
      -1,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
      -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,
     289,    -1,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,    -1,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,    -1,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,    -1,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,    -1,   393,   394,    -1,   396,    -1,   398,
     399,   400,   401,   402,    -1,   404,   405,    -1,    -1,   408,
     409,   410,   411,   412,    -1,   414,   415,   416,   417,   418,
     419,   420,   421,    -1,    -1,   424,   425,   426,   427,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,    -1,
     439,    -1,   441,   442,   443,   444,    -1,    -1,   447,    -1,
      -1,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,
     171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,    -1,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,   214,    -1,   216,   217,   218,   219,   220,
      -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,
      -1,    -1,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,    -1,   259,   260,
     261,   262,   263,    -1,   265,   266,    -1,   268,    -1,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,    -1,    -1,
     281,   282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,    -1,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,    -1,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,    -1,   393,   394,    -1,   396,    -1,   398,   399,   400,
     401,   402,    -1,   404,   405,    -1,    -1,   408,   409,   410,
     411,   412,    -1,   414,   415,   416,   417,   418,   419,   420,
     421,    -1,    -1,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,    -1,   439,    -1,
     441,   442,   443,   444,    -1,    -1,   447,    -1,    -1,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,    -1,   259,   260,   261,   262,
     263,    -1,   265,   266,    -1,   268,    -1,   270,   271,   272,
     273,   274,   275,    -1,   277,   278,    -1,    -1,   281,   282,
     283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,    -1,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,    -1,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,    -1,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,    -1,
     393,   394,    -1,   396,    -1,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,    -1,   408,   409,   410,   411,   412,
      -1,   414,   415,   416,   417,   418,   419,   420,   421,    -1,
      -1,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,    -1,   439,    -1,   441,   442,
     443,   444,    -1,    -1,   447,    -1,    -1,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     3,    -1,
       5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    -1,    94,
      95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
      -1,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,    -1,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,
      -1,   216,   217,   218,   219,   220,    -1,    -1,   223,    -1,
     225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,    -1,   259,   260,   261,   262,   263,    -1,
     265,   266,    -1,   268,    -1,   270,   271,   272,   273,   274,
     275,    -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,
      -1,   286,   287,    -1,   289,    -1,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,    -1,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,    -1,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,    -1,   393,   394,
      -1,   396,    -1,   398,   399,   400,   401,   402,    -1,   404,
     405,    -1,    -1,   408,   409,   410,   411,   412,    -1,   414,
     415,   416,   417,   418,   419,   420,   421,    -1,    -1,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,    -1,   439,    -1,   441,   442,   443,   444,
      -1,    -1,   447,    -1,    -1,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     3,    -1,     5,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    -1,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    -1,    94,    95,    96,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,    -1,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,    -1,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,    -1,
      -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,    -1,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,
     217,   218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,
      -1,   228,   229,   230,    -1,    -1,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,    -1,   259,   260,   261,   262,   263,    -1,   265,   266,
      -1,   268,    -1,   270,   271,   272,   273,   274,   275,    -1,
     277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,
     287,    -1,   289,    -1,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,    -1,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,    -1,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,    -1,   393,   394,    -1,   396,
      -1,   398,   399,   400,   401,   402,    -1,   404,   405,    -1,
      -1,   408,   409,   410,   411,   412,    -1,   414,   415,   416,
     417,   418,   419,   420,   421,    -1,    -1,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,    -1,   439,    -1,   441,   442,   443,   444,    -1,    -1,
     447,    -1,    -1,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     3,    -1,     5,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,    -1,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,
     169,   170,   171,    -1,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,    -1,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,    -1,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,
     219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,
     229,   230,    -1,    -1,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,    -1,
     259,   260,   261,   262,   263,    -1,   265,   266,    -1,   268,
      -1,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
      -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,
     289,    -1,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,    -1,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,    -1,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,    -1,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,    -1,   393,   394,    -1,   396,    -1,   398,
     399,   400,   401,   402,    -1,   404,   405,    -1,    -1,   408,
     409,   410,   411,   412,    -1,   414,   415,   416,   417,   418,
     419,   420,   421,    -1,    -1,   424,   425,   426,   427,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,    -1,
     439,    -1,   441,   442,   443,   444,    -1,    -1,   447,    -1,
      -1,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    36,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,
     171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,    -1,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,   214,    -1,   216,   217,   218,   219,   220,
      -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,
      -1,    -1,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,    -1,   259,   260,
     261,   262,   263,    -1,   265,   266,    -1,   268,    -1,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,    -1,    -1,
     281,   282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,    -1,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,    -1,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,    -1,   393,   394,    -1,   396,    -1,   398,   399,   400,
     401,   402,    -1,   404,   405,    -1,    -1,   408,   409,   410,
     411,   412,    -1,   414,   415,   416,   417,   418,   419,   420,
     421,    -1,    -1,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,    -1,   439,    -1,
     441,   442,   443,   444,    -1,    -1,   447,    -1,    -1,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    36,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,    -1,   259,   260,   261,   262,
     263,    -1,   265,   266,    -1,   268,    -1,   270,   271,   272,
     273,   274,   275,    -1,   277,   278,    -1,    -1,   281,   282,
     283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,    -1,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,    -1,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,    -1,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,    -1,
     393,   394,    -1,   396,    -1,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,    -1,   408,   409,   410,   411,   412,
      -1,   414,   415,   416,   417,   418,   419,   420,   421,    -1,
      -1,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,    -1,   439,    -1,   441,   442,
     443,   444,    -1,    -1,   447,    -1,    -1,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     3,    -1,
       5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    -1,    94,
      95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
      -1,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,    -1,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,
      -1,   216,   217,   218,   219,   220,    -1,    -1,   223,    -1,
     225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,    -1,   259,   260,   261,   262,   263,    -1,
     265,   266,    -1,   268,    -1,   270,   271,   272,   273,   274,
     275,    -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,
      -1,   286,   287,    -1,   289,    -1,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,    -1,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,    -1,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,    -1,   393,   394,
      -1,   396,    -1,   398,   399,   400,   401,   402,    -1,   404,
     405,    -1,    -1,   408,   409,   410,   411,   412,    -1,   414,
     415,   416,   417,   418,   419,   420,   421,    -1,    -1,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,    -1,   439,    -1,   441,   442,   443,   444,
      -1,    -1,   447,    -1,    -1,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    -1,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    -1,    94,    95,    96,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,    -1,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,    -1,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,    -1,
      -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,    -1,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,
     217,   218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,
      -1,   228,   229,   230,    -1,    -1,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,    -1,   259,   260,   261,   262,   263,    -1,   265,   266,
      -1,   268,    -1,   270,   271,   272,   273,   274,   275,    -1,
     277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,
     287,    -1,   289,    -1,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,    -1,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,    -1,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,    -1,   393,   394,    -1,   396,
      -1,   398,   399,   400,   401,   402,    -1,   404,   405,    -1,
      -1,   408,   409,   410,   411,   412,    -1,   414,   415,   416,
     417,   418,   419,   420,   421,    -1,    -1,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,    -1,   439,    -1,   441,   442,   443,   444,    -1,    -1,
     447,    -1,    -1,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,    -1,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,
     169,   170,   171,    -1,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,    -1,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,    -1,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,
     219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,
     229,   230,    -1,    -1,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,    -1,
     259,   260,   261,   262,   263,    -1,   265,   266,    -1,   268,
      -1,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
      -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,
     289,    -1,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,    -1,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,    -1,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,    -1,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,    -1,   393,   394,    -1,   396,    -1,   398,
     399,   400,   401,   402,    -1,   404,   405,    -1,    -1,   408,
     409,   410,   411,   412,    -1,   414,   415,   416,   417,   418,
     419,   420,   421,    -1,    -1,   424,   425,   426,   427,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,    -1,
     439,    -1,   441,   442,   443,   444,    -1,    -1,   447,    -1,
      -1,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,
     171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,    -1,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,   214,    -1,   216,   217,   218,   219,   220,
      -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,
      -1,    -1,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,    -1,   259,   260,
     261,   262,   263,    -1,   265,   266,    -1,   268,    -1,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,    -1,    -1,
     281,   282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,    -1,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,    -1,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,    -1,   393,   394,    -1,   396,    -1,   398,   399,   400,
     401,   402,    -1,   404,   405,    -1,    -1,   408,   409,   410,
     411,   412,    -1,   414,   415,   416,   417,   418,   419,   420,
     421,    -1,    -1,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,    -1,   439,    -1,
     441,   442,   443,   444,    -1,    -1,   447,    -1,    -1,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,    -1,   259,   260,   261,   262,
     263,    -1,   265,   266,    -1,   268,    -1,   270,   271,   272,
     273,   274,   275,    -1,   277,   278,    -1,    -1,   281,   282,
     283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,    -1,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,    -1,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,    -1,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,    -1,
     393,   394,    -1,   396,    -1,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,    -1,   408,   409,   410,   411,   412,
      -1,   414,   415,   416,   417,   418,   419,   420,   421,    -1,
      -1,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,    -1,   439,    -1,   441,   442,
     443,   444,    -1,    -1,   447,    -1,    -1,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    -1,    94,
      95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
      -1,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,    -1,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,
      -1,   216,   217,   218,   219,   220,    -1,    -1,   223,    -1,
     225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,    -1,   259,   260,   261,   262,   263,    -1,
     265,   266,    -1,   268,    -1,   270,   271,   272,   273,   274,
     275,    -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,
      -1,   286,   287,    -1,   289,    -1,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,    -1,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,    -1,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,    -1,   393,   394,
      -1,   396,    -1,   398,   399,   400,   401,   402,    -1,   404,
     405,    -1,    -1,   408,   409,   410,   411,   412,    -1,   414,
     415,   416,   417,   418,   419,   420,   421,    -1,    -1,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,    -1,   439,    -1,   441,   442,   443,   444,
      -1,    -1,   447,    -1,    -1,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    -1,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    -1,    94,    95,    96,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,    -1,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,    -1,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,    -1,
      -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,    -1,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,
     217,   218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,
      -1,   228,   229,   230,    -1,    -1,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,    -1,   259,   260,   261,   262,   263,    -1,   265,   266,
      -1,   268,    -1,   270,   271,   272,   273,   274,   275,    -1,
     277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,
     287,    -1,   289,    -1,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,    -1,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,    -1,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,    -1,   393,   394,    -1,   396,
      -1,   398,   399,   400,   401,   402,    -1,   404,   405,    -1,
      -1,   408,   409,   410,   411,   412,    -1,   414,   415,   416,
     417,   418,   419,   420,   421,    -1,    -1,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,    -1,   439,    -1,   441,   442,   443,   444,    -1,    -1,
     447,    -1,    -1,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,    -1,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,
     169,   170,   171,    -1,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,    -1,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,    -1,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,
     219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,
     229,   230,    -1,    -1,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,    -1,
     259,   260,   261,   262,   263,    -1,   265,   266,    -1,   268,
      -1,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
      -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,
     289,    -1,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,    -1,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,    -1,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,    -1,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,    -1,   393,   394,    -1,   396,    -1,   398,
     399,   400,   401,   402,    -1,   404,   405,    -1,    -1,   408,
     409,   410,   411,   412,    -1,   414,   415,   416,   417,   418,
     419,   420,   421,    -1,    -1,   424,   425,   426,   427,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,    -1,
     439,    -1,   441,   442,   443,   444,    -1,    -1,   447,    -1,
      -1,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,
     171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,    -1,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,   214,    -1,   216,   217,   218,   219,   220,
      -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,
      -1,    -1,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,    -1,   259,   260,
     261,   262,   263,    -1,   265,   266,    -1,   268,    -1,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,    -1,    -1,
     281,   282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,    -1,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,    -1,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,    -1,   393,   394,    -1,   396,    -1,   398,   399,   400,
     401,   402,    -1,   404,   405,    -1,    -1,   408,   409,   410,
     411,   412,    -1,   414,   415,   416,   417,   418,   419,   420,
     421,    -1,    -1,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,    -1,   439,    -1,
     441,   442,   443,   444,    -1,    -1,   447,    -1,    -1,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    36,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,    -1,   259,   260,   261,   262,
     263,    -1,   265,   266,    -1,   268,    -1,   270,   271,   272,
     273,   274,   275,    -1,   277,   278,    -1,    -1,   281,   282,
     283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,    -1,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,    -1,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,    -1,    -1,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,    -1,
     393,   394,    -1,   396,    -1,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,    -1,   408,   409,   410,   411,   412,
      -1,   414,   415,   416,   417,   418,   419,   420,   421,    -1,
      -1,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,    -1,   439,    -1,   441,   442,
     443,   444,    -1,    -1,   447,    -1,    -1,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    -1,    94,
      95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
      -1,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,    -1,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,
      -1,   216,   217,   218,   219,   220,    -1,    -1,   223,    -1,
     225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,    -1,   259,   260,   261,   262,   263,    -1,
     265,   266,    -1,   268,    -1,   270,   271,   272,   273,   274,
     275,    -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,
      -1,   286,   287,    -1,   289,    -1,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,    -1,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,    -1,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,    -1,   393,   394,
      -1,   396,    -1,   398,   399,   400,   401,   402,    -1,   404,
     405,    -1,    -1,   408,   409,   410,   411,   412,    -1,   414,
     415,   416,   417,   418,   419,   420,   421,    -1,    -1,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,    -1,   439,    -1,   441,   442,   443,   444,
      -1,    -1,   447,    -1,    -1,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    -1,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    -1,    94,    95,    96,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,    -1,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,    -1,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,    -1,
      -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,    -1,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,
     217,   218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,
      -1,   228,   229,   230,    -1,    -1,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,    -1,   259,   260,   261,   262,   263,    -1,   265,   266,
      -1,   268,    -1,   270,   271,   272,   273,   274,   275,    -1,
     277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,
     287,    -1,   289,    -1,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,    -1,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,    -1,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,    -1,   393,   394,    -1,   396,
      -1,   398,   399,   400,   401,   402,    -1,   404,   405,    -1,
      -1,   408,   409,   410,   411,   412,    -1,   414,   415,   416,
     417,   418,   419,   420,   421,    -1,    -1,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,    -1,   439,    -1,   441,   442,   443,   444,    -1,    -1,
     447,    -1,    -1,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,    -1,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,
     169,   170,   171,    -1,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,    -1,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,    -1,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,
     219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,
     229,   230,    -1,    -1,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,    -1,
     259,   260,   261,   262,   263,    -1,   265,   266,    -1,   268,
      -1,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
      -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,
     289,    -1,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,    -1,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,    -1,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,    -1,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,    -1,   393,   394,    -1,   396,    -1,   398,
     399,   400,   401,   402,    -1,   404,   405,    -1,    -1,   408,
     409,   410,   411,   412,    -1,   414,   415,   416,   417,   418,
     419,   420,   421,    -1,    -1,   424,   425,   426,   427,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,    -1,
     439,    -1,   441,   442,   443,   444,    -1,    -1,   447,    -1,
      -1,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,
     171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,    -1,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,   214,    -1,   216,   217,   218,   219,   220,
      -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,
      -1,    -1,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,    -1,   259,   260,
     261,   262,   263,    -1,   265,   266,    -1,   268,    -1,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,    -1,    -1,
     281,   282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,    -1,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,    -1,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,    -1,   393,   394,    -1,   396,    -1,   398,   399,   400,
     401,   402,    -1,   404,   405,    -1,    -1,   408,   409,   410,
     411,   412,    -1,   414,   415,   416,   417,   418,   419,   420,
     421,    -1,    -1,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,   436,   437,    -1,   439,    -1,
     441,   442,   443,   444,    -1,    -1,   447,    -1,    -1,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    -1,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    -1,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      93,    94,    95,    96,    -1,    -1,    -1,   100,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,    -1,   150,   151,   152,
     153,    -1,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,   166,    -1,   168,   169,   170,   171,   172,
     173,    -1,   175,    -1,    -1,   178,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,   200,    -1,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,    -1,    -1,
     223,   224,   225,   226,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
      -1,    -1,   265,   266,   267,   268,    -1,    -1,   271,   272,
     273,   274,   275,    -1,   277,   278,    -1,    -1,   281,   282,
     283,    -1,    -1,   286,    -1,   288,   289,   290,    -1,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,    -1,
     303,   304,    -1,   306,   307,    -1,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,    -1,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,    -1,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,    -1,   391,    -1,
     393,   394,    -1,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,    -1,    -1,   408,   409,    -1,   411,    -1,
      -1,   414,   415,   416,   417,   418,   419,   420,   421,    -1,
      -1,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,    -1,   437,    -1,   439,   440,   441,   442,
     443,   444,    -1,    -1,   447,    -1,    -1,   450,   451,   452,
     453,   454,   455,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   467,   468,   469,   470,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    -1,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    -1,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    93,    94,    95,    96,    -1,    -1,    -1,
     100,    -1,    -1,    -1,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,    -1,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,    -1,
     150,   151,   152,   153,    -1,    -1,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,   166,    -1,   168,   169,
     170,   171,   172,   173,    -1,   175,    -1,    -1,   178,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
     200,    -1,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,    -1,    -1,   223,   224,   225,   226,    -1,   228,   229,
     230,    -1,    -1,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,    -1,    -1,   265,   266,   267,   268,    -1,
      -1,   271,   272,   273,   274,   275,    -1,   277,   278,    -1,
      -1,   281,   282,   283,    -1,    -1,   286,    -1,   288,   289,
     290,    -1,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,    -1,   303,   304,    -1,   306,   307,    -1,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
      -1,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
      -1,   391,    -1,   393,   394,    -1,   396,   397,   398,   399,
     400,   401,   402,    -1,   404,   405,    -1,    -1,   408,   409,
      -1,   411,    -1,    -1,   414,   415,   416,   417,   418,   419,
     420,   421,    -1,    -1,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,    -1,   437,    -1,   439,
     440,   441,   442,   443,   444,    -1,    -1,   447,    -1,    -1,
     450,   451,   452,   453,   454,   455,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   467,   468,   469,
     470,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    -1,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    -1,    94,    95,    96,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,    -1,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,    -1,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,    -1,
      -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,    -1,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,
     217,   218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,
      -1,   228,   229,   230,    -1,    -1,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,    -1,   259,   260,   261,   262,   263,    -1,   265,   266,
      -1,   268,    -1,   270,   271,   272,   273,   274,   275,    -1,
     277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,
     287,    -1,   289,    -1,   291,   292,   293,   294,   295,   296,
     297,    -1,   299,   300,   301,    -1,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,    -1,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,    -1,   344,   345,   346,
     347,    -1,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,    -1,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,    -1,   393,   394,    -1,   396,
      -1,   398,   399,   400,   401,   402,    -1,   404,   405,    -1,
      -1,   408,   409,   410,   411,   412,    -1,   414,   415,   416,
     417,   418,   419,   420,   421,    -1,    -1,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,    -1,   439,    -1,   441,   442,   443,   444,    -1,    -1,
     447,    -1,    -1,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    44,    45,    46,    47,    -1,
      49,    50,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    -1,    -1,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    93,    94,    95,    96,    -1,    -1,
      -1,   100,    -1,    -1,    -1,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
      -1,   150,   151,   152,   153,    -1,    -1,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,   166,    -1,   168,
     169,   170,   171,   172,   173,    -1,   175,    -1,    -1,   178,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,   200,    -1,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,    -1,    -1,   223,   224,   225,   226,    -1,   228,
     229,   230,    -1,    -1,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,    -1,    -1,   265,   266,   267,   268,
      -1,    -1,   271,   272,   273,   274,   275,    -1,   277,   278,
      -1,    -1,   281,   282,   283,    -1,    -1,   286,    -1,   288,
     289,   290,    -1,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,    -1,   303,   304,    -1,   306,   307,    -1,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,    -1,   341,   342,   343,   344,   345,   346,    -1,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,    -1,   366,    -1,   368,
     369,   370,   371,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,    -1,   391,    -1,   393,   394,    -1,   396,   397,   398,
     399,   400,   401,   402,    -1,   404,   405,    -1,    -1,   408,
     409,    -1,   411,    -1,    -1,   414,   415,   416,   417,   418,
     419,   420,   421,    -1,    -1,   424,   425,   426,   427,   428,
      -1,    -1,   431,   432,   433,   434,   435,    -1,   437,    -1,
     439,   440,   441,   442,   443,   444,    -1,    -1,   447,    -1,
      -1,   450,   451,   452,   453,   454,   455,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   467,   468,
     469,   470,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    -1,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    -1,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    -1,    -1,    -1,   100,    -1,    -1,    -1,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,    -1,   150,   151,   152,   153,    -1,    -1,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,    -1,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,    -1,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,    -1,    -1,   223,   224,   225,
     226,    -1,   228,   229,   230,    -1,    -1,   233,   234,   235,
     236,   237,    -1,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,    -1,    -1,   265,
     266,   267,   268,    -1,    -1,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,    -1,   288,   289,   290,    -1,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,    -1,
     306,   307,    -1,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,   343,   344,   345,
     346,    -1,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,    -1,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,    -1,   389,    -1,   391,    -1,   393,   394,    -1,
     396,   397,   398,   399,   400,   401,   402,    -1,   404,   405,
      -1,    -1,   408,   409,    -1,   411,    -1,    -1,   414,   415,
     416,   417,   418,   419,   420,   421,    -1,    -1,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
      -1,   437,    -1,   439,   440,   441,   442,   443,   444,    -1,
      -1,   447,    -1,    -1,   450,   451,   452,   453,   454,   455,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   467,   468,   469,   470
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    19,    29,    31,    32,    47,    56,    68,    79,    90,
      92,   110,   124,   134,   140,   148,   150,   151,   163,   190,
     229,   306,   309,   337,   345,   359,   366,   370,   380,   391,
     395,   431,   436,   449,   473,   487,   498,   499,   500,   501,
     512,   513,   516,   518,   522,   536,   537,   539,   541,   548,
     550,   596,   603,   606,   607,   624,   625,   626,   627,   628,
     629,   673,   810,   813,   816,   823,   824,   825,   826,   827,
     834,   838,   844,   846,   851,   855,   856,   859,   860,   862,
     863,   865,   408,   452,   549,   194,   352,   360,   395,   442,
     549,     3,    19,    20,    21,    22,    23,    24,    25,    26,
      28,    29,    30,    38,    39,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    54,    55,    56,
      57,    58,    59,    62,    63,    64,    65,    66,    68,    69,
      70,    71,    72,    74,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    86,    87,    88,    89,    90,    91,    93,
      94,    95,    96,   100,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   115,   117,   118,   119,   120,   121,
     122,   124,   125,   126,   127,   128,   131,   132,   133,   134,
     135,   137,   138,   139,   141,   142,   143,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   156,   158,   159,
     160,   161,   163,   165,   166,   168,   169,   170,   171,   172,
     173,   175,   177,   178,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   192,   193,   194,   195,   196,
     197,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     209,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   223,   224,   225,   226,   228,   229,   230,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   265,
     266,   267,   268,   270,   271,   272,   273,   274,   275,   277,
     278,   281,   282,   283,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   360,   361,   362,   363,   364,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   393,   394,   396,   397,   398,   399,   400,
     401,   402,   404,   405,   408,   409,   410,   411,   412,   414,
     415,   416,   417,   418,   419,   420,   421,   424,   425,   426,
     427,   428,   431,   432,   433,   434,   435,   436,   437,   439,
     440,   441,   442,   443,   444,   447,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   729,   795,   799,
     802,   868,   869,   870,   549,    50,   487,   619,   169,   173,
     230,   237,   284,   352,   399,   401,   417,   423,   426,   594,
     604,   822,     3,    27,   238,   309,   388,   793,   799,   868,
      21,    74,    89,   143,   152,   164,   169,   194,   237,   241,
     304,   318,   349,   352,   360,   363,   382,   395,   402,   411,
     417,   442,   597,   598,   601,   549,   793,    92,   440,   487,
     518,   606,   624,   830,   834,   851,   865,   107,    68,   107,
       5,   798,   845,   799,   793,    27,   404,   408,   799,   857,
     858,   861,   549,    27,   129,   636,   637,   173,   230,   352,
     364,   404,   839,   840,   861,   549,   436,   624,   629,   861,
       5,   280,   684,   791,   799,   800,   168,   487,   848,   487,
     325,   630,   631,   793,   630,   625,   626,     0,   490,   119,
     204,   428,   144,   208,   285,   422,   638,   639,   625,   627,
     628,   491,   440,   828,    27,   404,   408,   624,   861,   185,
     791,   793,   185,   791,   185,   684,   185,   791,   487,   485,
     489,   777,   779,   518,   606,   624,   812,   851,   791,   399,
     401,   399,   401,   335,   185,   799,   799,   804,   325,   360,
     395,   442,   791,   194,    27,   793,   243,   411,   106,   395,
     442,   355,     3,    44,    49,    50,    51,    52,    64,    65,
      74,    81,    93,   100,   111,   112,   133,   160,   166,   168,
     172,   185,   186,   200,   206,   207,   209,   212,   213,   215,
     224,   226,   238,   257,   258,   259,   267,   272,   288,   290,
     322,   343,   347,   367,   371,   374,   388,   397,   404,   405,
     416,   437,   440,   602,   695,   696,   698,   700,   702,   704,
     706,   707,   708,   710,   711,   712,   714,   715,   803,   868,
     871,   185,   599,   804,   185,   792,   793,   185,   793,   487,
     540,   594,   830,     3,    48,    49,    51,    52,    64,    65,
      72,   111,   112,   149,   154,   160,   177,   201,   206,   207,
     209,   238,   257,   259,   263,   270,   272,   287,   291,   305,
     308,   322,   347,   367,   374,   388,   390,   404,   405,   410,
     412,   416,   436,   437,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   831,   833,   834,   836,   837,
     868,   872,   828,   798,   798,   476,   487,   487,   811,   470,
     214,   489,   279,     4,     6,     7,     8,     9,    10,    35,
      49,    51,    52,    60,    61,    64,    65,    72,    74,    97,
      98,    99,   100,   101,   102,   103,   111,   112,   114,   149,
     154,   155,   160,   206,   207,   209,   231,   232,   257,   259,
     264,   269,   270,   272,   281,   291,   305,   322,   347,   365,
     374,   390,   404,   405,   410,   412,   413,   416,   429,   437,
     471,   478,   479,   480,   485,   487,   492,   494,   495,   625,
     699,   702,   705,   706,   707,   709,   710,   711,   714,   715,
     726,   728,   729,   730,   732,   745,   746,   752,   771,   776,
     783,   784,   795,   796,   797,   798,   799,   782,   783,   839,
     839,   798,   839,   470,   167,   406,   476,   487,   791,   480,
     779,     3,   166,   168,   440,   834,   847,   849,   166,   850,
     726,   756,   799,   630,   491,   487,   806,   488,   488,   500,
     167,   210,   684,   852,    27,   129,   635,   635,    54,   635,
     157,   162,   227,   276,   644,   646,   647,   666,   668,   669,
     670,   638,   639,   487,   791,   470,   214,   149,    23,    29,
     134,   283,   333,   337,   366,   433,   506,   509,   510,   333,
     149,    36,    55,   105,   193,   242,   250,   262,   293,   333,
     338,   360,   366,   380,   509,   542,   545,   149,   333,   366,
     509,   149,   333,   366,   509,     3,    27,    44,    50,    74,
      81,    93,   100,   129,   166,   168,   172,   186,   200,   212,
     213,   215,   224,   226,   238,   258,   267,   288,   290,   343,
     371,   388,   397,   416,   438,   440,   480,   488,   726,   758,
     759,   801,   807,   868,   873,   726,   778,     3,    27,    31,
      32,    33,    34,    35,    36,    37,    40,    53,    60,    61,
      67,    73,    75,    85,    92,    97,    98,    99,   101,   102,
     103,   114,   116,   123,   129,   130,   136,   140,   144,   155,
     157,   162,   164,   167,   174,   176,   179,   191,   198,   208,
     210,   221,   222,   227,   231,   232,   264,   269,   276,   279,
     280,   284,   285,   302,   312,   327,   340,   359,   365,   376,
     392,   395,   403,   406,   407,   413,   422,   423,   429,   430,
     436,   438,   445,   446,   448,   449,   794,   808,   868,   872,
     874,   777,   488,   487,   584,   594,   264,   814,   489,   805,
      36,   442,   185,   791,   185,   791,   867,   791,   487,   605,
      81,   819,   453,    82,   126,   296,   400,   439,   713,   713,
     713,   487,   701,   701,   308,   487,   703,   149,   487,    64,
      65,   713,   701,   698,   451,   473,   487,   716,   487,   716,
      58,   339,   491,   600,   487,    35,   697,   487,   108,   109,
     182,   183,   244,   245,   246,   247,   248,   249,   252,   253,
     356,   357,   467,   468,   487,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   701,   149,   491,   600,   149,   491,
     600,   149,   279,   756,   395,   488,   491,     4,   155,   279,
     413,   478,   479,   544,   547,   797,   798,   829,   831,   832,
     835,   830,   487,   614,   618,   544,   835,   841,   843,   758,
     696,   760,    36,   225,   799,   487,   780,   485,   726,   775,
     487,   487,   162,   487,   487,   625,   487,   487,   487,   726,
     487,   487,   487,   487,   487,   487,   487,   487,   487,   726,
     726,   726,   145,   785,   786,   756,   757,   625,   726,   756,
     747,   748,   799,   800,     9,   780,   779,   798,   487,   797,
     798,     3,     8,    11,    16,    17,    18,    33,    36,    41,
      48,    73,   172,   186,   191,   212,   213,   226,   264,   267,
     281,   284,   371,   471,   474,   475,   476,   478,   479,   480,
     481,   482,   483,   750,   751,   752,   754,   450,   733,   780,
      15,   290,   726,    15,   210,   491,   632,   487,   798,   780,
     489,   779,   632,     3,   114,   230,   544,   715,   798,   842,
      96,   114,   843,   114,   843,   791,   488,   491,   828,   488,
     491,   631,   792,    36,   852,   520,   791,    36,   799,   366,
     627,   627,   640,   641,   726,   627,   159,   261,   660,   216,
     262,   321,   369,   428,    27,   655,   726,   478,   479,   656,
     657,   726,   728,   666,   667,   647,   646,   644,   645,   162,
     669,   274,   671,   644,   666,   756,   806,   225,   791,    67,
      75,    85,   164,   185,   312,   423,   565,   575,   590,   799,
      75,    85,   517,    85,   517,   487,   406,   487,   563,   236,
     426,   563,    85,   491,   406,   791,   698,   544,    54,   546,
     544,   544,   105,   242,   250,    54,   406,   449,   473,   543,
     255,   352,   543,   545,   684,    85,   406,   517,   352,   791,
     406,   352,   758,   758,   759,   488,   491,   638,   639,    13,
      14,   486,   496,   406,   583,   588,   799,   449,   617,   325,
     395,   442,   149,    92,   537,   550,   815,   816,   863,   794,
     489,   141,   791,   264,   538,   542,   264,   487,   584,    36,
     584,   488,   758,    36,   185,   578,   799,   820,   487,   756,
     797,   602,   760,   713,   713,    35,   697,   404,   404,   797,
     797,   696,   694,   799,   485,   485,   797,   797,   406,   406,
     406,   406,   599,   804,   792,   793,   793,   804,   488,   185,
     791,   867,   830,   836,     4,   797,     4,   797,   616,   623,
     808,    50,    94,   120,   138,   142,   163,   166,   180,   269,
     277,   319,   620,   491,   488,   491,   488,   491,   812,   756,
     777,   757,   445,   772,   773,   726,   756,   487,   797,   797,
       3,   717,   718,   719,   720,   721,   722,   723,   724,   761,
     762,   798,   797,   797,   726,     8,    16,    17,    18,   474,
     475,   476,   478,   479,   480,   481,   482,   483,   750,   755,
     799,   726,   763,   478,   479,   487,   727,   728,   752,   765,
     776,   488,   756,   726,   756,   766,   726,    53,   167,   222,
     407,   726,   756,   769,   726,   487,   799,   335,   789,   486,
     488,   491,   491,   493,   496,   726,   725,   725,   696,   726,
     726,   726,   726,     5,   808,   809,   404,    40,   392,   781,
     804,   726,   726,   487,   625,   770,   129,   155,   264,   269,
     274,   413,   424,   726,   269,   487,   726,   406,    48,   172,
     186,   191,   226,   371,   726,   726,   726,   726,   726,   726,
     726,   726,   726,   726,    27,    34,   376,   749,   176,   158,
     734,   726,   347,   487,   746,   726,   173,   230,   395,   399,
     401,   426,   633,   791,   784,   167,   674,   758,   480,   674,
     487,   798,   488,   791,   847,   791,   855,   726,   488,   487,
     430,   854,   114,   292,   487,   519,   624,    36,   799,   487,
     524,   533,   535,   799,   491,    37,   123,   430,   642,   347,
     348,   478,   479,   657,   659,   728,   369,   216,   280,   491,
       4,   658,   797,   658,   347,   348,   659,   790,   791,   268,
     373,   672,   667,   645,   488,   333,   509,   487,   185,   575,
     793,   216,   264,   216,   430,   487,   568,   696,   793,   799,
     185,   793,   185,   799,    23,   134,   366,   505,   508,   558,
     573,   808,   793,   567,   587,   808,   793,   506,   793,   333,
     366,   509,   542,   544,   804,   793,   544,   804,   793,   544,
     333,   366,   509,   793,   793,   793,   793,   333,   366,   509,
     793,   793,   638,   638,   638,   438,   759,   488,   726,   726,
     726,   778,   317,   613,   488,   491,   277,   167,   406,   608,
     442,   791,   791,   799,   594,   794,   487,   487,   149,   149,
     226,   565,   575,   579,   582,   591,   593,   799,   449,   451,
     570,   148,   624,   449,   821,   488,   726,   264,   279,   756,
     488,   488,   600,   488,   485,   470,   470,   488,   488,   488,
     491,   696,   797,   486,   797,   488,   488,   718,   720,   721,
     722,   721,   722,   722,   600,   600,   279,   600,   264,    36,
     488,   491,   480,   487,   544,   615,   835,    36,   612,   798,
     612,   264,   269,   319,   612,   612,   841,   696,   488,   486,
     726,   136,   773,   774,    36,   488,   726,   488,   488,   488,
     167,   488,   488,   491,   488,   489,   302,   764,   488,   727,
     727,   726,    11,    16,    17,    18,   191,   212,   281,   474,
     475,   476,   478,   479,   480,   481,   482,   483,   752,   727,
     488,   488,   162,   167,   767,   768,   488,    36,   769,   756,
     769,   769,   167,   488,    36,   792,   487,   726,   787,   780,
     726,   747,   726,   488,   470,   727,   727,   142,   756,   167,
     129,   155,   269,   274,   413,   424,   487,   142,   755,   726,
     392,   781,   726,   770,   726,   406,   487,   625,   487,   487,
     289,   738,   399,   401,   399,   401,   791,   395,   634,   634,
     634,   221,   348,   487,   625,   675,   676,   677,   684,   685,
     729,   731,   732,   799,   446,   690,   638,   786,   690,   797,
     725,   806,   812,   675,   446,   853,   436,   394,   429,   528,
     523,   532,   799,   279,   525,   799,   529,   535,   491,   674,
     476,   780,   641,   281,   750,   753,   472,   643,     4,   797,
     659,   280,   428,   656,   491,   235,   406,   726,   264,   590,
     487,   149,   487,   568,   194,   588,   551,   283,   561,   551,
      23,   134,   337,   338,   366,   502,   503,   504,   510,   511,
     149,   600,   149,   600,   558,   573,   558,   488,   491,   554,
     798,   488,   491,   476,   489,   406,   352,    85,   406,   517,
     352,   406,   406,   406,   352,   488,   488,   488,   759,   486,
     383,   384,   622,   798,   583,   613,   791,   487,   584,   814,
     395,   514,   515,   798,   588,   791,   791,   867,   791,   488,
     491,   277,   563,   277,   279,   562,   793,   449,   866,   563,
      36,   149,   791,   488,   697,   797,   716,   716,   697,   799,
     486,   486,   804,   149,   616,   610,   621,   835,   798,   798,
     269,   588,   480,   588,   798,   798,   403,   726,   140,   696,
     488,   726,   726,   755,   726,   767,   696,   727,   727,   727,
     727,   129,   264,   274,   727,   727,   727,   727,   727,   727,
     727,   727,   727,   727,   726,   726,   768,   767,   696,   488,
     488,   488,   756,   696,   488,   726,   787,   788,    36,   488,
     725,   726,    33,    33,   726,   488,   726,   167,   487,   760,
     726,   488,   142,   727,   727,   142,   142,   726,   726,   639,
     446,   487,   739,   799,   634,   634,   634,   634,   791,   791,
     791,   625,   685,   167,   625,   676,   677,    36,   678,   679,
     799,   491,    93,   168,   200,   215,   224,   258,   343,   681,
     679,    36,   678,   680,   799,   473,   689,   779,   726,   176,
     661,   488,   789,   661,   488,   488,   726,   340,   527,   435,
     488,   491,   780,    83,   527,   488,   491,   524,   853,   726,
     487,   643,   159,   220,   280,   791,   793,   488,   149,   588,
     575,   588,   551,   578,   488,   116,   198,   262,   264,   574,
     487,   585,   171,   114,   184,   264,   563,   543,   106,   114,
     171,   264,   382,   385,   545,   563,   366,   504,   417,   793,
     799,   508,   587,     3,    44,    50,    74,    81,    93,   100,
     166,   168,   172,   186,   200,   212,   213,   215,   224,   226,
     238,   258,   263,   267,   281,   288,   290,   343,   367,   371,
     388,   397,   416,   440,   478,   479,   544,   552,   589,   696,
     753,   798,   801,   868,   874,   808,   793,   793,   793,   793,
     793,   793,   793,   793,   793,   793,   638,   543,   622,   487,
     582,   821,   185,   791,   488,   491,   488,   538,   487,    36,
     572,   570,   579,    79,   540,   106,   262,   624,   578,   430,
     818,   486,   696,   600,   867,   488,   491,   588,   726,   488,
     488,   768,   167,   129,   274,   487,   488,   488,   488,   491,
     799,   726,   726,   726,   760,   488,   726,    33,    33,   726,
     726,   142,   488,   488,   726,   740,   799,   791,   791,   791,
     791,   679,   680,   487,   488,   799,   800,   397,   652,   653,
     487,   676,   215,   288,   682,   676,   682,   215,   681,   682,
     215,   653,   487,   799,   653,   487,   286,    54,   179,   665,
     798,   665,   798,   783,   624,   292,   624,   523,   279,   487,
     521,   476,   535,   527,   755,   551,   575,   488,   488,   449,
     581,   117,   187,   196,   116,   432,   558,   576,    67,    73,
      85,   114,   116,   171,   198,   264,   269,   312,   327,   423,
     556,   557,   569,    30,    54,   595,   185,   269,   544,   726,
     595,   269,   478,   479,   547,   799,   696,   600,   600,   238,
     388,   801,   805,   476,   406,   406,   488,   614,   430,   609,
     611,   588,   488,    36,   264,   487,   798,   821,   582,   148,
     624,   146,   192,   562,   119,   134,   311,   866,   106,   449,
     864,   279,   799,   817,   487,    36,   621,   727,   167,   487,
     760,   787,   488,   726,   726,   726,   488,   298,   741,   686,
     687,   731,   678,   487,     4,     9,   648,   650,   651,   799,
     792,   676,   279,   430,   683,   676,   215,   676,   691,   692,
     799,   487,   691,   799,   487,   662,   663,   664,   726,   726,
     448,   735,   735,   528,    85,   487,   526,   534,   731,   799,
     130,   726,   488,   327,   581,   487,   571,   551,   488,   491,
     487,   804,   793,   727,   595,   117,   187,   116,   269,   216,
     791,   581,   114,    36,   149,    73,   693,   805,   482,   552,
     793,   793,   543,   121,   488,   570,   624,   149,    36,   488,
     793,   866,    27,    78,    86,   115,   184,   195,   382,   385,
     566,   566,   348,   348,    59,    67,   230,   791,   534,   727,
     760,   488,    54,   638,   488,   491,    36,   688,   792,   301,
     482,   301,   348,   482,   487,   487,   488,   726,   487,   676,
     683,   488,   491,   696,   691,   488,   488,   491,   736,   737,
     799,   430,   649,   649,   435,   793,   726,   488,   491,    73,
     530,   530,   265,   428,   791,   551,   577,   580,   808,   558,
     726,   264,   557,    36,   581,   584,   184,   804,   430,   507,
     482,   417,   614,   798,   821,   562,   864,   791,   624,   570,
     540,    67,   282,    67,   818,   488,   488,   756,   320,   348,
     742,   689,   686,   487,   488,   799,   648,   792,   692,   693,
     488,   663,   491,    36,   350,   624,   488,   690,   526,   804,
     531,   804,   531,   366,   584,   488,   491,   476,   488,   184,
     240,   592,   487,   553,   726,   417,    36,   487,   864,   562,
     866,   282,   282,   487,   821,    48,    96,   419,   726,   743,
     744,   743,   488,   691,   488,   491,   488,   488,   737,   739,
     651,   530,   642,   642,   533,   592,   580,   552,   262,   564,
     553,   168,   297,   372,   279,   559,   560,   586,   542,   624,
     534,   690,   744,   347,   161,   307,   161,   307,   488,     9,
     334,   654,   531,   643,   643,   690,   560,   196,   119,   428,
     279,   586,   279,   559,   488,   864,   488,    33,   488,   487,
     642,   551,    58,   262,   339,   366,   555,   555,   821,   744,
       9,   643,    22,   114,   269,   690,   488
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */

#define YYFAIL		goto yyerrlab

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)					\
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    {								\
      yychar = (Token);						\
      yylval = (Value);						\
      yytoken = YYTRANSLATE (yychar);				\
      YYPOPSTACK (1);						\
      goto yybackup;						\
    }								\
  else								\
    {								\
      yyerror (&yylloc, yyscanner, YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (YYID (0))


#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#define YYRHSLOC(Rhs, K) ((Rhs)[K])
#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)				\
    do									\
      if (YYID (N))                                                    \
	{								\
	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
	}								\
      else								\
	{								\
	  (Current).first_line   = (Current).last_line   =		\
	    YYRHSLOC (Rhs, 0).last_line;				\
	  (Current).first_column = (Current).last_column =		\
	    YYRHSLOC (Rhs, 0).last_column;				\
	}								\
    while (YYID (0))
#endif


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
#  define YY_LOCATION_PRINT(File, Loc)			\
     fprintf (File, "%d.%d-%d.%d",			\
	      (Loc).first_line, (Loc).first_column,	\
	      (Loc).last_line,  (Loc).last_column)
# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */

#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, &yylloc, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval, &yylloc, yyscanner)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (YYID (0))

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
do {									  \
  if (yydebug)								  \
    {									  \
      YYFPRINTF (stderr, "%s ", Title);					  \
      yy_symbol_print (stderr,						  \
		  Type, Value, Location, yyscanner); \
      YYFPRINTF (stderr, "\n");						  \
    }									  \
} while (YYID (0))


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (!yyvaluep)
    return;
  YYUSE (yylocationp);
  YYUSE (yyscanner);
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# else
  YYUSE (yyoutput);
# endif
  switch (yytype)
    {
      default:
	break;
    }
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
#else
static void
yy_stack_print (bottom, top)
    yytype_int16 *bottom;
    yytype_int16 *top;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (; bottom <= top; ++bottom)
    YYFPRINTF (stderr, " %d", *bottom);
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (YYID (0))


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_reduce_print (YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, core_yyscan_t yyscanner)
#else
static void
yy_reduce_print (yyvsp, yylsp, yyrule, yyscanner)
    YYSTYPE *yyvsp;
    YYLTYPE *yylsp;
    int yyrule;
    core_yyscan_t yyscanner;
#endif
{
  int yynrhs = yyr2[yyrule];
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
	     yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      fprintf (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
		       &(yyvsp[(yyi + 1) - (yynrhs)])
		       , &(yylsp[(yyi + 1) - (yynrhs)])		       , yyscanner);
      fprintf (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (yyvsp, yylsp, Rule, yyscanner); \
} while (YYID (0))

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif



#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static YYSIZE_T
yystrlen (const char *yystr)
#else
static YYSIZE_T
yystrlen (yystr)
    const char *yystr;
#endif
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static char *
yystpcpy (char *yydest, const char *yysrc)
#else
static char *
yystpcpy (yydest, yysrc)
    char *yydest;
    const char *yysrc;
#endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into YYRESULT an error message about the unexpected token
   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
   including the terminating null byte.  If YYRESULT is null, do not
   copy anything; just return the number of bytes that would be
   copied.  As a special case, return 0 if an ordinary "syntax error"
   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
   size calculation.  */
static YYSIZE_T
yysyntax_error (char *yyresult, int yystate, int yychar)
{
  int yyn = yypact[yystate];

  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
    return 0;
  else
    {
      int yytype = YYTRANSLATE (yychar);
      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
      YYSIZE_T yysize = yysize0;
      YYSIZE_T yysize1;
      int yysize_overflow = 0;
      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
      int yyx;

# if 0
      /* This is so xgettext sees the translatable formats that are
	 constructed on the fly.  */
      YY_("syntax error, unexpected %s");
      YY_("syntax error, unexpected %s, expecting %s");
      YY_("syntax error, unexpected %s, expecting %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
# endif
      char *yyfmt;
      char const *yyf;
      static char const yyunexpected[] = "syntax error, unexpected %s";
      static char const yyexpecting[] = ", expecting %s";
      static char const yyor[] = " or %s";
      char yyformat[sizeof yyunexpected
		    + sizeof yyexpecting - 1
		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
		       * (sizeof yyor - 1))];
      char const *yyprefix = yyexpecting;

      /* Start YYX at -YYN if negative to avoid negative indexes in
	 YYCHECK.  */
      int yyxbegin = yyn < 0 ? -yyn : 0;

      /* Stay within bounds of both yycheck and yytname.  */
      int yychecklim = YYLAST - yyn + 1;
      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
      int yycount = 1;

      yyarg[0] = yytname[yytype];
      yyfmt = yystpcpy (yyformat, yyunexpected);

      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
	  {
	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
	      {
		yycount = 1;
		yysize = yysize0;
		yyformat[sizeof yyunexpected - 1] = '\0';
		break;
	      }
	    yyarg[yycount++] = yytname[yyx];
	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
	    yysize_overflow |= (yysize1 < yysize);
	    yysize = yysize1;
	    yyfmt = yystpcpy (yyfmt, yyprefix);
	    yyprefix = yyor;
	  }

      yyf = YY_(yyformat);
      yysize1 = yysize + yystrlen (yyf);
      yysize_overflow |= (yysize1 < yysize);
      yysize = yysize1;

      if (yysize_overflow)
	return YYSIZE_MAXIMUM;

      if (yyresult)
	{
	  /* Avoid sprintf, as that infringes on the user's name space.
	     Don't have undefined behavior even if the translation
	     produced a string with the wrong number of "%s"s.  */
	  char *yyp = yyresult;
	  int yyi = 0;
	  while ((*yyp = *yyf) != '\0')
	    {
	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
		{
		  yyp += yytnamerr (yyp, yyarg[yyi++]);
		  yyf += 2;
		}
	      else
		{
		  yyp++;
		  yyf++;
		}
	    }
	}
      return yysize;
    }
}
#endif /* YYERROR_VERBOSE */


/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, core_yyscan_t yyscanner)
#else
static void
yydestruct (yymsg, yytype, yyvaluep, yylocationp, yyscanner)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
    YYLTYPE *yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (yyscanner);

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
	break;
    }
}


/* Prevent warnings from -Wmissing-prototypes.  */

#ifdef YYPARSE_PARAM
#if defined __STDC__ || defined __cplusplus
int yyparse (void *YYPARSE_PARAM);
#else
int yyparse ();
#endif
#else /* ! YYPARSE_PARAM */
#if defined __STDC__ || defined __cplusplus
int yyparse (core_yyscan_t yyscanner);
#else
int yyparse ();
#endif
#endif /* ! YYPARSE_PARAM */






/*----------.
| yyparse.  |
`----------*/

#ifdef YYPARSE_PARAM
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void *YYPARSE_PARAM)
#else
int
yyparse (YYPARSE_PARAM)
    void *YYPARSE_PARAM;
#endif
#else /* ! YYPARSE_PARAM */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (core_yyscan_t yyscanner)
#else
int
yyparse (yyscanner)
    core_yyscan_t yyscanner;
#endif
#endif
{
  /* The look-ahead symbol.  */
int yychar;

/* The semantic value of the look-ahead symbol.  */
YYSTYPE yylval;

/* Number of syntax errors so far.  */
int yynerrs;
/* Location data for the look-ahead symbol.  */
YYLTYPE yylloc;

  int yystate;
  int yyn;
  int yyresult;
  /* Number of tokens to shift before error messages enabled.  */
  int yyerrstatus;
  /* Look-ahead token as an internal (translated) token number.  */
  int yytoken = 0;
#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

  /* Three stacks and their tools:
     `yyss': related to states,
     `yyvs': related to semantic values,
     `yyls': related to locations.

     Refer to the stacks thru separate pointers, to allow yyoverflow
     to reallocate them elsewhere.  */

  /* The state stack.  */
  yytype_int16 yyssa[YYINITDEPTH];
  yytype_int16 *yyss = yyssa;
  yytype_int16 *yyssp;

  /* The semantic value stack.  */
  YYSTYPE yyvsa[YYINITDEPTH];
  YYSTYPE *yyvs = yyvsa;
  YYSTYPE *yyvsp;

  /* The location stack.  */
  YYLTYPE yylsa[YYINITDEPTH];
  YYLTYPE *yyls = yylsa;
  YYLTYPE *yylsp;
  /* The locations where the error started and ended.  */
  YYLTYPE yyerror_range[2];

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  YYSIZE_T yystacksize = YYINITDEPTH;

  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY;		/* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */

  yyssp = yyss;
  yyvsp = yyvs;
  yylsp = yyls;
#if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  /* Initialize the default location before parsing starts.  */
  yylloc.first_line   = yylloc.last_line   = 1;
  yylloc.first_column = yylloc.last_column = 0;
#endif

  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack.  Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	yytype_int16 *yyss1 = yyss;
	YYLTYPE *yyls1 = yyls;

	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),
		    &yyls1, yysize * sizeof (*yylsp),
		    &yystacksize);
	yyls = yyls1;
	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	yytype_int16 *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss);
	YYSTACK_RELOCATE (yyvs);
	YYSTACK_RELOCATE (yyls);
#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     look-ahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to look-ahead token.  */
  yyn = yypact[yystate];
  if (yyn == YYPACT_NINF)
    goto yydefault;

  /* Not known => get a look-ahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yyn == 0 || yyn == YYTABLE_NINF)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the look-ahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token unless it is eof.  */
  if (yychar != YYEOF)
    yychar = YYEMPTY;

  yystate = yyn;
  *++yyvsp = yylval;
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 465 "third_party/libpg_query/grammar/grammar.y"
    {
				pg_yyget_extra(yyscanner)->parsetree = (yyvsp[(1) - (1)].list);
			;}
    break;

  case 3:
#line 481 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (3)].list) != NIL)
					{
						/* update length of previous stmt */
						updateRawStmtEnd(llast_node(PGRawStmt, (yyvsp[(1) - (3)].list)), (yylsp[(2) - (3)]));
					}
					if ((yyvsp[(3) - (3)].node) != NULL)
						(yyval.list) = lappend((yyvsp[(1) - (3)].list), makeRawStmt((yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]) + 1));
					else
						(yyval.list) = (yyvsp[(1) - (3)].list);
				;}
    break;

  case 4:
#line 493 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (1)].node) != NULL)
						(yyval.list) = list_make1(makeRawStmt((yyvsp[(1) - (1)].node), 0));
					else
						(yyval.list) = NIL;
				;}
    break;

  case 39:
#line 536 "third_party/libpg_query/grammar/grammar.y"
    { (yyval.node) = NULL; ;}
    break;

  case 40:
#line 10 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 41:
#line 19 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 42:
#line 28 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 43:
#line 37 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 44:
#line 46 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 45:
#line 55 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 46:
#line 64 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 47:
#line 73 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 48:
#line 86 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 49:
#line 88 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 50:
#line 93 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(3) - (3)].node); ;}
    break;

  case 51:
#line 94 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 52:
#line 100 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 53:
#line 104 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 54:
#line 108 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					if (strcmp((yyvsp[(2) - (2)].defelt)->defname, "as") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "restart") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "owned_by") == 0)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("sequence option \"%s\" not supported here", (yyvsp[(2) - (2)].defelt)->defname),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
				;}
    break;

  case 55:
#line 119 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("generated", (PGNode *) makeInteger((yyvsp[(3) - (3)].ival)), (yylsp[(1) - (3)]));
				;}
    break;

  case 56:
#line 127 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 57:
#line 131 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 58:
#line 140 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(2) - (2)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 59:
#line 149 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(5) - (5)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 60:
#line 158 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(3) - (3)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 61:
#line 167 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(6) - (6)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 62:
#line 176 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ColumnDefault;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (yyvsp[(4) - (4)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 63:
#line 185 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 64:
#line 193 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 65:
#line 201 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStatistics;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeInteger((yyvsp[(6) - (6)].ival));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 66:
#line 210 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 67:
#line 219 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 68:
#line 228 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStorage;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeString((yyvsp[(6) - (6)].str));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 69:
#line 237 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);

					c->contype = PG_CONSTR_IDENTITY;
					c->generated_when = (yyvsp[(6) - (9)].ival);
					c->options = (yyvsp[(9) - (9)].list);
					c->location = (yylsp[(5) - (9)]);

					n->subtype = PG_AT_AddIdentity;
					n->name = (yyvsp[(3) - (9)].str);
					n->def = (PGNode *) c;

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 70:
#line 254 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetIdentity;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 71:
#line 263 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (5)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 72:
#line 272 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (7)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 73:
#line 281 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 74:
#line 291 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 75:
#line 304 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGColumnDef *def = makeNode(PGColumnDef);
					n->subtype = PG_AT_AlterColumnType;
					n->name = (yyvsp[(3) - (8)].str);
					n->def = (PGNode *) def;
					/* We only use these fields of the PGColumnDef node */
					def->typeName = (yyvsp[(6) - (8)].typnam);
					def->collClause = (PGCollateClause *) (yyvsp[(7) - (8)].node);
					def->raw_default = (yyvsp[(8) - (8)].node);
					def->location = (yylsp[(3) - (8)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 76:
#line 319 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AlterColumnGenericOptions;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 77:
#line 328 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddConstraint;
					n->def = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 78:
#line 336 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);
					n->subtype = PG_AT_AlterConstraint;
					n->def = (PGNode *) c;
					c->contype = PG_CONSTR_FOREIGN; /* others not supported, yet */
					c->conname = (yyvsp[(3) - (4)].str);
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "ALTER CONSTRAINT statement",
									&c->deferrable,
									&c->initdeferred,
									NULL, NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 79:
#line 351 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ValidateConstraint;
					n->name = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 80:
#line 359 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 81:
#line 369 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 82:
#line 379 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 83:
#line 386 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetUnLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 84:
#line 393 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 85:
#line 401 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 86:
#line 408 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_GenericOptions;
					n->def = (PGNode *)(yyvsp[(1) - (1)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 87:
#line 418 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 88:
#line 419 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 89:
#line 425 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(1) - (1)].defelt);
				;}
    break;

  case 90:
#line 429 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_SET;
				;}
    break;

  case 91:
#line 434 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_ADD;
				;}
    break;

  case 92:
#line 439 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElemExtended(NULL, (yyvsp[(2) - (2)].str), NULL, DEFELEM_DROP, (yylsp[(2) - (2)]));
				;}
    break;

  case 93:
#line 446 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 94:
#line 447 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 95:
#line 452 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 96:
#line 456 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 1; ;}
    break;

  case 97:
#line 457 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 0; ;}
    break;

  case 98:
#line 458 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 0; ;}
    break;

  case 99:
#line 8 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(2) - (2)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 100:
#line 14 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(3) - (3)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 101:
#line 20 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 102:
#line 26 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 103:
#line 8 "third_party/libpg_query/grammar/statements/create_enum.y"
    {
					PGCreateEnumStmt *n = makeNode(PGCreateEnumStmt);
					n->typeName = (yyvsp[(3) - (8)].list);
					n->vals = (yyvsp[(7) - (8)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 104:
#line 17 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 105:
#line 18 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = NIL; ;}
    break;

  case 106:
#line 22 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 107:
#line 24 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 108:
#line 7 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SCHEMA;
					n->subname = (yyvsp[(3) - (6)].str);
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 109:
#line 16 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 110:
#line 26 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 111:
#line 36 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 112:
#line 46 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 113:
#line 56 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 114:
#line 66 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 115:
#line 76 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 116:
#line 86 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 117:
#line 96 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 118:
#line 107 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 119:
#line 118 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 120:
#line 128 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 121:
#line 140 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = COLUMN; ;}
    break;

  case 122:
#line 141 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = 0; ;}
    break;

  case 123:
#line 10 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(5) - (7)].istmt)->relation = (yyvsp[(4) - (7)].range);
					(yyvsp[(5) - (7)].istmt)->onConflictClause = (yyvsp[(6) - (7)].onconflict);
					(yyvsp[(5) - (7)].istmt)->returningList = (yyvsp[(7) - (7)].list);
					(yyvsp[(5) - (7)].istmt)->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *) (yyvsp[(5) - (7)].istmt);
				;}
    break;

  case 124:
#line 22 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 125:
#line 28 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->override = (yyvsp[(2) - (4)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 126:
#line 35 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (4)].list);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 127:
#line 41 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (7)].list);
					(yyval.istmt)->override = (yyvsp[(5) - (7)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(7) - (7)].node);
				;}
    break;

  case 128:
#line 48 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = NULL;
				;}
    break;

  case 129:
#line 58 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 130:
#line 62 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].range)->alias = makeAlias((yyvsp[(3) - (3)].str), NIL);
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 131:
#line 71 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = (yyvsp[(2) - (4)].list);
					(yyval.infer)->whereClause = (yyvsp[(4) - (4)].node);
					(yyval.infer)->conname = NULL;
					(yyval.infer)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 132:
#line 80 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = NIL;
					(yyval.infer)->whereClause = NULL;
					(yyval.infer)->conname = (yyvsp[(3) - (3)].str);
					(yyval.infer)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 133:
#line 88 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = NULL;
				;}
    break;

  case 134:
#line 95 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = (yyvsp[(1) - (1)].with); ;}
    break;

  case 135:
#line 96 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = NULL; ;}
    break;

  case 136:
#line 102 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 137:
#line 114 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].target)->val = (PGNode *) (yyvsp[(3) - (3)].node);
					(yyval.list) = list_make1((yyvsp[(1) - (3)].target));
				;}
    break;

  case 138:
#line 119 "third_party/libpg_query/grammar/statements/insert.y"
    {
					int ncolumns = list_length((yyvsp[(2) - (5)].list));
					int i = 1;
					PGListCell *col_cell;

					/* Create a PGMultiAssignRef source for each target */
					foreach(col_cell, (yyvsp[(2) - (5)].list))
					{
						PGResTarget *res_col = (PGResTarget *) lfirst(col_cell);
						PGMultiAssignRef *r = makeNode(PGMultiAssignRef);

						r->source = (PGNode *) (yyvsp[(5) - (5)].node);
						r->colno = i;
						r->ncolumns = ncolumns;
						res_col->val = (PGNode *) r;
						i++;
					}

					(yyval.list) = (yyvsp[(2) - (5)].list);
				;}
    break;

  case 139:
#line 144 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_UPDATE;
					(yyval.onconflict)->infer = (yyvsp[(3) - (8)].infer);
					(yyval.onconflict)->targetList = (yyvsp[(7) - (8)].list);
					(yyval.onconflict)->whereClause = (yyvsp[(8) - (8)].node);
					(yyval.onconflict)->location = (yylsp[(1) - (8)]);
				;}
    break;

  case 140:
#line 154 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_NOTHING;
					(yyval.onconflict)->infer = (yyvsp[(3) - (5)].infer);
					(yyval.onconflict)->targetList = NIL;
					(yyval.onconflict)->whereClause = NULL;
					(yyval.onconflict)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 141:
#line 163 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = NULL;
				;}
    break;

  case 142:
#line 170 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = (yyvsp[(1) - (5)].str);
					(yyval.ielem)->expr = NULL;
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 143:
#line 181 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(1) - (5)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 144:
#line 192 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(2) - (7)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(4) - (7)].list);
					(yyval.ielem)->opclass = (yyvsp[(5) - (7)].list);
					(yyval.ielem)->ordering = (yyvsp[(6) - (7)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(7) - (7)].nullorder);
				;}
    break;

  case 145:
#line 206 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 146:
#line 207 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 147:
#line 213 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = PG_OVERRIDING_USER_VALUE; ;}
    break;

  case 148:
#line 214 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = OVERRIDING_SYSTEM_VALUE; ;}
    break;

  case 149:
#line 219 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 150:
#line 220 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].target)); ;}
    break;

  case 151:
#line 226 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 152:
#line 227 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 153:
#line 231 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 154:
#line 232 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 155:
#line 238 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 156:
#line 240 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 157:
#line 245 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 158:
#line 246 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_concat((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].list)); ;}
    break;

  case 159:
#line 250 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].ielem)); ;}
    break;

  case 160:
#line 251 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].ielem)); ;}
    break;

  case 161:
#line 257 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;	/* upper production sets this */
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 162:
#line 8 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_NOTHING;
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 163:
#line 15 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_ASSIGNMENT;
					n->name = (yyvsp[(2) - (4)].str);
					n->args = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 164:
#line 23 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_CALL;
					n->name = (yyvsp[(2) - (5)].str);
					n->args = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 165:
#line 10 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(4) - (5)].range)->relpersistence = (yyvsp[(2) - (5)].ival);
					n->sequence = (yyvsp[(4) - (5)].range);
					n->options = (yyvsp[(5) - (5)].list);
					n->ownerId = InvalidOid;
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 166:
#line 20 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(7) - (8)].range)->relpersistence = (yyvsp[(2) - (8)].ival);
					n->sequence = (yyvsp[(7) - (8)].range);
					n->options = (yyvsp[(8) - (8)].list);
					n->ownerId = InvalidOid;
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 167:
#line 32 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 168:
#line 33 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = NIL; ;}
    break;

  case 169:
#line 8 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(2) - (3)].str);
					n->params = (yyvsp[(3) - (3)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 170:
#line 16 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(7) - (9)].str);
					n->params = (yyvsp[(8) - (9)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(4) - (9)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_ERROR_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (9)].into)->rel->relpersistence = (yyvsp[(2) - (9)].ival);
					(yyvsp[(4) - (9)].into)->skipData = !((yyvsp[(9) - (9)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 171:
#line 33 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(10) - (12)].str);
					n->params = (yyvsp[(11) - (12)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(7) - (12)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_IGNORE_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (12)].into)->rel->relpersistence = (yyvsp[(2) - (12)].ival);
					(yyvsp[(7) - (12)].into)->skipData = !((yyvsp[(12) - (12)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 172:
#line 51 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 173:
#line 52 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = NIL; ;}
    break;

  case 174:
#line 10 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(3) - (4)].range);
					n->options = (yyvsp[(4) - (4)].list);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 175:
#line 18 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(5) - (6)].range);
					n->options = (yyvsp[(6) - (6)].list);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 176:
#line 29 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 177:
#line 30 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 178:
#line 34 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 179:
#line 35 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 180:
#line 36 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 181:
#line 41 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(1) - (1)].str)); ;}
    break;

  case 182:
#line 42 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(2) - (2)].str)); ;}
    break;

  case 183:
#line 44 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.value) = makeFloat((yyvsp[(2) - (2)].str));
					doNegateFloat((yyval.value));
				;}
    break;

  case 184:
#line 48 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeInteger((yyvsp[(1) - (1)].ival)); ;}
    break;

  case 185:
#line 53 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("as", (PGNode *)(yyvsp[(2) - (2)].typnam), (yylsp[(1) - (2)]));
				;}
    break;

  case 186:
#line 57 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cache", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 187:
#line 61 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 188:
#line 65 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(false), (yylsp[(1) - (2)]));
				;}
    break;

  case 189:
#line 69 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("increment", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 190:
#line 73 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 191:
#line 77 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 192:
#line 81 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 193:
#line 85 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 194:
#line 89 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("owned_by", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 195:
#line 93 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					/* not documented, only used by pg_dump */
					(yyval.defelt) = makeDefElem("sequence_name", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 196:
#line 98 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("start", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 197:
#line 102 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 198:
#line 106 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 199:
#line 112 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 200:
#line 113 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 201:
#line 117 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 202:
#line 118 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = + (yyvsp[(2) - (2)].ival); ;}
    break;

  case 203:
#line 119 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = - (yyvsp[(2) - (2)].ival); ;}
    break;

  case 204:
#line 3 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 205:
#line 10 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_BEGIN;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 206:
#line 16 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_START;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 207:
#line 22 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 208:
#line 29 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 209:
#line 36 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 210:
#line 45 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 211:
#line 46 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 212:
#line 47 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 213:
#line 9 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(4) - (9)].range)->relpersistence = (yyvsp[(2) - (9)].ival);
					n->relation = (yyvsp[(4) - (9)].range);
					n->tableElts = (yyvsp[(6) - (9)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(8) - (9)].list);
					n->oncommit = (yyvsp[(9) - (9)].oncommit);
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 214:
#line 24 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(7) - (12)].range)->relpersistence = (yyvsp[(2) - (12)].ival);
					n->relation = (yyvsp[(7) - (12)].range);
					n->tableElts = (yyvsp[(9) - (12)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(11) - (12)].list);
					n->oncommit = (yyvsp[(12) - (12)].oncommit);
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 215:
#line 39 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(6) - (11)].range)->relpersistence = (yyvsp[(4) - (11)].ival);
					n->relation = (yyvsp[(6) - (11)].range);
					n->tableElts = (yyvsp[(8) - (11)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(10) - (11)].list);
					n->oncommit = (yyvsp[(11) - (11)].oncommit);
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 216:
#line 56 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 217:
#line 58 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * We must complain about conflicting options.
					 * We could, but choose not to, complain about redundant
					 * options (ie, where $2's bit is already set in $1).
					 */
					int		newspec = (yyvsp[(1) - (2)].ival) | (yyvsp[(2) - (2)].ival);

					/* special message for this case */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED)) == (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("constraint declared INITIALLY DEFERRED must be DEFERRABLE"),
								 parser_errposition((yylsp[(2) - (2)]))));
					/* generic message for other conflicts */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE)) == (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE) ||
						(newspec & (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED)) == (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("conflicting constraint properties"),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.ival) = newspec;
				;}
    break;

  case 218:
#line 84 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].typnam); ;}
    break;

  case 219:
#line 85 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 220:
#line 86 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].list); ;}
    break;

  case 221:
#line 87 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].value); ;}
    break;

  case 222:
#line 88 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 223:
#line 89 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 224:
#line 93 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 225:
#line 94 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 226:
#line 99 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 227:
#line 104 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_NOACTION; ;}
    break;

  case 228:
#line 105 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_RESTRICT; ;}
    break;

  case 229:
#line 106 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_CASCADE; ;}
    break;

  case 230:
#line 107 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETNULL; ;}
    break;

  case 231:
#line 108 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETDEFAULT; ;}
    break;

  case 232:
#line 114 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 233:
#line 120 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 234:
#line 121 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 235:
#line 123 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * Note: the PGCollateClause is momentarily included in
					 * the list built by ColQualList, but we split it out
					 * again in SplitColQualList.
					 */
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 236:
#line 140 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NOTNULL;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 237:
#line 147 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NULL;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 238:
#line 154 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (2)]);
					n->keys = NULL;
					n->options = (yyvsp[(2) - (2)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 239:
#line 164 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NULL;
					n->options = (yyvsp[(3) - (3)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 240:
#line 174 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->is_no_inherit = (yyvsp[(5) - (5)].boolean);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					n->skip_validation = false;
					n->initially_valid = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 241:
#line 186 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_DEFAULT;
					n->location = (yylsp[(1) - (2)]);
					n->raw_expr = (yyvsp[(2) - (2)].node);
					n->cooked_expr = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 242:
#line 195 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_IDENTITY;
					n->generated_when = (yyvsp[(2) - (5)].ival);
					n->options = (yyvsp[(5) - (5)].list);
					n->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 243:
#line 204 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (5)]);
					n->pktable			= (yyvsp[(2) - (5)].range);
					n->fk_attrs			= NIL;
					n->pk_attrs			= (yyvsp[(3) - (5)].list);
					n->fk_matchtype		= (yyvsp[(4) - (5)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(5) - (5)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(5) - (5)].ival) & 0xFF);
					n->skip_validation  = false;
					n->initially_valid  = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 244:
#line 223 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 245:
#line 229 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 246:
#line 235 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (1)].ival) << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 247:
#line 237 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | ((yyvsp[(1) - (1)].ival) & 0xFF); ;}
    break;

  case 248:
#line 239 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (2)].ival) << 8) | ((yyvsp[(2) - (2)].ival) & 0xFF); ;}
    break;

  case 249:
#line 241 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(2) - (2)].ival) << 8) | ((yyvsp[(1) - (2)].ival) & 0xFF); ;}
    break;

  case 250:
#line 243 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 251:
#line 248 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 252:
#line 249 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 253:
#line 253 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = ONCOMMIT_DROP; ;}
    break;

  case 254:
#line 254 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_DELETE_ROWS; ;}
    break;

  case 255:
#line 255 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_PRESERVE_ROWS; ;}
    break;

  case 256:
#line 256 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_NOOP; ;}
    break;

  case 257:
#line 261 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 258:
#line 265 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = true; ;}
    break;

  case 259:
#line 266 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = false; ;}
    break;

  case 260:
#line 272 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 261:
#line 278 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 262:
#line 283 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_COMMENTS; ;}
    break;

  case 263:
#line 284 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_CONSTRAINTS; ;}
    break;

  case 264:
#line 285 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_DEFAULTS; ;}
    break;

  case 265:
#line 286 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_IDENTITY; ;}
    break;

  case 266:
#line 287 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_INDEXES; ;}
    break;

  case 267:
#line 288 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STATISTICS; ;}
    break;

  case 268:
#line 289 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STORAGE; ;}
    break;

  case 269:
#line 290 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_ALL; ;}
    break;

  case 270:
#line 296 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 271:
#line 297 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 272:
#line 301 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
    break;

  case 273:
#line 307 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRABLE;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 274:
#line 314 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_NOT_DEFERRABLE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 275:
#line 321 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRED;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 276:
#line 328 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_IMMEDIATE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 277:
#line 339 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 278:
#line 340 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(true), (yylsp[(1) - (2)]))); ;}
    break;

  case 279:
#line 341 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(false), (yylsp[(1) - (2)]))); ;}
    break;

  case 280:
#line 342 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 281:
#line 346 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 282:
#line 351 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 283:
#line 352 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) & ~(yyvsp[(3) - (3)].ival); ;}
    break;

  case 284:
#line 353 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 285:
#line 358 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 286:
#line 363 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_DEFERRABLE; ;}
    break;

  case 287:
#line 364 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_DEFERRABLE; ;}
    break;

  case 288:
#line 365 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_IMMEDIATE; ;}
    break;

  case 289:
#line 366 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_DEFERRED; ;}
    break;

  case 290:
#line 367 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_VALID; ;}
    break;

  case 291:
#line 368 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NO_INHERIT; ;}
    break;

  case 292:
#line 374 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (4)].str);
					n->typeName = (yyvsp[(2) - (4)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collOid = InvalidOid;
					n->fdwoptions = (yyvsp[(3) - (4)].list);
					SplitColQualList((yyvsp[(4) - (4)].list), &n->constraints, &n->collClause,
									 yyscanner);
					n->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 293:
#line 397 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 294:
#line 401 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 295:
#line 407 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 296:
#line 408 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 297:
#line 412 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 298:
#line 416 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 299:
#line 417 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 300:
#line 418 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 301:
#line 423 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 302:
#line 427 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 303:
#line 434 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 304:
#line 435 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 305:
#line 440 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 306:
#line 441 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 307:
#line 446 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str));
				;}
    break;

  case 308:
#line 453 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 309:
#line 454 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 310:
#line 459 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 311:
#line 460 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 312:
#line 464 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 313:
#line 470 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 314:
#line 474 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 315:
#line 478 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (5)].str), (yyvsp[(3) - (5)].str), (PGNode *) (yyvsp[(5) - (5)].node),
											 PG_DEFELEM_UNSPEC, (yylsp[(1) - (5)]));
				;}
    break;

  case 316:
#line 483 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str), NULL, PG_DEFELEM_UNSPEC, (yylsp[(1) - (3)]));
				;}
    break;

  case 317:
#line 490 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 318:
#line 491 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 319:
#line 495 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 320:
#line 497 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (4)].str)), (yyvsp[(2) - (4)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 321:
#line 503 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(2) - (5)].str)), (yyvsp[(3) - (5)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->setof = true;
					(yyval.typnam)->location = (yylsp[(2) - (5)]);
				;}
    break;

  case 322:
#line 514 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					processCASbits((yyvsp[(5) - (5)].ival), (yylsp[(5) - (5)]), "CHECK",
								   NULL, NULL, &n->skip_validation,
								   &n->is_no_inherit, yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 323:
#line 528 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (6)]);
					n->keys = (yyvsp[(3) - (6)].list);
					n->options = (yyvsp[(5) - (6)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(6) - (6)].ival), (yylsp[(6) - (6)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 324:
#line 541 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(2) - (3)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(3) - (3)].ival), (yylsp[(3) - (3)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 325:
#line 556 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (7)]);
					n->keys = (yyvsp[(4) - (7)].list);
					n->options = (yyvsp[(6) - (7)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(7) - (7)].ival), (yylsp[(7) - (7)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 326:
#line 569 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (4)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(3) - (4)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 327:
#line 584 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (11)]);
					n->pktable			= (yyvsp[(7) - (11)].range);
					n->fk_attrs			= (yyvsp[(4) - (11)].list);
					n->pk_attrs			= (yyvsp[(8) - (11)].list);
					n->fk_matchtype		= (yyvsp[(9) - (11)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(10) - (11)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(10) - (11)].ival) & 0xFF);
					processCASbits((yyvsp[(11) - (11)].ival), (yylsp[(11) - (11)]), "FOREIGN KEY",
								   &n->deferrable, &n->initdeferred,
								   &n->skip_validation, NULL,
								   yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 328:
#line 606 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 329:
#line 610 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 330:
#line 617 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_FULL;
			;}
    break;

  case 331:
#line 621 "third_party/libpg_query/grammar/statements/create.y"
    {
				ereport(ERROR,
						(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
						 errmsg("MATCH PARTIAL not yet implemented"),
						 parser_errposition((yylsp[(1) - (2)]))));
				(yyval.ival) = PG_FKCONSTR_MATCH_PARTIAL;
			;}
    break;

  case 332:
#line 629 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 333:
#line 633 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 334:
#line 641 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGTableLikeClause *n = makeNode(PGTableLikeClause);
					n->relation = (yyvsp[(2) - (3)].range);
					n->options = (yyvsp[(3) - (3)].ival);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 335:
#line 650 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 336:
#line 651 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 337:
#line 652 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 338:
#line 653 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 339:
#line 655 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 340:
#line 662 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 341:
#line 668 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_UNLOGGED; ;}
    break;

  case 342:
#line 669 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = RELPERSISTENCE_PERMANENT; ;}
    break;

  case 343:
#line 674 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_ATTRIBUTE_IDENTITY_ALWAYS; ;}
    break;

  case 344:
#line 675 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ATTRIBUTE_IDENTITY_BY_DEFAULT; ;}
    break;

  case 345:
#line 10 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 346:
#line 20 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 347:
#line 30 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 348:
#line 40 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 349:
#line 50 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->objects = list_make1(lappend((yyvsp[(5) - (6)].list), makeString((yyvsp[(3) - (6)].str))));
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 350:
#line 60 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (8)].objtype);
					n->objects = list_make1(lappend((yyvsp[(7) - (8)].list), makeString((yyvsp[(5) - (8)].str))));
					n->behavior = (yyvsp[(8) - (8)].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 351:
#line 70 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = PG_OBJECT_TYPE;
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 352:
#line 80 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = PG_OBJECT_TYPE;
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 353:
#line 93 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TABLE; ;}
    break;

  case 354:
#line 94 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SEQUENCE; ;}
    break;

  case 355:
#line 95 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 356:
#line 96 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 357:
#line 97 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_VIEW; ;}
    break;

  case 358:
#line 98 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_MATVIEW; ;}
    break;

  case 359:
#line 99 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_INDEX; ;}
    break;

  case 360:
#line 100 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_TABLE; ;}
    break;

  case 361:
#line 101 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_COLLATION; ;}
    break;

  case 362:
#line 102 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_CONVERSION; ;}
    break;

  case 363:
#line 103 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_STATISTIC_EXT; ;}
    break;

  case 364:
#line 104 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSPARSER; ;}
    break;

  case 365:
#line 105 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSDICTIONARY; ;}
    break;

  case 366:
#line 106 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSTEMPLATE; ;}
    break;

  case 367:
#line 107 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSCONFIGURATION; ;}
    break;

  case 368:
#line 112 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_ACCESS_METHOD; ;}
    break;

  case 369:
#line 113 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EVENT_TRIGGER; ;}
    break;

  case 370:
#line 114 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EXTENSION; ;}
    break;

  case 371:
#line 115 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FDW; ;}
    break;

  case 372:
#line 116 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_PUBLICATION; ;}
    break;

  case 373:
#line 117 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SCHEMA; ;}
    break;

  case 374:
#line 118 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_SERVER; ;}
    break;

  case 375:
#line 123 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 376:
#line 124 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 377:
#line 129 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_CASCADE; ;}
    break;

  case 378:
#line 130 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; ;}
    break;

  case 379:
#line 131 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; /* default */ ;}
    break;

  case 380:
#line 136 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_POLICY; ;}
    break;

  case 381:
#line 137 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_RULE; ;}
    break;

  case 382:
#line 138 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TRIGGER; ;}
    break;

  case 383:
#line 141 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 384:
#line 142 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 385:
#line 8 "third_party/libpg_query/grammar/statements/create_function.y"
    {
					PGCreateFunctionStmt *n = makeNode(PGCreateFunctionStmt);
					n->name = (yyvsp[(3) - (6)].range);
					n->params = (yyvsp[(4) - (6)].list);
					n->function = (yyvsp[(6) - (6)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 388:
#line 24 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = NIL;
			;}
    break;

  case 389:
#line 28 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = (yyvsp[(2) - (3)].list);
			;}
    break;

  case 390:
#line 12 "third_party/libpg_query/grammar/statements/update.y"
    {
					PGUpdateStmt *n = makeNode(PGUpdateStmt);
					n->relation = (yyvsp[(3) - (8)].range);
					n->targetList = (yyvsp[(5) - (8)].list);
					n->fromClause = (yyvsp[(6) - (8)].list);
					n->whereClause = (yyvsp[(7) - (8)].node);
					n->returningList = (yyvsp[(8) - (8)].list);
					n->withClause = (yyvsp[(1) - (8)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 391:
#line 3 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = (yyvsp[(3) - (11)].range);
					n->query = NULL;
					n->attlist = (yyvsp[(4) - (11)].list);
					n->is_from = (yyvsp[(6) - (11)].boolean);
					n->is_program = (yyvsp[(7) - (11)].boolean);
					n->filename = (yyvsp[(8) - (11)].str);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(8) - (11)]))));

					n->options = NIL;
					/* Concatenate user-supplied flags */
					if ((yyvsp[(2) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(2) - (11)].defelt));
					if ((yyvsp[(5) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(5) - (11)].defelt));
					if ((yyvsp[(9) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(9) - (11)].defelt));
					if ((yyvsp[(11) - (11)].list))
						n->options = list_concat(n->options, (yyvsp[(11) - (11)].list));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 392:
#line 31 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = NULL;
					n->query = (yyvsp[(3) - (9)].node);
					n->attlist = NIL;
					n->is_from = false;
					n->is_program = (yyvsp[(6) - (9)].boolean);
					n->filename = (yyvsp[(7) - (9)].str);
					n->options = (yyvsp[(9) - (9)].list);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(5) - (9)]))));

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 393:
#line 53 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 394:
#line 54 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 395:
#line 60 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(2) - (3)]));
				;}
    break;

  case 396:
#line 63 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 397:
#line 69 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 398:
#line 73 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 399:
#line 80 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 400:
#line 81 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 401:
#line 85 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 402:
#line 86 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 403:
#line 91 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 404:
#line 92 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 405:
#line 96 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 406:
#line 97 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 407:
#line 102 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 408:
#line 103 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 409:
#line 104 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeNode(PGAStar); ;}
    break;

  case 410:
#line 105 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (3)].list); ;}
    break;

  case 411:
#line 106 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = NULL; ;}
    break;

  case 412:
#line 112 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 413:
#line 120 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (2)]));
				;}
    break;

  case 414:
#line 123 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 415:
#line 128 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 416:
#line 129 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = NIL; ;}
    break;

  case 417:
#line 135 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 418:
#line 138 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 419:
#line 144 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 420:
#line 148 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 421:
#line 152 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("freeze", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 422:
#line 156 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 423:
#line 160 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("null", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 424:
#line 164 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("csv"), (yylsp[(1) - (1)]));
				;}
    break;

  case 425:
#line 168 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("header", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 426:
#line 172 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("quote", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 427:
#line 176 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("escape", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 428:
#line 180 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 429:
#line 184 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)makeNode(PGAStar), (yylsp[(1) - (3)]));
				;}
    break;

  case 430:
#line 188 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_not_null", (PGNode *)(yyvsp[(4) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 431:
#line 192 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_null", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 432:
#line 196 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("encoding", (PGNode *)makeString((yyvsp[(2) - (2)].str)), (yylsp[(1) - (2)]));
				;}
    break;

  case 433:
#line 203 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 434:
#line 209 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 435:
#line 210 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 436:
#line 211 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 437:
#line 217 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 438:
#line 221 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 441:
#line 52 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 442:
#line 53 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 443:
#line 68 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 444:
#line 70 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list), NIL,
										NULL, NULL, NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (2)].node);
				;}
    break;

  case 445:
#line 77 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(3) - (4)].list),
										(PGNode*) list_nth((yyvsp[(4) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 446:
#line 85 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(4) - (4)].list),
										(PGNode*) list_nth((yyvsp[(3) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(3) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 447:
#line 93 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (2)].node), NULL, NIL,
										NULL, NULL,
										(yyvsp[(1) - (2)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 448:
#line 101 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].list), NIL,
										NULL, NULL,
										(yyvsp[(1) - (3)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (3)].node);
				;}
    break;

  case 449:
#line 109 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(4) - (5)].list),
										(PGNode*) list_nth((yyvsp[(5) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(5) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 450:
#line 117 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(5) - (5)].list),
										(PGNode*) list_nth((yyvsp[(4) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 451:
#line 127 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 452:
#line 128 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 453:
#line 158 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->targetList = (yyvsp[(3) - (10)].list);
					n->intoClause = (yyvsp[(4) - (10)].into);
					n->fromClause = (yyvsp[(5) - (10)].list);
					n->whereClause = (yyvsp[(6) - (10)].node);
					n->groupClause = (yyvsp[(7) - (10)].list);
					n->havingClause = (yyvsp[(8) - (10)].node);
					n->windowClause = (yyvsp[(9) - (10)].list);
					n->sampleOptions = (yyvsp[(10) - (10)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 454:
#line 173 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->distinctClause = (yyvsp[(2) - (10)].list);
					n->targetList = (yyvsp[(3) - (10)].list);
					n->intoClause = (yyvsp[(4) - (10)].into);
					n->fromClause = (yyvsp[(5) - (10)].list);
					n->whereClause = (yyvsp[(6) - (10)].node);
					n->groupClause = (yyvsp[(7) - (10)].list);
					n->havingClause = (yyvsp[(8) - (10)].node);
					n->windowClause = (yyvsp[(9) - (10)].list);
					n->sampleOptions = (yyvsp[(10) - (10)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 455:
#line 186 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 456:
#line 188 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* same as SELECT * FROM relation_expr */
					PGColumnRef *cr = makeNode(PGColumnRef);
					PGResTarget *rt = makeNode(PGResTarget);
					PGSelectStmt *n = makeNode(PGSelectStmt);

					cr->fields = list_make1(makeNode(PGAStar));
					cr->location = -1;

					rt->name = NULL;
					rt->indirection = NIL;
					rt->val = (PGNode *)cr;
					rt->location = -1;

					n->targetList = list_make1(rt);
					n->fromClause = list_make1((yyvsp[(2) - (2)].range));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 457:
#line 207 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_UNION, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 458:
#line 211 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_INTERSECT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 459:
#line 215 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_EXCEPT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 460:
#line 232 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 461:
#line 239 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 462:
#line 246 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(3) - (3)].list);
				(yyval.with)->recursive = true;
				(yyval.with)->location = (yylsp[(1) - (3)]);
			;}
    break;

  case 463:
#line 255 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 464:
#line 256 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 465:
#line 260 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGCommonTableExpr *n = makeNode(PGCommonTableExpr);
				n->ctename = (yyvsp[(1) - (6)].str);
				n->aliascolnames = (yyvsp[(2) - (6)].list);
				n->ctequery = (yyvsp[(5) - (6)].node);
				n->location = (yylsp[(1) - (6)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 466:
#line 272 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(2) - (2)].range);
					(yyval.into)->colNames = NIL;
					(yyval.into)->options = NIL;
					(yyval.into)->onCommit = PG_ONCOMMIT_NOOP;
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;
				;}
    break;

  case 467:
#line 282 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.into) = NULL; ;}
    break;

  case 468:
#line 291 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 469:
#line 296 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 470:
#line 301 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 471:
#line 306 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 472:
#line 311 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 473:
#line 319 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 474:
#line 327 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_UNLOGGED;
				;}
    break;

  case 475:
#line 332 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 476:
#line 337 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 477:
#line 343 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 478:
#line 344 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 479:
#line 348 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 480:
#line 349 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 481:
#line 350 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 482:
#line 357 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(NIL); ;}
    break;

  case 483:
#line 358 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 484:
#line 362 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL;;}
    break;

  case 485:
#line 363 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 486:
#line 367 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 487:
#line 368 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 488:
#line 372 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 489:
#line 376 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].sortby)); ;}
    break;

  case 490:
#line 377 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].sortby)); ;}
    break;

  case 491:
#line 381 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (4)].node);
					(yyval.sortby)->sortby_dir = SORTBY_USING;
					(yyval.sortby)->sortby_nulls = (yyvsp[(4) - (4)].nullorder);
					(yyval.sortby)->useOp = (yyvsp[(3) - (4)].list);
					(yyval.sortby)->location = (yylsp[(3) - (4)]);
				;}
    break;

  case 492:
#line 390 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (3)].node);
					(yyval.sortby)->sortby_dir = (yyvsp[(2) - (3)].sortorder);
					(yyval.sortby)->sortby_nulls = (yyvsp[(3) - (3)].nullorder);
					(yyval.sortby)->useOp = NIL;
					(yyval.sortby)->location = -1;		/* no operator */
				;}
    break;

  case 493:
#line 400 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_ASC; ;}
    break;

  case 494:
#line 401 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DESC; ;}
    break;

  case 495:
#line 402 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DEFAULT; ;}
    break;

  case 496:
#line 405 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_FIRST; ;}
    break;

  case 497:
#line 406 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_LAST; ;}
    break;

  case 498:
#line 407 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_DEFAULT; ;}
    break;

  case 499:
#line 411 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(2) - (2)].node), (yyvsp[(1) - (2)].node)); ;}
    break;

  case 500:
#line 412 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 501:
#line 413 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL, (yyvsp[(1) - (1)].node)); ;}
    break;

  case 502:
#line 414 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (1)].node), NULL); ;}
    break;

  case 503:
#line 418 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 504:
#line 419 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL,NULL); ;}
    break;

  case 505:
#line 424 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 506:
#line 426 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Disabled because it was too confusing, bjm 2002-02-18 */
					ereport(ERROR,
							(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("LIMIT #,# syntax is not supported"),
							 errhint("Use separate LIMIT and OFFSET clauses."),
							 parser_errposition((yylsp[(1) - (4)]))));
				;}
    break;

  case 507:
#line 442 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(3) - (5)].node); ;}
    break;

  case 508:
#line 444 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst(1, -1); ;}
    break;

  case 509:
#line 449 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 510:
#line 452 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 511:
#line 460 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
		;}
    break;

  case 512:
#line 464 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
		;}
    break;

  case 513:
#line 468 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
		;}
    break;

  case 514:
#line 472 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
		;}
    break;

  case 515:
#line 476 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (1)].ival)), false);
		;}
    break;

  case 516:
#line 480 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), false);
		;}
    break;

  case 517:
#line 487 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(3) - (3)].node);
				;}
    break;

  case 518:
#line 491 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 519:
#line 498 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 520:
#line 499 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 521:
#line 504 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSampleOptions((yyvsp[(3) - (5)].node), (yyvsp[(1) - (5)].str), (yyvsp[(5) - (5)].ival), (yylsp[(1) - (5)]));
				;}
    break;

  case 522:
#line 508 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (1)].node), NULL, -1, (yylsp[(1) - (1)]));
		;}
    break;

  case 523:
#line 512 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (4)].node), (yyvsp[(3) - (4)].str), -1, (yylsp[(1) - (4)]));
		;}
    break;

  case 524:
#line 516 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (6)].node), (yyvsp[(3) - (6)].str), (yyvsp[(5) - (6)].ival), (yylsp[(1) - (6)]));
		;}
    break;

  case 525:
#line 523 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 526:
#line 529 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 527:
#line 530 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 528:
#line 535 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(3) - (4)].ival); ;}
    break;

  case 529:
#line 536 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = -1; ;}
    break;

  case 530:
#line 540 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 531:
#line 542 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* LIMIT ALL is represented as a NULL constant */
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 532:
#line 549 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 533:
#line 569 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 534:
#line 571 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 535:
#line 573 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 536:
#line 577 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival),(yylsp[(1) - (1)])); ;}
    break;

  case 537:
#line 578 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str),(yylsp[(1) - (1)])); ;}
    break;

  case 538:
#line 582 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 539:
#line 583 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 540:
#line 586 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 541:
#line 587 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 542:
#line 612 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 543:
#line 613 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 544:
#line 617 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 545:
#line 618 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].node)); ;}
    break;

  case 546:
#line 622 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 547:
#line 623 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 548:
#line 628 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_EMPTY, NIL, (yylsp[(1) - (2)]));
				;}
    break;

  case 549:
#line 640 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 550:
#line 641 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 551:
#line 645 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 552:
#line 646 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 553:
#line 650 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 554:
#line 651 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 555:
#line 655 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 556:
#line 656 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 557:
#line 661 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGLockingClause *n = makeNode(PGLockingClause);
					n->lockedRels = (yyvsp[(2) - (3)].list);
					n->strength = (yyvsp[(1) - (3)].lockstrength);
					n->waitPolicy = (yyvsp[(3) - (3)].lockwaitpolicy);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 558:
#line 671 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = LCS_FORUPDATE; ;}
    break;

  case 559:
#line 672 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORNOKEYUPDATE; ;}
    break;

  case 560:
#line 673 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORSHARE; ;}
    break;

  case 561:
#line 674 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORKEYSHARE; ;}
    break;

  case 562:
#line 678 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 563:
#line 679 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 564:
#line 684 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = LockWaitError; ;}
    break;

  case 565:
#line 685 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitSkip; ;}
    break;

  case 566:
#line 686 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitBlock; ;}
    break;

  case 567:
#line 696 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->valuesLists = list_make1((yyvsp[(3) - (4)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 568:
#line 702 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = (PGSelectStmt *) (yyvsp[(1) - (5)].node);
					n->valuesLists = lappend(n->valuesLists, (yyvsp[(4) - (5)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 569:
#line 719 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 570:
#line 720 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 571:
#line 724 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 572:
#line 725 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 573:
#line 732 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(1) - (3)].range)->alias = (yyvsp[(2) - (3)].alias);
					(yyvsp[(1) - (3)].range)->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) (yyvsp[(1) - (3)].range);
				;}
    break;

  case 574:
#line 738 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(1) - (3)].node);
					n->alias = (PGAlias*) linitial((yyvsp[(2) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(2) - (3)].list));
					n->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 575:
#line 746 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(2) - (3)].node);
					n->lateral = true;
					n->alias = (PGAlias*) linitial((yyvsp[(3) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(3) - (3)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 576:
#line 754 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = false;
					n->subquery = (yyvsp[(1) - (3)].node);
					n->alias = (yyvsp[(2) - (3)].alias);
					n->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 577:
#line 763 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = true;
					n->subquery = (yyvsp[(2) - (3)].node);
					n->alias = (yyvsp[(3) - (3)].alias);
					n->sample = NULL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 578:
#line 772 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) (yyvsp[(1) - (1)].jexpr);
				;}
    break;

  case 579:
#line 776 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(2) - (4)].jexpr)->alias = (yyvsp[(4) - (4)].alias);
					(yyval.node) = (PGNode *) (yyvsp[(2) - (4)].jexpr);
				;}
    break;

  case 580:
#line 802 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.jexpr) = (yyvsp[(2) - (3)].jexpr);
				;}
    break;

  case 581:
#line 806 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* CROSS JOIN is same as unqualified inner join */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL;
					n->quals = NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 582:
#line 819 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(2) - (5)].jtype);
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(4) - (5)].node);
					if ((yyvsp[(5) - (5)].node) != NULL && IsA((yyvsp[(5) - (5)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(5) - (5)].node); /* USING clause */
					else
						n->quals = (yyvsp[(5) - (5)].node); /* ON clause */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 583:
#line 833 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(3) - (4)].node);
					if ((yyvsp[(4) - (4)].node) != NULL && IsA((yyvsp[(4) - (4)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(4) - (4)].node); /* USING clause */
					else
						n->quals = (yyvsp[(4) - (4)].node); /* ON clause */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 584:
#line 848 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(3) - (5)].jtype);
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(5) - (5)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 585:
#line 860 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 586:
#line 876 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.alias)->colnames = (yyvsp[(4) - (5)].list);
				;}
    break;

  case 587:
#line 882 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (2)].str);
				;}
    break;

  case 588:
#line 887 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.alias)->colnames = (yyvsp[(3) - (4)].list);
				;}
    break;

  case 589:
#line 893 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (1)].str);
				;}
    break;

  case 590:
#line 899 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = (yyvsp[(1) - (1)].alias); ;}
    break;

  case 591:
#line 900 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = NULL; ;}
    break;

  case 592:
#line 909 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (1)].alias), NIL);
				;}
    break;

  case 593:
#line 913 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 594:
#line 917 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.list) = list_make2(a, (yyvsp[(4) - (5)].list));
				;}
    break;

  case 595:
#line 923 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.list) = list_make2(a, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 596:
#line 929 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, NIL);
				;}
    break;

  case 597:
#line 934 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_FULL; ;}
    break;

  case 598:
#line 935 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_LEFT; ;}
    break;

  case 599:
#line 936 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_RIGHT; ;}
    break;

  case 600:
#line 937 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_INNER; ;}
    break;

  case 601:
#line 941 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 602:
#line 942 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 603:
#line 954 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) (yyvsp[(3) - (4)].list); ;}
    break;

  case 604:
#line 955 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 605:
#line 961 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, implicitly */
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 606:
#line 968 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, explicitly */
					(yyval.range) = (yyvsp[(1) - (2)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 607:
#line 975 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance */
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 608:
#line 982 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance, SQL99-style syntax */
					(yyval.range) = (yyvsp[(3) - (4)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 609:
#line 1014 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(2) - (2)].boolean);
					n->is_rowsfrom = false;
					n->functions = list_make1(list_make2((yyvsp[(1) - (2)].node), NIL));
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 610:
#line 1025 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(6) - (6)].boolean);
					n->is_rowsfrom = true;
					n->functions = (yyvsp[(4) - (6)].list);
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 611:
#line 1038 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 612:
#line 1042 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 613:
#line 1043 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 614:
#line 1046 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 615:
#line 1047 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 616:
#line 1050 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 617:
#line 1051 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 618:
#line 1056 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 619:
#line 1057 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 620:
#line 1063 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 621:
#line 1067 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 622:
#line 1073 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (3)].str);
					n->typeName = (yyvsp[(2) - (3)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collClause = (PGCollateClause *) (yyvsp[(3) - (3)].node);
					n->collOid = InvalidOid;
					n->constraints = NIL;
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 623:
#line 1094 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 624:
#line 1101 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 625:
#line 1114 "third_party/libpg_query/grammar/statements/select.y"
    {
             (yyval.list) = list_make1(list_make2(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].typnam)));
            ;}
    break;

  case 626:
#line 1117 "third_party/libpg_query/grammar/statements/select.y"
    {
             (yyval.list) = lappend((yyvsp[(1) - (4)].list), list_make2(makeString((yyvsp[(3) - (4)].str)), (yyvsp[(4) - (4)].typnam)));
            ;}
    break;

  case 629:
#line 1124 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 630:
#line 1129 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->setof = true;
				;}
    break;

  case 631:
#line 1136 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (5)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(4) - (5)].ival)));
				;}
    break;

  case 632:
#line 1141 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (6)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(5) - (6)].ival)));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 633:
#line 1147 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
				;}
    break;

  case 634:
#line 1152 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 635:
#line 1157 "third_party/libpg_query/grammar/statements/select.y"
    {
               (yyval.typnam) = SystemTypeName("struct");
               (yyval.typnam)->arrayBounds = (yyvsp[(5) - (5)].list);
               (yyval.typnam)->typmods = (yyvsp[(3) - (5)].list);
               (yyval.typnam)->location = (yylsp[(1) - (5)]);
               ;}
    break;

  case 636:
#line 1163 "third_party/libpg_query/grammar/statements/select.y"
    {
               (yyval.typnam) = SystemTypeName("map");
               (yyval.typnam)->arrayBounds = (yyvsp[(5) - (5)].list);
               (yyval.typnam)->typmods = (yyvsp[(3) - (5)].list);
               (yyval.typnam)->location = (yylsp[(1) - (5)]);
			;}
    break;

  case 637:
#line 1173 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeInteger(-1)); ;}
    break;

  case 638:
#line 1175 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (4)].list), makeInteger((yyvsp[(3) - (4)].ival))); ;}
    break;

  case 639:
#line 1177 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = NIL; ;}
    break;

  case 640:
#line 1181 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 641:
#line 1182 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 642:
#line 1183 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 643:
#line 1184 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 644:
#line 1185 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 645:
#line 1187 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 646:
#line 1192 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (4)].typnam);
					(yyval.typnam)->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											 makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
				;}
    break;

  case 647:
#line 1211 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 648:
#line 1212 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 649:
#line 1213 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 650:
#line 1214 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 651:
#line 1226 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = makeTypeName((yyvsp[(1) - (2)].str));
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 652:
#line 1239 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 653:
#line 1240 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 654:
#line 1247 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 655:
#line 1252 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 656:
#line 1257 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int2");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 657:
#line 1262 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int8");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 658:
#line 1267 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 659:
#line 1272 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (2)].typnam);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 660:
#line 1277 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float8");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 661:
#line 1282 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 662:
#line 1288 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 663:
#line 1294 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 664:
#line 1300 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("bool");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 665:
#line 1307 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Check FLOAT() precision limits assuming IEEE floating
					 * types - thomas 1997-09-18
					 */
					if ((yyvsp[(2) - (3)].ival) < 1)
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be at least 1 bit"),
								 parser_errposition((yylsp[(2) - (3)]))));
					else if ((yyvsp[(2) - (3)].ival) <= 24)
						(yyval.typnam) = SystemTypeName("float4");
					else if ((yyvsp[(2) - (3)].ival) <= 53)
						(yyval.typnam) = SystemTypeName("float8");
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be less than 54 bits"),
								 parser_errposition((yylsp[(2) - (3)]))));
				;}
    break;

  case 666:
#line 1328 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
				;}
    break;

  case 667:
#line 1338 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 668:
#line 1342 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 669:
#line 1350 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 670:
#line 1354 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 671:
#line 1362 "third_party/libpg_query/grammar/statements/select.y"
    {
					const char *typname;

					typname = (yyvsp[(2) - (5)].boolean) ? "varbit" : "bit";
					(yyval.typnam) = SystemTypeName(typname);
					(yyval.typnam)->typmods = (yyvsp[(4) - (5)].list);
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 672:
#line 1374 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* bit defaults to bit(1), varbit to no limit */
					if ((yyvsp[(2) - (2)].boolean))
					{
						(yyval.typnam) = SystemTypeName("varbit");
					}
					else
					{
						(yyval.typnam) = SystemTypeName("bit");
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					}
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 673:
#line 1395 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 674:
#line 1399 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 675:
#line 1405 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 676:
#line 1409 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Length was not specified so allow to be unrestricted.
					 * This handles problems with fixed-length (bpchar) strings
					 * which in column definitions must default to a length
					 * of one, but should not be constrained if the length
					 * was not specified.
					 */
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 677:
#line 1422 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (4)].conststr));
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 678:
#line 1430 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (1)].conststr));
					/* char defaults to char(1), varchar to no limit */
					if (strcmp((yyvsp[(1) - (1)].conststr), "bpchar") == 0)
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 679:
#line 1440 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 680:
#line 1442 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 681:
#line 1444 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "varchar"; ;}
    break;

  case 682:
#line 1446 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 683:
#line 1448 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 684:
#line 1450 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 685:
#line 1454 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 686:
#line 1455 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 687:
#line 1463 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 688:
#line 1472 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 689:
#line 1480 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 690:
#line 1489 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 691:
#line 1500 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("interval");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 692:
#line 1507 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 693:
#line 1508 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 694:
#line 1509 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 711:
#line 1538 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR), (yylsp[(1) - (1)]))); ;}
    break;

  case 712:
#line 1540 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MONTH), (yylsp[(1) - (1)]))); ;}
    break;

  case 713:
#line 1542 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY), (yylsp[(1) - (1)]))); ;}
    break;

  case 714:
#line 1544 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR), (yylsp[(1) - (1)]))); ;}
    break;

  case 715:
#line 1546 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE), (yylsp[(1) - (1)]))); ;}
    break;

  case 716:
#line 1548 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 717:
#line 1550 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MILLISECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 718:
#line 1552 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MICROSECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 719:
#line 1554 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR) |
												 INTERVAL_MASK(MONTH), (yylsp[(1) - (3)])));
				;}
    break;

  case 720:
#line 1559 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR), (yylsp[(1) - (3)])));
				;}
    break;

  case 721:
#line 1564 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 722:
#line 1570 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 723:
#line 1577 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 724:
#line 1582 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 725:
#line 1588 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 726:
#line 1593 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 727:
#line 1624 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 728:
#line 1627 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), 0, (yylsp[(2) - (3)])); ;}
    break;

  case 729:
#line 1629 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = (yyvsp[(1) - (3)].node);
					n->collname = (yyvsp[(3) - (3)].list);
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 730:
#line 1637 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("timezone"),
											   list_make2((yyvsp[(5) - (5)].node), (yyvsp[(1) - (5)].node)),
											   (yylsp[(2) - (5)]));
				;}
    break;

  case 731:
#line 1652 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 732:
#line 1654 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 733:
#line 1656 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 734:
#line 1658 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 735:
#line 1660 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 736:
#line 1662 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 737:
#line 1664 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 738:
#line 1666 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 739:
#line 1668 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 740:
#line 1670 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 741:
#line 1672 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 742:
#line 1674 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 743:
#line 1676 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 744:
#line 1678 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 745:
#line 1681 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 746:
#line 1683 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 747:
#line 1685 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 748:
#line 1688 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeAndExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 749:
#line 1690 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeOrExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 750:
#line 1692 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 751:
#line 1694 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 752:
#line 1697 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_GLOB, "~~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 753:
#line 1702 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 754:
#line 1707 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make3((yyvsp[(1) - (5)].node), (yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 755:
#line 1714 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "!~~",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 756:
#line 1719 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make3((yyvsp[(1) - (6)].node), (yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 757:
#line 1726 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 758:
#line 1731 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make2((yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 759:
#line 1739 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 760:
#line 1744 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 761:
#line 1753 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (4)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (4)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (4)].node), (PGNode *) n, (yylsp[(2) - (4)]));
				;}
    break;

  case 762:
#line 1761 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 763:
#line 1769 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (5)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 764:
#line 1777 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
											   (yylsp[(2) - (7)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (7)].node), (PGNode *) n, (yylsp[(2) - (7)]));
				;}
    break;

  case 765:
#line 1795 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 766:
#line 1803 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 767:
#line 1811 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 768:
#line 1819 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 769:
#line 1827 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 770:
#line 1834 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("row"), (yyvsp[(1) - (1)].list), (yylsp[(1) - (1)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 771:
#line 1838 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("struct_pack"), (yyvsp[(2) - (3)].list), (yylsp[(2) - (3)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 772:
#line 1842 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("list_value"), (yyvsp[(2) - (3)].list), (yylsp[(2) - (3)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 773:
#line 1847 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGLambdaFunction *n = makeNode(PGLambdaFunction);
				n->parameters = (yyvsp[(1) - (3)].list);
				n->function = (yyvsp[(3) - (3)].node);
				n->location = (yylsp[(2) - (3)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 774:
#line 1855 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGLambdaFunction *n = makeNode(PGLambdaFunction);
				n->parameters = list_make1((yyvsp[(1) - (3)].node));
				n->function = (yyvsp[(3) - (3)].node);
				n->location = (yylsp[(2) - (3)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 775:
#line 1863 "third_party/libpg_query/grammar/statements/select.y"
    {
					if (list_length((yyvsp[(1) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on left side of OVERLAPS expression"),
								 parser_errposition((yylsp[(1) - (3)]))));
					if (list_length((yyvsp[(3) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on right side of OVERLAPS expression"),
								 parser_errposition((yylsp[(3) - (3)]))));
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlaps"),
											   list_concat((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)),
											   (yylsp[(2) - (3)]));
				;}
    break;

  case 776:
#line 1879 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = PG_IS_TRUE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 777:
#line 1887 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_TRUE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 778:
#line 1895 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_FALSE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 779:
#line 1903 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_FALSE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 780:
#line 1911 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_UNKNOWN;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 781:
#line 1919 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_UNKNOWN;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 782:
#line 1927 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 783:
#line 1931 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 784:
#line 1935 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 785:
#line 1939 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 786:
#line 1943 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN,
												   "BETWEEN",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 787:
#line 1951 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN,
												   "NOT BETWEEN",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 788:
#line 1959 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN_SYM,
												   "BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 789:
#line 1967 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN_SYM,
												   "NOT BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 790:
#line 1975 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(3) - (3)].node), PGSubLink))
					{
						/* generate foo = ANY (subquery) */
						PGSubLink *n = (PGSubLink *) (yyvsp[(3) - (3)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (3)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (3)]);
						(yyval.node) = (PGNode *)n;
					}
					else
					{
						/* generate scalar IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
					}
				;}
    break;

  case 791:
#line 1995 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(4) - (4)].node), PGSubLink))
					{
						/* generate NOT (foo = ANY (subquery)) */
						/* Make an = ANY node */
						PGSubLink *n = (PGSubLink *) (yyvsp[(4) - (4)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (4)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (4)]);
						/* Stick a NOT on top; must have same parse location */
						(yyval.node) = makeNotExpr((PGNode *) n, (yylsp[(2) - (4)]));
					}
					else
					{
						/* generate scalar NOT IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "<>", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
					}
				;}
    break;

  case 792:
#line 2017 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = (yyvsp[(3) - (4)].subquerytype);
					n->subLinkId = 0;
					n->testexpr = (yyvsp[(1) - (4)].node);
					n->operName = (yyvsp[(2) - (4)].list);
					n->subselect = (yyvsp[(4) - (4)].node);
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 793:
#line 2028 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(3) - (6)].subquerytype) == PG_ANY_SUBLINK)
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ANY, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
					else
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ALL, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 794:
#line 2035 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * The SQL spec only allows DEFAULT in "contextually typed
					 * expressions", but for us, it's easier to allow it in
					 * any a_expr and then throw error during parse analysis
					 * if it's in an inappropriate context.  This way also
					 * lets us say something smarter than "syntax error".
					 */
					PGSetToDefault *n = makeNode(PGSetToDefault);
					/* parse analysis will fill in the rest */
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 795:
#line 2048 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGList *func_name = list_make1(makeString("construct_array"));
				PGFuncCall *n = makeFuncCall(func_name, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 796:
#line 2065 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 797:
#line 2067 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), 0, (yylsp[(2) - (3)])); ;}
    break;

  case 798:
#line 2069 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 799:
#line 2071 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 800:
#line 2073 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 801:
#line 2075 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 802:
#line 2077 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 803:
#line 2079 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 804:
#line 2081 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 805:
#line 2083 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 806:
#line 2085 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 807:
#line 2087 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 808:
#line 2089 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 809:
#line 2091 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 810:
#line 2093 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 811:
#line 2095 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 812:
#line 2097 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 813:
#line 2099 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 814:
#line 2101 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 815:
#line 2103 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 816:
#line 2107 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 817:
#line 2111 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 818:
#line 2115 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 819:
#line 2128 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 820:
#line 2129 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 821:
#line 2131 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGPositionalReference *n = makeNode(PGPositionalReference);
					n->position = (yyvsp[(2) - (2)].ival);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 822:
#line 2138 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeParamRef(0, (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeParamRef(0, (yylsp[(1) - (2)]));
				;}
    break;

  case 823:
#line 2150 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGParamRef *p = makeNode(PGParamRef);
					p->number = (yyvsp[(1) - (2)].ival);
					p->location = (yylsp[(1) - (2)]);
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (PGNode *) p;
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = (PGNode *) p;
				;}
    break;

  case 824:
#line 2165 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(4) - (4)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(2) - (4)].node);
						n->indirection = check_indirection((yyvsp[(4) - (4)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else
						(yyval.node) = (yyvsp[(2) - (4)].node);
				;}
    break;

  case 825:
#line 2177 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 826:
#line 2179 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list)) {
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(1) - (2)].node);
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else {
						(yyval.node) = (yyvsp[(1) - (2)].node);
					}
				;}
    break;

  case 827:
#line 2191 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (1)].node);
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 828:
#line 2202 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Because the select_with_parens nonterminal is designed
					 * to "eat" as many levels of parens as possible, the
					 * '(' a_expr ')' opt_indirection production above will
					 * fail to match a sub-SELECT with indirection decoration;
					 * the sub-SELECT won't be regarded as an a_expr as long
					 * as there are parens around it.  To support applying
					 * subscripting or field selection to a sub-SELECT result,
					 * we need this redundant-looking production.
					 */
					PGSubLink *n = makeNode(PGSubLink);
					PGAIndirection *a = makeNode(PGAIndirection);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					a->arg = (PGNode *)n;
					a->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.node) = (PGNode *)a;
				;}
    break;

  case 829:
#line 2226 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXISTS_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(2) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 830:
#line 2239 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall((yyvsp[(1) - (3)].list), NIL, (yylsp[(1) - (3)]));
				;}
    break;

  case 831:
#line 2243 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (5)].list), (yyvsp[(3) - (5)].list), (yylsp[(1) - (5)]));
					n->agg_order = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 832:
#line 2249 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), list_make1((yyvsp[(4) - (6)].node)), (yylsp[(1) - (6)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(5) - (6)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 833:
#line 2256 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (8)].list), lappend((yyvsp[(3) - (8)].list), (yyvsp[(6) - (8)].node)), (yylsp[(1) - (8)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(7) - (8)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 834:
#line 2263 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(4) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(5) - (6)].list);
					/* Ideally we'd mark the PGFuncCall node to indicate
					 * "must be an aggregate", but there's no provision
					 * for that in PGFuncCall at the moment.
					 */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 835:
#line 2273 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(4) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(5) - (6)].list);
					n->agg_distinct = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 836:
#line 2280 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * We consider AGGREGATE(*) to invoke a parameterless
					 * aggregate.  This does the right thing for COUNT(*),
					 * and there are no other aggregates in SQL that accept
					 * '*' as parameter.
					 *
					 * The PGFuncCall node is also marked agg_star = true,
					 * so that later processing can detect what the argument
					 * really was.
					 */
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (4)].list), NIL, (yylsp[(1) - (4)]));
					n->agg_star = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 837:
#line 2308 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = (PGFuncCall *) (yyvsp[(1) - (4)].node);
					/*
					 * The order clause for WITHIN GROUP and the one for
					 * plain-aggregate ORDER BY share a field, so we have to
					 * check here that at most one is present.  We also check
					 * for DISTINCT and VARIADIC here to give a better error
					 * location.  Other consistency checks are deferred to
					 * parse analysis.
					 */
					if ((yyvsp[(2) - (4)].list) != NIL)
					{
						if (n->agg_order != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use multiple ORDER BY clauses with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->agg_distinct)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use DISTINCT with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->func_variadic)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use VARIADIC with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						n->agg_order = (yyvsp[(2) - (4)].list);
						n->agg_within_group = true;
					}
					n->agg_filter = (yyvsp[(3) - (4)].node);
					n->over = (yyvsp[(4) - (4)].windef);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 838:
#line 2343 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 839:
#line 2353 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 840:
#line 2354 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 841:
#line 2362 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("pg_collation_for"),
											   list_make1((yyvsp[(4) - (5)].node)),
											   (yylsp[(1) - (5)]));
				;}
    break;

  case 842:
#line 2368 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_DATE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 843:
#line 2372 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 844:
#line 2376 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 845:
#line 2380 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 846:
#line 2384 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 847:
#line 2388 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 848:
#line 2392 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 849:
#line 2396 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 850:
#line 2400 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 851:
#line 2404 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_ROLE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 852:
#line 2408 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 853:
#line 2412 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_SESSION_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 854:
#line 2416 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 855:
#line 2420 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_CATALOG, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 856:
#line 2424 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_SCHEMA, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 857:
#line 2428 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), 0, (yylsp[(1) - (6)])); ;}
    break;

  case 858:
#line 2430 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), 1, (yylsp[(1) - (6)])); ;}
    break;

  case 859:
#line 2432 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("date_part"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 860:
#line 2436 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* overlay(A PLACING B FROM C FOR D) is converted to
					 * overlay(A, B, C, D)
					 * overlay(A PLACING B FROM C) is converted to
					 * overlay(A, B, C)
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlay"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 861:
#line 2445 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* position(A in B) is converted to position(B, A) */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("position"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 862:
#line 2450 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* substring(A from B for C) is converted to
					 * substring(A, B, C) - thomas 2000-11-28
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("substring"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 863:
#line 2457 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* TREAT(expr AS target) converts expr of a particular type to target,
					 * which is defined to be a subtype of the original expression.
					 * In SQL99, this is intended for use with structured UDTs,
					 * but let's make this a generally useful form allowing stronger
					 * coercions than are handled by implicit casting.
					 *
					 * Convert SystemTypeName() to SystemFuncName() even though
					 * at the moment they result in the same thing.
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName(((PGValue *)llast((yyvsp[(5) - (6)].typnam)->names))->val.str),
												list_make1((yyvsp[(3) - (6)].node)),
												(yylsp[(1) - (6)]));
				;}
    break;

  case 864:
#line 2472 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* various trim expressions are defined in SQL
					 * - thomas 1997-07-19
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 865:
#line 2479 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("ltrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 866:
#line 2483 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("rtrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 867:
#line 2487 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 868:
#line 2491 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NULLIF, "=", (yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(1) - (6)]));
				;}
    break;

  case 869:
#line 2495 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCoalesceExpr *c = makeNode(PGCoalesceExpr);
					c->args = (yyvsp[(3) - (4)].list);
					c->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 870:
#line 2508 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 871:
#line 2509 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 872:
#line 2513 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(4) - (5)].node); ;}
    break;

  case 873:
#line 2514 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 874:
#line 2522 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 875:
#line 2523 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 876:
#line 2527 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].windef)); ;}
    break;

  case 877:
#line 2529 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].windef)); ;}
    break;

  case 878:
#line 2534 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(3) - (3)].windef);
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.windef) = n;
				;}
    break;

  case 879:
#line 2542 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = (yyvsp[(2) - (2)].windef); ;}
    break;

  case 880:
#line 2544 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = (yyvsp[(2) - (2)].str);
					n->refname = NULL;
					n->partitionClause = NIL;
					n->orderClause = NIL;
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.windef) = n;
				;}
    break;

  case 881:
#line 2557 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = NULL; ;}
    break;

  case 882:
#line 2562 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = NULL;
					n->refname = (yyvsp[(2) - (6)].str);
					n->partitionClause = (yyvsp[(3) - (6)].list);
					n->orderClause = (yyvsp[(4) - (6)].list);
					/* copy relevant fields of opt_frame_clause */
					n->frameOptions = (yyvsp[(5) - (6)].windef)->frameOptions;
					n->startOffset = (yyvsp[(5) - (6)].windef)->startOffset;
					n->endOffset = (yyvsp[(5) - (6)].windef)->endOffset;
					n->location = (yylsp[(1) - (6)]);
					(yyval.windef) = n;
				;}
    break;

  case 883:
#line 2587 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 884:
#line 2588 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 885:
#line 2591 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 886:
#line 2592 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 887:
#line 2604 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_RANGE;
					(yyval.windef) = n;
				;}
    break;

  case 888:
#line 2610 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_ROWS;
					(yyval.windef) = n;
				;}
    break;

  case 889:
#line 2616 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 890:
#line 2626 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(1) - (1)].windef);
					/* reject invalid cases */
					if (n->frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(1) - (1)]))));
					if (n->frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot end with current row"),
								 parser_errposition((yylsp[(1) - (1)]))));
					n->frameOptions |= FRAMEOPTION_END_CURRENT_ROW;
					(yyval.windef) = n;
				;}
    break;

  case 891:
#line 2643 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n1 = (yyvsp[(2) - (4)].windef);
					PGWindowDef *n2 = (yyvsp[(4) - (4)].windef);
					/* form merged options */
					int		frameOptions = n1->frameOptions;
					/* shift converts START_ options to END_ options */
					frameOptions |= n2->frameOptions << 1;
					frameOptions |= FRAMEOPTION_BETWEEN;
					/* reject invalid cases */
					if (frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(2) - (4)]))));
					if (frameOptions & FRAMEOPTION_END_UNBOUNDED_PRECEDING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame end cannot be UNBOUNDED PRECEDING"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_CURRENT_ROW) &&
						(frameOptions & FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from current row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING) &&
						(frameOptions & (FRAMEOPTION_END_VALUE_PRECEDING |
										 FRAMEOPTION_END_CURRENT_ROW)))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					n1->frameOptions = frameOptions;
					n1->endOffset = n2->startOffset;
					(yyval.windef) = n1;
				;}
    break;

  case 892:
#line 2688 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_PRECEDING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 893:
#line 2696 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_FOLLOWING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 894:
#line 2704 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_CURRENT_ROW;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 895:
#line 2712 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_PRECEDING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 896:
#line 2720 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_FOLLOWING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 897:
#line 2740 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 898:
#line 2741 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 899:
#line 2744 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 900:
#line 2745 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(2) - (5)].list), (yyvsp[(4) - (5)].node)); ;}
    break;

  case 901:
#line 2749 "third_party/libpg_query/grammar/statements/select.y"
    {
		PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
		na->name = (yyvsp[(1) - (3)].str);
		na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
		na->argnumber = -1;
		na->location = (yylsp[(1) - (3)]);
		(yyval.node) = (PGNode *) na;
	;}
    break;

  case 902:
#line 2759 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 903:
#line 2760 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 904:
#line 2762 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 905:
#line 2763 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 906:
#line 2764 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ALL_SUBLINK; ;}
    break;

  case 907:
#line 2767 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 908:
#line 2768 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) (yyvsp[(1) - (1)].conststr); ;}
    break;

  case 909:
#line 2771 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "+"; ;}
    break;

  case 910:
#line 2772 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "-"; ;}
    break;

  case 911:
#line 2773 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "*"; ;}
    break;

  case 912:
#line 2774 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "/"; ;}
    break;

  case 913:
#line 2775 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "%"; ;}
    break;

  case 914:
#line 2776 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "^"; ;}
    break;

  case 915:
#line 2777 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<"; ;}
    break;

  case 916:
#line 2778 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">"; ;}
    break;

  case 917:
#line 2779 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "="; ;}
    break;

  case 918:
#line 2780 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<="; ;}
    break;

  case 919:
#line 2781 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">="; ;}
    break;

  case 920:
#line 2782 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<>"; ;}
    break;

  case 921:
#line 2786 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 922:
#line 2788 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 923:
#line 2793 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 924:
#line 2795 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 925:
#line 2800 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 926:
#line 2802 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 927:
#line 2804 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~")); ;}
    break;

  case 928:
#line 2806 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~")); ;}
    break;

  case 929:
#line 2808 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~~")); ;}
    break;

  case 930:
#line 2810 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~~")); ;}
    break;

  case 931:
#line 2812 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~*")); ;}
    break;

  case 932:
#line 2814 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~*")); ;}
    break;

  case 933:
#line 2828 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 934:
#line 2830 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 935:
#line 2834 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 936:
#line 2838 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 937:
#line 2845 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 938:
#line 2849 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = NULL;
				;}
    break;

  case 939:
#line 2857 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 940:
#line 2861 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 941:
#line 2867 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 942:
#line 2871 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 943:
#line 2880 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 944:
#line 2890 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 945:
#line 2891 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 946:
#line 2896 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(makeStringConst((yyvsp[(1) - (3)].str), (yylsp[(1) - (3)])), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 947:
#line 2899 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 948:
#line 2906 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 949:
#line 2907 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "year"; ;}
    break;

  case 950:
#line 2908 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "month"; ;}
    break;

  case 951:
#line 2909 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "day"; ;}
    break;

  case 952:
#line 2910 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "hour"; ;}
    break;

  case 953:
#line 2911 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "minute"; ;}
    break;

  case 954:
#line 2912 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "second"; ;}
    break;

  case 955:
#line 2913 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "millisecond"; ;}
    break;

  case 956:
#line 2914 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "microsecond"; ;}
    break;

  case 957:
#line 2915 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 958:
#line 2926 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make4((yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].node), (yyvsp[(3) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 959:
#line 2930 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 960:
#line 2937 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 961:
#line 2943 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(3) - (3)].node), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 962:
#line 2944 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 963:
#line 2961 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 964:
#line 2965 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* not legal per SQL99, but might as well allow it */
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yyvsp[(2) - (3)].node));
				;}
    break;

  case 965:
#line 2970 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 966:
#line 2974 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Since there are no cases where this syntax allows
					 * a textual FOR value, we forcibly cast the argument
					 * to int4.  The possible matches in pg_proc are
					 * substring(text,int4) and substring(text,text),
					 * and we don't want the parser to choose the latter,
					 * which it is likely to do if the second argument
					 * is unknown or doesn't have an implicit cast to int4.
					 */
					(yyval.list) = list_make3((yyvsp[(1) - (2)].node), makeIntConst(1, -1),
									makeTypeCast((yyvsp[(2) - (2)].node),
												 SystemTypeName("int4"), 0, -1));
				;}
    break;

  case 967:
#line 2989 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 968:
#line 2993 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 969:
#line 2997 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 970:
#line 3000 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 971:
#line 3003 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(3) - (3)].list), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 972:
#line 3004 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 973:
#line 3005 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 974:
#line 3009 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subselect = (yyvsp[(1) - (1)].node);
					/* other fields will be filled later */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 975:
#line 3015 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *)(yyvsp[(2) - (3)].list); ;}
    break;

  case 976:
#line 3026 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseExpr *c = makeNode(PGCaseExpr);
					c->casetype = InvalidOid; /* not analyzed yet */
					c->arg = (PGExpr *) (yyvsp[(2) - (5)].node);
					c->args = (yyvsp[(3) - (5)].list);
					c->defresult = (PGExpr *) (yyvsp[(4) - (5)].node);
					c->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 977:
#line 3039 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 978:
#line 3040 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 979:
#line 3045 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseWhen *w = makeNode(PGCaseWhen);
					w->expr = (PGExpr *) (yyvsp[(2) - (4)].node);
					w->result = (PGExpr *) (yyvsp[(4) - (4)].node);
					w->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)w;
				;}
    break;

  case 980:
#line 3055 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 981:
#line 3056 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 982:
#line 3059 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 983:
#line 3060 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 984:
#line 3064 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (1)].str), NIL, (yylsp[(1) - (1)]), yyscanner);
				;}
    break;

  case 985:
#line 3068 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].list), (yylsp[(1) - (2)]), yyscanner);
				;}
    break;

  case 986:
#line 3075 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(2) - (2)].str));
				;}
    break;

  case 987:
#line 3079 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = false;
					ai->lidx = NULL;
					ai->uidx = (yyvsp[(2) - (3)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 988:
#line 3087 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = true;
					ai->lidx = (yyvsp[(2) - (5)].node);
					ai->uidx = (yyvsp[(4) - (5)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 989:
#line 3097 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 990:
#line 3098 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 991:
#line 3102 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 992:
#line 3103 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 993:
#line 3107 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 994:
#line 3108 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 997:
#line 3122 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 998:
#line 3123 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 999:
#line 3127 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 1000:
#line 3128 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 1001:
#line 3132 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(3) - (3)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (3)].node);
					(yyval.target)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 1002:
#line 3148 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(2) - (2)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (2)].node);
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 1003:
#line 3156 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (1)].node);
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 1004:
#line 3164 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnRef *n = makeNode(PGColumnRef);
					PGAStar *star = makeNode(PGAStar);
					n->fields = list_make1(star);
					n->location = (yylsp[(1) - (3)]);
					star->except_list = (yyvsp[(2) - (3)].list);
					star->replace_list = (yyvsp[(3) - (3)].list);

					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)n;
					(yyval.target)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 1005:
#line 3179 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnRef *n = makeNode(PGColumnRef);
					PGAStar *star = makeNode(PGAStar);
					n->fields = list_make1(star);
					n->location = (yylsp[(1) - (5)]);
					star->relation = (yyvsp[(1) - (5)].str);
					star->except_list = (yyvsp[(4) - (5)].list);
					star->replace_list = (yyvsp[(5) - (5)].list);

					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)n;
					(yyval.target)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 1006:
#line 3196 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 1007:
#line 3197 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
    break;

  case 1008:
#line 3200 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1009:
#line 3201 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NULL; ;}
    break;

  case 1010:
#line 3204 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (3)].node), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1011:
#line 3208 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 1012:
#line 3209 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 1013:
#line 3212 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 1014:
#line 3213 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(2) - (2)].list)); ;}
    break;

  case 1015:
#line 3214 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NULL; ;}
    break;

  case 1016:
#line 3224 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].range)); ;}
    break;

  case 1017:
#line 3225 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].range)); ;}
    break;

  case 1018:
#line 3237 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = makeRangeVar(NULL, (yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1019:
#line 3241 "third_party/libpg_query/grammar/statements/select.y"
    {
					check_qualified_name((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.range) = makeRangeVar(NULL, NULL, (yylsp[(1) - (2)]));
					switch (list_length((yyvsp[(2) - (2)].list)))
					{
						case 1:
							(yyval.range)->catalogname = NULL;
							(yyval.range)->schemaname = (yyvsp[(1) - (2)].str);
							(yyval.range)->relname = strVal(linitial((yyvsp[(2) - (2)].list)));
							break;
						case 2:
							(yyval.range)->catalogname = (yyvsp[(1) - (2)].str);
							(yyval.range)->schemaname = strVal(linitial((yyvsp[(2) - (2)].list)));
							(yyval.range)->relname = strVal(lsecond((yyvsp[(2) - (2)].list)));
							break;
						default:
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("improper qualified name (too many dotted names): %s",
											NameListToString(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)))),
									 parser_errposition((yylsp[(1) - (2)]))));
							break;
					}
				;}
    break;

  case 1020:
#line 3268 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1021:
#line 3270 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1022:
#line 3274 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1023:
#line 3276 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1024:
#line 3287 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1025:
#line 3290 "third_party/libpg_query/grammar/statements/select.y"
    {
						(yyval.list) = check_func_name(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)),
											 yyscanner);
					;}
    break;

  case 1026:
#line 3301 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival), (yylsp[(1) - (1)]));
				;}
    break;

  case 1027:
#line 3305 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1028:
#line 3309 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeStringConst((yyvsp[(1) - (2)].str), (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeStringConst((yyvsp[(1) - (2)].str), (yylsp[(1) - (2)]));
				;}
    break;

  case 1029:
#line 3321 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1030:
#line 3325 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* This is a bit constant per SQL99:
					 * Without Feature F511, "BIT data type",
					 * a <general literal> shall not be a
					 * <bit string literal> or a <hex string literal>.
					 */
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1031:
#line 3334 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic type 'literal' syntax */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (2)].list));
					t->location = (yylsp[(1) - (2)]);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), t);
				;}
    break;

  case 1032:
#line 3341 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic syntax with a type modifier */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (6)].list));
					PGListCell *lc;

					/*
					 * We must use func_arg_list and opt_sort_clause in the
					 * production to avoid reduce/reduce conflicts, but we
					 * don't actually wish to allow PGNamedArgExpr in this
					 * context, nor ORDER BY.
					 */
					foreach(lc, (yyvsp[(3) - (6)].list))
					{
						PGNamedArgExpr *arg = (PGNamedArgExpr *) lfirst(lc);

						if (IsA(arg, PGNamedArgExpr))
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have parameter name"),
									 parser_errposition(arg->location)));
					}
					if ((yyvsp[(4) - (6)].list) != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have ORDER BY"),
									 parser_errposition((yylsp[(4) - (6)]))));

					t->typmods = (yyvsp[(3) - (6)].list);
					t->location = (yylsp[(1) - (6)]);
					(yyval.node) = makeStringConstCast((yyvsp[(6) - (6)].str), (yylsp[(6) - (6)]), t);
				;}
    break;

  case 1033:
#line 3373 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), (yyvsp[(1) - (2)].typnam));
				;}
    break;

  case 1034:
#line 3377 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(3) - (5)].node), (yylsp[(3) - (5)]), (yyvsp[(5) - (5)].list));
				;}
    break;

  case 1035:
#line 3381 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].ival), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 1036:
#line 3385 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 1037:
#line 3389 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(true, (yylsp[(1) - (1)]));
				;}
    break;

  case 1038:
#line 3393 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(false, (yylsp[(1) - (1)]));
				;}
    break;

  case 1039:
#line 3397 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 1040:
#line 3402 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1041:
#line 3403 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1042:
#line 3419 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1043:
#line 3420 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1044:
#line 3421 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1045:
#line 3424 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1046:
#line 3425 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1047:
#line 3431 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1048:
#line 3432 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1049:
#line 3433 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1050:
#line 3436 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1051:
#line 3437 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1052:
#line 3438 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1053:
#line 3441 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1054:
#line 3442 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1055:
#line 3443 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1056:
#line 3446 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1057:
#line 3447 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 1058:
#line 3451 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
    break;

  case 1059:
#line 3453 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1060:
#line 3457 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1061:
#line 3458 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1063:
#line 3469 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1064:
#line 3470 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1065:
#line 3471 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1066:
#line 3472 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1067:
#line 3475 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1068:
#line 3476 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1069:
#line 8 "third_party/libpg_query/grammar/statements/prepare.y"
    {
					PGPrepareStmt *n = makeNode(PGPrepareStmt);
					n->name = (yyvsp[(2) - (5)].str);
					n->argtypes = (yyvsp[(3) - (5)].list);
					n->query = (yyvsp[(5) - (5)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1070:
#line 18 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1071:
#line 19 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1076:
#line 8 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not both */
					n->schemaname = (yyvsp[(3) - (4)].str);
					n->schemaElts = (yyvsp[(4) - (4)].list);
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1077:
#line 17 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not here */
					n->schemaname = (yyvsp[(6) - (7)].str);
					if ((yyvsp[(7) - (7)].list) != NIL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("CREATE SCHEMA IF NOT EXISTS cannot include schema elements"),
								 parser_errposition((yylsp[(7) - (7)]))));
					n->schemaElts = (yyvsp[(7) - (7)].list);
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1078:
#line 35 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					if ((yyloc) < 0)			/* see comments for YYLLOC_DEFAULT */
						(yyloc) = (yylsp[(2) - (2)]);
					(yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 1079:
#line 41 "third_party/libpg_query/grammar/statements/create_schema.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1084:
#line 11 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (13)].boolean);
					n->concurrent = (yyvsp[(4) - (13)].boolean);
					n->idxname = (yyvsp[(5) - (13)].str);
					n->relation = (yyvsp[(7) - (13)].range);
					n->accessMethod = (yyvsp[(8) - (13)].str);
					n->indexParams = (yyvsp[(10) - (13)].list);
					n->options = (yyvsp[(12) - (13)].list);
					n->whereClause = (yyvsp[(13) - (13)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1085:
#line 36 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (16)].boolean);
					n->concurrent = (yyvsp[(4) - (16)].boolean);
					n->idxname = (yyvsp[(8) - (16)].str);
					n->relation = (yyvsp[(10) - (16)].range);
					n->accessMethod = (yyvsp[(11) - (16)].str);
					n->indexParams = (yyvsp[(13) - (16)].list);
					n->options = (yyvsp[(15) - (16)].list);
					n->whereClause = (yyvsp[(16) - (16)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1086:
#line 62 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1087:
#line 66 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
    break;

  case 1088:
#line 67 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (char*) DEFAULT_INDEX_TYPE; ;}
    break;

  case 1089:
#line 72 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1090:
#line 73 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1091:
#line 78 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1092:
#line 79 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = NULL; ;}
    break;

  case 1093:
#line 83 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1094:
#line 84 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1095:
#line 89 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1096:
#line 90 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1097:
#line 8 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1098:
#line 17 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1099:
#line 26 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1100:
#line 35 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1101:
#line 44 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1102:
#line 53 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1103:
#line 6 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					n->force = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1104:
#line 12 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					n->force = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1105:
#line 8 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGExportStmt *n = makeNode(PGExportStmt);
					n->filename = (yyvsp[(3) - (4)].str);
					n->options = NIL;
					if ((yyvsp[(4) - (4)].list)) {
						n->options = list_concat(n->options, (yyvsp[(4) - (4)].list));
					}
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1106:
#line 21 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGImportStmt *n = makeNode(PGImportStmt);
					n->filename = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1107:
#line 10 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(2) - (2)].node);
					n->options = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1108:
#line 17 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(4) - (4)].node);
					n->options = list_make1(makeDefElem("analyze", NULL, (yylsp[(2) - (4)])));
					if ((yyvsp[(3) - (4)].boolean))
						n->options = lappend(n->options,
											 makeDefElem("verbose", NULL, (yylsp[(3) - (4)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1109:
#line 27 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(3) - (3)].node);
					n->options = list_make1(makeDefElem("verbose", NULL, (yylsp[(2) - (3)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1110:
#line 34 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(5) - (5)].node);
					n->options = (yyvsp[(3) - (5)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1111:
#line 44 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1112:
#line 45 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1113:
#line 50 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 1114:
#line 51 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 1115:
#line 52 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1121:
#line 65 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1122:
#line 66 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1123:
#line 67 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1124:
#line 72 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1125:
#line 73 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1126:
#line 79 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 1127:
#line 83 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 1128:
#line 90 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1129:
#line 91 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1130:
#line 96 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "true"; ;}
    break;

  case 1131:
#line 97 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "false"; ;}
    break;

  case 1132:
#line 98 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "on"; ;}
    break;

  case 1133:
#line 104 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1134:
#line 110 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 1135:
#line 117 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1136:
#line 118 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "analyze"; ;}
    break;

  case 1137:
#line 11 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(2) - (2)].vsetstmt);
					n->scope = VAR_SET_SCOPE_DEFAULT;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1138:
#line 17 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->scope = VAR_SET_SCOPE_LOCAL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1139:
#line 23 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->scope = VAR_SET_SCOPE_SESSION;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1140:
#line 29 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->scope = VAR_SET_SCOPE_GLOBAL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1141:
#line 38 "third_party/libpg_query/grammar/statements/variable_set.y"
    {(yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt);;}
    break;

  case 1142:
#line 40 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_CURRENT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1143:
#line 48 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "timezone";
					if ((yyvsp[(3) - (3)].node) != NULL)
						n->args = list_make1((yyvsp[(3) - (3)].node));
					else
						n->kind = VAR_SET_DEFAULT;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1144:
#line 59 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "search_path";
					n->args = list_make1(makeStringConst((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)])));
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1145:
#line 71 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1146:
#line 79 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1147:
#line 87 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1148:
#line 94 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1149:
#line 104 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)])); ;}
    break;

  case 1150:
#line 106 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1151:
#line 112 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1152:
#line 116 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1153:
#line 120 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (3)].typnam);
					if ((yyvsp[(3) - (3)].list) != NIL)
					{
						PGAConst *n = (PGAConst *) linitial((yyvsp[(3) - (3)].list));
						if ((n->val.val.ival & ~(INTERVAL_MASK(HOUR) | INTERVAL_MASK(MINUTE))) != 0)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("time zone interval must be HOUR or HOUR TO MINUTE"),
									 parser_errposition((yylsp[(3) - (3)]))));
					}
					t->typmods = (yyvsp[(3) - (3)].list);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
				;}
    break;

  case 1154:
#line 135 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (5)].typnam);
					t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.node) = makeStringConstCast((yyvsp[(5) - (5)].str), (yylsp[(5) - (5)]), t);
				;}
    break;

  case 1155:
#line 141 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1156:
#line 142 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1157:
#line 143 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1158:
#line 147 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1159:
#line 148 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 1160:
#line 8 "third_party/libpg_query/grammar/statements/load.y"
    {
					PGLoadStmt *n = makeNode(PGLoadStmt);
					n->filename = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1161:
#line 16 "third_party/libpg_query/grammar/statements/load.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1162:
#line 9 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (4)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1163:
#line 23 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(5) - (5)].range);
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1164:
#line 37 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = (PGVacuumStmt *) (yyvsp[(5) - (5)].node);
					n->options |= PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1165:
#line 49 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (4)].ival);
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1166:
#line 57 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (6)].ival);
					n->relation = (yyvsp[(5) - (6)].range);
					n->va_cols = (yyvsp[(6) - (6)].list);
					if (n->va_cols != NIL)	/* implies analyze */
						n->options |= PG_VACOPT_ANALYZE;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1167:
#line 70 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_ANALYZE; ;}
    break;

  case 1168:
#line 71 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_VERBOSE; ;}
    break;

  case 1169:
#line 72 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FREEZE; ;}
    break;

  case 1170:
#line 73 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FULL; ;}
    break;

  case 1171:
#line 75 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					if (strcmp((yyvsp[(1) - (1)].str), "disable_page_skipping") == 0)
						(yyval.ival) = PG_VACOPT_DISABLE_PAGE_SKIPPING;
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("unrecognized VACUUM option \"%s\"", (yyvsp[(1) - (1)].str)),
									 parser_errposition((yylsp[(1) - (1)]))));
				;}
    break;

  case 1172:
#line 87 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1173:
#line 88 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1174:
#line 93 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1175:
#line 94 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 1176:
#line 98 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1177:
#line 99 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1178:
#line 9 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGDeleteStmt *n = makeNode(PGDeleteStmt);
					n->relation = (yyvsp[(4) - (7)].range);
					n->usingClause = (yyvsp[(5) - (7)].list);
					n->whereClause = (yyvsp[(6) - (7)].node);
					n->returningList = (yyvsp[(7) - (7)].list);
					n->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1179:
#line 22 "third_party/libpg_query/grammar/statements/delete.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 1180:
#line 26 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(2) - (2)].str);
					(yyvsp[(1) - (2)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (2)].range);
				;}
    break;

  case 1181:
#line 33 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(3) - (3)].str);
					(yyvsp[(1) - (3)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 1182:
#line 43 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1183:
#line 44 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1184:
#line 50 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1185:
#line 51 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1186:
#line 10 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (2)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1187:
#line 20 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(3) - (4)].range);
					n->va_cols = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1188:
#line 2 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (2)].vsetstmt); ;}
    break;

  case 1189:
#line 8 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (yyvsp[(1) - (1)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1190:
#line 15 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET_ALL;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1191:
#line 24 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt); ;}
    break;

  case 1192:
#line 26 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "timezone";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1193:
#line 33 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "transaction_isolation";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1194:
#line 3 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowSelectStmt *n = makeNode(PGVariableShowSelectStmt);
				n->stmt = (yyvsp[(2) - (2)].node);
				n->name = (char*) "select";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1195:
#line 10 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowSelectStmt *n = makeNode(PGVariableShowSelectStmt);
				n->stmt = (yyvsp[(2) - (2)].node);
				n->name = (char*) "select";
				n->is_summary = 1;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1196:
#line 18 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (yyvsp[(2) - (2)].str);
				n->is_summary = 1;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1197:
#line 25 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (yyvsp[(2) - (2)].str);
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1198:
#line 32 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "timezone";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1199:
#line 39 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "transaction_isolation";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1200:
#line 46 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "all";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1203:
#line 57 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1204:
#line 59 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = psprintf("%s.%s", (yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str)); ;}
    break;

  case 1205:
#line 7 "third_party/libpg_query/grammar/statements/call.y"
    {
					PGCallStmt *n = makeNode(PGCallStmt);
					n->func = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1206:
#line 10 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(4) - (9)].range);
					n->view->relpersistence = (yyvsp[(2) - (9)].ival);
					n->aliases = (yyvsp[(5) - (9)].list);
					n->query = (yyvsp[(8) - (9)].node);
					n->onconflict = PG_ERROR_ON_CONFLICT;
					n->options = (yyvsp[(6) - (9)].list);
					n->withCheckOption = (yyvsp[(9) - (9)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1207:
#line 23 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(6) - (11)].range);
					n->view->relpersistence = (yyvsp[(4) - (11)].ival);
					n->aliases = (yyvsp[(7) - (11)].list);
					n->query = (yyvsp[(10) - (11)].node);
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					n->options = (yyvsp[(8) - (11)].list);
					n->withCheckOption = (yyvsp[(11) - (11)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1208:
#line 36 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(5) - (12)].range);
					n->view->relpersistence = (yyvsp[(2) - (12)].ival);
					n->aliases = (yyvsp[(7) - (12)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(11) - (12)].node));
					n->onconflict = PG_ERROR_ON_CONFLICT;
					n->options = (yyvsp[(9) - (12)].list);
					n->withCheckOption = (yyvsp[(12) - (12)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(12) - (12)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1209:
#line 54 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(7) - (14)].range);
					n->view->relpersistence = (yyvsp[(4) - (14)].ival);
					n->aliases = (yyvsp[(9) - (14)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(13) - (14)].node));
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					n->options = (yyvsp[(11) - (14)].list);
					n->withCheckOption = (yyvsp[(14) - (14)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(14) - (14)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1210:
#line 74 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1211:
#line 75 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1212:
#line 76 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_LOCAL_CHECK_OPTION; ;}
    break;

  case 1213:
#line 77 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_NO_CHECK_OPTION; ;}
    break;

  case 1214:
#line 12 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(6) - (7)].node);
					ctas->into = (yyvsp[(4) - (7)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_ERROR_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (7)].into)->rel->relpersistence = (yyvsp[(2) - (7)].ival);
					(yyvsp[(4) - (7)].into)->skipData = !((yyvsp[(7) - (7)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1215:
#line 25 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(9) - (10)].node);
					ctas->into = (yyvsp[(7) - (10)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_IGNORE_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (10)].into)->rel->relpersistence = (yyvsp[(2) - (10)].ival);
					(yyvsp[(7) - (10)].into)->skipData = !((yyvsp[(10) - (10)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1216:
#line 41 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1217:
#line 42 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1218:
#line 43 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1219:
#line 49 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(1) - (4)].range);
					(yyval.into)->colNames = (yyvsp[(2) - (4)].list);
					(yyval.into)->options = (yyvsp[(3) - (4)].list);
					(yyval.into)->onCommit = (yyvsp[(4) - (4)].oncommit);
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;		/* might get changed later */
				;}
    break;


/* Line 1267 of yacc.c.  */
#line 23986 "third_party/libpg_query/grammar/grammar_out.cpp"
      default: break;
    }
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, yyscanner, YY_("syntax error"));
#else
      {
	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
	  {
	    YYSIZE_T yyalloc = 2 * yysize;
	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
	    if (yymsg != yymsgbuf)
	      YYSTACK_FREE (yymsg);
	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
	    if (yymsg)
	      yymsg_alloc = yyalloc;
	    else
	      {
		yymsg = yymsgbuf;
		yymsg_alloc = sizeof yymsgbuf;
	      }
	  }

	if (0 < yysize && yysize <= yymsg_alloc)
	  {
	    (void) yysyntax_error (yymsg, yystate, yychar);
	    yyerror (&yylloc, yyscanner, yymsg);
	  }
	else
	  {
	    yyerror (&yylloc, yyscanner, YY_("syntax error"));
	    if (yysize != 0)
	      goto yyexhaustedlab;
	  }
      }
#endif
    }

  yyerror_range[0] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse look-ahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
	{
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
	}
      else
	{
	  yydestruct ("Error: discarding",
		      yytoken, &yylval, &yylloc, yyscanner);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse look-ahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[0] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule which action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (yyn != YYPACT_NINF)
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;

      yyerror_range[0] = *yylsp;
      yydestruct ("Error: popping",
		  yystos[yystate], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  *++yyvsp = yylval;

  yyerror_range[1] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the look-ahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, (yyerror_range - 1), 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#ifndef yyoverflow
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, yyscanner, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEOF && yychar != YYEMPTY)
     yydestruct ("Cleanup: discarding lookahead",
		 yytoken, &yylval, &yylloc, yyscanner);
  /* Do not reclaim the symbols of the rule which action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  /* Make sure YYID is used.  */
  return YYID (yyresult);
}


#line 70 "third_party/libpg_query/grammar/statements/create_as.y"


#line 1 "third_party/libpg_query/grammar/grammar.cpp"
/*
 * The signature of this function is required by bison.  However, we
 * ignore the passed yylloc and instead use the last token position
 * available from the scanner.
 */
static void
base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner, const char *msg)
{
	parser_yyerror(msg);
}

static PGRawStmt *
makeRawStmt(PGNode *stmt, int stmt_location)
{
	PGRawStmt    *rs = makeNode(PGRawStmt);

	rs->stmt = stmt;
	rs->stmt_location = stmt_location;
	rs->stmt_len = 0;			/* might get changed later */
	return rs;
}

/* Adjust a PGRawStmt to reflect that it doesn't run to the end of the string */
static void
updateRawStmtEnd(PGRawStmt *rs, int end_location)
{
	/*
	 * If we already set the length, don't change it.  This is for situations
	 * like "select foo ;; select bar" where the same statement will be last
	 * in the string for more than one semicolon.
	 */
	if (rs->stmt_len > 0)
		return;

	/* OK, update length of PGRawStmt */
	rs->stmt_len = end_location - rs->stmt_location;
}

static PGNode *
makeColumnRef(char *colname, PGList *indirection,
			  int location, core_yyscan_t yyscanner)
{
	/*
	 * Generate a PGColumnRef node, with an PGAIndirection node added if there
	 * is any subscripting in the specified indirection list.  However,
	 * any field selection at the start of the indirection list must be
	 * transposed into the "fields" part of the PGColumnRef node.
	 */
	PGColumnRef  *c = makeNode(PGColumnRef);
	int		nfields = 0;
	PGListCell *l;

	c->location = location;
	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAIndices))
		{
			PGAIndirection *i = makeNode(PGAIndirection);

			if (nfields == 0)
			{
				/* easy case - all indirection goes to PGAIndirection */
				c->fields = list_make1(makeString(colname));
				i->indirection = check_indirection(indirection, yyscanner);
			}
			else
			{
				/* got to split the list in two */
				i->indirection = check_indirection(list_copy_tail(indirection,
																  nfields),
												   yyscanner);
				indirection = list_truncate(indirection, nfields);
				c->fields = lcons(makeString(colname), indirection);
			}
			i->arg = (PGNode *) c;
			return (PGNode *) i;
		}
		else if (IsA(lfirst(l), PGAStar))
		{
			/* We only allow '*' at the end of a PGColumnRef */
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
		nfields++;
	}
	/* No subscripting, so all indirection gets added to field list */
	c->fields = lcons(makeString(colname), indirection);
	return (PGNode *) c;
}

static PGNode *
makeTypeCast(PGNode *arg, PGTypeName *tpname, int trycast, int location)
{
	PGTypeCast *n = makeNode(PGTypeCast);
	n->arg = arg;
	n->typeName = tpname;
	n->tryCast = trycast;
	n->location = location;
	return (PGNode *) n;
}

static PGNode *
makeStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeStringConstCast(char *str, int location, PGTypeName *tpname)
{
	PGNode *s = makeStringConst(str, location);

	return makeTypeCast(s, tpname, 0, -1);
}

static PGNode *
makeIntervalNode(char *str, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGString;
	n->sval = str;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;

}

static PGNode *
makeIntervalNode(int val, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGInteger;
	n->ival = val;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeIntervalNode(PGNode *arg, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGAExpr;
	n->eval = arg;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeSampleSize(PGValue *sample_size, bool is_percentage) {
	PGSampleSize *n = makeNode(PGSampleSize);

	n->sample_size = *sample_size;
	n->is_percentage = is_percentage;

	return (PGNode *)n;
}

static PGNode *
makeSampleOptions(PGNode *sample_size, char *method, int seed, int location) {
	PGSampleOptions *n = makeNode(PGSampleOptions);

	n->sample_size = sample_size;
	n->method = method;
	n->seed = seed;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeIntConst(int val, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGInteger;
	n->val.val.ival = val;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeFloatConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGFloat;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeBitStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGBitString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeNullAConst(int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGNull;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeAConst(PGValue *v, int location)
{
	PGNode *n;

	switch (v->type)
	{
		case T_PGFloat:
			n = makeFloatConst(v->val.str, location);
			break;

		case T_PGInteger:
			n = makeIntConst(v->val.ival, location);
			break;

		case T_PGString:
		default:
			n = makeStringConst(v->val.str, location);
			break;
	}

	return n;
}

/* makeBoolAConst()
 * Create an PGAConst string node and put it inside a boolean cast.
 */
static PGNode *
makeBoolAConst(bool state, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = (state ? (char*) "t" : (char*) "f");
	n->location = location;

	return makeTypeCast((PGNode *)n, SystemTypeName("bool"), 0, -1);
}

/* check_qualified_name --- check the result of qualified_name production
 *
 * It's easiest to let the grammar production for qualified_name allow
 * subscripts and '*', which we then must reject here.
 */
static void
check_qualified_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
}

/* check_func_name --- check the result of func_name production
 *
 * It's easiest to let the grammar production for func_name allow subscripts
 * and '*', which we then must reject here.
 */
static PGList *
check_func_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
	return names;
}

/* check_indirection --- check the result of indirection production
 *
 * We only allow '*' at the end of the list, but it's hard to enforce that
 * in the grammar, so do it here.
 */
static PGList *
check_indirection(PGList *indirection, core_yyscan_t yyscanner)
{
	PGListCell *l;

	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAStar))
		{
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
	}
	return indirection;
}

/* makeParamRef
 * Creates a new PGParamRef node
 */
static PGNode* makeParamRef(int number, int location)
{
	PGParamRef *p = makeNode(PGParamRef);
	p->number = number;
	p->location = location;
	return (PGNode *) p;
}


/* insertSelectOptions()
 * Insert ORDER BY, etc into an already-constructed SelectStmt.
 *
 * This routine is just to avoid duplicating code in PGSelectStmt productions.
 */
static void
insertSelectOptions(PGSelectStmt *stmt,
					PGList *sortClause, PGList *lockingClause,
					PGNode *limitOffset, PGNode *limitCount,
					PGWithClause *withClause,
					core_yyscan_t yyscanner)
{
	Assert(IsA(stmt, PGSelectStmt));

	/*
	 * Tests here are to reject constructs like
	 *	(SELECT foo ORDER BY bar) ORDER BY baz
	 */
	if (sortClause)
	{
		if (stmt->sortClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple ORDER BY clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) sortClause))));
		stmt->sortClause = sortClause;
	}
	/* We can handle multiple locking clauses, though */
	stmt->lockingClause = list_concat(stmt->lockingClause, lockingClause);
	if (limitOffset)
	{
		if (stmt->limitOffset)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple OFFSET clauses not allowed"),
					 parser_errposition(exprLocation(limitOffset))));
		stmt->limitOffset = limitOffset;
	}
	if (limitCount)
	{
		if (stmt->limitCount)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple LIMIT clauses not allowed"),
					 parser_errposition(exprLocation(limitCount))));
		stmt->limitCount = limitCount;
	}
	if (withClause)
	{
		if (stmt->withClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple WITH clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) withClause))));
		stmt->withClause = withClause;
	}
}

static PGNode *
makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg)
{
	PGSelectStmt *n = makeNode(PGSelectStmt);

	n->op = op;
	n->all = all;
	n->larg = (PGSelectStmt *) larg;
	n->rarg = (PGSelectStmt *) rarg;
	return (PGNode *) n;
}

/* SystemFuncName()
 * Build a properly-qualified reference to a built-in function.
 */
PGList *
SystemFuncName(const char *name)
{
	return list_make2(makeString(DEFAULT_SCHEMA), makeString(name));
}

/* SystemTypeName()
 * Build a properly-qualified reference to a built-in type.
 *
 * typmod is defaulted, but may be changed afterwards by caller.
 * Likewise for the location.
 */
PGTypeName *
SystemTypeName(const char *name)
{
	return makeTypeNameFromNameList(list_make2(makeString(DEFAULT_SCHEMA),
											   makeString(name)));
}

/* doNegate()
 * Handle negation of a numeric constant.
 *
 * Formerly, we did this here because the optimizer couldn't cope with
 * indexquals that looked like "var = -4" --- it wants "var = const"
 * and a unary minus operator applied to a constant didn't qualify.
 * As of Postgres 7.0, that problem doesn't exist anymore because there
 * is a constant-subexpression simplifier in the optimizer.  However,
 * there's still a good reason for doing this here, which is that we can
 * postpone committing to a particular internal representation for simple
 * negative constants.	It's better to leave "-123.456" in string form
 * until we know what the desired type is.
 */
static PGNode *
doNegate(PGNode *n, int location)
{
	if (IsA(n, PGAConst))
	{
		PGAConst *con = (PGAConst *)n;

		/* report the constant's location as that of the '-' sign */
		con->location = location;

		if (con->val.type == T_PGInteger)
		{
			con->val.val.ival = -con->val.val.ival;
			return n;
		}
		if (con->val.type == T_PGFloat)
		{
			doNegateFloat(&con->val);
			return n;
		}
	}

	return (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", NULL, n, location);
}

static void
doNegateFloat(PGValue *v)
{
	char   *oldval = v->val.str;

	Assert(IsA(v, PGFloat));
	if (*oldval == '+')
		oldval++;
	if (*oldval == '-')
		v->val.str = oldval+1;	/* just strip the '-' */
	else
		v->val.str = psprintf("-%s", oldval);
}

static PGNode *
makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a AND b AND c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_AND_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_AND_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a OR b OR c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_OR_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_OR_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeNotExpr(PGNode *expr, int location)
{
	return (PGNode *) makeBoolExpr(PG_NOT_EXPR, list_make1(expr), location);
}

static PGNode *
makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod, int location)
{
	PGSQLValueFunction *svf = makeNode(PGSQLValueFunction);

	svf->op = op;
	/* svf->type will be filled during parse analysis */
	svf->typmod = typmod;
	svf->location = location;
	return (PGNode *) svf;
}

/* Separate PGConstraint nodes from COLLATE clauses in a */
static void
SplitColQualList(PGList *qualList,
				 PGList **constraintList, PGCollateClause **collClause,
				 core_yyscan_t yyscanner)
{
	PGListCell   *cell;
	PGListCell   *prev;
	PGListCell   *next;

	*collClause = NULL;
	prev = NULL;
	for (cell = list_head(qualList); cell; cell = next)
	{
		PGNode   *n = (PGNode *) lfirst(cell);

		next = lnext(cell);
		if (IsA(n, PGConstraint))
		{
			/* keep it in list */
			prev = cell;
			continue;
		}
		if (IsA(n, PGCollateClause))
		{
			PGCollateClause *c = (PGCollateClause *) n;

			if (*collClause)
				ereport(ERROR,
						(errcode(PG_ERRCODE_SYNTAX_ERROR),
						 errmsg("multiple COLLATE clauses not allowed"),
						 parser_errposition(c->location)));
			*collClause = c;
		}
		else
			elog(ERROR, "unexpected node type %d", (int) n->type);
		/* remove non-Constraint nodes from qualList */
		qualList = list_delete_cell(qualList, cell, prev);
	}
	*constraintList = qualList;
}

/*
 * Process result of ConstraintAttributeSpec, and set appropriate bool flags
 * in the output command node.  Pass NULL for any flags the particular
 * command doesn't support.
 */
static void
processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner)
{
	/* defaults */
	if (deferrable)
		*deferrable = false;
	if (initdeferred)
		*initdeferred = false;
	if (not_valid)
		*not_valid = false;

	if (cas_bits & (CAS_DEFERRABLE | CAS_INITIALLY_DEFERRED))
	{
		if (deferrable)
			*deferrable = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_INITIALLY_DEFERRED)
	{
		if (initdeferred)
			*initdeferred = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NOT_VALID)
	{
		if (not_valid)
			*not_valid = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NOT VALID",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NO_INHERIT)
	{
		if (no_inherit)
			*no_inherit = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NO INHERIT",
							constrType),
					 parser_errposition(location)));
	}
}

/*----------
 * Recursive view transformation
 *
 * Convert
 *
 *     CREATE RECURSIVE VIEW relname (aliases) AS query
 *
 * to
 *
 *     CREATE VIEW relname (aliases) AS
 *         WITH RECURSIVE relname (aliases) AS (query)
 *         SELECT aliases FROM relname
 *
 * Actually, just the WITH ... part, which is then inserted into the original
 * view as the query.
 * ----------
 */
static PGNode *
makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query)
{
	PGSelectStmt *s = makeNode(PGSelectStmt);
	PGWithClause *w = makeNode(PGWithClause);
	PGCommonTableExpr *cte = makeNode(PGCommonTableExpr);
	PGList	   *tl = NIL;
	PGListCell   *lc;

	/* create common table expression */
	cte->ctename = relname;
	cte->aliascolnames = aliases;
	cte->ctequery = query;
	cte->location = -1;

	/* create WITH clause and attach CTE */
	w->recursive = true;
	w->ctes = list_make1(cte);
	w->location = -1;

	/* create target list for the new SELECT from the alias list of the
	 * recursive view specification */
	foreach (lc, aliases)
	{
		PGResTarget *rt = makeNode(PGResTarget);

		rt->name = NULL;
		rt->indirection = NIL;
		rt->val = makeColumnRef(strVal(lfirst(lc)), NIL, -1, 0);
		rt->location = -1;

		tl = lappend(tl, rt);
	}

	/* create new SELECT combining WITH clause, target list, and fake FROM
	 * clause */
	s->withClause = w;
	s->targetList = tl;
	s->fromClause = list_make1(makeRangeVar(NULL, relname, -1));

	return (PGNode *) s;
}

/* parser_init()
 * Initialize to parse one query string
 */
void
parser_init(base_yy_extra_type *yyext)
{
	yyext->parsetree = NIL;		/* in case grammar forgets to set it */
}

#undef yyparse
#undef yylex
#undef yyerror
#undef yylval
#undef yychar
#undef yydebug
#undef yynerrs
#undef yylloc

} // namespace duckdb_libpgquery
