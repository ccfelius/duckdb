/* A Bison parser, made by GNU Bison 2.3.  */

/* Skeleton implementation for Bison's Yacc-like parsers in C

   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.3"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Using locations.  */
#define YYLSP_NEEDED 1

/* Substitute the variable and function names.  */
#define yyparse base_yyparse
#define yylex   base_yylex
#define yyerror base_yyerror
#define yylval  base_yylval
#define yychar  base_yychar
#define yydebug base_yydebug
#define yynerrs base_yynerrs
#define yylloc base_yylloc

/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     IDENT = 258,
     FCONST = 259,
     SCONST = 260,
     BCONST = 261,
     XCONST = 262,
     Op = 263,
     ICONST = 264,
     PARAM = 265,
     TYPECAST = 266,
     DOT_DOT = 267,
     COLON_EQUALS = 268,
     EQUALS_GREATER = 269,
     LAMBDA_ARROW = 270,
     POWER_OF = 271,
     LESS_EQUALS = 272,
     GREATER_EQUALS = 273,
     NOT_EQUALS = 274,
     ABORT_P = 275,
     ABSOLUTE_P = 276,
     ACCESS = 277,
     ACTION = 278,
     ADD_P = 279,
     ADMIN = 280,
     AFTER = 281,
     AGGREGATE = 282,
     ALL = 283,
     ALSO = 284,
     ALTER = 285,
     ALWAYS = 286,
     ANALYSE = 287,
     ANALYZE = 288,
     AND = 289,
     ANY = 290,
     ARRAY = 291,
     AS = 292,
     ASC_P = 293,
     ASSERTION = 294,
     ASSIGNMENT = 295,
     ASYMMETRIC = 296,
     AT = 297,
     ATTACH = 298,
     ATTRIBUTE = 299,
     AUTHORIZATION = 300,
     BACKWARD = 301,
     BEFORE = 302,
     BEGIN_P = 303,
     BETWEEN = 304,
     BIGINT = 305,
     BINARY = 306,
     BIT = 307,
     BOOLEAN_P = 308,
     BOTH = 309,
     BY = 310,
     CACHE = 311,
     CALL_P = 312,
     CALLED = 313,
     CASCADE = 314,
     CASCADED = 315,
     CASE = 316,
     CAST = 317,
     CATALOG_P = 318,
     CHAIN = 319,
     CHAR_P = 320,
     CHARACTER = 321,
     CHARACTERISTICS = 322,
     CHECK_P = 323,
     CHECKPOINT = 324,
     CLASS = 325,
     CLOSE = 326,
     CLUSTER = 327,
     COALESCE = 328,
     COLLATE = 329,
     COLLATION = 330,
     COLUMN = 331,
     COLUMNS = 332,
     COMMENT = 333,
     COMMENTS = 334,
     COMMIT = 335,
     COMMITTED = 336,
     COMPRESSION = 337,
     CONCURRENTLY = 338,
     CONFIGURATION = 339,
     CONFLICT = 340,
     CONNECTION = 341,
     CONSTRAINT = 342,
     CONSTRAINTS = 343,
     CONTENT_P = 344,
     CONTINUE_P = 345,
     CONVERSION_P = 346,
     COPY = 347,
     COST = 348,
     CREATE_P = 349,
     CROSS = 350,
     CSV = 351,
     CUBE = 352,
     CURRENT_P = 353,
     CURRENT_CATALOG = 354,
     CURRENT_DATE = 355,
     CURRENT_ROLE = 356,
     CURRENT_SCHEMA = 357,
     CURRENT_TIME = 358,
     CURRENT_TIMESTAMP = 359,
     CURRENT_USER = 360,
     CURSOR = 361,
     CYCLE = 362,
     DATA_P = 363,
     DATABASE = 364,
     DAY_P = 365,
     DAYS_P = 366,
     DEALLOCATE = 367,
     DEC = 368,
     DECIMAL_P = 369,
     DECLARE = 370,
     DEFAULT = 371,
     DEFAULTS = 372,
     DEFERRABLE = 373,
     DEFERRED = 374,
     DEFINER = 375,
     DELETE_P = 376,
     DELIMITER = 377,
     DELIMITERS = 378,
     DEPENDS = 379,
     DESC_P = 380,
     DESCRIBE = 381,
     DETACH = 382,
     DICTIONARY = 383,
     DISABLE_P = 384,
     DISCARD = 385,
     DISTINCT = 386,
     DO = 387,
     DOCUMENT_P = 388,
     DOMAIN_P = 389,
     DOUBLE_P = 390,
     DROP = 391,
     EACH = 392,
     ELSE = 393,
     ENABLE_P = 394,
     ENCODING = 395,
     ENCRYPTED = 396,
     END_P = 397,
     ENUM_P = 398,
     ESCAPE = 399,
     EVENT = 400,
     EXCEPT = 401,
     EXCLUDE = 402,
     EXCLUDING = 403,
     EXCLUSIVE = 404,
     EXECUTE = 405,
     EXISTS = 406,
     EXPLAIN = 407,
     EXPORT_P = 408,
     EXPORT_STATE = 409,
     EXTENSION = 410,
     EXTERNAL = 411,
     EXTRACT = 412,
     FALSE_P = 413,
     FAMILY = 414,
     FETCH = 415,
     FILTER = 416,
     FIRST_P = 417,
     FLOAT_P = 418,
     FOLLOWING = 419,
     FOR = 420,
     FORCE = 421,
     FOREIGN = 422,
     FORWARD = 423,
     FREEZE = 424,
     FROM = 425,
     FULL = 426,
     FUNCTION = 427,
     FUNCTIONS = 428,
     GENERATED = 429,
     GLOB = 430,
     GLOBAL = 431,
     GRANT = 432,
     GRANTED = 433,
     GROUP_P = 434,
     GROUPING = 435,
     GROUPING_ID = 436,
     HANDLER = 437,
     HAVING = 438,
     HEADER_P = 439,
     HOLD = 440,
     HOUR_P = 441,
     HOURS_P = 442,
     IDENTITY_P = 443,
     IF_P = 444,
     IGNORE_P = 445,
     ILIKE = 446,
     IMMEDIATE = 447,
     IMMUTABLE = 448,
     IMPLICIT_P = 449,
     IMPORT_P = 450,
     IN_P = 451,
     INCLUDING = 452,
     INCREMENT = 453,
     INDEX = 454,
     INDEXES = 455,
     INHERIT = 456,
     INHERITS = 457,
     INITIALLY = 458,
     INLINE_P = 459,
     INNER_P = 460,
     INOUT = 461,
     INPUT_P = 462,
     INSENSITIVE = 463,
     INSERT = 464,
     INSTALL = 465,
     INSTEAD = 466,
     INT_P = 467,
     INTEGER = 468,
     INTERSECT = 469,
     INTERVAL = 470,
     INTO = 471,
     INVOKER = 472,
     IS = 473,
     ISNULL = 474,
     ISOLATION = 475,
     JOIN = 476,
     JSON = 477,
     KEY = 478,
     LABEL = 479,
     LANGUAGE = 480,
     LARGE_P = 481,
     LAST_P = 482,
     LATERAL_P = 483,
     LEADING = 484,
     LEAKPROOF = 485,
     LEFT = 486,
     LEVEL = 487,
     LIKE = 488,
     LIMIT = 489,
     LISTEN = 490,
     LOAD = 491,
     LOCAL = 492,
     LOCALTIME = 493,
     LOCALTIMESTAMP = 494,
     LOCATION = 495,
     LOCK_P = 496,
     LOCKED = 497,
     LOGGED = 498,
     MACRO = 499,
     MAP = 500,
     MAPPING = 501,
     MATCH = 502,
     MATERIALIZED = 503,
     MAXVALUE = 504,
     METHOD = 505,
     MICROSECOND_P = 506,
     MICROSECONDS_P = 507,
     MILLISECOND_P = 508,
     MILLISECONDS_P = 509,
     MINUTE_P = 510,
     MINUTES_P = 511,
     MINVALUE = 512,
     MODE = 513,
     MONTH_P = 514,
     MONTHS_P = 515,
     MOVE = 516,
     NAME_P = 517,
     NAMES = 518,
     NATIONAL = 519,
     NATURAL = 520,
     NCHAR = 521,
     NEW = 522,
     NEXT = 523,
     NO = 524,
     NONE = 525,
     NOT = 526,
     NOTHING = 527,
     NOTIFY = 528,
     NOTNULL = 529,
     NOWAIT = 530,
     NULL_P = 531,
     NULLIF = 532,
     NULLS_P = 533,
     NUMERIC = 534,
     OBJECT_P = 535,
     OF = 536,
     OFF = 537,
     OFFSET = 538,
     OIDS = 539,
     OLD = 540,
     ON = 541,
     ONLY = 542,
     OPERATOR = 543,
     OPTION = 544,
     OPTIONS = 545,
     OR = 546,
     ORDER = 547,
     ORDINALITY = 548,
     OUT_P = 549,
     OUTER_P = 550,
     OVER = 551,
     OVERLAPS = 552,
     OVERLAY = 553,
     OVERRIDING = 554,
     OWNED = 555,
     OWNER = 556,
     PARALLEL = 557,
     PARSER = 558,
     PARTIAL = 559,
     PARTITION = 560,
     PASSING = 561,
     PASSWORD = 562,
     PERCENT = 563,
     PLACING = 564,
     PLANS = 565,
     POLICY = 566,
     POSITION = 567,
     PRAGMA_P = 568,
     PRECEDING = 569,
     PRECISION = 570,
     PREPARE = 571,
     PREPARED = 572,
     PRESERVE = 573,
     PRIMARY = 574,
     PRIOR = 575,
     PRIVILEGES = 576,
     PROCEDURAL = 577,
     PROCEDURE = 578,
     PROGRAM = 579,
     PUBLICATION = 580,
     QUALIFY = 581,
     QUOTE = 582,
     RANGE = 583,
     READ_P = 584,
     REAL = 585,
     REASSIGN = 586,
     RECHECK = 587,
     RECURSIVE = 588,
     REF = 589,
     REFERENCES = 590,
     REFERENCING = 591,
     REFRESH = 592,
     REINDEX = 593,
     RELATIVE_P = 594,
     RELEASE = 595,
     RENAME = 596,
     REPEATABLE = 597,
     REPLACE = 598,
     REPLICA = 599,
     RESET = 600,
     RESPECT_P = 601,
     RESTART = 602,
     RESTRICT = 603,
     RETURNING = 604,
     RETURNS = 605,
     REVOKE = 606,
     RIGHT = 607,
     ROLE = 608,
     ROLLBACK = 609,
     ROLLUP = 610,
     ROW = 611,
     ROWS = 612,
     RULE = 613,
     SAMPLE = 614,
     SAVEPOINT = 615,
     SCHEMA = 616,
     SCHEMAS = 617,
     SCROLL = 618,
     SEARCH = 619,
     SECOND_P = 620,
     SECONDS_P = 621,
     SECURITY = 622,
     SELECT = 623,
     SEQUENCE = 624,
     SEQUENCES = 625,
     SERIALIZABLE = 626,
     SERVER = 627,
     SESSION = 628,
     SESSION_USER = 629,
     SET = 630,
     SETOF = 631,
     SETS = 632,
     SHARE = 633,
     SHOW = 634,
     SIMILAR = 635,
     SIMPLE = 636,
     SKIP = 637,
     SMALLINT = 638,
     SNAPSHOT = 639,
     SOME = 640,
     SQL_P = 641,
     STABLE = 642,
     STANDALONE_P = 643,
     START = 644,
     STATEMENT = 645,
     STATISTICS = 646,
     STDIN = 647,
     STDOUT = 648,
     STORAGE = 649,
     STRICT_P = 650,
     STRIP_P = 651,
     STRUCT = 652,
     SUBSCRIPTION = 653,
     SUBSTRING = 654,
     SUMMARIZE = 655,
     SYMMETRIC = 656,
     SYSID = 657,
     SYSTEM_P = 658,
     TABLE = 659,
     TABLES = 660,
     TABLESAMPLE = 661,
     TABLESPACE = 662,
     TEMP = 663,
     TEMPLATE = 664,
     TEMPORARY = 665,
     TEXT_P = 666,
     THEN = 667,
     TIME = 668,
     TIMESTAMP = 669,
     TO = 670,
     TRAILING = 671,
     TRANSACTION = 672,
     TRANSFORM = 673,
     TREAT = 674,
     TRIGGER = 675,
     TRIM = 676,
     TRUE_P = 677,
     TRUNCATE = 678,
     TRUSTED = 679,
     TRY_CAST = 680,
     TYPE_P = 681,
     TYPES_P = 682,
     UNBOUNDED = 683,
     UNCOMMITTED = 684,
     UNENCRYPTED = 685,
     UNION = 686,
     UNIQUE = 687,
     UNKNOWN = 688,
     UNLISTEN = 689,
     UNLOGGED = 690,
     UNTIL = 691,
     UPDATE = 692,
     USER = 693,
     USING = 694,
     VACUUM = 695,
     VALID = 696,
     VALIDATE = 697,
     VALIDATOR = 698,
     VALUE_P = 699,
     VALUES = 700,
     VARCHAR = 701,
     VARIADIC = 702,
     VARYING = 703,
     VERBOSE = 704,
     VERSION_P = 705,
     VIEW = 706,
     VIEWS = 707,
     VOLATILE = 708,
     WHEN = 709,
     WHERE = 710,
     WHITESPACE_P = 711,
     WINDOW = 712,
     WITH = 713,
     WITHIN = 714,
     WITHOUT = 715,
     WORK = 716,
     WRAPPER = 717,
     WRITE_P = 718,
     XML_P = 719,
     XMLATTRIBUTES = 720,
     XMLCONCAT = 721,
     XMLELEMENT = 722,
     XMLEXISTS = 723,
     XMLFOREST = 724,
     XMLNAMESPACES = 725,
     XMLPARSE = 726,
     XMLPI = 727,
     XMLROOT = 728,
     XMLSERIALIZE = 729,
     XMLTABLE = 730,
     YEAR_P = 731,
     YEARS_P = 732,
     YES_P = 733,
     ZONE = 734,
     NOT_LA = 735,
     NULLS_LA = 736,
     WITH_LA = 737,
     POSTFIXOP = 738,
     UMINUS = 739
   };
#endif
/* Tokens.  */
#define IDENT 258
#define FCONST 259
#define SCONST 260
#define BCONST 261
#define XCONST 262
#define Op 263
#define ICONST 264
#define PARAM 265
#define TYPECAST 266
#define DOT_DOT 267
#define COLON_EQUALS 268
#define EQUALS_GREATER 269
#define LAMBDA_ARROW 270
#define POWER_OF 271
#define LESS_EQUALS 272
#define GREATER_EQUALS 273
#define NOT_EQUALS 274
#define ABORT_P 275
#define ABSOLUTE_P 276
#define ACCESS 277
#define ACTION 278
#define ADD_P 279
#define ADMIN 280
#define AFTER 281
#define AGGREGATE 282
#define ALL 283
#define ALSO 284
#define ALTER 285
#define ALWAYS 286
#define ANALYSE 287
#define ANALYZE 288
#define AND 289
#define ANY 290
#define ARRAY 291
#define AS 292
#define ASC_P 293
#define ASSERTION 294
#define ASSIGNMENT 295
#define ASYMMETRIC 296
#define AT 297
#define ATTACH 298
#define ATTRIBUTE 299
#define AUTHORIZATION 300
#define BACKWARD 301
#define BEFORE 302
#define BEGIN_P 303
#define BETWEEN 304
#define BIGINT 305
#define BINARY 306
#define BIT 307
#define BOOLEAN_P 308
#define BOTH 309
#define BY 310
#define CACHE 311
#define CALL_P 312
#define CALLED 313
#define CASCADE 314
#define CASCADED 315
#define CASE 316
#define CAST 317
#define CATALOG_P 318
#define CHAIN 319
#define CHAR_P 320
#define CHARACTER 321
#define CHARACTERISTICS 322
#define CHECK_P 323
#define CHECKPOINT 324
#define CLASS 325
#define CLOSE 326
#define CLUSTER 327
#define COALESCE 328
#define COLLATE 329
#define COLLATION 330
#define COLUMN 331
#define COLUMNS 332
#define COMMENT 333
#define COMMENTS 334
#define COMMIT 335
#define COMMITTED 336
#define COMPRESSION 337
#define CONCURRENTLY 338
#define CONFIGURATION 339
#define CONFLICT 340
#define CONNECTION 341
#define CONSTRAINT 342
#define CONSTRAINTS 343
#define CONTENT_P 344
#define CONTINUE_P 345
#define CONVERSION_P 346
#define COPY 347
#define COST 348
#define CREATE_P 349
#define CROSS 350
#define CSV 351
#define CUBE 352
#define CURRENT_P 353
#define CURRENT_CATALOG 354
#define CURRENT_DATE 355
#define CURRENT_ROLE 356
#define CURRENT_SCHEMA 357
#define CURRENT_TIME 358
#define CURRENT_TIMESTAMP 359
#define CURRENT_USER 360
#define CURSOR 361
#define CYCLE 362
#define DATA_P 363
#define DATABASE 364
#define DAY_P 365
#define DAYS_P 366
#define DEALLOCATE 367
#define DEC 368
#define DECIMAL_P 369
#define DECLARE 370
#define DEFAULT 371
#define DEFAULTS 372
#define DEFERRABLE 373
#define DEFERRED 374
#define DEFINER 375
#define DELETE_P 376
#define DELIMITER 377
#define DELIMITERS 378
#define DEPENDS 379
#define DESC_P 380
#define DESCRIBE 381
#define DETACH 382
#define DICTIONARY 383
#define DISABLE_P 384
#define DISCARD 385
#define DISTINCT 386
#define DO 387
#define DOCUMENT_P 388
#define DOMAIN_P 389
#define DOUBLE_P 390
#define DROP 391
#define EACH 392
#define ELSE 393
#define ENABLE_P 394
#define ENCODING 395
#define ENCRYPTED 396
#define END_P 397
#define ENUM_P 398
#define ESCAPE 399
#define EVENT 400
#define EXCEPT 401
#define EXCLUDE 402
#define EXCLUDING 403
#define EXCLUSIVE 404
#define EXECUTE 405
#define EXISTS 406
#define EXPLAIN 407
#define EXPORT_P 408
#define EXPORT_STATE 409
#define EXTENSION 410
#define EXTERNAL 411
#define EXTRACT 412
#define FALSE_P 413
#define FAMILY 414
#define FETCH 415
#define FILTER 416
#define FIRST_P 417
#define FLOAT_P 418
#define FOLLOWING 419
#define FOR 420
#define FORCE 421
#define FOREIGN 422
#define FORWARD 423
#define FREEZE 424
#define FROM 425
#define FULL 426
#define FUNCTION 427
#define FUNCTIONS 428
#define GENERATED 429
#define GLOB 430
#define GLOBAL 431
#define GRANT 432
#define GRANTED 433
#define GROUP_P 434
#define GROUPING 435
#define GROUPING_ID 436
#define HANDLER 437
#define HAVING 438
#define HEADER_P 439
#define HOLD 440
#define HOUR_P 441
#define HOURS_P 442
#define IDENTITY_P 443
#define IF_P 444
#define IGNORE_P 445
#define ILIKE 446
#define IMMEDIATE 447
#define IMMUTABLE 448
#define IMPLICIT_P 449
#define IMPORT_P 450
#define IN_P 451
#define INCLUDING 452
#define INCREMENT 453
#define INDEX 454
#define INDEXES 455
#define INHERIT 456
#define INHERITS 457
#define INITIALLY 458
#define INLINE_P 459
#define INNER_P 460
#define INOUT 461
#define INPUT_P 462
#define INSENSITIVE 463
#define INSERT 464
#define INSTALL 465
#define INSTEAD 466
#define INT_P 467
#define INTEGER 468
#define INTERSECT 469
#define INTERVAL 470
#define INTO 471
#define INVOKER 472
#define IS 473
#define ISNULL 474
#define ISOLATION 475
#define JOIN 476
#define JSON 477
#define KEY 478
#define LABEL 479
#define LANGUAGE 480
#define LARGE_P 481
#define LAST_P 482
#define LATERAL_P 483
#define LEADING 484
#define LEAKPROOF 485
#define LEFT 486
#define LEVEL 487
#define LIKE 488
#define LIMIT 489
#define LISTEN 490
#define LOAD 491
#define LOCAL 492
#define LOCALTIME 493
#define LOCALTIMESTAMP 494
#define LOCATION 495
#define LOCK_P 496
#define LOCKED 497
#define LOGGED 498
#define MACRO 499
#define MAP 500
#define MAPPING 501
#define MATCH 502
#define MATERIALIZED 503
#define MAXVALUE 504
#define METHOD 505
#define MICROSECOND_P 506
#define MICROSECONDS_P 507
#define MILLISECOND_P 508
#define MILLISECONDS_P 509
#define MINUTE_P 510
#define MINUTES_P 511
#define MINVALUE 512
#define MODE 513
#define MONTH_P 514
#define MONTHS_P 515
#define MOVE 516
#define NAME_P 517
#define NAMES 518
#define NATIONAL 519
#define NATURAL 520
#define NCHAR 521
#define NEW 522
#define NEXT 523
#define NO 524
#define NONE 525
#define NOT 526
#define NOTHING 527
#define NOTIFY 528
#define NOTNULL 529
#define NOWAIT 530
#define NULL_P 531
#define NULLIF 532
#define NULLS_P 533
#define NUMERIC 534
#define OBJECT_P 535
#define OF 536
#define OFF 537
#define OFFSET 538
#define OIDS 539
#define OLD 540
#define ON 541
#define ONLY 542
#define OPERATOR 543
#define OPTION 544
#define OPTIONS 545
#define OR 546
#define ORDER 547
#define ORDINALITY 548
#define OUT_P 549
#define OUTER_P 550
#define OVER 551
#define OVERLAPS 552
#define OVERLAY 553
#define OVERRIDING 554
#define OWNED 555
#define OWNER 556
#define PARALLEL 557
#define PARSER 558
#define PARTIAL 559
#define PARTITION 560
#define PASSING 561
#define PASSWORD 562
#define PERCENT 563
#define PLACING 564
#define PLANS 565
#define POLICY 566
#define POSITION 567
#define PRAGMA_P 568
#define PRECEDING 569
#define PRECISION 570
#define PREPARE 571
#define PREPARED 572
#define PRESERVE 573
#define PRIMARY 574
#define PRIOR 575
#define PRIVILEGES 576
#define PROCEDURAL 577
#define PROCEDURE 578
#define PROGRAM 579
#define PUBLICATION 580
#define QUALIFY 581
#define QUOTE 582
#define RANGE 583
#define READ_P 584
#define REAL 585
#define REASSIGN 586
#define RECHECK 587
#define RECURSIVE 588
#define REF 589
#define REFERENCES 590
#define REFERENCING 591
#define REFRESH 592
#define REINDEX 593
#define RELATIVE_P 594
#define RELEASE 595
#define RENAME 596
#define REPEATABLE 597
#define REPLACE 598
#define REPLICA 599
#define RESET 600
#define RESPECT_P 601
#define RESTART 602
#define RESTRICT 603
#define RETURNING 604
#define RETURNS 605
#define REVOKE 606
#define RIGHT 607
#define ROLE 608
#define ROLLBACK 609
#define ROLLUP 610
#define ROW 611
#define ROWS 612
#define RULE 613
#define SAMPLE 614
#define SAVEPOINT 615
#define SCHEMA 616
#define SCHEMAS 617
#define SCROLL 618
#define SEARCH 619
#define SECOND_P 620
#define SECONDS_P 621
#define SECURITY 622
#define SELECT 623
#define SEQUENCE 624
#define SEQUENCES 625
#define SERIALIZABLE 626
#define SERVER 627
#define SESSION 628
#define SESSION_USER 629
#define SET 630
#define SETOF 631
#define SETS 632
#define SHARE 633
#define SHOW 634
#define SIMILAR 635
#define SIMPLE 636
#define SKIP 637
#define SMALLINT 638
#define SNAPSHOT 639
#define SOME 640
#define SQL_P 641
#define STABLE 642
#define STANDALONE_P 643
#define START 644
#define STATEMENT 645
#define STATISTICS 646
#define STDIN 647
#define STDOUT 648
#define STORAGE 649
#define STRICT_P 650
#define STRIP_P 651
#define STRUCT 652
#define SUBSCRIPTION 653
#define SUBSTRING 654
#define SUMMARIZE 655
#define SYMMETRIC 656
#define SYSID 657
#define SYSTEM_P 658
#define TABLE 659
#define TABLES 660
#define TABLESAMPLE 661
#define TABLESPACE 662
#define TEMP 663
#define TEMPLATE 664
#define TEMPORARY 665
#define TEXT_P 666
#define THEN 667
#define TIME 668
#define TIMESTAMP 669
#define TO 670
#define TRAILING 671
#define TRANSACTION 672
#define TRANSFORM 673
#define TREAT 674
#define TRIGGER 675
#define TRIM 676
#define TRUE_P 677
#define TRUNCATE 678
#define TRUSTED 679
#define TRY_CAST 680
#define TYPE_P 681
#define TYPES_P 682
#define UNBOUNDED 683
#define UNCOMMITTED 684
#define UNENCRYPTED 685
#define UNION 686
#define UNIQUE 687
#define UNKNOWN 688
#define UNLISTEN 689
#define UNLOGGED 690
#define UNTIL 691
#define UPDATE 692
#define USER 693
#define USING 694
#define VACUUM 695
#define VALID 696
#define VALIDATE 697
#define VALIDATOR 698
#define VALUE_P 699
#define VALUES 700
#define VARCHAR 701
#define VARIADIC 702
#define VARYING 703
#define VERBOSE 704
#define VERSION_P 705
#define VIEW 706
#define VIEWS 707
#define VOLATILE 708
#define WHEN 709
#define WHERE 710
#define WHITESPACE_P 711
#define WINDOW 712
#define WITH 713
#define WITHIN 714
#define WITHOUT 715
#define WORK 716
#define WRAPPER 717
#define WRITE_P 718
#define XML_P 719
#define XMLATTRIBUTES 720
#define XMLCONCAT 721
#define XMLELEMENT 722
#define XMLEXISTS 723
#define XMLFOREST 724
#define XMLNAMESPACES 725
#define XMLPARSE 726
#define XMLPI 727
#define XMLROOT 728
#define XMLSERIALIZE 729
#define XMLTABLE 730
#define YEAR_P 731
#define YEARS_P 732
#define YES_P 733
#define ZONE 734
#define NOT_LA 735
#define NULLS_LA 736
#define WITH_LA 737
#define POSTFIXOP 738
#define UMINUS 739




/* Copy the first part of user declarations.  */
#line 1 "third_party/libpg_query/grammar/grammar.y.tmp"

#line 1 "third_party/libpg_query/grammar/grammar.hpp"
/*#define YYDEBUG 1*/
/*-------------------------------------------------------------------------
 *
 * gram.y
 *	  POSTGRESQL BISON rules/actions
 *
 * Portions Copyright (c) 1996-2017, PostgreSQL Global Development PGGroup
 * Portions Copyright (c) 1994, Regents of the University of California
 *
 *
 * IDENTIFICATION
 *	  src/backend/parser/gram.y
 *
 * HISTORY
 *	  AUTHOR			DATE			MAJOR EVENT
 *	  Andrew Yu			Sept, 1994		POSTQUEL to SQL conversion
 *	  Andrew Yu			Oct, 1994		lispy code conversion
 *
 * NOTES
 *	  CAPITALS are used to represent terminal symbols.
 *	  non-capitals are used to represent non-terminals.
 *
 *	  In general, nothing in this file should initiate database accesses
 *	  nor depend on changeable state (such as SET variables).  If you do
 *	  database accesses, your code will fail when we have aborted the
 *	  current transaction and are just parsing commands to find the next
 *	  ROLLBACK or COMMIT.  If you make use of SET variables, then you
 *	  will do the wrong thing in multi-query strings like this:
 *			SET constraint_exclusion TO off; SELECT * FROM foo;
 *	  because the entire string is parsed by gram.y before the SET gets
 *	  executed.  Anything that depends on the database or changeable state
 *	  should be handled during parse analysis so that it happens at the
 *	  right time not the wrong time.
 *
 * WARNINGS
 *	  If you use a list, make sure the datum is a node so that the printing
 *	  routines work.
 *
 *	  Sometimes we assign constants to makeStrings. Make sure we don't free
 *	  those.
 *
 *-------------------------------------------------------------------------
 */
#include "pg_functions.hpp"
#include <string.h>

#include <ctype.h>
#include <limits.h>

#include "nodes/makefuncs.hpp"
#include "nodes/nodeFuncs.hpp"
#include "parser/gramparse.hpp"
#include "parser/parser.hpp"
#include "utils/datetime.hpp"

namespace duckdb_libpgquery {
#define DEFAULT_SCHEMA "main"

/*
 * Location tracking support --- simpler than bison's default, since we only
 * want to track the start position not the end position of each nonterminal.
 */
#define YYLLOC_DEFAULT(Current, Rhs, N) \
	do { \
		if ((N) > 0) \
			(Current) = (Rhs)[1]; \
		else \
			(Current) = (-1); \
	} while (0)

/*
 * The above macro assigns -1 (unknown) as the parse location of any
 * nonterminal that was reduced from an empty rule, or whose leftmost
 * component was reduced from an empty rule.  This is problematic
 * for nonterminals defined like
 *		OptFooList: / * EMPTY * / { ... } | OptFooList Foo { ... } ;
 * because we'll set -1 as the location during the first reduction and then
 * copy it during each subsequent reduction, leaving us with -1 for the
 * location even when the list is not empty.  To fix that, do this in the
 * action for the nonempty rule(s):
 *		if (@$ < 0) @$ = @2;
 * (Although we have many nonterminals that follow this pattern, we only
 * bother with fixing @$ like this when the nonterminal's parse location
 * is actually referenced in some rule.)
 *
 * A cleaner answer would be to make YYLLOC_DEFAULT scan all the Rhs
 * locations until it's found one that's not -1.  Then we'd get a correct
 * location for any nonterminal that isn't entirely empty.  But this way
 * would add overhead to every rule reduction, and so far there's not been
 * a compelling reason to pay that overhead.
 */

/*
 * Bison doesn't allocate anything that needs to live across parser calls,
 * so we can easily have it use palloc instead of malloc.  This prevents
 * memory leaks if we error out during parsing.  Note this only works with
 * bison >= 2.0.  However, in bison 1.875 the default is to use alloca()
 * if possible, so there's not really much problem anyhow, at least if
 * you're building with gcc.
 */
#define YYMALLOC palloc
#define YYFREE   pfree
#define YYINITDEPTH 1000

/* yields an integer bitmask of these flags: */
#define CAS_NOT_DEFERRABLE			0x01
#define CAS_DEFERRABLE				0x02
#define CAS_INITIALLY_IMMEDIATE		0x04
#define CAS_INITIALLY_DEFERRED		0x08
#define CAS_NOT_VALID				0x10
#define CAS_NO_INHERIT				0x20


#define parser_yyerror(msg)  scanner_yyerror(msg, yyscanner)
#define parser_errposition(pos)  scanner_errposition(pos, yyscanner)

static void base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner,
						 const char *msg);
static PGRawStmt *makeRawStmt(PGNode *stmt, int stmt_location);
static void updateRawStmtEnd(PGRawStmt *rs, int end_location);
static PGNode *makeColumnRef(char *colname, PGList *indirection,
						   int location, core_yyscan_t yyscanner);
static PGNode *makeTypeCast(PGNode *arg, PGTypeName *tpname, int trycast, int location);
static PGNode *makeStringConst(char *str, int location);
static PGNode *makeStringConstCast(char *str, int location, PGTypeName *tpname);
static PGNode *makeIntervalNode(char *str, int location, PGList *typmods);
static PGNode *makeIntervalNode(int val, int location, PGList *typmods);
static PGNode *makeIntervalNode(PGNode *arg, int location, PGList *typmods);
static PGNode *makeSampleSize(PGValue *sample_size, bool is_percentage);
static PGNode *makeSampleOptions(PGNode *sample_size, char *method, int seed, int location);
static PGNode *makeIntConst(int val, int location);
static PGNode *makeFloatConst(char *str, int location);
static PGNode *makeBitStringConst(char *str, int location);
static PGNode *makeNullAConst(int location);
static PGNode *makeAConst(PGValue *v, int location);
static PGNode *makeBoolAConst(bool state, int location);
static PGNode *makeParamRef(int number, int location);
static void check_qualified_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_func_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_indirection(PGList *indirection, core_yyscan_t yyscanner);
static void insertSelectOptions(PGSelectStmt *stmt,
								PGList *sortClause, PGList *lockingClause,
								PGNode *limitOffset, PGNode *limitCount,
								PGWithClause *withClause,
								core_yyscan_t yyscanner);
static PGNode *makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg);
static PGNode *doNegate(PGNode *n, int location);
static void doNegateFloat(PGValue *v);
static PGNode *makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeNotExpr(PGNode *expr, int location);
static PGNode *makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod,
								  int location);
static void SplitColQualList(PGList *qualList,
							 PGList **constraintList, PGCollateClause **collClause,
							 core_yyscan_t yyscanner);
static void processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner);
static PGNode *makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query);
static PGNode *makeLimitPercent(PGNode *limit_percent);



/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* Enabling the token table.  */
#ifndef YYTOKEN_TABLE
# define YYTOKEN_TABLE 0
#endif

#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE
#line 14 "third_party/libpg_query/grammar/grammar.y"
{
	core_YYSTYPE		core_yystype;
	/* these fields must match core_YYSTYPE: */
	int					ival;
	char				*str;
	const char			*keyword;
	const char          *conststr;

	char				chr;
	bool				boolean;
	PGJoinType			jtype;
	PGDropBehavior		dbehavior;
	PGOnCommitAction		oncommit;
	PGOnCreateConflict		oncreateconflict;
	PGList				*list;
	PGNode				*node;
	PGValue				*value;
	PGObjectType			objtype;
	PGTypeName			*typnam;
	PGObjectWithArgs		*objwithargs;
	PGDefElem				*defelt;
	PGSortBy				*sortby;
	PGWindowDef			*windef;
	PGJoinExpr			*jexpr;
	PGIndexElem			*ielem;
	PGAlias				*alias;
	PGRangeVar			*range;
	PGIntoClause			*into;
	PGWithClause			*with;
	PGInferClause			*infer;
	PGOnConflictClause	*onconflict;
	PGAIndices			*aind;
	PGResTarget			*target;
	PGInsertStmt			*istmt;
	PGVariableSetStmt		*vsetstmt;
	PGOverridingKind       override;
	PGSortByDir            sortorder;
	PGSortByNulls          nullorder;
	PGLockClauseStrength lockstrength;
	PGLockWaitPolicy lockwaitpolicy;
	PGSubLinkType subquerytype;
	PGViewCheckOption viewcheckoption;
}
/* Line 193 of yacc.c.  */
#line 1282 "third_party/libpg_query/grammar/grammar_out.cpp"
	YYSTYPE;
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
# define YYSTYPE_IS_TRIVIAL 1
#endif

#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif


/* Copy the second part of user declarations.  */


/* Line 216 of yacc.c.  */
#line 1307 "third_party/libpg_query/grammar/grammar_out.cpp"

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#elif (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
typedef signed char yytype_int8;
#else
typedef short int yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(msgid) dgettext ("bison-runtime", msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(msgid) msgid
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(e) ((void) (e))
#else
# define YYUSE(e) /* empty */
#endif

/* Identity function, used to suppress warnings about constant conditions.  */
#ifndef lint
# define YYID(n) (n)
#else
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static int
YYID (int i)
#else
static int
YYID (i)
    int i;
#endif
{
  return i;
}
#endif

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#     ifndef _STDLIB_H
#      define _STDLIB_H 1
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined _STDLIB_H \
       && ! ((defined YYMALLOC || defined malloc) \
	     && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef _STDLIB_H
#    define _STDLIB_H 1
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
	 || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
	     && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss;
  YYSTYPE yyvs;
    YYLTYPE yyls;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(To, From, Count) \
      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
#  else
#   define YYCOPY(To, From, Count)		\
      do					\
	{					\
	  YYSIZE_T yyi;				\
	  for (yyi = 0; yyi < (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (YYID (0))
#  endif
# endif

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack)					\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack, Stack, yysize);				\
	Stack = &yyptr->Stack;						\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))

#endif

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  596
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   55303

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  506
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  395
/* YYNRULES -- Number of rules.  */
#define YYNRULES  1840
/* YYNRULES -- Number of states.  */
#define YYNSTATES  3030

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   739

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,   503,     2,   491,     2,     2,
     496,   497,   489,   487,   500,   488,   498,   490,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   505,   499,
     483,   485,   484,   504,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,   494,     2,   495,   492,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   501,     2,   502,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   486,   493
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const yytype_uint16 yyprhs[] =
{
       0,     0,     3,     5,     9,    11,    13,    15,    17,    19,
      21,    23,    25,    27,    29,    31,    33,    35,    37,    39,
      41,    43,    45,    47,    49,    51,    53,    55,    57,    59,
      61,    63,    65,    67,    69,    71,    73,    75,    77,    79,
      80,    85,    92,    97,   104,   109,   116,   121,   128,   130,
     133,   137,   140,   142,   146,   149,   153,   155,   159,   162,
     168,   172,   179,   184,   191,   198,   205,   211,   217,   224,
     234,   239,   245,   253,   260,   265,   274,   279,   282,   287,
     291,   298,   303,   306,   309,   312,   315,   317,   320,   321,
     323,   326,   329,   332,   334,   338,   343,   346,   348,   349,
     352,   356,   359,   363,   370,   377,   386,   393,   402,   409,
     418,   425,   434,   443,   454,   463,   474,   476,   477,   485,
     487,   492,   497,   505,   508,   510,   514,   519,   523,   524,
     526,   527,   530,   534,   540,   549,   555,   556,   562,   568,
     576,   579,   580,   582,   584,   586,   590,   593,   594,   596,
     597,   599,   603,   605,   609,   611,   614,   616,   620,   623,
     632,   638,   640,   641,   643,   647,   650,   655,   661,   667,
     676,   678,   679,   683,   693,   706,   710,   711,   716,   723,
     725,   728,   730,   732,   733,   735,   738,   741,   743,   746,
     749,   751,   754,   758,   761,   764,   767,   770,   774,   778,
     782,   784,   788,   790,   791,   793,   796,   799,   802,   805,
     808,   811,   814,   817,   819,   821,   822,   832,   845,   857,
     858,   861,   863,   865,   867,   869,   871,   873,   877,   878,
     880,   883,   885,   887,   890,   893,   897,   899,   901,   904,
     907,   909,   912,   916,   922,   926,   929,   935,   941,   944,
     948,   950,   952,   955,   958,   959,   964,   965,   969,   974,
     979,   980,   984,   987,   988,   992,   994,   996,   998,  1000,
    1002,  1004,  1006,  1008,  1010,  1012,  1016,  1020,  1022,  1025,
    1028,  1031,  1034,  1037,  1040,  1041,  1045,  1049,  1053,  1054,
    1056,  1059,  1061,  1064,  1067,  1070,  1073,  1078,  1080,  1084,
    1086,  1090,  1092,  1094,  1096,  1098,  1102,  1104,  1107,  1108,
    1110,  1113,  1114,  1116,  1120,  1121,  1124,  1125,  1129,  1133,
    1135,  1141,  1145,  1147,  1151,  1153,  1156,  1158,  1163,  1169,
    1175,  1182,  1186,  1194,  1199,  1211,  1213,  1217,  1220,  1223,
    1226,  1227,  1231,  1233,  1235,  1238,  1241,  1244,  1247,  1249,
    1250,  1252,  1255,  1262,  1267,  1274,  1279,  1286,  1295,  1300,
    1307,  1309,  1311,  1313,  1315,  1318,  1320,  1323,  1325,  1328,
    1330,  1332,  1334,  1338,  1342,  1346,  1350,  1353,  1356,  1358,
    1362,  1364,  1366,  1368,  1370,  1374,  1376,  1378,  1379,  1381,
    1383,  1385,  1387,  1391,  1400,  1408,  1410,  1412,  1415,  1419,
    1428,  1440,  1450,  1452,  1454,  1458,  1459,  1461,  1465,  1467,
    1468,  1470,  1471,  1473,  1474,  1476,  1480,  1482,  1484,  1486,
    1490,  1491,  1494,  1497,  1498,  1501,  1502,  1504,  1505,  1507,
    1509,  1511,  1515,  1519,  1521,  1523,  1527,  1531,  1535,  1539,
    1544,  1548,  1551,  1553,  1555,  1557,  1559,  1561,  1565,  1567,
    1569,  1573,  1577,  1579,  1582,  1587,  1592,  1595,  1599,  1605,
    1611,  1613,  1615,  1627,  1639,  1641,  1644,  1649,  1654,  1659,
    1662,  1665,  1669,  1671,  1675,  1682,  1685,  1686,  1690,  1694,
    1699,  1704,  1709,  1714,  1718,  1721,  1723,  1725,  1726,  1728,
    1730,  1731,  1733,  1739,  1741,  1742,  1745,  1748,  1749,  1751,
    1752,  1756,  1762,  1768,  1770,  1774,  1779,  1783,  1785,  1787,
    1788,  1791,  1794,  1795,  1798,  1801,  1803,  1805,  1807,  1808,
    1811,  1816,  1822,  1827,  1830,  1834,  1837,  1840,  1843,  1846,
    1848,  1851,  1855,  1856,  1858,  1859,  1865,  1867,  1872,  1879,
    1882,  1884,  1885,  1890,  1891,  1893,  1895,  1898,  1901,  1904,
    1906,  1908,  1911,  1914,  1916,  1918,  1920,  1922,  1924,  1926,
    1930,  1934,  1938,  1939,  1941,  1945,  1947,  1950,  1952,  1954,
    1956,  1958,  1960,  1963,  1968,  1973,  1979,  1981,  1983,  1986,
    1987,  1990,  1991,  1993,  1997,  1999,  2000,  2002,  2005,  2009,
    2012,  2017,  2020,  2024,  2027,  2028,  2030,  2033,  2034,  2039,
    2045,  2047,  2050,  2053,  2054,  2056,  2060,  2062,  2065,  2069,
    2073,  2077,  2081,  2085,  2087,  2092,  2096,  2101,  2107,  2112,
    2118,  2123,  2129,  2132,  2137,  2139,  2141,  2142,  2144,  2149,
    2155,  2160,  2161,  2164,  2167,  2170,  2172,  2174,  2175,  2180,
    2183,  2185,  2188,  2191,  2196,  2199,  2206,  2209,  2211,  2215,
    2220,  2221,  2224,  2225,  2228,  2229,  2231,  2235,  2239,  2242,
    2243,  2246,  2251,  2253,  2255,  2258,  2262,  2268,  2275,  2278,
    2282,  2288,  2294,  2298,  2303,  2304,  2306,  2308,  2310,  2312,
    2314,  2317,  2322,  2324,  2326,  2328,  2330,  2333,  2337,  2338,
    2340,  2342,  2344,  2346,  2348,  2351,  2354,  2357,  2360,  2363,
    2365,  2369,  2370,  2372,  2374,  2376,  2378,  2384,  2387,  2389,
    2391,  2393,  2395,  2400,  2402,  2405,  2408,  2410,  2414,  2418,
    2421,  2423,  2424,  2430,  2433,  2439,  2442,  2444,  2448,  2452,
    2453,  2455,  2457,  2459,  2461,  2463,  2465,  2467,  2469,  2471,
    2473,  2475,  2477,  2479,  2481,  2483,  2485,  2487,  2489,  2491,
    2493,  2495,  2497,  2499,  2501,  2505,  2509,  2513,  2517,  2521,
    2525,  2529,  2530,  2532,  2536,  2540,  2546,  2549,  2552,  2556,
    2560,  2564,  2568,  2572,  2576,  2580,  2584,  2588,  2592,  2596,
    2600,  2604,  2608,  2611,  2614,  2618,  2622,  2625,  2628,  2632,
    2636,  2642,  2647,  2654,  2658,  2664,  2669,  2676,  2681,  2688,
    2694,  2702,  2706,  2709,  2714,  2718,  2721,  2723,  2727,  2731,
    2735,  2739,  2743,  2748,  2752,  2757,  2761,  2766,  2772,  2779,
    2786,  2794,  2801,  2809,  2816,  2824,  2828,  2833,  2838,  2845,
    2847,  2852,  2854,  2858,  2861,  2864,  2868,  2872,  2876,  2880,
    2884,  2888,  2892,  2896,  2900,  2904,  2908,  2912,  2916,  2920,
    2923,  2926,  2932,  2939,  2946,  2954,  2956,  2958,  2961,  2964,
    2967,  2972,  2974,  2977,  2979,  2982,  2985,  2990,  2994,  3001,
    3009,  3019,  3027,  3035,  3040,  3046,  3048,  3050,  3052,  3058,
    3060,  3062,  3067,  3069,  3074,  3076,  3081,  3083,  3088,  3090,
    3092,  3094,  3096,  3098,  3100,  3107,  3114,  3119,  3124,  3129,
    3134,  3141,  3147,  3153,  3159,  3164,  3171,  3176,  3182,  3183,
    3189,  3190,  3192,  3193,  3196,  3197,  3199,  3203,  3207,  3210,
    3213,  3214,  3221,  3223,  3224,  3228,  3229,  3232,  3235,  3236,
    3238,  3243,  3246,  3249,  3252,  3255,  3258,  3263,  3267,  3269,
    3275,  3279,  3281,  3285,  3287,  3290,  3292,  3294,  3296,  3298,
    3300,  3302,  3304,  3306,  3308,  3310,  3312,  3314,  3316,  3318,
    3320,  3322,  3324,  3326,  3328,  3333,  3335,  3340,  3342,  3347,
    3349,  3352,  3354,  3357,  3359,  3362,  3364,  3368,  3370,  3374,
    3376,  3379,  3381,  3382,  3384,  3388,  3390,  3394,  3398,  3400,
    3404,  3408,  3409,  3411,  3413,  3415,  3417,  3419,  3421,  3423,
    3425,  3427,  3429,  3434,  3438,  3441,  3445,  3446,  3450,  3454,
    3457,  3460,  3462,  3463,  3466,  3469,  3473,  3476,  3478,  3480,
    3484,  3490,  3492,  3495,  3500,  3503,  3504,  3506,  3507,  3509,
    3512,  3515,  3519,  3525,  3527,  3528,  3530,  3533,  3534,  3537,
    3539,  3540,  3542,  3543,  3545,  3549,  3551,  3554,  3558,  3561,
    3563,  3567,  3573,  3578,  3581,  3583,  3584,  3588,  3590,  3594,
    3596,  3599,  3604,  3607,  3608,  3610,  3614,  3616,  3619,  3621,
    3625,  3627,  3630,  3632,  3634,  3636,  3639,  3641,  3643,  3646,
    3648,  3650,  3653,  3661,  3664,  3670,  3674,  3678,  3680,  3682,
    3684,  3686,  3688,  3690,  3692,  3694,  3696,  3698,  3700,  3702,
    3704,  3706,  3708,  3710,  3712,  3714,  3716,  3718,  3721,  3724,
    3728,  3732,  3733,  3735,  3737,  3739,  3741,  3743,  3745,  3747,
    3753,  3757,  3758,  3760,  3762,  3764,  3766,  3771,  3779,  3782,
    3783,  3785,  3787,  3789,  3791,  3805,  3822,  3824,  3827,  3828,
    3830,  3831,  3833,  3834,  3837,  3838,  3840,  3841,  3848,  3857,
    3864,  3873,  3880,  3889,  3892,  3894,  3899,  3903,  3906,  3911,
    3915,  3921,  3923,  3924,  3926,  3928,  3929,  3931,  3933,  3935,
    3937,  3939,  3941,  3943,  3945,  3947,  3949,  3951,  3955,  3957,
    3959,  3961,  3963,  3965,  3967,  3970,  3972,  3974,  3977,  3981,
    3985,  3989,  3991,  3995,  3999,  4002,  4006,  4010,  4014,  4018,
    4020,  4022,  4024,  4026,  4030,  4036,  4038,  4040,  4042,  4044,
    4048,  4051,  4054,  4058,  4060,  4062,  4067,  4073,  4079,  4084,
    4091,  4093,  4095,  4097,  4099,  4101,  4103,  4104,  4106,  4110,
    4112,  4113,  4121,  4123,  4126,  4130,  4133,  4134,  4137,  4138,
    4141,  4146,  4149,  4151,  4153,  4155,  4158,  4162,  4165,  4168,
    4171,  4174,  4178,  4183,  4186,  4188,  4190,  4192,  4194,  4198,
    4201,  4211,  4223,  4236,  4251,  4255,  4260,  4265,  4266,  4274,
    4285,  4295,  4298,  4302,  4303,  4308,  4310,  4312,  4314,  4316,
    4318,  4320,  4322,  4324,  4326,  4328,  4330,  4332,  4334,  4336,
    4338,  4340,  4342,  4344,  4346,  4348,  4350,  4352,  4354,  4356,
    4358,  4360,  4362,  4364,  4366,  4368,  4370,  4372,  4374,  4376,
    4378,  4380,  4382,  4384,  4386,  4388,  4390,  4392,  4394,  4396,
    4398,  4400,  4402,  4404,  4406,  4408,  4410,  4412,  4414,  4416,
    4418,  4420,  4422,  4424,  4426,  4428,  4430,  4432,  4434,  4436,
    4438,  4440,  4442,  4444,  4446,  4448,  4450,  4452,  4454,  4456,
    4458,  4460,  4462,  4464,  4466,  4468,  4470,  4472,  4474,  4476,
    4478,  4480,  4482,  4484,  4486,  4488,  4490,  4492,  4494,  4496,
    4498,  4500,  4502,  4504,  4506,  4508,  4510,  4512,  4514,  4516,
    4518,  4520,  4522,  4524,  4526,  4528,  4530,  4532,  4534,  4536,
    4538,  4540,  4542,  4544,  4546,  4548,  4550,  4552,  4554,  4556,
    4558,  4560,  4562,  4564,  4566,  4568,  4570,  4572,  4574,  4576,
    4578,  4580,  4582,  4584,  4586,  4588,  4590,  4592,  4594,  4596,
    4598,  4600,  4602,  4604,  4606,  4608,  4610,  4612,  4614,  4616,
    4618,  4620,  4622,  4624,  4626,  4628,  4630,  4632,  4634,  4636,
    4638,  4640,  4642,  4644,  4646,  4648,  4650,  4652,  4654,  4656,
    4658,  4660,  4662,  4664,  4666,  4668,  4670,  4672,  4674,  4676,
    4678,  4680,  4682,  4684,  4686,  4688,  4690,  4692,  4694,  4696,
    4698,  4700,  4702,  4704,  4706,  4708,  4710,  4712,  4714,  4716,
    4718,  4720,  4722,  4724,  4726,  4728,  4730,  4732,  4734,  4736,
    4738,  4740,  4742,  4744,  4746,  4748,  4750,  4752,  4754,  4756,
    4758,  4760,  4762,  4764,  4766,  4768,  4770,  4772,  4774,  4776,
    4778,  4780,  4782,  4784,  4786,  4788,  4790,  4792,  4794,  4796,
    4798,  4800,  4802,  4804,  4806,  4808,  4810,  4812,  4814,  4816,
    4818,  4820,  4822,  4824,  4826,  4828,  4830,  4832,  4834,  4836,
    4838,  4840,  4842,  4844,  4846,  4848,  4850,  4852,  4854,  4856,
    4858,  4860,  4862,  4864,  4866,  4868,  4870,  4872,  4874,  4876,
    4878,  4880,  4882,  4884,  4886,  4888,  4890,  4892,  4894,  4896,
    4898,  4900,  4902,  4904,  4906,  4908,  4910,  4912,  4914,  4916,
    4918,  4920,  4922,  4924,  4926,  4928,  4930,  4932,  4934,  4936,
    4938,  4940,  4942,  4944,  4946,  4948,  4950,  4952,  4954,  4956,
    4958,  4960,  4962,  4964,  4966,  4968,  4970,  4972,  4974,  4976,
    4978,  4980,  4982,  4984,  4986,  4988,  4990,  4992,  4994,  4996,
    4998,  5000,  5002,  5004,  5006,  5008,  5010,  5012,  5014,  5016,
    5018,  5020,  5022,  5024,  5026,  5028,  5030,  5032,  5034,  5036,
    5038,  5040,  5042,  5044,  5046,  5048,  5050,  5052,  5054,  5056,
    5058,  5060,  5062,  5064,  5066,  5068,  5070,  5072,  5074,  5076,
    5078,  5080,  5082,  5084,  5086,  5088,  5090,  5092,  5094,  5096,
    5098,  5100,  5102,  5104,  5106,  5108,  5110,  5112,  5114,  5116,
    5118,  5120,  5122,  5124,  5126,  5128,  5130,  5132,  5134,  5136,
    5138,  5140,  5142,  5144,  5146,  5148,  5150,  5152,  5154,  5156,
    5158,  5160,  5162,  5164,  5166,  5168,  5170,  5172,  5174,  5176,
    5178,  5180,  5182,  5184,  5186,  5188,  5190,  5192,  5194,  5196,
    5198,  5200,  5202,  5204,  5206,  5208,  5210,  5212,  5214,  5216,
    5218,  5220,  5222,  5224,  5226,  5228,  5230,  5232,  5234,  5236,
    5238,  5240,  5242,  5244,  5246,  5248,  5250,  5252,  5254,  5256,
    5258,  5260,  5262,  5264,  5266,  5268,  5270,  5272,  5274,  5276,
    5278,  5280,  5282,  5284,  5286,  5288,  5290,  5292,  5294,  5296,
    5298,  5300,  5302,  5304,  5306,  5308,  5310,  5312,  5314,  5316,
    5318,  5320,  5322,  5324,  5326,  5328,  5330,  5332,  5334,  5336,
    5338,  5340,  5342,  5344,  5346,  5348,  5350,  5352,  5354,  5356,
    5358,  5360,  5362,  5364,  5366,  5368,  5370,  5372,  5374,  5376,
    5378,  5380,  5382,  5384,  5386,  5388,  5390,  5392,  5394,  5396,
    5398,  5400,  5402,  5404,  5406,  5408,  5410,  5412,  5414,  5416,
    5418,  5420,  5422,  5424,  5426,  5428,  5430,  5432,  5434,  5436,
    5438
};

/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
static const yytype_int16 yyrhs[] =
{
     507,     0,    -1,   508,    -1,   508,   499,   509,    -1,   509,
      -1,   849,    -1,   551,    -1,   510,    -1,   881,    -1,   888,
      -1,   850,    -1,   618,    -1,   891,    -1,   614,    -1,   839,
      -1,   547,    -1,   560,    -1,   543,    -1,   521,    -1,   877,
      -1,   607,    -1,   549,    -1,   853,    -1,   851,    -1,   852,
      -1,   842,    -1,   524,    -1,   870,    -1,   546,    -1,   836,
      -1,   522,    -1,   635,    -1,   558,    -1,   617,    -1,   872,
      -1,   882,    -1,   864,    -1,   885,    -1,   889,    -1,    -1,
      30,   404,   704,   518,    -1,    30,   404,   189,   151,   704,
     518,    -1,    30,   199,   816,   518,    -1,    30,   199,   189,
     151,   816,   518,    -1,    30,   369,   816,   518,    -1,    30,
     369,   189,   151,   816,   518,    -1,    30,   451,   816,   518,
      -1,    30,   451,   189,   151,   816,   518,    -1,   513,    -1,
     511,   513,    -1,   375,   116,   746,    -1,   136,   116,    -1,
     347,    -1,   347,   553,   554,    -1,   375,   555,    -1,   375,
     174,   606,    -1,   517,    -1,   514,   500,   517,    -1,    24,
     585,    -1,    24,   189,   271,   151,   585,    -1,    24,    76,
     585,    -1,    24,    76,   189,   271,   151,   585,    -1,    30,
     523,   825,   512,    -1,    30,   523,   825,   136,   271,   276,
      -1,    30,   523,   825,   375,   271,   276,    -1,    30,   523,
     825,   375,   391,   557,    -1,    30,   523,   825,   375,   573,
      -1,    30,   523,   825,   345,   573,    -1,    30,   523,   825,
     375,   394,   825,    -1,    30,   523,   825,    24,   174,   606,
      37,   188,   563,    -1,    30,   523,   825,   511,    -1,    30,
     523,   825,   136,   188,    -1,    30,   523,   825,   136,   188,
     189,   151,    -1,   136,   523,   189,   151,   825,   611,    -1,
     136,   523,   825,   611,    -1,    30,   523,   825,   520,   426,
     716,   713,   516,    -1,    30,   523,   825,   519,    -1,    24,
     575,    -1,    30,    87,   819,   561,    -1,   442,    87,   819,
      -1,   136,    87,   189,   151,   819,   611,    -1,   136,    87,
     819,   611,    -1,   375,   243,    -1,   375,   435,    -1,   375,
     573,    -1,   345,   573,    -1,   519,    -1,   439,   746,    -1,
      -1,   568,    -1,   375,   568,    -1,    24,   568,    -1,   136,
     583,    -1,   515,    -1,   518,   500,   515,    -1,   290,   496,
     514,   497,    -1,   375,   108,    -1,   375,    -1,    -1,   112,
     819,    -1,   112,   316,   819,    -1,   112,    28,    -1,   112,
     316,    28,    -1,    30,   361,   819,   341,   415,   819,    -1,
      30,   404,   704,   341,   415,   819,    -1,    30,   404,   189,
     151,   704,   341,   415,   819,    -1,    30,   369,   816,   341,
     415,   819,    -1,    30,   369,   189,   151,   816,   341,   415,
     819,    -1,    30,   451,   816,   341,   415,   819,    -1,    30,
     451,   189,   151,   816,   341,   415,   819,    -1,    30,   199,
     816,   341,   415,   819,    -1,    30,   199,   189,   151,   816,
     341,   415,   819,    -1,    30,   404,   704,   341,   523,   819,
     415,   819,    -1,    30,   404,   189,   151,   704,   341,   523,
     819,   415,   819,    -1,    30,   404,   704,   341,    87,   819,
     415,   819,    -1,    30,   404,   189,   151,   704,   341,    87,
     819,   415,   819,    -1,    76,    -1,    -1,   528,   209,   216,
     526,   525,   531,   533,    -1,   635,    -1,   299,   534,   444,
     635,    -1,   496,   538,   497,   635,    -1,   496,   538,   497,
     299,   534,   444,   635,    -1,   116,   445,    -1,   816,    -1,
     816,    37,   825,    -1,   496,   541,   497,   710,    -1,   286,
      87,   819,    -1,    -1,   640,    -1,    -1,   825,   803,    -1,
     542,   485,   746,    -1,   496,   535,   497,   485,   746,    -1,
     286,    85,   527,   132,   437,   375,   540,   710,    -1,   286,
      85,   527,   132,   272,    -1,    -1,   825,   536,   537,   654,
     655,    -1,   751,   536,   537,   654,   655,    -1,   496,   746,
     497,   536,   537,   654,   655,    -1,   349,   806,    -1,    -1,
     438,    -1,   403,    -1,   542,    -1,   535,   500,   542,    -1,
      74,   830,    -1,    -1,   830,    -1,    -1,   529,    -1,   538,
     500,   529,    -1,   530,    -1,   539,   500,   530,    -1,   539,
      -1,   539,   500,    -1,   532,    -1,   541,   500,   532,    -1,
     825,   803,    -1,    94,   426,   830,    37,   143,   496,   544,
     497,    -1,    94,   426,   830,    37,   719,    -1,   545,    -1,
      -1,   824,    -1,   545,   500,   824,    -1,   313,   825,    -1,
     313,   825,   485,   869,    -1,   313,   825,   496,   781,   497,
      -1,    94,   605,   369,   816,   548,    -1,    94,   605,   369,
     189,   271,   151,   816,   548,    -1,   552,    -1,    -1,   150,
     819,   550,    -1,    94,   605,   404,   893,    37,   150,   819,
     550,   892,    -1,    94,   605,   404,   189,   271,   151,   893,
      37,   150,   819,   550,   892,    -1,   496,   779,   497,    -1,
      -1,    30,   369,   816,   552,    -1,    30,   369,   189,   151,
     816,   552,    -1,   555,    -1,   552,   555,    -1,   458,    -1,
     482,    -1,    -1,     4,    -1,   487,     4,    -1,   488,     4,
      -1,   557,    -1,    37,   718,    -1,    56,   554,    -1,   107,
      -1,   269,   107,    -1,   198,   556,   554,    -1,   249,   554,
      -1,   257,   554,    -1,   269,   249,    -1,   269,   257,    -1,
     300,    55,   830,    -1,   369,   262,   830,    -1,   389,   553,
     554,    -1,   347,    -1,   347,   553,   554,    -1,    55,    -1,
      -1,   823,    -1,   487,   823,    -1,   488,   823,    -1,    20,
     559,    -1,    48,   559,    -1,   389,   559,    -1,    80,   559,
      -1,   142,   559,    -1,   354,   559,    -1,   461,    -1,   417,
      -1,    -1,    94,   605,   404,   816,   496,   592,   497,   580,
     572,    -1,    94,   605,   404,   189,   271,   151,   816,   496,
     592,   497,   580,   572,    -1,    94,   291,   343,   605,   404,
     816,   496,   592,   497,   580,   572,    -1,    -1,   561,   584,
      -1,   600,    -1,   900,    -1,   775,    -1,   554,    -1,   824,
      -1,   270,    -1,   496,   552,   497,    -1,    -1,   824,    -1,
     269,    23,    -1,   348,    -1,    59,    -1,   375,   276,    -1,
     375,   116,    -1,    87,   819,   567,    -1,   567,    -1,   579,
      -1,    74,   830,    -1,   271,   276,    -1,   276,    -1,   432,
     591,    -1,   319,   223,   591,    -1,    68,   496,   746,   497,
     574,    -1,   439,    82,   819,    -1,   116,   747,    -1,   174,
     606,    37,   188,   563,    -1,   335,   816,   594,   603,   570,
      -1,   583,   564,    -1,   286,   437,   565,    -1,   569,    -1,
     596,    -1,   569,   596,    -1,   596,   569,    -1,    -1,   290,
     496,   586,   497,    -1,    -1,   286,    80,   136,    -1,   286,
      80,   121,   357,    -1,   286,    80,   318,   357,    -1,    -1,
     496,   577,   497,    -1,   269,   201,    -1,    -1,    87,   819,
     601,    -1,   601,    -1,    79,    -1,    88,    -1,   117,    -1,
     188,    -1,   200,    -1,   391,    -1,   394,    -1,    28,    -1,
     597,    -1,   577,   500,   597,    -1,   439,   199,   588,    -1,
     118,    -1,   271,   118,    -1,   203,   119,    -1,   203,   192,
      -1,   458,   573,    -1,   458,   284,    -1,   460,   284,    -1,
      -1,   496,   587,   497,    -1,   582,   197,   576,    -1,   582,
     148,   576,    -1,    -1,   834,    -1,   271,   118,    -1,   118,
      -1,   203,   192,    -1,   203,   119,    -1,   271,   441,    -1,
     269,   201,    -1,   825,   716,   571,   595,    -1,   568,    -1,
     586,   500,   568,    -1,   590,    -1,   587,   500,   590,    -1,
     825,    -1,   585,    -1,   604,    -1,   575,    -1,   834,   485,
     562,    -1,   834,    -1,   458,   581,    -1,    -1,   602,    -1,
     602,   500,    -1,    -1,   825,    -1,   496,   598,   497,    -1,
      -1,   595,   566,    -1,    -1,   286,   121,   565,    -1,   834,
     485,   562,    -1,   834,    -1,   834,   498,   834,   485,   562,
      -1,   834,   498,   834,    -1,   593,    -1,   598,   500,   593,
      -1,   598,    -1,   598,   500,    -1,   716,    -1,   827,   831,
     491,   426,    -1,   376,   827,   831,   491,   426,    -1,    68,
     496,   746,   497,   561,    -1,   432,   496,   599,   497,   591,
     561,    -1,   432,   578,   561,    -1,   319,   223,   496,   599,
     497,   591,   561,    -1,   319,   223,   578,   561,    -1,   167,
     223,   496,   599,   497,   335,   816,   594,   603,   570,   561,
      -1,   589,    -1,   602,   500,   589,    -1,   247,   171,    -1,
     247,   304,    -1,   247,   381,    -1,    -1,   233,   816,   582,
      -1,   410,    -1,   408,    -1,   237,   410,    -1,   237,   408,
      -1,   176,   410,    -1,   176,   408,    -1,   435,    -1,    -1,
      31,    -1,    55,   116,    -1,   136,   608,   189,   151,   610,
     611,    -1,   136,   608,   610,   611,    -1,   136,   609,   189,
     151,   817,   611,    -1,   136,   609,   817,   611,    -1,   136,
     612,   819,   286,   830,   611,    -1,   136,   612,   189,   151,
     819,   286,   830,   611,    -1,   136,   426,   613,   611,    -1,
     136,   426,   189,   151,   613,   611,    -1,   404,    -1,   369,
      -1,   172,    -1,   244,    -1,   244,   404,    -1,   451,    -1,
     248,   451,    -1,   199,    -1,   167,   404,    -1,    75,    -1,
      91,    -1,   391,    -1,   411,   364,   303,    -1,   411,   364,
     128,    -1,   411,   364,   409,    -1,   411,   364,    84,    -1,
      22,   250,    -1,   145,   420,    -1,   155,    -1,   167,   108,
     462,    -1,   325,    -1,   361,    -1,   372,    -1,   830,    -1,
     610,   500,   830,    -1,    59,    -1,   348,    -1,    -1,   311,
      -1,   358,    -1,   420,    -1,   716,    -1,   613,   500,   716,
      -1,    94,   605,   615,   816,   616,    37,   404,   635,    -1,
      94,   605,   615,   816,   616,    37,   746,    -1,   172,    -1,
     244,    -1,   496,   497,    -1,   496,   781,   497,    -1,   528,
     437,   878,   375,   540,   693,   879,   533,    -1,    92,   630,
     816,   594,   628,   619,   624,   633,   620,   553,   625,    -1,
      92,   496,   838,   497,   415,   624,   633,   553,   625,    -1,
     170,    -1,   415,    -1,   622,   123,   824,    -1,    -1,   632,
      -1,   621,   500,   632,    -1,   439,    -1,    -1,    37,    -1,
      -1,   324,    -1,    -1,   629,    -1,   496,   634,   497,    -1,
     861,    -1,   554,    -1,   489,    -1,   496,   621,   497,    -1,
      -1,   834,   626,    -1,   458,   284,    -1,    -1,   629,   631,
      -1,    -1,    51,    -1,    -1,    51,    -1,   284,    -1,   169,
      -1,   122,   623,   824,    -1,   276,   623,   824,    -1,    96,
      -1,   184,    -1,   327,   623,   824,    -1,   144,   623,   824,
      -1,   166,   327,   598,    -1,   166,   327,   489,    -1,   166,
     271,   276,   598,    -1,   166,   276,   598,    -1,   140,   824,
      -1,   861,    -1,   824,    -1,   392,    -1,   393,    -1,   627,
      -1,   634,   500,   627,    -1,   637,    -1,   636,    -1,   496,
     637,   497,    -1,   496,   636,   497,    -1,   639,    -1,   638,
     651,    -1,   638,   650,   684,   657,    -1,   638,   650,   656,
     685,    -1,   640,   638,    -1,   640,   638,   651,    -1,   640,
     638,   650,   684,   657,    -1,   640,   638,   650,   656,   685,
      -1,   639,    -1,   636,    -1,   368,   648,   805,   643,   693,
     710,   673,   682,   756,   683,   661,    -1,   368,   647,   807,
     643,   693,   710,   673,   682,   756,   683,   661,    -1,   692,
      -1,   404,   704,    -1,   638,   431,   646,   638,    -1,   638,
     214,   646,   638,    -1,   638,   146,   646,   638,    -1,   458,
     641,    -1,   482,   641,    -1,   458,   333,   641,    -1,   642,
      -1,   641,   500,   642,    -1,   819,   832,    37,   496,   838,
     497,    -1,   216,   644,    -1,    -1,   410,   645,   816,    -1,
     408,   645,   816,    -1,   237,   410,   645,   816,    -1,   237,
     408,   645,   816,    -1,   176,   410,   645,   816,    -1,   176,
     408,   645,   816,    -1,   435,   645,   816,    -1,   404,   816,
      -1,   816,    -1,   404,    -1,    -1,    28,    -1,   131,    -1,
      -1,   131,    -1,   131,   286,   496,   779,   497,    -1,    28,
      -1,    -1,   190,   278,    -1,   346,   278,    -1,    -1,   651,
      -1,    -1,   292,    55,   652,    -1,   292,    55,    28,   654,
     655,    -1,   292,    55,   489,   654,   655,    -1,   653,    -1,
     652,   500,   653,    -1,   746,   439,   775,   655,    -1,   746,
     654,   655,    -1,    38,    -1,   125,    -1,    -1,   481,   162,
      -1,   481,   227,    -1,    -1,   658,   659,    -1,   659,   658,
      -1,   658,    -1,   659,    -1,   656,    -1,    -1,   234,   667,
      -1,   234,   667,   500,   668,    -1,   160,   672,   669,   671,
     287,    -1,   160,   672,   671,   287,    -1,   283,   668,    -1,
     283,   669,   671,    -1,     4,   491,    -1,     9,   491,    -1,
       4,   308,    -1,     9,   308,    -1,     9,    -1,     9,   357,
      -1,   439,   359,   663,    -1,    -1,   825,    -1,    -1,   662,
     496,   660,   497,   666,    -1,   660,    -1,   660,   496,   825,
     497,    -1,   660,   496,   825,   500,     9,   497,    -1,   406,
     663,    -1,   664,    -1,    -1,   342,   496,     9,   497,    -1,
      -1,   746,    -1,    28,    -1,   746,   491,    -1,     4,   308,
      -1,     9,   308,    -1,   746,    -1,   748,    -1,   487,   670,
      -1,   488,   670,    -1,   823,    -1,     4,    -1,   356,    -1,
     357,    -1,   162,    -1,   268,    -1,   179,    55,   675,    -1,
     179,    55,    28,    -1,   179,    55,   489,    -1,    -1,   676,
      -1,   674,   500,   676,    -1,   674,    -1,   674,   500,    -1,
     746,    -1,   677,    -1,   679,    -1,   678,    -1,   680,    -1,
     496,   497,    -1,   355,   496,   779,   497,    -1,    97,   496,
     779,   497,    -1,   180,   377,   496,   675,   497,    -1,   180,
      -1,   181,    -1,   183,   746,    -1,    -1,   326,   746,    -1,
      -1,   686,    -1,   165,   329,   287,    -1,   684,    -1,    -1,
     687,    -1,   686,   687,    -1,   688,   689,   690,    -1,   165,
     437,    -1,   165,   269,   223,   437,    -1,   165,   378,    -1,
     165,   223,   378,    -1,   281,   815,    -1,    -1,   275,    -1,
     382,   242,    -1,    -1,   445,   496,   779,   497,    -1,   691,
     500,   496,   779,   497,    -1,   691,    -1,   691,   500,    -1,
     170,   695,    -1,    -1,   696,    -1,   694,   500,   696,    -1,
     694,    -1,   694,   500,    -1,   704,   699,   665,    -1,   705,
     700,   665,    -1,   228,   705,   700,    -1,   636,   699,   665,
      -1,   228,   636,   699,    -1,   697,    -1,   496,   697,   497,
     698,    -1,   496,   697,   497,    -1,   696,    95,   221,   696,
      -1,   696,   701,   221,   696,   703,    -1,   696,   221,   696,
     703,    -1,   696,   265,   701,   221,   696,    -1,   696,   265,
     221,   696,    -1,    37,   825,   496,   818,   497,    -1,    37,
     826,    -1,   825,   496,   818,   497,    -1,   825,    -1,   698,
      -1,    -1,   698,    -1,    37,   496,   711,   497,    -1,    37,
     825,   496,   711,   497,    -1,   825,   496,   711,   497,    -1,
      -1,   171,   702,    -1,   231,   702,    -1,   352,   702,    -1,
     205,    -1,   295,    -1,    -1,   439,   496,   818,   497,    -1,
     286,   746,    -1,   816,    -1,   816,   489,    -1,   287,   816,
      -1,   287,   496,   816,   497,    -1,   751,   709,    -1,   357,
     170,   496,   707,   497,   709,    -1,   751,   708,    -1,   706,
      -1,   707,   500,   706,    -1,    37,   496,   711,   497,    -1,
      -1,   482,   293,    -1,    -1,   455,   746,    -1,    -1,   712,
      -1,   711,   500,   712,    -1,   825,   716,   713,    -1,    74,
     830,    -1,    -1,   825,   716,    -1,   714,   500,   825,   716,
      -1,   356,    -1,   397,    -1,   718,   717,    -1,   376,   718,
     717,    -1,   718,    36,   494,   823,   495,    -1,   376,   718,
      36,   494,   823,   495,    -1,   718,    36,    -1,   376,   718,
      36,    -1,   715,   496,   714,   497,   717,    -1,   245,   496,
     783,   497,   717,    -1,   717,   494,   495,    -1,   717,   494,
     823,   495,    -1,    -1,   720,    -1,   722,    -1,   724,    -1,
     728,    -1,   734,    -1,   735,   745,    -1,   735,   496,   823,
     497,    -1,   722,    -1,   725,    -1,   729,    -1,   734,    -1,
     829,   721,    -1,   496,   779,   497,    -1,    -1,   212,    -1,
     213,    -1,   383,    -1,    50,    -1,   330,    -1,   163,   723,
      -1,   135,   315,    -1,   114,   721,    -1,   113,   721,    -1,
     279,   721,    -1,    53,    -1,   496,   823,   497,    -1,    -1,
     726,    -1,   727,    -1,   726,    -1,   727,    -1,    52,   733,
     496,   779,   497,    -1,    52,   733,    -1,   730,    -1,   731,
      -1,   730,    -1,   731,    -1,   732,   496,   823,   497,    -1,
     732,    -1,    66,   733,    -1,    65,   733,    -1,   446,    -1,
     264,    66,   733,    -1,   264,    65,   733,    -1,   266,   733,
      -1,   448,    -1,    -1,   414,   496,   823,   497,   736,    -1,
     414,   736,    -1,   413,   496,   823,   497,   736,    -1,   413,
     736,    -1,   215,    -1,   482,   413,   479,    -1,   460,   413,
     479,    -1,    -1,   476,    -1,   477,    -1,   259,    -1,   260,
      -1,   110,    -1,   111,    -1,   186,    -1,   187,    -1,   255,
      -1,   256,    -1,   365,    -1,   366,    -1,   253,    -1,   254,
      -1,   251,    -1,   252,    -1,   737,    -1,   738,    -1,   739,
      -1,   740,    -1,   741,    -1,   742,    -1,   743,    -1,   744,
      -1,   737,   415,   738,    -1,   739,   415,   740,    -1,   739,
     415,   741,    -1,   739,   415,   742,    -1,   740,   415,   741,
      -1,   740,   415,   742,    -1,   741,   415,   742,    -1,    -1,
     748,    -1,   746,    11,   716,    -1,   746,    74,   830,    -1,
     746,    42,   413,   479,   746,    -1,   487,   746,    -1,   488,
     746,    -1,   746,   487,   746,    -1,   746,   488,   746,    -1,
     746,   489,   746,    -1,   746,   490,   746,    -1,   746,   491,
     746,    -1,   746,   492,   746,    -1,   746,    16,   746,    -1,
     746,   483,   746,    -1,   746,   484,   746,    -1,   746,   485,
     746,    -1,   746,    17,   746,    -1,   746,    18,   746,    -1,
     746,    19,   746,    -1,   746,   774,   746,    -1,   774,   746,
      -1,   746,   774,    -1,   746,    34,   746,    -1,   746,   291,
     746,    -1,   271,   746,    -1,   480,   746,    -1,   746,   175,
     746,    -1,   746,   233,   746,    -1,   746,   233,   746,   144,
     746,    -1,   746,   480,   233,   746,    -1,   746,   480,   233,
     746,   144,   746,    -1,   746,   191,   746,    -1,   746,   191,
     746,   144,   746,    -1,   746,   480,   191,   746,    -1,   746,
     480,   191,   746,   144,   746,    -1,   746,   380,   415,   746,
      -1,   746,   380,   415,   746,   144,   746,    -1,   746,   480,
     380,   415,   746,    -1,   746,   480,   380,   415,   746,   144,
     746,    -1,   746,   218,   276,    -1,   746,   219,    -1,   746,
     218,   271,   276,    -1,   746,   271,   276,    -1,   746,   274,
      -1,   767,    -1,   501,   770,   502,    -1,   494,   780,   495,
      -1,   746,    15,   746,    -1,   767,   297,   767,    -1,   746,
     218,   422,    -1,   746,   218,   271,   422,    -1,   746,   218,
     158,    -1,   746,   218,   271,   158,    -1,   746,   218,   433,
      -1,   746,   218,   271,   433,    -1,   746,   218,   131,   170,
     746,    -1,   746,   218,   271,   131,   170,   746,    -1,   746,
     218,   281,   496,   783,   497,    -1,   746,   218,   271,   281,
     496,   783,   497,    -1,   746,    49,   804,   747,    34,   746,
      -1,   746,   480,    49,   804,   747,    34,   746,    -1,   746,
      49,   401,   747,    34,   746,    -1,   746,   480,    49,   401,
     747,    34,   746,    -1,   746,   196,   793,    -1,   746,   480,
     196,   793,    -1,   746,   776,   771,   636,    -1,   746,   776,
     771,   496,   746,   497,    -1,   116,    -1,    36,   494,   780,
     495,    -1,   748,    -1,   747,    11,   716,    -1,   487,   747,
      -1,   488,   747,    -1,   747,   487,   747,    -1,   747,   488,
     747,    -1,   747,   489,   747,    -1,   747,   490,   747,    -1,
     747,   491,   747,    -1,   747,   492,   747,    -1,   747,    16,
     747,    -1,   747,   483,   747,    -1,   747,   484,   747,    -1,
     747,   485,   747,    -1,   747,    17,   747,    -1,   747,    18,
     747,    -1,   747,    19,   747,    -1,   747,   774,   747,    -1,
     774,   747,    -1,   747,   774,    -1,   747,   218,   131,   170,
     747,    -1,   747,   218,   271,   131,   170,   747,    -1,   747,
     218,   281,   496,   783,   497,    -1,   747,   218,   271,   281,
     496,   783,   497,    -1,   799,    -1,   822,    -1,   503,     9,
      -1,   504,   803,    -1,    10,   803,    -1,   496,   746,   497,
     803,    -1,   794,    -1,   750,   803,    -1,   636,    -1,   636,
     802,    -1,   151,   636,    -1,   681,   496,   779,   497,    -1,
     821,   496,   497,    -1,   821,   496,   781,   650,   649,   497,
      -1,   821,   496,   447,   782,   650,   649,   497,    -1,   821,
     496,   781,   500,   447,   782,   650,   649,   497,    -1,   821,
     496,    28,   781,   650,   649,   497,    -1,   821,   496,   131,
     781,   650,   649,   497,    -1,   821,   496,   489,   497,    -1,
     749,   753,   754,   755,   759,    -1,   752,    -1,   749,    -1,
     752,    -1,    75,   165,   496,   746,   497,    -1,   100,    -1,
     103,    -1,   103,   496,   823,   497,    -1,   104,    -1,   104,
     496,   823,   497,    -1,   238,    -1,   238,   496,   823,   497,
      -1,   239,    -1,   239,   496,   823,   497,    -1,   101,    -1,
     105,    -1,   374,    -1,   438,    -1,    99,    -1,   102,    -1,
      62,   496,   746,    37,   716,   497,    -1,   425,   496,   746,
      37,   716,   497,    -1,   157,   496,   784,   497,    -1,   298,
     496,   786,   497,    -1,   312,   496,   788,   497,    -1,   399,
     496,   789,   497,    -1,   419,   496,   746,    37,   716,   497,
      -1,   421,   496,    54,   792,   497,    -1,   421,   496,   229,
     792,   497,    -1,   421,   496,   416,   792,   497,    -1,   421,
     496,   792,   497,    -1,   277,   496,   746,   500,   746,   497,
      -1,    73,   496,   779,   497,    -1,   459,   179,   496,   651,
     497,    -1,    -1,   161,   496,   455,   746,   497,    -1,    -1,
     154,    -1,    -1,   457,   757,    -1,    -1,   758,    -1,   757,
     500,   758,    -1,   825,    37,   760,    -1,   296,   760,    -1,
     296,   825,    -1,    -1,   496,   761,   762,   650,   763,   497,
      -1,   825,    -1,    -1,   305,    55,   778,    -1,    -1,   328,
     764,    -1,   357,   764,    -1,    -1,   765,    -1,    49,   765,
      34,   765,    -1,   428,   314,    -1,   428,   164,    -1,    98,
     356,    -1,   746,   314,    -1,   746,   164,    -1,   356,   496,
     779,   497,    -1,   356,   496,   497,    -1,   766,    -1,   496,
     778,   500,   746,   497,    -1,   826,   505,   746,    -1,   768,
      -1,   769,   500,   768,    -1,   769,    -1,   769,   500,    -1,
      35,    -1,   385,    -1,    28,    -1,     8,    -1,   773,    -1,
     487,    -1,   488,    -1,   489,    -1,   490,    -1,   491,    -1,
     492,    -1,    16,    -1,   483,    -1,   484,    -1,   485,    -1,
      17,    -1,    18,    -1,    19,    -1,     8,    -1,   288,   496,
     777,   497,    -1,   772,    -1,   288,   496,   777,   497,    -1,
     772,    -1,   288,   496,   777,   497,    -1,   233,    -1,   480,
     233,    -1,   175,    -1,   480,   175,    -1,   191,    -1,   480,
     191,    -1,   772,    -1,   825,   498,   777,    -1,   746,    -1,
     778,   500,   746,    -1,   778,    -1,   778,   500,    -1,   779,
      -1,    -1,   782,    -1,   781,   500,   782,    -1,   746,    -1,
     833,    13,   746,    -1,   833,    14,   746,    -1,   716,    -1,
     783,   500,   716,    -1,   785,   170,   746,    -1,    -1,     3,
      -1,   737,    -1,   738,    -1,   739,    -1,   740,    -1,   741,
      -1,   742,    -1,   743,    -1,   744,    -1,   824,    -1,   746,
     787,   790,   791,    -1,   746,   787,   790,    -1,   309,   746,
      -1,   747,   196,   747,    -1,    -1,   746,   790,   791,    -1,
     746,   791,   790,    -1,   746,   790,    -1,   746,   791,    -1,
     778,    -1,    -1,   170,   746,    -1,   165,   746,    -1,   746,
     170,   779,    -1,   170,   779,    -1,   779,    -1,   636,    -1,
     496,   779,   497,    -1,    61,   798,   795,   797,   142,    -1,
     796,    -1,   795,   796,    -1,   454,   746,   412,   746,    -1,
     138,   746,    -1,    -1,   746,    -1,    -1,   825,    -1,   825,
     802,    -1,   498,   820,    -1,   494,   746,   495,    -1,   494,
     801,   505,   801,   495,    -1,   746,    -1,    -1,   800,    -1,
     802,   800,    -1,    -1,   803,   800,    -1,    41,    -1,    -1,
     807,    -1,    -1,   808,    -1,   806,   500,   808,    -1,   806,
      -1,   806,   500,    -1,   746,    37,   835,    -1,   746,     3,
      -1,   746,    -1,   489,   810,   814,    -1,   825,   498,   489,
     810,   814,    -1,   147,   496,   818,   497,    -1,   147,   825,
      -1,   809,    -1,    -1,   746,    37,   825,    -1,   811,    -1,
     812,   500,   811,    -1,   812,    -1,   812,   500,    -1,   343,
     496,   813,   497,    -1,   343,   811,    -1,    -1,   816,    -1,
     815,   500,   816,    -1,   826,    -1,   825,   802,    -1,   819,
      -1,   817,   500,   819,    -1,   817,    -1,   817,   500,    -1,
     825,    -1,   834,    -1,   828,    -1,   825,   802,    -1,   823,
      -1,     4,    -1,   824,   803,    -1,     6,    -1,     7,    -1,
     821,   824,    -1,   821,   496,   781,   650,   649,   497,   824,
      -1,   719,   824,    -1,   735,   496,   746,   497,   745,    -1,
     735,   823,   745,    -1,   735,   824,   745,    -1,   422,    -1,
     158,    -1,   276,    -1,     9,    -1,     5,    -1,     3,    -1,
     894,    -1,   895,    -1,   825,    -1,     5,    -1,     3,    -1,
     894,    -1,   899,    -1,     3,    -1,   894,    -1,   896,    -1,
       3,    -1,   894,    -1,   897,    -1,   825,    -1,   825,   831,
      -1,   498,   820,    -1,   831,   498,   820,    -1,   496,   817,
     497,    -1,    -1,   827,    -1,     3,    -1,   898,    -1,   894,
      -1,   900,    -1,   834,    -1,     5,    -1,   316,   819,   837,
      37,   838,    -1,   496,   783,   497,    -1,    -1,   635,    -1,
     524,    -1,   617,    -1,   877,    -1,    94,   361,   825,   840,
      -1,    94,   361,   189,   271,   151,   825,   840,    -1,   840,
     841,    -1,    -1,   560,    -1,   842,    -1,   547,    -1,   889,
      -1,    94,   848,   199,   845,   846,   286,   816,   844,   496,
     541,   497,   847,   710,    -1,    94,   848,   199,   845,   189,
     271,   151,   588,   286,   816,   844,   496,   541,   497,   847,
     710,    -1,   825,    -1,   439,   843,    -1,    -1,    83,    -1,
      -1,   588,    -1,    -1,   458,   573,    -1,    -1,   432,    -1,
      -1,    30,   404,   704,   375,   361,   819,    -1,    30,   404,
     189,   151,   704,   375,   361,   819,    -1,    30,   369,   816,
     375,   361,   819,    -1,    30,   369,   189,   151,   816,   375,
     361,   819,    -1,    30,   451,   816,   375,   361,   819,    -1,
      30,   451,   189,   151,   816,   375,   361,   819,    -1,   166,
      69,    -1,    69,    -1,   153,   109,   824,   625,    -1,   195,
     109,   824,    -1,   152,   856,    -1,   152,   860,   854,   856,
      -1,   152,   449,   856,    -1,   152,   496,   859,   497,   856,
      -1,   449,    -1,    -1,   861,    -1,   554,    -1,    -1,   635,
      -1,   524,    -1,   617,    -1,   877,    -1,   891,    -1,     3,
      -1,   894,    -1,   898,    -1,   857,    -1,   824,    -1,   862,
      -1,   859,   500,   862,    -1,    33,    -1,    32,    -1,   422,
      -1,   158,    -1,   286,    -1,   858,    -1,   863,   855,    -1,
     857,    -1,   860,    -1,   375,   865,    -1,   375,   237,   865,
      -1,   375,   373,   865,    -1,   375,   176,   865,    -1,   866,
      -1,   887,   170,    98,    -1,   413,   479,   868,    -1,   361,
     824,    -1,   887,   415,   869,    -1,   887,   485,   869,    -1,
     887,   415,   116,    -1,   887,   485,   116,    -1,   861,    -1,
     554,    -1,   824,    -1,     3,    -1,   735,   824,   745,    -1,
     735,   496,   823,   497,   824,    -1,   554,    -1,   116,    -1,
     237,    -1,   867,    -1,   869,   500,   867,    -1,   236,   871,
      -1,   210,   871,    -1,   166,   210,   871,    -1,   824,    -1,
     825,    -1,   440,   874,   876,   854,    -1,   440,   874,   876,
     854,   816,    -1,   440,   874,   876,   854,   881,    -1,   440,
     496,   875,   497,    -1,   440,   496,   875,   497,   816,   832,
      -1,   860,    -1,   449,    -1,   169,    -1,   171,    -1,     3,
      -1,   171,    -1,    -1,   873,    -1,   875,   500,   873,    -1,
     169,    -1,    -1,   528,   121,   170,   878,   880,   879,   533,
      -1,   704,    -1,   704,   825,    -1,   704,    37,   825,    -1,
     455,   746,    -1,    -1,   439,   695,    -1,    -1,   860,   854,
      -1,   860,   854,   816,   832,    -1,   345,   884,    -1,   887,
      -1,    28,    -1,   883,    -1,   413,   479,    -1,   417,   220,
     232,    -1,   886,   635,    -1,   400,   635,    -1,   400,   887,
      -1,   886,   887,    -1,   886,   413,   479,    -1,   886,   417,
     220,   232,    -1,   886,    28,    -1,   886,    -1,   379,    -1,
     126,    -1,   825,    -1,   887,   498,   825,    -1,    57,   749,
      -1,    94,   605,   451,   816,   594,   847,    37,   635,   890,
      -1,    94,   291,   343,   605,   451,   816,   594,   847,    37,
     635,   890,    -1,    94,   605,   333,   451,   816,   496,   598,
     497,   847,    37,   635,   890,    -1,    94,   291,   343,   605,
     333,   451,   816,   496,   598,   497,   847,    37,   635,   890,
      -1,   458,    68,   289,    -1,   458,    60,    68,   289,    -1,
     458,   237,    68,   289,    -1,    -1,    94,   605,   404,   893,
      37,   635,   892,    -1,    94,   605,   404,   189,   271,   151,
     893,    37,   635,   892,    -1,    94,   291,   343,   605,   404,
     893,    37,   635,   892,    -1,   458,   108,    -1,   458,   269,
     108,    -1,    -1,   816,   594,   580,   572,    -1,    20,    -1,
      21,    -1,    22,    -1,    23,    -1,    24,    -1,    25,    -1,
      26,    -1,    27,    -1,    29,    -1,    30,    -1,    31,    -1,
      39,    -1,    40,    -1,    42,    -1,    43,    -1,    44,    -1,
      46,    -1,    47,    -1,    48,    -1,    55,    -1,    56,    -1,
      57,    -1,    58,    -1,    59,    -1,    60,    -1,    63,    -1,
      64,    -1,    67,    -1,    69,    -1,    70,    -1,    71,    -1,
      72,    -1,    77,    -1,    78,    -1,    79,    -1,    80,    -1,
      81,    -1,    82,    -1,    84,    -1,    85,    -1,    86,    -1,
      88,    -1,    89,    -1,    90,    -1,    91,    -1,    92,    -1,
      93,    -1,    96,    -1,    97,    -1,    98,    -1,   106,    -1,
     107,    -1,   108,    -1,   109,    -1,   110,    -1,   111,    -1,
     112,    -1,   115,    -1,   117,    -1,   119,    -1,   120,    -1,
     121,    -1,   122,    -1,   123,    -1,   124,    -1,   126,    -1,
     127,    -1,   128,    -1,   129,    -1,   130,    -1,   133,    -1,
     134,    -1,   135,    -1,   136,    -1,   137,    -1,   139,    -1,
     140,    -1,   141,    -1,   143,    -1,   144,    -1,   145,    -1,
     147,    -1,   148,    -1,   149,    -1,   150,    -1,   152,    -1,
     153,    -1,   154,    -1,   155,    -1,   156,    -1,   159,    -1,
     161,    -1,   162,    -1,   164,    -1,   166,    -1,   168,    -1,
     172,    -1,   173,    -1,   174,    -1,   176,    -1,   178,    -1,
     182,    -1,   184,    -1,   185,    -1,   186,    -1,   187,    -1,
     188,    -1,   189,    -1,   190,    -1,   192,    -1,   193,    -1,
     194,    -1,   195,    -1,   197,    -1,   198,    -1,   199,    -1,
     200,    -1,   201,    -1,   202,    -1,   204,    -1,   207,    -1,
     208,    -1,   209,    -1,   210,    -1,   211,    -1,   217,    -1,
     220,    -1,   222,    -1,   223,    -1,   224,    -1,   225,    -1,
     226,    -1,   227,    -1,   230,    -1,   232,    -1,   235,    -1,
     236,    -1,   237,    -1,   240,    -1,   241,    -1,   242,    -1,
     243,    -1,   244,    -1,   246,    -1,   247,    -1,   248,    -1,
     249,    -1,   250,    -1,   251,    -1,   252,    -1,   253,    -1,
     254,    -1,   255,    -1,   256,    -1,   257,    -1,   258,    -1,
     259,    -1,   260,    -1,   261,    -1,   262,    -1,   263,    -1,
     267,    -1,   268,    -1,   269,    -1,   272,    -1,   273,    -1,
     275,    -1,   278,    -1,   280,    -1,   281,    -1,   282,    -1,
     284,    -1,   285,    -1,   288,    -1,   289,    -1,   290,    -1,
     293,    -1,   296,    -1,   299,    -1,   300,    -1,   301,    -1,
     302,    -1,   303,    -1,   304,    -1,   305,    -1,   306,    -1,
     307,    -1,   308,    -1,   310,    -1,   311,    -1,   313,    -1,
     314,    -1,   316,    -1,   317,    -1,   318,    -1,   320,    -1,
     321,    -1,   322,    -1,   323,    -1,   324,    -1,   325,    -1,
     327,    -1,   328,    -1,   329,    -1,   331,    -1,   332,    -1,
     333,    -1,   334,    -1,   336,    -1,   337,    -1,   338,    -1,
     339,    -1,   340,    -1,   341,    -1,   342,    -1,   343,    -1,
     344,    -1,   345,    -1,   346,    -1,   347,    -1,   348,    -1,
     350,    -1,   351,    -1,   353,    -1,   354,    -1,   355,    -1,
     357,    -1,   358,    -1,   359,    -1,   360,    -1,   361,    -1,
     362,    -1,   363,    -1,   364,    -1,   365,    -1,   366,    -1,
     367,    -1,   369,    -1,   370,    -1,   371,    -1,   372,    -1,
     373,    -1,   375,    -1,   377,    -1,   378,    -1,   379,    -1,
     381,    -1,   382,    -1,   384,    -1,   386,    -1,   387,    -1,
     388,    -1,   389,    -1,   390,    -1,   391,    -1,   392,    -1,
     393,    -1,   394,    -1,   395,    -1,   396,    -1,   398,    -1,
     400,    -1,   402,    -1,   403,    -1,   405,    -1,   407,    -1,
     408,    -1,   409,    -1,   410,    -1,   411,    -1,   417,    -1,
     418,    -1,   420,    -1,   423,    -1,   424,    -1,   426,    -1,
     427,    -1,   428,    -1,   429,    -1,   430,    -1,   433,    -1,
     434,    -1,   435,    -1,   436,    -1,   437,    -1,   440,    -1,
     441,    -1,   442,    -1,   443,    -1,   444,    -1,   448,    -1,
     450,    -1,   451,    -1,   452,    -1,   453,    -1,   456,    -1,
     459,    -1,   460,    -1,   461,    -1,   462,    -1,   463,    -1,
     464,    -1,   476,    -1,   477,    -1,   478,    -1,   479,    -1,
      49,    -1,    50,    -1,    52,    -1,    53,    -1,    65,    -1,
      66,    -1,    73,    -1,   113,    -1,   114,    -1,   151,    -1,
     157,    -1,   163,    -1,   180,    -1,   181,    -1,   206,    -1,
     212,    -1,   213,    -1,   215,    -1,   245,    -1,   264,    -1,
     266,    -1,   270,    -1,   277,    -1,   279,    -1,   294,    -1,
     298,    -1,   312,    -1,   315,    -1,   330,    -1,   356,    -1,
     376,    -1,   383,    -1,   397,    -1,   399,    -1,   413,    -1,
     414,    -1,   419,    -1,   421,    -1,   425,    -1,   445,    -1,
     446,    -1,   465,    -1,   466,    -1,   467,    -1,   468,    -1,
     469,    -1,   470,    -1,   471,    -1,   472,    -1,   473,    -1,
     474,    -1,   475,    -1,    45,    -1,    51,    -1,    75,    -1,
      83,    -1,    95,    -1,   102,    -1,   169,    -1,   171,    -1,
     175,    -1,   191,    -1,   205,    -1,   218,    -1,   219,    -1,
     221,    -1,   231,    -1,   233,    -1,   245,    -1,   265,    -1,
     274,    -1,   295,    -1,   297,    -1,   352,    -1,   380,    -1,
     397,    -1,   406,    -1,   449,    -1,    45,    -1,    51,    -1,
      75,    -1,    83,    -1,    95,    -1,   102,    -1,   169,    -1,
     171,    -1,   175,    -1,   191,    -1,   205,    -1,   218,    -1,
     219,    -1,   221,    -1,   231,    -1,   233,    -1,   265,    -1,
     274,    -1,   295,    -1,   297,    -1,   352,    -1,   380,    -1,
     406,    -1,   425,    -1,   449,    -1,    49,    -1,    50,    -1,
      52,    -1,    53,    -1,    66,    -1,    65,    -1,    73,    -1,
     113,    -1,   114,    -1,   151,    -1,   157,    -1,   163,    -1,
     180,    -1,   181,    -1,   206,    -1,   213,    -1,   215,    -1,
     212,    -1,   245,    -1,   264,    -1,   266,    -1,   270,    -1,
     277,    -1,   279,    -1,   294,    -1,   298,    -1,   312,    -1,
     315,    -1,   330,    -1,   356,    -1,   376,    -1,   383,    -1,
     397,    -1,   399,    -1,   413,    -1,   414,    -1,   419,    -1,
     421,    -1,   425,    -1,   445,    -1,   446,    -1,   465,    -1,
     466,    -1,   467,    -1,   468,    -1,   469,    -1,   470,    -1,
     471,    -1,   472,    -1,   473,    -1,   474,    -1,   475,    -1,
      45,    -1,    51,    -1,    75,    -1,    83,    -1,    95,    -1,
     102,    -1,   169,    -1,   171,    -1,   175,    -1,   191,    -1,
     205,    -1,   218,    -1,   219,    -1,   221,    -1,   231,    -1,
     233,    -1,   245,    -1,   265,    -1,   274,    -1,   295,    -1,
     297,    -1,   352,    -1,   380,    -1,   397,    -1,   406,    -1,
     425,    -1,   449,    -1,    28,    -1,    32,    -1,    33,    -1,
      34,    -1,    35,    -1,    36,    -1,    37,    -1,    38,    -1,
      41,    -1,    54,    -1,    61,    -1,    62,    -1,    68,    -1,
      74,    -1,    76,    -1,    87,    -1,    94,    -1,    99,    -1,
     100,    -1,   101,    -1,   103,    -1,   104,    -1,   105,    -1,
     116,    -1,   118,    -1,   125,    -1,   131,    -1,   132,    -1,
     138,    -1,   142,    -1,   146,    -1,   158,    -1,   160,    -1,
     165,    -1,   167,    -1,   170,    -1,   177,    -1,   179,    -1,
     183,    -1,   196,    -1,   203,    -1,   214,    -1,   216,    -1,
     228,    -1,   229,    -1,   234,    -1,   238,    -1,   239,    -1,
     271,    -1,   276,    -1,   283,    -1,   286,    -1,   287,    -1,
     291,    -1,   292,    -1,   309,    -1,   319,    -1,   326,    -1,
     335,    -1,   349,    -1,   368,    -1,   374,    -1,   385,    -1,
     401,    -1,   404,    -1,   412,    -1,   415,    -1,   416,    -1,
     422,    -1,   431,    -1,   432,    -1,   438,    -1,   439,    -1,
     447,    -1,   454,    -1,   455,    -1,   457,    -1,   458,    -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,   467,   467,   483,   495,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   539,
       9,    18,    27,    36,    45,    54,    63,    72,    85,    87,
      93,    94,    99,   103,   107,   118,   126,   130,   139,   148,
     157,   166,   175,   184,   192,   200,   209,   218,   227,   236,
     253,   262,   271,   280,   290,   303,   318,   327,   335,   350,
     358,   368,   378,   385,   392,   400,   407,   418,   419,   424,
     428,   433,   438,   446,   447,   452,   456,   457,   458,     7,
      13,    19,    25,     6,    15,    25,    35,    45,    55,    65,
      75,    85,    95,   106,   117,   127,   140,   141,     8,    21,
      27,    34,    40,    47,    57,    61,    70,    79,    88,    95,
      96,   101,   113,   118,   143,   153,   163,   169,   180,   191,
     206,   207,   213,   214,   219,   220,   226,   227,   231,   232,
     237,   239,   245,   246,   250,   251,   254,   255,   260,     7,
      15,    26,    27,    30,    32,     7,    14,    22,     9,    19,
      32,    33,     7,    14,    31,    51,    52,     9,    17,    29,
      30,    34,    35,    36,    41,    42,    43,    48,    52,    56,
      60,    64,    68,    72,    76,    80,    84,    88,    92,    97,
     101,   105,   112,   113,   117,   118,   119,     2,     9,    15,
      21,    28,    35,    45,    46,    47,     7,    21,    36,    56,
      57,    84,    85,    86,    87,    88,    89,    93,    94,    99,
     104,   105,   106,   107,   108,   113,   120,   121,   122,   139,
     146,   153,   163,   173,   185,   193,   202,   211,   230,   237,
     242,   244,   246,   248,   251,   256,   257,   261,   262,   263,
     264,   269,   273,   274,   279,   286,   291,   292,   293,   294,
     295,   296,   297,   298,   304,   305,   309,   314,   321,   328,
     335,   347,   348,   349,   350,   354,   359,   360,   361,   366,
     371,   372,   373,   374,   375,   376,   381,   404,   408,   415,
     416,   420,   424,   425,   426,   430,   434,   442,   443,   448,
     449,   450,   454,   462,   463,   468,   469,   473,   478,   482,
     486,   491,   499,   500,   504,   505,   509,   510,   516,   527,
     540,   554,   568,   582,   596,   619,   623,   630,   634,   642,
     647,   654,   664,   665,   666,   667,   668,   675,   682,   683,
     688,   689,     9,    19,    29,    39,    49,    59,    69,    79,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   113,   114,   115,   116,
     117,   118,   119,   124,   125,   130,   131,   132,   137,   138,
     139,   142,   143,     8,    20,    36,    37,    41,    45,     7,
       1,    30,    53,    54,    59,    63,    68,    72,    80,    81,
      85,    86,    91,    92,    96,    97,   102,   103,   104,   105,
     106,   111,   119,   123,   128,   129,   134,   138,   143,   147,
     151,   155,   159,   163,   167,   171,   175,   179,   183,   187,
     191,   195,   203,   209,   210,   211,   216,   220,    47,    48,
      52,    53,    68,    69,    76,    84,    92,   100,   108,   116,
     127,   128,   155,   171,   188,   189,   208,   212,   216,   233,
     240,   247,   257,   258,   261,   273,   284,   292,   297,   302,
     307,   312,   320,   328,   333,   338,   345,   346,   350,   351,
     352,   359,   360,   364,   365,   369,   370,   371,   375,   376,
     380,   381,   391,   404,   405,   408,   417,   428,   429,   430,
     433,   434,   435,   439,   440,   441,   442,   446,   447,   451,
     453,   469,   471,   476,   479,   487,   491,   495,   499,   503,
     507,   514,   519,   526,   527,   531,   535,   539,   543,   550,
     557,   558,   563,   564,   568,   569,   574,   576,   578,   583,
     603,   604,   606,   611,   612,   616,   617,   620,   621,   646,
     647,   652,   657,   661,   662,   666,   667,   671,   672,   673,
     674,   675,   679,   692,   699,   706,   713,   714,   718,   719,
     723,   724,   728,   729,   733,   734,   738,   739,   743,   754,
     755,   756,   757,   761,   762,   767,   768,   769,   778,   784,
     793,   794,   807,   808,   812,   813,   817,   818,   824,   830,
     838,   846,   855,   864,   868,   894,   898,   911,   925,   940,
     952,   968,   974,   979,   985,   992,   993,  1001,  1005,  1009,
    1015,  1022,  1027,  1028,  1029,  1030,  1034,  1035,  1047,  1048,
    1053,  1060,  1067,  1074,  1106,  1117,  1130,  1135,  1136,  1139,
    1140,  1143,  1144,  1149,  1150,  1155,  1159,  1165,  1186,  1194,
    1207,  1210,  1214,  1214,  1216,  1221,  1228,  1233,  1239,  1244,
    1250,  1256,  1265,  1267,  1270,  1274,  1275,  1276,  1277,  1278,
    1279,  1284,  1304,  1305,  1306,  1307,  1318,  1332,  1333,  1339,
    1344,  1349,  1354,  1359,  1364,  1369,  1374,  1380,  1386,  1392,
    1399,  1421,  1430,  1434,  1442,  1446,  1454,  1466,  1487,  1491,
    1497,  1501,  1514,  1522,  1532,  1534,  1536,  1538,  1540,  1542,
    1547,  1548,  1555,  1564,  1572,  1581,  1592,  1600,  1601,  1602,
    1606,  1606,  1609,  1609,  1612,  1612,  1615,  1615,  1618,  1618,
    1621,  1621,  1624,  1624,  1627,  1627,  1630,  1632,  1634,  1636,
    1638,  1640,  1642,  1644,  1646,  1651,  1656,  1662,  1669,  1674,
    1680,  1686,  1717,  1719,  1721,  1729,  1744,  1746,  1748,  1750,
    1752,  1754,  1756,  1758,  1760,  1762,  1764,  1766,  1768,  1770,
    1772,  1775,  1777,  1779,  1782,  1784,  1786,  1788,  1791,  1796,
    1801,  1808,  1813,  1820,  1825,  1832,  1837,  1845,  1853,  1861,
    1869,  1887,  1895,  1903,  1911,  1919,  1927,  1931,  1935,  1939,
    1947,  1963,  1971,  1979,  1987,  1995,  2003,  2011,  2015,  2019,
    2023,  2027,  2035,  2043,  2051,  2059,  2079,  2101,  2112,  2119,
    2133,  2149,  2151,  2153,  2155,  2157,  2159,  2161,  2163,  2165,
    2167,  2169,  2171,  2173,  2175,  2177,  2179,  2181,  2183,  2185,
    2187,  2189,  2193,  2197,  2201,  2215,  2216,  2217,  2224,  2236,
    2251,  2263,  2265,  2277,  2288,  2312,  2323,  2332,  2336,  2343,
    2351,  2359,  2370,  2378,  2406,  2442,  2453,  2454,  2461,  2467,
    2471,  2475,  2479,  2483,  2487,  2491,  2495,  2499,  2503,  2507,
    2511,  2515,  2519,  2523,  2527,  2529,  2531,  2535,  2544,  2549,
    2556,  2571,  2578,  2582,  2586,  2590,  2594,  2608,  2609,  2613,
    2614,  2618,  2619,  2626,  2627,  2631,  2632,  2637,  2645,  2647,
    2661,  2664,  2691,  2692,  2695,  2696,  2707,  2713,  2720,  2729,
    2746,  2791,  2799,  2807,  2815,  2823,  2844,  2845,  2848,  2849,
    2853,  2863,  2864,  2868,  2869,  2873,  2874,  2875,  2878,  2879,
    2882,  2883,  2884,  2885,  2886,  2887,  2888,  2889,  2890,  2891,
    2892,  2893,  2894,  2897,  2899,  2904,  2906,  2911,  2913,  2915,
    2917,  2919,  2921,  2923,  2925,  2939,  2941,  2945,  2949,  2956,
    2961,  2979,  2984,  2992,  2996,  3002,  3006,  3015,  3026,  3027,
    3031,  3035,  3042,  3043,  3044,  3045,  3046,  3047,  3048,  3049,
    3050,  3051,  3061,  3065,  3072,  3079,  3080,  3096,  3100,  3105,
    3109,  3124,  3129,  3133,  3136,  3139,  3140,  3141,  3144,  3151,
    3161,  3175,  3176,  3180,  3191,  3192,  3195,  3196,  3199,  3203,
    3210,  3214,  3222,  3233,  3234,  3238,  3239,  3243,  3244,  3247,
    3248,  3258,  3259,  3263,  3264,  3268,  3269,  3272,  3288,  3296,
    3304,  3319,  3337,  3338,  3341,  3342,  3345,  3349,  3350,  3354,
    3355,  3358,  3359,  3360,  3370,  3371,  3382,  3386,  3413,  3415,
    3421,  3422,  3425,  3427,  3437,  3440,  3451,  3455,  3459,  3471,
    3475,  3484,  3491,  3529,  3533,  3537,  3541,  3545,  3549,  3553,
    3559,  3560,  3576,  3577,  3578,  3581,  3582,  3588,  3589,  3590,
    3593,  3594,  3595,  3598,  3599,  3600,  3603,  3604,  3607,  3609,
    3614,  3615,  3618,  3626,  3627,  3628,  3629,  3632,  3633,     7,
      18,    19,    23,    24,    25,    26,     7,    16,    34,    41,
      46,    47,    48,    49,     8,    33,    62,    66,    67,    72,
      73,    78,    79,    83,    84,    89,    90,     7,    16,    25,
      34,    43,    52,     5,    11,     7,    20,     9,    16,    26,
      33,    44,    45,    50,    51,    52,    57,    58,    59,    60,
      61,    65,    66,    67,    72,    73,    78,    82,    90,    91,
      96,    97,    98,   104,   109,   117,   118,    10,    16,    22,
      28,    38,    39,    47,    58,    70,    78,    86,    93,   103,
     105,   111,   115,   119,   134,   141,   142,   143,   147,   148,
       7,    14,    20,    28,    29,     8,    22,    36,    48,    56,
      70,    71,    72,    73,    74,    87,    88,    93,    94,    98,
      99,     7,    21,    25,    32,    43,    44,    50,    51,     9,
      19,     2,     7,    14,    24,    25,    32,     3,    10,    17,
      24,    31,    38,    45,    52,    61,    61,    63,    64,     6,
       8,    21,    34,    52,    74,    75,    76,    77,    11,    24,
      37,    54,    55,    56,    61,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    75,    75,    75,    75,    75,    75,    75,    75,    75,
      75,    75,    75,    75,    75,    75,    75,    75,    75,    75,
      75,    75,    75,    75,    75,    75,    75,    75,    75,    75,
      75,    75,    75,    75,    75,    75,    75,    75,    75,    75,
      75,    75,    75,    75,    75,    75,    75,    75,    75,    75,
      75,    75,    75,    76,    76,    76,    76,    76,    76,    76,
      76,    76,    76,    76,    76,    76,    76,    76,    76,    76,
      76,    76,    76,    76,    76,    76,    76,    76,    76,    77,
      77,    77,    77,    77,    77,    77,    77,    77,    77,    77,
      77,    77,    77,    77,    77,    77,    77,    77,    77,    77,
      77,    77,    77,    77,    78,    78,    78,    78,    78,    78,
      78,    78,    78,    78,    78,    78,    78,    78,    78,    78,
      78,    78,    78,    78,    78,    78,    78,    78,    78,    78,
      78,    78,    78,    78,    78,    78,    78,    78,    78,    78,
      78,    78,    78,    78,    78,    78,    78,    78,    78,    78,
      78,    78,    78,    78,    78,    78,    79,    79,    79,    79,
      79,    79,    79,    79,    79,    79,    79,    79,    79,    79,
      79,    79,    79,    79,    79,    79,    79,    79,    79,    79,
      79,    79,    79,    80,    80,    80,    80,    80,    80,    80,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
      80
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "IDENT", "FCONST", "SCONST", "BCONST",
  "XCONST", "Op", "ICONST", "PARAM", "TYPECAST", "DOT_DOT", "COLON_EQUALS",
  "EQUALS_GREATER", "LAMBDA_ARROW", "POWER_OF", "LESS_EQUALS",
  "GREATER_EQUALS", "NOT_EQUALS", "ABORT_P", "ABSOLUTE_P", "ACCESS",
  "ACTION", "ADD_P", "ADMIN", "AFTER", "AGGREGATE", "ALL", "ALSO", "ALTER",
  "ALWAYS", "ANALYSE", "ANALYZE", "AND", "ANY", "ARRAY", "AS", "ASC_P",
  "ASSERTION", "ASSIGNMENT", "ASYMMETRIC", "AT", "ATTACH", "ATTRIBUTE",
  "AUTHORIZATION", "BACKWARD", "BEFORE", "BEGIN_P", "BETWEEN", "BIGINT",
  "BINARY", "BIT", "BOOLEAN_P", "BOTH", "BY", "CACHE", "CALL_P", "CALLED",
  "CASCADE", "CASCADED", "CASE", "CAST", "CATALOG_P", "CHAIN", "CHAR_P",
  "CHARACTER", "CHARACTERISTICS", "CHECK_P", "CHECKPOINT", "CLASS",
  "CLOSE", "CLUSTER", "COALESCE", "COLLATE", "COLLATION", "COLUMN",
  "COLUMNS", "COMMENT", "COMMENTS", "COMMIT", "COMMITTED", "COMPRESSION",
  "CONCURRENTLY", "CONFIGURATION", "CONFLICT", "CONNECTION", "CONSTRAINT",
  "CONSTRAINTS", "CONTENT_P", "CONTINUE_P", "CONVERSION_P", "COPY", "COST",
  "CREATE_P", "CROSS", "CSV", "CUBE", "CURRENT_P", "CURRENT_CATALOG",
  "CURRENT_DATE", "CURRENT_ROLE", "CURRENT_SCHEMA", "CURRENT_TIME",
  "CURRENT_TIMESTAMP", "CURRENT_USER", "CURSOR", "CYCLE", "DATA_P",
  "DATABASE", "DAY_P", "DAYS_P", "DEALLOCATE", "DEC", "DECIMAL_P",
  "DECLARE", "DEFAULT", "DEFAULTS", "DEFERRABLE", "DEFERRED", "DEFINER",
  "DELETE_P", "DELIMITER", "DELIMITERS", "DEPENDS", "DESC_P", "DESCRIBE",
  "DETACH", "DICTIONARY", "DISABLE_P", "DISCARD", "DISTINCT", "DO",
  "DOCUMENT_P", "DOMAIN_P", "DOUBLE_P", "DROP", "EACH", "ELSE", "ENABLE_P",
  "ENCODING", "ENCRYPTED", "END_P", "ENUM_P", "ESCAPE", "EVENT", "EXCEPT",
  "EXCLUDE", "EXCLUDING", "EXCLUSIVE", "EXECUTE", "EXISTS", "EXPLAIN",
  "EXPORT_P", "EXPORT_STATE", "EXTENSION", "EXTERNAL", "EXTRACT",
  "FALSE_P", "FAMILY", "FETCH", "FILTER", "FIRST_P", "FLOAT_P",
  "FOLLOWING", "FOR", "FORCE", "FOREIGN", "FORWARD", "FREEZE", "FROM",
  "FULL", "FUNCTION", "FUNCTIONS", "GENERATED", "GLOB", "GLOBAL", "GRANT",
  "GRANTED", "GROUP_P", "GROUPING", "GROUPING_ID", "HANDLER", "HAVING",
  "HEADER_P", "HOLD", "HOUR_P", "HOURS_P", "IDENTITY_P", "IF_P",
  "IGNORE_P", "ILIKE", "IMMEDIATE", "IMMUTABLE", "IMPLICIT_P", "IMPORT_P",
  "IN_P", "INCLUDING", "INCREMENT", "INDEX", "INDEXES", "INHERIT",
  "INHERITS", "INITIALLY", "INLINE_P", "INNER_P", "INOUT", "INPUT_P",
  "INSENSITIVE", "INSERT", "INSTALL", "INSTEAD", "INT_P", "INTEGER",
  "INTERSECT", "INTERVAL", "INTO", "INVOKER", "IS", "ISNULL", "ISOLATION",
  "JOIN", "JSON", "KEY", "LABEL", "LANGUAGE", "LARGE_P", "LAST_P",
  "LATERAL_P", "LEADING", "LEAKPROOF", "LEFT", "LEVEL", "LIKE", "LIMIT",
  "LISTEN", "LOAD", "LOCAL", "LOCALTIME", "LOCALTIMESTAMP", "LOCATION",
  "LOCK_P", "LOCKED", "LOGGED", "MACRO", "MAP", "MAPPING", "MATCH",
  "MATERIALIZED", "MAXVALUE", "METHOD", "MICROSECOND_P", "MICROSECONDS_P",
  "MILLISECOND_P", "MILLISECONDS_P", "MINUTE_P", "MINUTES_P", "MINVALUE",
  "MODE", "MONTH_P", "MONTHS_P", "MOVE", "NAME_P", "NAMES", "NATIONAL",
  "NATURAL", "NCHAR", "NEW", "NEXT", "NO", "NONE", "NOT", "NOTHING",
  "NOTIFY", "NOTNULL", "NOWAIT", "NULL_P", "NULLIF", "NULLS_P", "NUMERIC",
  "OBJECT_P", "OF", "OFF", "OFFSET", "OIDS", "OLD", "ON", "ONLY",
  "OPERATOR", "OPTION", "OPTIONS", "OR", "ORDER", "ORDINALITY", "OUT_P",
  "OUTER_P", "OVER", "OVERLAPS", "OVERLAY", "OVERRIDING", "OWNED", "OWNER",
  "PARALLEL", "PARSER", "PARTIAL", "PARTITION", "PASSING", "PASSWORD",
  "PERCENT", "PLACING", "PLANS", "POLICY", "POSITION", "PRAGMA_P",
  "PRECEDING", "PRECISION", "PREPARE", "PREPARED", "PRESERVE", "PRIMARY",
  "PRIOR", "PRIVILEGES", "PROCEDURAL", "PROCEDURE", "PROGRAM",
  "PUBLICATION", "QUALIFY", "QUOTE", "RANGE", "READ_P", "REAL", "REASSIGN",
  "RECHECK", "RECURSIVE", "REF", "REFERENCES", "REFERENCING", "REFRESH",
  "REINDEX", "RELATIVE_P", "RELEASE", "RENAME", "REPEATABLE", "REPLACE",
  "REPLICA", "RESET", "RESPECT_P", "RESTART", "RESTRICT", "RETURNING",
  "RETURNS", "REVOKE", "RIGHT", "ROLE", "ROLLBACK", "ROLLUP", "ROW",
  "ROWS", "RULE", "SAMPLE", "SAVEPOINT", "SCHEMA", "SCHEMAS", "SCROLL",
  "SEARCH", "SECOND_P", "SECONDS_P", "SECURITY", "SELECT", "SEQUENCE",
  "SEQUENCES", "SERIALIZABLE", "SERVER", "SESSION", "SESSION_USER", "SET",
  "SETOF", "SETS", "SHARE", "SHOW", "SIMILAR", "SIMPLE", "SKIP",
  "SMALLINT", "SNAPSHOT", "SOME", "SQL_P", "STABLE", "STANDALONE_P",
  "START", "STATEMENT", "STATISTICS", "STDIN", "STDOUT", "STORAGE",
  "STRICT_P", "STRIP_P", "STRUCT", "SUBSCRIPTION", "SUBSTRING",
  "SUMMARIZE", "SYMMETRIC", "SYSID", "SYSTEM_P", "TABLE", "TABLES",
  "TABLESAMPLE", "TABLESPACE", "TEMP", "TEMPLATE", "TEMPORARY", "TEXT_P",
  "THEN", "TIME", "TIMESTAMP", "TO", "TRAILING", "TRANSACTION",
  "TRANSFORM", "TREAT", "TRIGGER", "TRIM", "TRUE_P", "TRUNCATE", "TRUSTED",
  "TRY_CAST", "TYPE_P", "TYPES_P", "UNBOUNDED", "UNCOMMITTED",
  "UNENCRYPTED", "UNION", "UNIQUE", "UNKNOWN", "UNLISTEN", "UNLOGGED",
  "UNTIL", "UPDATE", "USER", "USING", "VACUUM", "VALID", "VALIDATE",
  "VALIDATOR", "VALUE_P", "VALUES", "VARCHAR", "VARIADIC", "VARYING",
  "VERBOSE", "VERSION_P", "VIEW", "VIEWS", "VOLATILE", "WHEN", "WHERE",
  "WHITESPACE_P", "WINDOW", "WITH", "WITHIN", "WITHOUT", "WORK", "WRAPPER",
  "WRITE_P", "XML_P", "XMLATTRIBUTES", "XMLCONCAT", "XMLELEMENT",
  "XMLEXISTS", "XMLFOREST", "XMLNAMESPACES", "XMLPARSE", "XMLPI",
  "XMLROOT", "XMLSERIALIZE", "XMLTABLE", "YEAR_P", "YEARS_P", "YES_P",
  "ZONE", "NOT_LA", "NULLS_LA", "WITH_LA", "'<'", "'>'", "'='",
  "POSTFIXOP", "'+'", "'-'", "'*'", "'/'", "'%'", "'^'", "UMINUS", "'['",
  "']'", "'('", "')'", "'.'", "';'", "','", "'{'", "'}'", "'#'", "'?'",
  "':'", "$accept", "stmtblock", "stmtmulti", "stmt", "AlterTableStmt",
  "alter_identity_column_option_list", "alter_column_default",
  "alter_identity_column_option", "alter_generic_option_list",
  "alter_table_cmd", "alter_using", "alter_generic_option_elem",
  "alter_table_cmds", "alter_generic_options", "opt_set_data",
  "DeallocateStmt", "RenameStmt", "opt_column", "InsertStmt",
  "insert_rest", "insert_target", "opt_conf_expr", "opt_with_clause",
  "insert_column_item", "set_clause", "opt_on_conflict", "index_elem",
  "returning_clause", "override_kind", "set_target_list", "opt_collate",
  "opt_class", "insert_column_list", "set_clause_list",
  "set_clause_list_opt_comma", "index_params", "set_target",
  "CreateTypeStmt", "opt_enum_val_list", "enum_val_list", "PragmaStmt",
  "CreateSeqStmt", "OptSeqOptList", "ExecuteStmt", "execute_param_clause",
  "AlterSeqStmt", "SeqOptList", "opt_with", "NumericOnly", "SeqOptElem",
  "opt_by", "SignedIconst", "TransactionStmt", "opt_transaction",
  "CreateStmt", "ConstraintAttributeSpec", "def_arg",
  "OptParenthesizedSeqOptList", "generic_option_arg", "key_action",
  "ColConstraint", "ColConstraintElem", "generic_option_elem",
  "key_update", "key_actions", "create_generic_options", "OnCommitOption",
  "reloptions", "opt_no_inherit", "TableConstraint", "TableLikeOption",
  "reloption_list", "ExistingIndex", "ConstraintAttr", "OptWith",
  "definition", "TableLikeOptionList", "generic_option_name",
  "ConstraintAttributeElem", "columnDef", "generic_option_list",
  "def_list", "index_name", "TableElement", "def_elem", "opt_definition",
  "OptTableElementList", "columnElem", "opt_column_list", "ColQualList",
  "key_delete", "reloption_elem", "columnList", "columnList_opt_comma",
  "func_type", "ConstraintElem", "TableElementList", "key_match",
  "TableLikeClause", "OptTemp", "generated_when", "DropStmt",
  "drop_type_any_name", "drop_type_name", "any_name_list",
  "opt_drop_behavior", "drop_type_name_on_any_name", "type_name_list",
  "CreateFunctionStmt", "macro_alias", "param_list", "UpdateStmt",
  "CopyStmt", "copy_from", "copy_delimiter", "copy_generic_opt_arg_list",
  "opt_using", "opt_as", "opt_program", "copy_options",
  "copy_generic_opt_arg", "copy_generic_opt_elem", "opt_oids",
  "copy_opt_list", "opt_binary", "copy_opt_item",
  "copy_generic_opt_arg_list_item", "copy_file_name",
  "copy_generic_opt_list", "SelectStmt", "select_with_parens",
  "select_no_parens", "select_clause", "simple_select", "with_clause",
  "cte_list", "common_table_expr", "into_clause", "OptTempTableName",
  "opt_table", "all_or_distinct", "distinct_clause", "opt_all_clause",
  "opt_ignore_nulls", "opt_sort_clause", "sort_clause", "sortby_list",
  "sortby", "opt_asc_desc", "opt_nulls_order", "select_limit",
  "opt_select_limit", "limit_clause", "offset_clause", "sample_count",
  "sample_clause", "opt_sample_func", "tablesample_entry",
  "tablesample_clause", "opt_tablesample_clause", "opt_repeatable_clause",
  "select_limit_value", "select_offset_value", "select_fetch_first_value",
  "I_or_F_const", "row_or_rows", "first_or_next", "group_clause",
  "group_by_list", "group_by_list_opt_comma", "group_by_item",
  "empty_grouping_set", "rollup_clause", "cube_clause",
  "grouping_sets_clause", "grouping_or_grouping_id", "having_clause",
  "qualify_clause", "for_locking_clause", "opt_for_locking_clause",
  "for_locking_items", "for_locking_item", "for_locking_strength",
  "locked_rels_list", "opt_nowait_or_skip", "values_clause",
  "values_clause_opt_comma", "from_clause", "from_list",
  "from_list_opt_comma", "table_ref", "joined_table", "alias_clause",
  "opt_alias_clause", "func_alias_clause", "join_type", "join_outer",
  "join_qual", "relation_expr", "func_table", "rowsfrom_item",
  "rowsfrom_list", "opt_col_def_list", "opt_ordinality", "where_clause",
  "TableFuncElementList", "TableFuncElement", "opt_collate_clause",
  "colid_type_list", "RowOrStruct", "Typename", "opt_array_bounds",
  "SimpleTypename", "ConstTypename", "GenericType", "opt_type_modifiers",
  "Numeric", "opt_float", "Bit", "ConstBit", "BitWithLength",
  "BitWithoutLength", "Character", "ConstCharacter", "CharacterWithLength",
  "CharacterWithoutLength", "character", "opt_varying", "ConstDatetime",
  "ConstInterval", "opt_timezone", "year_keyword", "month_keyword",
  "day_keyword", "hour_keyword", "minute_keyword", "second_keyword",
  "millisecond_keyword", "microsecond_keyword", "opt_interval", "a_expr",
  "b_expr", "c_expr", "func_application", "func_expr",
  "func_expr_windowless", "func_expr_common_subexpr",
  "within_group_clause", "filter_clause", "export_clause", "window_clause",
  "window_definition_list", "window_definition", "over_clause",
  "window_specification", "opt_existing_window_name",
  "opt_partition_clause", "opt_frame_clause", "frame_extent",
  "frame_bound", "qualified_row", "row", "dict_arg", "dict_arguments",
  "dict_arguments_opt_comma", "sub_type", "all_Op", "MathOp", "qual_Op",
  "qual_all_Op", "subquery_Op", "any_operator", "expr_list",
  "expr_list_opt_comma", "opt_expr_list_opt_comma", "func_arg_list",
  "func_arg_expr", "type_list", "extract_list", "extract_arg",
  "overlay_list", "overlay_placing", "position_list", "substr_list",
  "substr_from", "substr_for", "trim_list", "in_expr", "case_expr",
  "when_clause_list", "when_clause", "case_default", "case_arg",
  "columnref", "indirection_el", "opt_slice_bound", "indirection",
  "opt_indirection", "opt_asymmetric", "opt_target_list_opt_comma",
  "target_list", "target_list_opt_comma", "target_el", "except_list",
  "opt_except_list", "replace_list_el", "replace_list",
  "replace_list_opt_comma", "opt_replace_list", "qualified_name_list",
  "qualified_name", "name_list", "name_list_opt_comma", "name",
  "attr_name", "func_name", "AexprConst", "Iconst", "Sconst", "ColId",
  "ColIdOrString", "type_function_name", "function_name_token",
  "type_name_token", "any_name", "attrs", "opt_name_list", "param_name",
  "ColLabel", "ColLabelOrString", "PrepareStmt", "prep_type_clause",
  "PreparableStmt", "CreateSchemaStmt", "OptSchemaEltList", "schema_stmt",
  "IndexStmt", "access_method", "access_method_clause", "opt_concurrently",
  "opt_index_name", "opt_reloptions", "opt_unique",
  "AlterObjectSchemaStmt", "CheckPointStmt", "ExportStmt", "ImportStmt",
  "ExplainStmt", "opt_verbose", "explain_option_arg", "ExplainableStmt",
  "NonReservedWord", "NonReservedWord_or_Sconst", "explain_option_list",
  "analyze_keyword", "opt_boolean_or_string", "explain_option_elem",
  "explain_option_name", "VariableSetStmt", "set_rest", "generic_set",
  "var_value", "zone_value", "var_list", "LoadStmt", "file_name",
  "VacuumStmt", "vacuum_option_elem", "opt_full", "vacuum_option_list",
  "opt_freeze", "DeleteStmt", "relation_expr_opt_alias",
  "where_or_current_clause", "using_clause", "AnalyzeStmt",
  "VariableResetStmt", "generic_reset", "reset_rest", "VariableShowStmt",
  "show_or_describe", "var_name", "CallStmt", "ViewStmt",
  "opt_check_option", "CreateAsStmt", "opt_with_data", "create_as_target",
  "unreserved_keyword", "col_name_keyword", "func_name_keyword",
  "type_name_keyword", "other_keyword", "type_func_name_keyword",
  "reserved_keyword", 0
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,    60,    62,    61,   738,    43,    45,    42,
      47,    37,    94,   739,    91,    93,    40,    41,    46,    59,
      44,   123,   125,    35,    63,    58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   506,   507,   508,   508,   509,   509,   509,   509,   509,
     509,   509,   509,   509,   509,   509,   509,   509,   509,   509,
     509,   509,   509,   509,   509,   509,   509,   509,   509,   509,
     509,   509,   509,   509,   509,   509,   509,   509,   509,   509,
     510,   510,   510,   510,   510,   510,   510,   510,   511,   511,
     512,   512,   513,   513,   513,   513,   514,   514,   515,   515,
     515,   515,   515,   515,   515,   515,   515,   515,   515,   515,
     515,   515,   515,   515,   515,   515,   515,   515,   515,   515,
     515,   515,   515,   515,   515,   515,   515,   516,   516,   517,
     517,   517,   517,   518,   518,   519,   520,   520,   520,   521,
     521,   521,   521,   522,   522,   522,   522,   522,   522,   522,
     522,   522,   522,   522,   522,   522,   523,   523,   524,   525,
     525,   525,   525,   525,   526,   526,   527,   527,   527,   528,
     528,   529,   530,   530,   531,   531,   531,   532,   532,   532,
     533,   533,   534,   534,   535,   535,   536,   536,   537,   537,
     538,   538,   539,   539,   540,   540,   541,   541,   542,   543,
     543,   544,   544,   545,   545,   546,   546,   546,   547,   547,
     548,   548,   549,   549,   549,   550,   550,   551,   551,   552,
     552,   553,   553,   553,   554,   554,   554,   554,   555,   555,
     555,   555,   555,   555,   555,   555,   555,   555,   555,   555,
     555,   555,   556,   556,   557,   557,   557,   558,   558,   558,
     558,   558,   558,   559,   559,   559,   560,   560,   560,   561,
     561,   562,   562,   562,   562,   562,   562,   563,   563,   564,
     565,   565,   565,   565,   565,   566,   566,   566,   566,   567,
     567,   567,   567,   567,   567,   567,   567,   567,   568,   569,
     570,   570,   570,   570,   570,   571,   571,   572,   572,   572,
     572,   573,   574,   574,   575,   575,   576,   576,   576,   576,
     576,   576,   576,   576,   577,   577,   578,   579,   579,   579,
     579,   580,   580,   580,   580,   581,   582,   582,   582,   583,
     584,   584,   584,   584,   584,   584,   585,   586,   586,   587,
     587,   588,   589,   589,   589,   590,   590,   591,   591,   592,
     592,   592,   593,   594,   594,   595,   595,   596,   597,   597,
     597,   597,   598,   598,   599,   599,   600,   600,   600,   601,
     601,   601,   601,   601,   601,   602,   602,   603,   603,   603,
     603,   604,   605,   605,   605,   605,   605,   605,   605,   605,
     606,   606,   607,   607,   607,   607,   607,   607,   607,   607,
     608,   608,   608,   608,   608,   608,   608,   608,   608,   608,
     608,   608,   608,   608,   608,   608,   609,   609,   609,   609,
     609,   609,   609,   610,   610,   611,   611,   611,   612,   612,
     612,   613,   613,   614,   614,   615,   615,   616,   616,   617,
     618,   618,   619,   619,   620,   620,   621,   621,   622,   622,
     623,   623,   624,   624,   625,   625,   626,   626,   626,   626,
     626,   627,   628,   628,   629,   629,   630,   630,   631,   631,
     631,   631,   631,   631,   631,   631,   631,   631,   631,   631,
     631,   631,   632,   633,   633,   633,   634,   634,   635,   635,
     636,   636,   637,   637,   637,   637,   637,   637,   637,   637,
     638,   638,   639,   639,   639,   639,   639,   639,   639,   640,
     640,   640,   641,   641,   642,   643,   643,   644,   644,   644,
     644,   644,   644,   644,   644,   644,   645,   645,   646,   646,
     646,   647,   647,   648,   648,   649,   649,   649,   650,   650,
     651,   651,   651,   652,   652,   653,   653,   654,   654,   654,
     655,   655,   655,   656,   656,   656,   656,   657,   657,   658,
     658,   658,   658,   659,   659,   660,   660,   660,   660,   660,
     660,   661,   661,   662,   662,   663,   663,   663,   663,   664,
     665,   665,   666,   666,   667,   667,   667,   667,   667,   668,
     669,   669,   669,   670,   670,   671,   671,   672,   672,   673,
     673,   673,   673,   674,   674,   675,   675,   676,   676,   676,
     676,   676,   677,   678,   679,   680,   681,   681,   682,   682,
     683,   683,   684,   684,   685,   685,   686,   686,   687,   688,
     688,   688,   688,   689,   689,   690,   690,   690,   691,   691,
     692,   692,   693,   693,   694,   694,   695,   695,   696,   696,
     696,   696,   696,   696,   696,   697,   697,   697,   697,   697,
     697,   698,   698,   698,   698,   699,   699,   700,   700,   700,
     700,   700,   701,   701,   701,   701,   702,   702,   703,   703,
     704,   704,   704,   704,   705,   705,   706,   707,   707,   708,
     708,   709,   709,   710,   710,   711,   711,   712,   713,   713,
     714,   714,   715,   715,   716,   716,   716,   716,   716,   716,
     716,   716,   717,   717,   717,   718,   718,   718,   718,   718,
     718,   718,   719,   719,   719,   719,   720,   721,   721,   722,
     722,   722,   722,   722,   722,   722,   722,   722,   722,   722,
     723,   723,   724,   724,   725,   725,   726,   727,   728,   728,
     729,   729,   730,   731,   732,   732,   732,   732,   732,   732,
     733,   733,   734,   734,   734,   734,   735,   736,   736,   736,
     737,   737,   738,   738,   739,   739,   740,   740,   741,   741,
     742,   742,   743,   743,   744,   744,   745,   745,   745,   745,
     745,   745,   745,   745,   745,   745,   745,   745,   745,   745,
     745,   745,   746,   746,   746,   746,   746,   746,   746,   746,
     746,   746,   746,   746,   746,   746,   746,   746,   746,   746,
     746,   746,   746,   746,   746,   746,   746,   746,   746,   746,
     746,   746,   746,   746,   746,   746,   746,   746,   746,   746,
     746,   746,   746,   746,   746,   746,   746,   746,   746,   746,
     746,   746,   746,   746,   746,   746,   746,   746,   746,   746,
     746,   746,   746,   746,   746,   746,   746,   746,   746,   746,
     746,   747,   747,   747,   747,   747,   747,   747,   747,   747,
     747,   747,   747,   747,   747,   747,   747,   747,   747,   747,
     747,   747,   747,   747,   747,   748,   748,   748,   748,   748,
     748,   748,   748,   748,   748,   748,   748,   749,   749,   749,
     749,   749,   749,   749,   750,   750,   751,   751,   752,   752,
     752,   752,   752,   752,   752,   752,   752,   752,   752,   752,
     752,   752,   752,   752,   752,   752,   752,   752,   752,   752,
     752,   752,   752,   752,   752,   752,   752,   753,   753,   754,
     754,   755,   755,   756,   756,   757,   757,   758,   759,   759,
     759,   760,   761,   761,   762,   762,   763,   763,   763,   764,
     764,   765,   765,   765,   765,   765,   766,   766,   767,   767,
     768,   769,   769,   770,   770,   771,   771,   771,   772,   772,
     773,   773,   773,   773,   773,   773,   773,   773,   773,   773,
     773,   773,   773,   774,   774,   775,   775,   776,   776,   776,
     776,   776,   776,   776,   776,   777,   777,   778,   778,   779,
     779,   780,   780,   781,   781,   782,   782,   782,   783,   783,
     784,   784,   785,   785,   785,   785,   785,   785,   785,   785,
     785,   785,   786,   786,   787,   788,   788,   789,   789,   789,
     789,   789,   789,   790,   791,   792,   792,   792,   793,   793,
     794,   795,   795,   796,   797,   797,   798,   798,   799,   799,
     800,   800,   800,   801,   801,   802,   802,   803,   803,   804,
     804,   805,   805,   806,   806,   807,   807,   808,   808,   808,
     808,   808,   809,   809,   810,   810,   811,   812,   812,   813,
     813,   814,   814,   814,   815,   815,   816,   816,   817,   817,
     818,   818,   819,   820,   821,   821,   822,   822,   822,   822,
     822,   822,   822,   822,   822,   822,   822,   822,   822,   822,
     823,   824,   825,   825,   825,   826,   826,   827,   827,   827,
     828,   828,   828,   829,   829,   829,   830,   830,   831,   831,
     832,   832,   833,   834,   834,   834,   834,   835,   835,   836,
     837,   837,   838,   838,   838,   838,   839,   839,   840,   840,
     841,   841,   841,   841,   842,   842,   843,   844,   844,   845,
     845,   846,   846,   847,   847,   848,   848,   849,   849,   849,
     849,   849,   849,   850,   850,   851,   852,   853,   853,   853,
     853,   854,   854,   855,   855,   855,   856,   856,   856,   856,
     856,   857,   857,   857,   858,   858,   859,   859,   860,   860,
     861,   861,   861,   861,   862,   863,   863,   864,   864,   864,
     864,   865,   865,   865,   865,   866,   866,   866,   866,   867,
     867,   868,   868,   868,   868,   868,   868,   868,   869,   869,
     870,   870,   870,   871,   871,   872,   872,   872,   872,   872,
     873,   873,   873,   873,   873,   874,   874,   875,   875,   876,
     876,   877,   878,   878,   878,   879,   879,   880,   880,   881,
     881,   882,   883,   883,   884,   884,   884,   885,   885,   885,
     885,   885,   885,   885,   885,   886,   886,   887,   887,   888,
     889,   889,   889,   889,   890,   890,   890,   890,   891,   891,
     891,   892,   892,   892,   893,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   894,   894,
     894,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   896,   896,   896,   896,   896,   896,   896,
     896,   896,   896,   896,   896,   896,   896,   896,   896,   896,
     896,   896,   896,   896,   896,   896,   896,   896,   896,   897,
     897,   897,   897,   897,   897,   897,   897,   897,   897,   897,
     897,   897,   897,   897,   897,   897,   897,   897,   897,   897,
     897,   897,   897,   897,   898,   898,   898,   898,   898,   898,
     898,   898,   898,   898,   898,   898,   898,   898,   898,   898,
     898,   898,   898,   898,   898,   898,   898,   898,   898,   898,
     898,   898,   898,   898,   898,   898,   898,   898,   898,   898,
     898,   898,   898,   898,   898,   898,   898,   898,   898,   898,
     898,   898,   898,   898,   898,   898,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   900,   900,   900,   900,   900,   900,   900,
     900,   900,   900,   900,   900,   900,   900,   900,   900,   900,
     900,   900,   900,   900,   900,   900,   900,   900,   900,   900,
     900,   900,   900,   900,   900,   900,   900,   900,   900,   900,
     900,   900,   900,   900,   900,   900,   900,   900,   900,   900,
     900,   900,   900,   900,   900,   900,   900,   900,   900,   900,
     900,   900,   900,   900,   900,   900,   900,   900,   900,   900,
     900,   900,   900,   900,   900,   900,   900,   900,   900,   900,
     900
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       4,     6,     4,     6,     4,     6,     4,     6,     1,     2,
       3,     2,     1,     3,     2,     3,     1,     3,     2,     5,
       3,     6,     4,     6,     6,     6,     5,     5,     6,     9,
       4,     5,     7,     6,     4,     8,     4,     2,     4,     3,
       6,     4,     2,     2,     2,     2,     1,     2,     0,     1,
       2,     2,     2,     1,     3,     4,     2,     1,     0,     2,
       3,     2,     3,     6,     6,     8,     6,     8,     6,     8,
       6,     8,     8,    10,     8,    10,     1,     0,     7,     1,
       4,     4,     7,     2,     1,     3,     4,     3,     0,     1,
       0,     2,     3,     5,     8,     5,     0,     5,     5,     7,
       2,     0,     1,     1,     1,     3,     2,     0,     1,     0,
       1,     3,     1,     3,     1,     2,     1,     3,     2,     8,
       5,     1,     0,     1,     3,     2,     4,     5,     5,     8,
       1,     0,     3,     9,    12,     3,     0,     4,     6,     1,
       2,     1,     1,     0,     1,     2,     2,     1,     2,     2,
       1,     2,     3,     2,     2,     2,     2,     3,     3,     3,
       1,     3,     1,     0,     1,     2,     2,     2,     2,     2,
       2,     2,     2,     1,     1,     0,     9,    12,    11,     0,
       2,     1,     1,     1,     1,     1,     1,     3,     0,     1,
       2,     1,     1,     2,     2,     3,     1,     1,     2,     2,
       1,     2,     3,     5,     3,     2,     5,     5,     2,     3,
       1,     1,     2,     2,     0,     4,     0,     3,     4,     4,
       0,     3,     2,     0,     3,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     3,     1,     2,     2,
       2,     2,     2,     2,     0,     3,     3,     3,     0,     1,
       2,     1,     2,     2,     2,     2,     4,     1,     3,     1,
       3,     1,     1,     1,     1,     3,     1,     2,     0,     1,
       2,     0,     1,     3,     0,     2,     0,     3,     3,     1,
       5,     3,     1,     3,     1,     2,     1,     4,     5,     5,
       6,     3,     7,     4,    11,     1,     3,     2,     2,     2,
       0,     3,     1,     1,     2,     2,     2,     2,     1,     0,
       1,     2,     6,     4,     6,     4,     6,     8,     4,     6,
       1,     1,     1,     1,     2,     1,     2,     1,     2,     1,
       1,     1,     3,     3,     3,     3,     2,     2,     1,     3,
       1,     1,     1,     1,     3,     1,     1,     0,     1,     1,
       1,     1,     3,     8,     7,     1,     1,     2,     3,     8,
      11,     9,     1,     1,     3,     0,     1,     3,     1,     0,
       1,     0,     1,     0,     1,     3,     1,     1,     1,     3,
       0,     2,     2,     0,     2,     0,     1,     0,     1,     1,
       1,     3,     3,     1,     1,     3,     3,     3,     3,     4,
       3,     2,     1,     1,     1,     1,     1,     3,     1,     1,
       3,     3,     1,     2,     4,     4,     2,     3,     5,     5,
       1,     1,    11,    11,     1,     2,     4,     4,     4,     2,
       2,     3,     1,     3,     6,     2,     0,     3,     3,     4,
       4,     4,     4,     3,     2,     1,     1,     0,     1,     1,
       0,     1,     5,     1,     0,     2,     2,     0,     1,     0,
       3,     5,     5,     1,     3,     4,     3,     1,     1,     0,
       2,     2,     0,     2,     2,     1,     1,     1,     0,     2,
       4,     5,     4,     2,     3,     2,     2,     2,     2,     1,
       2,     3,     0,     1,     0,     5,     1,     4,     6,     2,
       1,     0,     4,     0,     1,     1,     2,     2,     2,     1,
       1,     2,     2,     1,     1,     1,     1,     1,     1,     3,
       3,     3,     0,     1,     3,     1,     2,     1,     1,     1,
       1,     1,     2,     4,     4,     5,     1,     1,     2,     0,
       2,     0,     1,     3,     1,     0,     1,     2,     3,     2,
       4,     2,     3,     2,     0,     1,     2,     0,     4,     5,
       1,     2,     2,     0,     1,     3,     1,     2,     3,     3,
       3,     3,     3,     1,     4,     3,     4,     5,     4,     5,
       4,     5,     2,     4,     1,     1,     0,     1,     4,     5,
       4,     0,     2,     2,     2,     1,     1,     0,     4,     2,
       1,     2,     2,     4,     2,     6,     2,     1,     3,     4,
       0,     2,     0,     2,     0,     1,     3,     3,     2,     0,
       2,     4,     1,     1,     2,     3,     5,     6,     2,     3,
       5,     5,     3,     4,     0,     1,     1,     1,     1,     1,
       2,     4,     1,     1,     1,     1,     2,     3,     0,     1,
       1,     1,     1,     1,     2,     2,     2,     2,     2,     1,
       3,     0,     1,     1,     1,     1,     5,     2,     1,     1,
       1,     1,     4,     1,     2,     2,     1,     3,     3,     2,
       1,     0,     5,     2,     5,     2,     1,     3,     3,     0,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     3,     3,     3,     3,     3,     3,
       3,     0,     1,     3,     3,     5,     2,     2,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     2,     2,     3,     3,     2,     2,     3,     3,
       5,     4,     6,     3,     5,     4,     6,     4,     6,     5,
       7,     3,     2,     4,     3,     2,     1,     3,     3,     3,
       3,     3,     4,     3,     4,     3,     4,     5,     6,     6,
       7,     6,     7,     6,     7,     3,     4,     4,     6,     1,
       4,     1,     3,     2,     2,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     2,
       2,     5,     6,     6,     7,     1,     1,     2,     2,     2,
       4,     1,     2,     1,     2,     2,     4,     3,     6,     7,
       9,     7,     7,     4,     5,     1,     1,     1,     5,     1,
       1,     4,     1,     4,     1,     4,     1,     4,     1,     1,
       1,     1,     1,     1,     6,     6,     4,     4,     4,     4,
       6,     5,     5,     5,     4,     6,     4,     5,     0,     5,
       0,     1,     0,     2,     0,     1,     3,     3,     2,     2,
       0,     6,     1,     0,     3,     0,     2,     2,     0,     1,
       4,     2,     2,     2,     2,     2,     4,     3,     1,     5,
       3,     1,     3,     1,     2,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     4,     1,     4,     1,     4,     1,
       2,     1,     2,     1,     2,     1,     3,     1,     3,     1,
       2,     1,     0,     1,     3,     1,     3,     3,     1,     3,
       3,     0,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     4,     3,     2,     3,     0,     3,     3,     2,
       2,     1,     0,     2,     2,     3,     2,     1,     1,     3,
       5,     1,     2,     4,     2,     0,     1,     0,     1,     2,
       2,     3,     5,     1,     0,     1,     2,     0,     2,     1,
       0,     1,     0,     1,     3,     1,     2,     3,     2,     1,
       3,     5,     4,     2,     1,     0,     3,     1,     3,     1,
       2,     4,     2,     0,     1,     3,     1,     2,     1,     3,
       1,     2,     1,     1,     1,     2,     1,     1,     2,     1,
       1,     2,     7,     2,     5,     3,     3,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     2,     2,     3,
       3,     0,     1,     1,     1,     1,     1,     1,     1,     5,
       3,     0,     1,     1,     1,     1,     4,     7,     2,     0,
       1,     1,     1,     1,    13,    16,     1,     2,     0,     1,
       0,     1,     0,     2,     0,     1,     0,     6,     8,     6,
       8,     6,     8,     2,     1,     4,     3,     2,     4,     3,
       5,     1,     0,     1,     1,     0,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     3,     1,     1,
       1,     1,     1,     1,     2,     1,     1,     2,     3,     3,
       3,     1,     3,     3,     2,     3,     3,     3,     3,     1,
       1,     1,     1,     3,     5,     1,     1,     1,     1,     3,
       2,     2,     3,     1,     1,     4,     5,     5,     4,     6,
       1,     1,     1,     1,     1,     1,     0,     1,     3,     1,
       0,     7,     1,     2,     3,     2,     0,     2,     0,     2,
       4,     2,     1,     1,     1,     2,     3,     2,     2,     2,
       2,     3,     4,     2,     1,     1,     1,     1,     3,     2,
       9,    11,    12,    14,     3,     4,     4,     0,     7,    10,
       9,     2,     3,     0,     4,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1
};

/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
     130,   215,     0,  1179,  1178,   215,     0,  1154,   215,   427,
     349,     0,  1256,     0,   215,     0,   130,     0,     0,     0,
       0,     0,     0,     0,     0,   215,   494,     0,  1255,   215,
       0,     0,  1226,     0,     0,     0,     0,     0,     2,     4,
       7,    18,    30,    26,     0,    17,    28,    15,    21,     6,
      32,    16,    20,    13,    33,    11,    31,   461,   448,   499,
     460,   129,   600,   464,    29,    14,    25,     5,    10,    23,
      24,    22,  1162,    36,    27,    34,    19,     8,    35,    37,
    1254,     9,    38,    12,   214,   213,   207,     0,     0,     0,
       0,     0,   208,  1092,  1275,  1276,  1277,  1278,  1279,  1280,
    1281,  1282,  1283,  1284,  1285,  1286,  1287,  1288,  1289,  1290,
    1633,  1291,  1292,  1293,  1581,  1582,  1634,  1583,  1584,  1294,
    1295,  1296,  1297,  1298,  1299,  1300,  1301,  1585,  1586,  1302,
    1303,  1304,  1305,  1306,  1587,  1635,  1307,  1308,  1309,  1310,
    1311,  1312,  1636,  1313,  1314,  1315,  1316,  1317,  1318,  1319,
    1320,  1321,  1637,  1322,  1323,  1324,  1638,  1325,  1326,  1327,
    1328,  1329,  1330,  1331,  1588,  1589,  1332,  1333,  1334,  1335,
    1336,  1337,  1338,  1339,  1340,  1341,  1342,  1343,  1344,  1345,
    1346,  1347,  1348,  1349,  1350,  1351,  1352,  1353,  1354,  1355,
    1356,  1357,  1358,  1359,  1590,  1360,  1361,  1362,  1363,  1364,
    1591,  1365,  1366,  1367,  1592,  1368,  1369,  1370,  1639,  1640,
    1371,  1372,  1373,  1641,  1374,  1375,  1593,  1594,  1376,  1377,
    1378,  1379,  1380,  1381,  1382,  1383,  1642,  1384,  1385,  1386,
    1387,  1388,  1389,  1390,  1391,  1392,  1393,  1394,  1643,  1595,
    1395,  1396,  1397,  1398,  1399,  1596,  1597,  1598,  1400,  1644,
    1645,  1401,  1646,  1402,  1403,  1404,  1405,  1406,  1407,  1408,
    1647,  1409,  1648,  1410,  1411,  1412,  1413,  1414,  1415,  1416,
    1417,  1599,  1418,  1419,  1420,  1421,  1422,  1423,  1424,  1425,
    1426,  1427,  1428,  1429,  1430,  1431,  1432,  1433,  1434,  1435,
    1600,  1650,  1601,  1436,  1437,  1438,  1602,  1439,  1440,  1651,
    1441,  1603,  1442,  1604,  1443,  1444,  1445,  1446,  1447,  1448,
    1449,  1450,  1451,  1605,  1652,  1452,  1653,  1606,  1453,  1454,
    1455,  1456,  1457,  1458,  1459,  1460,  1461,  1462,  1463,  1464,
    1607,  1465,  1466,  1608,  1467,  1468,  1469,  1470,  1471,  1472,
    1473,  1474,  1475,  1476,  1477,  1478,  1609,  1479,  1480,  1481,
    1482,  1483,  1484,  1485,  1486,  1487,  1488,  1489,  1490,  1491,
    1492,  1493,  1494,  1495,  1496,  1497,  1654,  1498,  1499,  1500,
    1610,  1501,  1502,  1503,  1504,  1505,  1506,  1507,  1508,  1509,
    1510,  1511,  1512,  1513,  1514,  1515,  1516,  1517,  1611,  1518,
    1519,  1520,  1655,  1521,  1522,  1612,  1523,  1524,  1525,  1526,
    1527,  1528,  1529,  1530,  1531,  1532,  1533,  1534,  1613,  1535,
    1614,  1536,  1537,  1538,  1539,  1657,  1540,  1541,  1542,  1543,
    1544,  1615,  1616,  1545,  1546,  1617,  1547,  1618,  1548,  1549,
    1619,  1550,  1551,  1552,  1553,  1554,  1555,  1556,  1557,  1558,
    1559,  1560,  1561,  1562,  1563,  1564,  1620,  1621,  1565,  1658,
    1566,  1567,  1568,  1569,  1570,  1571,  1572,  1573,  1574,  1575,
    1576,  1622,  1623,  1624,  1625,  1626,  1627,  1628,  1629,  1630,
    1631,  1632,  1577,  1578,  1579,  1580,  1259,     0,     0,  1074,
    1093,  1094,  1102,   210,   426,   130,     0,     0,     0,     0,
       0,   343,   342,     0,  1145,   348,     0,     0,  1092,   101,
    1599,  1467,  1613,    99,  1072,  1093,     0,   369,   370,     0,
     378,     0,   362,   367,   363,     0,   388,   380,   389,   381,
     361,   382,   371,   360,     0,   390,     0,   365,     0,     0,
       0,   211,   176,   349,   130,     0,  1167,  1168,  1166,  1157,
    1162,  1169,  1170,     0,  1153,     0,     0,  1091,  1213,  1214,
    1211,  1210,   165,  1121,  1243,  1615,  1545,  1257,  1244,  1241,
    1242,   212,   493,   491,     0,  1042,  1374,  1412,  1505,  1516,
    1615,  1187,  1191,     0,   209,  1620,  1248,     0,  1249,  1096,
       0,   465,   640,  1095,  1066,  1225,     0,  1230,     0,  1481,
     469,   472,  1111,   470,   461,     0,     1,   130,     0,     0,
       0,   490,   490,     0,   490,     0,   453,   461,   456,   460,
     601,  1161,  1239,  1253,  1615,  1545,  1247,  1250,  1382,     0,
       0,  1382,     0,  1382,     0,  1382,     0,     0,  1034,     0,
    1035,  1075,  1123,  1124,  1122,     0,  1125,   314,   347,   346,
     345,   344,   349,  1382,  1129,  1106,     0,   395,   396,     0,
       0,     0,     0,     0,  1140,   102,   100,   376,   377,     0,
     368,   364,   366,     0,  1103,  1659,   692,  1660,   721,   699,
     721,   721,  1661,  1662,  1663,  1664,   688,   688,  1347,   701,
    1665,  1666,  1667,  1382,  1668,  1669,   689,   690,   726,  1670,
    1671,  1672,  1673,  1674,     0,     0,  1675,   721,  1676,   688,
    1677,  1678,   693,  1679,   662,     0,  1680,   691,   663,  1681,
     729,   729,  1682,   716,  1683,   387,     0,   391,   674,   675,
     676,   677,   702,   703,   678,   708,   709,   713,   679,   761,
     688,  1104,  1105,  1382,   387,   383,  1382,   387,  1068,  1382,
       0,     0,   172,     0,     0,  1159,  1171,  1684,  1685,  1686,
    1687,  1689,  1688,  1690,  1691,  1692,  1693,  1694,  1695,  1696,
    1697,  1698,  1701,  1699,  1700,  1702,  1703,  1704,  1705,  1706,
    1707,  1708,  1709,  1710,  1711,  1712,  1713,  1714,  1715,  1716,
    1717,  1718,  1719,  1720,  1721,  1722,  1723,  1724,  1725,  1726,
    1727,  1728,  1729,  1730,  1731,  1732,  1733,  1734,  1735,  1185,
       0,  1186,  1176,  1165,  1172,  1173,   130,   425,  1212,  1156,
       0,     0,     0,     0,  1245,     0,     0,     0,  1077,  1079,
    1080,   963,  1090,  1037,     0,  1582,  1583,  1584,  1027,     0,
    1585,  1586,  1587,  1635,   892,   879,   888,   893,   880,   882,
     889,  1588,  1589,   829,  1590,  1591,  1088,  1592,  1593,  1594,
    1596,  1597,  1598,   884,   886,  1600,  1601,     0,  1089,  1603,
    1604,  1448,  1606,  1607,  1609,  1610,   890,  1612,  1614,  1615,
    1616,  1617,  1618,  1087,  1619,   891,  1621,     0,     0,     0,
    1055,   982,     0,     0,     0,  1037,   863,     0,     0,   682,
     683,   704,   705,   684,   710,   711,   685,     0,  1049,   762,
     908,  1037,   875,   938,   806,     0,   861,   855,  1045,   476,
    1043,     0,   856,  1076,  1037,  1028,   476,  1041,  1190,  1188,
    1194,  1189,     0,     0,     0,     0,     0,   642,   641,  1067,
    1224,  1222,  1223,  1221,  1220,  1227,     0,  1229,  1162,   977,
     979,     0,  1028,   471,     0,     0,     0,   451,   450,     3,
       0,     0,  1232,     0,   488,   489,     0,     0,     0,     0,
       0,     0,     0,     0,   585,   515,   516,   518,   582,   586,
     594,     0,   457,     0,  1111,  1251,     0,     0,     0,   117,
     117,     0,     0,     0,     0,     0,    93,    42,    86,     0,
       0,     0,     0,   190,   203,     0,     0,     0,     0,     0,
     200,     0,     0,   183,    44,   177,   179,     0,   117,     0,
      40,     0,     0,     0,    46,  1092,     0,  1633,  1634,  1635,
    1636,  1637,   893,     0,  1639,  1640,  1641,  1642,  1643,  1644,
    1645,  1646,  1647,  1648,  1599,  1650,  1651,  1652,  1653,  1654,
    1655,  1613,  1657,  1619,     0,  1658,     0,   867,   985,   499,
     983,  1112,     0,  1093,  1099,  1033,     0,  1113,  1763,  1764,
    1765,  1766,  1767,  1768,  1769,  1770,  1771,  1772,  1773,  1774,
    1775,  1776,  1777,  1778,  1779,  1780,  1781,  1782,  1783,  1784,
    1785,  1786,  1787,  1788,  1789,  1790,  1791,  1792,  1793,  1794,
    1795,  1796,  1797,  1798,  1799,  1800,  1801,  1802,  1803,  1804,
    1805,  1806,  1807,  1808,  1809,  1810,  1811,  1812,  1813,  1814,
    1815,  1816,  1817,  1818,  1819,  1820,  1821,  1822,  1823,  1824,
    1825,  1826,  1827,  1828,  1829,  1830,  1831,  1832,  1833,  1834,
    1835,  1723,  1836,  1837,  1838,  1839,  1840,  1030,  1073,  1115,
    1114,  1116,  1036,     0,     0,   423,     0,     0,  1126,     0,
    1107,     0,     0,  1382,   171,  1382,   314,     0,   314,     0,
    1139,  1142,   379,   375,   373,   372,   374,   720,   707,   715,
     714,     0,   697,   696,   695,     0,   694,     0,     0,   721,
     721,   719,   698,   674,     0,     0,     0,   725,     0,   723,
     385,   386,     0,   358,     0,   668,   664,     0,   734,   735,
     736,   737,   744,   745,   742,   743,   738,   739,   732,   733,
     740,   741,   730,   731,     0,   746,   747,   748,   749,   750,
     751,   752,   753,   680,   686,     0,     0,   353,     0,     0,
     355,     0,     0,     0,   349,     0,   130,     0,   184,  1181,
    1182,  1180,     0,     0,  1164,   187,   204,  1175,  1184,  1174,
    1183,  1163,  1158,     0,  1155,   414,  1200,  1199,  1208,   166,
       0,   988,     0,   130,  1246,  1258,     0,   859,   982,  1026,
       0,     0,     0,     0,     0,     0,   865,   991,     0,     0,
     786,     0,     0,     0,  1006,     0,  1012,     0,     0,     0,
     787,   766,   767,     0,  1054,  1063,   981,     0,   863,   977,
       0,   941,   943,     0,  1095,     0,   857,   858,   864,     0,
    1083,     0,   761,   761,  1048,   963,     0,     0,   956,   960,
     961,   962,     0,     0,     0,  1040,     0,   971,   973,     0,
       0,   802,   969,     0,   805,     0,     0,     0,     0,   957,
     958,   959,   950,   951,   952,   953,   954,   955,   967,   949,
     783,     0,     0,   910,   862,     0,   782,  1046,     0,   603,
       0,  1081,  1078,     0,  1029,   603,  1202,  1206,  1207,  1205,
       0,  1201,  1193,  1192,  1197,  1195,  1198,  1196,     0,  1218,
       0,  1215,   980,   598,   473,     0,     0,  1238,     0,   124,
       0,  1233,     0,   468,   467,   509,   509,   500,   503,   509,
     466,   557,   558,     0,     0,     0,     0,   591,   589,  1077,
    1090,   545,   519,   544,     0,     0,   523,     0,   549,   762,
     584,   455,   513,   514,   517,   454,     0,   587,     0,   597,
     585,   518,     0,  1240,  1252,     0,     0,     0,     0,     0,
    1382,     0,     0,    77,    58,   265,     0,   116,     0,     0,
       0,     0,     0,     0,     0,    85,    82,    83,    84,     0,
       0,     0,     0,   188,   189,   202,     0,   193,   194,   191,
     195,   196,     0,     0,   181,   182,     0,     0,     0,     0,
     180,     0,     0,     0,     0,     0,     0,     0,     0,   499,
     499,   499,   873,     0,   497,   498,     0,     0,  1031,  1034,
     413,   322,     0,   312,     0,     0,     0,     0,     0,     0,
     349,  1132,  1130,  1128,  1131,  1133,  1108,     0,     0,     0,
     160,     0,     0,   168,   170,     0,   311,   284,     0,  1144,
       0,     0,  1382,  1141,   301,     0,     0,     0,     0,   387,
       0,   718,   717,   669,   665,     0,     0,     0,     0,   392,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     387,   384,   387,  1069,     0,   387,   175,     0,  1382,   314,
       0,  1160,  1177,   185,   205,   186,   206,   446,     0,   420,
     428,   433,   411,     0,   411,     0,   430,   434,   411,   429,
     411,   424,     0,   167,     0,  1120,     0,  1119,     0,  1038,
       0,     0,  1025,  1021,     0,     0,     0,     0,     0,   992,
     993,   994,   995,   996,   997,   998,   999,  1000,     0,     0,
    1001,     0,     0,     0,   948,   956,   960,   961,   962,   957,
     958,   959,   950,   951,   952,   953,   954,   955,   975,     0,
       0,     0,     0,     0,     0,     0,     0,   831,     0,     0,
     937,     0,   977,  1011,     0,     0,     0,     0,     0,     0,
     977,  1017,     0,     0,     0,  1053,     0,  1050,   808,  1037,
       0,   944,   807,     0,     0,     0,  1085,  1086,   763,   809,
     774,   778,   779,   780,   784,  1118,  1117,  1047,     0,  1039,
       0,     0,   764,   788,   793,     0,  1018,   825,     0,   813,
       0,   801,     0,   811,   815,   789,   804,     0,   785,     0,
    1040,   972,   974,     0,   970,     0,   775,   776,   777,   768,
     769,   770,   771,   772,   773,   781,   947,   945,   946,     0,
       0,     0,   912,     0,     0,   810,  1044,  1374,  1412,     0,
     487,   487,   487,   475,   485,     0,   654,   499,  1055,   654,
       0,   761,   643,  1111,  1228,  1216,  1217,   978,  1110,   130,
       0,  1236,     0,     0,     0,   136,   119,     0,  1234,     0,
     152,   154,   603,     0,  1037,   507,   508,   512,   512,     0,
       0,   512,  1610,  1501,     0,     0,     0,     0,   550,   592,
       0,   583,   547,   548,     0,   546,  1077,   551,  1076,   552,
     555,   556,   524,   593,  1064,   595,     0,   588,   459,   458,
     599,     0,    43,     0,  1382,    60,     0,     0,     0,     0,
       0,     0,   219,   256,   219,    98,  1382,   387,  1382,   387,
    1279,  1348,  1517,     0,    56,    89,     0,   289,   110,     0,
     274,   319,    79,    94,   103,     0,     0,    45,   178,   192,
     197,   106,   201,   198,  1149,   199,   117,     0,    41,     0,
     104,     0,  1147,     0,     0,    47,   108,  1151,   497,   497,
     497,     0,   984,     0,     0,     0,   986,   987,  1033,     0,
     412,     0,   313,     0,   422,   402,   403,   413,     0,   314,
       0,   314,  1129,     0,     0,  1109,   162,     0,     0,     0,
       0,   304,   302,   335,     0,   309,   303,   312,     0,     0,
     260,     0,  1273,     0,     0,   397,     0,     0,     0,     0,
       0,   687,   700,   359,   674,     0,   728,   727,   729,   729,
     674,     0,   660,     0,   672,     0,   712,   681,   754,   755,
     756,   757,   758,   759,   760,   352,   354,     0,   356,     0,
       0,     0,   415,     0,   418,     0,   417,   421,   416,   410,
       0,   441,     0,     0,     0,     0,     0,     0,  1209,   989,
     492,   830,     0,     0,  1022,     0,     0,   906,     0,   881,
     883,   896,     0,   885,   887,     0,   964,     0,     0,     0,
     897,   833,   834,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   850,   849,   898,   936,     0,     0,  1009,  1010,     0,
     899,     0,     0,  1016,     0,     0,     0,   904,     0,  1070,
       0,     0,     0,  1062,   860,   978,   942,   940,   866,   761,
       0,     0,     0,     0,     0,     0,     0,   814,   803,     0,
     812,   816,     0,     0,     0,   797,     0,     0,   795,   826,
     791,     0,     0,   827,     0,     0,   911,   920,   487,   487,
     487,   487,   484,   486,     0,     0,     0,     0,  1501,     0,
     626,   606,   602,   604,   613,   626,   631,   876,   652,   877,
    1095,     0,   562,   497,  1063,   562,     0,  1203,  1219,     0,
    1237,     0,   141,   123,   143,   142,     0,   150,     0,  1037,
       0,   141,   125,     0,   144,   155,  1236,     0,   158,     0,
     501,   502,   504,     0,   965,   512,   506,   554,   553,     0,
     522,   590,   520,     0,   596,     0,     0,     0,   264,     0,
       0,     0,   219,     0,   324,     0,   331,     0,   316,    78,
       0,     0,     0,    52,    97,    70,    62,    48,    76,     0,
       0,    81,     0,    74,    91,    92,    90,    95,     0,   248,
     229,   261,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   499,   495,
     496,   868,  1032,   444,   445,   183,   443,   323,     0,     0,
     311,     0,  1144,  1127,   349,     0,     0,   161,   163,     0,
     171,   314,     0,   288,   284,   310,   282,   281,   283,     0,
    1274,   176,     0,  1268,  1143,     0,   398,     0,   394,     0,
    1138,   706,   671,     0,   724,   722,   670,     0,   666,   673,
     387,     0,   447,     0,   406,   442,   431,   436,     0,   440,
     438,   437,   432,   435,     0,  1024,  1020,     0,   878,   990,
       0,   976,  1004,  1003,   832,   841,   845,   846,   847,  1005,
       0,     0,     0,   842,   843,   844,   835,   836,   837,   838,
     839,   840,   848,  1014,  1013,  1007,  1008,     0,   901,   902,
     903,  1015,     0,  1071,  1052,   977,  1057,  1059,     0,     0,
     939,  1084,   765,     0,     0,   794,  1019,   817,     0,     0,
       0,   790,   964,     0,     0,     0,     0,     0,   799,     0,
       0,     0,     0,   874,     0,     0,     0,     0,   478,   477,
     483,   626,   631,     0,   461,     0,   613,     0,   625,   541,
     624,   607,     0,   637,   635,     0,   637,     0,   637,     0,
     541,     0,   627,   541,   624,     0,   644,  1067,   653,     0,
     579,     0,  1051,   579,     0,   474,  1235,     0,  1231,     0,
       0,     0,   131,   128,   118,     0,     0,   153,   141,   132,
     510,   511,     0,   505,   521,  1065,   111,   219,     0,     0,
      59,     0,   333,   276,   325,   308,   291,     0,     0,     0,
     220,     0,   296,     0,    51,    71,     0,    67,     0,    96,
       0,     0,     0,     0,     0,    54,    66,     0,    49,     0,
     387,   387,    57,   275,  1103,  1659,  1660,  1661,  1662,  1663,
    1664,  1665,  1666,  1667,  1668,  1669,  1670,  1671,  1672,  1673,
    1674,  1752,  1675,   226,  1676,  1448,  1677,  1678,  1679,     0,
    1680,   663,  1681,  1682,  1683,   950,   951,   224,   318,   221,
     326,   223,   225,     0,  1104,   222,   321,   107,  1150,     0,
     105,     0,  1148,   114,   112,   109,  1152,   871,   872,   869,
     497,   425,   405,     0,     0,  1273,     0,     0,  1382,     0,
     159,     0,  1144,   169,   311,     0,   341,   260,   336,     0,
    1273,  1271,     0,  1267,   393,     0,     0,     0,   667,   661,
     357,     0,   419,     0,   439,  1023,   894,   905,  1002,     0,
       0,     0,     0,   900,   895,  1060,  1061,  1056,   823,   821,
     818,     0,   819,   798,     0,     0,   796,   792,     0,   828,
     907,     0,   923,   918,   919,   482,   481,   480,   479,   612,
     610,     0,   615,  1095,   622,   534,   540,   611,     0,   605,
       0,   636,   632,     0,   633,     0,     0,   634,     0,   608,
       0,  1095,   609,     0,   651,     0,     0,   914,   868,   914,
    1204,   140,   120,     0,   121,   151,     0,     0,     0,     0,
     145,   399,     0,   329,    61,     0,   308,     0,   219,   293,
     292,   295,   290,   294,   297,     0,     0,     0,     0,     0,
     277,     0,     0,     0,   240,     0,     0,   308,     0,   315,
     236,   237,   350,     0,     0,     0,    63,    53,    50,    55,
      64,     0,     0,    65,    68,   659,    80,    73,  1752,  1759,
       0,     0,     0,     0,     0,     0,   401,   408,   183,     0,
       0,   284,  1270,     0,     0,     0,   311,   164,     0,     0,
       0,  1273,     0,     0,   216,     0,   257,     0,   173,  1272,
       0,  1260,     0,  1136,  1137,     0,     0,   407,   851,     0,
       0,     0,  1058,   820,   824,   822,   800,   909,   925,   922,
     647,     0,   650,   614,     0,     0,   529,   536,     0,   539,
     533,     0,   616,     0,     0,   618,   620,     0,     0,     0,
     655,     0,     0,     0,  1072,   560,  1323,  1593,  1500,   561,
       0,   565,   559,   563,   568,   570,   569,   571,   567,   578,
       0,   581,  1082,   581,     0,     0,     0,     0,   156,     0,
     147,   147,     0,   133,   966,     0,   219,     0,   307,   330,
     255,     0,     0,   238,     0,   245,     0,   279,   280,   278,
     239,   308,   314,   241,     0,   351,     0,    72,     0,    88,
       0,     0,   320,   115,   113,   870,   425,     0,  1144,   260,
    1267,     0,     0,     0,   284,   176,  1269,   273,   266,   267,
     268,   269,   270,   271,   272,   287,   286,   258,   259,     0,
       0,     0,  1138,     0,   852,     0,   853,     0,   499,   652,
       0,     0,   646,     0,   527,   525,   528,   530,   526,     0,
       0,   623,   639,     0,   619,   617,   628,     0,   659,     0,
     630,     0,     0,     0,   572,   566,   913,   915,     0,     0,
     532,   532,     0,   127,     0,   654,     0,     0,   149,   149,
     135,     0,   314,   332,     0,   299,   306,   298,     0,     0,
     235,     0,   242,   340,   244,   228,   658,     0,    75,     0,
     327,   400,   404,     0,   218,  1261,   311,     0,  1267,   260,
    1273,     0,  1264,     0,     0,  1144,   854,     0,   928,   645,
     648,     0,   621,     0,     0,     0,   656,   657,   629,     0,
       0,     0,   564,     0,     0,   580,     0,   463,   462,   122,
     147,   126,   157,   146,   509,   148,   509,     0,   340,   285,
       0,     0,   263,   228,     0,   254,     0,    69,    87,   328,
       0,   311,  1262,   217,   174,  1265,  1266,     0,   654,   924,
       0,     0,     0,     0,   537,     0,   543,   638,   574,     0,
     573,   916,   917,   534,   149,   512,   512,   654,   254,   300,
     305,     0,   243,   246,   337,   338,   339,     0,   250,   247,
     251,     0,  1267,     0,  1134,  1581,  1324,  1552,     0,   926,
     929,   927,   921,   649,     0,     0,   535,   575,   531,   509,
     138,   137,   134,   219,   262,     0,     0,     0,   252,     0,
     253,   227,  1263,  1144,     0,   933,   932,   931,   935,   934,
     538,     0,   512,   334,   232,     0,   231,     0,   317,   249,
     654,     0,     0,   139,   230,   234,   233,  1135,   930,   542
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    37,    38,    39,    40,  2155,  2156,  2157,  1833,   986,
    2868,  1834,   987,   988,  2159,    41,    42,  1449,   536,  1765,
    1388,  2588,    44,  2107,  1770,  2111,  2738,  2368,  2106,  2113,
    2848,  2914,  2108,  1771,  1772,  2739,  1773,    45,  2206,  2207,
      46,    47,  1523,    48,   742,    49,  1524,  1476,  1256,  1006,
    1466,  1245,    50,    86,    51,  2146,  2458,  2927,  2169,  3018,
    2619,  2620,  1835,  2968,  2969,  2148,  2220,  1458,  2962,  1901,
    2795,  1839,  1822,  2621,  1910,  2748,  2496,  1836,  2400,  1902,
    2605,  2854,  1533,  1903,  2855,  2598,  1904,  1501,  1527,  2402,
    2970,  1840,  1502,  2145,  2459,  1445,  1905,  2925,  1906,   496,
    2624,    52,   528,   529,   734,  1193,   530,   715,    53,   653,
    1531,   537,    55,  1887,  2648,  2243,  2649,  1960,  1881,  1254,
    1957,  1577,  1505,  1255,   486,  1591,  2244,  2195,  1578,   538,
     886,    58,    59,    60,   577,   590,   591,  1359,  1743,  2074,
     956,   564,   565,  1875,   605,  1495,  1397,  1398,  1777,  2120,
    1424,  1425,   965,   966,  2697,  2907,  2698,  2699,  2556,  2557,
    2986,  1412,  1416,  1417,  1797,  1787,  1403,  2360,  2721,  2722,
    2723,  2724,  2725,  2726,  2727,   887,  2577,  2840,  1420,  1421,
     968,   969,   970,  1429,  1807,    62,    63,  1746,  2081,  2082,
    2083,  2084,  2338,  2339,  2353,  2349,  2562,  2705,  2085,  2086,
    2690,  2691,  2812,  2356,  2092,  2709,  2710,  2769,  1550,   716,
    1261,  1196,   718,   888,   719,  1172,   889,  1176,   721,   890,
     891,   892,   724,   893,   894,   895,   727,  1168,   896,   897,
    1187,  1215,  1216,  1217,  1218,  1219,  1220,  1221,  1222,  1223,
     939,  1646,   899,   900,   901,  2088,   902,  1353,  1732,  2067,
    2731,  2836,  2837,  2323,  2543,  2688,  2808,  2942,  2979,  2980,
     903,   904,  1301,  1302,  1303,  1729,  1348,  1349,   905,  2461,
    1351,  1639,   940,  1661,  1297,  1049,  1050,  1262,  1618,  1619,
    1642,  1989,  1649,  1654,  2017,  2018,  1662,  1697,   906,  1602,
    1603,  1975,  1270,   907,   630,  1056,   631,  1267,  1691,   916,
     908,   909,   910,  1294,  1295,  2033,  2297,  2298,  1667,  1803,
     582,  2029,  2701,   738,  1137,   911,   912,   913,   914,   942,
     584,  1051,   479,   730,  2915,  1150,   946,  1052,  1837,  1687,
      64,   813,   635,    65,  1148,  1513,    66,  2674,  2507,  1161,
    1535,  1914,   497,    67,    68,    69,    70,    71,   612,  1248,
     539,  1249,  1250,   800,    72,  1257,   802,   803,    73,   571,
     572,  1258,  1372,  1259,    74,   550,    75,   935,   587,   936,
     938,   541,   953,  2102,  1761,    77,    78,   558,   559,    79,
      80,   573,    81,    82,  2671,   542,  2223,  1890,   505,   481,
     482,   732,  1140,  1054,  1141
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -2699
static const int yypact[] =
{
    5077,   -99,     0, -2699, -2699,   -99, 35312, -2699,   -99,    54,
    1429, 40082, -2699,  4984,   -99, 46760,   455,   203,   230,   215,
   40559, 40559, 46760, 46760, 41036,   -99,   234, 47237, -2699,   -99,
   24360, 37697,   -53,  -205, 47714, 46760,   641,   539,    58, -2699,
   -2699, -2699, -2699, -2699,    77, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699,   136, -2699,    50,
     137,  -110,    -1, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699,   229, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   23883, -2699, -2699, -2699, -2699, -2699, -2699, 41513, 46760, 41990,
   38174, 42467, -2699,   134, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699,   149, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,   155, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699,   197,   522, -2699,
     156, -2699, -2699, -2699, -2699,   641, 42944,   368,   477,   370,
   48191, -2699, -2699, 46760, -2699, -2699,   671,   541, -2699, -2699,
   -2699, 43421, -2699, -2699, -2699, -2699,   508, -2699, -2699,   379,
   -2699,    60, -2699, -2699,   386,   363, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699,   485, -2699, 53438, -2699, 48668, 49145,
   49622, -2699,   397,   346,    89, 23406, -2699, -2699, -2699, -2699,
     229, -2699, -2699,   912, -2699, 40559,   912, -2699, -2699, -2699,
   -2699, -2699,   385,   497, -2699,   542,   815, -2699, -2699, -2699,
     549, -2699, -2699,   768, 10532, 10532, 50099, 50099,   912, 50099,
     582, -2699, -2699,   328, -2699,  -205, -2699,  -110,   549, -2699,
   24838, -2699,   583,   522, -2699, -2699,   189,   911, 14046, 46760,
     590, -2699,   610,   590,   615,   658, -2699,  5077,   994,   934,
   37697,   267,   267,  1126,   267,   923,   959, -2699,  1209, -2699,
     709, -2699, 42944, -2699,   738,  1004, -2699,   549,  1100,   432,
     918,  1112,  4171,  1117,   721,  1123,   794,  7018, 14046, 33881,
   -2699,   522, -2699, -2699, -2699,   798, -2699,   795, -2699, -2699,
   -2699, -2699,   499,  1029, -2699,   847,  1282, -2699, -2699,   902,
   43898, 44375, 42944, 42944,  1277, -2699, -2699, -2699, -2699,   908,
   -2699, -2699, -2699,   109, -2699, -2699, -2699, -2699,   931, -2699,
     931,   931, -2699, -2699, -2699, -2699,   879,   879,  1066,   891,
   -2699, -2699, -2699,  1242, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699,   916,   877, -2699,   931, -2699,   879,
   -2699, -2699, -2699, -2699, -2699, 54824, -2699, -2699, -2699, -2699,
    -152,   537, -2699, -2699, -2699,    51,   926, -2699,  1362, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699,   936, -2699,  3462,
     879, -2699, -2699,  1266,    55, -2699,  1286,   187, -2699,  1290,
    1183, 14046, -2699,  1137,  1080, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699,  -205, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
     595, -2699, -2699, 31457, -2699, -2699,    89,   998, -2699, -2699,
   31457, 14548, 53900,  1467, -2699,  1256, 46760,  1036, -2699, -2699,
   -2699, -2699, -2699, -2699,  1016,  1503,   160,  1543, 14046,  1056,
     160,   160,  1060,  1397, -2699, -2699, -2699,   157,  1068,  1089,
   -2699,   158,   158, -2699,  1091,  1095, -2699,   159,  1097,  1116,
    1603,  1609,   143,  1119,  1120,   877,   160, 14046, -2699,  1124,
     158,  1125,  1130,  1131,  1614,  1133, -2699,  1618,  1134,   104,
     117,  1138,  1145, -2699,  1148, -2699,   164, 14046, 14046, 14046,
    1498, 14046,  8022, 42944,  1638, -2699,   522,  1158,   912, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699,   148,  5567, -2699,
    1196, -2699, -2699, -2699,  1359, 14046, -2699, -2699,  1157,  1443,
   -2699,   165, -2699, -2699, -2699,   532,  1443, -2699, -2699, -2699,
   -2699, -2699,   223,  1563, 30503, 30980, 42944, -2699, -2699,   522,
   -2699, -2699, -2699, -2699, -2699, -2699,   616, -2699,   229, 32645,
    1162,  1168,   522,   590, 46760, 46760,  1631, -2699, -2699, -2699,
   37697, 42944, 50576,  1294, -2699, -2699,  -110,  -110,  9528,  -110,
     125,   585, 11034, 15050,  1505,  1388,   141,   612,  1511, -2699,
    1391,   923,   959, 14046,   610, -2699,  1445, 42944, 35789,   821,
     835,  1182,  1264,  1184,   451,  1594, -2699,  1187, -2699,  1273,
   42944, 54824,   182, -2699,  1628,   182,   182,   653,  1650,  1298,
     185,  1447,   -24,  -151,  1187,  1775, -2699, 37697,   128,     9,
    1187, 42944,  1299,   519,  1187,   106, 14548,   817,   913,   736,
     951,   992,   110, 14548,  1000,  1014,  1104,  1118,  1127,  1389,
    1417,  1442,  1451,  1489,   130,  1501,  1507,  1513,  1541,  1547,
    1553,   133,  1555,   168, 14548,  1558,  1219, -2699, 32645,   -52,
   -2699, -2699,  1561,   145, -2699, 29073,  1212, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699,  1308, 46760,  1271,   -64,  1575,  1640, 33881,
    1234,  2217, 42944,  1464,  1775,  1471,  1247,  1708,   795,  1251,
   -2699, 51053, -2699, -2699, -2699, -2699, -2699, -2699,  1253, -2699,
   -2699, 14046, -2699, -2699, -2699,  1742, -2699, 53900, 53900,   931,
     931, -2699, -2699,  1716,  1340,  1344,  1742, -2699,  1742, -2699,
   -2699, -2699, 53900, -2699, 46760,  1270,  1276,  1742, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699,  1742,  1343, -2699,  1345,  1346,  1347,
   -2699, -2699, -2699, -2699, -2699, 46760, 46760, -2699, 46760, 46760,
   -2699, 46760, 46760,  1279,   499, 44852,    89, 38651, -2699, -2699,
   -2699, -2699,   830,   920, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, 33881, -2699,  1552, -2699, -2699, -2699,  1265,
     636, -2699,   645,   641, -2699, -2699, 14046,   522, 14046, 32645,
    1313, 14046, 14046,  1278,  1742,  1742, -2699,  2202,  1742,  1742,
    5073, 14046, 27705, 14046, 18564, 11536, 14046, 14046,  8524, 14046,
    5073,  1767,  1767, 25792, -2699,  1444, -2699,  1296,  1639,  6506,
    1292, -2699,  1293,  1295, -2699,  1291, -2699,   522,   522, 14046,
   -2699, 14046,  4510,  4510, -2699,   188, 53900, 14046, 14046, 14046,
   14046, 14046, 14046, 33404,  1382,   101, 46760, 14046, 14046,  1302,
     963, -2699, 14046,  1524, -2699,  1307, 14046,  1390,   672, 14046,
   14046, 14046, 14046, 14046, 14046, 14046, 14046, 14046, -2699, -2699,
   20056,   213,  1629,  1648,   522,  -117,   240, 10532, 39128,  1641,
    7018, -2699,   522, 29549,    94,  1641, -2699, -2699, -2699, -2699,
     169, -2699, -2699, -2699, -2699,  1265, -2699,  1265,  1316, 42944,
     189, 37220, 14046, -2699, -2699,   656,  1314,  1375,   329,  1778,
   46760, -2699, 26269,  1602, -2699,   546,   546,  1317, -2699, 31931,
    1602, -2699, -2699, 19052,  1440,  1596,  1533, -2699, -2699,  1515,
    1519, -2699,  1321, 32931, 15552, 15552, -2699,  1220, 32645,  1223,
   -2699, -2699, -2699, -2699, -2699, -2699,   575, -2699, 42944,   -55,
    1505,   612,  1332, -2699, -2699,  1041,  1334, 51530, 46760,  1611,
    1564,  1615,  -137, -2699, -2699, -2699, 53900, -2699, 46760, 46760,
   52007, 52484, 34358, 46760, 33881, -2699, -2699, -2699, -2699, 46760,
     425, 46760,  4264, -2699, -2699, -2699,   182, -2699, -2699, -2699,
   -2699, -2699, 46760, 46760, -2699, -2699,   182, 46760, 46760,   182,
   -2699,  1154, 46760, 46760, 46760, 46760,  1268, 46760, 46760,   -29,
     -29,  1548, -2699, 12038,    88, -2699, 14046, 14046, -2699, 14046,
    1517, -2699,   662, -2699,  1559,    39,  1394, 42944, 42944, 46760,
    1214, -2699, -2699, -2699, -2699, -2699, -2699, 33881,  1066,  1350,
   -2699,  1352,  1698, -2699,  1775,  1703, 36266,   588,   919,  1410,
   12540,  1837,  1604, -2699, -2699,  1590, 14046,  1380,  1381,    51,
     685, -2699, -2699,  1386,  1276,  1402,  1405,  1392,  1399, -2699,
     733, 53900,  1742,    92,  1400,  1401,  1323,  1267,    17,  1232,
      55, -2699,   187, -2699,  1599,   113, -2699,  1482,  1616,   795,
    1862, -2699, -2699, -2699, -2699, -2699, -2699, -2699,   743, 22929,
   -2699, -2699,  1863,   912,  1863,   579, -2699, -2699,  1863, -2699,
    1863, -2699, 31457, -2699, 14548, -2699, 53900, -2699,  1406, -2699,
    1407, 14046,    37, -2699, 31992,  1408, 14046,  1409,  1411, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,  1412,  1737,
   -2699,  1413,  1415,  5481, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,  1416,
    1419, 32046,  1418, 18564, 18564,  8022,  1210, -2699, 18564,  1431,
   -2699,  1432, 31944,  1414,  1436, 32324, 13042, 14046, 13042, 13042,
   32479, -2699,  1439, 32547, 46760, -2699, 16054, -2699, -2699, -2699,
   14046, 42944, -2699, 14046,  1441, 28190, -2699, -2699, -2699,   240,
     944,   983,   983,   983,  5073, -2699, -2699, -2699,  1458, -2699,
   18564, 18564, -2699,   277,  1403,  8022, -2699, -2699,  1770, -2699,
     956, -2699,  1446, -2699, -2699,  2099, -2699, 27705,  3417, 14046,
     108, -2699, 14046,  1302, 14046,  1526,   983,   983,   983,   294,
     294,   196,   196,   196,   944,   240, -2699, -2699, -2699,  1448,
    1449,  1450,  1789,  1133, 14046, -2699, -2699,   690,   765, 42944,
    2794,  3598,  4374, -2699, -2699, 21498,  1493,   -52,  1498,  1493,
    1742,  4510, -2699,   610, -2699, -2699, -2699, 32645, -2699,   641,
   21498,  1495,  1506,   176, 24360,  1666, -2699, 46760, -2699, 46760,
   -2699,  1453,  1641,  1469, -2699, -2699, -2699,  1474,  1474, 14046,
    3377,  1474,  1669,  1670,   935,   935,  1220,  1673, -2699, -2699,
    1527, -2699, -2699, -2699, 14046,  9026,  1245, -2699,  1250, -2699,
   -2699, -2699, -2699,  1463, -2699, -2699,  1723, -2699, -2699, -2699,
   -2699,  1551,  1187, 14046,  1697, -2699,   116,  1473,  1820,   349,
    1773, 46760, -2699,  1684, -2699,   692,  1824,   113,  1826,   113,
   33881, 33881, 33881,   748, -2699, -2699,   912, -2699, -2699,   758,
   -2699,   355, -2699, -2699, -2699,  1565,   560,  1187,  1775, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699,   138,   589,  1187,  1566,
   -2699,  1570, -2699,  1571,   680,  1187, -2699, -2699,    88,    88,
      88, 14548, -2699,  1709,  1717,  1521, 32645, 32645, 32645,  1528,
   -2699,   120, -2699, 46760, -2699, -2699, -2699,  1517, 42944,  1516,
    1971,   795, -2699,  1671,   674, -2699,   912, 46760, 42944, 42944,
   42944, -2699, -2699, -2699,  1529,  1531, -2699, 53900,  -108,  1744,
    1735, 46760,  1578,  1184,  1992, -2699,   772, 13544,  1882, 42944,
    1544, -2699, -2699, -2699, -2699,  1742, -2699, -2699,   236,   236,
   -2699, 46760, -2699,  1545, -2699,  1550, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, 46760, -2699, 42944,
    1892,   641, -2699, 33881, -2699, 36743, -2699, -2699, -2699, -2699,
     912, -2699,   912,  1772, 46760, 30026,   912,   912, -2699, -2699,
   -2699, -2699, 32560, 14046, -2699,  1907, 53900, -2699, 28219, -2699,
   -2699, -2699, 14046, -2699, -2699, 14046, -2699, 27705, 14046,  1883,
   -2699,  2041,  2041,  6506, 53900, 18564, 18564, 18564, 18564, 18564,
     275,  1125, 18564, 18564, 18564, 18564, 18564, 18564, 18564, 18564,
   18564, 19554,   192, -2699, -2699, 14046, 14046,  1889,  1883, 14046,
   -2699, 53900,  1560, -2699,  1567,  1568, 14046, -2699, 53900,  1562,
    1569,  8022, 32609, -2699,   522, 28254, -2699, 32645, -2699,  4510,
   14046,  2522,  2648, 14046,  1572, 14046,  1888, -2699, -2699,  1581,
   -2699, -2699, 53900, 14046,  1582,  2859, 18564, 18564,  3067, -2699,
    3555, 14046,  8022, -2699,  1548,  1605, -2699,  1771,  1664,  1664,
    1664,  1664, -2699, -2699, 42944, 42944, 42944, 21975,  1893, 21020,
   45329,  1580, -2699,   707, -2699, 45329, 45806, -2699,  1600, -2699,
     522, 14046,  1899,    88,  1444,  1899,  1586, -2699, -2699,  1587,
   -2699, 14046,  1738, -2699, -2699, -2699,  1642, -2699,   796, -2699,
    2003,  1738, -2699,   797, -2699, 26269,  1495, 14046,   522,   114,
   -2699, -2699, -2699,  1597, -2699,  1474, -2699, -2699, -2699,  1803,
   -2699, -2699, -2699, 42944, -2699, 46760, 28283,  1941, -2699, 46760,
   46760, 46760, -2699, 46760,  1606,  1607,   857,  1598, -2699,   857,
    1922,   732,  1184,   185,  3917,   -43, -2699, -2699, -2699,  1674,
   46760, -2699, 46760, -2699, -2699, -2699, -2699, -2699, 34358, -2699,
   -2699, -2699, 33881, 27227, 33881, 46760, 46760, 46760, 46760, 46760,
   46760, 46760, 46760, 46760, 46760,  1608,  1612,  1617,  1548, -2699,
   -2699, -2699, -2699, -2699, -2699,  -151, -2699, -2699,   120,  1601,
   36266,   641,  1410,  1640,   499, 46283,  1619,  1613, -2699,   802,
    1775,  1621,  2062, -2699,   588, 36266, -2699, -2699, -2699,  2022,
   -2699,   397,   283, -2699, -2699,   641, -2699,   641, 32645, 46760,
    1682, -2699,  1276,  1630, -2699, -2699,  1276, 53900, -2699, -2699,
     113, 42944, -2699,   827, -2699, -2699, -2699, -2699, 46760,  1623,
   -2699,  1623, -2699, -2699, 14046, 32645, -2699,  1627, -2699, 32645,
   28333, -2699, 32645,  1889, -2699,  2041,  3635,  3635,  3635,  3027,
    1933,   431,  1633,  3635,  3635,  3635,   304,   304,   118,   118,
     118,  2041,   192, 32645, 32645, -2699, -2699,  1637, -2699, -2699,
   -2699, -2699,  1646, 46760, -2699,  6278, -2699,  1645,  1652, 46760,
   -2699, -2699,   298, 14046, 14046,   277, -2699,  5878, 14046, 53900,
     828,   277,   226, 14046,  2887,  3134, 14046, 14046,  4254, 28678,
    1653, 14046, 26746, -2699, 42944, 42944, 42944, 42944, -2699, -2699,
   -2699, 45329, 45806,  1634, 20542,   707,  1654, 42944, -2699,  1702,
    1643, 21498,  1891,  1857, -2699, 21498,  1857,  1229,  1857,  1932,
    1702, 25315, -2699,  1702,  1658,  1864, -2699,    80, 32645,  2101,
    1975,  1662, -2699,  1975,   912, -2699, 32645, 10532, -2699,   641,
     884, 46760,   522,   -27, -2699,  1675, 46760, -2699,  1738, 32645,
   -2699, -2699, 27705, -2699, -2699, -2699, -2699, -2699, 46760,  1672,
   -2699,  1677,   857, -2699, 46760,  1705, -2699,   161,  1960,    49,
   -2699, 33881,  1659,   654, -2699,  1981,  1895, -2699,   182, -2699,
   14046,   654,  1896,    93, 46760, -2699, -2699,  1832, -2699, 53900,
     113,   113, -2699, -2699,  1678,  1679,  1680,  1683,  1685,  1687,
    1688,  1689,  1690,  1691,  1692,  1693,  1694,  1704,  1706,  1712,
    1713,   916,  1714, -2699,  1715,  1597,  1718,  1721,  1722, 54362,
    1724,  1725,  1730,  1731,  1732,   830,   920, -2699, -2699, -2699,
   -2699, -2699, -2699,   847,  1739, -2699,  1695, -2699, -2699,  1760,
   -2699,  1779, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
      88,   998,    64, 46760,  1736,  1578,  2145,   -49,  1924,  1707,
   -2699,   912,  1410, -2699, 36266,   980,   195,  1735, -2699,   121,
    1578, -2699,  2092,  1756, -2699,  1929, 46760,  1740, -2699, -2699,
   -2699,  2198, -2699, 36743,  1623, 32645, -2699, -2699, -2699, 18564,
    2068,  1743, 53900, -2699, -2699, 14046, -2699, -2699,   277,   277,
    5878,   846, -2699,   277, 14046, 14046,   277,   277, 14046, -2699,
   -2699, 28713, 52961, -2699, -2699, -2699, -2699, -2699, -2699, -2699,
   -2699, 34835, 45329,  1745, -2699, 39605, -2699, -2699, 46760,   707,
   21498, -2699, -2699,   949, -2699, 21498,  2019, -2699, 21498, -2699,
   46760,  1746, -2699, 46760, -2699, 10030, 14046,  1787,   912,  1787,
   -2699,  1747, -2699,   176, -2699, -2699,  2159, 22452,  2117, 14046,
   -2699, -2699,  1753,   857, -2699,  1916,  1705,  1758, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699,   852,  1759, 46760, 46760, 18564,
   -2699,   654,   179,   171, -2699,  2029, 42944,  1705,  2175, -2699,
   -2699, -2699, -2699,  2142,  2222,  2109, -2699, -2699, 32645, -2699,
   -2699,  1742,  1742, -2699, -2699,  2187, -2699, -2699, -2699, -2699,
     847,  -169, 27227, 46760, 46760,  1765, -2699, -2699,  -151,  2141,
     861,   588, -2699,   641, 42944,  2115, 36266, -2699,  2231,  1774,
   46760,  1578,   870,   870, -2699,  1915, -2699,  1918, -2699, -2699,
     243, -2699, 42944, -2699, -2699, 22452,   641, -2699,  3188, 18564,
   53900,   862, -2699, -2699,   277,   277,   277, -2699,  1968, -2699,
   -2699,   868,  2239, -2699, 46760,    -8,   -97,  1781,  1782, -2699,
   -2699,  1784, -2699, 14046,  1783, -2699, -2699, 21498,   949,   910,
   -2699, 53900, 46760,   921, 53900, -2699,  1788,  -130,  1790, -2699,
    7520,  1792, -2699, -2699, -2699, -2699, -2699, -2699, 32645, 32645,
   46760,  1961, -2699,  1961, 10532,  1844, 46760, 14046, -2699,   927,
    2215,    47,   -28, 32645, -2699, 42944, -2699, 33881, -2699,   857,
   -2699, 33881, 14046, -2699,    62,  3027,  2256, -2699, -2699, -2699,
   -2699,  1705,   795, -2699, 46760, -2699,  2106, -2699, 46760,  1861,
    -114,  1870, -2699, -2699, -2699, -2699,   998,   912,  1410,  1735,
    1756,  1805, 42944,   641,   588,   397, -2699, -2699, -2699, -2699,
   -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699, -2699,  2236,
    2016,  2240,  1682,   939,  3188,   981, -2699,  2254,  1548,  1600,
   34835,  1818, -2699,  1819, -2699, -2699, -2699, -2699, -2699, 46760,
     957, -2699, 32645, 46760, -2699, -2699, -2699, 46760,  2187,   985,
   -2699, 14046,  1821, 14046, -2699, 16556,  1823, -2699,  2281, 14046,
    1880,  1880,   641, -2699, 28792,  1493, 22452, 46760, 46760, 46760,
   -2699,  1945,   795,   857,  1012, -2699,  1840, -2699, 28828,  2045,
   -2699,  2139, -2699,  2081, -2699,  1838, -2699, 14046, -2699,  1912,
   -2699, -2699, -2699,  2296, -2699, -2699, 36266,  1845,  1756,  1735,
    1578,  2053, -2699,  2054,  1848,  1410, -2699, 14046,   232, -2699,
   -2699, 46760, -2699,  1019,  1849,  1850, -2699, -2699, -2699,  1851,
   16556,  1852, -2699, 46760,  1855, 32645,  1986, -2699, -2699, -2699,
    2215, -2699, -2699, -2699,   546, -2699,   546, 26269,  2081, -2699,
   33881, 27227,  2085,  1838,    72,  2069,  1775, -2699, 32645, -2699,
     641, 36266, -2699, -2699, -2699, -2699, -2699, 22452,  1493,  1414,
   17058, 17058,  1859,  1028, -2699,  2348,  2020, -2699, -2699,  1866,
   -2699, -2699, -2699, 39605, 46760,  1474,  1474,  1493,  2069, -2699,
   -2699,  2157, -2699, -2699, -2699, -2699, -2699,    96,  2082, -2699,
    2083,  1335,  1756,  1043, -2699, 18062,  2011,    71, 31979, -2699,
   -2699, -2699, -2699, -2699,  1873,  1875, -2699, -2699, -2699,   546,
   -2699, -2699, -2699, -2699, -2699,   194,   194,  2251, -2699,  1936,
   -2699, -2699, -2699,  1410,  2340, -2699, -2699, -2699, -2699, -2699,
   -2699,  2366,  1474,   857, -2699,  2356, -2699,   139, -2699, -2699,
    1493, 17560,  1886, -2699, -2699, -2699, -2699, -2699, -2699, -2699
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -2699, -2699, -2699,  1793, -2699, -2699, -2699,   239, -2699,   924,
   -2699,   217,  -546,   566, -2699, -2699, -2699,  -923,    21, -2699,
   -2699, -2699, -2699,    25,   282, -2699,  -447, -1932,  -185, -2699,
   -2496, -2553, -2699, -2699,  -509, -2495, -1681, -2699, -2699, -2699,
   -2699, -1100,   199, -2699, -2127, -2699,  -620,  -985,  -790,  -988,
   -2699,    -3, -2699,  1342, -1096, -1786, -2454,  -512, -2699,  -584,
   -2699,  -340, -1770,  -555,  -541, -2699, -2342,  -939, -2699,  1454,
    -245, -2699,   600, -2699, -2125, -2699, -2699,   591, -2699,  -953,
   -2699, -2699, -1872,   205,  -499, -1825, -2121, -1785,  -634, -2699,
    -545,   254, -1731,  -930, -2699,   611, -2699,  -490, -2699,  -514,
   -2198, -2699, -2699, -2699,  1206,  -683, -2699,  1258, -2699, -2699,
   -2699,    22, -2699, -2699, -2699, -2699, -2699,  -535,   550, -2310,
   -2699,   480, -2699, -2699, -2699, -2699,   -75,   241, -2699,     7,
     962,   -20,   -11,    14,    10,    61,  1496,  1525, -2699,  -762,
     621, -2699, -2699, -1777,  -599,   -45, -2699,   663, -1372, -1736,
    -497,  1013,  1479,  1481,  -373,  -392, -2699,  -503, -2699,  -804,
   -2699, -2699,   657,  1049, -1289, -1286, -2699,   364, -2699,  -440,
    -371, -2699, -2699, -2699, -2699, -2699,   102,  -267,  -460,  1037,
   -2699,  1500, -2699, -2699, -2699, -2699, -2699, -1249, -2699,   710,
   -1993,   390, -1982, -1861,   140,   124, -1028,  -235,    27,   398,
    -336, -2699, -2699,  -333, -1716, -2433,  -350,  -348, -2699, -2699,
    -458, -1109,  -701,  1327, -2699,   352,  -487, -2699, -2699, -2699,
    1215,  1433, -2699, -2699,  1512,  2088, -2699,  -564,  2390,  -515,
    -675,  1205, -1067,  1207, -1092, -1027,  -910,  1208,  1216, -1230,
    3620, -1578,  -807,    -5, -2699, -2410, -1699, -2699, -2699, -2699,
     -88, -2699,  -411, -2699,  -410, -2699, -2699, -2699,  -446, -2698,
   -2699,  1142,   829, -2699, -2699, -2699, -1248, -2699,  4127,   718,
   -2699, -1623,  -870,  -568,  1231,  -748,  -977, -1149, -2699, -2699,
   -2699, -2699, -2699, -2699, -1672, -1788,  -507,   788, -2699, -2699,
     903, -2699, -2699, -2699,  -601,  1005,  -552,  -842,   799, -2699,
     144,  1943, -1329, -2699,   762, -1928, -2699, -2699,   412, -2699,
    2852,  -448, -1615,  1696,  -998,    41, -2699,  3607,   180,  1836,
    -851, -2104, -2699, -2699,  -488, -2266,  -918, -2699,  -621, -2699,
   -2699, -2699, -1166, -2699,   620, -2699, -1095, -2699,  -288, -2699,
   -2699, -2138, -2699, -2699, -2699, -2699, -2699, -2699,  -413, -2699,
    -457,  -462, -2699, -2699,    19,  -788,  1280, -2699, -2699,   507,
   -2699,   928, -2699,   686, -2699,    79, -2699,  1135, -2699, -2699,
   -2699,    23,  1573,   402, -2699,  1140, -2699, -2699, -2699, -2699,
   -2699,   644, -2699, -1093, -2531,    95, -2179,  -610,    -6, -2699,
   -2699, -2699,  -529, -2699, -2102
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If zero, do what YYDEFACT says.
   If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -1763
static const yytype_int16 yytable[] =
{
     480,   476,  1005,  1145,  1183,   646,   805,    56,  1138,   971,
      61,   729,  1300,  1244,   606,  1251,   595,  1480,  1479,   744,
     941,    43,    54,    76,  1778,  1444,    61,  1781,  1736,  1540,
    1142,   929,  1305,  2095,  1638,   540,  1189,   576,  2149,   720,
     735,  1157,  2121,  1307,  1455,  2126,  2089,   477,  1511,  2030,
     608,  1227,  1512,  1514,  1230,  1515,  1433,  1451,   581,  1354,
    2164,  2089,  2166,  1260,  2486,  1991,  1992,  1491,   717,  2463,
    2012,  2465,  1362,   799,  1544,   609,  1004,   745,  1010,  2484,
    1014,   737,  1676,  1677,  2054,  1484,  2335,   616,  2114,  2497,
    2144,  2185,  2186,  2187,  2500,    83,   593,  1597,  2197, -1075,
     551,   822,   822,  2296,  2352,   484,  1169,  1170,   964,  -729,
    1190, -1100,  2041,  2042,  1190, -1638,  1749,   624,   585, -1097,
   -1097,  2847,  -729, -1741, -1741,   547,  1799,   806,  1146,  1994,
    2606,  1802,  1369,  1181,  1995, -1649,  -449,  -452, -1656, -1100,
    2713,  2692,  1689, -1752, -1752,   967, -1759, -1759,  -726,  1689,
   -1101,  1516,  -726,   547, -1649,  2664,  1419,   822, -1098, -1098,
   -1656, -1101, -1638,  -688,  -701,  -721,  2209,  2602,   659,  -716,
     547,  2646,  1190,  1233,   547,  1973,  2216,  2740,  2609,  2374,
    2803, -1761, -1761,   533,  1436,  1613,  1238,  -409,  2772,  -183,
     729,   822,   930,  1163,  -183,  1189,   601,  2641,   598,    87,
     548,   548,  1464,  1994,  1447,  1467,  1468,  1316,  1995,  1885,
    1611,  2816,  1318,  2629,  1447,  1482,  -948,  2995,   720,  1456,
    1805,     3,     4,  -948,  2350,  2177,  1366,  1238,   547,  2285,
    -449,  -452,   822,  2249,  2251,  3006,  2611,  1164,  1324,  1733,
     603,  1726,  2665,  2964,  2850,  2849,  1190,  2832,  1727,  2875,
    1614,  1316,  1456,  3014,  -968,  3025,  1318,  2666,    26,  2586,
    2817,  -968,   562,   603,   602,  2740,  1169,  1170,  1489,  1506,
    1326,  2393,  1206,  1207,   805,  1490,  2380,  3004,  1873,  2829,
    2599,   805,  1324,  1439,  1506,  1315,   599,  1401,  1316,  2759,
    1463,   588,  1181,  1318,    31,   954,  2916,   729,  2757,   544,
    2814,   960,  1820,  2799,  2153,  1316,  2652,  1474,  1184,  1316,
    1318,  2800,   543,  1296,  1326,  1994,  2361,  2263,    84,  1324,
    1995,  2668,  2771,  3028,   546,   720, -1763,  1806,  1142,  1517,
    1185,  1475,  2417,  2859,  1308,    33,  1324,  1478,  2614,  1367,
    1507,  2381,   603,  2662,  1186,  2640,  2286,  2932,  2559,  1252,
    2352,  1326,  2563,  2600,  2658,  2654,  2392,  2505,   931,  1821,
     932,    88,    85,  1364,  2261,   563,  -576,  1615,  1326,    89,
    1485,  2758,  1326,  2659,  2770,   962,  2965,  2869,  2089,  1734,
    2089,  2615,  1210,  1211,  1517,  3007,    36,  1508,  1454,  2383,
    1364,  2501,  2663,  1402,  2818,   805,   805,  2616,   955,  1191,
    2692,  2989,  1508,  1191,    90,  1432,  2270,  1370,  2144,  2851,
    2144,  1457,  1165,  2756,  2954,  3026,  1653,  2265,  2266,  2267,
    2268,  2269,  -449,  -452,  2273,  2274,  2275,  2276,  2277,  2278,
    2279,  2280,  2281,  2282,  1874,  1441,  2740,  2874,   688,  2667,
     545,  3002,  2973,   586,  1457,  1762,  2591,  2760,  1493,   978,
    1494,    91, -1763,  2966,  1886,   979,   978,    26,  2943,  1638,
    1368,  1191,   979,  3015,   660,  1939,  2871,  2960, -1763,  2587,
    2549,  1594,  1454, -1763,  1430,  2518,   729,  1647,  2314,  2315,
    2801,   604,  2786,  2815,  1815,  -449,  -452,     3,     4,  1938,
    2603,  1601,   634,    31,  2617,    61,  1799,  1385,   923,   610,
    2129,  2618,  1690,  2647,   720,  1454,   632,   633,   636,  2056,
   -1763,  1431,  2193,  2194,   600,   595,  1872,  2514,  1166,  1895,
     731,  2097,   487,  2116,  1529,  1381,  2779,  2740,  1138,   804,
    1940,  1942,  2124,  2996,    33,  1191,  1480,  2933,  2463,   596,
    2465,   628,  3016,  1483,    61,   629,  2271,    34,  1442,   533,
     485,  1192,  2502,  2178,   801,  1226,  2272,   597,   480,   480,
    2940,   980,  2520,   972,  1184,  1335,   608,  2702,   980,  3017,
    2693,    35,  2706,  -948,   628,  2708, -1075,  1184,   629,  2104,
    2631,  2632,   480,   488,  1775,    36,  1185,  1934,   628,  2941,
   -1075,   609,   629,  2099,  -449,  -452,  1788,  2682,  1728,  1185,
    1186,  2593, -1100,  1537,    56,   934, -1638,    61,  1167,  2197,
    2010,  -968,  1747,  1188,  2105,  1541,  1542,  1872,    43,    54,
      76,  1053,   480,  1139,   808,  1570, -1649,   952,  1763, -1656,
   -1100,  2604,  1579,  -449,  -452,  -449,  -452,   743,   933,  -726,
    2873, -1101,  2089,  1474,  1311, -1649,  2089,  1941,  1943,  1944,
     943, -1656, -1101, -1638,  1171,  1175,  -721, -1763,  2880,  2879,
    -716,  1360,   729,   729,  1289,  1750,  1599,  1475,   560,  1242,
    1243,  1776,  -183,  -183,   578,   487,  1849,   729,   611,  2005,
    2006,  2007,  2008,  2009,  2010,  2622,  1852,  1229,  1347,  1855,
     720,   720,    83,   627,  1456,  2590,  1184,    26,  1598,   731,
    1296,  2934,  1686,  2645,  1605,   720,  1599,  1142,   805,  2623,
    1242,  1243,  2521,   642,  2824,   981,  2150,  1651,  1185,   717,
    1567,  1710,   981,   807,   617,   548,   809,  1342,  1343,  1344,
    1345,  1346,  1347,    31,  1549,   480,   488,   735,  1561,  1638,
     654,  1674,  1138,   924,  1565,   978,  1308,  2938,   920, -1738,
   -1738,   979,  2650,  1599,   491,  2484,   492, -1763,   657,  2592,
    1469,  1599,  1456,  1142,  1342,  1343,  1344,  1345,  1346,  1347,
     983,  2746,   960,   982,    33,   799,   638,   983,   639,  1571,
    1562,   495,  1916,  1344,  1345,  1346,  1347,    34,  1820,  1956,
     661,  1958,  2763,  2007,  2008,  2009,  2010,   804,  1404,   658,
     984,   729,  2342,  1456,   804,  1053,   731,   984,  1404,  2301,
    2659,    35,  2749,   925,   662,  2232,    61,  2463,   978,  2465,
    1305,  2236,   480,    26,   979,  1764,   816,  2034,  2151,   720,
   -1736, -1736,  1456,  1841,  1573,  2098,  1647,  1647,  1692,   822,
    2173,  1647,  1848,   647,  1405,  2141,   962,  1711,  2404,   663,
    1963,   480,  2089,  2174,  1405,  1964,  1923,   980,  1678,    31,
    1480,  2089,   595,  1712,  1300,  3020,  2089,   985,  1713,  2089,
     810,   480,   480,   480,   985,   480,   480,  1945,  2343,  1946,
    1488,   811,  1948,  1647,  1647,   640,  1457,   641,  2089,  1812,
    1868,  1869,  1870,   741,  2188,   963,  1138,  1447,  2787,   480,
      33,  1273,  1470,  2310,   534,  1714,  1965,   491,  1448,   492,
    1471,  1447,  2344,    34,  1406,   648,  1847,   547,   804,   804,
    2405,  2176,  1450,  1456,  1575,  2124, -1737, -1737,  2345,   822,
     980,   729,  2118,  2179,   495,  1858,  2862,    35,  2346,  2127,
    1865,  2678,  1179,  1180,   822,  1393,  1394,  1454,  1400,  2788,
    2180,   535,   480,  1407,  1457,  1316,   480,   480,  2789,   720,
    2853,  2695,    57,  1407, -1739, -1739,  2696,   480,  1920,  2217,
     609,   609,  2347,   609,  2224,  2396,  2089,   952,    57,  2075,
    2076,  2857,   981,  1247,  1850,   731,  1324,  2790,  1823,  1853,
    1247,  1315,    57,   812,  1316,  1457,  1894,  1184,   594,  1318,
   -1763, -1763, -1763,  2406,   649, -1740, -1740,   649,  2089,    26,
    1053,   981,  1408, -1742, -1742,  1454,   628,  1053,  1326,  1185,
     629,   814,  1408,   607,  1457,  1324,   628, -1743, -1743,  1173,
    1363,  2755,  1325,  1188,  1481,   815,   729,  2152,  1053,  2153,
     650,  2184,    57,   650,  2342,    31,  1908,   816,  1909,  1962,
     805,  1182,  1715,  1966,   817,  1967,  1454,  1326,  2791,  2348,
    2397,   922,  1008,   805,   720,   978,   983,  2154,  1310,  1911,
    2792,   979,   928,   918,   919,   651,   921,  1313,  2205,  2813,
     937,   729,  1224,   960,   981,  1454,    33,  2046,   961,  2023,
     944,  1361,  1236,  1932,  1698,  1237,  1009,  2813,  2068,    34,
    2069,  2804,  1371,  1511,  1247,  1247,   945,  1512,  1514,   720,
    1515,  2089,   947,  1379,  2047,  1457,  1380, -1744, -1744,  -498,
    2343,  1699,   652,    35,  -498,   652,  2398,  2044,  2399,  2911,
    2660, -1745, -1745,  1593,  1638,  1012,  1594,    36,  1969,   983,
   -1746, -1746,  1595,  1139,  2161,  1596,  2163,  2089,  2093,  2022,
     951,  2024,  2025,  1758,  2344,   948,  1229,   962,  1327,  1882,
    2531,  1300,  1883,   985,   950,   480,  2415,  2245,  2408,  1013,
    2345,   731,   731,  2070,  1328,  2071,  1454,   980,   978,  1329,
    2346,   958,  1924,  2583,   979,  1596,   731,  2390,  1647,  1647,
    1647,  1647,  1647,  -498,  1173,  1647,  1647,  1647,  1647,  1647,
    1647,  1647,  1647,  1647,  1647,   973,   963,  3013,  2895,  2389,
    2481,  2391,  1182,  2407,  2347,  2416,  1332,   975,   821,  2990,
    2991,  1994,  2974,   957,   976,   959,  1995,  1996,  1997,  1998,
    1930,   804,  2048,  1931,  1700,  2703,   985,  2049,  2089,  1701,
    1952,  2992,  -498,  1953,  1702,  2167,    61,  1139,  2168,  1647,
    1647,   977,    26,  2234,  2235,  2171,   801,  2202,  2172,   989,
     480,  2793,   480,   990,  2794,   480,   480,  2372,  1007,  2226,
     634,  1335,  1594,    61,  1011,   480,  3023,   480,   480,   480,
     480,   480,   480,   480,   632,   633,   636,    26,    31,  2212,
     980,  1144,   978,  2370,  2375,  1143,  2371,  2376,   979,  2492,
    1147,  2348,  1883,   480,  3027,   480,  2324,  2325,  2326,  2327,
     731,   480,   480,   480,   480,   480,   480,  1139,  2564,  1151,
    2567,   480,   480,    31,  2512,  2532,   480,  2513,  1596,    33,
     480,   981,  1579,   480,   480,   480,   480,   480,   480,   480,
     480,   480,    34,  2683,   480,  1149,  1596,    92,    26,  2750,
     483,   480,  2751,  1152,  1053,   601,   531,  1139,  2778,  2806,
    1160,  1883,  1596,  1337,    33,  2809,    35,   561,  2810,  -499,
    1162,   574,   991,  2681,  -499,  1171,   480,    34,  2050,  1167,
      36,  1174,  1811,  2457,    31,  1703,   983,  1175,  2704,  2051,
     487,   992,   729,  1177,  2124,  1766,  1704,   480,  1195,   934,
    2343,    35, -1747, -1747,   980,  1736,  1999,  2826,   480,   480,
    2827,  1315,  1178, -1146,  1316,    36,   984,  1225,  2830,  1318,
     720,  2827,  1194,   602,  2845,    33,   805,  2846,  2000,  2415,
   -1748, -1748,  1197,  1599,  2344,  2594,  2885,  1228,    34,  2846,
     731,  1231,   993,  -499,   981,  1324,  1139,    57,  1139,  1823,
    2565,   488, -1763,  1200,  1201, -1749, -1749,  1620,  2291,  2240,
    2346,   729,    35,  1338, -1750, -1750, -1763, -1763, -1763,  1232,
    1342,  1343,  1344,  1345,  1346,  1347,    36,  1326,  2886,   729,
    1234,  1596,  2898,   985,  1235,  2827,  2554,  1053,  1264,   720,
     480,   480,  -499,   480,  1253,  1856,    57,   594,  2001,   983,
    2554,   603, -1751, -1751,  1263,  1893,   729,   720,  -692,  2919,
    1268,  1139,  2920,   729, -1753, -1753,  2944,  1599,  2257,  2945,
   -1754, -1754,  1206,  1207,  1053,  2983, -1755, -1755,  2827,  1857,
     480,  2805,  1266,   994,   720,  1912,  2264,   729,  2357,   607,
    3003,   720,  2955,  2846,  2956,   731,  2569,  2043,  -699,  2572,
    1751,  1841,  1271,  2466, -1756, -1756,  1272,  2510,   981,    57,
   -1757, -1757,  1273,  2287,  1274,   720, -1758, -1758, -1760, -1760,
    2292, -1762, -1762,   804,  1496,  1497,  1800,  1801, -1763,  -550,
    -550,  2348,  1208,  1209,   995,  1275,   804,    36,  1053,  2480,
     731,  1277,   996,  -576, -1763,   480,   985,  1210,  1211, -1763,
     480,  -554,  -554,  1580,   997,   487,  -553,  -553,  -689,  1863,
    1375,  1377,  -577,   983,  -690,  1278,  1279,  3012,  2627,  -693,
    1281,  1282,   491,  -691,   492,   595,  1283,  1284, -1146,  1285,
    1286,  2511,  1210,  1211,  1287,   998, -1763,   480,   480,   480,
     604,  1288,   480,  1864,  1289,  1293,   494,  1306,  1581,   495,
     480,   480,   480,   480,  1309,  1352,  1355,  1357,   729,  1358,
     480,  1373,  1382,  2776,   480,  1383,   488,   480,  1386,  1392,
     961,   963,  1428,  2124,  1582,   595,  1426,  1434,  1452,  1453,
    1454,  1459,  1000,  1465,   480,   480,   720,  1460,  1461,   480,
    2487,  1335,  1583,  2002,  2003,  2004,  1584,  2005,  2006,  2007,
    2008,  2009,  2010,   480,  1001,  1472,   480,   503,   480,  1477,
     985,   532,  1647,  1473,  1487,  2460,  1492,  1499,  1585,   553,
     489,  1586,   729,  1500,  1003,  2245,  1509,  2606,   480,  1504,
     592,   592,  1517,  2607,  1510,  1522,  1587,  2636,  2637,   480,
    2087,   722,  1525,  1526,   595,  1528,  2608,  1530,  1183,  1536,
     720,   822,  1543,  1545,   480,  2087,  1142,  1546,  1556,  1247,
    1557,  1558,  1559,  1961,  1552,  1592,   634,  1601,    57,    61,
    1553,  1599,  1247,   480,  1606,  2609,  1566,  2610,  1316,  2509,
     632,   633,   636, -1763,   620,  -461,   477,  1666,   480,   480,
     490,  1668,  1670,  1671,   729,  1688,  1673,  1672,  1695,  -461,
    1706,   477,  1647,  1707,  -461,  1709,  1276,   480,  1730,  1731,
    1759,  1745,   991,  1752,  1760,  1767,   602,  1779,  1789,  1790,
    1791,  1794,   720,  1792,  1139,  1139,  1139,  1793,  1588,  1810,
    1813,   992,  3001,  2611,  1817,  1818,  1589,   491,  1819,   492,
     603,  1880,   478,  1884,  1298,  1888,  1896,   504,  1897,  1898,
    1300,   504,  2457,  -461,  1899,   493,   549,   549,   552,   504,
     557,   494,  2612,   557,   495,  1053,   557,   583,  1913,   991,
     504,   504,  1647,  -461,  1917,  1918,  1919,  1921,  1922,  1590,
    1925,  1926,   993, -1763,  1927,  1947,  1949,  1950,   992,  1928,
    1342,  1343,  1344,  1345,  1346,  1347,  1929,  1936,  1937,  1951,
    1959,   731,  1971,  1970,   729,  1977,  1979,  1982,  1980,  1981,
    1983,   480,  1984,  1986,  2019,  1990,   557,  1987,   607,   607,
     722,   607,  -461,   583,   504,   583,   583,   583,  2013,  2014,
    2613,  -461,   720,  2020,   729,  2614,  2027,  2040,  2038,   993,
    2045,  2061,  2052,  2066,  2062,  2064,  2065,  1139,  2091,   804,
    2101,  2103,  2110,  2115,  2117,  2119,  -555,  -556,  1912,   723,
    2130,  2635,   720,  2133,  2131,  2134,  2135,   480,  2137,  2139,
     731,  2140,  2143,   994,  2147,  2160,   480,  2162,  2615,   480,
    2175,  2181,   480,  1480,   805,  2182,  2183,  2189,   731,   480,
     480,   480,   480,   480,  2616,  2190,   480,   480,   480,   480,
     480,   480,   480,   480,   480,   480,  2411,   729,  2201,   480,
     480,   595,  2200,   480,  2204,   731,  2170,  2939,  2191,  2320,
     480,  2219,   731,  2192,   995,   480,  2214,   722,  2218,  2225,
     994,  2215,   996,  2229,   480,   720,  2222,   480,   725,   480,
    2238,  2231,   595,  2241,   997,  2239,   731,   480,  2248,  2256,
     480,   480,  1994,  2016,  2015,   480,   480,  2288,  2308,   595,
    2321,  2196,  2293,  2333,  2289,  2290,  2294,  2322,  2073,  2306,
    -461,   480,  2087,   480,  2087,   998,  2208,  2309,  2359,  2312,
    2341,   995,  2355,  2364,  2365,   480,  2369,  2367,  2373,   996,
    2384,  2617,  2388,  2382,  2401,   480,  2403,  2483,  2618,  2495,
    2419,   997,  2499,  2519,  2395,  2477,  2394,  1315,  2555,  2478,
    1316,   480,  2560,  2491,  2479,  1318,  2490,  2494,   477,  2753,
     477,  2506,  1000,  1883,  2516,  2508,  2856,   729,  2863,  2522,
    2551,  2457,   998,   628,  2523,  1247,   947,   629,   723,  2558,
    2246,  1324,  2247,  2524,  1001,  2525,  2252,  2253, -1763,  2526,
    2540,  2552,  2561,  2568,  2573,   720,  2575,  2574,  2576,  2578,
    2589,  2601,  1139,  2597,  1003,   729,  1139,  2464,  1139,  2595,
    2625,  2626,  2630,  1326,  2596,  2643, -1097, -1736, -1737,  1000,
    2642, -1738,  2653, -1739,  2460, -1740, -1741, -1742, -1743, -1744,
   -1745, -1746, -1747,   720,  2644,  2655,   729,   656,    57,   729,
    2669,  1001, -1748,  2656, -1749,  1609,   722,   547,  2485,  2888,
   -1750, -1751, -1753, -1754,  2670,  2672, -1755,   725,  2918, -1756,
   -1757,  1003, -1758, -1759,   720,    57,   740,   720, -1760, -1761,
   -1762,   731,  2503,  2651,  2504,  2676,  2675, -1098,  2679,  2680,
    2707,  2694,  2712,  2053,  2730,   723,  2736,  2734,   480,  2742,
    2744,  2745,  2761,  2828,  2747,  2752,  2828,  2764,  2765,  2766,
    2767,  2768,  2775,  2899,  2777,  2901,  2782,   666,  2783,   668,
     669,  2784,  2797,  2807, -1763,  2798,  2811,  2819,  2820,  2823,
    2866,  2821,   670,   671,  2831,   592,  2833,  2839,  2842,  2847,
   -1763,  1696,  2835,  2861,  2865, -1763,  2870,   480,   480,  2856,
    2867,  2876,   480,   731,  2881,  2882,  2971,   480,  2883,  2887,
     480,   480,  1198,  1199,  2891,   480,  2892,  2900,  2904,  2906,
    2917,  2760,   583,  2903,   725,  2921,   644,  2923,  2924,   645,
     676,   677, -1763,  2930,  2926,   480,  2087,   504,  2929,   480,
    2087,  2931,  2935,  2936,  2937,  2953,  2946,  2947,  2948,  2950,
      57,  2542,  1518,  2462,  2961,  2967,  2982,  2984,  2994,  2913,
    1519,   480,  2985,  2987,   645,   504,   504,  3005,  2997,  2999,
    3010,  3011,  2995,  2996,  3021,  3022,  2582,  2584,  2196,  3024,
     679,   549,   477,  3029,  1843,  2422,   477,  1335,  1200,  1201,
     949,  2158,   722,   722,  2418,  1139,  2585,  2377,  2735,  2912,
     915,   915,   557,   557,   480,   557,   729,   722,  2957,  2493,
    2633,  2963,  3019,   731,  2860,  3000,   583,  2993,  2796,  2142,
    2498,  2959,  2165,  2998,   723,   504,  2423,  2138,  2958,   686,
     687,  1560,  1443,  2242,   720,  1539,   583,  2198,  2677,  2482,
    1384,  1365,  2122,  2464,  1809,  1423,  1422,  2894,   583,  2908,
    2988,  2132,  1786,  1202,  1203,  1204,  1205,  1206,  1207,  2363,
    2949,  1208,  1209,  2460,  2902,  2579,  2841,  1808,  1427,  2336,
    2100,  2566,  2550,  2825,  2890,  2332,  2889,  2896,  1520, -1763,
    2897,   695,  1610,   697,  1612,  1616,   583,   583,   583,   583,
      57,  2733,  2951,  1617,  2952,  2981,   699,  1735,  2125,  1600,
    2036,  2059,  2661,   725,  1879,  1974,  2362,   804,   917,  2057,
    2094,  2581,  2203,   480,  2884,  1754,   731,  1572,  2378,   480,
    1968,  1756,     0,  1387,     0,     0,     0,     0,   480,   480,
     821,   722,   480,  1994,     0,     0,     0,     0,  1995,  1996,
    1997,  1998,     0,     0,  2580,   480,  2087,   702,     0,     0,
       0,     0,     0,     0,   480,  2087,  2303,     0,     0,   480,
    2087,     0,   480,  2087,     0,     0,     0,  1210,  1211,   480,
     480,     0,     0,     0,     0,     0,     0,     0,     0, -1763,
       0,   480,  2087,   480,     0,     0,  1342,  1343,  1344,  1345,
    1346,  1347,   477,     0,     0,     0,     0,     0,     0,     0,
     707,   477,     0,   480,     0,     0,   477,  1298,     0,   477,
     723,   723,     0,     0,   726,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   723,     0,     0,   477,     0,
     710,   711,     0,     0,     0,     0,  2464,     0,     0,     0,
     592,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1265,     0,     0,     0,   821,  1298,     0,  1994,
    2780,   722,     0,   713,  1995,  1996,  1997,  1998,     0,   480,
    2087,  2657,     0,   480,   731,  1696,     0,     0,  1212,  1213,
       0,     0,  2304,  2661,     0,     0,     0,     0,     0,   725,
     725,  2063,     0,  1247,     0,     0,     0,   480,     0,     0,
     595,   480,  2087,     0,   725,   731,     0,  2080,   731,     0,
       0,     0,     0,     0,   480,     0,   477,     0,     0,  1304,
       0,    57,  2080,     0,     0,     0,   594,     0,   480,     0,
       0,   480,     0,     0,     0,     0,     0,     0,     0,     0,
    2000,  1139,     0,     0,     0,  1139,   480,     0,   477,   723,
       0,     0,     0,     0,     0,     0,     0,     0,  2732,     0,
       0,     0,   583,     0,     0,     0,   722,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     504,   504,     0,     0,     0,     0,   583,   583,  1391,     0,
    2878,     0,     0,   726, -1541,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   480,  2087,     0,     0,     0,     0,
    2001,   722,     0,   583,  1446,     0,     0,     0,     0,     0,
       0,     0,  2462,     0,     0,   480,   583,   480,   725,   480,
       0,     0,     0,   480,     0,     0,     0,     0,     0,     0,
     480,  2087,     0,   583,     0,     0,     0,   583,     0,  2909,
       0,   477,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   480,     0,     0,     0,     0,  2000,  1315,     0,     0,
    1316,     0,     0,     0,     0,  1318,     0,     0,     0,   723,
       0,   480,     0,     0,     0,     0,     0,   477, -1541,     0,
       0,     0,     0,     0,   480,   821,     0,     0,  1994,     0,
     726,  1324,     0,  1995,  1996,  1997,  1998,     0, -1763,     0,
       0,     0,     0,    57,  1139,  2464,   728,     0,     0,     0,
       0,  2534,     0,     0,     0,  1563,     0,  1564,     0,     0,
       0,   480,  2087,  1326,   480,   480,  2001,  2972,     0,   619,
   -1541,   622,     0,   626,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0, -1541,     0,     0,  2872,   725, -1541,
       0,     0,     0,     0, -1541,     0,     0,     0,     0,   480,
       0,     0,     0, -1541,     0,     0,     0, -1541,   477,     0,
    1503,     0,     0,     0,   723,     0,     0,     0,   583,     0,
       0,     0,     0,  1298,     0,     0,     0,  1534,     0,     0,
       0,     0,     0,  2313,     0,  2002,  2003,  2004, -1541,  2005,
    2006,  2007,  2008,  2009,  2010,   480,     0,     0,     0,     0,
       0,     0,     0,     0,  1298,     0,     0,     0, -1541,   723,
    1551,     0,     0,     0, -1763,   821,     0,     0,  1994,  2331,
       0,  2334,     0,  1995,  1996,  1997,  1998,     0,     0,     0,
   -1763,     0,     0,     0,     0, -1763,     0,     0,     0,     0,
       0,   645,   645,   725,   504,   504,     0,   504,   645,     0,
       0,   583,     0,     0,     0,  1315,     0, -1541,  1316,   726,
   -1541,     0,     0,  1318,     0,     0, -1541,     0,     0,     0,
       0,     0, -1763,     0,     0,   728,     0,     0,     0,     0,
       0,  2462,     0,     0,     0,  2000,     0,     0,   725,  1324,
       0,     0,     0,     0,     0,     0, -1763,     0,  1640,     0,
   -1541,     0,   722,     0,     0,     0,     0,     0,     0,  1665,
       0,  2002,  2003,  2004,  1816,  2005,  2006,  2007,  2008,  2009,
    2010,  1326,   821, -1541,  1824,  1994,  1827,  1335,     0,  1838,
    1995,  1996,  1997,  1998,     0,  1842,     0,  1844,     0,     0,
       0,     0,   645,    57,     0,     0,     0,     0,  2535,  1851,
       0,     0,     0,     0,  1854,  2001,     0,     0,  1859,  1860,
    1861,  1862,     0,  1866,  1867,     0,     0,    57,     0,    57,
       0,   722,     0,   915,   583,     0,   821,     0,  2073,  1994,
       0,     0,   728,     0,  1995,  1996,  1997,  1998,     0,   722,
       0,  2316,     0,     0,     0,   583,     0,   583,     0,     0,
       0,     0,     0,     0,     0, -1541,  1768,     0,  1774,     0,
       0,     0,     0, -1541,     0,     0,   722,     0,     0, -1763,
       0,     0, -1763,   722,     0,  2000,     0,     0,     0, -1541,
       0, -1541, -1541,     0,     0,     0,     0,     0, -1763,     0,
       0,     0,     0, -1763,   583,   726,   726,   722,     0,     0,
       0,     0,     0,  1446,   504,     0,     0,     0,     0,     0,
     726,     0,     0,     0,   504,  1825,   504,  1829, -1541,   504,
       0, -1541, -1541, -1541,     0,   504,     0,   504,     0,     0,
   -1763,     0,     0,  2080,     0,     0,     0,  2080,   645,   504,
       0,     0,     0,   645,   504,  2001,     0,     0,   504,   504,
     504,   504,     0,   504,   504,     0,     0,     0,     0,     0,
       0,    57,    57,     0,     0,     0,     0,     0,   637, -1763,
     723,     0,     0,   583,   583,  1892,  1342,  1343,  1344,  1345,
    1346,  1347,  2000,     0,     0,  1335,     0,     0,     0,     0,
       0,     0,  1907,     0,     0,     0,     0,     0,     0,     0,
    2002,  2003,  2004,     0,  2005,  2006,  2007,  2008,  2009,  2010,
       0,   728,     0,     0,     0,  1624,     0,     0,   722,     0,
       0,     0,     0,  1625,  1626,  1627,  1628,     0,     0,     0,
       0,     0,     0,     0,   726,     0, -1763,     0,     0,   723,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   725,
       0,     0,  2001,     0,     0,  1315,     0,   723,  1316,     0,
       0,     0,   927,  1318,  1319,  1320,  1321,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0, -1763,     0,     0,
       0,  1322,   722,     0,   723,     0,     0,    57,     0,  1324,
       0,   723,     0,     0,   974,     0,  1325,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2001,     0,     0,     0,
       0,     0,     0,     0,     0,   723,     0,     0,   725,     0,
       0,  1326,     0,     0,     0,     0,     0,     0,     0,     0,
     504,     0,  1154,  1156,  1158,  1159,   725,  1304,     0,     0,
    2002,  2003,  2004,     0,  2005,  2006,  2007,  2008,  2009,  2010,
       0,     0,  2080,     0,   722,     0,     0,  2080,     0,     0,
    2080,     0,     0,   725,   726,     0,     0,     0,     0,     0,
     725,     0,     0,  1640,     0,     0,     0, -1763,     0,     0,
       0,     0,     0,     0,  1342,  1343,  1344,  1345,  1346,  1347,
       0,     0,     0,  1315,   725,     0,  1316,   728,   728,     0,
       0,  1318,  1198,  1199,     0,   583,     0,     0,     0,     0,
       0,  2090,   728,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1327,     0,     0,     0,  2090,  1324, -1543,     0,
    2109,     0,     0,  2112, -1763,  1774,   723,  2221,  1328,     0,
       0,     0,     0,  1329,     0,    57,     0,  2002,  2003,  2004,
       0,  2005,  2006,  2007,  2008,  2009,  2010,     0,     0,  1326,
       0,     0,     0,     0,   722,  1330,  1331,     0,    57,   726,
       0,     0,     0,   821,     0,     0,  1994,     0,  1200,  1201,
    1332,  1995, -1763, -1763, -1763,     0,     0,  1503,     0,     0,
       0,     0,     0,     0,   722,  2123,     0,     0,     0,  2080,
     723,  2002,  2003,  2004,     0,  2005,  2006,  2007,  2008,  2009,
    2010,     0,  1298,     0,   726,   725,     0,     0,  1333,     0,
       0,  1334, -1543,     0,     0,     0,     0,     0,     0,  2317,
       0,     0,     0,     0,     0,  1335,   728,     0,     0,     0,
       0,     0,     0,  1202,  1203,  1204,  1205,  1206,  1207,  1503,
       0,  1208,  1209,     0,   583,     0,     0,     0,     0,     0,
   -1763,     0,     0,  1503,   583,   583,   583,   722,     0,     0,
       0,     0,   723,     0, -1543,    57, -1763,   504,     0,   725,
       0, -1763,     0,     0,     0,   583,     0,     0, -1543,     0,
       0,     0,     0, -1543,     0,     0,     0,  2237, -1543,     0,
       0,     0,     0,     0,     0,     0,     0, -1543,  1378,     0,
       0, -1543,     0,   645,     0,   583,     0,     0, -1763,     0,
       0,     0,     0,     0,     0,     0,     0,  1337,     0,     0,
    1503,  1503,     0,  1389,    57,     0,     0,     0,     0,     0,
       0,     0, -1543,     0,     0,     0,     0,     0,     0,     0,
       0,   725,     0,  1640,     0,     0,     0,  1210,  1211,  1435,
       0,  2386, -1543,     0,     0,     0,   728,     0,     0,     0,
       0,     0,  1462,  1335,     0,     0,     0,     0,     0,     0,
       0,     0,   723,     0,     0,     0,  2420,   722,     0,     0,
    1629,  1630,  1631,  1486,  1632,  1633,  1634,  1635,  1636,  1637,
       0,  2467,  2468,  2469,  2470,  2471,  2472,  2473,  2474,  2475,
    2476, -1543,   723,     0, -1543,     0,     0,     0,     0,     0,
   -1543,     0,    57,     0,     0,   722,     0,  1338,     0,     0,
    1339,  1340,  1341,     0,  1342,  1343,  1344,  1345,  1346,  1347,
     583,   583,   583,   478,     0,  2090,  2340,     0,     0,     0,
       0,  2340,  2354,  2001, -1543,     0,   722,     0,     0,   722,
       0,   725,     0,     0,     0, -1763,     0,     0,  1212,  1213,
       0,   728,     0,     0,     0,     0,     0, -1543,     0,     0,
       0,  1774,     0,     0,   991,   723,     0,     0,  1214,     0,
       0,   725,     0,     0,     0,     0,     0,     0,     0,   583,
       0,   504,     0,   992,     0,  1503,  1446,  1503,     0,  1534,
       0,     0,     0,     0,     0,     0,   728,     0,     0,  1563,
       0,     0,     0,     0,     0,   726,   504,     0,  2421,     0,
       0,     0,  2073,     0,  1521,     0,     0,     0,     0,     0,
       0,   504,   504,   504,   504,   504,   504,   504,   504,   504,
     504,     0,     0,     0,   993,  2409,     0,     0,     0, -1543,
       0,     0,     0,  2410,   725, -1763,  1907, -1543,     0,     0,
       0,   583,  1342,  1343,  1344,  1345,  1346,  1347,     0,     0,
       0,  1446,     0, -1543,     0, -1543, -1543,     0,     0,     0,
       0,     0,     0,     0,   726,  1534,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   723,     0,   583,     0,     0,
       0,     0,   726,     0,  1503,     0,     0,  1569,     0,     0,
       0,  2411, -1543,     0,     0, -1543, -1543, -1543,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   726,
       0,     0,     0,   723,     0,   994,   726,     0, -1763, -1763,
   -1763,     0,  2005,  2006,  2007,  2008,  2009,  2010,     0,   504,
       0,     0,     0,     0,     0,  2527,   722,     0,     0,     0,
     726,     0,     0,     0,   723,     0,     0,   723,     0,     0,
       0,     0,     0,     0,   725,     0,     0,     0,  2544,     0,
     583,   583,   583,   583,     0,     0,   995,  2340,  2354,     0,
    2340,     0,     0,  2553,   996,     0,     0,  2090,     0,     0,
       0,  2090,     0,     0,   898,   898,   997,  2571,  2412,     0,
       0,     0,   725,     0,     0,   978,     0,     0,     0,     0,
       0,   979,     0,   915,     0,     0,     0,  2109,   991,     0,
    1744,     0,  1774,     0,     0,     0,     0,   998,  1640,     0,
       0,     0,     0,   725,  1446,     0,   725,   992,     0,     0,
    1503,  1753,     0,  1755,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1048,  1055,     0,
    2634,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   726,  1315,     0,  1000,  1316,     0,     0,     0,     0,
    1318,     0,     0,     0,     0,     0,     0,     0,   993,     0,
    1804,     0,     0,     0,     0,     0,  1001,     0,   978,     0,
       0,     0,     0,     0,   979,     0,  1324,   728,     0,     0,
       0,   991,     0, -1763,  2754,     0,  1003,   980,  2413,     0,
       0,  2414,     0,     0,     0,     0,     0,     0,     0,  1503,
     992,     0,     0,     0,     0,   726,     0,     0,  1326,     0,
    1907,     0,     0,     0,     0,     0,     0,     0,     0,  2773,
    2774,     0,  2673,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   723,     0,  2785,     0,     0,  1889,
    1891,     0,     0,     0,     0,     0,   728,     0,     0,   994,
       0,   993,     0,     0, -1557,     0,     0,     0,  2689,     0,
       0,     0,     0,     0,   728,     0,     0,   478,  2340,     0,
       0,  2700,     0,     0,   504,     0,  2090,   726,  2538,     0,
     980,  2090,     0,     0,  2090,     0,  2711,     0,     0,  2714,
    1246,   728,     0,  1454,     0,     0,     0,  1246,   728,     0,
     995,     0,     0,  2741,     0,     0,     0,     0,   996, -1763,
       0,  1048,  2843,   725,     0,     0,     0,     0,     0,     0,
     997,     0,   728,   645,   504, -1763,     0,     0,  1269,     0,
   -1763,     0,   583,     0,     0,     0,     0,     0,     0,     0,
    2864,   981,   994,     0,     0,     0,     0,     0, -1557,     0,
       0,   998,     0,     0,     0,     0,     0,  1280,     0,   504,
     504,     0,     0,     0,     0,     0,     0, -1763,     0,     0,
     583,     0,  1446,     0,     0,     0,   504,  1290,  1291,  1292,
       0,     0,  1299,     0,  1312,     0,     0,   726,   583,     0,
       0,  2741,   999,   995,     0,     0,   983,     0,  1000,     0,
   -1557,   996,     0,     0,     0,  1356,     0,     0,     0,  1246,
     504,  1246,  1246,   997, -1557,     0,     0,   726,     0, -1557,
    1001,     0,  1335,  2090, -1557,     0,  1002,     0,  2714,     0,
       0,     0,     0, -1557,   981,     0,     0, -1557,     0,     0,
    1003,     0,     0,   728,   998,     0,  2838,     0,     0,     0,
     915,     0,   504,     0,     0,     0,     0,     0,  1399,     0,
       0,   583,  1413,  1418,     0,     0,     0,     0, -1557,     0,
       0,  2072,     0,     0,     0,     0,     0,     0,     0,  1246,
     504,     0,  1246,  1246,   645,  1845,     0,     0, -1557,   983,
     726,  1000,     0,   985,     0,     0,     0,     0,   583,     0,
    1198,  1199,     0,     0,     0,     0,     0,   728,     0,     0,
       0,     0,     0,  1001, -1763,     0,  1048,     0,     0,  1846,
       0,     0,     0,  1048,     0,     0,   478,     0,     0,     0,
       0,     0,     0,  1003,     0,  2893,     0, -1557,     0,   504,
   -1557,     0,     0,  2711,  1048,     0, -1557,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2741,   645,   645,   645,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1200,  1201,     0,   728,
   -1557,     0,     0,     0,     0,     0,   985,     0,     0,     0,
       0,     0,  1446,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0, -1557,     0,     0,     0,  2711,     0,     0,
     726,     0,     0,     0, -1763,     0,     0,     0,     0,  2838,
    2199,  1342,  1343,  1344,  1345,  1346,  1347,     0,     0,     0,
    2210,  2211,  2213,  1774,     0,     0,     0,     0,     0,     0,
       0,  1202,  1203,  1204,  1205,  1206,  1207,  1446,   726,  1208,
    1209,  2230,     0,  2741,     0,     0,     0,     0,  2073,     0,
       0,     0,  1538,     0,     0,     0,     0,     0,     0,  2700,
     645,     0,     0,  1547,     0,  1548,     0,     0,     0,   726,
       0,  1569,   726,     0,  1554, -1557,     0,     0,     0,   728,
       0,     0,     0, -1557,     0,     0,     0,     0,     0,     0,
       0,  1555,     0,     0,     0,     0,     0,     0,     0, -1557,
       0, -1557, -1557,     0,     0,     0,     0,     0,     0,   728,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1574,
    1576,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0, -1557,     0,
       0, -1557, -1557, -1557,     0,  1210,  1211,     0,     0,     0,
       0,  1607,  1608,     0,     0,  1621,  1622,     0,     0,     0,
       0,  1604,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1623,     0,  1641,     0,     0,  1652,  1655,  1660,  1663,
       0,     0,   728,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2328,  2329,  2330,     0,
       0,  1675,     0,     0,     0,     0,     0,  1679,  1680,  1681,
    1682,  1683,  1684,     0,     0,     0,     0,  1693,  1694,     0,
       0,     0,  1705,     0,     0,     0,  1708,     0,     0,  1716,
    1717,  1718,  1719,  1720,  1721,  1722,  1723,  1724,     0,     0,
    1725,     0,     0,     0,     0,     0,     0,   898,     0,     0,
    1048,     0,     0,     0,     0,  2385,  1212,  1213,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1757,     0,     0,     0,   506,     0,     0,   726,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1798,  1798,     0,     0,  1350,     0,     0,     0,     0,
       0,     0,   728,     0,  1291,  1292,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2489,     0,   507,
       0,     0,     0,     0,     0,     0,  1350,     0,     0,     0,
     728,     0,     0,  1246,     0,   508,     0,   -39,     0,     0,
       0,  1315,     0,  1246,  1316,     0,  1246,     0,     0,  1318,
    1319,  1320,  1321,  1569,     0,     0,     0,     1,     0,     0,
       0,   728,     0,     0,   728,     0,     0,     2,     0,     3,
       4,     0,     0,  1048,     0,  1324,  1876,  1877,     0,  1878,
       0,     0,  1325,     0,     0,     5,     0,     0,     0,   509,
       0,     0,     0,     0,     6,     0,     0,     0,     0,   510,
       0,     0,     0,     0,     0,     0,     7,  1326,     0,     0,
    1048,   511,     0,     0,     0,     0,   512,     8,     0,  1933,
    1935,     0,     0,     0,     0,     0,     0,     0,     0,     9,
       0,    10,     0,     0,     0,  1350,  2545,  2546,  2547,  2548,
       0,     0,  1350,   513,     0,     0,  1246,     0,     0,    11,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1246,
       0,     0,     0,    12,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    13,  1048,     0,     0,     0,     0,    14,
       0,  1972,     0,     0,     0,     0,  1978,    15,   514,    16,
      17,     0,   515,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    18,     0,     0,     0,     0,  1327,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1328,  1993,     0,     0,     0,  1329,
       0,     0,    19,     0,     0,     0,  1660,     0,  1660,  1660,
       0,     0,     0,     0,     0,     0,  2032,    20,     0,     0,
    2035,  1330,  1331,  2037,     0,   516,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1332,     0,     0,   517,
       0,   728,     0,    21,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2055,
       0,     0,  2058,     0,  2060,     0,     0,     0,     0,     0,
       0,     0,   518,     0,  1333,   519,     0,  1334,     0,     0,
       0,     0,     0,   520,     0,     0,   521,  2096,     0,     0,
       0,  1335,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   522,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   523,     0,
      22,  2128,  2128,    23,     0,   524,  1350,     0,     0,  1399,
       0,     0,     0,     0,   525,     0,     0,  1350,     0,     0,
     526,  1648,     0,     0,  1418,  1723,     0,  1350,  1350,  1350,
       0,     0,    24,     0,     0,     0,  1350,     0,     0,     0,
       0,    25,     0,  2136,     0,   527,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    26,     0,     0,     0,     0,
       0,     0,    27,  1337,     0,     0,    28,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    29,     0,  2762,     0,
       0,     0,     0,     0,     0,     0,     0,    30,     0,     0,
       0,    31,     0,  1350,     0,     0,     0,     0,     0,  1315,
       0,  1048,  1316,     0,     0,     0,  1317,  1318,  1319,  1320,
    1321,     0,     0,     0,     0,     0,  2781,     0,     0,     0,
       0,     0,     0,     0,     0,  1322,     0,    32,     0,     0,
       0,     0,    33,  1324,  2802,     0,  1350,     0,     0,     0,
    1325,     0,  2233,     0,     0,    34,     0,  2228,     0,     0,
    1350,     0,     0,     0,     0,  1350,     0,     0,     0,     0,
       0,     0,     0,  1338,     0,  1326,  1339,  1340,  1341,    35,
    1342,  1343,  1344,  1345,  1346,  1347,     0,     0,     0,     0,
    1314,     0,     0,    36,     0,  1315,   -39,     0,  1316,     0,
       0,     0,  1317,  1318,  1319,  1320,  1321,     0,     0,     0,
       0,     0,     0,  2255,     0,     0,     0,  2852,     0,     0,
       0,  1322,  2259,     0,  1323,  2260,     0,     0,  2262,  1324,
       0,     0,     0,     0,     0,     0,  1325,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2877,  2283,  2284,     0,     0,  1757,
       0,  1326,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2295,     0,     0,     0,     0,  1327,     0,     0,     0,
    2302,     0,     0,  2305,     0,  2307,     0,     0,     0,     0,
       0,     0,  1328,  2311,     0,     0,     0,  1329,     0,     0,
       0,  2318,  2319,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1330,
    1331,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2358,     0,     0,  1332,     0,     0,     0,     0,     0,
       0,  2366,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1350,     0,     0,     0,     0,     0,  2379,     0,     0,
       0,     0,  1327,     0,     0,     0,     0,     0,     0,     0,
    1350,     0,  1333,     0,     0,  1334,     0,     0,  1328,     0,
       0,     0,     0,  1329,     0,     0,     0,     0,  1350,  1335,
    1648,  1648,  1336,  2011,     0,  1648,     0,     0,     0,  1350,
    1246,     0,  1350,     0,     0,  1330,  1331,  1350,     0,     0,
    1350,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1332,     0,  1350,     0,     0,     0,  1350,  1350,  1350,  1350,
    1350,  1350,     0,     0,     0,     0,     0,  1648,  1648,     0,
    1350,  1350,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1350,     0,     0,  1350,     0,     0,  1333,     0,
       0,  1334,     0,  1350,  1350,  1350,  1350,  1350,  1350,  1350,
    1350,  1350,  1350,     0,     0,  1335,     0,     0,  1336,     0,
       0,  1337,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2515,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1350,     0,  1315,     0,     0,  1316,
       0,     0,     0,     0,  1318,  1319,  1320,  1321,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1324,     0,     0,  2528,  2529,     0,     0,  1325,  2530,     0,
       0,     0,     0,  2533,     0,     0,  2536,  2537,     0,     0,
       0,  2541,     0,     0,     0,     0,     0,  1337,     0,     0,
       0,     0,  1326,     0,     0,     0,     0,     0,     0,     0,
       0,  1338,     0,     0,  1339,  1340,  1341,     0,  1342,  1343,
    1344,  1345,  1346,  1347,     0,     0,     0,     0,     0,     0,
       0,  1985,     0,     0,     0,     0,     0,   898,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1350,  1350,  1350,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1246,     0,     0,     0,     0,
    1246,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2628,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1338,     0,     0,
    1339,  1340,  1341,  1327,  1342,  1343,  1344,  1345,  1346,  1347,
       0,     0,  1574,  1576,     0,     0,     0,     0,     0,  1328,
       0,     0,     0,     0,  1329,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0, -1763, -1763,     0,  1350,
       0,     0,     0,     0,     0,  1350,     0,     0,     0,     0,
       0,  1332,     0,     0,     0,     0,     0,     0,  2011,  2011,
    1350,     0,  1648,  1648,  1648,  1648,  1648,     0,     0,  1648,
    1648,  1648,  1648,  1648,  1648,  1648,  1648,  1648,  1648,  2011,
       0,     0,     0,     0,     0,  2032,     0,     0,     0,     0,
       0,     0, -1763,     0,  2684,  2685,     0,     0,  2686,  1350,
       0,     0,  1350,     0,  1350,     0,  1335,     0,  2011,  2011,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1350,  1648,  1648,  1350,     0,  1350,     0,     0,
       0,     0,     0,     0,     0,  2728,  2729,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2743,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1574,  1576,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1246,
       0,     0,     0,     0,     0,     0,     0,     0,  1337,     0,
       0,     0,     0,  1350,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1315,     0,     0,  1316,
       0,     0,     0,  1317,  1318,  1319,  1320,  1321,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1322,     0,     0,  2299,     0,     0,     0,     0,
    1324,     0,     0,  2822,     0,     0,     0,  1325,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1299,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1326,     0,   898,  1350,     0,  2844,  1338,     0,
       0,  1339,  1340,  1341,     0,  1342,  1343,  1344,  1345,  1346,
    1347,     0,  2858,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1350,     0,     0,     0,  1350,  1350,     0,  1350,
       0,     0,  2011,  2011,  2011,  2011,  2011,     0,     0,     0,
    2011,  2011,  2011,  2011,  2011,  2011,  2011,  2011,  2011,  2011,
    1350,  1350,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1350,     0,     0,     0,     0,     0,     0,  1350,
       0,     0,  1350,     0,  1350,     0,     0,     0,  1350,     0,
       0,  2011,  2011,     0,     0,  1350,  1350,     0,     0,     0,
       0,     0,     0,  1327,     0,  2728,     0,     0,     0,  2905,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1328,
       0,     0,     0,     0,  1329,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1350,     0,  2928,     0,     0,
       0,     0,     0,  1350,     0,     0,  1330,  1331,     0,     0,
       0,     0,     0,     0,     0,     0,  1350,     0,     0,     0,
       0,  1332,     0,     0,  1315,     0,     0,  1316,     0,     0,
    2728,  1317,  1318,  1319,  1320,  1321,     0,     0,  1246,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1322,     0,     0,     0,     0,     0,     0,     0,  1324,  1333,
       0,     0,  1334,     0,     0,  1325,     0,     0,     0,     0,
    2978,  2978,     0,     0,     0,     0,  1335,     0,     0,  1336,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1326,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2978,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2978,  1350,     0,     0,     0,  1648,     0,     0,     0,
       0,     0,     0,     0,     0,  1350,  1350,  1350,  1337,     0,
    1350,     0,     0,  1350,  1350,     0,     0,     0,  1350,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1327,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1328,     0,     0,
       0,     0,  1329,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1330,  1331,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1648,     0,     0,  1332,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1350,     0,     0,  1338,     0,
       0,  1339,  1340,  1341,     0,  1342,  1343,  1344,  1345,  1346,
    1347,     0,     0,     0,     0,  1669,     0,  1333,     0,     0,
    1334,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1335,     0,     0,  1336,     0,     0,
       0,     0,     0,     0,     0,  2011,  1648,     0,     0,     0,
       0,  1350,  1350,  1350,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1350,  1350,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1350,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2011,     0,     0,     0,  1337,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2011,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1350,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1350,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1350,  1338,     0,     0,  1339,
    1340,  1341,     0,  1342,  1343,  1344,  1345,  1346,  1347,     0,
       0,     0,     0,  1669,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1015,   818,   547,   819,   820,   821,   822,   823,     0,
       0,     0,  1350,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,  1016,   102,   103,   104,
       0,     0,     0,     0,   824,  1350,     0,   105,   106,     0,
     107,   108,   109,  1017,   111,   112,   113,   114,   825,  1018,
     826,   827,     0,   119,   120,   121,   122,   123,   124,   828,
     829,   125,   126,   830,   831,   129,     0,   130,   131,   132,
     133,   832,     0,  1019,     0,   136,   137,   138,   139,   140,
     141,  1020,   143,   144,   145,  1350,   146,   147,   148,   149,
     150,   151,     0,  1021,   153,   154,   155,   834,   835,   836,
    1022,   838,   839,   840,   157,   158,   159,   160,   161,   162,
     163,   841,   842,   166,   843,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,  1023,
       0,   179,   180,   678,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   844,
     195,   196,   197,   198,   199,   845,   846,   201,     0,   202,
     203,   847,   205,     0,   206,     0,   207,  1024,     0,  1025,
     210,   211,   212,  1026,   214,     0,   215,     0,   848,   849,
     218,     0,   219,   220,   221,   222,   223,   224,   225,  1027,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,  1028,   239,   240,   241,   242,   243,   244,
     850,   851,     0,   852,     0,   248,  1029,  1030,   251,  1031,
     253,   254,   255,   256,   257,   258,     0,     0,   259,  1032,
     261,  1033,     0,   263,   264,   265,   853,   854,   266,   267,
     268,   269,   270,  1034,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   855,  1035,   856,   293,   294,   295,   296,   857,
     297,   298,  1036,   300,   858,   859,   302,   860,   304,   305,
     306,     0,   307,   308,     0,     0,   861,   310,   311,     0,
       0,   312,   313,  1037,   315,  1038,   862,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     863,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   864,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
    1039,   367,   368,   369,   865,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,   866,   387,   388,   389,   390,   391,  1040,   393,
     394,   867,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,  1041,   409,   868,   411,     0,
     412,   413,     0,   414,  1042,   416,   417,   418,   419,   420,
       0,   869,   870,     0,     0,   423,   424,   871,   426,   872,
     873,   428,   429,  1043,   431,   432,   433,   434,   435,     0,
       0,   436,   437,   438,   439,   440,   875,     0,   441,   442,
     443,   444,   445,   446,   876,  1044,   448,  1045,   450,   451,
     452,   453,     0,     0,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   877,     0,
       0,     0,     0,     0,     0,   878,   879,  1046,     0,     0,
       0,     0,   881,     0,   882,  1047,     0,     0,     0,   883,
       0,   884,   885,    93,   818,   547,   819,   820,   821,   822,
     823,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,     0,     0,     0,     0,   824,     0,     0,   105,
     106,     0,   107,   108,   109,   110,   111,   112,   113,   114,
     825,   116,   826,   827,     0,   119,   120,   121,   122,   123,
     124,   828,   829,   125,   126,   830,   831,   129,     0,   130,
     131,   132,   133,   832,     0,   833,     0,   136,   137,   138,
     139,   140,   141,   142,   143,   144,   145,     0,   146,   147,
     148,   149,   150,   151,     0,   152,   153,   154,   155,   834,
     835,   836,   837,   838,   839,   840,   157,   158,   159,   160,
     161,   162,   163,   841,   842,   166,   843,   167,     0,   168,
     169,   170,   171,   172,   173,     0,   174,   175,   176,   177,
     178,     0,     0,   179,   180,   678,   182,   183,     0,   184,
     185,   186,     0,   187,   188,   189,     0,   190,   191,   192,
     193,   844,   195,   196,   197,   198,   199,   845,   846,   201,
       0,   202,   203,   847,   205,     0,   206,     0,   207,   208,
       0,   209,   210,   211,   212,   213,   214,     0,   215,     0,
     848,   849,   218,     0,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,     0,   231,   232,   233,
     234,   235,   236,     0,   237,   238,   239,   240,   241,   242,
     243,   244,   850,   851,     0,   852,     0,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,     0,     0,
     259,   260,   261,   262,     0,   263,   264,   265,   853,   854,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   855,   291,   856,   293,   294,   295,
     296,   857,   297,   298,   299,   300,   858,   859,   302,   860,
     304,   305,   306,     0,   307,   308,     0,     0,   861,   310,
     311,     0,     0,   312,   313,   314,   315,   316,   862,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,     0,
     328,   329,   863,   331,   332,   333,   334,   335,   336,     0,
     337,   338,   339,   340,   341,   342,     0,   343,   344,   345,
     864,   347,   348,   349,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,     0,
     364,   365,   366,   367,   368,   369,   865,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,    26,   382,
     383,   384,   385,   386,   866,   387,   388,   389,   390,   391,
     392,   393,   394,   867,   396,     0,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   868,
     411,     0,   412,   413,    31,   414,   415,   416,   417,   418,
     419,   420,     0,   869,   870,     0,     0,   423,   424,   871,
     426,   872,   873,   428,   429,   874,   431,   432,   433,   434,
     435,     0,     0,   436,   437,   438,   439,   440,   875,     0,
     441,   442,   443,   444,   445,   575,   876,     0,   448,   449,
     450,   451,   452,   453,     0,     0,   454,     0,    34,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     877,     0,    35,     0,     0,     0,     0,   878,   879,     0,
       0,     0,     0,     0,   881,     0,   882,  2834,     0,     0,
       0,   883,     0,   884,   885,    93,   818,   547,   819,   820,
     821,   822,   823,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,     0,     0,     0,     0,   824,     0,
       0,   105,   106,     0,   107,   108,   109,   110,   111,   112,
     113,   114,   825,   116,   826,   827,     0,   119,   120,   121,
     122,   123,   124,   828,   829,   125,   126,   830,   831,   129,
       0,   130,   131,   132,   133,   832,     0,   833,     0,   136,
     137,   138,   139,   140,   141,   142,   143,   144,   145,     0,
     146,   147,   148,   149,   150,   151,     0,   152,   153,   154,
     155,   834,   835,   836,   837,   838,   839,   840,   157,   158,
     159,   160,   161,   162,   163,   841,   842,   166,   843,   167,
       0,   168,   169,   170,   171,   172,   173,     0,   174,   175,
     176,   177,   178,     0,     0,   179,   180,   678,   182,   183,
       0,   184,   185,   186,     0,   187,   188,   189,     0,   190,
     191,   192,   193,   844,   195,   196,   197,   198,   199,   845,
     846,   201,     0,   202,   203,   847,   205,     0,   206,     0,
     207,   208,     0,   209,   210,   211,   212,   213,   214,     0,
     215,     0,   848,   849,   218,     0,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,     0,   231,
     232,   233,   234,   235,   236,     0,   237,   238,   239,   240,
     241,   242,   243,   244,   850,   851,     0,   852,     0,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
       0,     0,   259,   260,   261,   262,     0,   263,   264,   265,
     853,   854,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   855,   291,   856,   293,
     294,   295,   296,   857,   297,   298,   299,   300,   858,   859,
     302,   860,   304,   305,   306,     0,   307,   308,     0,     0,
     861,   310,   311,     0,     0,   312,   313,   314,   315,   316,
     862,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   863,   331,   332,   333,   334,   335,
     336,     0,   337,   338,   339,   340,   341,   342,     0,   343,
     344,   345,   864,   347,   348,   349,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,     0,   364,   365,   366,   367,   368,   369,   865,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      26,   382,   383,   384,   385,   386,   866,   387,   388,   389,
     390,   391,   392,   393,   394,   867,   396,     0,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   868,   411,     0,   412,   413,    31,   414,   415,   416,
     417,   418,   419,   420,     0,   869,   870,     0,     0,   423,
     424,   871,   426,   872,   873,   428,   429,   874,   431,   432,
     433,   434,   435,     0,     0,   436,   437,   438,   439,   440,
     875,     0,   441,   442,   443,   444,   445,   575,   876,     0,
     448,   449,   450,   451,   452,   453,     0,     0,   454,     0,
      34,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   877,     0,    35,     0,     0,     0,     0,   878,
     879,     0,     0,     0,     0,     0,   881,     0,   882,     0,
       0,     0,     0,   883,     0,   884,   885,    93,   818,   547,
     819,   820,   821,   822,   823,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,     0,     0,     0,     0,
     824,     0,     0,   105,   106,     0,   107,   108,   109,   110,
     111,   112,   113,   114,   825,   116,   826,   827,  1656,   119,
     120,   121,   122,   123,   124,   828,   829,   125,   126,   830,
     831,   129,     0,   130,   131,   132,   133,   832,     0,   833,
       0,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,     0,   146,   147,   148,   149,   150,   151,     0,   152,
     153,   154,   155,   834,   835,   836,   837,   838,   839,   840,
     157,   158,   159,   160,   161,   162,   163,   841,   842,   166,
     843,   167,     0,   168,   169,   170,   171,   172,   173,     0,
     174,   175,   176,   177,   178,     0,     0,   179,   180,   678,
     182,   183,     0,   184,   185,   186,     0,   187,   188,   189,
       0,   190,   191,   192,   193,   844,   195,   196,   197,   198,
     199,   845,   846,   201,     0,   202,   203,   847,   205,     0,
     206,     0,   207,   208,  1657,   209,   210,   211,   212,   213,
     214,     0,   215,     0,   848,   849,   218,     0,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
       0,   231,   232,   233,   234,   235,   236,     0,   237,   238,
     239,   240,   241,   242,   243,   244,   850,   851,     0,   852,
       0,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,     0,  1658,   259,   260,   261,   262,     0,   263,
     264,   265,   853,   854,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   855,   291,
     856,   293,   294,   295,   296,   857,   297,   298,   299,   300,
     858,   859,   302,   860,   304,   305,   306,     0,   307,   308,
       0,     0,   861,   310,   311,     0,     0,   312,   313,   314,
     315,   316,   862,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   863,   331,   332,   333,
     334,   335,   336,     0,   337,   338,   339,   340,   341,   342,
       0,   343,   344,   345,   864,   347,   348,   349,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,     0,   364,   365,   366,   367,   368,   369,
     865,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,     0,   382,   383,   384,   385,   386,   866,   387,
     388,   389,   390,   391,   392,   393,   394,   867,   396,     0,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   868,   411,     0,   412,   413,     0,   414,
     415,   416,   417,   418,   419,   420,     0,   869,   870,     0,
    1659,   423,   424,   871,   426,   872,   873,   428,   429,   874,
     431,   432,   433,   434,   435,     0,     0,   436,   437,   438,
     439,   440,   875,     0,   441,   442,   443,   444,   445,   446,
     876,     0,   448,   449,   450,   451,   452,   453,     0,     0,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   877,     0,     0,     0,     0,     0,
       0,   878,   879,     0,     0,     0,     0,     0,   881,     0,
     882,     0,     0,     0,     0,   883,     0,   884,   885,    93,
     818,   547,   819,   820,   821,   822,   823,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,  -954,   102,   103,   104,     0,     0,
       0,  -954,   824,     0,     0,   105,   106,     0,   107,   108,
     109,   110,   111,   112,   113,   114,   825,   116,   826,   827,
       0,   119,   120,   121,   122,   123,   124,   828,   829,   125,
     126,   830,   831,   129,     0,   130,   131,   132,   133,   832,
       0,   833,     0,   136,   137,   138,   139,   140,   141,   142,
     143,   144,   145,     0,   146,   147,   148,   149,   150,   151,
       0,   152,   153,   154,   155,   834,   835,   836,   837,   838,
     839,   840,   157,   158,   159,   160,   161,   162,   163,   841,
     842,   166,   843,   167,     0,   168,   169,   170,   171,   172,
     173,     0,   174,   175,   176,   177,   178,     0,     0,   179,
     180,   678,   182,   183,     0,   184,   185,   186,     0,   187,
     188,   189,     0,   190,   191,   192,   193,   844,   195,   196,
     197,   198,   199,   845,   846,   201,     0,   202,   203,   847,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,   213,   214,     0,   215,     0,   848,   849,   218,     0,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,     0,   231,   232,   233,   234,   235,   236,     0,
     237,   238,   239,   240,   241,   242,   243,   244,   850,   851,
       0,   852,     0,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,     0,     0,   259,   260,   261,   262,
       0,   263,   264,   265,   853,   854,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     855,   291,   856,   293,   294,   295,   296,   857,   297,   298,
     299,   300,   858,   859,   302,   860,   304,   305,   306,     0,
     307,   308,     0,     0,   861,   310,   311,     0,     0,   312,
     313,   314,   315,   316,   862,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,     0,   328,   329,   863,   331,
     332,   333,   334,   335,   336,     0,   337,   338,   339,   340,
     341,   342,     0,   343,   344,   345,   864,   347,   348,   349,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,     0,   364,   365,   366,   367,
     368,   369,   865,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,     0,   382,   383,   384,   385,   386,
     866,   387,   388,   389,   390,   391,   392,   393,   394,   867,
     396,  -954,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   868,   411,     0,   412,   413,
       0,   414,   415,   416,   417,   418,   419,   420,     0,   869,
     870,     0,     0,   423,   424,   871,   426,   872,   873,   428,
     429,   874,   431,   432,   433,   434,   435,     0,     0,   436,
     437,   438,   439,   440,   875,     0,   441,   442,   443,   444,
     445,   446,   876,     0,   448,   449,   450,   451,   452,   453,
       0,     0,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   877,     0,     0,     0,
       0,     0,     0,   878,   879,     0,     0,     0,     0,     0,
     881,     0,   882,     0,     0,     0,     0,   883,     0,   884,
     885,    93,   818,   547,   819,   820,   821,   822,   823,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,  1395,   102,   103,   104,
       0,     0,     0,     0,   824,     0,     0,   105,   106,     0,
     107,   108,   109,   110,   111,   112,   113,   114,   825,   116,
     826,   827,     0,   119,   120,   121,   122,   123,   124,   828,
     829,   125,   126,   830,   831,   129,     0,   130,   131,   132,
     133,   832,     0,   833,     0,   136,   137,   138,   139,   140,
     141,   142,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,   152,   153,   154,   155,   834,   835,   836,
     837,   838,   839,   840,   157,   158,   159,   160,   161,   162,
     163,   841,   842,   166,   843,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   678,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   844,
     195,   196,   197,   198,   199,   845,   846,   201,     0,   202,
     203,   847,   205,     0,   206,     0,   207,   208,     0,   209,
     210,   211,   212,   213,   214,     0,   215,     0,   848,   849,
     218,     0,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,   238,   239,   240,   241,   242,   243,   244,
     850,   851,     0,   852,     0,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,     0,     0,   259,   260,
     261,   262,     0,   263,   264,   265,   853,   854,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   855,   291,   856,   293,   294,   295,   296,   857,
     297,   298,   299,   300,   858,   859,   302,   860,   304,   305,
     306,     0,   307,   308,     0,     0,   861,   310,   311,     0,
       0,   312,   313,   314,   315,   316,   862,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     863,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   864,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
     366,   367,   368,   369,   865,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,   866,   387,   388,   389,   390,   391,   392,   393,
     394,   867,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   868,   411,     0,
     412,   413,     0,   414,   415,   416,   417,   418,   419,   420,
       0,   869,   870,     0,     0,   423,   424,   871,   426,   872,
     873,   428,   429,   874,   431,   432,   433,   434,   435,     0,
       0,   436,   437,   438,   439,   440,   875,     0,   441,   442,
     443,   444,   445,   446,   876,     0,   448,   449,   450,   451,
     452,   453,     0,     0,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   877,     0,
       0,     0,     0,     0,     0,   878,   879,  1396,     0,     0,
       0,     0,   881,     0,   882,     0,     0,     0,     0,   883,
       0,   884,   885,    93,   818,   547,   819,   820,   821,   822,
     823,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,  2715,   102,
     103,   104,     0,     0,     0,     0,   824,     0,     0,   105,
     106,     0,   107,   108,   109,   110,   111,   112,   113,   114,
     825,   116,   826,   827,     0,   119,   120,   121,   122,   123,
     124,   828,   829,   125,   126,   830,   831,   129,     0,   130,
     131,   132,   133,   832,     0,   833,     0,   136,   137,   138,
     139,   140,   141,   142,   143,   144,   145,     0,   146,   147,
     148,   149,   150,   151,     0,   152,   153,  2716,   155,   834,
     835,   836,   837,   838,   839,   840,   157,   158,   159,   160,
     161,   162,   163,   841,   842,   166,   843,   167,     0,   168,
     169,   170,   171,   172,   173,     0,   174,   175,   176,   177,
     178,     0,     0,   179,   180,   678,   182,   183,     0,   184,
     185,   186,     0,   187,   188,   189,     0,   190,   191,   192,
     193,   844,   195,   196,   197,   198,   199,   845,   846,   201,
       0,   202,   203,   847,   205,     0,   206,     0,   207,   208,
       0,   209,   210,   211,   212,   213,   214,     0,   215,     0,
    2717,   849,   218,     0,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,     0,   231,   232,   233,
     234,   235,   236,     0,   237,   238,   239,   240,   241,   242,
     243,   244,   850,   851,     0,   852,     0,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,     0,     0,
     259,   260,   261,   262,     0,   263,   264,   265,   853,   854,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   855,   291,   856,   293,   294,   295,
     296,   857,   297,   298,   299,   300,   858,   859,   302,   860,
     304,   305,   306,     0,   307,   308,     0,     0,   861,   310,
     311,     0,     0,   312,   313,   314,   315,   316,   862,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,     0,
     328,   329,   863,   331,   332,   333,   334,   335,   336,     0,
     337,   338,   339,   340,   341,   342,     0,   343,   344,   345,
     864,   347,   348,   349,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,     0,
     364,   365,   366,   367,   368,  2718,   865,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,     0,   382,
     383,   384,   385,   386,   866,   387,   388,   389,   390,   391,
     392,   393,   394,   867,   396,     0,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   868,
     411,     0,   412,   413,     0,   414,   415,   416,   417,   418,
     419,   420,     0,   869,   870,     0,     0,   423,   424,   871,
     426,   872,   873,   428,   429,   874,   431,   432,   433,   434,
     435,     0,     0,   436,   437,   438,   439,   440,   875,     0,
     441,   442,   443,   444,   445,   446,   876,     0,   448,   449,
     450,   451,   452,   453,     0,     0,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     877,     0,     0,     0,     0,     0,     0,   878,   879,  2719,
       0,     0,     0,     0,   881,     0,  2720,     0,     0,     0,
       0,   883,     0,   884,   885,    93,   818,   547,   819,   820,
     821,   822,   823,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,     0,     0,     0,     0,   824,     0,
       0,   105,   106,     0,   107,   108,   109,   110,   111,   112,
     113,   114,   825,   116,   826,   827,     0,   119,   120,   121,
     122,   123,   124,   828,   829,   125,   126,   830,   831,   129,
       0,   130,   131,   132,   133,   832,     0,   833,     0,   136,
     137,   138,   139,   140,   141,   142,   143,   144,   145,     0,
     146,   147,   148,   149,   150,   151,     0,   152,   153,   154,
     155,   834,   835,   836,   837,   838,   839,   840,   157,   158,
     159,   160,   161,   162,   163,   841,   842,   166,   843,   167,
       0,   168,   169,   170,   171,   172,   173,     0,   174,   175,
     176,   177,   178,     0,     0,   179,   180,   678,   182,   183,
       0,   184,   185,   186,     0,   187,   188,   189,     0,   190,
     191,   192,   193,   844,   195,   196,   197,   198,   199,   845,
     846,   201,     0,   202,   203,   847,   205,     0,   206,     0,
     207,   208,     0,   209,   210,   211,   212,   213,   214,     0,
     215,     0,   848,   849,   218,     0,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,     0,   231,
     232,   233,   234,   235,   236,     0,   237,   238,   239,   240,
     241,   242,   243,   244,   850,   851,     0,   852,     0,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
       0,     0,   259,   260,   261,   262,     0,   263,   264,   265,
     853,   854,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   855,   291,   856,   293,
     294,   295,   296,   857,   297,   298,   299,   300,   858,   859,
     302,   860,   304,   305,   306,     0,   307,   308,     0,     0,
     861,   310,   311,     0,     0,   312,   313,   314,   315,   316,
     862,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   863,   331,   332,   333,   334,   335,
     336,     0,   337,   338,   339,   340,   341,   342,     0,   343,
     344,   345,   864,   347,   348,   349,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,     0,   364,   365,   366,   367,   368,   369,   865,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
       0,   382,   383,   384,   385,   386,   866,   387,   388,   389,
     390,   391,   392,   393,   394,   867,   396,     0,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   868,   411,     0,   412,   413,     0,   414,   415,   416,
     417,   418,   419,   420,     0,   869,   870,     0,     0,   423,
     424,   871,   426,   872,   873,   428,   429,   874,   431,   432,
     433,   434,   435,     0,     0,   436,   437,   438,   439,   440,
     875,     0,   441,   442,   443,   444,   445,   446,   876,     0,
     448,   449,   450,   451,   452,   453,     0,     0,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   877,     0,     0,     0,     0,     0,     0,   878,
     879,   880,     0,     0,     0,     0,   881,     0,   882,     0,
       0,     0,     0,   883,     0,   884,   885,    93,  1409,   547,
     819,   820,   821,  1410,   823,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,  1411,   102,   103,   104,     0,     0,     0,     0,
     824,     0,     0,   105,   106,     0,   107,   108,   109,   110,
     111,   112,   113,   114,   825,   116,   826,   827,     0,   119,
     120,   121,   122,   123,   124,   828,   829,   125,   126,   830,
     831,   129,     0,   130,   131,   132,   133,   832,     0,   833,
       0,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,     0,   146,   147,   148,   149,   150,   151,     0,   152,
     153,   154,   155,   834,   835,   836,   837,   838,   839,   840,
     157,   158,   159,   160,   161,   162,   163,   841,   842,   166,
     843,   167,     0,   168,   169,   170,   171,   172,   173,     0,
     174,   175,   176,   177,   178,     0,     0,   179,   180,   678,
     182,   183,     0,   184,   185,   186,     0,   187,   188,   189,
       0,   190,   191,   192,   193,   844,   195,   196,   197,   198,
     199,   845,   846,   201,     0,   202,   203,   847,   205,     0,
     206,     0,   207,   208,     0,   209,   210,   211,   212,   213,
     214,     0,   215,     0,   848,   849,   218,     0,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
       0,   231,   232,   233,   234,   235,   236,     0,   237,   238,
     239,   240,   241,   242,   243,   244,   850,   851,     0,   852,
       0,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,     0,     0,   259,   260,   261,   262,     0,   263,
     264,   265,   853,   854,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   855,   291,
     856,   293,   294,   295,   296,   857,   297,   298,   299,   300,
     858,   859,   302,   860,   304,   305,   306,     0,   307,   308,
       0,     0,   861,   310,   311,     0,     0,   312,   313,   314,
     315,   316,   862,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   863,   331,   332,   333,
     334,   335,   336,     0,   337,   338,   339,   340,   341,   342,
       0,   343,   344,   345,   864,   347,   348,   349,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,     0,   364,   365,   366,   367,   368,   369,
     865,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,     0,   382,   383,   384,   385,   386,   866,   387,
     388,   389,   390,   391,   392,   393,   394,   867,   396,     0,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   868,   411,     0,   412,   413,     0,   414,
     415,   416,   417,   418,   419,   420,     0,   869,   870,     0,
       0,   423,   424,   871,   426,   872,   873,   428,   429,   874,
     431,   432,   433,   434,   435,     0,     0,   436,   437,   438,
     439,   440,   875,     0,   441,   442,   443,   444,   445,   446,
     876,     0,   448,   449,   450,   451,   452,   453,     0,     0,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   877,     0,     0,     0,     0,     0,
       0,   878,   879,     0,     0,     0,     0,     0,   881,     0,
     882,     0,     0,     0,     0,   883,     0,   884,   885,    93,
     818,   547,   819,   820,   821,   822,   823,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,     0,   102,   103,   104,     0,     0,
       0,     0,   824,     0,     0,   105,   106,     0,   107,   108,
     109,   110,   111,   112,   113,   114,   825,   116,   826,   827,
       0,   119,   120,   121,   122,   123,   124,   828,   829,   125,
     126,   830,   831,   129,     0,   130,   131,   132,   133,   832,
       0,   833,     0,   136,   137,   138,   139,   140,   141,   142,
     143,   144,   145,     0,   146,   147,   148,   149,   150,   151,
       0,   152,   153,   154,   155,   834,   835,   836,   837,   838,
     839,   840,   157,   158,   159,   160,   161,   162,   163,   841,
     842,   166,   843,   167,     0,   168,   169,   170,   171,   172,
     173,     0,   174,   175,   176,   177,   178,     0,     0,   179,
     180,   678,   182,   183,     0,   184,   185,   186,     0,   187,
     188,   189,     0,   190,   191,   192,   193,   844,   195,   196,
     197,   198,   199,   845,   846,   201,     0,   202,   203,   847,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,   213,   214,     0,   215,     0,   848,   849,   218,     0,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,     0,   231,   232,   233,   234,   235,   236,     0,
     237,   238,   239,   240,   241,   242,   243,   244,   850,   851,
       0,   852,     0,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,     0,     0,   259,   260,   261,   262,
       0,   263,   264,   265,   853,   854,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     855,   291,   856,   293,   294,   295,   296,   857,   297,   298,
     299,   300,   858,   859,   302,   860,   304,   305,   306,     0,
     307,   308,     0,     0,   861,   310,   311,     0,     0,   312,
     313,   314,   315,   316,   862,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,     0,   328,   329,   863,   331,
     332,   333,   334,   335,   336,     0,   337,   338,   339,   340,
     341,   342,     0,   343,   344,   345,   864,   347,   348,   349,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,     0,   364,   365,   366,   367,
     368,   369,   865,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,     0,   382,   383,   384,   385,   386,
     866,   387,   388,   389,   390,   391,   392,   393,   394,   867,
     396,     0,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   868,   411,     0,   412,   413,
       0,   414,   415,   416,   417,   418,   419,   420,     0,   869,
     870,     0,     0,   423,   424,   871,   426,   872,   873,   428,
     429,   874,   431,   432,   433,   434,   435,     0,     0,   436,
     437,   438,   439,   440,   875,     0,   441,   442,   443,   444,
     445,   446,   876,     0,   448,   449,   450,   451,   452,   453,
       0,     0,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   877,     0,     0,     0,
       0,     0,     0,   878,   879,     0,     0,     0,     0,     0,
     881,     0,   882,  1650,     0,     0,     0,   883,     0,   884,
     885,  1015,   818,   547,   819,   820,   821,   822,   823,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,   824,     0,     0,   105,   106,     0,
     107,   108,   109,  1017,   111,   112,   113,   114,   825,  1018,
     826,   827,     0,   119,   120,   121,   122,   123,   124,   828,
     829,   125,   126,   830,   831,   129,     0,   130,   131,   132,
     133,   832,     0,  1019,     0,   136,   137,   138,   139,   140,
     141,  1020,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,  1021,   153,   154,   155,   834,   835,   836,
    1022,   838,   839,   840,   157,   158,   159,   160,   161,   162,
     163,   841,   842,   166,   843,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   678,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   844,
     195,   196,   197,   198,   199,   845,   846,   201,     0,   202,
     203,   847,   205,     0,   206,     0,   207,  1024,     0,  1025,
     210,   211,   212,  1026,   214,     0,   215,     0,   848,   849,
     218,     0,   219,   220,   221,   222,   223,   224,   225,  1027,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,  1028,   239,   240,   241,   242,   243,   244,
     850,   851,     0,   852,     0,   248,  1029,  1030,   251,  1031,
     253,   254,   255,   256,   257,   258,     0,     0,   259,  1032,
     261,  1033,     0,   263,   264,   265,   853,   854,   266,   267,
     268,   269,   270,  1034,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   855,  1035,   856,   293,   294,   295,   296,   857,
     297,   298,  1036,   300,   858,   859,   302,   860,   304,   305,
     306,     0,   307,   308,     0,     0,   861,   310,   311,     0,
       0,   312,   313,  1037,   315,  1038,   862,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     863,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   864,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
    1039,   367,   368,   369,   865,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,   866,   387,   388,   389,   390,   391,  1040,   393,
     394,   867,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,  1041,   409,   868,   411,     0,
     412,   413,     0,   414,  1042,   416,   417,   418,   419,   420,
       0,   869,   870,     0,     0,   423,   424,   871,   426,   872,
     873,   428,   429,  1043,   431,   432,   433,   434,   435,     0,
       0,   436,   437,   438,   439,   440,   875,     0,   441,   442,
     443,   444,   445,   446,   876,  1871,   448,  1045,   450,   451,
     452,   453,     0,     0,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   877,     0,
       0,     0,     0,     0,     0,   878,   879,     0,     0,     0,
       0,     0,   881,     0,   882,     0,     0,     0,     0,   883,
       0,   884,   885,  1015,   818,   547,   819,   820,   821,   822,
     823,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,     0,     0,     0,     0,   824,     0,     0,   105,
     106,     0,   107,   108,   109,  1017,   111,   112,   113,   114,
     825,  1018,   826,   827,     0,   119,   120,   121,   122,   123,
     124,   828,   829,   125,   126,   830,   831,   129,     0,   130,
     131,   132,   133,   832,     0,  1019,     0,   136,   137,   138,
     139,   140,   141,  1020,   143,   144,   145,     0,   146,   147,
     148,   149,   150,   151,     0,  1021,   153,   154,   155,   834,
     835,   836,  1022,   838,   839,   840,   157,   158,   159,   160,
     161,   162,   163,   841,   842,   166,   843,   167,     0,   168,
     169,   170,   171,   172,   173,     0,   174,   175,   176,   177,
     178,     0,     0,   179,   180,   678,   182,   183,     0,   184,
     185,   186,     0,   187,   188,   189,     0,   190,   191,   192,
     193,   844,   195,   196,   197,   198,   199,   845,   846,   201,
       0,   202,   203,   847,   205,     0,   206,     0,   207,  1024,
       0,  1025,   210,   211,   212,  1026,   214,     0,   215,     0,
     848,   849,   218,     0,   219,   220,   221,   222,   223,   224,
     225,  1027,   227,   228,   229,   230,     0,   231,   232,   233,
     234,   235,   236,     0,   237,  1028,   239,   240,   241,   242,
     243,   244,   850,   851,     0,   852,     0,   248,  1029,  1030,
     251,  1031,   253,   254,   255,   256,   257,   258,     0,     0,
     259,  1032,   261,  1033,     0,   263,   264,   265,   853,   854,
     266,   267,   268,   269,   270,  1034,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   855,  1035,   856,   293,   294,   295,
     296,   857,   297,   298,  1036,   300,   858,   859,   302,   860,
     304,   305,   306,     0,   307,   308,     0,     0,   861,   310,
     311,     0,     0,   312,   313,  1037,   315,  1038,   862,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,     0,
     328,   329,   863,   331,   332,   333,   334,   335,   336,     0,
     337,   338,   339,   340,   341,   342,     0,   343,   344,   345,
     864,   347,   348,   349,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,     0,
     364,   365,  1039,   367,   368,   369,   865,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,     0,   382,
     383,   384,   385,   386,   866,   387,   388,   389,   390,   391,
    1040,   393,   394,   867,   396,     0,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,  1041,   409,   868,
     411,     0,   412,   413,     0,   414,  1042,   416,   417,   418,
     419,   420,     0,   869,   870,     0,     0,   423,   424,   871,
     426,   872,   873,   428,   429,  1043,   431,   432,   433,   434,
     435,     0,     0,   436,   437,   438,   439,   440,   875,     0,
     441,   442,   443,   444,   445,   446,   876,     0,   448,  1045,
     450,   451,   452,   453,     0,     0,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     877,     0,     0,     0,     0,     0,     0,   878,   879,     0,
       0,     0,     0,     0,   881,     0,   882,  1915,     0,     0,
       0,   883,     0,   884,   885,    93,   818,   547,   819,   820,
     821,   822,   823,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,     0,     0,     0,     0,   824,     0,
       0,   105,   106,     0,   107,   108,   109,   110,   111,   112,
     113,   114,   825,   116,   826,   827,     0,   119,   120,   121,
     122,   123,   124,   828,   829,   125,   126,   830,   831,   129,
       0,   130,   131,   132,   133,   832,     0,   833,     0,   136,
     137,   138,   139,   140,   141,   142,   143,   144,   145,     0,
     146,   147,   148,   149,   150,   151,     0,   152,   153,   154,
     155,   834,   835,   836,   837,   838,   839,   840,   157,   158,
     159,   160,   161,   162,   163,   841,   842,   166,   843,   167,
       0,   168,   169,   170,   171,   172,   173,     0,   174,   175,
     176,   177,   178,     0,     0,   179,   180,   678,   182,   183,
       0,   184,   185,   186,     0,   187,   188,   189,     0,   190,
     191,   192,   193,   844,   195,   196,   197,   198,   199,   845,
     846,   201,     0,   202,   203,   847,   205,     0,   206,     0,
     207,   208,  1657,   209,   210,   211,   212,   213,   214,     0,
     215,     0,   848,   849,   218,     0,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,     0,   231,
     232,   233,   234,   235,   236,     0,   237,   238,   239,   240,
     241,   242,   243,   244,   850,   851,     0,   852,     0,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
       0,     0,   259,   260,   261,   262,     0,   263,   264,   265,
     853,   854,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   855,   291,   856,   293,
     294,   295,   296,   857,   297,   298,   299,   300,   858,   859,
     302,   860,   304,   305,   306,     0,   307,   308,     0,     0,
     861,   310,   311,     0,     0,   312,   313,   314,   315,   316,
     862,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   863,   331,   332,   333,   334,   335,
     336,     0,   337,   338,   339,   340,   341,   342,     0,   343,
     344,   345,   864,   347,   348,   349,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,     0,   364,   365,   366,   367,   368,   369,   865,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
       0,   382,   383,   384,   385,   386,   866,   387,   388,   389,
     390,   391,   392,   393,   394,   867,   396,     0,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   868,   411,     0,   412,   413,     0,   414,   415,   416,
     417,   418,   419,   420,     0,   869,   870,     0,     0,   423,
     424,   871,   426,   872,   873,   428,   429,   874,   431,   432,
     433,   434,   435,     0,     0,   436,   437,   438,   439,   440,
     875,     0,   441,   442,   443,   444,   445,   446,   876,     0,
     448,   449,   450,   451,   452,   453,     0,     0,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   877,     0,     0,     0,     0,     0,     0,   878,
     879,     0,     0,     0,     0,     0,   881,     0,   882,     0,
       0,     0,     0,   883,     0,   884,   885,    93,   818,   547,
     819,   820,   821,   822,   823,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,     0,     0,     0,     0,
     824,     0,     0,   105,   106,     0,   107,   108,   109,   110,
     111,   112,   113,   114,   825,   116,   826,   827,     0,   119,
     120,   121,   122,   123,   124,   828,   829,   125,   126,   830,
     831,   129,     0,   130,   131,   132,   133,   832,     0,   833,
       0,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,     0,   146,   147,   148,   149,   150,   151,     0,   152,
     153,   154,   155,   834,   835,   836,   837,   838,   839,   840,
     157,   158,   159,   160,   161,   162,   163,   841,   842,   166,
     843,   167,     0,   168,   169,   170,   171,   172,   173,     0,
     174,   175,   176,   177,   178,     0,     0,   179,   180,   678,
     182,   183,     0,   184,   185,   186,     0,   187,   188,   189,
       0,   190,   191,   192,   193,   844,   195,   196,   197,   198,
     199,   845,   846,   201,     0,   202,   203,   847,   205,     0,
     206,     0,   207,   208,     0,   209,   210,   211,   212,   213,
     214,     0,   215,     0,   848,   849,   218,     0,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
       0,   231,   232,   233,   234,   235,   236,     0,   237,   238,
     239,   240,   241,   242,   243,   244,   850,   851,     0,   852,
       0,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,     0,     0,   259,   260,   261,   262,     0,   263,
     264,   265,   853,   854,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   855,   291,
     856,   293,   294,   295,   296,   857,   297,   298,   299,   300,
     858,   859,   302,   860,   304,   305,   306,     0,   307,   308,
       0,     0,   861,   310,   311,     0,     0,   312,   313,   314,
     315,   316,   862,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   863,   331,   332,   333,
     334,   335,   336,     0,   337,   338,   339,   340,   341,   342,
       0,   343,   344,   345,   864,   347,   348,   349,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,     0,   364,   365,   366,   367,   368,   369,
     865,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,     0,   382,   383,   384,   385,   386,   866,   387,
     388,   389,   390,   391,   392,   393,   394,   867,   396,     0,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   868,   411,     0,   412,   413,  2227,   414,
     415,   416,   417,   418,   419,   420,     0,   869,   870,     0,
       0,   423,   424,   871,   426,   872,   873,   428,   429,   874,
     431,   432,   433,   434,   435,     0,     0,   436,   437,   438,
     439,   440,   875,     0,   441,   442,   443,   444,   445,   446,
     876,     0,   448,   449,   450,   451,   452,   453,     0,     0,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   877,     0,     0,     0,     0,     0,
       0,   878,   879,     0,     0,     0,     0,     0,   881,     0,
     882,     0,     0,     0,     0,   883,     0,   884,   885,    93,
     818,   547,   819,   820,   821,   822,   823,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,     0,   102,   103,   104,     0,     0,
       0,     0,   824,     0,     0,   105,   106,     0,   107,   108,
     109,   110,   111,   112,   113,   114,   825,   116,   826,   827,
       0,   119,   120,   121,   122,   123,   124,   828,   829,   125,
     126,   830,   831,   129,     0,   130,   131,   132,   133,   832,
       0,   833,     0,   136,   137,   138,   139,   140,   141,   142,
     143,   144,   145,     0,   146,   147,   148,   149,   150,   151,
       0,   152,   153,   154,   155,   834,   835,   836,   837,   838,
     839,   840,   157,   158,   159,   160,   161,   162,   163,   841,
     842,   166,   843,   167,     0,   168,   169,   170,   171,   172,
     173,     0,   174,   175,   176,   177,   178,     0,     0,   179,
     180,   678,   182,   183,     0,   184,   185,   186,     0,   187,
     188,   189,     0,   190,   191,   192,   193,   844,   195,   196,
     197,   198,   199,   845,   846,   201,     0,   202,   203,   847,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,   213,   214,     0,   215,     0,   848,   849,   218,     0,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,     0,   231,   232,   233,   234,   235,   236,     0,
     237,   238,   239,   240,   241,   242,   243,   244,   850,   851,
       0,   852,     0,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,     0,     0,   259,   260,   261,   262,
       0,   263,   264,   265,   853,   854,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     855,   291,   856,   293,   294,   295,   296,   857,   297,   298,
     299,   300,   858,   859,   302,   860,   304,   305,   306,     0,
     307,   308,     0,     0,   861,   310,   311,     0,     0,   312,
     313,   314,   315,   316,   862,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,     0,   328,   329,   863,   331,
     332,   333,   334,   335,   336,     0,   337,   338,   339,   340,
     341,   342,     0,   343,   344,   345,   864,   347,   348,   349,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,     0,   364,   365,   366,   367,
     368,   369,   865,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,     0,   382,   383,   384,   385,   386,
     866,   387,   388,   389,   390,   391,   392,   393,   394,   867,
     396,     0,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   868,   411,     0,   412,   413,
       0,   414,   415,   416,   417,   418,   419,   420,     0,   869,
     870,     0,     0,   423,   424,   871,   426,   872,   873,   428,
     429,   874,   431,   432,   433,   434,   435,     0,     0,   436,
     437,   438,   439,   440,   875,     0,   441,   442,   443,   444,
     445,   446,   876,     0,   448,   449,   450,   451,   452,   453,
       0,     0,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   877,     0,     0,     0,
       0,     0,     0,   878,   879,     0,     0,     0,     0,     0,
     881,     0,   882,     0,     0,     0,     0,   883,     0,   884,
     885,  1015,   818,   547,   819,   820,   821,   822,   823,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,   824,     0,     0,   105,   106,     0,
     107,   108,   109,  1017,   111,   112,   113,   114,   825,  1018,
     826,   827,     0,   119,   120,   121,   122,   123,   124,   828,
     829,   125,   126,   830,   831,   129,     0,   130,   131,   132,
     133,   832,     0,  1019,     0,   136,   137,   138,   139,   140,
     141,  1020,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,  1021,   153,   154,   155,   834,   835,   836,
    1022,   838,   839,   840,   157,   158,   159,   160,   161,   162,
     163,   841,   842,   166,   843,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   678,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   844,
     195,   196,   197,   198,   199,   845,   846,   201,     0,   202,
     203,   847,   205,     0,   206,     0,   207,  1024,     0,  1025,
     210,   211,   212,  1026,   214,     0,   215,     0,   848,   849,
     218,     0,   219,   220,   221,   222,   223,   224,   225,  1027,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,  1028,   239,   240,   241,   242,   243,   244,
     850,   851,     0,   852,     0,   248,  1029,  1030,   251,  1031,
     253,   254,   255,   256,   257,   258,     0,     0,   259,  1032,
     261,  1033,     0,   263,   264,   265,   853,   854,   266,   267,
     268,   269,   270,  1034,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   855,  1035,   856,   293,   294,   295,   296,   857,
     297,   298,  1036,   300,   858,   859,   302,   860,   304,   305,
     306,     0,   307,   308,     0,     0,   861,   310,   311,     0,
       0,   312,   313,  1037,   315,  1038,   862,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     863,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   864,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
    1039,   367,   368,   369,   865,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,   866,   387,   388,   389,   390,   391,  1040,   393,
     394,   867,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,  1041,   409,   868,   411,     0,
     412,   413,     0,   414,  1042,   416,   417,   418,   419,   420,
       0,   869,   870,     0,     0,   423,   424,   871,   426,   872,
     873,   428,   429,  1043,   431,   432,   433,   434,   435,     0,
       0,   436,   437,   438,   439,   440,   875,     0,   441,   442,
     443,   444,   445,   446,   876,     0,   448,  1045,   450,   451,
     452,   453,     0,     0,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   877,     0,
       0,     0,     0,     0,     0,   878,   879,     0,     0,     0,
       0,     0,   881,     0,   882,     0,     0,     0,     0,   883,
       0,   884,   885,    93,   818,   547,   819,   820,   821,   822,
     823,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,     0,     0,     0,     0,   824,     0,     0,   105,
     106,     0,   107,   108,   109,   110,   111,   112,   113,   114,
     825,   116,   826,   827,     0,   119,   120,   121,   122,   123,
     124,   828,   829,   125,   126,   830,   831,   129,     0,   130,
     131,   132,   133,   832,     0,   833,     0,   136,   137,   138,
     139,   140,   141,   142,   143,   144,   145,     0,   146,   147,
     148,   149,   150,   151,     0,   152,   153,   154,   155,   834,
     835,   836,   837,   838,   839,   840,   157,   158,   159,   160,
     161,   162,   163,   841,   842,   166,   843,   167,     0,   168,
     169,   170,   171,   172,   173,     0,   174,   175,   176,   177,
     178,     0,     0,   179,   180,   678,   182,   183,     0,   184,
     185,   186,     0,   187,   188,   189,     0,   190,   191,   192,
     193,   844,   195,   196,   197,   198,   199,   845,   846,   201,
       0,   202,   203,   847,   205,     0,   206,     0,   207,   208,
       0,   209,   210,   211,   212,   213,   214,     0,   215,     0,
     848,   849,   218,     0,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,     0,   231,   232,   233,
     234,   235,   236,     0,   237,   238,   239,   240,   241,   242,
     243,   244,   850,   851,     0,   852,     0,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,     0,     0,
     259,   260,   261,   262,     0,   263,   264,   265,   853,   854,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   855,   291,   856,   293,   294,   295,
     296,   857,   297,   298,   299,   300,   858,   859,   302,   860,
     304,   305,   306,     0,   307,   308,     0,     0,   861,   310,
     311,     0,     0,   312,   313,   314,   315,   316,   862,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,     0,
     328,   329,   863,   331,   332,   333,   334,   335,   336,     0,
     337,   338,   339,   340,   341,   342,     0,   343,   344,   345,
     864,   347,   348,   349,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,     0,
     364,   365,   366,   367,   368,   369,   865,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,     0,   382,
     383,   384,   385,   386,   866,   387,   388,   389,   390,   391,
     392,   393,   394,   867,   396,     0,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   868,
     411,     0,   412,   413,     0,   414,   415,   416,   417,   418,
     419,   420,     0,   869,   870,     0,     0,   423,   424,   871,
     426,   872,   873,   428,   429,   874,   431,   432,   433,   434,
     435,     0,     0,   436,   437,   438,   439,   440,   875,     0,
     441,   442,   443,   444,   445,   446,   876,     0,   448,   449,
     450,   451,   452,   453,     0,     0,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     877,     0,     0,     0,     0,     0,     0,  1414,  1415,     0,
       0,     0,     0,     0,   881,     0,   882,     0,     0,     0,
       0,   883,     0,   884,   885,    93,  1796,   547,   819,   820,
     821,   822,   823,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,     0,     0,     0,     0,   824,     0,
       0,   105,   106,     0,   107,   108,   109,   110,   111,   112,
     113,   114,   825,   116,   826,   827,     0,   119,   120,   121,
     122,   123,   124,   828,   829,   125,   126,   830,   831,   129,
       0,   130,   131,   132,   133,   832,     0,   833,     0,   136,
     137,   138,   139,   140,   141,   142,   143,   144,   145,     0,
     146,   147,   148,   149,   150,   151,     0,   152,   153,   154,
     155,   834,   835,   836,   837,   838,   839,   840,   157,   158,
     159,   160,   161,   162,   163,   841,   842,   166,   843,   167,
       0,   168,   169,   170,   171,   172,   173,     0,   174,   175,
     176,   177,   178,     0,     0,   179,   180,   678,   182,   183,
       0,   184,   185,   186,     0,   187,   188,   189,     0,   190,
     191,   192,   193,   844,   195,   196,   197,   198,   199,   845,
     846,   201,     0,   202,   203,   847,   205,     0,   206,     0,
     207,   208,     0,   209,   210,   211,   212,   213,   214,     0,
     215,     0,   848,   849,   218,     0,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,     0,   231,
     232,   233,   234,   235,   236,     0,   237,   238,   239,   240,
     241,   242,   243,   244,   850,   851,     0,   852,     0,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
       0,     0,   259,   260,   261,   262,     0,   263,   264,   265,
     853,   854,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   855,   291,   856,   293,
     294,   295,   296,   857,   297,   298,   299,   300,   858,   859,
     302,   860,   304,   305,   306,     0,   307,   308,     0,     0,
     861,   310,   311,     0,     0,   312,   313,   314,   315,   316,
     862,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   863,   331,   332,   333,   334,   335,
     336,     0,   337,   338,   339,   340,   341,   342,     0,   343,
     344,   345,   864,   347,   348,   349,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,     0,   364,   365,   366,   367,   368,   369,   865,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
       0,   382,   383,   384,   385,   386,   866,   387,   388,   389,
     390,   391,   392,   393,   394,   867,   396,     0,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   868,   411,     0,   412,   413,     0,   414,   415,   416,
     417,   418,   419,   420,     0,   869,   870,     0,     0,   423,
     424,   871,   426,   872,   873,   428,   429,   874,   431,   432,
     433,   434,   435,     0,     0,   436,   437,   438,   439,   440,
     875,     0,   441,   442,   443,   444,   445,   446,   876,     0,
     448,   449,   450,   451,   452,   453,     0,     0,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   877,     0,     0,     0,     0,     0,     0,   878,
     879,     0,     0,     0,     0,     0,   881,     0,   882,     0,
       0,     0,     0,   883,     0,   884,   885,    93,   818,   547,
     819,   820,   821,   822,   823,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,     0,     0,     0,     0,
     824,     0,     0,   105,   106,     0,   107,   108,   109,   110,
     111,   112,   113,   114,   825,   116,   826,   827,     0,   119,
     120,   121,   122,   123,   124,   828,   829,   125,   126,   830,
     831,   129,     0,   130,   131,   132,   133,   832,     0,   833,
       0,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,     0,   146,   147,   148,   149,   150,   151,     0,   152,
     153,   154,   155,   834,   835,   836,   837,   838,   839,   840,
     157,   158,   159,   160,   161,   162,   163,   841,   842,   166,
     843,   167,     0,   168,   169,   170,   171,   172,   173,     0,
     174,   175,   176,   177,   178,     0,     0,   179,   180,   678,
     182,   183,     0,   184,   185,   186,     0,   187,   188,   189,
       0,   190,   191,   192,   193,   844,   195,   196,   197,   198,
     199,   845,   846,   201,     0,   202,   203,   847,   205,     0,
     206,     0,   207,   208,     0,   209,   210,   211,   212,   213,
     214,     0,   215,     0,   848,   849,   218,     0,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
       0,   231,   232,   233,   234,   235,   236,     0,   237,   238,
     239,   240,   241,   242,   243,   244,   850,   851,     0,   852,
       0,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,     0,     0,   259,   260,   261,   262,     0,   263,
     264,   265,   853,   854,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   855,   291,
     856,   293,   294,   295,   296,   857,   297,   298,   299,   300,
     858,   859,   302,   860,   304,   305,   306,     0,   307,   308,
       0,     0,   861,   310,   311,     0,     0,   312,   313,   314,
     315,   316,   862,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   863,   331,   332,   333,
     334,   335,   336,     0,   337,   338,   339,   340,   341,   342,
       0,   343,   344,   345,   864,   347,   348,   349,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,     0,   364,   365,   366,   367,   368,   369,
     865,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,     0,   382,   383,   384,   385,   386,   866,   387,
     388,   389,   390,   391,   392,   393,   394,   867,   396,     0,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   868,   411,     0,   412,   413,     0,   414,
     415,   416,   417,   418,   419,   420,     0,   869,   870,     0,
       0,   423,   424,   871,   426,   872,   873,   428,   429,   874,
     431,   432,   433,   434,   435,     0,     0,   436,   437,   438,
     439,   440,   875,     0,   441,   442,   443,   444,   445,   446,
     876,     0,   448,   449,   450,   451,   452,   453,     0,     0,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   877,     0,     0,     0,     0,     0,
       0,   878,   879,     0,     0,     0,     0,     0,   881,     0,
    2031,     0,     0,     0,     0,   883,     0,   884,   885,    93,
     818,   547,   819,   820,   821,   822,   823,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,     0,   102,   103,   104,     0,     0,
       0,     0,   824,     0,     0,   105,   106,     0,   107,   108,
     109,   110,   111,   112,   113,   114,   825,   116,   826,   827,
       0,   119,   120,   121,   122,   123,   124,   828,   829,   125,
     126,   830,   831,   129,     0,   130,   131,   132,   133,   832,
       0,   833,     0,   136,   137,   138,   139,   140,   141,   142,
     143,   144,   145,     0,   146,   147,   148,   149,   150,   151,
       0,   152,   153,  2716,   155,   834,   835,   836,   837,   838,
     839,   840,   157,   158,   159,   160,   161,   162,   163,   841,
     842,   166,   843,   167,     0,   168,   169,   170,   171,   172,
     173,     0,   174,   175,   176,   177,   178,     0,     0,   179,
     180,   678,   182,   183,     0,   184,   185,   186,     0,   187,
     188,   189,     0,   190,   191,   192,   193,   844,   195,   196,
     197,   198,   199,   845,   846,   201,     0,   202,   203,   847,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,   213,   214,     0,   215,     0,  2717,   849,   218,     0,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,     0,   231,   232,   233,   234,   235,   236,     0,
     237,   238,   239,   240,   241,   242,   243,   244,   850,   851,
       0,   852,     0,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,     0,     0,   259,   260,   261,   262,
       0,   263,   264,   265,   853,   854,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     855,   291,   856,   293,   294,   295,   296,   857,   297,   298,
     299,   300,   858,   859,   302,   860,   304,   305,   306,     0,
     307,   308,     0,     0,   861,   310,   311,     0,     0,   312,
     313,   314,   315,   316,   862,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,     0,   328,   329,   863,   331,
     332,   333,   334,   335,   336,     0,   337,   338,   339,   340,
     341,   342,     0,   343,   344,   345,   864,   347,   348,   349,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,     0,   364,   365,   366,   367,
     368,  2718,   865,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,     0,   382,   383,   384,   385,   386,
     866,   387,   388,   389,   390,   391,   392,   393,   394,   867,
     396,     0,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   868,   411,     0,   412,   413,
       0,   414,   415,   416,   417,   418,   419,   420,     0,   869,
     870,     0,     0,   423,   424,   871,   426,   872,   873,   428,
     429,   874,   431,   432,   433,   434,   435,     0,     0,   436,
     437,   438,   439,   440,   875,     0,   441,   442,   443,   444,
     445,   446,   876,     0,   448,   449,   450,   451,   452,   453,
       0,     0,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   877,     0,     0,     0,
       0,     0,     0,   878,   879,     0,     0,     0,     0,     0,
     881,     0,  2720,     0,     0,     0,     0,   883,     0,   884,
     885,    93,   818,   547,   819,   820,   821,   822,   823,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,   824,     0,     0,   105,   106,     0,
     107,   108,   109,   110,   111,   112,   113,  2975,   825,   116,
     826,   827,     0,   119,   120,   121,   122,   123,   124,   828,
     829,   125,   126,   830,   831,   129,     0,   130,   131,   132,
     133,   832,     0,   833,     0,   136,   137,   138,   139,   140,
     141,   142,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,   152,   153,   154,  2976,   834,   835,   836,
     837,   838,   839,   840,   157,   158,   159,   160,   161,   162,
     163,   841,   842,   166,   843,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   678,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   844,
     195,   196,   197,   198,   199,   845,   846,   201,     0,   202,
     203,   847,   205,     0,   206,     0,   207,   208,     0,   209,
     210,   211,   212,   213,   214,     0,   215,     0,   848,   849,
     218,     0,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,   238,   239,   240,   241,   242,   243,   244,
     850,   851,     0,   852,     0,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,     0,     0,   259,   260,
     261,   262,     0,   263,   264,   265,   853,   854,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   855,   291,   856,   293,   294,   295,   296,   857,
     297,   298,   299,   300,   858,   859,   302,   860,   304,   305,
     306,     0,   307,   308,     0,     0,   861,   310,   311,     0,
       0,   312,   313,   314,   315,   316,   862,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     863,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   864,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
     366,   367,   368,   369,   865,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,   866,   387,   388,   389,   390,   391,   392,   393,
     394,   867,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   868,   411,     0,
     412,   413,     0,   414,   415,   416,   417,   418,   419,   420,
       0,   869,   870,     0,     0,   423,   424,   871,   426,   872,
     873,   428,   429,   874,   431,   432,  2977,   434,   435,     0,
       0,   436,   437,   438,   439,   440,   875,     0,   441,   442,
     443,   444,   445,   446,   876,     0,   448,   449,   450,   451,
     452,   453,     0,     0,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   877,     0,
       0,     0,     0,     0,     0,   878,   879,     0,     0,     0,
       0,     0,   881,     0,   882,     0,     0,     0,     0,   883,
       0,   884,   885,    93,   818,   547,   819,   820,   821,   822,
     823,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,     0,     0,     0,     0,   824,     0,     0,   105,
     106,     0,   107,   108,   109,   110,   111,   112,   113,   114,
     825,   116,   826,   827,     0,   119,   120,   121,   122,   123,
     124,   828,   829,   125,   126,   830,   831,   129,     0,   130,
     131,   132,   133,   832,     0,   833,     0,   136,   137,   138,
     139,   140,   141,   142,   143,   144,   145,     0,   146,   147,
     148,   149,   150,   151,     0,   152,   153,   154,  2976,   834,
     835,   836,   837,   838,   839,   840,   157,   158,   159,   160,
     161,   162,   163,   841,   842,   166,   843,   167,     0,   168,
     169,   170,   171,   172,   173,     0,   174,   175,   176,   177,
     178,     0,     0,   179,   180,   678,   182,   183,     0,   184,
     185,   186,     0,   187,   188,   189,     0,   190,   191,   192,
     193,   844,   195,   196,   197,   198,   199,   845,   846,   201,
       0,   202,   203,   847,   205,     0,   206,     0,   207,   208,
       0,   209,   210,   211,   212,   213,   214,     0,   215,     0,
     848,   849,   218,     0,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,     0,   231,   232,   233,
     234,   235,   236,     0,   237,   238,   239,   240,   241,   242,
     243,   244,   850,   851,     0,   852,     0,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,     0,     0,
     259,   260,   261,   262,     0,   263,   264,   265,   853,   854,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   855,   291,   856,   293,   294,   295,
     296,   857,   297,   298,   299,   300,   858,   859,   302,   860,
     304,   305,   306,     0,   307,   308,     0,     0,   861,   310,
     311,     0,     0,   312,   313,   314,   315,   316,   862,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,     0,
     328,   329,   863,   331,   332,   333,   334,   335,   336,     0,
     337,   338,   339,   340,   341,   342,     0,   343,   344,   345,
     864,   347,   348,   349,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,     0,
     364,   365,   366,   367,   368,   369,   865,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,     0,   382,
     383,   384,   385,   386,   866,   387,   388,   389,   390,   391,
     392,   393,   394,   867,   396,     0,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   868,
     411,     0,   412,   413,     0,   414,   415,   416,   417,   418,
     419,   420,     0,   869,   870,     0,     0,   423,   424,   871,
     426,   872,   873,   428,   429,   874,   431,   432,  2977,   434,
     435,     0,     0,   436,   437,   438,   439,   440,   875,     0,
     441,   442,   443,   444,   445,   446,   876,     0,   448,   449,
     450,   451,   452,   453,     0,     0,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     877,     0,     0,     0,     0,     0,     0,   878,   879,     0,
       0,     0,     0,     0,   881,     0,   882,     0,     0,     0,
       0,   883,     0,   884,   885,    93,   818,   547,   819,   820,
     821,   822,   823,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,     0,     0,     0,     0,   824,     0,
       0,   105,   106,     0,   107,   108,   109,   110,   111,   112,
     113, -1763,   825,   116,   826,   827,     0,   119,   120,   121,
     122,   123,   124,   828,   829,   125,   126,   830,   831,   129,
       0,   130,   131,   132,   133,   832,     0,   833,     0,   136,
     137,   138,   139,   140,   141,   142,   143,   144,   145,     0,
     146,   147,   148,   149,   150,   151,     0,   152,   153,   154,
    2976,   834,   835,   836,   837,   838,   839,   840,   157,   158,
     159,   160,   161,   162,   163,   841,   842,   166,   843,   167,
       0,   168,   169,   170,   171,   172,   173,     0,   174,   175,
     176,   177,   178,     0,     0,   179,   180,   678,   182,   183,
       0,   184,   185,   186,     0,   187,   188,   189,     0,   190,
     191,   192,   193,   844,   195,   196,   197,   198,   199,   845,
     846,   201,     0,   202,   203,   847,   205,     0,   206,     0,
     207,   208,     0,   209,   210,   211,   212, -1763,   214,     0,
     215,     0,   848,   849,   218,     0,   219,   220,   221,   222,
     223,   224,   225, -1763,   227,   228,   229,   230,     0,   231,
     232,   233,   234,   235,   236,     0,   237,   238,   239,   240,
     241,   242,   243,   244,   850,   851,     0,   852,     0,   248,
       0,     0,   251,   252,   253,   254,   255,   256,   257,   258,
       0,     0,   259,   260,   261, -1763,     0,   263,   264,   265,
     853,   854,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   855,   291,   856,   293,
     294,   295,   296,     0,   297,   298,     0,   300,   858,   859,
     302,   860,   304,   305,   306,     0,   307,   308,     0,     0,
     861,   310,   311,     0,     0,   312,   313,   314,   315,   316,
     862,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   863,   331,   332,   333,   334,   335,
     336,     0,   337,   338,   339,   340,   341,   342,     0,   343,
     344,   345,   864,   347,   348,   349,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,     0,   364,   365,   366,   367,   368,   369,   865,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
       0,   382,   383,   384,   385,   386,   866,   387,   388,   389,
     390,   391, -1763,   393,   394,   867,   396,     0,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   868,   411,     0,   412,   413,     0,   414,   415,   416,
     417,   418,   419,   420,     0,   869,   870,     0,     0,   423,
     424,   871,   426,   872,   873,   428,   429,   874,   431,   432,
    2977,   434,   435,     0,     0,   436,   437,   438,   439,   440,
     875,     0,   441,   442,   443,   444,   445,   446,   876,     0,
     448,   449,   450,   451,   452,   453,     0,     0,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475, -1763,     0,     0,     0,     0,     0,     0,   878,
     879,     0,     0,     0,     0,     0,   881,     0,   882,     0,
       0,     0,     0,   883,     0,   884,   885,    93,   818,   547,
     819,   820,   821,   822,   823,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,     0,     0,     0,     0,
       0,     0,     0,   105,   106,     0,   107,   108,   109,   110,
     111,   112,   113,   114,   825,   116,   826,   827,     0,   119,
     120,   121,   122,   123,   124,   828,   829,   125,   126,   830,
     831,   129,     0,   130,   131,   132,   133,   832,     0,   833,
       0,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,     0,   146,   147,   148,   149,   150,   151,     0,   152,
     153,   154,   155,   834,   835,   836,   837,   838,   839,   840,
     157,   158,   159,   160,   161,   162,   163,   841,   842,   166,
       0,   167,     0,   168,   169,   170,   171,   172,   173,     0,
     174,   175,   176,   177,   178,     0,     0,   179,   180,   678,
     182,   183,     0,   184,   185,   186,     0,   187,   188,   189,
       0,   190,   191,   192,   193,   844,   195,   196,   197,   198,
     199,   845,   846,   201,     0,   202,   203,   847,   205,     0,
     206,     0,   207,   208,     0,   209,   210,   211,   212,   213,
     214,     0,   215,     0,   848,   849,   218,     0,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
       0,   231,   232,   233,   234,   235,   236,     0,   237,   238,
     239,   240,   241,   242,   243,   244,   850,   851,     0,   852,
       0,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,     0,     0,   259,   260,   261,   262,     0,   263,
     264,   265,   853,   854,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   855,   291,
     856,   293,   294,   295,   296,     0,   297,   298,   299,   300,
     858,   859,   302,   860,   304,   305,   306,     0,   307,   308,
       0,     0,   861,   310,   311,     0,     0,   312,   313,   314,
     315,   316,   862,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   863,   331,   332,   333,
     334,   335,   336,     0,   337,   338,   339,   340,   341,   342,
       0,   343,   344,   345,   864,   347,   348,   349,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,     0,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,     0,   382,   383,   384,   385,   386,   866,   387,
     388,   389,   390,   391,   392,   393,   394,   867,   396,     0,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   868,   411,     0,   412,   413,     0,   414,
     415,   416,   417,   418,   419,   420,     0,   869,   870,     0,
       0,   423,   424,   871,   426,   872,   873,   428,   429,   874,
     431,   432,   433,   434,   435,     0,     0,   436,   437,   438,
     439,   440,   875,     0,   441,   442,   443,   444,   445,   446,
     876,     0,   448,   449,   450,   451,   452,   453,     0,     0,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,     0,     0,     0,     0,     0,     0,
       0,  1643,  1644,     0,     0,    93,   818,   547,   819,   820,
    1645,   822,   823,     0,     0,     0,     0,   884,   885,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,     0,     0,     0,     0,     0,     0,
       0,   105,   106,     0,   107,   108,   109,   110,   111,   112,
     113,   114,   825,   116,   826,   827,     0,   119,   120,   121,
     122,   123,   124,   828,   829,   125,   126,   830,   831,   129,
       0,   130,   131,   132,   133,   832,     0,   833,     0,   136,
     137,   138,   139,   140,   141,   142,   143,   144,   145,     0,
     146,   147,   148,   149,   150,   151,     0,   152,   153,   154,
     155,   834,   835,   836,   837,   838,   839,   840,   157,   158,
     159,   160,   161,   162,   163,   841,   842,   166,     0,   167,
       0,   168,   169,   170,   171,   172,   173,     0,   174,   175,
     176,   177,   178,     0,     0,   179,   180,   678,   182,   183,
       0,   184,   185,   186,     0,   187,   188,   189,     0,   190,
     191,   192,   193,   844,   195,   196,   197,   198,   199,   845,
     846,   201,     0,   202,   203,   847,   205,     0,   206,     0,
     207,   208,     0,   209,   210,   211,   212,   213,   214,     0,
     215,     0,   848,   849,   218,     0,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,     0,   231,
     232,   233,   234,   235,   236,     0,   237,   238,   239,   240,
     241,   242,   243,   244,   850,   851,     0,   852,     0,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
       0,     0,   259,   260,   261,   262,     0,   263,   264,   265,
     853,   854,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   855,   291,   856,   293,
     294,   295,   296,     0,   297,   298,   299,   300,   858,   859,
     302,   860,   304,   305,   306,     0,   307,   308,     0,     0,
     309,   310,   311,     0,     0,   312,   313,   314,   315,   316,
     862,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   863,   331,   332,   333,   334,   335,
     336,     0,   337,   338,   339,   340,   341,   342,     0,   343,
     344,   345,   864,   347,   348,   349,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,     0,   364,   365,   366,   367,   368,   369,  1782,  1783,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
       0,   382,   383,   384,   385,   386,   866,   387,   388,   389,
     390,   391,   392,   393,   394,   867,   396,     0,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   868,   411,     0,   412,   413,     0,   414,   415,   416,
     417,   418,   419,   420,     0,   869,   870,     0,     0,   423,
     424,   871,   426,   872,   873,   428,   429,   874,   431,   432,
     433,   434,   435,     0,     0,   436,   437,   438,   439,   440,
     875,     0,   441,   442,   443,   444,   445,   446,   876,     0,
     448,   449,   450,   451,   452,   453,     0,     0,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,     0,     0,     0,     0,     0,     0,     0,  1784,
    1785,     0,     0,     0,     0,     0,     0,     0,  1645,     0,
       0,     0,     0,     0,     0,   884,   885,    93,   818,   547,
     819,   820,   821,   822,   823,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,     0,     0,     0,     0,
       0,     0,     0,   105,   106,     0,   107,   108,   109,   110,
     111,   112,   113,   114,   825,   116,   826,   827,     0,   119,
     120,   121,   122,   123,   124,   828,   829,   125,   126,   830,
     831,   129,     0,   130,   131,   132,   133,   832,     0,   833,
       0,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,     0,   146,   147,   148,   149,   150,   151,     0,   152,
     153,   154,   155,   834,   835,   836,   837,   838,   839,   840,
     157,   158,   159,   160,   161,   162,   163,   841,   842,   166,
       0,   167,     0,   168,   169,   170,   171,   172,   173,     0,
     174,   175,   176,   177,   178,     0,     0,   179,   180,   678,
     182,   183,     0,   184,   185,   186,     0,   187,   188,   189,
       0,   190,   191,   192,   193,   844,   195,   196,   197,   198,
     199,   845,   846,   201,     0,   202,   203,   847,   205,     0,
     206,     0,   207,   208,     0,   209,   210,   211,   212,   213,
     214,     0,   215,     0,   848,   849,   218,     0,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
       0,   231,   232,   233,   234,   235,   236,     0,   237,   238,
     239,   240,   241,   242,   243,   244,   850,   851,     0,   852,
       0,   248,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,     0,     0,   259,   260,   261,   262,     0,   263,
     264,   265,   853,   854,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   855,   291,
     856,   293,   294,   295,   296,     0,   297,   298,   299,   300,
     858,   859,   302,   860,   304,   305,   306,     0,   307,   308,
       0,     0,   861,   310,   311,     0,     0,   312,   313,   314,
     315,   316,   862,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   863,   331,   332,   333,
     334,   335,   336,     0,   337,   338,   339,   340,   341,   342,
       0,   343,   344,   345,   864,   347,   348,   349,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,     0,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,     0,   382,   383,   384,   385,   386,   866,   387,
     388,   389,   390,   391,   392,   393,   394,   867,   396,     0,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   868,   411,     0,   412,   413,     0,   414,
     415,   416,   417,   418,   419,   420,     0,   869,   870,     0,
       0,   423,   424,   871,   426,   872,   873,   428,   429,   874,
     431,   432,   433,   434,   435,     0,     0,   436,   437,   438,
     439,   440,   875,     0,   441,   442,   443,   444,   445,   446,
     876,     0,   448,   449,   450,   451,   452,   453,     0,     0,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,     0,     0,     0,     0,     0,     0,
       0,  1643,  1644,     0,     0,     0,     0,     0,     0,     0,
    1645,     0,     0,     0,     0,     0,     0,   884,   885,    93,
     818,   547,   819,   820,   821,   822,   823,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,     0,   102,   103,   104,     0,     0,
       0,     0,   824,     0,     0,   105,   106,     0,   107,   108,
     109,   110,   111,   112,   113,     0,   825,   116,   826,   827,
       0,   119,   120,   121,   122,   123,   124,   828,   829,   125,
     126,   830,   831,   129,     0,   130,   131,   132,   133,   832,
       0,   833,     0,   136,   137,   138,   139,   140,   141,   142,
     143,   144,   145,     0,   146,   147,   148,   149,   150,   151,
       0,   152,   153,   154,   155,   834,   835,   836,   837,   838,
     839,   840,   157,   158,   159,   160,   161,   162,   163,   841,
     842,   166,   843,   167,     0,   168,   169,   170,   171,   172,
     173,     0,   174,   175,   176,   177,   178,     0,     0,   179,
     180,   678,   182,   183,     0,   184,   185,   186,     0,   187,
       0,   189,     0,   190,   191,   192,   193,   844,   195,   196,
     197,   198,   199,   845,   846,   201,     0,   202,   203,   847,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,     0,   214,     0,   215,     0,   848,   849,   218,     0,
     219,   220,   221,   222,   223,   224,   225,     0,   227,   228,
     229,   230,     0,   231,   232,   233,   234,   235,   236,     0,
     237,   238,   239,   240,   241,   242,   243,   244,   850,   851,
       0,   852,     0,   248,     0,     0,   251,   252,   253,   254,
     255,   256,   257,   258,     0,     0,   259,   260,   261,     0,
       0,   263,   264,   265,   853,   854,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     855,   291,   856,   293,   294,   295,   296,     0,   297,   298,
       0,   300,   858,   859,   302,   860,   304,   305,   306,     0,
     307,   308,     0,     0,   861,   310,   311,     0,     0,   312,
     313,   314,   315,   316,   862,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,     0,   328,   329,   863,   331,
     332,   333,   334,   335,   336,     0,   337,   338,   339,   340,
     341,   342,     0,   343,   344,   345,   864,   347,   348,   349,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,     0,   364,   365,   366,   367,
     368,   369,   865,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,     0,   382,   383,   384,   385,   386,
     866,   387,   388,   389,   390,   391,     0,   393,   394,   867,
     396,     0,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   868,   411,     0,   412,   413,
       0,   414,   415,   416,   417,   418,   419,   420,     0,   869,
     870,     0,     0,   423,   424,   871,   426,   872,   873,   428,
     429,   874,   431,   432,   433,   434,   435,     0,     0,   436,
     437,   438,   439,   440,   875,     0,   441,   442,   443,   444,
     445,   446,   876,     0,   448,   449,   450,   451,   452,   453,
       0,     0,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,     0,     0,     0,     0,
       0,     0,     0,   878,   879,   498,     0,     0,     0,     0,
     881,     0,   882,     0,     0,     0,     0,   883,     0,   884,
     885,     0,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,     0,     0,     0,     0,     0,  2337,
       0,   105,   106,     0,   107,   108,   109,     0,   111,   112,
     113,   114,   115,     0,   117,   118,     0,   119,   120,   121,
     122,   123,   124,     0,     0,   125,   126,   127,   128,   129,
       0,   130,   131,   132,   133,   134,     0,     0,     0,   136,
     137,   138,   139,   140,   141,     0,   143,   144,   145,     0,
     146,   147,   148,   149,   150,   151,     0,  -626,   153,   154,
     155,     0,     0,     0,     0,     0,     0,     0,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,     0,   167,
       0,   168,   169,   170,   171,   172,   173,     0,   174,   175,
     176,   177,   178,     0,     0,   179,   180,   181,   182,   183,
       0,   184,   185,   186,     0,   187,   188,   189,     0,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
       0,   201,     0,   202,   203,   204,   205,     0,   206,     0,
     207,     0,     0,  -626,   210,   211,   212,     0,   214,     0,
     215,     0,   216,   217,   218,     0,   219,   220,   221,   222,
     223,   224,   225,     0,   227,   228,   229,   230,     0,   231,
     232,   233,   234,   235,   236,     0,   237,  -626,   239,   240,
     241,   242,   243,   244,   245,   246,     0,   247,     0,   248,
       0,     0,   251,  -626,   253,   254,   255,   256,   257,   258,
       0,     0,   259,  -626,   261,     0,     0,   263,   264,   265,
       0,     0,   266,   267,   268,   269,   270,   500,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,  -626,   292,   293,
     294,   295,   296,     0,   297,   298,     0,   300,     0,   301,
     302,   303,   304,   305,   306,     0,   307,   308,     0,     0,
     309,   310,   311,     0,     0,   312,   313,     0,   315,     0,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,   331,   332,   333,   334,   335,
     336,     0,   337,   338,   339,   340,   341,   342,     0,   343,
     344,   345,   346,   347,   348,   349,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,     0,   364,   365,  -626,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
       0,   382,   383,   384,   385,   386,     0,   387,   388,   389,
     390,   391,     0,   393,   394,   395,   396,     0,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   502,
     409,   410,   411,     0,   412,   413,     0,   414,  -626,   416,
     417,   418,   419,   420,     0,   421,   422,     0,     0,   423,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,     0,     0,   436,   437,   438,   439,   440,
       0,     0,   441,   442,   443,   444,   445,   446,   447,     0,
     448,     0,   450,   451,   452,   453,     0,     0,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,     0,    93,     0,   579,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   947,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,     0,     0,     0,     0,     0,     0,     0,   105,
     106,     0,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,     0,   119,   120,   121,   122,   123,
     124,     0,   829,   125,   126,   127,   128,   129,     0,   130,
     131,   132,   133,   832,     0,   833,     0,   136,   137,   138,
     139,   140,   141,   142,   143,   144,   145,     0,   146,   147,
     148,   149,   150,   151,     0,   152,   153,   154,   155,   834,
     835,   836,   837,   838,   839,   840,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,     0,   167,     0,   168,
     169,   170,   171,   172,   173,     0,   174,   175,   176,   177,
     178,     0,     0,   179,   180,   181,   182,   183,     0,   184,
     185,   186,     0,   187,   188,   189,     0,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   845,     0,   201,
       0,   202,   203,   204,   205,     0,   206,     0,   207,   208,
       0,   209,   210,   211,   212,   213,   214,     0,   215,     0,
     216,   217,   218,     0,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,     0,   231,   232,   233,
     234,   235,   236,     0,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,     0,   247,     0,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,  2077,     0,
     259,   260,   261,   262,     0,   263,   264,   265,   853,   854,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,     0,   297,   298,   299,   300,     0,   859,   302,   303,
     304,   305,   306,     0,   307,   308,     0,   580,   309,   310,
     311,     0,     0,   312,   313,   314,   315,   316,   862,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,     0,
     328,   329,   863,   331,   332,   333,   334,   335,   336,     0,
     337,   338,   339,   340,   341,   342,     0,   343,   344,   345,
     346,   347,   348,   349,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,     0,
     364,   365,   366,   367,   368,   369,   370,  2078,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,    26,   382,
     383,   384,   385,   386,   866,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,     0,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   868,
     411,     0,   412,   413,    31,   414,   415,   416,   417,   418,
     419,   420,     0,   421,   422,     0,     0,   423,   424,   871,
     426,   872,     0,   428,   429,   874,   431,   432,   433,   434,
     435,     0,     0,   436,   437,   438,   439,   440,   875,     0,
     441,   442,   443,   444,   445,   575,   447,     0,   448,   449,
     450,   451,   452,   453,     0,     0,   454,     0,    34,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
       0,    93,    35,   579,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2079,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   118,     0,   119,   120,   121,   122,   123,   124,     0,
     829,   125,   126,   127,   128,   129,     0,   130,   131,   132,
     133,   832,     0,   833,     0,   136,   137,   138,   139,   140,
     141,   142,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,   152,   153,   154,   155,   834,   835,   836,
     837,   838,   839,   840,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,     0,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   181,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   845,     0,   201,     0,   202,
     203,   204,   205,     0,   206,     0,   207,   208,     0,   209,
     210,   211,   212,   213,   214,     0,   215,     0,   216,   217,
     218,     0,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,     0,   247,     0,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,  2077,     0,   259,   260,
     261,   262,     0,   263,   264,   265,   853,   854,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,     0,
     297,   298,   299,   300,     0,   859,   302,   303,   304,   305,
     306,     0,   307,   308,     0,   580,   309,   310,   311,     0,
       0,   312,   313,   314,   315,   316,   862,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     863,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
     366,   367,   368,   369,   370,  2078,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,   866,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   868,   411,     0,
     412,   413,     0,   414,   415,   416,   417,   418,   419,   420,
       0,   421,   422,     0,     0,   423,   424,   871,   426,   872,
       0,   428,   429,   874,   431,   432,   433,   434,   435,     0,
       0,   436,   437,   438,   439,   440,   875,     0,   441,   442,
     443,   444,   445,   446,   447,     0,   448,   449,   450,   451,
     452,   453,     0,     0,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,    93,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2079,    94,    95,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,     0,     0,     0,
       0,     0,     0,     0,   105,   106,     0,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   118,     0,
     119,   120,   121,   122,   123,   124,     0,   829,   125,   126,
     127,   128,   129,     0,   130,   131,   132,   133,   832,     0,
     833,     0,   136,   137,   138,   139,   140,   141,   142,   143,
     144,   145,     0,   146,   147,   148,   149,   150,   151,     0,
     152,   153,   154,   155,   834,   835,   836,   837,   838,   839,
     840,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,     0,   167,     0,   168,   169,   170,   171,   172,   173,
       0,   174,   175,   176,   177,   178,     0,     0,   179,   180,
     181,   182,   183,     0,   184,   185,   186,     0,   187,   188,
     189,     0,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   845,     0,   201,     0,   202,   203,   204,   205,
       0,   206,     0,   207,   208,     0,   209,   210,   211,   212,
     213,   214,     0,   215,     0,   216,   217,   218,     0,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,     0,   231,   232,   233,   234,   235,   236,     0,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,     0,
     247,     0,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,     0,     0,   259,   260,   261,   262,     0,
     263,   264,   265,   853,   854,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,     0,   297,   298,   299,
     300,     0,   859,   302,   303,   304,   305,   306,     0,   307,
     308,     0,     0,   309,   310,   311,     0,     0,   312,   313,
     314,   315,   316,   862,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   863,   331,   332,
     333,   334,   335,   336,     0,   337,   338,   339,   340,   341,
     342,     0,   343,   344,   345,   346,   347,   348,   349,   350,
       0,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,     0,   364,   365,   366,   367,   368,
     369,   370,  2078,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,   386,   866,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
       0,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   868,   411,     0,   412,   413,     0,
     414,   415,   416,   417,   418,   419,   420,     0,   421,   422,
       0,     0,   423,   424,   871,   426,   872,     0,   428,   429,
     874,   431,   432,   433,   434,   435,     0,     0,   436,   437,
     438,   439,   440,   875,     0,   441,   442,   443,   444,   445,
     446,   447,     0,   448,   449,   450,   451,   452,   453,     0,
       0,   454,     0,     0,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    93,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    36,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,     0,     0,     0,     0,     0,     0,
       0,   105,   106,     0,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,     0,   119,   120,   121,
     122,   123,   124,     0,   829,   125,   126,   127,   128,   129,
       0,   130,   131,   132,   133,   832,     0,   833,     0,   136,
     137,   138,   139,   140,   141,   142,   143,   144,   145,     0,
     146,   147,   148,   149,   150,   151,     0,   152,   153,   154,
     155,   834,   835,   836,   837,   838,   839,   840,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,     0,   167,
       0,   168,   169,   170,   171,   172,   173,     0,   174,   175,
     176,   177,   178,     0,     0,   179,   180,   181,   182,   183,
       0,   184,   185,   186,     0,   187,   188,   189,     0,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   845,
       0,   201,     0,   202,   203,   204,   205,     0,   206,     0,
     207,   208,     0,   209,   210,   211,   212,   213,   214,     0,
     215,     0,   216,   217,   218,     0,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,     0,   231,
     232,   233,   234,   235,   236,     0,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,     0,   247,     0,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
       0,     0,   259,   260,   261,   262,     0,   263,   264,   265,
     853,   854,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,     0,   297,   298,   299,   300,     0,   859,
     302,   303,   304,   305,   306,     0,   307,   308,     0,     0,
     309,   310,   311,     0,     0,   312,   313,   314,   315,   316,
     862,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   863,   331,   332,   333,   334,   335,
     336,     0,   337,   338,   339,   340,   341,   342,     0,   343,
     344,   345,   346,   347,   348,   349,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,     0,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
       0,   382,   383,   384,   385,   386,   866,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,     0,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   868,   411,     0,   412,   413,     0,   414,   415,   416,
     417,   418,   419,   420,     0,   421,   422,     0,     0,   423,
     424,   871,   426,   872,     0,   428,   429,   874,   431,   432,
     433,   434,   435,     0,     0,   436,   437,   438,   439,   440,
     875,     0,   441,   442,   443,   444,   445,   446,   447,     0,
     448,   449,   450,   451,   452,   453,     0,     0,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   746,  1238,   547,     0,     0,     0,   822,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2737,    94,
      95,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,     0,     0,     0,     0,     0,     0,     0,   105,   106,
       0,   107,   108,   109,     0,   111,   112,   113,   747,   748,
       0,   749,   750,     0,   119,   120,   121,   122,   123,   124,
       0,     0,   125,   126,   751,   752,   129,     0,   130,   131,
     132,   133,   753,     0,     0,     0,   136,   137,   138,   139,
     140,   141,     0,   143,   144,   145,     0,   146,   147,   148,
     149,   150,   151,     0,     0,   153,   154,   155,     0,     0,
       0,     0,     0,     0,     0,   157,   158,   159,   160,   161,
     162,   163,   754,   755,   166,     0,   167,     0,   168,   169,
     170,   171,   172,   173,     0,   174,   175,   176,   177,   178,
       0,     0,   179,   180,   181,   182,   183,     0,   184,   185,
     186,     0,   187,   188,   189,     0,   190,   191,   192,   193,
     756,   195,   196,   197,   198,   199,   757,  1239,   201,     0,
     202,   203,   758,   205,     0,   206,     0,   207,     0,     0,
       0,   210,   211,   212,     0,   214,     0,   215,     0,   759,
     760,   218,     0,   219,   220,   221,   222,   223,   224,   225,
       0,   227,   228,   229,   230,     0,   231,   232,   233,   234,
     235,   236,     0,   237,     0,   761,   240,   241,   242,   243,
     244,   762,   763,     0,   764,     0,   248,     0,     0,   251,
       0,   253,   254,   255,   256,   257,   258,     0,     0,   259,
       0,   261,     0,     0,   263,   264,   265,     0,     0,   266,
     267,   268,   269,   270,   765,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   766,     0,   767,   293,   294,   295,   768,
       0,   297,   298,     0,   300,     0,   769,   302,   770,   304,
     305,   306,     0,   307,   308,  1240,     0,   309,   310,   311,
       0,     0,   312,   771,     0,   315,     0,   772,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,     0,   328,
     329,   773,   331,   332,   774,   334,   335,   336,     0,   337,
     338,   339,   340,   341,   342,     0,   343,   344,   345,   775,
     347,   348,   349,   350,     0,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,     0,   364,
     365,     0,   367,   368,   369,   776,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,   386,     0,   387,   777,   389,   390,   391,     0,
     393,   394,   778,   396,     0,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   779,   409,   780,   411,
       0,   412,   413,     0,   414,     0,   416,   417,   418,   419,
     420,     0,   781,   782,     0,     0,   423,   424,   783,   426,
     784,  1241,   428,   429,   785,   431,   432,   433,   434,   435,
       0,     0,   436,   437,   438,   439,   440,     0,     0,   441,
     442,   443,   444,   445,  1131,   787,     0,   448,     0,   450,
     451,   452,   453,     0,     0,   454,     0,     0,   455,   456,
     457,   458,   459,   460,   788,   789,   790,   791,   792,   793,
     794,   795,   796,   797,   798,   472,   473,   474,   475,   746,
       0,     0,     0,     0,     0,     0,  1242,  1243,  1954,     0,
       0,     0,     0,     0,     0,  1955,    94,    95,    96,    97,
      98,    99,   100,   101,     0,   102,   103,   104,     3,     4,
       0,     0,     0,     0,     0,   105,   106,     0,   107,   108,
     109,     0,   111,   112,   113,   747,   748,     0,   749,   750,
       0,   119,   120,   121,   122,   123,   124,     0,     0,   125,
     126,   751,   752,   129,     0,   130,   131,   132,   133,   753,
       0,     0,     0,   136,   137,   138,   139,   140,   141,     0,
     143,   144,   145,     0,   146,   147,   148,   149,   150,   151,
       0,     0,   153,   154,   155,     0,     0,     0,     0,     0,
       0,     0,   157,   158,   159,   160,   161,   162,   163,   754,
     755,   166,     0,   167,     0,   168,   169,   170,   171,   172,
     173,     0,   174,   175,   176,   177,   178,     0,     0,   179,
     180,   181,   182,   183,     0,   184,   185,   186,     0,   187,
     188,   189,     0,   190,   191,   192,   193,   756,   195,   196,
     197,   198,   199,   757,     0,   201,     0,   202,   203,   758,
     205,     0,   206,     0,   207,     0,     0,     0,   210,   211,
     212,     0,   214,     0,   215,     0,   759,   760,   218,     0,
     219,   220,   221,   222,   223,   224,   225,     0,   227,   228,
     229,   230,     0,   231,   232,   233,   234,   235,   236,     0,
     237,     0,   761,   240,   241,   242,   243,   244,   762,   763,
       0,   764,     0,   248,     0,     0,   251,     0,   253,   254,
     255,   256,   257,   258,     0,     0,   259,     0,   261,     0,
       0,   263,   264,   265,     0,     0,   266,   267,   268,   269,
     270,   765,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     766,     0,   767,   293,   294,   295,   768,     0,   297,   298,
       0,   300,     0,   769,   302,   770,   304,   305,   306,     0,
     307,   308,     0,     0,   309,   310,   311,     0,     0,   312,
     771,     0,   315,     0,   772,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,     0,   328,   329,   773,   331,
     332,   774,   334,   335,   336,     0,   337,   338,   339,   340,
     341,   342,     0,   343,   344,   345,   775,   347,   348,   349,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,     0,   364,   365,     0,   367,
     368,   369,   776,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,    26,   382,   383,   384,   385,   386,
       0,   387,   777,   389,   390,   391,     0,   393,   394,   778,
     396,     0,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   779,   409,   780,   411,     0,   412,   413,
      31,   414,     0,   416,   417,   418,   419,   420,     0,   781,
     782,     0,     0,   423,   424,   783,   426,   784,     0,   428,
     429,   785,   431,   432,   433,   434,   435,     0,     0,   436,
     437,   438,   439,   440,     0,     0,   441,   442,   443,   444,
     445,   786,   787,     0,   448,     0,   450,   451,   452,   453,
       0,     0,   454,     0,    34,   455,   456,   457,   458,   459,
     460,   788,   789,   790,   791,   792,   793,   794,   795,   796,
     797,   798,   472,   473,   474,   475,   498,     0,    35,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    36,    94,    95,    96,    97,    98,    99,   100,
     101,   613,   102,   103,   104,     0,     0,     0,     0,     0,
       0,     0,   105,   106,     0,   107,   108,   109,     0,   111,
     112,   113,   114,   115,     0,   117,   118,     0,   119,   120,
     121,   122,   123,   124,     0,     0,   125,   126,   127,   128,
     129,     0,   130,   131,   132,   133,   134,     0,     0,     0,
     136,   137,   138,   139,   140,   141,     0,   143,   144,   145,
       0,   146,   147,   148,   149,   150,   151,     0,     0,   153,
     154,   155,     0,     0,     0,     0,     0,     0,     0,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,     0,
     167,     0,   168,   169,   170,   171,   172,   173,     0,   174,
     175,   176,   177,   178,     0,     0,   179,   180,   181,   182,
     183,     0,   184,   185,   186,     0,   187,   188,   189,     0,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,     0,   201,     0,   202,   203,   204,   205,     0,   206,
       0,   207,     0,     0,     0,   210,   211,   212,     0,   214,
       0,   215,     0,   216,   217,   218,     0,   219,   220,   221,
     222,   223,   224,   225,     0,   227,   228,   229,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,     0,   239,
     240,   241,   242,   243,   244,   245,   246,     0,   247,     0,
     248,     0,     0,   251,     0,   253,   254,   255,   256,   257,
     258,     0,     0,   259,     0,   261,     0,     0,   263,   264,
     265,     0,     0,   266,   267,   268,   269,   270,   500,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,     0,   292,
     293,   294,   295,   296,     0,   297,   298,     0,   300,     0,
     301,   302,   303,   304,   305,   306,     0,   307,   308,     0,
       0,   309,   310,   311,     0,     0,   312,   313,     0,   315,
       0,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,     0,   328,   329,   330,   331,   332,   333,   334,
     335,   336,     0,   337,   338,   339,   340,   341,   342,     0,
     343,   344,   345,   346,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,     0,   364,   365,     0,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,    26,   382,   383,   384,   385,   386,     0,   387,   388,
     389,   390,   391,     0,   393,   394,   395,   396,     0,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     502,   409,   410,   411,     0,   412,   413,    31,   414,     0,
     416,   417,   418,   419,   420,     0,   614,   422,     0,     0,
     615,   424,   425,   426,   427,     0,   428,   429,   430,   431,
     432,   433,   434,   435,     0,     0,   436,   437,   438,   439,
     440,     0,     0,   441,   442,   443,   444,   445,   575,   447,
       0,   448,     0,   450,   451,   452,   453,     0,     0,   454,
       0,    34,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   498,     0,    35,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    36,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,     0,     0,     0,     0,     0,     0,     0,   105,
     106,     0,   107,   108,   109,     0,   111,   112,   113,   114,
     115,     0,   117,   118,     0,   119,   120,   121,   122,   123,
     124,     0,     0,   125,   126,   127,   128,   129,     0,   130,
     131,   132,   133,   134,     0,     0,     0,   136,   137,   138,
     139,   140,   141,     0,   143,   144,   145,     0,   146,   147,
     148,   149,   150,   151,     0,     0,   153,   154,   155,     0,
       0,     0,     0,     0,     0,     0,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,     0,   167,     0,   168,
     169,   170,   171,   172,   173,     0,   174,   175,   176,   177,
     178,     0,     0,   179,   180,   181,   182,   183,     0,   184,
     185,   186,     0,   187,   188,   189,     0,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,     0,   201,
       0,   202,   203,   204,   205,     0,   206,     0,   207,     0,
       0,     0,   210,   211,   212,     0,   214,     0,   215,     0,
     216,   217,   218,     0,   219,   220,   221,   222,   223,   224,
     225,     0,   227,   228,   229,   230,     0,   231,   232,   233,
     234,   235,   236,     0,   237,     0,   239,   240,   241,   242,
     243,   244,   245,   246,     0,   247,     0,   248,     0,     0,
     251,     0,   253,   254,   255,   256,   257,   258,     0,     0,
     259,     0,   261,     0,     0,   263,   264,   265,     0,     0,
     266,   267,   268,   269,   270,   500,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,     0,   292,   293,   294,   295,
     296,     0,   297,   298,     0,   300,     0,   301,   302,   303,
     304,   305,   306,     0,   307,   308,     0,     0,   309,   310,
     311,     0,     0,   312,   313,     0,   315,     0,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,     0,
     328,   329,   330,   331,   332,   333,   334,   335,   336,     0,
     337,   338,   339,   340,   341,   342,     0,   343,   344,   345,
     346,   347,   348,   349,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,     0,
     364,   365,     0,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,    26,   382,
     383,   384,   385,   386,     0,   387,   388,   389,   390,   391,
       0,   393,   394,   395,   396,     0,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   502,   409,   410,
     411,     0,   412,   413,    31,   414,     0,   416,   417,   418,
     419,   420,     0,   421,   422,     0,     0,   423,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,     0,     0,   436,   437,   438,   439,   440,     0,     0,
     441,   442,   443,   444,   445,   575,   447,     0,   448,     0,
     450,   451,   452,   453,     0,     0,   454,     0,    34,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
       0,   498,    35,   579,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    36,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   127,   128,   129,     0,   130,   131,   132,
     133,   134,     0,     0,     0,   136,   137,   138,   139,   140,
     141,     0,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,     0,   153,   154,   155,     0,     0,     0,
       0,     0,     0,     0,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,     0,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   181,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,     0,   201,     0,   202,
     203,   204,   205,     0,   206,     0,   207,     0,     0,     0,
     210,   211,   212,     0,   214,     0,   215,     0,   216,   217,
     218,     0,   219,   220,   221,   222,   223,   224,   225,     0,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   239,   240,   241,   242,   243,   244,
     245,   246,     0,   247,     0,   248,     0,     0,   251,     0,
     253,   254,   255,   256,   257,   258,     0,     0,   259,     0,
     261,     0,     0,   263,   264,   265,     0,     0,   266,   267,
     268,   269,   270,   500,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   292,   293,   294,   295,   296,     0,
     297,   298,     0,   300,     0,   301,   302,   303,   304,   305,
     306,     0,   307,   308,     0,     0,   309,   310,   311,     0,
       0,   312,   313,     0,   315,     0,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
       0,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   387,   388,   389,   390,   391,     0,   393,
     394,   395,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   502,   409,   410,   411,     0,
     412,   413,     0,   414,     0,   416,   417,   418,   419,   420,
       0,   421,   422,     0,     0,   423,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,     0,
       0,   436,   437,   438,   439,   440,     0,     0,   441,   442,
     443,   444,   445,   446,   447,     0,   448,     0,   450,   451,
     452,   453,     0,     0,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   498,     0,
     579,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   926,    94,    95,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,     0,     0,     0,
       0,     0,     0,     0,   105,   106,     0,   107,   108,   109,
       0,   111,   112,   113,   114,   115,     0,   117,   118,     0,
     119,   120,   121,   122,   123,   124,     0,     0,   125,   126,
     127,   128,   129,     0,   130,   131,   132,   133,   134,     0,
       0,     0,   136,   137,   138,   139,   140,   141,     0,   143,
     144,   145,     0,   146,   147,   148,   149,   150,   151,     0,
       0,   153,   154,   155,     0,     0,     0,     0,     0,     0,
       0,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,     0,   167,     0,   168,   169,   170,   171,   172,   173,
       0,   174,   175,   176,   177,   178,     0,     0,   179,   180,
     181,   182,   183,     0,   184,   185,   186,     0,   187,   188,
     189,     0,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,     0,   201,     0,   202,   203,   204,   205,
       0,   206,     0,   207,     0,     0,     0,   210,   211,   212,
       0,   214,     0,   215,     0,   216,   217,   218,     0,   219,
     220,   221,   222,   223,   224,   225,     0,   227,   228,   229,
     230,     0,   231,   232,   233,   234,   235,   236,     0,   237,
       0,   239,   240,   241,   242,   243,   244,   245,   246,     0,
     247,     0,   248,     0,     0,   251,     0,   253,   254,   255,
     256,   257,   258,     0,     0,   259,     0,   261,     0,     0,
     263,   264,   265,     0,     0,   266,   267,   268,   269,   270,
     500,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   292,   293,   294,   295,   296,     0,   297,   298,     0,
     300,     0,   301,   302,   303,   304,   305,   306,     0,   307,
     308,     0,     0,   309,   310,   311,     0,     0,   312,   313,
       0,   315,     0,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,     0,   337,   338,   339,   340,   341,
     342,     0,   343,   344,   345,   346,   347,   348,   349,   350,
       0,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,     0,   364,   365,     0,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,   386,     0,
     387,   388,   389,   390,   391,     0,   393,   394,   395,   396,
       0,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   502,   409,   410,   411,     0,   412,   413,     0,
     414,     0,   416,   417,   418,   419,   420,     0,   421,   422,
       0,     0,   423,   424,   425,   426,   427,     0,   428,   429,
     430,   431,   432,   433,   434,   435,     0,     0,   436,   437,
     438,   439,   440,     0,     0,   441,   442,   443,   444,   445,
     446,   447,     0,   448,     0,   450,   451,   452,   453,     0,
       0,   454,     0,     0,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   498,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2570,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,     0,     0,     0,     0,     0,     0,
       0,   105,   106,     0,   107,   108,   109,     0,   111,   112,
     113,   114,   115,     0,   117,   118,     0,   119,   120,   121,
     122,   123,   124,     0,     0,   125,   126,   127,   128,   129,
       0,   130,   131,   132,   133,   134,     0,     0,     0,   136,
     137,   138,   139,   140,   141,     0,   143,   144,   145,     0,
     146,   147,   148,   149,   150,   151,     0,     0,   153,   154,
     155,     0,     0,     0,     0,     0,     0,     0,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,     0,   167,
       0,   168,   169,   170,   171,   172,   173,     0,   174,   175,
     176,   177,   178,     0,     0,   179,   180,   181,   182,   183,
       0,   184,   185,   186,     0,   187,   188,   189,     0,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
       0,   201,     0,   202,   203,   204,   205,     0,   206,     0,
     207,     0,     0,     0,   210,   211,   212,     0,   214,     0,
     215,     0,   216,   217,   218,     0,   219,   220,   221,   222,
     223,   224,   225,     0,   227,   228,   229,   230,     0,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   239,   240,
     241,   242,   243,   244,   245,   246,     0,   247,     0,   248,
       0,     0,   251,     0,   253,   254,   255,   256,   257,   258,
       0,     0,   259,     0,   261,     0,     0,   263,   264,   265,
       0,     0,   266,   267,   268,   269,   270,   500,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,     0,   292,   293,
     294,   295,   296,     0,   297,   298,     0,   300,     0,   301,
     302,   303,   304,   305,   306,     0,   307,   308,     0,     0,
     309,   310,   311,     0,     0,   312,   313,     0,   315,     0,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,   331,   332,   333,   334,   335,
     336,     0,   337,   338,   339,   340,   341,   342,     0,   343,
     344,   345,   346,   347,   348,   349,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,     0,   364,   365,     0,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
       0,   382,   383,   384,   385,   386,     0,   387,   388,   389,
     390,   391,     0,   393,   394,   395,   396,     0,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   502,
     409,   410,   411,     0,   412,   413,     0,   414,     0,   416,
     417,   418,   419,   420,     0,   421,   422,     0,     0,   423,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,     0,     0,   436,   437,   438,   439,   440,
       0,     0,   441,   442,   443,   444,   445,   446,   447,     0,
     448,     0,   450,   451,   452,   453,     0,     0,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   498,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1664,    94,
      95,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,     0,     0,     0,     0,     0,     0,     0,   105,   106,
       0,   107,   108,   109,     0,   111,   112,   113,   114,   115,
       0,   117,   118,     0,   119,   120,   121,   122,   123,   124,
       0,     0,   125,   126,   127,   128,   129,     0,   130,   131,
     132,   133,   134,     0,     0,     0,   136,   137,   138,   139,
     140,   141,     0,   143,   144,   145,     0,   146,   147,   148,
     149,   150,   151,     0,     0,   153,   154,   155,     0,     0,
       0,     0,     0,     0,     0,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,     0,   167,     0,   168,   169,
     170,   171,   172,   173,     0,   174,   175,   176,   177,   178,
       0,     0,   179,   180,   181,   182,   183,     0,   184,   185,
     186,     0,   187,   188,   189,     0,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,     0,   201,     0,
     202,   203,   204,   205,     0,   206,     0,   207,     0,     0,
       0,   210,   211,   212,     0,   214,     0,   215,     0,   216,
     217,   218,     0,   219,   220,   221,   222,   223,   224,   225,
       0,   227,   228,   229,   230,     0,   231,   232,   233,   234,
     235,   236,     0,   237,     0,   239,   240,   241,   242,   243,
     244,   245,   246,     0,   247,     0,   248,     0,     0,   251,
       0,   253,   254,   255,   256,   257,   258,     0,     0,   259,
       0,   261,     0,     0,   263,   264,   265,     0,     0,   266,
     267,   268,   269,   270,   500,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,     0,   292,   293,   294,   295,   296,
       0,   297,   298,     0,   300,     0,   301,   302,   303,   304,
     305,   306,     0,   307,   308,     0,     0,   309,   310,   311,
       0,     0,   312,   313,     0,   315,     0,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,     0,   328,
     329,   330,   331,   332,   333,   334,   335,   336,     0,   337,
     338,   339,   340,   341,   342,     0,   343,   344,   345,   346,
     347,   348,   349,   350,     0,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,     0,   364,
     365,     0,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,   386,     0,   387,   388,   389,   390,   391,     0,
     393,   394,   395,   396,     0,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   502,   409,   410,   411,
       0,   412,   413,     0,   414,     0,   416,   417,   418,   419,
     420,     0,   421,   422,     0,     0,   423,   424,   425,   426,
     427,     0,   428,   429,   430,   431,   432,   433,   434,   435,
       0,     0,   436,   437,   438,   439,   440,     0,     0,   441,
     442,   443,   444,   445,   446,   447,     0,   448,     0,   450,
     451,   452,   453,     0,     0,   454,     0,     0,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   498,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1769,    94,    95,    96,    97,
      98,    99,   100,   101,     0,   102,   103,   104,     0,     0,
       0,     0,     0,     0,     0,   105,   106,     0,   107,   108,
     109,     0,   111,   112,   113,   114,   115,     0,   117,   118,
       0,   119,   120,   121,   122,   123,   124,     0,     0,   125,
     126,   127,   128,   129,     0,   130,   131,   132,   133,   134,
       0,     0,     0,   136,   137,   138,   139,   140,   141,     0,
     143,   144,   145,     0,   146,   147,   148,   149,   150,   151,
       0,     0,   153,   154,   155,     0,     0,     0,     0,     0,
       0,     0,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,     0,   167,     0,   168,   169,   170,   171,   172,
     173,     0,   174,   175,   176,   177,   178,     0,     0,   179,
     180,   181,   182,   183,     0,   184,   185,   186,     0,   187,
     188,   189,     0,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,     0,   201,     0,   202,   203,   204,
     205,     0,   206,     0,   207,     0,     0,     0,   210,   211,
     212,     0,   214,     0,   215,     0,   216,   217,   218,     0,
     219,   220,   221,   222,   223,   224,   225,     0,   227,   228,
     229,   230,     0,   231,   232,   233,   234,   235,   236,     0,
     237,     0,   239,   240,   241,   242,   243,   244,   245,   246,
       0,   247,     0,   248,     0,     0,   251,     0,   253,   254,
     255,   256,   257,   258,     0,     0,   259,     0,   261,     0,
       0,   263,   264,   265,     0,     0,   266,   267,   268,   269,
     270,   500,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,     0,   292,   293,   294,   295,   296,     0,   297,   298,
       0,   300,     0,   301,   302,   303,   304,   305,   306,     0,
     307,   308,     0,     0,   309,   310,   311,     0,     0,   312,
     313,     0,   315,     0,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,     0,   328,   329,   330,   331,
     332,   333,   334,   335,   336,     0,   337,   338,   339,   340,
     341,   342,     0,   343,   344,   345,   346,   347,   348,   349,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,     0,   364,   365,     0,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,     0,   382,   383,   384,   385,   386,
       0,   387,   388,   389,   390,   391,     0,   393,   394,   395,
     396,     0,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   502,   409,   410,   411,     0,   412,   413,
       0,   414,     0,   416,   417,   418,   419,   420,     0,   421,
     422,     0,     0,   423,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,     0,     0,   436,
     437,   438,   439,   440,     0,     0,   441,   442,   443,   444,
     445,   446,   447,     0,   448,     0,   450,   451,   452,   453,
       0,     0,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,     0,     0,     0,     0,
    2424,  1238,   547,     0,     0,  1624,   822,     0,     0,     0,
       0,     0,  2542,  1625,  1626,  1627,  1628,    94,    95,    96,
      97,    98,    99,   100,   101,  1058,   102,   103,   104,  1059,
    1060,  1061,  1062,  1063,  1064,  1065,   105,   106,  1066,   107,
     108,   109,  2425,   111,   112,   113,     0,   666,  2426,   668,
     669,  1067,   119,   120,   121,   122,   123,   124,  1068,  1069,
     125,   126,   670,   671,   129,  1070,   130,   131,   132,   133,
       0,  1071,  2427,  1072,   136,   137,   138,   139,   140,   141,
    2428,   143,   144,   145,  1073,   146,   147,   148,   149,   150,
     151,  1074,  2429,   153,   154,   155,  1075,  1076,  1077,  2430,
    1078,  1079,  1080,   157,   158,   159,   160,   161,   162,   163,
     676,   677,   166,  1081,   167,  1082,   168,   169,   170,   171,
     172,   173,  1083,   174,   175,   176,   177,   178,  1084,  1085,
     179,   180,   678,   182,   183,  1086,   184,   185,   186,  1087,
     187,   188,   189,  1088,   190,   191,   192,   193,     0,   195,
     196,   197,   198,   199,     0,  1089,   201,  1090,   202,   203,
     679,   205,  1091,   206,  1092,   207,  2431,  1093,  2432,   210,
     211,   212,  2433,   214,  1094,   215,  1095,     0,     0,   218,
    1096,   219,   220,   221,   222,   223,   224,   225,  2434,   227,
     228,   229,   230,  1097,   231,   232,   233,   234,   235,   236,
    1098,   237,  2435,     0,   240,   241,   242,   243,   244,   686,
     687,  1099,   688,  1100,   248,  2436,  2437,   251,  2438,   253,
     254,   255,   256,   257,   258,  1101,  1102,   259,  2439,   261,
    2440,  1103,   263,   264,   265,  1104,  1105,   266,   267,   268,
     269,   270,  2441,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   695,  2442,   697,   293,   294,   295,  2443,  1106,   297,
     298,  2444,   300,  1107,     0,   302,   699,   304,   305,   306,
    1108,   307,   308,  1109,  1110,  2445,   310,   311,  1111,  1112,
     312,     0,  2446,   315,  2447,     0,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,  1113,   328,   329,     0,
     331,   332,     0,   334,   335,   336,  1114,   337,   338,   339,
     340,   341,   342,  1115,   343,   344,   345,   702,   347,   348,
     349,   350,  1116,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,  1117,   364,   365,  2448,
     367,   368,   369,   704,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,  1118,   382,   383,   384,   385,
     386,  1119,   387,  2449,   389,   390,   391,  2450,   393,   394,
     707,   396,  1120,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,  2451,   409,     0,   411,  1121,   412,
     413,  1122,   414,  2452,   416,   417,   418,   419,   420,  1123,
     710,   711,  1124,  1125,   423,   424,     0,   426,     0,  1126,
     428,   429,  2453,   431,   432,   433,   434,   435,  1127,  1128,
     436,   437,   438,   439,   440,  1129,  1130,   441,   442,   443,
     444,   445,     0,   713,  1132,   448,  2454,   450,   451,   452,
     453,  1133,  1134,   454,  1135,  1136,   455,   456,   457,   458,
     459,   460,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   472,   473,   474,   475,     0,   498,     0,
    1629,  1630,  1631,  1624,  2455,  2456,  1634,  1635,  1636,  1637,
       0,  1625,  1626,  1627,  1628,    94,    95,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,     0,     0,     0,
       0,     0,     0,     0,   105,   106,     0,   107,   108,   109,
       0,   111,   112,   113,   114,   115,     0,   117,   118,     0,
     119,   120,   121,   122,   123,   124,     0,     0,   125,   126,
     127,   128,   129,     0,   130,   131,   132,   133,   134,     0,
       0,     0,   136,   137,   138,   139,   140,   141,     0,   143,
     144,   145,     0,   146,   147,   148,   149,   150,   151,     0,
       0,   153,   154,   155,     0,     0,     0,     0,     0,     0,
       0,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,     0,   167,     0,   168,   169,   170,   171,   172,   173,
       0,   174,   175,   176,   177,   178,     0,     0,   179,   180,
     181,   182,   183,     0,   184,   185,   186,     0,   187,   188,
     189,     0,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,     0,   201,     0,   202,   203,   204,   205,
       0,   206,     0,   207,     0,     0,     0,   210,   211,   212,
       0,   214,     0,   215,     0,   216,   217,   218,     0,   219,
     220,   221,   222,   223,   224,   225,     0,   227,   228,   229,
     230,     0,   231,   232,   233,   234,   235,   236,     0,   237,
       0,   239,   240,   241,   242,   243,   244,   245,   246,     0,
     247,     0,   248,     0,     0,   251,     0,   253,   254,   255,
     256,   257,   258,     0,     0,   259,     0,   261,     0,     0,
     263,   264,   265,     0,     0,   266,   267,   268,   269,   270,
     500,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   292,   293,   294,   295,   296,     0,   297,   298,     0,
     300,     0,   301,   302,   303,   304,   305,   306,     0,   307,
     308,     0,     0,   309,   310,   311,     0,     0,   312,   313,
       0,   315,     0,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,     0,   337,   338,   339,   340,   341,
     342,     0,   343,   344,   345,   346,   347,   348,   349,   350,
       0,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,     0,   364,   365,     0,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,   386,     0,
     387,   388,   389,   390,   391,     0,   393,   394,   395,   396,
       0,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   502,   409,   410,   411,     0,   412,   413,     0,
     414,     0,   416,   417,   418,   419,   420,     0,   421,   422,
       0,     0,   423,   424,   425,   426,   427,     0,   428,   429,
     430,   431,   432,   433,   434,   435,     0,     0,   436,   437,
     438,   439,   440,     0,     0,   441,   442,   443,   444,   445,
     446,   447,     0,   448,     0,   450,   451,   452,   453,     0,
       0,   454,     0,     0,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,     0,     0,     0,  1629,  1630,
    1631,     0,  1632,  1633,  1634,  1635,  1636,  1637,  1315,     0,
       0,  1316,     0,     0,     0,  1317,  1318,  1319,  1320,  1321,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1322,     0,     0,  1315,     0,     0,
    1316,     0,  1324,     0,  1317,  1318,  1319,  1320,  1321,  1325,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1322,     0,     0,     0,     0,     0,     0,
       0,  1324,  1315,     0,  1326,  1316,     0,     0,  1325,  1317,
    1318,  1319,  1320,  1321,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1322,     0,
       0,  1315,     0,  1326,  1316,     0,  1324,     0,  1317,  1318,
    1319,  1320,  1321,  1325,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1322,     0,     0,
       0,     0,     0,     0,     0,  1324,     0,     0,  1326,     0,
       0,     0,  1325,     0,     0,     0,     0,     0,     0,     0,
       0,  1315,     0,     0,  1316,     0,     0,     0,  1317,  1318,
    1319,  1320,  1321,     0,     0,     0,     0,  1326,     0,     0,
       0,     0,     0,     0,     0,  1327,     0,  1322,     0,     0,
       0,     0,     0,     0,     0,  1324,     0,     0,     0,     0,
       0,  1328,  1325,     0,     0,     0,  1329,     0,     0,     0,
       0,     0,     0,     0,  1327,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1326,  1330,  1331,
    1328,     0,     0,     0,     0,  1329,     0,     0,     0,     0,
       0,     0,     0,  1332,     0,     0,     0,     0,     0,  1327,
       0,     0,     0,     0,     0,     0,     0,  1330,  1331,     0,
       0,     0,     0,     0,     0,  1328,     0,     0,     0,     0,
    1329,     0,  1332,     0,     0,     0,     0,     0,  1327,     0,
       0,  1333,     0,     0,  1334,     0,     0,     0,     0,     0,
       0,     0,  1330,  1331,  1328,     0,     0,     0,  1335,  1329,
       0,  1336,     0,     0,     0,     0,     0,  1332,     0,     0,
    1333,     0,     0,  1334,     0,     0,     0,     0,     0,     0,
       0,  1330,  1331,     0,     0,     0,     0,  1335,  1327,     0,
    1336,     0,     0,     0,     0,     0,  1332,     0,     0,     0,
       0,     0,     0,     0,  1328,  1333,     0,     0,  1334,  1329,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1335,     0,     0,  1336,     0,     0,     0,     0,
       0,  1330,  1331,     0,  1333,     0,     0,  1334,     0,     0,
       0,     0,     0,     0,     0,     0,  1332,     0,     0,     0,
    1337,  1335,     0,     0,  1336,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1337,
       0,     0,     0,     0,  1333,     0,     0,  1334,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1335,     0,     0,  1336,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1337,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1337,     0,     0,     0,     0,     0,     0,
    1338,     0,     0,  1339,  1340,  1341,     0,  1342,  1343,  1344,
    1345,  1346,  1347,     0,     0,     0,  1315,  2039,     0,  1316,
       0,     0,     0,  1317,  1318,  1319,  1320,  1321,     0,  1338,
       0,     0,  1339,  1340,  1341,     0,  1342,  1343,  1344,  1345,
    1346,  1347,  1322,  1337,     0,     0,  2258,     0,     0,     0,
    1324,  1315,     0,     0,  1316,     0,     0,  1325,  1317,  1318,
    1319,  1320,  1321,     0,  1338,     0,     0,  1339,  1340,  1341,
       0,  1342,  1343,  1344,  1345,  1346,  1347,  1322,     0,     0,
       0,  2300,  1326,     0,     0,  1324,     0,     0,     0,     0,
       0,     0,  1325,  1338,     0,     0,  1339,  1340,  1341,     0,
    1342,  1343,  1344,  1345,  1346,  1347,     0,     0,     0,     0,
    2387,     0,     0,     0,     0,     0,     0,  1326,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1315,     0,     0,  1316,     0,     0,     0,  1317,  1318,  1319,
    1320,  1321,     0,  1338,     0,     0,  1339,  1340,  1341,     0,
    1342,  1343,  1344,  1345,  1346,  1347,  1322,     0,     0,     0,
    2517,     0,     0,     0,  1324,     0,  1315,     0,     0,  1316,
       0,  1325,     0,  1317,  1318,  1319,  1320,  1321,     0,     0,
       0,     0,     0,  1327,     0,     0,     0,     0,     0,     0,
       0,     0,  1322,     0,     0,     0,  1326,     0,     0,  1328,
    1324,     0,     0,     0,  1329,     0,     0,  1325,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1327,     0,
       0,     0,     0,     0,     0,     0,  1330,  1331,     0,     0,
       0,     0,  1326,     0,  1328,     0,     0,     0,     0,  1329,
       0,  1332,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1330,  1331,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1332,     0,     0,  1333,
       0,     0,  1334,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1335,  1327,     0,  1336,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1328,  1333,     0,     0,  1334,  1329,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1335,     0,  1327,  1336,     0,     0,     0,     0,     0,
    1330,  1331,     0,     0,     0,     0,     0,     0,     0,  1328,
       0,     0,     0,     0,  1329,  1332,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1330,  1331,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1337,     0,
       0,  1332,     0,  1333,     0,     0,  1334,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1335,  1315,     0,  1336,  1316,     0,     0,     0,  1317,  1318,
    1319,  1320,  1321,  1337,     0,     0,     0,     0,     0,  1333,
       0,     0,  1334,     0,     0,     0,     0,  1322,     0,     0,
       0,     0,     0,     0,     0,  1324,  1335,     0,     0,  1336,
       0,     0,  1325,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1326,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1338,     0,
       0,  1339,  1340,  1341,     0,  1342,  1343,  1344,  1345,  1346,
    1347,     0,  1337,     0,     0,  2539,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1338,     0,     0,  1339,  1340,  1341,     0,
    1342,  1343,  1344,  1345,  1346,  1347,     0,     0,  1337,     0,
    2687,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1327,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1328,     0,     0,     0,     0,  1329,
       0,     0,  1338,     0,     0,  1339,  1340,  1341,     0,  1342,
    1343,  1344,  1345,  1346,  1347,     0,     0,     0,     0,  2910,
       0,  1330,  1331,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1332,     0,  1338,     0,
       0,  1339,  1340,  1341,     0,  1342,  1343,  1344,  1345,  1346,
    1347,     0,     0,     0,     0,  2922,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1333,     0,     0,  1334,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1335,     0,     0,  1336,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1337,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1057,  1338,     0,     0,  1339,  1340,  1341,     0,
    1342,  1343,  1344,  1345,  1346,  1347,     0,     0,  1498,    94,
      95,    96,    97,    98,    99,   100,   101,  1058,   102,   103,
     104,  1059,  1060,  1061,  1062,  1063,  1064,  1065,   105,   106,
    1066,   107,   108,   109,     0,   111,   112,   113,   747,   748,
       0,   749,   750,  1067,   119,   120,   121,   122,   123,   124,
    1068,  1069,   125,   126,   751,   752,   129,  1070,   130,   131,
     132,   133,   753,  1071,     0,  1072,   136,   137,   138,   139,
     140,   141,     0,   143,   144,   145,  1073,   146,   147,   148,
     149,   150,   151,  1074,     0,   153,   154,   155,  1075,  1076,
    1077,     0,  1078,  1079,  1080,   157,   158,   159,   160,   161,
     162,   163,   754,   755,   166,  1081,   167,  1082,   168,   169,
     170,   171,   172,   173,  1083,   174,   175,   176,   177,   178,
    1084,  1085,   179,   180,   181,   182,   183,  1086,   184,   185,
     186,  1087,   187,   188,   189,  1088,   190,   191,   192,   193,
     756,   195,   196,   197,   198,   199,   757,  1089,   201,  1090,
     202,   203,   758,   205,  1091,   206,  1092,   207,     0,  1093,
       0,   210,   211,   212,     0,   214,  1094,   215,  1095,   759,
     760,   218,  1096,   219,   220,   221,   222,   223,   224,   225,
       0,   227,   228,   229,   230,  1097,   231,   232,   233,   234,
     235,   236,  1098,   237,     0,   761,   240,   241,   242,   243,
     244,   762,   763,  1099,   764,  1100,   248,     0,     0,   251,
       0,   253,   254,   255,   256,   257,   258,  1101,  1102,   259,
       0,   261,     0,  1103,   263,   264,   265,  1104,  1105,   266,
     267,   268,   269,   270,   765,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   766,     0,   767,   293,   294,   295,   768,
    1106,   297,   298,     0,   300,  1107,   769,   302,   770,   304,
     305,   306,  1108,   307,   308,  1109,  1110,   309,   310,   311,
    1111,  1112,   312,   771,     0,   315,     0,   772,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,  1113,   328,
     329,   773,   331,   332,   774,   334,   335,   336,  1114,   337,
     338,   339,   340,   341,   342,  1115,   343,   344,   345,   775,
     347,   348,   349,   350,  1116,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,  1117,   364,
     365,     0,   367,   368,   369,   776,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,  1118,   382,   383,
     384,   385,   386,  1119,   387,   777,   389,   390,   391,     0,
     393,   394,   778,   396,  1120,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   779,   409,   780,   411,
    1121,   412,   413,  1122,   414,     0,   416,   417,   418,   419,
     420,  1123,   781,   782,  1124,  1125,   423,   424,   783,   426,
     784,  1126,   428,   429,   785,   431,   432,   433,   434,   435,
    1127,  1128,   436,   437,   438,   439,   440,  1129,  1130,   441,
     442,   443,   444,   445,  1131,   787,  1132,   448,     0,   450,
     451,   452,   453,  1133,  1134,   454,  1135,  1136,   455,   456,
     457,   458,   459,   460,   788,   789,   790,   791,   792,   793,
     794,   795,   796,   797,   798,   472,   473,   474,   475,   498,
       0,     0,     0,     0,     0,     0,     0,     0,  1748,     0,
       0,     0,     0,     0,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,     0,   102,   103,   104,     0,     0,
       0,     0,     0,     0,     0,   105,   106,     0,   107,   108,
     109,     0,   111,   112,   113,   114,   115,     0,   117,   118,
       0,   119,   120,   121,   122,   123,   124,     0,     0,   125,
     126,   127,   128,   129,     0,   130,   131,   132,   133,   134,
       0,     0,     0,   136,   137,   138,   139,   140,   141,     0,
     143,   144,   145,     0,   146,   147,   148,   149,   150,   151,
       0,     0,   153,   154,   155,     0,     0,     0,     0,     0,
       0,     0,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,     0,   167,     0,   168,   169,   170,   171,   172,
     173,     0,   174,   175,   176,   177,   178,     0,     0,   179,
     180,   181,   182,   183,     0,   184,   185,   186,     0,   187,
     188,   189,     0,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,     0,   201,     0,   202,   203,   204,
     205,     0,   206,     0,   207,     0,     0,     0,   210,   211,
     212,     0,   214,     0,   215,     0,   216,   217,   218,     0,
     219,   220,   221,   222,   223,   224,   225,     0,   227,   228,
     229,   230,     0,   231,   232,   233,   234,   235,   236,     0,
     237,     0,   239,   240,   241,   242,   243,   244,   245,   246,
       0,   247,     0,   248,     0,     0,   251,     0,   253,   254,
     255,   256,   257,   258,     0,     0,   259,     0,   261,     0,
       0,   263,   264,   265,     0,     0,   266,   267,   268,   269,
     270,   500,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,     0,   292,   293,   294,   295,   296,     0,   297,   298,
       0,   300,     0,   301,   302,   303,   304,   305,   306,     0,
     307,   308,     0,     0,   309,   310,   311,     0,     0,   312,
     313,     0,   315,     0,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,     0,   328,   329,   330,   331,
     332,   333,   334,   335,   336,     0,   337,   338,   339,   340,
     341,   342,     0,   343,   344,   345,   346,   347,   348,   349,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,     0,   364,   365,     0,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,     0,   382,   383,   384,   385,   386,
       0,   387,   388,   389,   390,   391,     0,   393,   394,   395,
     396,     0,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   502,   409,   410,   411,     0,   412,   413,
       0,   414,     0,   416,   417,   418,   419,   420,     0,   421,
     422,     0,     0,   423,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,     0,     0,   436,
     437,   438,   439,   440,     0,     0,   441,   442,   443,   444,
     445,   446,   447,     0,   448,     0,   450,   451,   452,   453,
       0,     0,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   746,  1238,   547,     0,
       0,     0,   822,     0,     0,  2250,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,     0,     0,     0,     0,     0,
       0,     0,   105,   106,     0,   107,   108,   109,     0,   111,
     112,   113,   747,   748,     0,   749,   750,     0,   119,   120,
     121,   122,   123,   124,     0,     0,   125,   126,   751,   752,
     129,     0,   130,   131,   132,   133,   753,     0,     0,     0,
     136,   137,   138,   139,   140,   141,     0,   143,   144,   145,
       0,   146,   147,   148,   149,   150,   151,     0,     0,   153,
     154,   155,     0,     0,     0,     0,     0,     0,     0,   157,
     158,   159,   160,   161,   162,   163,   754,   755,   166,  1374,
     167,     0,   168,   169,   170,   171,   172,   173,     0,   174,
     175,   176,   177,   178,     0,     0,   179,   180,   181,   182,
     183,     0,   184,   185,   186,     0,   187,   188,   189,     0,
     190,   191,   192,   193,   756,   195,   196,   197,   198,   199,
     757,  1239,   201,     0,   202,   203,   758,   205,     0,   206,
       0,   207,     0,     0,     0,   210,   211,   212,     0,   214,
       0,   215,     0,   759,   760,   218,     0,   219,   220,   221,
     222,   223,   224,   225,     0,   227,   228,   229,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,     0,   761,
     240,   241,   242,   243,   244,   762,   763,     0,   764,     0,
     248,     0,     0,   251,     0,   253,   254,   255,   256,   257,
     258,     0,     0,   259,     0,   261,     0,     0,   263,   264,
     265,     0,     0,   266,   267,   268,   269,   270,   765,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   766,     0,   767,
     293,   294,   295,   768,     0,   297,   298,     0,   300,     0,
     769,   302,   770,   304,   305,   306,     0,   307,   308,  1240,
       0,   309,   310,   311,     0,     0,   312,   771,     0,   315,
       0,   772,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,     0,   328,   329,   773,   331,   332,   774,   334,
     335,   336,     0,   337,   338,   339,   340,   341,   342,     0,
     343,   344,   345,   775,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,     0,   364,   365,     0,   367,   368,   369,   776,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,   386,     0,   387,   777,
     389,   390,   391,     0,   393,   394,   778,   396,     0,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     779,   409,   780,   411,     0,   412,   413,     0,   414,     0,
     416,   417,   418,   419,   420,     0,   781,   782,     0,     0,
     423,   424,   783,   426,   784,  1241,   428,   429,   785,   431,
     432,   433,   434,   435,     0,     0,   436,   437,   438,   439,
     440,     0,     0,   441,   442,   443,   444,   445,  1131,   787,
       0,   448,     0,   450,   451,   452,   453,     0,     0,   454,
       0,     0,   455,   456,   457,   458,   459,   460,   788,   789,
     790,   791,   792,   793,   794,   795,   796,   797,   798,   472,
     473,   474,   475,   746,  1238,   547,     0,     0,     0,   822,
    1242,  1243,     0,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,     0,     0,     0,     0,     0,     0,     0,   105,
     106,     0,   107,   108,   109,     0,   111,   112,   113,   747,
     748,     0,   749,   750,     0,   119,   120,   121,   122,   123,
     124,     0,     0,   125,   126,   751,   752,   129,     0,   130,
     131,   132,   133,   753,     0,     0,     0,   136,   137,   138,
     139,   140,   141,     0,   143,   144,   145,     0,   146,   147,
     148,   149,   150,   151,     0,     0,   153,   154,   155,     0,
       0,     0,     0,     0,     0,     0,   157,   158,   159,   160,
     161,   162,   163,   754,   755,   166,  1376,   167,     0,   168,
     169,   170,   171,   172,   173,     0,   174,   175,   176,   177,
     178,     0,     0,   179,   180,   181,   182,   183,     0,   184,
     185,   186,     0,   187,   188,   189,     0,   190,   191,   192,
     193,   756,   195,   196,   197,   198,   199,   757,  1239,   201,
       0,   202,   203,   758,   205,     0,   206,     0,   207,     0,
       0,     0,   210,   211,   212,     0,   214,     0,   215,     0,
     759,   760,   218,     0,   219,   220,   221,   222,   223,   224,
     225,     0,   227,   228,   229,   230,     0,   231,   232,   233,
     234,   235,   236,     0,   237,     0,   761,   240,   241,   242,
     243,   244,   762,   763,     0,   764,     0,   248,     0,     0,
     251,     0,   253,   254,   255,   256,   257,   258,     0,     0,
     259,     0,   261,     0,     0,   263,   264,   265,     0,     0,
     266,   267,   268,   269,   270,   765,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   766,     0,   767,   293,   294,   295,
     768,     0,   297,   298,     0,   300,     0,   769,   302,   770,
     304,   305,   306,     0,   307,   308,  1240,     0,   309,   310,
     311,     0,     0,   312,   771,     0,   315,     0,   772,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,     0,
     328,   329,   773,   331,   332,   774,   334,   335,   336,     0,
     337,   338,   339,   340,   341,   342,     0,   343,   344,   345,
     775,   347,   348,   349,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,     0,
     364,   365,     0,   367,   368,   369,   776,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,     0,   382,
     383,   384,   385,   386,     0,   387,   777,   389,   390,   391,
       0,   393,   394,   778,   396,     0,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   779,   409,   780,
     411,     0,   412,   413,     0,   414,     0,   416,   417,   418,
     419,   420,     0,   781,   782,     0,     0,   423,   424,   783,
     426,   784,  1241,   428,   429,   785,   431,   432,   433,   434,
     435,     0,     0,   436,   437,   438,   439,   440,     0,     0,
     441,   442,   443,   444,   445,  1131,   787,     0,   448,     0,
     450,   451,   452,   453,     0,     0,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   788,   789,   790,   791,   792,
     793,   794,   795,   796,   797,   798,   472,   473,   474,   475,
     746,  1238,   547,     0,     0,     0,   822,  1242,  1243,     0,
       0,     0,     0,     0,     0,     0,     0,    94,    95,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,     0,
       0,     0,     0,     0,     0,     0,   105,   106,     0,   107,
     108,   109,     0,   111,   112,   113,   747,   748,     0,   749,
     750,     0,   119,   120,   121,   122,   123,   124,     0,     0,
     125,   126,   751,   752,   129,     0,   130,   131,   132,   133,
     753,     0,     0,     0,   136,   137,   138,   139,   140,   141,
       0,   143,   144,   145,     0,   146,   147,   148,   149,   150,
     151,     0,     0,   153,   154,   155,     0,     0,     0,     0,
       0,     0,     0,   157,   158,   159,   160,   161,   162,   163,
     754,   755,   166,     0,   167,     0,   168,   169,   170,   171,
     172,   173,     0,   174,   175,   176,   177,   178,     0,     0,
     179,   180,   181,   182,   183,     0,   184,   185,   186,     0,
     187,   188,   189,     0,   190,   191,   192,   193,   756,   195,
     196,   197,   198,   199,   757,  1239,   201,     0,   202,   203,
     758,   205,     0,   206,     0,   207,     0,     0,     0,   210,
     211,   212,     0,   214,     0,   215,     0,   759,   760,   218,
       0,   219,   220,   221,   222,   223,   224,   225,     0,   227,
     228,   229,   230,     0,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   761,   240,   241,   242,   243,   244,   762,
     763,     0,   764,     0,   248,     0,     0,   251,     0,   253,
     254,   255,   256,   257,   258,     0,     0,   259,     0,   261,
       0,     0,   263,   264,   265,     0,     0,   266,   267,   268,
     269,   270,   765,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   766,     0,   767,   293,   294,   295,   768,     0,   297,
     298,     0,   300,     0,   769,   302,   770,   304,   305,   306,
       0,   307,   308,  1240,     0,   309,   310,   311,     0,     0,
     312,   771,     0,   315,     0,   772,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,     0,   328,   329,   773,
     331,   332,   774,   334,   335,   336,     0,   337,   338,   339,
     340,   341,   342,     0,   343,   344,   345,   775,   347,   348,
     349,   350,     0,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,     0,   364,   365,     0,
     367,   368,   369,   776,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
     386,     0,   387,   777,   389,   390,   391,     0,   393,   394,
     778,   396,     0,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   779,   409,   780,   411,     0,   412,
     413,     0,   414,     0,   416,   417,   418,   419,   420,     0,
     781,   782,     0,     0,   423,   424,   783,   426,   784,  1241,
     428,   429,   785,   431,   432,   433,   434,   435,     0,     0,
     436,   437,   438,   439,   440,     0,     0,   441,   442,   443,
     444,   445,  1131,   787,     0,   448,     0,   450,   451,   452,
     453,     0,     0,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   788,   789,   790,   791,   792,   793,   794,   795,
     796,   797,   798,   472,   473,   474,   475,     0,     0,  1315,
       0,     0,  1316,     0,  1242,  1243,  1317,  1318,  1319,  1320,
    1321,     0,  1315,     0,     0,  1316,     0,     0,     0,  1317,
    1318,  1319,  1320,  1321,     0,  1322,     0,     0,     0,  1775,
       0,     0,     0,  1324,     0,     0,     0,     0,  1322,     0,
    1325,     0,     0,     0,     0,     0,  1324,  1315,     0,     0,
    1316,     0,     0,  1325,  1317,  1318,  1319,  1320,  1321,     0,
    1315,     0,     0,  1316,     0,  1326,     0,  1317,  1318,  1319,
    1320,  1321,     0,  1322,     0,     0,     0,     0,  1326,     0,
       0,  1324,     0,     0,     0,     0,  1322,     0,  1325,  1976,
       0,     0,     0,     0,  1324,     0,     0,     0,     0,     0,
       0,  1325,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1326,  1315,     0,  1776,  1316,     0,     0,
       0,  1317,  1318,  1319,  1320,  1321,  1326,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1322,     0,     0,     0,     0,     0,     0,     0,  1324,     0,
       0,     0,     0,     0,     0,  1325,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1327,     0,     0,  2015,
       0,     0,     0,     0,  2016,     0,     0,     0,     0,  1327,
    1326,     0,  1328,     0,     0,     0,     0,  1329,     0,     0,
       0,     0,     0,     0,     0,  1328,     0,     0,     0,     0,
    1329,     0,     0,  3008,     0,     0,     0,     0,     0,  1330,
    1331,     0,     0,     0,  1327,     0,     0,     0,     0,     0,
       0,     0,  1330,  1331,  1332,     0,     0,  1327,     0,     0,
    1328,     0,     0,     0,     0,  1329,     0,  1332,     0,     0,
       0,     0,     0,  1328,     0,     0,     0,     0,  1329,     0,
       0,     0,     0,     0,     0,     0,     0,  1330,  1331,     0,
       0,     0,  1333,     0,     0,  1334,     0,     0,     0,     0,
    1330,  1331,  1332,     0,     0,  1333,     0,     0,  1334,  1335,
       0,  1327,  1336,     0,     0,  1332,     0,     0,     0,     0,
       0,     0,  1335,     0,     0,  1336,     0,  1328,     0,     0,
       0,     0,  1329,     0,     0,     0,     0,     0,     0,     0,
    1333,     0,     0,  1334,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1333,  1330,  1331,  1334,  1335,     0,     0,
    1336,     0,     0,     0,     0,     0,     0,     0,     0,  1332,
    1335,     0,     0,  1336,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3009,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1337,     0,     0,     0,     0,     0,  1333,     0,     0,
    1334,     0,     0,     0,  1337,     0,     0,     0,     0,     0,
       0,     0,  1315,     0,  1335,  1316,     0,  1336,     0,  1317,
    1318,  1319,  1320,  1321,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1988,     0,     0,  1322,  1337,
       0,  2021,     0,     0,     0,     0,  1324,     0,     0,     0,
    1780,     0,  1337,  1325,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1326,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1338,     0,     0,  1339,  1340,  1341,     0,  1342,  1343,
    1344,  1345,  1346,  1347,  1338,     0,  1337,  1339,  1340,  1341,
       0,  1342,  1343,  1344,  1345,  1346,  1347,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1338,
       0,     0,  1339,  1340,  1341,     0,  1342,  1343,  1344,  1345,
    1346,  1347,  1338,     0,     0,  1339,  1340,  1341,     0,  1342,
    1343,  1344,  1345,  1346,  1347,     0,     0,  1315,     0,     0,
    1316,     0,     0,     0,  1317,  1318,  1319,  1320,  1321,  1327,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1322,     0,  1328,     0,     0,     0,     0,
    1329,  1324,     0,     0,     0,     0,  1338,     0,  1325,  1339,
    1340,  1341,     0,  1342,  1343,  1344,  1345,  1346,  1347,     0,
       0,     0,  1330,  1331,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1326,     0,  1315,     0,  1332,  1316,     0,
       0,     0,  1317,  1318,  1319,  1320,  1321,     0,  1315,     0,
       0,  1316,     0,     0,     0,  1317,  1318,  1319,  1320,  1321,
       0,  1322,     0,     0,  2028,     0,     0,     0,     0,  1324,
       0,     0,     0,     0,  1322,  1333,  1325,     0,  1334,     0,
       0,     0,  1324,     0,     0,     0,     0,     0,     0,  1325,
       0,     0,  1335,     0,     0,  1336,     0,  1315,     0,     0,
    1316,  1326,     0,     0,  1317,  1318,  1319,  1320,  1321,     0,
       0,     0,     0,     0,  1326,     0,     0,     0,     0,     0,
       0,     0,     0,  1322,     0,     0,  2299,     0,     0,  2026,
       0,  1324,     0,  1315,  1327,     0,  1316,     0,  1325,     0,
    1317,  1318,  1319,  1320,  1321,     0,     0,     0,     0,     0,
    1328,     0,     0,     0,     0,  1329,     0,     0,     0,  1322,
       0,     0,     0,  1326,     0,     0,     0,  1324,     0,     0,
       0,     0,     0,     0,  1325,     0,     0,  1330,  1331,     0,
       0,     0,     0,     0,  1337,     0,     0,     0,     0,     0,
       0,     0,  1332,     0,     0,     0,     0,     0,     0,  1326,
       0,     0,  1327,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1327,     0,     0,  1328,     0,
       0,     0,     0,  1329,     0,     0,     0,     0,     0,     0,
    1333,  1328,     0,  1334,     0,     0,  1329,     0,     0,     0,
       0,     0,     0,     0,     0,  1330,  1331,  1335,     0,     0,
    1336,     0,     0,     0,     0,     0,     0,     0,  1330,  1331,
    1332,     0,     0,     0,  1327,     0,     0,     0,     0,     0,
       0,     0,     0,  1332,     0,     0,     0,     0,     0,     0,
    1328,     0,     0,     0,  1338,  1329,     0,  1339,  1340,  1341,
       0,  1342,  1343,  1344,  1345,  1346,  1347,     0,  1333,     0,
    1327,  1334,     0,     0,     0,     0,     0,  1330,  1331,     0,
       0,  1333,     0,     0,  1334,  1335,  1328,     0,  1336,     0,
       0,  1329,  1332,     0,     0,     0,     0,     0,  1335,     0,
       0,  1336,     0,     0,     0,     0,     0,     0,     0,  1337,
       0,     0,     0,  1330,  1331,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1332,     0,
    1333,     0,     0,  1334,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1335,     0,     0,
    1336,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1333,     0,     0,  1334,
       0,     0,     0,     0,     0,     0,     0,  1337,     0,     0,
       0,     0,     0,  1335,     0,     0,  1336,     0,     0,  1315,
    1337,     0,  1316,     0,     0,     0,  1317,  1318,  1319,  1320,
    1321,     0,     0,     0,     0,     0,     0,     0,     0,  1338,
       0,     0,  1339,  1340,  1341,  1322,  1342,  1343,  1344,  1345,
    1346,  1347,  2254,  1324,     0,     0,     0,     0,     0,     0,
    1325,     0,     0,     0,     0,     0,     0,     0,     0,  1337,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1326,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1337,     0,  1338,     0,     0,
    1339,  1340,  1341,     0,  1342,  1343,  1344,  1345,  1346,  1347,
    1338,     0,     0,  1339,  1340,  1341,     0,  1342,  1343,  1344,
    1345,  1346,  1347,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1338,
       0,     0,  1339,  1340,  1341,     0,  1342,  1343,  1344,  1345,
    1346,  1347,     0,     0,     0,     0,  1327,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1328,     0,     0,  1338,     0,  1329,  1339,  1340,
    1341,     0,  1342,  1343,  1344,  1345,  1346,  1347,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1330,
    1331,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1332,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1333,     0,     0,  1334,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1335,
       0,     0,  1336,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1337,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1057,     0,  1685,
       0,  1338,     0,     0,  1339,  1340,  1341,     0,  1342,  1343,
    1344,  1345,  1795,  1347,    94,    95,    96,    97,    98,    99,
     100,   101,  1058,   102,   103,   104,  1059,  1060,  1061,  1062,
    1063,  1064,  1065,   105,   106,  1066,   107,   108,   109,     0,
     111,   112,   113,   747,   748,     0,   749,   750,  1067,   119,
     120,   121,   122,   123,   124,  1068,  1069,   125,   126,   751,
     752,   129,  1070,   130,   131,   132,   133,   753,  1071,     0,
    1072,   136,   137,   138,   139,   140,   141,     0,   143,   144,
     145,  1073,   146,   147,   148,   149,   150,   151,  1074,     0,
     153,   154,   155,  1075,  1076,  1077,     0,  1078,  1079,  1080,
     157,   158,   159,   160,   161,   162,   163,   754,   755,   166,
    1081,   167,  1082,   168,   169,   170,   171,   172,   173,  1083,
     174,   175,   176,   177,   178,  1084,  1085,   179,   180,   181,
     182,   183,  1086,   184,   185,   186,  1087,   187,   188,   189,
    1088,   190,   191,   192,   193,   756,   195,   196,   197,   198,
     199,   757,  1089,   201,  1090,   202,   203,   758,   205,  1091,
     206,  1092,   207,     0,  1093,     0,   210,   211,   212,     0,
     214,  1094,   215,  1095,   759,   760,   218,  1096,   219,   220,
     221,   222,   223,   224,   225,     0,   227,   228,   229,   230,
    1097,   231,   232,   233,   234,   235,   236,  1098,   237,     0,
     761,   240,   241,   242,   243,   244,   762,   763,  1099,   764,
    1100,   248,     0,     0,   251,     0,   253,   254,   255,   256,
     257,   258,  1101,  1102,   259,     0,   261,     0,  1103,   263,
     264,   265,  1104,  1105,   266,   267,   268,   269,   270,   765,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   766,     0,
     767,   293,   294,   295,   768,  1106,   297,   298,     0,   300,
    1107,   769,   302,   770,   304,   305,   306,  1108,   307,   308,
    1109,  1110,   309,   310,   311,  1111,  1112,   312,   771,     0,
     315,     0,   772,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,  1113,   328,   329,   773,   331,   332,   774,
     334,   335,   336,  1114,   337,   338,   339,   340,   341,   342,
    1115,   343,   344,   345,   775,   347,   348,   349,   350,  1116,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,  1117,   364,   365,     0,   367,   368,   369,
     776,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,  1118,   382,   383,   384,   385,   386,  1119,   387,
     777,   389,   390,   391,     0,   393,   394,   778,   396,  1120,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   779,   409,   780,   411,  1121,   412,   413,  1122,   414,
       0,   416,   417,   418,   419,   420,  1123,   781,   782,  1124,
    1125,   423,   424,   783,   426,   784,  1126,   428,   429,   785,
     431,   432,   433,   434,   435,  1127,  1128,   436,   437,   438,
     439,   440,  1129,  1130,   441,   442,   443,   444,   445,  1131,
     787,  1132,   448,     0,   450,   451,   452,   453,  1133,  1134,
     454,  1135,  1136,   455,   456,   457,   458,   459,   460,   788,
     789,   790,   791,   792,   793,   794,   795,   796,   797,   798,
     472,   473,   474,   475,  1057,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    94,    95,    96,    97,    98,    99,   100,   101,  1058,
     102,   103,   104,  1059,  1060,  1061,  1062,  1063,  1064,  1065,
     105,   106,  1066,   107,   108,   109,     0,   111,   112,   113,
     747,   748,     0,   749,   750,  1067,   119,   120,   121,   122,
     123,   124,  1068,  1069,   125,   126,   751,   752,   129,  1070,
     130,   131,   132,   133,   753,  1071,     0,  1072,   136,   137,
     138,   139,   140,   141,     0,   143,   144,   145,  1073,   146,
     147,   148,   149,   150,   151,  1074,     0,   153,   154,   155,
    1075,  1076,  1077,     0,  1078,  1079,  1080,   157,   158,   159,
     160,   161,   162,   163,   754,   755,   166,  1081,   167,  1082,
     168,   169,   170,   171,   172,   173,  1083,   174,   175,   176,
     177,   178,  1084,  1085,   179,   180,   181,   182,   183,  1086,
     184,   185,   186,  1087,   187,   188,   189,  1088,   190,   191,
     192,   193,   756,   195,   196,   197,   198,   199,   757,  1089,
     201,  1090,   202,   203,   758,   205,  1091,   206,  1092,   207,
       0,  1093,     0,   210,   211,   212,     0,   214,  1094,   215,
    1095,   759,   760,   218,  1096,   219,   220,   221,   222,   223,
     224,   225,     0,   227,   228,   229,   230,  1097,   231,   232,
     233,   234,   235,   236,  1098,   237,     0,   761,   240,   241,
     242,   243,   244,   762,   763,  1099,   764,  1100,   248,     0,
       0,   251,     0,   253,   254,   255,   256,   257,   258,  1101,
    1102,   259,     0,   261,     0,  1103,   263,   264,   265,  1104,
    1105,   266,   267,   268,   269,   270,   765,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   766,     0,   767,   293,   294,
     295,   768,  1106,   297,   298,     0,   300,  1107,   769,   302,
     770,   304,   305,   306,  1108,   307,   308,  1109,  1110,   309,
     310,   311,  1111,  1112,   312,   771,     0,   315,     0,   772,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
    1113,   328,   329,   773,   331,   332,   774,   334,   335,   336,
    1114,   337,   338,   339,   340,   341,   342,  1115,   343,   344,
     345,   775,   347,   348,   349,   350,  1116,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
    1117,   364,   365,     0,   367,   368,   369,   776,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,  1118,
     382,   383,   384,   385,   386,  1119,   387,   777,   389,   390,
     391,     0,   393,   394,   778,   396,  1120,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   779,   409,
     780,   411,  1121,   412,   413,  1122,   414,     0,   416,   417,
     418,   419,   420,  1123,   781,   782,  1124,  1125,   423,   424,
     783,   426,   784,  1126,   428,   429,   785,   431,   432,   433,
     434,   435,  1127,  1128,   436,   437,   438,   439,   440,  1129,
    1130,   441,   442,   443,   444,   445,  1131,   787,  1132,   448,
       0,   450,   451,   452,   453,  1133,  1134,   454,  1135,  1136,
     455,   456,   457,   458,   459,   460,   788,   789,   790,   791,
     792,   793,   794,   795,   796,   797,   798,   472,   473,   474,
     475,  1057,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,  1830,    99,   100,   101,  1058,   102,   103,   104,
    1059,  1060,  1061,  1062,  1063,  1064,  1065,   105,   106,  1066,
     107,   108,   109,     0,   111,   112,   113,   747,   748,     0,
     749,   750,  1067,   119,   120,   121,   122,   123,   124,  1068,
    1069,   125,   126,   751,   752,   129,  1070,   130,   131,   132,
     133,   753,  1071,     0,  1072,   136,   137,   138,   139,   140,
     141,     0,   143,   144,   145,  1073,   146,   147,   148,   149,
     150,   151,  1074,     0,   153,   154,   155,  1075,  1076,  1077,
       0,  1078,  1079,  1080,   157,   158,   159,   160,   161,   162,
     163,   754,   755,   166,  1081,   167,  1082,   168,   169,   170,
     171,   172,   173,  1083,   174,   175,   176,   177,   178,  1084,
    1085,   179,   180,   181,  1831,   183,  1086,   184,   185,   186,
    1087,   187,   188,   189,  1088,   190,   191,   192,   193,   756,
     195,   196,   197,   198,   199,   757,  1089,   201,  1090,   202,
     203,   758,   205,  1091,   206,  1092,   207,     0,  1093,     0,
     210,   211,   212,     0,   214,  1094,   215,  1095,   759,   760,
     218,  1096,   219,   220,   221,   222,   223,   224,   225,     0,
     227,   228,   229,   230,  1097,   231,   232,   233,   234,   235,
     236,  1098,   237,     0,   761,   240,   241,   242,   243,   244,
     762,   763,  1099,   764,  1100,   248,     0,     0,   251,     0,
     253,   254,   255,   256,   257,   258,  1101,  1102,   259,     0,
     261,     0,  1103,   263,   264,   265,  1104,  1105,   266,   267,
     268,   269,   270,   765,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   766,     0,   767,   293,   294,   295,   768,  1106,
     297,   298,     0,   300,  1107,   769,   302,   770,   304,   305,
     306,  1108,   307,   308,  1109,  1110,   309,   310,   311,  1111,
    1112,   312,   771,     0,   315,     0,   772,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,  1113,   328,   329,
     773,   331,   332,   774,   334,   335,   336,  1114,   337,   338,
     339,   340,   341,   342,  1115,   343,   344,   345,   775,   347,
     348,   349,   350,  1116,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,  1117,   364,   365,
       0,   367,   368,   369,   776,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,  1118,   382,   383,   384,
     385,   386,  1119,  1832,   777,   389,   390,   391,     0,   393,
     394,   778,   396,  1120,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   779,   409,   780,   411,  1121,
     412,   413,  1122,   414,     0,   416,   417,   418,   419,   420,
    1123,   781,   782,  1124,  1125,   423,   424,   783,   426,   784,
    1126,   428,   429,   785,   431,   432,   433,   434,   435,  1127,
    1128,   436,   437,   438,   439,   440,  1129,  1130,   441,   442,
     443,   444,   445,  1131,   787,  1132,   448,     0,   450,   451,
     452,   453,  1133,  1134,   454,  1135,  1136,   455,   456,   457,
     458,   459,   460,   788,   789,   790,   791,   792,   793,   794,
     795,   796,   797,   798,   472,   473,   474,   475,    93,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    94,    95,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,     0,     0,     0,
       0,     0,     0,     0,   105,   106,     0,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   118,     0,
     119,   120,   121,   122,   123,   124,     0,   829,   125,   126,
     127,   128,   129,     0,   130,   131,   132,   133,   832,     0,
     833,     0,   136,   137,   138,   139,   140,   141,   142,   143,
     144,   145,     0,   146,   147,   148,   149,   150,   151,     0,
     152,   153,   154,   155,   834,   835,   836,   837,   838,   839,
     840,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,     0,   167,     0,   168,   169,   170,   171,   172,   173,
       0,   174,   175,   176,   177,   178,     0,     0,   179,   180,
     181,   182,   183,     0,   184,   185,   186,     0,   187,   188,
     189,     0,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   845,     0,   201,     0,   202,   203,   204,   205,
       0,   206,     0,   207,   208,     0,   209,   210,   211,   212,
     213,   214,     0,   215,     0,   216,   217,   218,     0,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,     0,   231,   232,   233,   234,   235,   236,     0,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,     0,
     247,     0,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,     0,     0,   259,   260,   261,   262,     0,
     263,   264,   265,   853,   854,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,     0,   297,   298,   299,
     300,     0,   859,   302,   303,   304,   305,   306,     0,   307,
     308,     0,     0,   309,   310,   311,     0,     0,   312,   313,
     314,   315,   316,   862,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   863,   331,   332,
     333,   334,   335,   336,     0,   337,   338,   339,   340,   341,
     342,     0,   343,   344,   345,   346,   347,   348,   349,   350,
       0,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,     0,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,   386,   866,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
       0,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   868,   411,     0,   412,   413,     0,
     414,   415,   416,   417,   418,   419,   420,     0,   421,   422,
       0,     0,   423,   424,   871,   426,   872,     0,   428,   429,
     874,   431,   432,   433,   434,   435,     0,     0,   436,   437,
     438,   439,   440,   875,     0,   441,   442,   443,   444,   445,
     446,   447,     0,   448,   449,   450,   451,   452,   453,     0,
       0,   454,     0,     0,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,    93,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,     0,     0,     0,     0,     0,     0,
       0,   105,   106,     0,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,     0,   119,   120,   121,
     122,   123,   124,     0,     0,   125,   126,   127,   128,   129,
       0,   130,   131,   132,   133,   134,     0,   135,     0,   136,
     137,   138,   139,   140,   141,   142,   143,   144,   145,     0,
     146,   147,   148,   149,   150,   151,     0,   152,   153,   154,
     155,     0,     0,     0,   156,     0,     0,     0,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,     0,   167,
       0,   168,   169,   170,   171,   172,   173,     0,   174,   175,
     176,   177,   178,     0,     0,   179,   180,   181,   182,   183,
       0,   184,   185,   186,     0,   187,   188,   189,     0,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
       0,   201,     0,   202,   203,   204,   205,     0,   206,     0,
     207,   208,     0,   209,   210,   211,   212,   213,   214,     0,
     215,     0,   216,   217,   218,     0,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,     0,   231,
     232,   233,   234,   235,   236,     0,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,     0,   247,     0,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
       0,     0,   259,   260,   261,   262,     0,   263,   264,   265,
       0,     0,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,     0,   297,   298,   299,   300,     0,   301,
     302,   303,   304,   305,   306,     0,   307,   308,     0,     0,
     309,   310,   311,     0,     0,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,   331,   332,   333,   334,   335,
     336,     0,   337,   338,   339,   340,   341,   342,     0,   343,
     344,   345,   346,   347,   348,   349,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,     0,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
       0,   382,   383,   384,   385,   386,     0,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,     0,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,   413,     0,   414,   415,   416,
     417,   418,   419,   420,     0,   421,   422,     0,     0,   423,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,     0,     0,   436,   437,   438,   439,   440,
       0,     0,   441,   442,   443,   444,   445,   446,   447,     0,
     448,   449,   450,   451,   452,   453,     0,     0,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   498,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    94,
      95,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,     0,     0,     0,     0,     0,     0,     0,   105,   106,
       0,   107,   108,   109,     0,   111,   112,   113,   114,   115,
       0,   117,   118,     0,   119,   120,   121,   122,   123,   124,
       0,     0,   125,   126,   127,   128,   129,  1436,   130,   131,
     132,   133,   134,     0,     0,  1437,   136,   137,   138,   139,
     140,   141,     0,   143,   144,   145,  1438,   146,   147,   148,
     149,   150,   151,     0,     0,   153,   154,   155,     0,     0,
       0,     0,     0,     0,     0,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,     0,   167,     0,   168,   169,
     170,   171,   172,   173,     0,   174,   175,   176,   177,   178,
       0,     0,   179,   180,   181,   182,   183,     0,   184,   185,
     186,     0,   187,   188,   189,     0,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,     0,   201,     0,
     202,   203,   204,   205,     0,   206,  1439,   207,     0,     0,
       0,   210,   211,   212,     0,   214,     0,   215,     0,   216,
     217,   218,     0,   219,   220,   221,   222,   223,  1440,   225,
       0,   227,   228,   229,   230,     0,   231,   232,   233,   234,
     235,   236,     0,   237,     0,   239,   240,   241,   242,   243,
     244,   245,   246,     0,   247,     0,   248,     0,     0,   251,
       0,   253,   254,   255,   256,   257,   258,     0,     0,   259,
       0,   261,     0,     0,   263,   264,   265,     0,     0,   266,
     267,   268,   269,   270,   500,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,     0,   292,   293,   294,   295,   296,
       0,   297,   298,     0,   300,     0,   301,   302,   303,   304,
     305,   306,     0,   307,   308,     0,     0,   309,   310,   311,
       0,     0,   312,   313,     0,   315,     0,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,     0,   328,
     329,   330,   331,   332,   333,   334,   335,   336,  1441,   337,
     338,   339,   340,   341,   342,     0,   343,   344,   345,   346,
     347,   348,   349,   350,     0,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,     0,   364,
     365,     0,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,   386,     0,   387,   388,   389,   390,   391,     0,
     393,   394,   395,   396,     0,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   502,   409,   410,   411,
       0,   412,   413,     0,   414,     0,   416,   417,   418,   419,
     420,     0,   421,   422,     0,     0,   423,   424,   425,   426,
     427,     0,   428,   429,   430,   431,   432,   433,   434,   435,
       0,  1442,   436,   437,   438,   439,   440,     0,     0,   441,
     442,   443,   444,   445,   446,   447,     0,   448,     0,   450,
     451,   452,   453,     0,     0,   454,     0,     0,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   498,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,     0,   102,   103,   104,     0,     0,
       0,     0,     0,     0,     0,   105,   106,     0,   107,   108,
     109,     0,   111,   112,   113,   114,   115,     0,   117,   118,
       0,   119,   120,   121,   122,   123,   124,     0,     0,   125,
     126,   127,   128,   129,  1436,   130,   131,   132,   133,   134,
       0,     0,     0,   136,   137,   138,   139,   140,   141,     0,
     143,   144,   145,  1438,   146,   147,   148,   149,   150,   151,
       0,     0,   153,   154,   155,     0,     0,     0,     0,     0,
       0,     0,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,     0,   167,     0,   168,   169,   170,   171,   172,
     173,     0,   174,   175,   176,   177,   178,     0,     0,   179,
     180,   181,   182,   183,     0,   184,   185,   186,     0,   187,
     188,   189,     0,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,     0,   201,     0,   202,   203,   204,
     205,     0,   206,  1439,   207,     0,     0,     0,   210,   211,
     212,     0,   214,     0,   215,     0,   216,   217,   218,     0,
     219,   220,   221,   222,   223,   224,   225,     0,   227,   228,
     229,   230,     0,   231,   232,   233,   234,   235,   236,     0,
     237,     0,   239,   240,   241,   242,   243,   244,   245,   246,
       0,   247,     0,   248,     0,     0,   251,     0,   253,   254,
     255,   256,   257,   258,     0,     0,   259,     0,   261,  1900,
       0,   263,   264,   265,     0,     0,   266,   267,   268,   269,
     270,   500,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,     0,   292,   293,   294,   295,   296,     0,   297,   298,
       0,   300,     0,   301,   302,   303,   304,   305,   306,     0,
     307,   308,     0,     0,   309,   310,   311,     0,     0,   312,
     313,     0,   315,     0,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,     0,   328,   329,   330,   331,
     332,   333,   334,   335,   336,  1441,   337,   338,   339,   340,
     341,   342,     0,   343,   344,   345,   346,   347,   348,   349,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,     0,   364,   365,     0,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,     0,   382,   383,   384,   385,   386,
       0,   387,   388,   389,   390,   391,     0,   393,   394,   395,
     396,     0,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   502,   409,   410,   411,     0,   412,   413,
       0,   414,     0,   416,   417,   418,   419,   420,     0,   421,
     422,     0,     0,   423,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,     0,  1442,   436,
     437,   438,   439,   440,     0,     0,   441,   442,   443,   444,
     445,   446,   447,     0,   448,     0,   450,   451,   452,   453,
       0,     0,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   746,     0,   547,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,     0,     0,     0,     0,     0,
       0,     0,   105,   106,     0,   107,   108,   109,     0,   111,
     112,   113,   747,   748,     0,   749,   750,     0,   119,   120,
     121,   122,   123,   124,     0,     0,   125,   126,   751,   752,
     129,     0,   130,   131,   132,   133,   753,     0,     0,     0,
     136,   137,   138,   139,   140,   141,     0,   143,   144,   145,
       0,   146,   147,   148,   149,   150,   151,     0,     0,   153,
     154,   155,     0,     0,     0,     0,     0,     0,     0,   157,
     158,   159,   160,   161,   162,   163,   754,   755,   166,     0,
     167,     0,   168,   169,   170,   171,   172,   173,     0,   174,
     175,   176,   177,   178,     0,     0,   179,   180,   181,   182,
     183,     0,   184,   185,   186,     0,   187,   188,   189,     0,
     190,   191,   192,   193,   756,   195,   196,   197,   198,   199,
     757,  1239,   201,     0,   202,   203,   758,   205,     0,   206,
       0,   207,     0,     0,     0,   210,   211,   212,     0,   214,
       0,   215,     0,   759,   760,   218,     0,   219,   220,   221,
     222,   223,   224,   225,     0,   227,   228,   229,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,     0,   761,
     240,   241,   242,   243,   244,   762,   763,     0,   764,     0,
     248,     0,     0,   251,     0,   253,   254,   255,   256,   257,
     258,     0,     0,   259,     0,   261,     0,     0,   263,   264,
     265,     0,     0,   266,   267,   268,   269,   270,   765,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   766,     0,   767,
     293,   294,   295,   768,     0,   297,   298,     0,   300,     0,
     769,   302,   770,   304,   305,   306,     0,   307,   308,  1240,
       0,   309,   310,   311,     0,     0,   312,   771,     0,   315,
       0,   772,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,     0,   328,   329,   773,   331,   332,   774,   334,
     335,   336,     0,   337,   338,   339,   340,   341,   342,     0,
     343,   344,   345,   775,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,     0,   364,   365,     0,   367,   368,   369,   776,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,   386,     0,   387,   777,
     389,   390,   391,     0,   393,   394,   778,   396,     0,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     779,   409,   780,   411,     0,   412,   413,     0,   414,     0,
     416,   417,   418,   419,   420,     0,   781,   782,     0,     0,
     423,   424,   783,   426,   784,  1241,   428,   429,   785,   431,
     432,   433,   434,   435,     0,     0,   436,   437,   438,   439,
     440,     0,     0,   441,   442,   443,   444,   445,  1131,   787,
       0,   448,     0,   450,   451,   452,   453,     0,     0,   454,
       0,     0,   455,   456,   457,   458,   459,   460,   788,   789,
     790,   791,   792,   793,   794,   795,   796,   797,   798,   472,
     473,   474,   475,   498,     0,   579,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,     3,     4,     0,     0,     0,     0,     0,   105,
     106,     0,   107,   108,   109,     0,   111,   112,   113,   114,
     115,     0,   117,   118,     0,   119,   120,   121,   122,   123,
     124,     0,     0,   125,   126,   127,   128,   129,     0,   130,
     131,   132,   133,   134,     0,     0,     0,   136,   137,   138,
     139,   140,   141,     0,   143,   144,   145,     0,   146,   147,
     148,   149,   150,   151,     0,     0,   153,   154,   155,     0,
       0,     0,     0,     0,     0,     0,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,     0,   167,     0,   168,
     169,   170,   171,   172,   173,     0,   174,   175,   176,   177,
     178,     0,     0,   179,   180,   181,   182,   183,     0,   184,
     185,   186,     0,   187,   188,   189,     0,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,     0,   201,
       0,   202,   203,   204,   205,     0,   206,     0,   207,     0,
       0,     0,   210,   211,   212,     0,   214,     0,   215,     0,
     216,   217,   218,     0,   219,   220,   221,   222,   223,   224,
     225,     0,   227,   228,   229,   230,     0,   231,   232,   233,
     234,   235,   236,     0,   237,     0,   239,   240,   241,   242,
     243,   244,   245,   246,     0,   247,     0,   248,     0,     0,
     251,     0,   253,   254,   255,   256,   257,   258,     0,     0,
     259,     0,   261,     0,     0,   263,   264,   265,     0,     0,
     266,   267,   268,   269,   270,   500,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,     0,   292,   293,   294,   295,
     296,     0,   297,   298,     0,   300,     0,   301,   302,   303,
     304,   305,   306,     0,   307,   308,     0,     0,   309,   310,
     311,     0,     0,   312,   313,     0,   315,     0,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,     0,
     328,   329,   330,   331,   332,   333,   334,   335,   336,     0,
     337,   338,   339,   340,   341,   342,     0,   343,   344,   345,
     346,   347,   348,   349,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,     0,
     364,   365,     0,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,     0,   382,
     383,   384,   385,   386,     0,   387,   388,   389,   390,   391,
       0,   393,   394,   395,   396,     0,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   502,   409,   410,
     411,     0,   412,   413,     0,   414,     0,   416,   417,   418,
     419,   420,     0,   421,   422,     0,     0,   423,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,     0,     0,   436,   437,   438,   439,   440,     0,     0,
     441,   442,   443,   444,   445,   446,   447,     0,   448,     0,
     450,   451,   452,   453,     0,     0,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     498,     0,   579,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    94,    95,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,     0,
       0,     0,     0,     0,     0,     0,   105,   106,     0,   107,
     108,   109,     0,   111,   112,   113,   114,   115,     0,   117,
     118,     0,   119,   120,   121,   122,   123,   124,     0,     0,
     125,   126,   127,   128,   129,     0,   130,   131,   132,   133,
     134,     0,     0,     0,   136,   137,   138,   139,   140,   141,
       0,   143,   144,   145,     0,   146,   147,   148,   149,   150,
     151,     0,     0,   153,   154,   155,     0,     0,     0,     0,
       0,     0,     0,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,     0,   167,     0,   168,   169,   170,   171,
     172,   173,     0,   174,   175,   176,   177,   178,     0,     0,
     179,   180,   181,   182,   183,     0,   184,   185,   186,     0,
     187,   188,   189,     0,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,     0,   201,     0,   202,   203,
     204,   205,     0,   206,     0,   207,     0,     0,     0,   210,
     211,   212,     0,   214,     0,   215,     0,   216,   217,   218,
       0,   219,   220,   221,   222,   223,   224,   225,     0,   227,
     228,   229,   230,     0,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   239,   240,   241,   242,   243,   244,   245,
     246,     0,   247,     0,   248,     0,     0,   251,     0,   253,
     254,   255,   256,   257,   258,     0,     0,   259,     0,   261,
       0,     0,   263,   264,   265,     0,     0,   266,   267,   268,
     269,   270,   500,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,     0,   292,   293,   294,   295,   296,     0,   297,
     298,     0,   300,     0,   301,   302,   303,   304,   305,   306,
       0,   307,   308,     0,   580,   309,   310,   311,     0,     0,
     312,   313,     0,   315,     0,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,     0,   328,   329,   330,
     331,   332,   333,   334,   335,   336,     0,   337,   338,   339,
     340,   341,   342,     0,   343,   344,   345,   346,   347,   348,
     349,   350,     0,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,     0,   364,   365,     0,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
     386,     0,   387,   388,   389,   390,   391,     0,   393,   394,
     395,   396,     0,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   502,   409,   410,   411,     0,   412,
     413,     0,   414,     0,   416,   417,   418,   419,   420,     0,
     421,   422,     0,     0,   423,   424,   425,   426,   427,     0,
     428,   429,   430,   431,   432,   433,   434,   435,     0,     0,
     436,   437,   438,   439,   440,     0,     0,   441,   442,   443,
     444,   445,   446,   447,     0,   448,     0,   450,   451,   452,
     453,     0,     0,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   498,     0,   579,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,     0,     0,     0,     0,
       0,     0,     0,   105,   106,     0,   107,   108,   109,     0,
     111,   112,   113,   114,   115,     0,   117,   118,     0,   119,
     120,   121,   122,   123,   124,     0,     0,   125,   126,   127,
     128,   129,     0,   130,   131,   132,   133,   134,     0,     0,
       0,   136,   137,   138,   139,   140,   141,     0,   143,   144,
     145,     0,   146,   147,   148,   149,   150,   151,     0,     0,
     153,   154,   155,     0,     0,     0,     0,     0,     0,     0,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
       0,   167,     0,   168,   169,   170,   171,   172,   173,     0,
     174,   175,   176,   177,   178,     0,     0,   179,   180,   181,
     182,   183,     0,   184,   185,   186,     0,   187,   188,   189,
       0,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,     0,   201,     0,   202,   203,   204,   205,     0,
     206,     0,   207,     0,     0,     0,   210,   211,   212,     0,
     214,     0,   215,     0,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   623,   225,     0,   227,   228,   229,   230,
       0,   231,   232,   233,   234,   235,   236,     0,   237,     0,
     239,   240,   241,   242,   243,   244,   245,   246,     0,   247,
       0,   248,     0,     0,   251,     0,   253,   254,   255,   256,
     257,   258,     0,     0,   259,     0,   261,     0,     0,   263,
     264,   265,     0,     0,   266,   267,   268,   269,   270,   500,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,     0,
     292,   293,   294,   295,   296,     0,   297,   298,     0,   300,
       0,   301,   302,   303,   304,   305,   306,     0,   307,   308,
       0,   580,   309,   310,   311,     0,     0,   312,   313,     0,
     315,     0,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   330,   331,   332,   333,
     334,   335,   336,     0,   337,   338,   339,   340,   341,   342,
       0,   343,   344,   345,   346,   347,   348,   349,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,     0,   364,   365,     0,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,     0,   382,   383,   384,   385,   386,     0,   387,
     388,   389,   390,   391,     0,   393,   394,   395,   396,     0,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   502,   409,   410,   411,     0,   412,   413,     0,   414,
       0,   416,   417,   418,   419,   420,     0,   421,   422,     0,
       0,   423,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,     0,     0,   436,   437,   438,
     439,   440,     0,     0,   441,   442,   443,   444,   445,   446,
     447,     0,   448,     0,   450,   451,   452,   453,     0,     0,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   746,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    94,    95,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,     3,     4,     0,     0,     0,     0,     0,
     105,   106,     0,   107,   108,   109,     0,   111,   112,   113,
     747,   748,     0,   749,   750,     0,   119,   120,   121,   122,
     123,   124,     0,     0,   125,   126,   751,   752,   129,     0,
     130,   131,   132,   133,   753,     0,     0,     0,   136,   137,
     138,   139,   140,   141,     0,   143,   144,   145,     0,   146,
     147,   148,   149,   150,   151,     0,     0,   153,   154,   155,
       0,     0,     0,     0,     0,     0,     0,   157,   158,   159,
     160,   161,   162,   163,   754,   755,   166,     0,   167,     0,
     168,   169,   170,   171,   172,   173,     0,   174,   175,   176,
     177,   178,     0,     0,   179,   180,   181,   182,   183,     0,
     184,   185,   186,     0,   187,   188,   189,     0,   190,   191,
     192,   193,   756,   195,   196,   197,   198,   199,   757,     0,
     201,     0,   202,   203,   758,   205,     0,   206,     0,   207,
       0,     0,     0,   210,   211,   212,     0,   214,     0,   215,
       0,   759,   760,   218,     0,   219,   220,   221,   222,   223,
     224,   225,     0,   227,   228,   229,   230,     0,   231,   232,
     233,   234,   235,   236,     0,   237,     0,   761,   240,   241,
     242,   243,   244,   762,   763,     0,   764,     0,   248,     0,
       0,   251,     0,   253,   254,   255,   256,   257,   258,     0,
       0,   259,     0,   261,     0,     0,   263,   264,   265,     0,
       0,   266,   267,   268,   269,   270,   765,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   766,     0,   767,   293,   294,
     295,   768,     0,   297,   298,     0,   300,     0,   769,   302,
     770,   304,   305,   306,     0,   307,   308,     0,     0,   309,
     310,   311,     0,     0,   312,   771,     0,   315,     0,   772,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
       0,   328,   329,   773,   331,   332,   774,   334,   335,   336,
       0,   337,   338,   339,   340,   341,   342,     0,   343,   344,
     345,   775,   347,   348,   349,   350,     0,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
       0,   364,   365,     0,   367,   368,   369,   776,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,   386,     0,   387,   777,   389,   390,
     391,     0,   393,   394,   778,   396,     0,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   779,   409,
     780,   411,     0,   412,   413,     0,   414,     0,   416,   417,
     418,   419,   420,     0,   781,   782,     0,     0,   423,   424,
     783,   426,   784,     0,   428,   429,   785,   431,   432,   433,
     434,   435,     0,     0,   436,   437,   438,   439,   440,     0,
       0,   441,   442,   443,   444,   445,  1131,   787,     0,   448,
       0,   450,   451,   452,   453,     0,     0,   454,     0,     0,
     455,   456,   457,   458,   459,   460,   788,   789,   790,   791,
     792,   793,   794,   795,   796,   797,   798,   472,   473,   474,
     475,   498,     0,   579,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   127,   128,   129,     0,   130,   131,   132,
     133,   134,     0,     0,     0,   136,   137,   138,   139,   140,
     141,     0,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,     0,   153,   154,   155,     0,     0,     0,
       0,     0,     0,     0,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,     0,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   181,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,     0,   201,     0,   202,
     203,   204,   205,     0,   206,     0,   207,     0,     0,     0,
     210,   211,   212,     0,  1737,     0,   215,     0,   216,   217,
     218,     0,   219,   220,   221,   222,   223,   224,   225,     0,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   239,   240,   241,   242,   243,   244,
     245,   246,     0,   247,     0,   248,     0,     0,   251,     0,
     253,   254,   255,   256,   257,   258,     0,     0,   259,     0,
     261,     0,     0,   263,   264,  1738,     0,     0,   266,   267,
     268,   269,   270,   500,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   292,   293,   294,   295,   296,     0,
     297,   298,     0,   300,     0,   301,   302,   303,   304,   305,
     306,     0,   307,   308,     0,     0,   309,   310,   311,     0,
       0,   312,   313,     0,   315,     0,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
       0,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   387,   388,   389,   390,   391,     0,   393,
     394,   395,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   502,   409,   410,   411,     0,
     412,   413,  1739,   414,     0,   416,  1740,   418,  1741,   420,
       0,   421,   422,     0,     0,   423,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,     0,
       0,   436,   437,  1742,   439,   440,     0,     0,   441,   442,
     443,   444,   445,   446,   447,     0,   448,     0,   450,   451,
     452,   453,     0,     0,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   498,  2695,
       0,     0,     0,     0,  2696,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    94,    95,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,     0,     0,     0,
       0,     0,     0,     0,   105,   106,     0,   107,   108,   109,
       0,   111,   112,   113,   114,   115,     0,   117,   118,     0,
     119,   120,   121,   122,   123,   124,     0,     0,   125,   126,
     127,   128,   129,     0,   130,   131,   132,   133,   134,     0,
       0,     0,   136,   137,   138,   139,   140,   141,     0,   143,
     144,   145,     0,   146,   147,   148,   149,   150,   151,     0,
       0,   153,   154,   155,     0,     0,     0,     0,     0,     0,
       0,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,     0,   167,     0,   168,   169,   170,   171,   172,   173,
       0,   174,   175,   176,   177,   178,     0,     0,   179,   180,
     181,   182,   183,     0,   184,   185,   186,     0,   187,   188,
     189,     0,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,     0,   201,     0,   202,   203,   204,   205,
       0,   206,     0,   207,     0,     0,     0,   210,   211,   212,
       0,   214,     0,   215,     0,   216,   217,   218,     0,   219,
     220,   221,   222,   223,   224,   225,     0,   227,   228,   229,
     230,     0,   231,   232,   233,   234,   235,   236,     0,   237,
       0,   239,   240,   241,   242,   243,   244,   245,   246,     0,
     247,     0,   248,     0,     0,   251,     0,   253,   254,   255,
     256,   257,   258,     0,     0,   259,     0,   261,     0,     0,
     263,   264,   265,     0,     0,   266,   267,   268,   269,   270,
     500,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   292,   293,   294,   295,   296,     0,   297,   298,     0,
     300,     0,   301,   302,   303,   304,   305,   306,     0,   307,
     308,     0,     0,   309,   310,   311,     0,     0,   312,   313,
       0,   315,     0,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,     0,   337,   338,   339,   340,   341,
     342,     0,   343,   344,   345,   346,   347,   348,   349,   350,
       0,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,     0,   364,   365,     0,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,   386,     0,
     387,   388,   389,   390,   391,     0,   393,   394,   395,   396,
       0,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   502,   409,   410,   411,     0,   412,   413,     0,
     414,     0,   416,   417,   418,   419,   420,     0,   421,   422,
       0,     0,   423,   424,   425,   426,   427,     0,   428,   429,
     430,   431,   432,   433,   434,   435,     0,     0,   436,   437,
     438,   439,   440,     0,     0,   441,   442,   443,   444,   445,
     446,   447,     0,   448,     0,   450,   451,   452,   453,     0,
       0,   454,     0,     0,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   498,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
     499,   102,   103,   104,     0,     0,     0,     0,     0,     0,
       0,   105,   106,     0,   107,   108,   109,     0,   111,   112,
     113,   114,   115,     0,   117,   118,     0,   119,   120,   121,
     122,   123,   124,     0,     0,   125,   126,   127,   128,   129,
       0,   130,   131,   132,   133,   134,     0,     0,     0,   136,
     137,   138,   139,   140,   141,     0,   143,   144,   145,     0,
     146,   147,   148,   149,   150,   151,     0,     0,   153,   154,
     155,     0,     0,     0,     0,     0,     0,     0,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,     0,   167,
       0,   168,   169,   170,   171,   172,   173,     0,   174,   175,
     176,   177,   178,     0,     0,   179,   180,   181,   182,   183,
       0,   184,   185,   186,     0,   187,   188,   189,     0,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
       0,   201,     0,   202,   203,   204,   205,     0,   206,     0,
     207,     0,     0,     0,   210,   211,   212,     0,   214,     0,
     215,     0,   216,   217,   218,     0,   219,   220,   221,   222,
     223,   224,   225,     0,   227,   228,   229,   230,     0,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   239,   240,
     241,   242,   243,   244,   245,   246,     0,   247,     0,   248,
       0,     0,   251,     0,   253,   254,   255,   256,   257,   258,
       0,     0,   259,     0,   261,     0,     0,   263,   264,   265,
       0,     0,   266,   267,   268,   269,   270,   500,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,     0,   292,   293,
     294,   295,   296,     0,   297,   298,     0,   300,     0,   301,
     302,   303,   304,   305,   306,     0,   307,   308,     0,     0,
     309,   310,   311,     0,     0,   312,   313,     0,   315,     0,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,   331,   332,   333,   501,   335,
     336,     0,   337,   338,   339,   340,   341,   342,     0,   343,
     344,   345,   346,   347,   348,   349,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,     0,   364,   365,     0,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
       0,   382,   383,   384,   385,   386,     0,   387,   388,   389,
     390,   391,     0,   393,   394,   395,   396,     0,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   502,
     409,   410,   411,     0,   412,   413,     0,   414,     0,   416,
     417,   418,   419,   420,     0,   421,   422,     0,     0,   423,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,     0,     0,   436,   437,   438,   439,   440,
       0,     0,   441,   442,   443,   444,   445,   446,   447,     0,
     448,     0,   450,   451,   452,   453,     0,     0,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   498,     0,   547,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    94,
      95,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,     0,     0,     0,     0,     0,     0,     0,   105,   106,
       0,   107,   108,   109,     0,   111,   112,   113,   114,   115,
       0,   117,   118,     0,   119,   120,   121,   122,   123,   124,
       0,     0,   125,   126,   127,   128,   129,     0,   130,   131,
     132,   133,   134,     0,     0,     0,   136,   137,   138,   139,
     140,   141,     0,   143,   144,   145,     0,   146,   147,   148,
     149,   150,   151,     0,     0,   153,   154,   155,     0,     0,
       0,     0,     0,     0,     0,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,     0,   167,     0,   168,   169,
     170,   171,   172,   173,     0,   174,   175,   176,   177,   178,
       0,     0,   179,   180,   181,   182,   183,     0,   184,   185,
     186,     0,   187,   188,   189,     0,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,     0,   201,     0,
     202,   203,   204,   205,     0,   206,     0,   207,     0,     0,
       0,   210,   211,   212,     0,   214,     0,   215,     0,   216,
     217,   218,     0,   219,   220,   221,   222,   223,   224,   225,
       0,   227,   228,   229,   230,     0,   231,   232,   233,   234,
     235,   236,     0,   237,     0,   239,   240,   241,   242,   243,
     244,   245,   246,     0,   247,     0,   248,     0,     0,   251,
       0,   253,   254,   255,   256,   257,   258,     0,     0,   259,
       0,   261,     0,     0,   263,   264,   265,     0,     0,   266,
     267,   268,   269,   270,   500,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,     0,   292,   293,   294,   295,   296,
       0,   297,   298,     0,   300,     0,   301,   302,   303,   304,
     305,   306,     0,   307,   308,     0,     0,   309,   310,   311,
       0,     0,   312,   313,     0,   315,     0,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,     0,   328,
     329,   330,   331,   332,   333,   334,   335,   336,     0,   337,
     338,   339,   340,   341,   342,     0,   343,   344,   345,   346,
     347,   348,   349,   350,     0,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,     0,   364,
     365,     0,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,   386,     0,   387,   388,   389,   390,   391,     0,
     393,   394,   395,   396,     0,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   502,   409,   410,   411,
       0,   412,   413,     0,   414,     0,   416,   417,   418,   419,
     420,     0,   421,   422,     0,     0,   423,   424,   425,   426,
     427,     0,   428,   429,   430,   431,   432,   433,   434,   435,
       0,     0,   436,   437,   438,   439,   440,     0,     0,   441,
     442,   443,   444,   445,   446,   447,     0,   448,     0,   450,
     451,   452,   453,     0,     0,   454,     0,     0,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   498,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,   554,   102,   103,   104,     0,     0,
       0,     0,     0,     0,     0,   105,   106,     0,   107,   108,
     109,     0,   111,   112,   113,   114,   115,     0,   117,   118,
       0,   119,   120,   121,   122,   123,   124,     0,     0,   125,
     126,   127,   128,   129,     0,   130,   131,   132,   133,   134,
       0,     0,     0,   136,   137,   138,   139,   140,   141,     0,
     143,   144,   145,     0,   146,   147,   148,   149,   150,   151,
       0,     0,   153,   154,   155,     0,     0,     0,     0,     0,
       0,     0,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,     0,   167,     0,   168,   169,   170,   171,   172,
     173,     0,   174,   175,   176,   177,   178,     0,     0,   179,
     180,   181,   182,   183,     0,   184,   185,   186,     0,   187,
     188,   189,     0,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,     0,   201,     0,   202,   203,   204,
     205,     0,   206,     0,   207,     0,     0,     0,   210,   211,
     212,     0,   214,     0,   215,     0,   216,   217,   218,     0,
     219,   220,   221,   222,   223,   224,   225,     0,   227,   228,
     229,   230,     0,   231,   232,   233,   234,   235,   236,     0,
     237,     0,   239,   240,   241,   242,   243,   244,   245,   246,
       0,   247,     0,   248,     0,     0,   251,     0,   253,   254,
     255,   256,   257,   258,     0,     0,   259,     0,   261,     0,
       0,   263,   264,   265,     0,     0,   266,   267,   268,   269,
     270,   500,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,     0,   292,   293,   294,   295,   296,     0,   297,   298,
       0,   300,     0,   301,   302,   303,   304,   305,   306,     0,
     307,   308,     0,     0,   309,   310,   311,     0,     0,   312,
     313,     0,   315,     0,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,     0,   328,   329,   330,   331,
     332,   333,   334,   335,   336,     0,   337,   338,   339,   340,
     341,   342,     0,   343,   344,   345,   346,   347,   348,   349,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,     0,   364,   365,     0,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,     0,   382,   383,   384,   385,   386,
       0,   387,   388,   389,   390,   391,     0,   393,   394,   395,
     396,     0,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   502,   409,   410,   411,     0,   412,   413,
       0,   414,     0,   416,   417,   418,   419,   420,     0,   555,
     422,     0,     0,   556,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,     0,     0,   436,
     437,   438,   439,   440,     0,     0,   441,   442,   443,   444,
     445,   446,   447,     0,   448,     0,   450,   451,   452,   453,
       0,     0,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   498,     0,   579,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,     0,     0,     0,     0,     0,
       0,     0,   105,   106,     0,   107,   108,   109,     0,   111,
     112,   113,   114,   115,     0,   117,   118,     0,   119,   120,
     121,   122,   123,   124,     0,     0,   125,   126,   127,   128,
     129,     0,   130,   131,   132,   133,   134,     0,     0,     0,
     136,   137,   138,   139,   140,   141,     0,   143,   144,   145,
       0,   146,   147,   148,   149,   150,   151,     0,     0,   153,
     154,   155,     0,     0,     0,     0,     0,     0,     0,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,     0,
     167,     0,   168,   169,   170,   171,   172,   173,     0,   174,
     175,   176,   177,   178,     0,     0,   179,   180,   181,   182,
     183,     0,   184,   185,   186,     0,   187,   188,   189,     0,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,     0,   201,     0,   202,   203,   204,   205,     0,   206,
       0,   207,     0,     0,     0,   210,   211,   212,     0,   214,
       0,   215,     0,   216,   217,   218,     0,   219,   220,   221,
     222,   223,   618,   225,     0,   227,   228,   229,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,     0,   239,
     240,   241,   242,   243,   244,   245,   246,     0,   247,     0,
     248,     0,     0,   251,     0,   253,   254,   255,   256,   257,
     258,     0,     0,   259,     0,   261,     0,     0,   263,   264,
     265,     0,     0,   266,   267,   268,   269,   270,   500,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,     0,   292,
     293,   294,   295,   296,     0,   297,   298,     0,   300,     0,
     301,   302,   303,   304,   305,   306,     0,   307,   308,     0,
       0,   309,   310,   311,     0,     0,   312,   313,     0,   315,
       0,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,     0,   328,   329,   330,   331,   332,   333,   334,
     335,   336,     0,   337,   338,   339,   340,   341,   342,     0,
     343,   344,   345,   346,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,     0,   364,   365,     0,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,   386,     0,   387,   388,
     389,   390,   391,     0,   393,   394,   395,   396,     0,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     502,   409,   410,   411,     0,   412,   413,     0,   414,     0,
     416,   417,   418,   419,   420,     0,   421,   422,     0,     0,
     423,   424,   425,   426,   427,     0,   428,   429,   430,   431,
     432,   433,   434,   435,     0,     0,   436,   437,   438,   439,
     440,     0,     0,   441,   442,   443,   444,   445,   446,   447,
       0,   448,     0,   450,   451,   452,   453,     0,     0,   454,
       0,     0,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   498,     0,   579,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,     0,     0,     0,     0,     0,     0,     0,   105,
     106,     0,   107,   108,   109,     0,   111,   112,   113,   114,
     115,     0,   117,   118,     0,   119,   120,   121,   122,   123,
     124,     0,     0,   125,   126,   127,   128,   129,     0,   130,
     131,   132,   133,   134,     0,     0,     0,   136,   137,   138,
     139,   140,   141,     0,   143,   144,   145,     0,   146,   147,
     148,   149,   150,   151,     0,     0,   153,   154,   155,     0,
       0,     0,     0,     0,     0,     0,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,     0,   167,     0,   168,
     169,   170,   171,   172,   173,     0,   174,   175,   176,   177,
     178,     0,     0,   179,   180,   181,   182,   183,     0,   184,
     185,   186,     0,   187,   188,   189,     0,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,     0,   201,
       0,   202,   203,   204,   205,     0,   206,     0,   207,     0,
       0,     0,   210,   211,   212,     0,   214,     0,   215,     0,
     216,   217,   218,     0,   219,   220,   221,   222,   223,   621,
     225,     0,   227,   228,   229,   230,     0,   231,   232,   233,
     234,   235,   236,     0,   237,     0,   239,   240,   241,   242,
     243,   244,   245,   246,     0,   247,     0,   248,     0,     0,
     251,     0,   253,   254,   255,   256,   257,   258,     0,     0,
     259,     0,   261,     0,     0,   263,   264,   265,     0,     0,
     266,   267,   268,   269,   270,   500,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,     0,   292,   293,   294,   295,
     296,     0,   297,   298,     0,   300,     0,   301,   302,   303,
     304,   305,   306,     0,   307,   308,     0,     0,   309,   310,
     311,     0,     0,   312,   313,     0,   315,     0,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,     0,
     328,   329,   330,   331,   332,   333,   334,   335,   336,     0,
     337,   338,   339,   340,   341,   342,     0,   343,   344,   345,
     346,   347,   348,   349,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,     0,
     364,   365,     0,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,     0,   382,
     383,   384,   385,   386,     0,   387,   388,   389,   390,   391,
       0,   393,   394,   395,   396,     0,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   502,   409,   410,
     411,     0,   412,   413,     0,   414,     0,   416,   417,   418,
     419,   420,     0,   421,   422,     0,     0,   423,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,     0,     0,   436,   437,   438,   439,   440,     0,     0,
     441,   442,   443,   444,   445,   446,   447,     0,   448,     0,
     450,   451,   452,   453,     0,     0,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     498,     0,   579,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    94,    95,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,     0,
       0,     0,     0,     0,     0,     0,   105,   106,     0,   107,
     108,   109,     0,   111,   112,   113,   114,   115,     0,   117,
     118,     0,   119,   120,   121,   122,   123,   124,     0,     0,
     125,   126,   127,   128,   129,     0,   130,   131,   132,   133,
     134,     0,     0,     0,   136,   137,   138,   139,   140,   141,
       0,   143,   144,   145,     0,   146,   147,   148,   149,   150,
     151,     0,     0,   153,   154,   155,     0,     0,     0,     0,
       0,     0,     0,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,     0,   167,     0,   168,   169,   170,   171,
     172,   173,     0,   174,   175,   176,   177,   178,     0,     0,
     179,   180,   181,   182,   183,     0,   184,   185,   186,     0,
     187,   188,   189,     0,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,     0,   201,     0,   202,   203,
     204,   205,     0,   206,     0,   207,     0,     0,     0,   210,
     211,   212,     0,   214,     0,   215,     0,   216,   217,   218,
       0,   219,   220,   221,   222,   223,   625,   225,     0,   227,
     228,   229,   230,     0,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   239,   240,   241,   242,   243,   244,   245,
     246,     0,   247,     0,   248,     0,     0,   251,     0,   253,
     254,   255,   256,   257,   258,     0,     0,   259,     0,   261,
       0,     0,   263,   264,   265,     0,     0,   266,   267,   268,
     269,   270,   500,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,     0,   292,   293,   294,   295,   296,     0,   297,
     298,     0,   300,     0,   301,   302,   303,   304,   305,   306,
       0,   307,   308,     0,     0,   309,   310,   311,     0,     0,
     312,   313,     0,   315,     0,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,     0,   328,   329,   330,
     331,   332,   333,   334,   335,   336,     0,   337,   338,   339,
     340,   341,   342,     0,   343,   344,   345,   346,   347,   348,
     349,   350,     0,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,     0,   364,   365,     0,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
     386,     0,   387,   388,   389,   390,   391,     0,   393,   394,
     395,   396,     0,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   502,   409,   410,   411,     0,   412,
     413,     0,   414,     0,   416,   417,   418,   419,   420,     0,
     421,   422,     0,     0,   423,   424,   425,   426,   427,     0,
     428,   429,   430,   431,   432,   433,   434,   435,     0,     0,
     436,   437,   438,   439,   440,     0,     0,   441,   442,   443,
     444,   445,   446,   447,     0,   448,     0,   450,   451,   452,
     453,     0,     0,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   498,     0,   579,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,     0,     0,     0,     0,
       0,     0,     0,   105,   106,     0,   107,   108,   109,     0,
     111,   112,   113,   114,   115,     0,   117,   118,     0,   119,
     120,   121,   122,   123,   124,     0,     0,   125,   126,   127,
     128,   129,     0,   130,   131,   132,   133,   134,     0,     0,
       0,   136,   137,   138,   139,   140,   141,     0,   143,   144,
     145,     0,   146,   147,   148,   149,   150,   151,     0,     0,
     153,   154,   155,     0,     0,     0,     0,     0,     0,     0,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
       0,   167,     0,   168,   169,   170,   171,   172,   173,     0,
     174,   175,   176,   177,   178,     0,     0,   179,   180,   181,
     182,   183,     0,   184,   185,   186,     0,   187,   188,   189,
       0,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,     0,   201,     0,   202,   203,   204,   205,     0,
     206,     0,   207,     0,     0,     0,   210,   211,   212,     0,
     214,     0,   215,     0,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,   225,     0,   227,   228,   229,   230,
       0,   231,   232,   233,   234,   235,   236,     0,   237,     0,
     239,   240,   241,   242,   243,   244,   245,   246,     0,   247,
       0,   248,     0,     0,   251,     0,   253,   254,   255,   256,
     257,   258,     0,     0,   259,     0,   261,     0,     0,   263,
     264,   265,     0,     0,   266,   267,   268,   269,   270,   500,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,     0,
     292,   293,   294,   295,   296,     0,   297,   298,     0,   300,
       0,   301,   302,   303,   304,   305,   306,     0,   307,   308,
       0,     0,   309,   310,   311,     0,     0,   312,   313,     0,
     315,     0,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   330,   331,   332,   333,
     334,   335,   336,     0,   337,   338,   339,   340,   341,   342,
       0,   343,   344,   345,   346,   347,   348,   349,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,     0,   364,   365,     0,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,     0,   382,   383,   384,   385,   386,     0,   387,
     388,   389,   390,   391,     0,   393,   394,   395,   396,     0,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   502,   409,   410,   411,     0,   412,   413,     0,   414,
       0,   416,   417,   418,   419,   420,     0,   421,   422,     0,
       0,   423,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,     0,     0,   436,   437,   438,
     439,   440,     0,     0,   441,   442,   443,   444,   445,   446,
     447,     0,   448,     0,   450,   451,   452,   453,     0,     0,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   498,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    94,    95,    96,    97,    98,    99,   100,   101,   655,
     102,   103,   104,     0,     0,     0,     0,     0,     0,     0,
     105,   106,     0,   107,   108,   109,     0,   111,   112,   113,
     114,   115,     0,   117,   118,     0,   119,   120,   121,   122,
     123,   124,     0,     0,   125,   126,   127,   128,   129,     0,
     130,   131,   132,   133,   134,     0,     0,     0,   136,   137,
     138,   139,   140,   141,     0,   143,   144,   145,     0,   146,
     147,   148,   149,   150,   151,     0,     0,   153,   154,   155,
       0,     0,     0,     0,     0,     0,     0,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,     0,   167,     0,
     168,   169,   170,   171,   172,   173,     0,   174,   175,   176,
     177,   178,     0,     0,   179,   180,   181,   182,   183,     0,
     184,   185,   186,     0,   187,   188,   189,     0,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,     0,
     201,     0,   202,   203,   204,   205,     0,   206,     0,   207,
       0,     0,     0,   210,   211,   212,     0,   214,     0,   215,
       0,   216,   217,   218,     0,   219,   220,   221,   222,   223,
     224,   225,     0,   227,   228,   229,   230,     0,   231,   232,
     233,   234,   235,   236,     0,   237,     0,   239,   240,   241,
     242,   243,   244,   245,   246,     0,   247,     0,   248,     0,
       0,   251,     0,   253,   254,   255,   256,   257,   258,     0,
       0,   259,     0,   261,     0,     0,   263,   264,   265,     0,
       0,   266,   267,   268,   269,   270,   500,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,     0,   292,   293,   294,
     295,   296,     0,   297,   298,     0,   300,     0,   301,   302,
     303,   304,   305,   306,     0,   307,   308,     0,     0,   309,
     310,   311,     0,     0,   312,   313,     0,   315,     0,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
       0,   328,   329,   330,   331,   332,   333,   334,   335,   336,
       0,   337,   338,   339,   340,   341,   342,     0,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
       0,   364,   365,     0,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,   386,     0,   387,   388,   389,   390,
     391,     0,   393,   394,   395,   396,     0,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   502,   409,
     410,   411,     0,   412,   413,     0,   414,     0,   416,   417,
     418,   419,   420,     0,   421,   422,     0,     0,   423,   424,
     425,   426,   427,     0,   428,   429,   430,   431,   432,   433,
     434,   435,     0,     0,   436,   437,   438,   439,   440,     0,
       0,   441,   442,   443,   444,   445,   446,   447,     0,   448,
       0,   450,   451,   452,   453,     0,     0,   454,     0,     0,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   498,     0,   579,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   127,   128,   129,     0,   130,   131,   132,
     133,   134,     0,     0,     0,   136,   137,   138,   139,   140,
     141,     0,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,     0,   153,   154,   155,     0,     0,     0,
       0,     0,     0,     0,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,     0,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   181,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,     0,   201,     0,   202,
     203,   204,   205,     0,   206,     0,   207,     0,     0,     0,
     210,   211,   212,     0,   214,     0,   215,     0,   216,   217,
     218,     0,   219,   220,   221,   222,   223,  1153,   225,     0,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   239,   240,   241,   242,   243,   244,
     245,   246,     0,   247,     0,   248,     0,     0,   251,     0,
     253,   254,   255,   256,   257,   258,     0,     0,   259,     0,
     261,     0,     0,   263,   264,   265,     0,     0,   266,   267,
     268,   269,   270,   500,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   292,   293,   294,   295,   296,     0,
     297,   298,     0,   300,     0,   301,   302,   303,   304,   305,
     306,     0,   307,   308,     0,     0,   309,   310,   311,     0,
       0,   312,   313,     0,   315,     0,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
       0,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   387,   388,   389,   390,   391,     0,   393,
     394,   395,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   502,   409,   410,   411,     0,
     412,   413,     0,   414,     0,   416,   417,   418,   419,   420,
       0,   421,   422,     0,     0,   423,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,     0,
       0,   436,   437,   438,   439,   440,     0,     0,   441,   442,
     443,   444,   445,   446,   447,     0,   448,     0,   450,   451,
     452,   453,     0,     0,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   498,     0,
     579,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    94,    95,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,     0,     0,     0,
       0,     0,     0,     0,   105,   106,     0,   107,   108,   109,
       0,   111,   112,   113,   114,   115,     0,   117,   118,     0,
     119,   120,   121,   122,   123,   124,     0,     0,   125,   126,
     127,   128,   129,     0,   130,   131,   132,   133,   134,     0,
       0,     0,   136,   137,   138,   139,   140,   141,     0,   143,
     144,   145,     0,   146,   147,   148,   149,   150,   151,     0,
       0,   153,   154,   155,     0,     0,     0,     0,     0,     0,
       0,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,     0,   167,     0,   168,   169,   170,   171,   172,   173,
       0,   174,   175,   176,   177,   178,     0,     0,   179,   180,
     181,   182,   183,     0,   184,   185,   186,     0,   187,   188,
     189,     0,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,     0,   201,     0,   202,   203,   204,   205,
       0,   206,     0,   207,     0,     0,     0,   210,   211,   212,
       0,   214,     0,   215,     0,   216,   217,   218,     0,   219,
     220,   221,   222,   223,  1155,   225,     0,   227,   228,   229,
     230,     0,   231,   232,   233,   234,   235,   236,     0,   237,
       0,   239,   240,   241,   242,   243,   244,   245,   246,     0,
     247,     0,   248,     0,     0,   251,     0,   253,   254,   255,
     256,   257,   258,     0,     0,   259,     0,   261,     0,     0,
     263,   264,   265,     0,     0,   266,   267,   268,   269,   270,
     500,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   292,   293,   294,   295,   296,     0,   297,   298,     0,
     300,     0,   301,   302,   303,   304,   305,   306,     0,   307,
     308,     0,     0,   309,   310,   311,     0,     0,   312,   313,
       0,   315,     0,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,     0,   337,   338,   339,   340,   341,
     342,     0,   343,   344,   345,   346,   347,   348,   349,   350,
       0,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,     0,   364,   365,     0,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,   386,     0,
     387,   388,   389,   390,   391,     0,   393,   394,   395,   396,
       0,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   502,   409,   410,   411,     0,   412,   413,     0,
     414,     0,   416,   417,   418,   419,   420,     0,   421,   422,
       0,     0,   423,   424,   425,   426,   427,     0,   428,   429,
     430,   431,   432,   433,   434,   435,     0,     0,   436,   437,
     438,   439,   440,     0,     0,   441,   442,   443,   444,   445,
     446,   447,     0,   448,     0,   450,   451,   452,   453,     0,
       0,   454,     0,     0,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   498,     0,   579,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,     0,     0,     0,     0,     0,     0,
       0,   105,   106,     0,   107,   108,   109,     0,   111,   112,
     113,   114,   115,     0,   117,   118,     0,   119,   120,   121,
     122,   123,   124,     0,     0,   125,   126,   127,   128,   129,
       0,   130,   131,   132,   133,   134,     0,     0,     0,   136,
     137,   138,   139,   140,   141,     0,   143,   144,   145,     0,
     146,   147,   148,   149,   150,   151,     0,     0,   153,   154,
     155,     0,     0,     0,     0,     0,     0,     0,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,     0,   167,
       0,   168,   169,   170,   171,   172,   173,     0,   174,   175,
     176,   177,   178,     0,     0,   179,   180,   181,   182,   183,
       0,   184,   185,   186,     0,   187,   188,   189,     0,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
       0,   201,     0,   202,   203,   204,   205,     0,   206,     0,
     207,     0,     0,     0,   210,   211,   212,     0,   214,     0,
     215,     0,   216,   217,   218,     0,   219,   220,   221,   222,
     223,  1568,   225,     0,   227,   228,   229,   230,     0,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   239,   240,
     241,   242,   243,   244,   245,   246,     0,   247,     0,   248,
       0,     0,   251,     0,   253,   254,   255,   256,   257,   258,
       0,     0,   259,     0,   261,     0,     0,   263,   264,   265,
       0,     0,   266,   267,   268,   269,   270,   500,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,     0,   292,   293,
     294,   295,   296,     0,   297,   298,     0,   300,     0,   301,
     302,   303,   304,   305,   306,     0,   307,   308,     0,     0,
     309,   310,   311,     0,     0,   312,   313,     0,   315,     0,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,   331,   332,   333,   334,   335,
     336,     0,   337,   338,   339,   340,   341,   342,     0,   343,
     344,   345,   346,   347,   348,   349,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,     0,   364,   365,     0,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
       0,   382,   383,   384,   385,   386,     0,   387,   388,   389,
     390,   391,     0,   393,   394,   395,   396,     0,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   502,
     409,   410,   411,     0,   412,   413,     0,   414,     0,   416,
     417,   418,   419,   420,     0,   421,   422,     0,     0,   423,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,     0,     0,   436,   437,   438,   439,   440,
       0,     0,   441,   442,   443,   444,   445,   446,   447,     0,
     448,     0,   450,   451,   452,   453,     0,     0,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   498,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    94,
      95,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,     0,     0,     0,     0,     0,  2337,     0,   105,   106,
       0,   107,   108,   109,     0,   111,   112,   113,   114,   115,
       0,   117,   118,     0,   119,   120,   121,   122,   123,   124,
       0,     0,   125,   126,   127,   128,   129,     0,   130,   131,
     132,   133,   134,     0,     0,     0,   136,   137,   138,   139,
     140,   141,     0,   143,   144,   145,     0,   146,   147,   148,
     149,   150,   151,     0,     0,   153,   154,   155,     0,     0,
       0,     0,     0,     0,     0,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,     0,   167,     0,   168,   169,
     170,   171,   172,   173,     0,   174,   175,   176,   177,   178,
       0,     0,   179,   180,   181,   182,   183,     0,   184,   185,
     186,     0,   187,   188,   189,     0,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,     0,   201,     0,
     202,   203,   204,   205,     0,   206,     0,   207,     0,     0,
       0,   210,   211,   212,     0,   214,     0,   215,     0,   216,
     217,   218,     0,   219,   220,   221,   222,   223,   224,   225,
       0,   227,   228,   229,   230,     0,   231,   232,   233,   234,
     235,   236,     0,   237,     0,   239,   240,   241,   242,   243,
     244,   245,   246,     0,   247,     0,   248,     0,     0,   251,
       0,   253,   254,   255,   256,   257,   258,     0,     0,   259,
       0,   261,     0,     0,   263,   264,   265,     0,     0,   266,
     267,   268,   269,   270,   500,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,     0,   292,   293,   294,   295,   296,
       0,   297,   298,     0,   300,     0,   301,   302,   303,   304,
     305,   306,     0,   307,   308,     0,     0,   309,   310,   311,
       0,     0,   312,   313,     0,   315,     0,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,     0,   328,
     329,   330,   331,   332,   333,   334,   335,   336,     0,   337,
     338,   339,   340,   341,   342,     0,   343,   344,   345,   346,
     347,   348,   349,   350,     0,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,     0,   364,
     365,     0,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,   386,     0,   387,   388,   389,   390,   391,     0,
     393,   394,   395,   396,     0,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   502,   409,   410,   411,
       0,   412,   413,     0,   414,     0,   416,   417,   418,   419,
     420,     0,   421,   422,     0,     0,   423,   424,   425,   426,
     427,     0,   428,   429,   430,   431,   432,   433,   434,   435,
       0,     0,   436,   437,   438,   439,   440,     0,     0,   441,
     442,   443,   444,   445,   446,   447,     0,   448,     0,   450,
     451,   452,   453,     0,     0,   454,     0,     0,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   498,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,     0,   102,   103,   104,     0,     0,
       0,     0,     0,  2351,     0,   105,   106,     0,   107,   108,
     109,     0,   111,   112,   113,   114,   115,     0,   117,   118,
       0,   119,   120,   121,   122,   123,   124,     0,     0,   125,
     126,   127,   128,   129,     0,   130,   131,   132,   133,   134,
       0,     0,     0,   136,   137,   138,   139,   140,   141,     0,
     143,   144,   145,     0,   146,   147,   148,   149,   150,   151,
       0,     0,   153,   154,   155,     0,     0,     0,     0,     0,
       0,     0,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,     0,   167,     0,   168,   169,   170,   171,   172,
     173,     0,   174,   175,   176,   177,   178,     0,     0,   179,
     180,   181,   182,   183,     0,   184,   185,   186,     0,   187,
     188,   189,     0,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,     0,   201,     0,   202,   203,   204,
     205,     0,   206,     0,   207,     0,     0,     0,   210,   211,
     212,     0,   214,     0,   215,     0,   216,   217,   218,     0,
     219,   220,   221,   222,   223,   224,   225,     0,   227,   228,
     229,   230,     0,   231,   232,   233,   234,   235,   236,     0,
     237,     0,   239,   240,   241,   242,   243,   244,   245,   246,
       0,   247,     0,   248,     0,     0,   251,     0,   253,   254,
     255,   256,   257,   258,     0,     0,   259,     0,   261,     0,
       0,   263,   264,   265,     0,     0,   266,   267,   268,   269,
     270,   500,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,     0,   292,   293,   294,   295,   296,     0,   297,   298,
       0,   300,     0,   301,   302,   303,   304,   305,   306,     0,
     307,   308,     0,     0,   309,   310,   311,     0,     0,   312,
     313,     0,   315,     0,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,     0,   328,   329,   330,   331,
     332,   333,   334,   335,   336,     0,   337,   338,   339,   340,
     341,   342,     0,   343,   344,   345,   346,   347,   348,   349,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,     0,   364,   365,     0,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,     0,   382,   383,   384,   385,   386,
       0,   387,   388,   389,   390,   391,     0,   393,   394,   395,
     396,     0,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   502,   409,   410,   411,     0,   412,   413,
       0,   414,     0,   416,   417,   418,   419,   420,     0,   421,
     422,     0,     0,   423,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,     0,     0,   436,
     437,   438,   439,   440,     0,     0,   441,   442,   443,   444,
     445,   446,   447,     0,   448,     0,   450,   451,   452,   453,
       0,     0,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   498,     0,   579,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,     0,     0,     0,     0,     0,
       0,     0,   105,   106,     0,   107,   108,   109,     0,   111,
     112,   113,   114,   115,     0,   117,   118,     0,   119,   120,
     121,   122,   123,   124,     0,     0,   125,   126,   127,   128,
     129,     0,   130,   131,   132,   133,   134,     0,     0,     0,
     136,   137,   138,   139,   140,   141,     0,   143,   144,   145,
       0,   146,   147,   148,   149,   150,   151,     0,     0,   153,
     154,   155,     0,     0,     0,     0,     0,     0,     0,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,     0,
     167,     0,   168,   169,   170,   171,   172,   173,     0,   174,
     175,   176,   177,   178,     0,     0,   179,   180,   181,   182,
     183,     0,   184,   185,   186,     0,   187,   188,   189,     0,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,     0,   201,     0,   202,   203,   204,   205,     0,   206,
       0,   207,     0,     0,     0,   210,   211,   212,     0,   214,
       0,   215,     0,   216,   217,   218,     0,   219,   220,   221,
     222,   223,  2488,   225,     0,   227,   228,   229,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,     0,   239,
     240,   241,   242,   243,   244,   245,   246,     0,   247,     0,
     248,     0,     0,   251,     0,   253,   254,   255,   256,   257,
     258,     0,     0,   259,     0,   261,     0,     0,   263,   264,
     265,     0,     0,   266,   267,   268,   269,   270,   500,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,     0,   292,
     293,   294,   295,   296,     0,   297,   298,     0,   300,     0,
     301,   302,   303,   304,   305,   306,     0,   307,   308,     0,
       0,   309,   310,   311,     0,     0,   312,   313,     0,   315,
       0,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,     0,   328,   329,   330,   331,   332,   333,   334,
     335,   336,     0,   337,   338,   339,   340,   341,   342,     0,
     343,   344,   345,   346,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,     0,   364,   365,     0,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,   386,     0,   387,   388,
     389,   390,   391,     0,   393,   394,   395,   396,     0,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     502,   409,   410,   411,     0,   412,   413,     0,   414,     0,
     416,   417,   418,   419,   420,     0,   421,   422,     0,     0,
     423,   424,   425,   426,   427,     0,   428,   429,   430,   431,
     432,   433,   434,   435,     0,     0,   436,   437,   438,   439,
     440,     0,     0,   441,   442,   443,   444,   445,   446,   447,
       0,   448,     0,   450,   451,   452,   453,     0,     0,   454,
       0,     0,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   498,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,     0,     0,     0,     0,     0,     0,     0,   105,
     106,     0,   107,   108,   109,     0,   111,   112,   113,   114,
     115,     0,   117,   118,     0,   119,   120,   121,   122,   123,
     124,     0,     0,   125,   126,   127,   128,   129,     0,   130,
     131,   132,   133,   134,     0,     0,     0,   136,   137,   138,
     139,   140,   141,     0,   143,   144,   145,     0,   146,   147,
     148,   149,   150,   151,     0,     0,   153,   154,   155,     0,
       0,     0,     0,     0,     0,     0,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,     0,   167,     0,   168,
     169,   170,   171,   172,   173,     0,   174,   175,   176,   177,
     178,     0,     0,   179,   180,   181,   182,   183,     0,   184,
     185,   186,     0,   187,   188,   189,     0,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,     0,   201,
       0,   202,   203,   204,   205,     0,   206,     0,   207,     0,
       0,     0,   210,   211,   212,     0,   214,     0,   215,     0,
     216,   217,   218,     0,   219,   220,   221,   222,   223,   224,
     225,     0,   227,   228,   229,   230,     0,   231,   232,   233,
     234,   235,   236,     0,   237,     0,   239,   240,   241,   242,
     243,   244,   245,   246,     0,   247,     0,   248,     0,     0,
     251,     0,   253,   254,   255,   256,   257,   258,     0,     0,
     259,     0,   261,     0,     0,   263,   264,   265,     0,     0,
     266,   267,   268,   269,   270,   500,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,     0,   292,   293,   294,   295,
     296,     0,   297,   298,     0,   300,     0,   301,   302,   303,
     304,   305,   306,     0,   307,   308,     0,     0,   309,   310,
     311,     0,     0,   312,   313,     0,   315,     0,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,     0,
     328,   329,   330,   331,   332,   333,   334,   335,   336,     0,
     337,   338,   339,   340,   341,   342,     0,   343,   344,   345,
     346,   347,   348,   349,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,     0,
     364,   365,     0,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,     0,   382,
     383,   384,   385,   386,     0,   387,   388,   389,   390,   391,
       0,   393,   394,   395,   396,     0,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   502,   409,   410,
     411,     0,   412,   413,     0,   414,     0,   416,   417,   418,
     419,   420,     0,   421,   422,     0,     0,   423,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,     0,     0,   436,   437,   438,   439,   440,     0,     0,
     441,   442,   443,   444,   445,   446,   447,     0,   448,     0,
     450,   451,   452,   453,     0,     0,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     498,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    94,    95,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,     0,
       0,     0,     0,     0,     0,     0,   105,   106,     0,   107,
     108,   109,     0,   111,   112,   113,   114,   115,     0,   117,
     118,     0,   119,   120,   121,   122,   123,   124,     0,     0,
     125,   126,   127,   128,   129,     0,   130,   131,   132,   133,
     134,     0,     0,     0,   136,   137,   138,   139,   140,   141,
       0,   143,   144,   145,     0,   146,   147,   148,   149,   150,
     151,     0,     0,   153,   154,   155,     0,     0,     0,     0,
       0,     0,     0,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,     0,   167,     0,   168,   169,   170,   171,
     172,   173,     0,   174,   175,   176,   177,   178,     0,     0,
     179,   180,   181,   182,   183,     0,   184,   185,   186,     0,
     187,   188,   189,     0,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,     0,   201,     0,   202,   203,
     204,   205,     0,   206,     0,   207,     0,     0,     0,   210,
     211,   212,     0,   566,     0,   215,     0,   216,   217,   218,
       0,   219,   220,   221,   222,   223,   224,   225,     0,   227,
     228,   229,   230,     0,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   239,   240,   241,   242,   243,   244,   245,
     246,     0,   247,     0,   248,     0,     0,   251,     0,   253,
     254,   255,   256,   257,   258,     0,     0,   259,     0,   261,
       0,     0,   263,   264,   567,     0,     0,   266,   267,   268,
     269,   270,   500,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,     0,   292,   293,   294,   295,   296,     0,   297,
     298,     0,   300,     0,   301,   302,   303,   304,   305,   306,
       0,   307,   308,     0,     0,   309,   310,   311,     0,     0,
     312,   313,     0,   315,     0,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,     0,   328,   329,   330,
     331,   332,   333,   334,   335,   336,     0,   337,   338,   339,
     340,   341,   342,     0,   343,   344,   345,   346,   347,   348,
     349,   350,     0,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,     0,   364,   365,     0,
     367,   368,   369,   370,   371,   372,   373,   374,   568,   376,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
     569,     0,   387,   388,   389,   390,   391,     0,   393,   394,
     395,   396,     0,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   502,   409,   410,   411,     0,   412,
     413,     0,   414,     0,   416,   417,   418,   419,   420,     0,
     570,   422,     0,     0,   423,   424,   425,   426,   427,     0,
     428,   429,   430,   431,   432,   433,   434,   435,     0,     0,
     436,   437,   438,   439,   440,     0,     0,   441,   442,   443,
     444,   445,   446,   447,     0,   448,     0,   450,   451,   452,
     453,     0,     0,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   498,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,     0,     0,     0,     0,
       0,     0,     0,   105,   106,     0,   107,   108,   109,     0,
     111,   112,   113,   114,   115,     0,   117,   118,     0,   119,
     120,   121,   122,   123,   124,     0,     0,   125,   126,   127,
     128,   129,     0,   130,   131,   132,   133,   134,     0,     0,
       0,   136,   137,   138,   139,   140,   141,     0,   143,   144,
     145,     0,   146,   147,   148,   149,   150,   151,     0,     0,
     153,   154,   155,     0,     0,     0,     0,     0,     0,     0,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
       0,   167,     0,   168,   169,   170,   171,   172,   173,     0,
     174,   175,   176,   177,   178,     0,     0,   179,   180,   181,
     182,   183,     0,   184,   185,   186,     0,   187,   188,   189,
       0,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,     0,   201,     0,   202,   203,   204,   205,     0,
     206,     0,   207,     0,     0,     0,   210,   211,   212,     0,
     214,     0,   215,     0,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,   225,     0,   227,   228,   229,   230,
       0,   231,   232,   233,   234,   235,   236,     0,   237,     0,
     239,   240,   241,   242,   243,   244,   245,   246,     0,   247,
       0,   248,     0,     0,   251,     0,   253,   254,   255,   256,
     257,   258,     0,     0,   259,     0,   261,     0,     0,   263,
     264,   265,     0,     0,   266,   267,   268,   269,   270,   500,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,     0,
     292,   293,   294,   295,   296,     0,   297,   298,     0,   300,
       0,   301,   302,   303,   304,   305,   306,     0,   307,   308,
       0,     0,   309,   310,   311,     0,     0,   312,   313,     0,
     315,     0,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   330,   331,   332,   333,
     334,   335,   336,     0,   337,   338,   339,   340,   341,   342,
       0,   343,   344,   345,   346,   347,   348,   589,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,     0,   364,   365,     0,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,     0,   382,   383,   384,   385,   386,     0,   387,
     388,   389,   390,   391,     0,   393,   394,   395,   396,     0,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   502,   409,   410,   411,     0,   412,   413,     0,   414,
       0,   416,   417,   418,   419,   420,     0,   421,   422,     0,
       0,   423,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,     0,     0,   436,   437,   438,
     439,   440,     0,     0,   441,   442,   443,   444,   445,   446,
     447,     0,   448,     0,   450,   451,   452,   453,     0,     0,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   498,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    94,    95,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,     0,     0,     0,     0,     0,     0,     0,
     105,   106,     0,   107,   108,   109,     0,   111,   112,   113,
     114,   115,     0,   117,   118,     0,   119,   120,   121,   122,
     123,   124,     0,     0,   125,   126,   127,   128,   129,     0,
     130,   131,   132,   133,   134,     0,     0,     0,   136,   137,
     138,   139,   140,   141,     0,   143,   144,   145,     0,   146,
     147,   148,   149,   150,   151,     0,     0,   153,   154,   155,
       0,     0,     0,     0,     0,     0,     0,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,     0,   167,     0,
     168,   169,   170,   171,   172,   173,     0,   174,   175,   176,
     177,   178,     0,     0,   179,   180,   181,   182,   183,     0,
     184,   185,   186,     0,   187,   188,   189,     0,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,     0,
     201,     0,   202,   203,   204,   205,     0,   206,     0,   207,
       0,     0,     0,   210,   211,   212,     0,   214,     0,   215,
       0,   216,   217,   218,     0,   219,   220,   221,   222,   223,
     643,   225,     0,   227,   228,   229,   230,     0,   231,   232,
     233,   234,   235,   236,     0,   237,     0,   239,   240,   241,
     242,   243,   244,   245,   246,     0,   247,     0,   248,     0,
       0,   251,     0,   253,   254,   255,   256,   257,   258,     0,
       0,   259,     0,   261,     0,     0,   263,   264,   265,     0,
       0,   266,   267,   268,   269,   270,   500,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,     0,   292,   293,   294,
     295,   296,     0,   297,   298,     0,   300,     0,   301,   302,
     303,   304,   305,   306,     0,   307,   308,     0,     0,   309,
     310,   311,     0,     0,   312,   313,     0,   315,     0,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
       0,   328,   329,   330,   331,   332,   333,   334,   335,   336,
       0,   337,   338,   339,   340,   341,   342,     0,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
       0,   364,   365,     0,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,   386,     0,   387,   388,   389,   390,
     391,     0,   393,   394,   395,   396,     0,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   502,   409,
     410,   411,     0,   412,   413,     0,   414,     0,   416,   417,
     418,   419,   420,     0,   421,   422,     0,     0,   423,   424,
     425,   426,   427,     0,   428,   429,   430,   431,   432,   433,
     434,   435,     0,     0,   436,   437,   438,   439,   440,     0,
       0,   441,   442,   443,   444,   445,   446,   447,     0,   448,
       0,   450,   451,   452,   453,     0,     0,   454,     0,     0,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   498,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   127,   128,   129,     0,   130,   131,   132,
     133,   134,     0,     0,     0,   136,   137,   138,   139,   140,
     141,     0,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,     0,   153,   154,   155,     0,     0,     0,
       0,     0,     0,     0,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,     0,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   181,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,     0,   201,     0,   202,
     203,   204,   205,     0,   206,     0,   207,     0,     0,     0,
     210,   211,   212,     0,   214,     0,   215,     0,   216,   217,
     218,     0,   219,   220,   221,   222,   223,   733,   225,     0,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   239,   240,   241,   242,   243,   244,
     245,   246,     0,   247,     0,   248,     0,     0,   251,     0,
     253,   254,   255,   256,   257,   258,     0,     0,   259,     0,
     261,     0,     0,   263,   264,   265,     0,     0,   266,   267,
     268,   269,   270,   500,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,     0,   292,   293,   294,   295,   296,     0,
     297,   298,     0,   300,     0,   301,   302,   303,   304,   305,
     306,     0,   307,   308,     0,     0,   309,   310,   311,     0,
       0,   312,   313,     0,   315,     0,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
       0,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   387,   388,   389,   390,   391,     0,   393,
     394,   395,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   502,   409,   410,   411,     0,
     412,   413,     0,   414,     0,   416,   417,   418,   419,   420,
       0,   421,   422,     0,     0,   423,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,   433,   434,   435,     0,
       0,   436,   437,   438,   439,   440,     0,     0,   441,   442,
     443,   444,   445,   446,   447,     0,   448,     0,   450,   451,
     452,   453,     0,     0,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   498,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    94,    95,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,     0,     0,     0,
       0,     0,     0,     0,   105,   106,     0,   107,   108,   109,
       0,   111,   112,   113,   114,   115,     0,   117,   118,     0,
     119,   120,   121,   122,   123,   124,     0,     0,   125,   126,
     127,   128,   129,     0,   130,   131,   132,   133,   134,     0,
       0,     0,   136,   137,   138,   139,   140,   141,     0,   143,
     144,   145,     0,   146,   147,   148,   149,   150,   151,     0,
       0,   153,   154,   155,     0,     0,     0,     0,     0,     0,
       0,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,     0,   167,     0,   168,   169,   170,   171,   172,   173,
       0,   174,   175,   176,   177,   178,     0,     0,   179,   180,
     181,   182,   183,     0,   184,   185,   186,     0,   187,   188,
     189,     0,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,     0,   201,     0,   202,   203,   204,   205,
       0,   206,     0,   207,     0,     0,     0,   210,   211,   212,
       0,   214,     0,   215,     0,   216,   217,   218,     0,   219,
     220,   221,   222,   223,   736,   225,     0,   227,   228,   229,
     230,     0,   231,   232,   233,   234,   235,   236,     0,   237,
       0,   239,   240,   241,   242,   243,   244,   245,   246,     0,
     247,     0,   248,     0,     0,   251,     0,   253,   254,   255,
     256,   257,   258,     0,     0,   259,     0,   261,     0,     0,
     263,   264,   265,     0,     0,   266,   267,   268,   269,   270,
     500,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
       0,   292,   293,   294,   295,   296,     0,   297,   298,     0,
     300,     0,   301,   302,   303,   304,   305,   306,     0,   307,
     308,     0,     0,   309,   310,   311,     0,     0,   312,   313,
       0,   315,     0,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,     0,   337,   338,   339,   340,   341,
     342,     0,   343,   344,   345,   346,   347,   348,   349,   350,
       0,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,     0,   364,   365,     0,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,     0,   382,   383,   384,   385,   386,     0,
     387,   388,   389,   390,   391,     0,   393,   394,   395,   396,
       0,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   502,   409,   410,   411,     0,   412,   413,     0,
     414,     0,   416,   417,   418,   419,   420,     0,   421,   422,
       0,     0,   423,   424,   425,   426,   427,     0,   428,   429,
     430,   431,   432,   433,   434,   435,     0,     0,   436,   437,
     438,   439,   440,     0,     0,   441,   442,   443,   444,   445,
     446,   447,     0,   448,     0,   450,   451,   452,   453,     0,
       0,   454,     0,     0,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   498,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,     0,     0,     0,     0,     0,     0,
       0,   105,   106,     0,   107,   108,   109,     0,   111,   112,
     113,   114,   115,     0,   117,   118,     0,   119,   120,   121,
     122,   123,   124,     0,     0,   125,   126,   127,   128,   129,
       0,   130,   131,   132,   133,   134,     0,     0,     0,   136,
     137,   138,   139,   140,   141,     0,   143,   144,   145,     0,
     146,   147,   148,   149,   150,   151,     0,     0,   153,   154,
     155,     0,     0,     0,     0,     0,     0,     0,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,     0,   167,
       0,   168,   169,   170,   171,   172,   173,     0,   174,   175,
     176,   177,   178,     0,     0,   179,   180,   181,   182,   183,
       0,   184,   185,   186,     0,   187,   188,   189,     0,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
       0,   201,     0,   202,   203,   204,   205,     0,   206,     0,
     207,     0,     0,     0,   210,   211,   212,     0,   214,     0,
     215,     0,   216,   217,   218,     0,   219,   220,   221,   222,
     223,   739,   225,     0,   227,   228,   229,   230,     0,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   239,   240,
     241,   242,   243,   244,   245,   246,     0,   247,     0,   248,
       0,     0,   251,     0,   253,   254,   255,   256,   257,   258,
       0,     0,   259,     0,   261,     0,     0,   263,   264,   265,
       0,     0,   266,   267,   268,   269,   270,   500,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,     0,   292,   293,
     294,   295,   296,     0,   297,   298,     0,   300,     0,   301,
     302,   303,   304,   305,   306,     0,   307,   308,     0,     0,
     309,   310,   311,     0,     0,   312,   313,     0,   315,     0,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,   331,   332,   333,   334,   335,
     336,     0,   337,   338,   339,   340,   341,   342,     0,   343,
     344,   345,   346,   347,   348,   349,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,     0,   364,   365,     0,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
       0,   382,   383,   384,   385,   386,     0,   387,   388,   389,
     390,   391,     0,   393,   394,   395,   396,     0,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   502,
     409,   410,   411,     0,   412,   413,     0,   414,     0,   416,
     417,   418,   419,   420,     0,   421,   422,     0,     0,   423,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,   434,   435,     0,     0,   436,   437,   438,   439,   440,
       0,     0,   441,   442,   443,   444,   445,   446,   447,     0,
     448,     0,   450,   451,   452,   453,     0,     0,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   498,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    94,
      95,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,     0,     0,     0,     0,     0,     0,     0,   105,   106,
       0,   107,   108,   109,     0,   111,   112,   113,   114,   115,
       0,   117,   118,     0,   119,   120,   121,   122,   123,   124,
       0,     0,   125,   126,   127,   128,   129,     0,   130,   131,
     132,   133,   134,     0,     0,     0,   136,   137,   138,   139,
     140,   141,     0,   143,   144,   145,     0,   146,   147,   148,
     149,   150,   151,     0,     0,   153,   154,   155,     0,     0,
       0,     0,     0,     0,     0,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,     0,   167,     0,   168,   169,
     170,   171,   172,   173,     0,   174,   175,   176,   177,   178,
       0,     0,   179,   180,   181,   182,   183,     0,   184,   185,
     186,     0,   187,   188,   189,     0,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,     0,   201,     0,
     202,   203,   204,   205,     0,   206,     0,   207,     0,     0,
       0,   210,   211,   212,     0,   214,     0,   215,     0,   216,
     217,   218,     0,   219,   220,   221,   222,   223,   224,   225,
       0,   227,   228,   229,   230,     0,   231,   232,   233,   234,
     235,   236,     0,   237,     0,   239,   240,   241,   242,   243,
     244,   245,   246,     0,   247,     0,   248,     0,     0,   251,
       0,   253,   254,   255,   256,   257,   258,     0,     0,   259,
       0,   261,     0,     0,   263,   264,   265,     0,     0,   266,
     267,   268,   269,   270,   500,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,     0,   292,   293,   294,   295,   296,
       0,   297,   298,     0,   300,     0,   301,   302,   303,   304,
     305,   306,     0,   307,   308,     0,     0,   309,   310,   311,
       0,     0,   312,   313,     0,   315,     0,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,     0,   328,
     329,   330,   331,   332,   333,   334,   335,   336,     0,   337,
     338,   339,   340,   341,   342,     0,   343,   344,   345,   346,
     347,   348,   349,   350,     0,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,     0,   364,
     365,     0,   367,   368,   369,   370,   371,   372,   373,   374,
     568,   376,   377,   378,   379,   380,   381,     0,   382,   383,
     384,   385,   386,     0,   387,   388,   389,   390,   391,     0,
     393,   394,   395,   396,     0,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   502,   409,   410,   411,
       0,   412,   413,     0,   414,     0,   416,   417,   418,   419,
     420,     0,   570,   422,     0,     0,   423,   424,   425,   426,
     427,     0,   428,   429,   430,   431,   432,   433,   434,   435,
       0,     0,   436,   437,   438,   439,   440,     0,     0,   441,
     442,   443,   444,   445,   446,   447,     0,   448,     0,   450,
     451,   452,   453,     0,     0,   454,     0,     0,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   498,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,     0,   102,   103,   104,     0,     0,
       0,     0,     0,  1390,     0,   105,   106,     0,   107,   108,
     109,     0,   111,   112,   113,   114,   115,     0,   117,   118,
       0,   119,   120,   121,   122,   123,   124,     0,     0,   125,
     126,   127,   128,   129,     0,   130,   131,   132,   133,   134,
       0,     0,     0,   136,   137,   138,   139,   140,   141,     0,
     143,   144,   145,     0,   146,   147,   148,   149,   150,   151,
       0,     0,   153,   154,   155,     0,     0,     0,     0,     0,
       0,     0,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,     0,   167,     0,   168,   169,   170,   171,   172,
     173,     0,   174,   175,   176,   177,   178,     0,     0,   179,
     180,   181,   182,   183,     0,   184,   185,   186,     0,   187,
     188,   189,     0,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,     0,   201,     0,   202,   203,   204,
     205,     0,   206,     0,   207,     0,     0,     0,   210,   211,
     212,     0,   214,     0,   215,     0,   216,   217,   218,     0,
     219,   220,   221,   222,   223,   224,   225,     0,   227,   228,
     229,   230,     0,   231,   232,   233,   234,   235,   236,     0,
     237,     0,   239,   240,   241,   242,   243,   244,   245,   246,
       0,   247,     0,   248,     0,     0,   251,     0,   253,   254,
     255,   256,   257,   258,     0,     0,   259,     0,   261,     0,
       0,   263,   264,   265,     0,     0,   266,   267,   268,   269,
     270,   500,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,     0,   292,   293,   294,   295,   296,     0,   297,   298,
       0,   300,     0,   301,   302,   303,   304,   305,   306,     0,
     307,   308,     0,     0,   309,   310,   311,     0,     0,   312,
     313,     0,   315,     0,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,     0,   328,   329,   330,   331,
     332,   333,   334,   335,   336,     0,   337,   338,   339,   340,
     341,   342,     0,   343,   344,   345,   346,   347,   348,   349,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,     0,   364,   365,     0,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,     0,   382,   383,   384,   385,   386,
       0,     0,   388,   389,   390,   391,     0,   393,   394,   395,
     396,     0,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   502,   409,   410,   411,     0,   412,   413,
       0,   414,     0,   416,   417,   418,   419,   420,     0,   421,
     422,     0,     0,   423,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,   434,   435,     0,     0,   436,
     437,   438,   439,   440,     0,     0,   441,   442,   443,   444,
     445,   446,   447,     0,   448,     0,   450,   451,   452,   453,
       0,     0,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   498,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,     0,     0,     0,     0,     0,
       0,     0,   105,   106,     0,   107,   108,   109,     0,   111,
     112,   113,   114,   115,     0,   117,   118,     0,   119,   120,
     121,   122,   123,   124,     0,     0,   125,   126,   127,   128,
     129,     0,   130,   131,   132,   133,   134,     0,     0,     0,
     136,   137,   138,   139,   140,   141,     0,   143,   144,   145,
       0,   146,   147,   148,   149,   150,   151,     0,     0,   153,
     154,   155,     0,     0,     0,     0,     0,     0,     0,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,     0,
     167,     0,   168,   169,   170,   171,   172,   173,     0,   174,
     175,   176,   177,   178,     0,     0,   179,   180,   181,   182,
     183,     0,   184,   185,   186,     0,   187,   188,   189,     0,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,     0,   201,     0,   202,   203,   204,   205,     0,   206,
       0,   207,     0,     0,     0,   210,   211,   212,     0,   214,
       0,   215,     0,   216,   217,   218,     0,   219,   220,   221,
     222,   223,  1532,   225,     0,   227,   228,   229,   230,     0,
     231,   232,   233,   234,   235,   236,     0,   237,     0,   239,
     240,   241,   242,   243,   244,   245,   246,     0,   247,     0,
     248,     0,     0,   251,     0,   253,   254,   255,   256,   257,
     258,     0,     0,   259,     0,   261,     0,     0,   263,   264,
     265,     0,     0,   266,   267,   268,   269,   270,   500,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,     0,   292,
     293,   294,   295,   296,     0,   297,   298,     0,   300,     0,
     301,   302,   303,   304,   305,   306,     0,   307,   308,     0,
       0,   309,   310,   311,     0,     0,   312,   313,     0,   315,
       0,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,     0,   328,   329,   330,   331,   332,   333,   334,
     335,   336,     0,   337,   338,   339,   340,   341,   342,     0,
     343,   344,   345,   346,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,     0,   364,   365,     0,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,     0,   382,   383,   384,   385,   386,     0,   387,   388,
     389,   390,   391,     0,   393,   394,   395,   396,     0,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     502,   409,   410,   411,     0,   412,   413,     0,   414,     0,
     416,   417,   418,   419,   420,     0,   421,   422,     0,     0,
     423,   424,   425,   426,   427,     0,   428,   429,   430,   431,
     432,   433,   434,   435,     0,     0,   436,   437,   438,   439,
     440,     0,     0,   441,   442,   443,   444,   445,   446,   447,
       0,   448,     0,   450,   451,   452,   453,     0,     0,   454,
       0,     0,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   498,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,     0,     0,     0,     0,     0,     0,     0,   105,
     106,     0,   107,   108,   109,     0,   111,   112,   113,   114,
     115,     0,   117,   118,     0,   119,   120,   121,   122,   123,
     124,     0,     0,   125,   126,   127,   128,   129,     0,   130,
     131,   132,   133,   134,     0,     0,     0,   136,   137,   138,
     139,   140,   141,     0,   143,   144,   145,     0,   146,   147,
     148,   149,   150,   151,     0,     0,   153,   154,   155,     0,
       0,     0,     0,     0,     0,     0,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,     0,   167,     0,   168,
     169,   170,   171,   172,   173,     0,   174,   175,   176,   177,
     178,     0,     0,   179,   180,   181,   182,   183,     0,   184,
     185,   186,     0,   187,   188,   189,     0,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,     0,   201,
       0,   202,   203,   204,   205,     0,   206,     0,   207,     0,
       0,     0,   210,   211,   212,     0,   214,     0,   215,     0,
     216,   217,   218,     0,   219,   220,   221,   222,   223,  1814,
     225,     0,   227,   228,   229,   230,     0,   231,   232,   233,
     234,   235,   236,     0,   237,     0,   239,   240,   241,   242,
     243,   244,   245,   246,     0,   247,     0,   248,     0,     0,
     251,     0,   253,   254,   255,   256,   257,   258,     0,     0,
     259,     0,   261,     0,     0,   263,   264,   265,     0,     0,
     266,   267,   268,   269,   270,   500,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,     0,   292,   293,   294,   295,
     296,     0,   297,   298,     0,   300,     0,   301,   302,   303,
     304,   305,   306,     0,   307,   308,     0,     0,   309,   310,
     311,     0,     0,   312,   313,     0,   315,     0,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,     0,
     328,   329,   330,   331,   332,   333,   334,   335,   336,     0,
     337,   338,   339,   340,   341,   342,     0,   343,   344,   345,
     346,   347,   348,   349,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,     0,
     364,   365,     0,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,     0,   382,
     383,   384,   385,   386,     0,   387,   388,   389,   390,   391,
       0,   393,   394,   395,   396,     0,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   502,   409,   410,
     411,     0,   412,   413,     0,   414,     0,   416,   417,   418,
     419,   420,     0,   421,   422,     0,     0,   423,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,   434,
     435,     0,     0,   436,   437,   438,   439,   440,     0,     0,
     441,   442,   443,   444,   445,   446,   447,     0,   448,     0,
     450,   451,   452,   453,     0,     0,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     498,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    94,    95,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,     0,
       0,     0,     0,     0,     0,     0,   105,   106,     0,   107,
     108,   109,     0,   111,   112,   113,   114,   115,     0,   117,
     118,     0,   119,   120,   121,   122,   123,   124,     0,     0,
     125,   126,   127,   128,   129,     0,   130,   131,   132,   133,
     134,     0,     0,     0,   136,   137,   138,   139,   140,   141,
       0,   143,   144,   145,     0,   146,   147,   148,   149,   150,
     151,     0,     0,   153,   154,   155,     0,     0,     0,     0,
       0,     0,     0,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,     0,   167,     0,   168,   169,   170,   171,
     172,   173,     0,   174,   175,   176,   177,   178,     0,     0,
     179,   180,   181,   182,   183,     0,   184,   185,   186,     0,
     187,   188,   189,     0,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,     0,   201,     0,   202,   203,
     204,   205,     0,   206,     0,   207,     0,     0,     0,   210,
     211,   212,     0,   214,     0,   215,     0,   216,   217,   218,
       0,   219,   220,   221,   222,   223,  1826,   225,     0,   227,
     228,   229,   230,     0,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   239,   240,   241,   242,   243,   244,   245,
     246,     0,   247,     0,   248,     0,     0,   251,     0,   253,
     254,   255,   256,   257,   258,     0,     0,   259,     0,   261,
       0,     0,   263,   264,   265,     0,     0,   266,   267,   268,
     269,   270,   500,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,     0,   292,   293,   294,   295,   296,     0,   297,
     298,     0,   300,     0,   301,   302,   303,   304,   305,   306,
       0,   307,   308,     0,     0,   309,   310,   311,     0,     0,
     312,   313,     0,   315,     0,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,     0,   328,   329,   330,
     331,   332,   333,   334,   335,   336,     0,   337,   338,   339,
     340,   341,   342,     0,   343,   344,   345,   346,   347,   348,
     349,   350,     0,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,     0,   364,   365,     0,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,     0,   382,   383,   384,   385,
     386,     0,   387,   388,   389,   390,   391,     0,   393,   394,
     395,   396,     0,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   502,   409,   410,   411,     0,   412,
     413,     0,   414,     0,   416,   417,   418,   419,   420,     0,
     421,   422,     0,     0,   423,   424,   425,   426,   427,     0,
     428,   429,   430,   431,   432,   433,   434,   435,     0,     0,
     436,   437,   438,   439,   440,     0,     0,   441,   442,   443,
     444,   445,   446,   447,     0,   448,     0,   450,   451,   452,
     453,     0,     0,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   498,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,     0,     0,     0,     0,
       0,     0,     0,   105,   106,     0,   107,   108,   109,     0,
     111,   112,   113,   114,   115,     0,   117,   118,     0,   119,
     120,   121,   122,   123,   124,     0,     0,   125,   126,   127,
     128,   129,     0,   130,   131,   132,   133,   134,     0,     0,
       0,   136,   137,   138,   139,   140,   141,     0,   143,   144,
     145,     0,   146,   147,   148,   149,   150,   151,     0,     0,
     153,   154,   155,     0,     0,     0,     0,     0,     0,     0,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
       0,   167,     0,   168,   169,   170,   171,   172,   173,     0,
     174,   175,   176,   177,   178,     0,     0,   179,   180,   181,
     182,   183,     0,   184,   185,   186,     0,   187,   188,   189,
       0,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,     0,   201,     0,   202,   203,   204,   205,     0,
     206,     0,   207,     0,     0,     0,   210,   211,   212,     0,
     214,     0,   215,     0,   216,   217,   218,     0,   219,   220,
     221,   222,   223,  1828,   225,     0,   227,   228,   229,   230,
       0,   231,   232,   233,   234,   235,   236,     0,   237,     0,
     239,   240,   241,   242,   243,   244,   245,   246,     0,   247,
       0,   248,     0,     0,   251,     0,   253,   254,   255,   256,
     257,   258,     0,     0,   259,     0,   261,     0,     0,   263,
     264,   265,     0,     0,   266,   267,   268,   269,   270,   500,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,     0,
     292,   293,   294,   295,   296,     0,   297,   298,     0,   300,
       0,   301,   302,   303,   304,   305,   306,     0,   307,   308,
       0,     0,   309,   310,   311,     0,     0,   312,   313,     0,
     315,     0,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,   328,   329,   330,   331,   332,   333,
     334,   335,   336,     0,   337,   338,   339,   340,   341,   342,
       0,   343,   344,   345,   346,   347,   348,   349,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,     0,   364,   365,     0,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,     0,   382,   383,   384,   385,   386,     0,   387,
     388,   389,   390,   391,     0,   393,   394,   395,   396,     0,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   502,   409,   410,   411,     0,   412,   413,     0,   414,
       0,   416,   417,   418,   419,   420,     0,   421,   422,     0,
       0,   423,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,   434,   435,     0,     0,   436,   437,   438,
     439,   440,     0,     0,   441,   442,   443,   444,   445,   446,
     447,     0,   448,     0,   450,   451,   452,   453,     0,     0,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   498,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    94,    95,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,     0,     0,     0,     0,     0,     0,     0,
     105,   106,     0,   107,   108,   109,     0,   111,   112,   113,
     114,   115,     0,   117,   118,     0,   119,   120,   121,   122,
     123,   124,     0,     0,   125,   126,   127,   128,   129,     0,
     130,   131,   132,   133,   134,     0,     0,     0,   136,   137,
     138,   139,   140,   141,     0,   143,   144,   145,     0,   146,
     147,   148,   149,   150,   151,     0,     0,   153,   154,   155,
       0,     0,     0,     0,     0,     0,     0,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,     0,   167,     0,
     168,   169,   170,   171,   172,   173,     0,   174,   175,   176,
     177,   178,     0,     0,   179,   180,   181,   182,   183,     0,
     184,   185,   186,     0,   187,   188,   189,     0,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,     0,
     201,     0,   202,   203,   204,   205,     0,   206,     0,   207,
       0,     0,     0,   210,   211,   212,     0,   214,     0,   215,
       0,   216,   217,   218,     0,   219,   220,   221,   222,   223,
     224,   225,     0,   227,   228,   229,   230,     0,   231,   232,
     233,   234,   235,   236,     0,   237,     0,   239,   240,   241,
     242,   243,   244,   245,   246,     0,   247,     0,   248,     0,
       0,   251,     0,   253,   254,   255,   256,   257,   258,     0,
       0,   259,     0,   261,     0,     0,   263,   264,   265,     0,
       0,   266,   267,   268,   269,   270,   500,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,     0,   292,   293,   294,
     295,   296,     0,   297,   298,     0,   300,     0,   301,   302,
     303,   304,   305,   306,     0,   307,   308,     0,     0,   309,
     310,   311,     0,     0,   312,   313,     0,   315,     0,   317,
     318,   319,   320,   321,   322,   323,     0,   325,   326,   327,
       0,   328,   329,   330,   331,   332,   333,   334,   335,   336,
       0,   337,   338,   339,   340,   341,   342,     0,   343,     0,
     345,   346,   347,   348,   349,   350,     0,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
       0,   364,   365,     0,   367,   368,   369,   370,     0,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,     0,
     382,   383,   384,   385,   386,     0,   387,   388,   389,   390,
     391,     0,   393,   394,   395,   396,     0,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   502,   409,
     410,   411,     0,   412,   413,     0,   414,     0,   416,   417,
     418,   419,   420,     0,   421,   422,     0,     0,   423,   424,
     425,   426,   427,     0,   428,   429,   430,   431,   432,   433,
     434,   435,     0,     0,   436,   437,   438,   439,   440,     0,
       0,   441,   442,   443,   444,   445,   446,   447,     0,   448,
       0,   450,   451,   452,   453,     0,     0,   454,     0,     0,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   664,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,   665,   111,   112,   113,     0,   666,   667,
     668,   669,     0,   119,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   670,   671,   129,     0,   130,   131,   132,
     133,     0,     0,   672,     0,   136,   137,   138,   139,   140,
     141,   673,   143,   144,   145,     0,   146,   147,   148,   149,
     150,   151,     0,   674,   153,   154,   155,     0,     0,     0,
     675,     0,     0,     0,   157,   158,   159,   160,   161,   162,
     163,   676,   677,   166,     0,   167,     0,   168,   169,   170,
     171,   172,   173,     0,   174,   175,   176,   177,   178,     0,
       0,   179,   180,   678,   182,   183,     0,   184,   185,   186,
       0,   187,   188,   189,     0,   190,   191,   192,   193,     0,
     195,   196,   197,   198,   199,     0,     0,   201,     0,   202,
     203,   679,   205,     0,   206,     0,   207,   680,     0,   681,
     210,   211,   212,   682,   214,     0,   215,     0,     0,     0,
     218,     0,   219,   220,   221,   222,   223,   683,   225,   684,
     227,   228,   229,   230,     0,   231,   232,   233,   234,   235,
     236,     0,   237,   685,     0,   240,   241,   242,   243,   244,
     686,   687,     0,   688,     0,   248,   689,   690,   251,   691,
     253,   254,   255,   256,   257,   258,     0,     0,   259,   692,
     261,   693,     0,   263,   264,   265,     0,     0,   266,   267,
     268,   269,   270,   694,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   695,   696,   697,   293,   294,   295,     0,     0,
     297,   298,   698,   300,     0,     0,   302,   699,   304,   305,
     306,     0,   307,   308,     0,     0,   309,   310,   311,     0,
       0,   312,     0,   700,   315,   701,     0,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
       0,   331,   332,     0,   334,   335,   336,     0,   337,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   702,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
     703,   367,   368,   369,   704,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,     0,   382,   383,   384,
     385,   386,     0,   387,   705,   389,   390,   391,   706,   393,
     394,   707,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   708,   409,     0,   411,     0,
     412,   413,     0,   414,   709,   416,   417,   418,   419,   420,
       0,   710,   711,     0,     0,   423,   424,     0,   426,     0,
       0,   428,   429,   712,   431,   432,   433,   434,   435,     0,
       0,   436,   437,   438,   439,   440,     0,     0,   441,   442,
     443,   444,   445,     0,   713,     0,   448,   714,   450,   451,
     452,   453,     0,     0,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   664,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   472,   473,   474,   475,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,     0,     0,     0,     0,     0,     0,     0,   105,
     106,     0,   107,   108,   109,   665,   111,   112,   113,     0,
     666,   667,   668,   669,     0,   119,   120,   121,   122,   123,
     124,     0,     0,   125,   126,   670,   671,   129,     0,   130,
     131,   132,   133,     0,     0,   672,     0,   136,   137,   138,
     139,   140,   141,   673,   143,   144,   145,     0,   146,   147,
     148,   149,   150,   151,     0,   674,   153,   154,   155,     0,
       0,     0,   675,     0,     0,     0,   157,   158,   159,   160,
     161,   162,   163,   676,   677,   166,     0,   167,     0,   168,
     169,   170,   171,   172,   173,     0,   174,   175,   176,   177,
     178,     0,     0,   179,   180,   678,   182,   183,     0,   184,
     185,   186,     0,   187,   188,   189,     0,   190,   191,   192,
     193,     0,   195,   196,   197,   198,   199,     0,     0,   201,
       0,   202,   203,   679,   205,     0,   206,     0,   207,   680,
       0,   681,   210,   211,   212,   682,   214,     0,   215,     0,
       0,     0,   218,     0,   219,   220,   221,   222,   223,   224,
     225,   684,   227,   228,   229,   230,     0,   231,   232,   233,
     234,   235,   236,     0,   237,   685,     0,   240,   241,   242,
     243,   244,   686,   687,     0,   688,     0,   248,   689,   690,
     251,   691,   253,   254,   255,   256,   257,   258,     0,     0,
     259,   692,   261,   693,     0,   263,   264,   265,     0,     0,
     266,   267,   268,   269,   270,   694,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   695,   696,   697,   293,   294,   295,
       0,     0,   297,   298,   698,   300,     0,     0,   302,   699,
     304,   305,   306,     0,   307,   308,     0,     0,   309,   310,
     311,     0,     0,   312,     0,   700,   315,   701,     0,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,     0,
     328,   329,     0,   331,   332,     0,   334,   335,   336,     0,
     337,   338,   339,   340,   341,   342,     0,   343,   344,   345,
     702,   347,   348,   349,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,     0,
     364,   365,   703,   367,   368,   369,   704,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,     0,   382,
     383,   384,   385,   386,     0,   387,   705,   389,   390,   391,
     706,   393,   394,   707,   396,     0,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   708,   409,     0,
     411,     0,   412,   413,     0,   414,   709,   416,   417,   418,
     419,   420,     0,   710,   711,     0,     0,   423,   424,     0,
     426,     0,     0,   428,   429,   712,   431,   432,   433,   434,
     435,     0,     0,   436,   437,   438,   439,   440,     0,     0,
     441,   442,   443,   444,   445,     0,   713,     0,   448,   714,
     450,   451,   452,   453,     0,     0,   454,     0,     0,   455,
     456,   457,   458,   459,   460,  2424,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   472,   473,   474,   475,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,     0,     0,     0,     0,     0,     0,
       0,   105,   106,     0,   107,   108,   109,  2425,   111,   112,
     113,     0,   666,  2426,   668,   669,     0,   119,   120,   121,
     122,   123,   124,     0,     0,   125,   126,   670,   671,   129,
       0,   130,   131,   132,   133,     0,     0,  2427,     0,   136,
     137,   138,   139,   140,   141,  2428,   143,   144,   145,     0,
     146,   147,   148,   149,   150,   151,     0,  2429,   153,   154,
     155,     0,     0,     0,  2430,     0,     0,     0,   157,   158,
     159,   160,   161,   162,   163,   676,   677,   166,     0,   167,
       0,   168,   169,   170,   171,   172,   173,     0,   174,   175,
     176,   177,   178,     0,     0,   179,   180,   678,   182,   183,
       0,   184,   185,   186,     0,   187,   188,   189,     0,   190,
     191,   192,   193,     0,   195,   196,   197,   198,   199,     0,
       0,   201,     0,   202,   203,   679,   205,     0,   206,     0,
     207,  2431,     0,  2432,   210,   211,   212,  2433,   214,     0,
     215,     0,     0,     0,   218,     0,   219,   220,   221,   222,
     223,   224,   225,  2434,   227,   228,   229,   230,     0,   231,
     232,   233,   234,   235,   236,     0,   237,  2435,     0,   240,
     241,   242,   243,   244,   686,   687,     0,   688,     0,   248,
    2436,  2437,   251,  2438,   253,   254,   255,   256,   257,   258,
       0,     0,   259,  2439,   261,  2440,     0,   263,   264,   265,
       0,     0,   266,   267,   268,   269,   270,  2638,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   695,  2442,   697,   293,
     294,   295,     0,     0,   297,   298,  2444,   300,     0,     0,
     302,   699,   304,   305,   306,     0,   307,   308,     0,     0,
     309,   310,   311,     0,     0,   312,     0,  2446,   315,  2447,
       0,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,     0,   331,   332,     0,   334,   335,
     336,     0,   337,   338,   339,   340,   341,   342,     0,   343,
     344,   345,   702,   347,   348,   349,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,     0,   364,   365,  2448,   367,   368,   369,     0,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
       0,   382,   383,   384,   385,   386,     0,   387,     0,   389,
     390,   391,  2450,   393,   394,   707,   396,     0,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,  2639,
     409,     0,   411,     0,   412,   413,     0,   414,  2452,   416,
     417,   418,   419,   420,     0,   710,   711,     0,     0,   423,
     424,     0,   426,     0,     0,   428,   429,  2453,   431,   432,
     433,   434,   435,     0,     0,   436,   437,   438,   439,   440,
       0,     0,   441,   442,   443,   444,   445,     0,   713,     0,
     448,  2454,   450,   451,   452,   453,     0,     0,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   664,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   472,   473,
     474,   475,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,     0,     0,     0,     0,
       0,     0,     0,   105,   106,     0,   107,   108,   109,   665,
     111,   112,   113,     0,   666,   667,   668,   669,     0,   119,
     120,   121,   122,   123,   124,     0,     0,   125,   126,   670,
     671,   129,     0,   130,   131,   132,   133,     0,     0,   672,
       0,   136,   137,   138,   139,   140,   141,   673,   143,   144,
     145,     0,   146,   147,   148,   149,   150,   151,     0,   674,
     153,   154,   155,     0,     0,     0,   675,     0,     0,     0,
     157,   158,   159,   160,   161,   162,   163,   676,   677,   166,
       0,   167,     0,   168,   169,   170,   171,   172,   173,     0,
     174,   175,   176,   177,   178,     0,     0,   179,   180,   678,
     182,   183,     0,   184,   185,   186,     0,   187,   188,   189,
       0,   190,   191,   192,   193,     0,   195,   196,   197,   198,
     199,     0,     0,   201,     0,   202,   203,   679,   205,     0,
     206,     0,   207,   680,     0,   681,   210,   211,   212,   682,
     214,     0,   215,     0,     0,     0,   218,     0,   219,   220,
     221,   222,   223,   224,   225,   684,   227,   228,   229,   230,
       0,   231,   232,   233,   234,   235,   236,     0,   237,   685,
       0,   240,   241,   242,   243,   244,   686,   687,     0,   688,
       0,   248,   689,   690,   251,   691,   253,   254,   255,   256,
     257,   258,     0,     0,   259,   692,   261,   693,     0,   263,
     264,   265,     0,     0,   266,   267,   268,   269,   270,     0,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   695,   696,
     697,   293,   294,   295,     0,     0,   297,   298,   698,   300,
       0,     0,   302,   699,   304,   305,   306,     0,   307,   308,
       0,     0,   309,   310,   311,     0,     0,   312,     0,   700,
     315,   701,     0,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,   328,   329,     0,   331,   332,     0,
     334,   335,   336,     0,   337,   338,   339,   340,   341,   342,
       0,   343,   344,   345,   702,   347,   348,   349,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,     0,   364,   365,   703,   367,   368,   369,
       0,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,     0,   382,   383,   384,   385,   386,     0,   387,
       0,   389,   390,   391,   706,   393,   394,   707,   396,     0,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,     0,   409,     0,   411,     0,   412,   413,     0,   414,
     709,   416,   417,   418,   419,   420,     0,   710,   711,     0,
       0,   423,   424,     0,   426,     0,     0,   428,   429,   712,
     431,   432,   433,   434,   435,     0,     0,   436,   437,   438,
     439,   440,     0,     0,   441,   442,   443,   444,   445,     0,
     713,     0,   448,   714,   450,   451,   452,   453,     0,     0,
     454,     0,     0,   455,   456,   457,   458,   459,   460,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     472,   473,   474,   475
};

static const yytype_int16 yycheck[] =
{
       6,     6,   622,   637,   705,   493,   535,     0,   629,   608,
       0,   526,   882,   803,    59,   803,    36,  1005,  1003,   533,
     588,     0,     0,     0,  1396,   978,    16,  1399,  1357,  1178,
     631,   583,   883,  1749,  1282,    16,   711,    30,  1824,   526,
     528,   651,  1778,   885,   983,  1781,  1745,     6,  1148,  1664,
      61,   734,  1148,  1148,   737,  1148,   974,   980,    31,   901,
    1830,  1760,  1832,   811,  2202,  1643,  1644,  1044,   526,  2173,
    1648,  2173,   914,   535,  1183,    61,   622,   534,   624,  2200,
     626,   529,  1312,  1313,  1707,  1008,  2079,    80,  1769,  2214,
    1821,  1868,  1869,  1870,  2221,     0,    35,  1263,  1883,     5,
      21,     9,     9,  2031,  2086,    51,   670,   671,   605,     5,
      59,     5,  1690,  1691,    59,     5,  1365,    90,   171,    13,
      14,    74,     5,    13,    14,     5,  1415,   540,   642,    11,
      68,  1417,   922,   697,    16,     5,     0,     0,     5,     5,
    2573,  2551,    41,    13,    14,   605,    13,    14,     5,    41,
       5,  1149,     9,     5,     5,  2497,   963,     9,    13,    14,
       5,     5,     5,     5,     5,     5,  1897,   118,   108,     5,
       5,  2481,    59,   741,     5,   138,   284,  2587,   116,  2111,
    2675,    13,    14,    94,    68,  1277,     4,   123,  2642,     4,
     705,     9,     3,    84,     9,   870,   146,  2463,   121,   199,
      20,    21,   992,    11,    76,   995,   996,    11,    16,   170,
    1277,   308,    16,  2411,    76,    87,    28,   121,   705,   243,
     275,    32,    33,    35,  2085,    87,     3,     4,     5,  2017,
      94,    94,     9,  1964,  1965,   164,   174,   128,    42,   356,
     292,    28,   121,   171,   272,  2741,    59,   377,    35,  2780,
    1277,    11,   243,    59,    28,   116,    16,   136,   368,   286,
     357,    35,    28,   292,   214,  2675,   830,   831,  1016,   333,
      74,  2143,   255,   256,   803,  1023,   162,  2975,   190,  2712,
     119,   810,    42,   167,   333,     8,   209,   162,    11,   118,
     991,   496,   856,    16,   404,    28,  2849,   812,   119,    69,
     308,   160,   439,    60,   347,    11,  2485,   458,   460,    11,
      16,    68,   109,   881,    74,    11,  2093,  1989,   417,    42,
      16,  2500,   491,  3021,   109,   812,    49,   382,   929,   498,
     482,   482,   375,   271,   886,   445,    42,   361,   276,   116,
     404,   227,   292,   148,   496,  2449,  2018,  2878,  2341,   806,
    2332,    74,  2345,   192,  2492,   404,  2142,  2229,   169,   496,
     171,   361,   461,   915,  1987,   131,   496,  1277,    74,   369,
     361,   192,    74,  2494,  2640,   234,   304,   491,  2077,   496,
    2079,   319,   365,   366,   498,   314,   496,   451,   496,  2125,
     942,   108,   197,   268,   491,   924,   925,   335,   131,   348,
    2810,  2954,   451,   348,   404,   973,   131,   922,  2139,   437,
    2141,   435,   303,  2611,  2910,   276,  1286,  1995,  1996,  1997,
    1998,  1999,   286,   286,  2002,  2003,  2004,  2005,  2006,  2007,
    2008,  2009,  2010,  2011,   346,   319,  2846,  2779,   215,   318,
     210,  2972,  2937,   496,   435,   116,  2378,   276,   500,    24,
    1049,   451,   175,   381,   415,    30,    24,   368,  2891,  1707,
     237,   348,    30,   269,   404,  1557,  2776,  2921,   191,   496,
    2331,   500,   496,   196,   971,  2263,   991,  1284,  2056,  2057,
     237,   431,  2661,   491,  1437,   349,   349,    32,    33,  1556,
     441,   454,   485,   404,   432,   485,  1785,   945,   170,   500,
    1786,   439,   401,   439,   991,   496,   485,   485,   485,   401,
     233,   971,   392,   393,   437,   535,  1493,  2248,   409,  1517,
     526,  1751,   176,  1772,  1158,   938,  2651,  2937,  1149,   535,
    1557,  1558,  1780,   437,   445,   348,  1524,  2879,  2642,     0,
    2642,   494,   348,   415,   534,   498,   271,   458,   432,    94,
     496,   500,   269,   415,   535,   500,   281,   499,   564,   565,
     328,   136,   131,   608,   460,   288,   577,  2560,   136,   375,
    2552,   482,  2565,   385,   494,  2568,   496,   460,   498,   403,
     487,   488,   588,   237,    38,   496,   482,   495,   494,   357,
     496,   577,   498,  1759,   458,   458,  1403,  2525,   385,   482,
     496,  2387,   496,  1171,   597,   586,   496,   597,   448,  2394,
     492,   385,  1360,   496,   438,  1179,  1180,  1594,   597,   597,
     597,   627,   628,   629,   545,  1235,   496,   600,   299,   496,
     496,  2401,  1253,   497,   497,   499,   499,   291,   449,   496,
    2778,   496,  2341,   458,   496,   496,  2345,  1557,  1558,  1559,
     589,   496,   496,   496,   496,   496,   496,   380,  2785,  2784,
     496,   496,  1177,  1178,   496,   496,  1267,   482,    24,   487,
     488,   125,   487,   488,    30,   176,  1466,  1192,   449,   487,
     488,   489,   490,   491,   492,    31,  1476,   500,   492,  1479,
    1177,  1178,   597,   496,   243,  2376,   460,   368,  1266,   705,
    1268,  2880,  1323,  2480,  1272,  1192,  1307,  1308,  1237,    55,
     487,   488,   281,   343,  2707,   290,    24,  1285,   482,  1177,
    1234,    49,   290,   543,    80,   545,   546,   487,   488,   489,
     490,   491,   492,   404,  1192,   741,   237,  1225,  1226,  1987,
     199,  1309,  1363,   415,  1232,    24,  1298,  2885,   568,    13,
      14,    30,  2483,  1354,   408,  2876,   410,   480,   250,  2382,
     107,  1362,   243,  1364,   487,   488,   489,   490,   491,   492,
     345,  2596,   160,   341,   445,  1237,   408,   345,   410,  1236,
    1228,   435,  1530,   489,   490,   491,   492,   458,   439,  1579,
     404,  1579,  2617,   489,   490,   491,   492,   803,   223,   420,
     375,  1316,    95,   243,   810,   811,   812,   375,   223,  2039,
    2931,   482,  2598,   485,   451,  1924,   806,  2921,    24,  2921,
    1671,  1930,   828,   368,    30,   496,   498,  1669,   136,  1316,
      13,    14,   243,  1454,     4,  1753,  1643,  1644,  1326,     9,
     485,  1648,  1462,   172,   269,   496,   234,   175,   116,   364,
     271,   857,  2551,   498,   269,   276,  1539,   136,  1316,   404,
    1848,  2560,   882,   191,  1734,  3003,  2565,   442,   196,  2568,
     485,   877,   878,   879,   442,   881,   882,  1560,   171,  1562,
     361,   496,  1565,  1690,  1691,   408,   435,   410,  2587,  1435,
    1489,  1490,  1491,   496,  1871,   283,  1517,    76,    28,   905,
     445,   165,   249,  2052,   449,   233,   327,   408,    87,   410,
     257,    76,   205,   458,   329,   244,  1462,     5,   924,   925,
     188,   361,    87,   243,     4,  2173,    13,    14,   221,     9,
     136,  1446,  1774,  1856,   435,  1481,  2761,   482,   231,     4,
    1486,  2519,    65,    66,     9,   956,   957,   496,   959,    79,
     361,   496,   958,   378,   435,    11,   962,   963,    88,  1446,
    2746,     4,     0,   378,    13,    14,     9,   973,  1536,  1908,
     956,   957,   265,   959,  1913,   118,  2675,   950,    16,  1741,
    1742,  2751,   290,   803,  1472,   991,    42,   117,  1446,  1477,
     810,     8,    30,   496,    11,   435,  1510,   460,    36,    16,
      17,    18,    19,   271,   333,    13,    14,   333,  2707,   368,
    1016,   290,   437,    13,    14,   496,   494,  1023,    74,   482,
     498,   479,   437,    61,   435,    42,   494,    13,    14,   677,
     498,  2609,    49,   496,  1007,   220,  1551,   345,  1044,   347,
     369,   361,    80,   369,    95,   404,   458,   498,   460,  1584,
    1579,   699,   380,  1588,   286,  1590,   496,    74,   188,   352,
     203,   479,   341,  1592,  1551,    24,   345,   375,   888,   150,
     200,    30,   489,   566,   567,   404,   569,   897,   404,  2694,
     169,  1596,   730,   160,   290,   496,   445,   131,   165,  1657,
     500,   911,   497,  1551,   131,   500,   375,  2712,   408,   458,
     410,  2679,   922,  2203,   924,   925,   496,  2203,  2203,  1596,
    2203,  2810,   497,   497,   158,   435,   500,    13,    14,   160,
     171,   158,   451,   482,   165,   451,   269,  1695,   271,  2845,
     150,    13,    14,   497,  2382,   341,   500,   496,  1596,   345,
      13,    14,   497,  1149,  1827,   500,  1829,  2846,  1747,  1656,
     216,  1658,  1659,   497,   205,   497,   500,   234,   175,   497,
    2309,  2031,   500,   442,   170,  1171,  2154,  1955,  2153,   375,
     221,  1177,  1178,   408,   191,   410,   496,   136,    24,   196,
     231,    55,   497,   299,    30,   500,  1192,  2140,  1995,  1996,
    1997,  1998,  1999,   234,   842,  2002,  2003,  2004,  2005,  2006,
    2007,  2008,  2009,  2010,  2011,   496,   283,  2993,  2823,  2139,
    2195,  2141,   860,  2152,   265,  2154,   233,   479,     8,  2955,
    2956,    11,  2938,   602,   220,   604,    16,    17,    18,    19,
     497,  1237,   276,   500,   271,   286,   442,   281,  2937,   276,
     497,  2957,   283,   500,   281,   497,  1236,  1253,   500,  2056,
    2057,   151,   368,  1928,  1929,   497,  1237,  1891,   500,   341,
    1266,   391,  1268,   151,   394,  1271,  1272,  2109,   151,   497,
    1263,   288,   500,  1263,   151,  1281,  3012,  1283,  1284,  1285,
    1286,  1287,  1288,  1289,  1263,  1263,  1263,   368,   404,  1899,
     136,   496,    24,   497,   497,   497,   500,   500,    30,   497,
     271,   352,   500,  1309,  3020,  1311,  2068,  2069,  2070,  2071,
    1316,  1317,  1318,  1319,  1320,  1321,  1322,  1323,  2346,    37,
    2348,  1327,  1328,   404,   497,   497,  1332,   500,   500,   445,
    1336,   290,  1953,  1339,  1340,  1341,  1342,  1343,  1344,  1345,
    1346,  1347,   458,   497,  1350,   498,   500,     5,   368,   497,
       8,  1357,   500,   451,  1360,   146,    14,  1363,   497,   497,
      83,   500,   500,   380,   445,   497,   482,    25,   500,   160,
     462,    29,    37,  2522,   165,   496,  1382,   458,   422,   448,
     496,   315,   341,  2173,   404,   422,   345,   496,   439,   433,
     176,    56,  1907,   151,  2642,  1388,   433,  1403,    36,  1380,
     171,   482,    13,    14,   136,  2734,   196,   497,  1414,  1415,
     500,     8,   496,   199,    11,   496,   375,   151,   497,    16,
    1907,   500,   496,   214,   497,   445,  1955,   500,   218,  2417,
      13,    14,   496,  2034,   205,  2388,   497,   151,   458,   500,
    1446,   151,   107,   234,   290,    42,  1452,   485,  1454,  1907,
     221,   237,    49,   186,   187,    13,    14,  1277,  2026,  1947,
     231,  1976,   482,   480,    13,    14,   483,   484,   485,   286,
     487,   488,   489,   490,   491,   492,   496,    74,   497,  1994,
     343,   500,   497,   442,   404,   500,  2337,  1493,   232,  1976,
    1496,  1497,   283,  1499,   496,   341,   534,   535,   288,   345,
    2351,   292,    13,    14,    37,   291,  2021,  1994,     5,   497,
     494,  1517,   500,  2028,    13,    14,   497,  2118,  1976,   500,
      13,    14,   255,   256,  1530,   497,    13,    14,   500,   375,
    1536,  2680,   496,   198,  2021,  1528,  1994,  2052,  2090,   577,
     497,  2028,  2914,   500,  2916,  1551,  2350,   144,     5,  2353,
    1370,  2172,   496,  2174,    13,    14,   496,  2240,   290,   597,
      13,    14,   165,  2021,   496,  2052,    13,    14,    13,    14,
    2028,    13,    14,  1579,    13,    14,   356,   357,   175,   356,
     357,   352,   259,   260,   249,   496,  1592,   496,  1594,  2188,
    1596,   496,   257,   496,   191,  1601,   442,   365,   366,   196,
    1606,   356,   357,    51,   269,   176,   356,   357,     5,   341,
     924,   925,   496,   345,     5,   496,   496,  2989,  2408,     5,
     496,   496,   408,     5,   410,  1645,   496,   496,   199,   496,
     496,  2241,   365,   366,   496,   300,   233,  1643,  1644,  1645,
     431,   496,  1648,   375,   496,   147,   432,     9,    96,   435,
    1656,  1657,  1658,  1659,   496,   459,   297,   500,  2173,   216,
    1666,    98,   500,  2648,  1670,   497,   237,  1673,    37,   375,
     165,   283,   281,  2921,   122,  1695,   165,   232,   496,   415,
     496,    87,   347,    55,  1690,  1691,  2173,   500,   415,  1695,
    2204,   288,   140,   483,   484,   485,   144,   487,   488,   489,
     490,   491,   492,  1709,   369,    55,  1712,    11,  1714,   262,
     442,    15,  2519,   415,   415,  2173,   497,   505,   166,    23,
     291,   169,  2237,   415,   389,  2513,   151,    68,  1734,   458,
      34,    35,   498,    74,    94,   271,   184,  2420,  2421,  1745,
    1745,   526,   271,   496,  1764,    37,    87,   496,  2449,   496,
    2237,     9,    36,   413,  1760,  1760,  2357,   413,   415,  1579,
     415,   415,   415,  1583,   494,   500,  1759,   454,   806,  1759,
     494,  2372,  1592,  1779,   496,   116,   497,   118,    11,  2237,
    1759,  1759,  1759,   380,    88,   146,  1745,   343,  1794,  1795,
     361,   495,   500,   500,  2309,   413,   505,   502,   496,   160,
     276,  1760,  2609,   496,   165,   415,   844,  1813,   179,   161,
     496,   170,    37,   497,   439,    37,   214,   500,   378,   223,
     287,   500,  2309,   308,  1830,  1831,  1832,   308,   276,   497,
     496,    56,   497,   174,   223,   271,   284,   408,   223,   410,
     292,   324,     6,   284,   882,   451,   496,    11,   496,   151,
    2720,    15,  2642,   214,   151,   426,    20,    21,    22,    23,
      24,   432,   203,    27,   435,  1871,    30,    31,   458,    37,
      34,    35,  2679,   234,    37,   271,   286,   497,   497,   327,
     494,   479,   107,   480,   479,   286,   404,   271,    56,   497,
     487,   488,   489,   490,   491,   492,   497,   497,   497,    37,
      37,  1907,   495,   497,  2419,   497,   497,   170,   497,   497,
     497,  1917,   497,   497,   500,   497,    80,   498,   956,   957,
     705,   959,   283,    87,    88,    89,    90,    91,   497,   497,
     271,   292,  2419,   497,  2449,   276,   497,   479,   497,   107,
     170,   415,   496,   154,   496,   496,   496,  1953,   455,  1955,
     455,   445,   286,   500,   485,   481,   287,   287,  1951,   526,
     287,  2419,  2449,   500,   437,   242,   415,  1973,   271,   496,
    1976,   151,   199,   198,   290,   151,  1982,   151,   319,  1985,
     415,   415,  1988,  2971,  2513,   415,   415,   278,  1994,  1995,
    1996,  1997,  1998,  1999,   335,   278,  2002,  2003,  2004,  2005,
    2006,  2007,  2008,  2009,  2010,  2011,   174,  2522,    37,  2015,
    2016,  2031,   496,  2019,   343,  2021,  1836,  2887,   497,  2064,
    2026,   286,  2028,   495,   249,  2031,   497,   812,   284,    37,
     198,   500,   257,   151,  2040,  2522,   458,  2043,   526,  2045,
     495,   497,  2062,   151,   269,   495,  2052,  2053,   276,   142,
    2056,  2057,    11,   170,   165,  2061,  2062,   497,   170,  2079,
     455,  1881,   500,   170,   497,   497,   497,   296,   404,   497,
     431,  2077,  2077,  2079,  2079,   300,  1896,   496,   179,   497,
     500,   249,   482,   497,   497,  2091,   444,   349,    85,   257,
     287,   432,   151,   496,   496,  2101,   174,   496,   439,    37,
     426,   269,    80,   170,   497,   497,   500,     8,   406,   497,
      11,  2117,   221,   500,   497,    16,   497,   496,  2077,  2607,
    2079,   439,   347,   500,   497,   495,  2747,  2642,  2762,   496,
     496,  2921,   300,   494,   497,  1955,   497,   498,   705,   496,
    1960,    42,  1962,   497,   369,   500,  1966,  1967,    49,   497,
     497,   497,   295,   221,   496,  2642,    55,   293,   183,   497,
     485,   201,  2168,   458,   389,  2680,  2172,  2173,  2174,   497,
     189,   276,   276,    74,   497,   415,   498,   498,   498,   347,
     485,   498,    37,   498,  2642,   498,   498,   498,   498,   498,
     498,   498,   498,  2680,   415,   271,  2711,   501,  1236,  2714,
     108,   369,   498,   496,   498,     3,   991,     5,  2201,  2808,
     498,   498,   498,   498,   458,   286,   498,   705,  2852,   498,
     498,   389,   498,   498,  2711,  1263,   530,  2714,   498,   498,
     498,  2237,  2225,   497,  2227,    37,   496,   498,   170,   496,
     221,   496,   496,   144,   457,   812,    87,   500,  2254,   132,
     497,   335,   223,  2711,   496,   496,  2714,    82,   116,    37,
     151,    74,   497,  2831,   123,  2833,   151,    50,    37,    52,
      53,   497,   357,   305,   175,   357,    37,   496,   496,   496,
    2768,   497,    65,    66,   496,   589,   496,   326,   444,    74,
     191,  1329,   500,    37,   188,   196,   426,  2303,  2304,  2920,
     439,   496,  2308,  2309,    68,   289,  2926,  2313,    68,    55,
    2316,  2317,   110,   111,   496,  2321,   497,   496,    37,   439,
     375,   276,   486,   500,   812,   485,   490,   188,   247,   493,
     113,   114,   233,    37,   496,  2341,  2341,   501,   426,  2345,
    2345,   496,   289,   289,   496,   359,   497,   497,   497,   497,
    1388,   496,   135,  2173,   269,   286,   497,     9,   201,  2847,
     143,  2367,   342,   497,   528,   529,   530,   356,   286,   286,
     497,   496,   121,   437,    34,     9,  2369,  2370,  2198,    23,
     163,   545,  2341,   497,  1460,  2168,  2345,   288,   186,   187,
     597,  1825,  1177,  1178,  2155,  2401,  2371,  2115,  2583,  2846,
     564,   565,   566,   567,  2410,   569,  2921,  1192,  2917,  2210,
    2413,  2923,  2996,  2419,  2754,  2970,   580,  2958,  2663,  1819,
    2215,  2920,  1831,  2968,   991,   589,  2172,  1816,  2918,   212,
     213,  1225,   978,  1953,  2921,  1177,   600,  1887,  2513,  2198,
     944,   916,  1779,  2449,  1431,   966,   965,  2820,   612,  2841,
    2953,  1794,  1403,   251,   252,   253,   254,   255,   256,  2095,
    2900,   259,   260,  2921,  2835,  2363,  2733,  1430,   968,  2079,
    1760,  2347,  2332,  2708,  2810,  2077,  2809,  2827,  1151,   380,
    2828,   264,  1277,   266,  1277,  1277,   650,   651,   652,   653,
    1528,  2579,  2903,  1277,  2904,  2941,   279,  1355,  1780,  1268,
    1671,  1713,  2495,   991,  1499,  1602,  2094,  2513,   565,  1710,
    1748,  2367,  1892,  2519,  2802,  1380,  2522,  1237,  2116,  2525,
    1592,  1381,    -1,   950,    -1,    -1,    -1,    -1,  2534,  2535,
       8,  1316,  2538,    11,    -1,    -1,    -1,    -1,    16,    17,
      18,    19,    -1,    -1,  2364,  2551,  2551,   330,    -1,    -1,
      -1,    -1,    -1,    -1,  2560,  2560,    34,    -1,    -1,  2565,
    2565,    -1,  2568,  2568,    -1,    -1,    -1,   365,   366,  2575,
    2576,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   480,
      -1,  2587,  2587,  2589,    -1,    -1,   487,   488,   489,   490,
     491,   492,  2551,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     383,  2560,    -1,  2609,    -1,    -1,  2565,  1645,    -1,  2568,
    1177,  1178,    -1,    -1,   526,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1192,    -1,    -1,  2587,    -1,
     413,   414,    -1,    -1,    -1,    -1,  2642,    -1,    -1,    -1,
     944,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   816,    -1,    -1,    -1,     8,  1695,    -1,    11,
    2653,  1446,    -1,   446,    16,    17,    18,    19,    -1,  2675,
    2675,  2491,    -1,  2679,  2680,  1713,    -1,    -1,   476,   477,
      -1,    -1,    34,  2676,    -1,    -1,    -1,    -1,    -1,  1177,
    1178,  1729,    -1,  2513,    -1,    -1,    -1,  2703,    -1,    -1,
    2720,  2707,  2707,    -1,  1192,  2711,    -1,  1745,  2714,    -1,
      -1,    -1,    -1,    -1,  2720,    -1,  2675,    -1,    -1,   883,
      -1,  1759,  1760,    -1,    -1,    -1,  1764,    -1,  2734,    -1,
      -1,  2737,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     218,  2747,    -1,    -1,    -1,  2751,  2752,    -1,  2707,  1316,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2578,    -1,
      -1,    -1,   926,    -1,    -1,    -1,  1551,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     944,   945,    -1,    -1,    -1,    -1,   950,   951,   952,    -1,
    2783,    -1,    -1,   705,     0,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2810,  2810,    -1,    -1,    -1,    -1,
     288,  1596,    -1,   977,   978,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2642,    -1,    -1,  2831,   990,  2833,  1316,  2835,
      -1,    -1,    -1,  2839,    -1,    -1,    -1,    -1,    -1,    -1,
    2846,  2846,    -1,  1007,    -1,    -1,    -1,  1011,    -1,  2842,
      -1,  2810,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2867,    -1,    -1,    -1,    -1,   218,     8,    -1,    -1,
      11,    -1,    -1,    -1,    -1,    16,    -1,    -1,    -1,  1446,
      -1,  2887,    -1,    -1,    -1,    -1,    -1,  2846,    94,    -1,
      -1,    -1,    -1,    -1,  2900,     8,    -1,    -1,    11,    -1,
     812,    42,    -1,    16,    17,    18,    19,    -1,    49,    -1,
      -1,    -1,    -1,  1951,  2920,  2921,   526,    -1,    -1,    -1,
      -1,    34,    -1,    -1,    -1,  1229,    -1,  1231,    -1,    -1,
      -1,  2937,  2937,    74,  2940,  2941,   288,  2930,    -1,    87,
     146,    89,    -1,    91,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   160,    -1,    -1,  2777,  1446,   165,
      -1,    -1,    -1,    -1,   170,    -1,    -1,    -1,    -1,  2975,
      -1,    -1,    -1,   179,    -1,    -1,    -1,   183,  2937,    -1,
    1144,    -1,    -1,    -1,  1551,    -1,    -1,    -1,  1152,    -1,
      -1,    -1,    -1,  2031,    -1,    -1,    -1,  1161,    -1,    -1,
      -1,    -1,    -1,   144,    -1,   483,   484,   485,   214,   487,
     488,   489,   490,   491,   492,  3021,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2062,    -1,    -1,    -1,   234,  1596,
    1194,    -1,    -1,    -1,   175,     8,    -1,    -1,    11,  2077,
      -1,  2079,    -1,    16,    17,    18,    19,    -1,    -1,    -1,
     191,    -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,
      -1,  1225,  1226,  1551,  1228,  1229,    -1,  1231,  1232,    -1,
      -1,  1235,    -1,    -1,    -1,     8,    -1,   283,    11,   991,
     286,    -1,    -1,    16,    -1,    -1,   292,    -1,    -1,    -1,
      -1,    -1,   233,    -1,    -1,   705,    -1,    -1,    -1,    -1,
      -1,  2921,    -1,    -1,    -1,   218,    -1,    -1,  1596,    42,
      -1,    -1,    -1,    -1,    -1,    -1,    49,    -1,  1282,    -1,
     326,    -1,  1907,    -1,    -1,    -1,    -1,    -1,    -1,  1293,
      -1,   483,   484,   485,  1438,   487,   488,   489,   490,   491,
     492,    74,     8,   349,  1448,    11,  1450,   288,    -1,  1453,
      16,    17,    18,    19,    -1,  1459,    -1,  1461,    -1,    -1,
      -1,    -1,  1326,  2201,    -1,    -1,    -1,    -1,    34,  1473,
      -1,    -1,    -1,    -1,  1478,   288,    -1,    -1,  1482,  1483,
    1484,  1485,    -1,  1487,  1488,    -1,    -1,  2225,    -1,  2227,
      -1,  1976,    -1,  1357,  1358,    -1,     8,    -1,   404,    11,
      -1,    -1,   812,    -1,    16,    17,    18,    19,    -1,  1994,
      -1,   144,    -1,    -1,    -1,  1379,    -1,  1381,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   431,  1390,    -1,  1392,    -1,
      -1,    -1,    -1,   439,    -1,    -1,  2021,    -1,    -1,   380,
      -1,    -1,   175,  2028,    -1,   218,    -1,    -1,    -1,   455,
      -1,   457,   458,    -1,    -1,    -1,    -1,    -1,   191,    -1,
      -1,    -1,    -1,   196,  1428,  1177,  1178,  2052,    -1,    -1,
      -1,    -1,    -1,  1437,  1438,    -1,    -1,    -1,    -1,    -1,
    1192,    -1,    -1,    -1,  1448,  1449,  1450,  1451,   494,  1453,
      -1,   497,   498,   499,    -1,  1459,    -1,  1461,    -1,    -1,
     233,    -1,    -1,  2341,    -1,    -1,    -1,  2345,  1472,  1473,
      -1,    -1,    -1,  1477,  1478,   288,    -1,    -1,  1482,  1483,
    1484,  1485,    -1,  1487,  1488,    -1,    -1,    -1,    -1,    -1,
      -1,  2369,  2370,    -1,    -1,    -1,    -1,    -1,   486,   480,
    1907,    -1,    -1,  1507,  1508,  1509,   487,   488,   489,   490,
     491,   492,   218,    -1,    -1,   288,    -1,    -1,    -1,    -1,
      -1,    -1,  1526,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     483,   484,   485,    -1,   487,   488,   489,   490,   491,   492,
      -1,   991,    -1,    -1,    -1,     8,    -1,    -1,  2173,    -1,
      -1,    -1,    -1,    16,    17,    18,    19,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1316,    -1,   218,    -1,    -1,  1976,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1907,
      -1,    -1,   288,    -1,    -1,     8,    -1,  1994,    11,    -1,
      -1,    -1,   580,    16,    17,    18,    19,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   380,    -1,    -1,
      -1,    34,  2237,    -1,  2021,    -1,    -1,  2495,    -1,    42,
      -1,  2028,    -1,    -1,   612,    -1,    49,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   288,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2052,    -1,    -1,  1976,    -1,
      -1,    74,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1664,    -1,   650,   651,   652,   653,  1994,  1671,    -1,    -1,
     483,   484,   485,    -1,   487,   488,   489,   490,   491,   492,
      -1,    -1,  2560,    -1,  2309,    -1,    -1,  2565,    -1,    -1,
    2568,    -1,    -1,  2021,  1446,    -1,    -1,    -1,    -1,    -1,
    2028,    -1,    -1,  1707,    -1,    -1,    -1,   480,    -1,    -1,
      -1,    -1,    -1,    -1,   487,   488,   489,   490,   491,   492,
      -1,    -1,    -1,     8,  2052,    -1,    11,  1177,  1178,    -1,
      -1,    16,   110,   111,    -1,  1739,    -1,    -1,    -1,    -1,
      -1,  1745,  1192,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   175,    -1,    -1,    -1,  1760,    42,     0,    -1,
    1764,    -1,    -1,  1767,    49,  1769,  2173,  1911,   191,    -1,
      -1,    -1,    -1,   196,    -1,  2653,    -1,   483,   484,   485,
      -1,   487,   488,   489,   490,   491,   492,    -1,    -1,    74,
      -1,    -1,    -1,    -1,  2419,   218,   219,    -1,  2676,  1551,
      -1,    -1,    -1,     8,    -1,    -1,    11,    -1,   186,   187,
     233,    16,    17,    18,    19,    -1,    -1,  1821,    -1,    -1,
      -1,    -1,    -1,    -1,  2449,   288,    -1,    -1,    -1,  2707,
    2237,   483,   484,   485,    -1,   487,   488,   489,   490,   491,
     492,    -1,  2720,    -1,  1596,  2173,    -1,    -1,   271,    -1,
      -1,   274,    94,    -1,    -1,    -1,    -1,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,   288,  1316,    -1,    -1,    -1,
      -1,    -1,    -1,   251,   252,   253,   254,   255,   256,  1883,
      -1,   259,   260,    -1,  1888,    -1,    -1,    -1,    -1,    -1,
     175,    -1,    -1,  1897,  1898,  1899,  1900,  2522,    -1,    -1,
      -1,    -1,  2309,    -1,   146,  2783,   191,  1911,    -1,  2237,
      -1,   196,    -1,    -1,    -1,  1919,    -1,    -1,   160,    -1,
      -1,    -1,    -1,   165,    -1,    -1,    -1,  1931,   170,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   179,   926,    -1,
      -1,   183,    -1,  1947,    -1,  1949,    -1,    -1,   233,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   380,    -1,    -1,
    1964,  1965,    -1,   951,  2842,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   214,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2309,    -1,  1987,    -1,    -1,    -1,   365,   366,   977,
      -1,  2135,   234,    -1,    -1,    -1,  1446,    -1,    -1,    -1,
      -1,    -1,   990,   288,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2419,    -1,    -1,    -1,  2160,  2642,    -1,    -1,
     483,   484,   485,  1011,   487,   488,   489,   490,   491,   492,
      -1,  2175,  2176,  2177,  2178,  2179,  2180,  2181,  2182,  2183,
    2184,   283,  2449,    -1,   286,    -1,    -1,    -1,    -1,    -1,
     292,    -1,  2930,    -1,    -1,  2680,    -1,   480,    -1,    -1,
     483,   484,   485,    -1,   487,   488,   489,   490,   491,   492,
    2074,  2075,  2076,  2077,    -1,  2079,  2080,    -1,    -1,    -1,
      -1,  2085,  2086,   288,   326,    -1,  2711,    -1,    -1,  2714,
      -1,  2419,    -1,    -1,    -1,   380,    -1,    -1,   476,   477,
      -1,  1551,    -1,    -1,    -1,    -1,    -1,   349,    -1,    -1,
      -1,  2115,    -1,    -1,    37,  2522,    -1,    -1,   496,    -1,
      -1,  2449,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2133,
      -1,  2135,    -1,    56,    -1,  2139,  2140,  2141,    -1,  2143,
      -1,    -1,    -1,    -1,    -1,    -1,  1596,    -1,    -1,  2293,
      -1,    -1,    -1,    -1,    -1,  1907,  2160,    -1,  2162,    -1,
      -1,    -1,   404,    -1,  1152,    -1,    -1,    -1,    -1,    -1,
      -1,  2175,  2176,  2177,  2178,  2179,  2180,  2181,  2182,  2183,
    2184,    -1,    -1,    -1,   107,   108,    -1,    -1,    -1,   431,
      -1,    -1,    -1,   116,  2522,   480,  2200,   439,    -1,    -1,
      -1,  2205,   487,   488,   489,   490,   491,   492,    -1,    -1,
      -1,  2215,    -1,   455,    -1,   457,   458,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1976,  2229,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2642,    -1,  2241,    -1,    -1,
      -1,    -1,  1994,    -1,  2248,    -1,    -1,  1235,    -1,    -1,
      -1,   174,   494,    -1,    -1,   497,   498,   499,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2021,
      -1,    -1,    -1,  2680,    -1,   198,  2028,    -1,   483,   484,
     485,    -1,   487,   488,   489,   490,   491,   492,    -1,  2293,
      -1,    -1,    -1,    -1,    -1,  2299,  2921,    -1,    -1,    -1,
    2052,    -1,    -1,    -1,  2711,    -1,    -1,  2714,    -1,    -1,
      -1,    -1,    -1,    -1,  2642,    -1,    -1,    -1,  2322,    -1,
    2324,  2325,  2326,  2327,    -1,    -1,   249,  2331,  2332,    -1,
    2334,    -1,    -1,  2337,   257,    -1,    -1,  2341,    -1,    -1,
      -1,  2345,    -1,    -1,   564,   565,   269,  2351,   271,    -1,
      -1,    -1,  2680,    -1,    -1,    24,    -1,    -1,    -1,    -1,
      -1,    30,    -1,  2367,    -1,    -1,    -1,  2371,    37,    -1,
    1358,    -1,  2376,    -1,    -1,    -1,    -1,   300,  2382,    -1,
      -1,    -1,    -1,  2711,  2388,    -1,  2714,    56,    -1,    -1,
    2394,  1379,    -1,  1381,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   627,   628,    -1,
    2414,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2173,     8,    -1,   347,    11,    -1,    -1,    -1,    -1,
      16,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   107,    -1,
    1428,    -1,    -1,    -1,    -1,    -1,   369,    -1,    24,    -1,
      -1,    -1,    -1,    -1,    30,    -1,    42,  1907,    -1,    -1,
      -1,    37,    -1,    49,  2608,    -1,   389,   136,   391,    -1,
      -1,   394,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2483,
      56,    -1,    -1,    -1,    -1,  2237,    -1,    -1,    74,    -1,
    2494,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2643,
    2644,    -1,  2506,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2921,    -1,  2660,    -1,    -1,  1507,
    1508,    -1,    -1,    -1,    -1,    -1,  1976,    -1,    -1,   198,
      -1,   107,    -1,    -1,     0,    -1,    -1,    -1,  2542,    -1,
      -1,    -1,    -1,    -1,  1994,    -1,    -1,  2551,  2552,    -1,
      -1,  2555,    -1,    -1,  2558,    -1,  2560,  2309,   144,    -1,
     136,  2565,    -1,    -1,  2568,    -1,  2570,    -1,    -1,  2573,
     803,  2021,    -1,   496,    -1,    -1,    -1,   810,  2028,    -1,
     249,    -1,    -1,  2587,    -1,    -1,    -1,    -1,   257,   175,
      -1,   811,  2736,  2921,    -1,    -1,    -1,    -1,    -1,    -1,
     269,    -1,  2052,  2607,  2608,   191,    -1,    -1,   828,    -1,
     196,    -1,  2616,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2764,   290,   198,    -1,    -1,    -1,    -1,    -1,    94,    -1,
      -1,   300,    -1,    -1,    -1,    -1,    -1,   857,    -1,  2643,
    2644,    -1,    -1,    -1,    -1,    -1,    -1,   233,    -1,    -1,
    2654,    -1,  2656,    -1,    -1,    -1,  2660,   877,   878,   879,
      -1,    -1,   882,    -1,   897,    -1,    -1,  2419,  2672,    -1,
      -1,  2675,   341,   249,    -1,    -1,   345,    -1,   347,    -1,
     146,   257,    -1,    -1,    -1,   905,    -1,    -1,    -1,   922,
    2694,   924,   925,   269,   160,    -1,    -1,  2449,    -1,   165,
     369,    -1,   288,  2707,   170,    -1,   375,    -1,  2712,    -1,
      -1,    -1,    -1,   179,   290,    -1,    -1,   183,    -1,    -1,
     389,    -1,    -1,  2173,   300,    -1,  2730,    -1,    -1,    -1,
    2734,    -1,  2736,    -1,    -1,    -1,    -1,    -1,   958,    -1,
      -1,  2745,   962,   963,    -1,    -1,    -1,    -1,   214,    -1,
      -1,  1739,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   992,
    2764,    -1,   995,   996,  2768,   341,    -1,    -1,   234,   345,
    2522,   347,    -1,   442,    -1,    -1,    -1,    -1,  2782,    -1,
     110,   111,    -1,    -1,    -1,    -1,    -1,  2237,    -1,    -1,
      -1,    -1,    -1,   369,   380,    -1,  1016,    -1,    -1,   375,
      -1,    -1,    -1,  1023,    -1,    -1,  2810,    -1,    -1,    -1,
      -1,    -1,    -1,   389,    -1,  2819,    -1,   283,    -1,  2823,
     286,    -1,    -1,  2827,  1044,    -1,   292,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2846,  2847,  2848,  2849,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   186,   187,    -1,  2309,
     326,    -1,    -1,    -1,    -1,    -1,   442,    -1,    -1,    -1,
      -1,    -1,  2876,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   349,    -1,    -1,    -1,  2891,    -1,    -1,
    2642,    -1,    -1,    -1,   480,    -1,    -1,    -1,    -1,  2903,
    1888,   487,   488,   489,   490,   491,   492,    -1,    -1,    -1,
    1898,  1899,  1900,  2917,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   251,   252,   253,   254,   255,   256,  2931,  2680,   259,
     260,  1919,    -1,  2937,    -1,    -1,    -1,    -1,   404,    -1,
      -1,    -1,  1175,    -1,    -1,    -1,    -1,    -1,    -1,  2953,
    2954,    -1,    -1,  1186,    -1,  1188,    -1,    -1,    -1,  2711,
      -1,  1949,  2714,    -1,  1197,   431,    -1,    -1,    -1,  2419,
      -1,    -1,    -1,   439,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1214,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   455,
      -1,   457,   458,    -1,    -1,    -1,    -1,    -1,    -1,  2449,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1242,
    1243,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   494,    -1,
      -1,   497,   498,   499,    -1,   365,   366,    -1,    -1,    -1,
      -1,  1274,  1275,    -1,    -1,  1278,  1279,    -1,    -1,    -1,
      -1,  1271,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1281,    -1,  1283,    -1,    -1,  1286,  1287,  1288,  1289,
      -1,    -1,  2522,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2074,  2075,  2076,    -1,
      -1,  1311,    -1,    -1,    -1,    -1,    -1,  1317,  1318,  1319,
    1320,  1321,  1322,    -1,    -1,    -1,    -1,  1327,  1328,    -1,
      -1,    -1,  1332,    -1,    -1,    -1,  1336,    -1,    -1,  1339,
    1340,  1341,  1342,  1343,  1344,  1345,  1346,  1347,    -1,    -1,
    1350,    -1,    -1,    -1,    -1,    -1,    -1,  1357,    -1,    -1,
    1360,    -1,    -1,    -1,    -1,  2133,   476,   477,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1382,    -1,    -1,    -1,    22,    -1,    -1,  2921,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1414,  1415,    -1,    -1,   898,    -1,    -1,    -1,    -1,
      -1,    -1,  2642,    -1,  1414,  1415,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2205,    -1,    75,
      -1,    -1,    -1,    -1,    -1,    -1,   939,    -1,    -1,    -1,
    2680,    -1,    -1,  1466,    -1,    91,    -1,     0,    -1,    -1,
      -1,     8,    -1,  1476,    11,    -1,  1479,    -1,    -1,    16,
      17,    18,    19,  2241,    -1,    -1,    -1,    20,    -1,    -1,
      -1,  2711,    -1,    -1,  2714,    -1,    -1,    30,    -1,    32,
      33,    -1,    -1,  1493,    -1,    42,  1496,  1497,    -1,  1499,
      -1,    -1,    49,    -1,    -1,    48,    -1,    -1,    -1,   145,
      -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,    -1,   155,
      -1,    -1,    -1,    -1,    -1,    -1,    69,    74,    -1,    -1,
    1530,   167,    -1,    -1,    -1,    -1,   172,    80,    -1,  1552,
    1553,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    92,
      -1,    94,    -1,    -1,    -1,  1048,  2324,  2325,  2326,  2327,
      -1,    -1,  1055,   199,    -1,    -1,  1579,    -1,    -1,   112,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1592,
      -1,    -1,    -1,   126,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   136,  1594,    -1,    -1,    -1,    -1,   142,
      -1,  1601,    -1,    -1,    -1,    -1,  1606,   150,   244,   152,
     153,    -1,   248,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   166,    -1,    -1,    -1,    -1,   175,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   191,  1645,    -1,    -1,    -1,   196,
      -1,    -1,   195,    -1,    -1,    -1,  1656,    -1,  1658,  1659,
      -1,    -1,    -1,    -1,    -1,    -1,  1666,   210,    -1,    -1,
    1670,   218,   219,  1673,    -1,   311,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   233,    -1,    -1,   325,
      -1,  2921,    -1,   236,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1709,
      -1,    -1,  1712,    -1,  1714,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   358,    -1,   271,   361,    -1,   274,    -1,    -1,
      -1,    -1,    -1,   369,    -1,    -1,   372,  1750,    -1,    -1,
      -1,   288,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   391,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   404,    -1,
     313,  1784,  1785,   316,    -1,   411,  1269,    -1,    -1,  1779,
      -1,    -1,    -1,    -1,   420,    -1,    -1,  1280,    -1,    -1,
     426,  1284,    -1,    -1,  1794,  1795,    -1,  1290,  1291,  1292,
      -1,    -1,   345,    -1,    -1,    -1,  1299,    -1,    -1,    -1,
      -1,   354,    -1,  1813,    -1,   451,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   368,    -1,    -1,    -1,    -1,
      -1,    -1,   375,   380,    -1,    -1,   379,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   389,    -1,  2616,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   400,    -1,    -1,
      -1,   404,    -1,  1356,    -1,    -1,    -1,    -1,    -1,     8,
      -1,  1871,    11,    -1,    -1,    -1,    15,    16,    17,    18,
      19,    -1,    -1,    -1,    -1,    -1,  2654,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    34,    -1,   440,    -1,    -1,
      -1,    -1,   445,    42,  2672,    -1,  1399,    -1,    -1,    -1,
      49,    -1,  1925,    -1,    -1,   458,    -1,  1917,    -1,    -1,
    1413,    -1,    -1,    -1,    -1,  1418,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   480,    -1,    74,   483,   484,   485,   482,
     487,   488,   489,   490,   491,   492,    -1,    -1,    -1,    -1,
       3,    -1,    -1,   496,    -1,     8,   499,    -1,    11,    -1,
      -1,    -1,    15,    16,    17,    18,    19,    -1,    -1,    -1,
      -1,    -1,    -1,  1973,    -1,    -1,    -1,  2745,    -1,    -1,
      -1,    34,  1982,    -1,    37,  1985,    -1,    -1,  1988,    42,
      -1,    -1,    -1,    -1,    -1,    -1,    49,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2782,  2015,  2016,    -1,    -1,  2019,
      -1,    74,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2031,    -1,    -1,    -1,    -1,   175,    -1,    -1,    -1,
    2040,    -1,    -1,  2043,    -1,  2045,    -1,    -1,    -1,    -1,
      -1,    -1,   191,  2053,    -1,    -1,    -1,   196,    -1,    -1,
      -1,  2061,  2062,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,
     219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2091,    -1,    -1,   233,    -1,    -1,    -1,    -1,    -1,
      -1,  2101,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1604,    -1,    -1,    -1,    -1,    -1,  2117,    -1,    -1,
      -1,    -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1623,    -1,   271,    -1,    -1,   274,    -1,    -1,   191,    -1,
      -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,  1641,   288,
    1643,  1644,   291,  1646,    -1,  1648,    -1,    -1,    -1,  1652,
    2173,    -1,  1655,    -1,    -1,   218,   219,  1660,    -1,    -1,
    1663,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     233,    -1,  1675,    -1,    -1,    -1,  1679,  1680,  1681,  1682,
    1683,  1684,    -1,    -1,    -1,    -1,    -1,  1690,  1691,    -1,
    1693,  1694,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1705,    -1,    -1,  1708,    -1,    -1,   271,    -1,
      -1,   274,    -1,  1716,  1717,  1718,  1719,  1720,  1721,  1722,
    1723,  1724,  1725,    -1,    -1,   288,    -1,    -1,   291,    -1,
      -1,   380,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2254,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1757,    -1,     8,    -1,    -1,    11,
      -1,    -1,    -1,    -1,    16,    17,    18,    19,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      42,    -1,    -1,  2303,  2304,    -1,    -1,    49,  2308,    -1,
      -1,    -1,    -1,  2313,    -1,    -1,  2316,  2317,    -1,    -1,
      -1,  2321,    -1,    -1,    -1,    -1,    -1,   380,    -1,    -1,
      -1,    -1,    74,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   480,    -1,    -1,   483,   484,   485,    -1,   487,   488,
     489,   490,   491,   492,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   500,    -1,    -1,    -1,    -1,    -1,  2367,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1876,  1877,  1878,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2408,    -1,    -1,    -1,    -1,
    2413,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2410,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   480,    -1,    -1,
     483,   484,   485,   175,   487,   488,   489,   490,   491,   492,
      -1,    -1,  2455,  2456,    -1,    -1,    -1,    -1,    -1,   191,
      -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   218,   219,    -1,  1972,
      -1,    -1,    -1,    -1,    -1,  1978,    -1,    -1,    -1,    -1,
      -1,   233,    -1,    -1,    -1,    -1,    -1,    -1,  1991,  1992,
    1993,    -1,  1995,  1996,  1997,  1998,  1999,    -1,    -1,  2002,
    2003,  2004,  2005,  2006,  2007,  2008,  2009,  2010,  2011,  2012,
      -1,    -1,    -1,    -1,    -1,  2525,    -1,    -1,    -1,    -1,
      -1,    -1,   274,    -1,  2534,  2535,    -1,    -1,  2538,  2032,
      -1,    -1,  2035,    -1,  2037,    -1,   288,    -1,  2041,  2042,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2055,  2056,  2057,  2058,    -1,  2060,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2575,  2576,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2589,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2631,  2632,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2642,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   380,    -1,
      -1,    -1,    -1,  2136,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,    11,
      -1,    -1,    -1,    15,    16,    17,    18,    19,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    34,    -1,    -1,    37,    -1,    -1,    -1,    -1,
      42,    -1,    -1,  2703,    -1,    -1,    -1,    49,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2720,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    74,    -1,  2734,  2228,    -1,  2737,   480,    -1,
      -1,   483,   484,   485,    -1,   487,   488,   489,   490,   491,
     492,    -1,  2752,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2255,    -1,    -1,    -1,  2259,  2260,    -1,  2262,
      -1,    -1,  2265,  2266,  2267,  2268,  2269,    -1,    -1,    -1,
    2273,  2274,  2275,  2276,  2277,  2278,  2279,  2280,  2281,  2282,
    2283,  2284,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2295,    -1,    -1,    -1,    -1,    -1,    -1,  2302,
      -1,    -1,  2305,    -1,  2307,    -1,    -1,    -1,  2311,    -1,
      -1,  2314,  2315,    -1,    -1,  2318,  2319,    -1,    -1,    -1,
      -1,    -1,    -1,   175,    -1,  2835,    -1,    -1,    -1,  2839,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   191,
      -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2358,    -1,  2867,    -1,    -1,
      -1,    -1,    -1,  2366,    -1,    -1,   218,   219,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2379,    -1,    -1,    -1,
      -1,   233,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,
    2900,    15,    16,    17,    18,    19,    -1,    -1,  2921,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      34,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    42,   271,
      -1,    -1,   274,    -1,    -1,    49,    -1,    -1,    -1,    -1,
    2940,  2941,    -1,    -1,    -1,    -1,   288,    -1,    -1,   291,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      74,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2975,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3021,  2515,    -1,    -1,    -1,  2519,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2528,  2529,  2530,   380,    -1,
    2533,    -1,    -1,  2536,  2537,    -1,    -1,    -1,  2541,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   191,    -1,    -1,
      -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   218,   219,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2609,    -1,    -1,   233,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2628,    -1,    -1,   480,    -1,
      -1,   483,   484,   485,    -1,   487,   488,   489,   490,   491,
     492,    -1,    -1,    -1,    -1,   497,    -1,   271,    -1,    -1,
     274,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   288,    -1,    -1,   291,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2678,  2679,    -1,    -1,    -1,
      -1,  2684,  2685,  2686,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2728,  2729,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2755,    -1,    -1,    -1,   380,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2804,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2822,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2844,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2858,   480,    -1,    -1,   483,
     484,   485,    -1,   487,   488,   489,   490,   491,   492,    -1,
      -1,    -1,    -1,   497,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,  2905,    -1,    -1,    -1,    -1,    -1,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
      -1,    -1,    -1,    -1,    36,  2928,    -1,    39,    40,    -1,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    53,    -1,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    -1,    69,    70,    71,
      72,    73,    -1,    75,    -1,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    86,  2978,    88,    89,    90,    91,
      92,    93,    -1,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,   117,    -1,   119,   120,   121,
     122,   123,   124,    -1,   126,   127,   128,   129,   130,   131,
      -1,   133,   134,   135,   136,   137,    -1,   139,   140,   141,
      -1,   143,   144,   145,    -1,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,    -1,   161,
     162,   163,   164,    -1,   166,    -1,   168,   169,    -1,   171,
     172,   173,   174,   175,   176,    -1,   178,    -1,   180,   181,
     182,    -1,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,    -1,   197,   198,   199,   200,   201,
     202,    -1,   204,   205,   206,   207,   208,   209,   210,   211,
     212,   213,    -1,   215,    -1,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,    -1,   230,   231,
     232,   233,    -1,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,    -1,   284,   285,    -1,    -1,   288,   289,   290,    -1,
      -1,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,    -1,   310,   311,
     312,   313,   314,   315,   316,   317,   318,    -1,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,    -1,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,    -1,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,    -1,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,    -1,
     402,   403,    -1,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,   414,    -1,    -1,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,    -1,
      -1,   433,   434,   435,   436,   437,   438,    -1,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,    -1,    -1,   456,    -1,    -1,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,    -1,
      -1,    -1,    -1,    -1,    -1,   487,   488,   489,    -1,    -1,
      -1,    -1,   494,    -1,   496,   497,    -1,    -1,    -1,   501,
      -1,   503,   504,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      20,    21,    22,    23,    24,    25,    26,    27,    -1,    29,
      30,    31,    -1,    -1,    -1,    -1,    36,    -1,    -1,    39,
      40,    -1,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    53,    -1,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    71,    72,    73,    -1,    75,    -1,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    86,    -1,    88,    89,
      90,    91,    92,    93,    -1,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,   117,    -1,   119,
     120,   121,   122,   123,   124,    -1,   126,   127,   128,   129,
     130,    -1,    -1,   133,   134,   135,   136,   137,    -1,   139,
     140,   141,    -1,   143,   144,   145,    -1,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
      -1,   161,   162,   163,   164,    -1,   166,    -1,   168,   169,
      -1,   171,   172,   173,   174,   175,   176,    -1,   178,    -1,
     180,   181,   182,    -1,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,    -1,   197,   198,   199,
     200,   201,   202,    -1,   204,   205,   206,   207,   208,   209,
     210,   211,   212,   213,    -1,   215,    -1,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,    -1,    -1,
     230,   231,   232,   233,    -1,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,    -1,   284,   285,    -1,    -1,   288,   289,
     290,    -1,    -1,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,    -1,
     310,   311,   312,   313,   314,   315,   316,   317,   318,    -1,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,    -1,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,   414,    -1,    -1,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,    -1,    -1,   433,   434,   435,   436,   437,   438,    -1,
     440,   441,   442,   443,   444,   445,   446,    -1,   448,   449,
     450,   451,   452,   453,    -1,    -1,   456,    -1,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,    -1,   482,    -1,    -1,    -1,    -1,   487,   488,    -1,
      -1,    -1,    -1,    -1,   494,    -1,   496,   497,    -1,    -1,
      -1,   501,    -1,   503,   504,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    20,    21,    22,    23,    24,    25,    26,    27,
      -1,    29,    30,    31,    -1,    -1,    -1,    -1,    36,    -1,
      -1,    39,    40,    -1,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    53,    -1,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      -1,    69,    70,    71,    72,    73,    -1,    75,    -1,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    -1,
      88,    89,    90,    91,    92,    93,    -1,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
      -1,   119,   120,   121,   122,   123,   124,    -1,   126,   127,
     128,   129,   130,    -1,    -1,   133,   134,   135,   136,   137,
      -1,   139,   140,   141,    -1,   143,   144,   145,    -1,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,    -1,   161,   162,   163,   164,    -1,   166,    -1,
     168,   169,    -1,   171,   172,   173,   174,   175,   176,    -1,
     178,    -1,   180,   181,   182,    -1,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,    -1,   197,
     198,   199,   200,   201,   202,    -1,   204,   205,   206,   207,
     208,   209,   210,   211,   212,   213,    -1,   215,    -1,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
      -1,    -1,   230,   231,   232,   233,    -1,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,    -1,   284,   285,    -1,    -1,
     288,   289,   290,    -1,    -1,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,    -1,   310,   311,   312,   313,   314,   315,   316,   317,
     318,    -1,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,    -1,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,    -1,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,   414,    -1,    -1,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,    -1,    -1,   433,   434,   435,   436,   437,
     438,    -1,   440,   441,   442,   443,   444,   445,   446,    -1,
     448,   449,   450,   451,   452,   453,    -1,    -1,   456,    -1,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,    -1,   482,    -1,    -1,    -1,    -1,   487,
     488,    -1,    -1,    -1,    -1,    -1,   494,    -1,   496,    -1,
      -1,    -1,    -1,   501,    -1,   503,   504,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    20,    21,    22,    23,    24,    25,
      26,    27,    -1,    29,    30,    31,    -1,    -1,    -1,    -1,
      36,    -1,    -1,    39,    40,    -1,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    -1,    69,    70,    71,    72,    73,    -1,    75,
      -1,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      86,    -1,    88,    89,    90,    91,    92,    93,    -1,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,   117,    -1,   119,   120,   121,   122,   123,   124,    -1,
     126,   127,   128,   129,   130,    -1,    -1,   133,   134,   135,
     136,   137,    -1,   139,   140,   141,    -1,   143,   144,   145,
      -1,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,    -1,   161,   162,   163,   164,    -1,
     166,    -1,   168,   169,   170,   171,   172,   173,   174,   175,
     176,    -1,   178,    -1,   180,   181,   182,    -1,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
      -1,   197,   198,   199,   200,   201,   202,    -1,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   213,    -1,   215,
      -1,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,    -1,   229,   230,   231,   232,   233,    -1,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,    -1,   284,   285,
      -1,    -1,   288,   289,   290,    -1,    -1,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,    -1,   310,   311,   312,   313,   314,   315,
     316,   317,   318,    -1,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,    -1,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,    -1,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,    -1,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,    -1,   402,   403,    -1,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,   414,    -1,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,    -1,    -1,   433,   434,   435,
     436,   437,   438,    -1,   440,   441,   442,   443,   444,   445,
     446,    -1,   448,   449,   450,   451,   452,   453,    -1,    -1,
     456,    -1,    -1,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,    -1,    -1,    -1,    -1,    -1,
      -1,   487,   488,    -1,    -1,    -1,    -1,    -1,   494,    -1,
     496,    -1,    -1,    -1,    -1,   501,    -1,   503,   504,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    -1,    -1,
      -1,    35,    36,    -1,    -1,    39,    40,    -1,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    53,
      -1,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    -1,    69,    70,    71,    72,    73,
      -1,    75,    -1,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    86,    -1,    88,    89,    90,    91,    92,    93,
      -1,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,   117,    -1,   119,   120,   121,   122,   123,
     124,    -1,   126,   127,   128,   129,   130,    -1,    -1,   133,
     134,   135,   136,   137,    -1,   139,   140,   141,    -1,   143,
     144,   145,    -1,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,    -1,   161,   162,   163,
     164,    -1,   166,    -1,   168,   169,    -1,   171,   172,   173,
     174,   175,   176,    -1,   178,    -1,   180,   181,   182,    -1,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,    -1,   197,   198,   199,   200,   201,   202,    -1,
     204,   205,   206,   207,   208,   209,   210,   211,   212,   213,
      -1,   215,    -1,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,    -1,    -1,   230,   231,   232,   233,
      -1,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,    -1,
     284,   285,    -1,    -1,   288,   289,   290,    -1,    -1,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,    -1,   310,   311,   312,   313,
     314,   315,   316,   317,   318,    -1,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,    -1,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,    -1,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,    -1,   402,   403,
      -1,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
     414,    -1,    -1,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,    -1,    -1,   433,
     434,   435,   436,   437,   438,    -1,   440,   441,   442,   443,
     444,   445,   446,    -1,   448,   449,   450,   451,   452,   453,
      -1,    -1,   456,    -1,    -1,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,    -1,    -1,    -1,
      -1,    -1,    -1,   487,   488,    -1,    -1,    -1,    -1,    -1,
     494,    -1,   496,    -1,    -1,    -1,    -1,   501,    -1,   503,
     504,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
      -1,    -1,    -1,    -1,    36,    -1,    -1,    39,    40,    -1,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    53,    -1,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    -1,    69,    70,    71,
      72,    73,    -1,    75,    -1,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    86,    -1,    88,    89,    90,    91,
      92,    93,    -1,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,   117,    -1,   119,   120,   121,
     122,   123,   124,    -1,   126,   127,   128,   129,   130,    -1,
      -1,   133,   134,   135,   136,   137,    -1,   139,   140,   141,
      -1,   143,   144,   145,    -1,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,    -1,   161,
     162,   163,   164,    -1,   166,    -1,   168,   169,    -1,   171,
     172,   173,   174,   175,   176,    -1,   178,    -1,   180,   181,
     182,    -1,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,    -1,   197,   198,   199,   200,   201,
     202,    -1,   204,   205,   206,   207,   208,   209,   210,   211,
     212,   213,    -1,   215,    -1,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,    -1,   230,   231,
     232,   233,    -1,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,    -1,   284,   285,    -1,    -1,   288,   289,   290,    -1,
      -1,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,    -1,   310,   311,
     312,   313,   314,   315,   316,   317,   318,    -1,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,    -1,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,    -1,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,    -1,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,    -1,
     402,   403,    -1,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,   414,    -1,    -1,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,    -1,
      -1,   433,   434,   435,   436,   437,   438,    -1,   440,   441,
     442,   443,   444,   445,   446,    -1,   448,   449,   450,   451,
     452,   453,    -1,    -1,   456,    -1,    -1,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,    -1,
      -1,    -1,    -1,    -1,    -1,   487,   488,   489,    -1,    -1,
      -1,    -1,   494,    -1,   496,    -1,    -1,    -1,    -1,   501,
      -1,   503,   504,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    -1,    -1,    -1,    -1,    36,    -1,    -1,    39,
      40,    -1,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    53,    -1,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    71,    72,    73,    -1,    75,    -1,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    86,    -1,    88,    89,
      90,    91,    92,    93,    -1,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,   117,    -1,   119,
     120,   121,   122,   123,   124,    -1,   126,   127,   128,   129,
     130,    -1,    -1,   133,   134,   135,   136,   137,    -1,   139,
     140,   141,    -1,   143,   144,   145,    -1,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
      -1,   161,   162,   163,   164,    -1,   166,    -1,   168,   169,
      -1,   171,   172,   173,   174,   175,   176,    -1,   178,    -1,
     180,   181,   182,    -1,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,    -1,   197,   198,   199,
     200,   201,   202,    -1,   204,   205,   206,   207,   208,   209,
     210,   211,   212,   213,    -1,   215,    -1,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,    -1,    -1,
     230,   231,   232,   233,    -1,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,    -1,   284,   285,    -1,    -1,   288,   289,
     290,    -1,    -1,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,    -1,
     310,   311,   312,   313,   314,   315,   316,   317,   318,    -1,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,    -1,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,    -1,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,    -1,   402,   403,    -1,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,   414,    -1,    -1,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,    -1,    -1,   433,   434,   435,   436,   437,   438,    -1,
     440,   441,   442,   443,   444,   445,   446,    -1,   448,   449,
     450,   451,   452,   453,    -1,    -1,   456,    -1,    -1,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,    -1,    -1,    -1,    -1,    -1,    -1,   487,   488,   489,
      -1,    -1,    -1,    -1,   494,    -1,   496,    -1,    -1,    -1,
      -1,   501,    -1,   503,   504,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    20,    21,    22,    23,    24,    25,    26,    27,
      -1,    29,    30,    31,    -1,    -1,    -1,    -1,    36,    -1,
      -1,    39,    40,    -1,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    53,    -1,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      -1,    69,    70,    71,    72,    73,    -1,    75,    -1,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    -1,
      88,    89,    90,    91,    92,    93,    -1,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
      -1,   119,   120,   121,   122,   123,   124,    -1,   126,   127,
     128,   129,   130,    -1,    -1,   133,   134,   135,   136,   137,
      -1,   139,   140,   141,    -1,   143,   144,   145,    -1,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,    -1,   161,   162,   163,   164,    -1,   166,    -1,
     168,   169,    -1,   171,   172,   173,   174,   175,   176,    -1,
     178,    -1,   180,   181,   182,    -1,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,    -1,   197,
     198,   199,   200,   201,   202,    -1,   204,   205,   206,   207,
     208,   209,   210,   211,   212,   213,    -1,   215,    -1,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
      -1,    -1,   230,   231,   232,   233,    -1,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,    -1,   284,   285,    -1,    -1,
     288,   289,   290,    -1,    -1,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,    -1,   310,   311,   312,   313,   314,   315,   316,   317,
     318,    -1,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,    -1,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
      -1,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,    -1,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,    -1,   402,   403,    -1,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,   414,    -1,    -1,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,    -1,    -1,   433,   434,   435,   436,   437,
     438,    -1,   440,   441,   442,   443,   444,   445,   446,    -1,
     448,   449,   450,   451,   452,   453,    -1,    -1,   456,    -1,
      -1,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,    -1,    -1,    -1,    -1,    -1,    -1,   487,
     488,   489,    -1,    -1,    -1,    -1,   494,    -1,   496,    -1,
      -1,    -1,    -1,   501,    -1,   503,   504,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    31,    -1,    -1,    -1,    -1,
      36,    -1,    -1,    39,    40,    -1,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    53,    -1,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    -1,    69,    70,    71,    72,    73,    -1,    75,
      -1,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      86,    -1,    88,    89,    90,    91,    92,    93,    -1,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,   117,    -1,   119,   120,   121,   122,   123,   124,    -1,
     126,   127,   128,   129,   130,    -1,    -1,   133,   134,   135,
     136,   137,    -1,   139,   140,   141,    -1,   143,   144,   145,
      -1,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,    -1,   161,   162,   163,   164,    -1,
     166,    -1,   168,   169,    -1,   171,   172,   173,   174,   175,
     176,    -1,   178,    -1,   180,   181,   182,    -1,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
      -1,   197,   198,   199,   200,   201,   202,    -1,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   213,    -1,   215,
      -1,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,    -1,    -1,   230,   231,   232,   233,    -1,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,    -1,   284,   285,
      -1,    -1,   288,   289,   290,    -1,    -1,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,    -1,   310,   311,   312,   313,   314,   315,
     316,   317,   318,    -1,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,    -1,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,    -1,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,    -1,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,    -1,   402,   403,    -1,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,   414,    -1,
      -1,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,    -1,    -1,   433,   434,   435,
     436,   437,   438,    -1,   440,   441,   442,   443,   444,   445,
     446,    -1,   448,   449,   450,   451,   452,   453,    -1,    -1,
     456,    -1,    -1,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,    -1,    -1,    -1,    -1,    -1,
      -1,   487,   488,    -1,    -1,    -1,    -1,    -1,   494,    -1,
     496,    -1,    -1,    -1,    -1,   501,    -1,   503,   504,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    20,    21,    22,    23,
      24,    25,    26,    27,    -1,    29,    30,    31,    -1,    -1,
      -1,    -1,    36,    -1,    -1,    39,    40,    -1,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    53,
      -1,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    -1,    69,    70,    71,    72,    73,
      -1,    75,    -1,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    86,    -1,    88,    89,    90,    91,    92,    93,
      -1,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,   117,    -1,   119,   120,   121,   122,   123,
     124,    -1,   126,   127,   128,   129,   130,    -1,    -1,   133,
     134,   135,   136,   137,    -1,   139,   140,   141,    -1,   143,
     144,   145,    -1,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,    -1,   161,   162,   163,
     164,    -1,   166,    -1,   168,   169,    -1,   171,   172,   173,
     174,   175,   176,    -1,   178,    -1,   180,   181,   182,    -1,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,    -1,   197,   198,   199,   200,   201,   202,    -1,
     204,   205,   206,   207,   208,   209,   210,   211,   212,   213,
      -1,   215,    -1,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,    -1,    -1,   230,   231,   232,   233,
      -1,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,    -1,
     284,   285,    -1,    -1,   288,   289,   290,    -1,    -1,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,    -1,   310,   311,   312,   313,
     314,   315,   316,   317,   318,    -1,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,    -1,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,    -1,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,    -1,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,    -1,   402,   403,
      -1,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
     414,    -1,    -1,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,    -1,    -1,   433,
     434,   435,   436,   437,   438,    -1,   440,   441,   442,   443,
     444,   445,   446,    -1,   448,   449,   450,   451,   452,   453,
      -1,    -1,   456,    -1,    -1,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,    -1,    -1,    -1,
      -1,    -1,    -1,   487,   488,    -1,    -1,    -1,    -1,    -1,
     494,    -1,   496,   497,    -1,    -1,    -1,   501,    -1,   503,
     504,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,    21,
      22,    23,    24,    25,    26,    27,    -1,    29,    30,    31,
      -1,    -1,    -1,    -1,    36,    -1,    -1,    39,    40,    -1,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    53,    -1,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    -1,    69,    70,    71,
      72,    73,    -1,    75,    -1,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    86,    -1,    88,    89,    90,    91,
      92,    93,    -1,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,   117,    -1,   119,   120,   121,
     122,   123,   124,    -1,   126,   127,   128,   129,   130,    -1,
      -1,   133,   134,   135,   136,   137,    -1,   139,   140,   141,
      -1,   143,   144,   145,    -1,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,    -1,   161,
     162,   163,   164,    -1,   166,    -1,   168,   169,    -1,   171,
     172,   173,   174,   175,   176,    -1,   178,    -1,   180,   181,
     182,    -1,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,    -1,   197,   198,   199,   200,   201,
     202,    -1,   204,   205,   206,   207,   208,   209,   210,   211,
     212,   213,    -1,   215,    -1,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,    -1,   230,   231,
     232,   233,    -1,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,    -1,   284,   285,    -1,    -1,   288,   289,   290,    -1,
      -1,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,    -1,   310,   311,
     312,   313,   314,   315,   316,   317,   318,    -1,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,    -1,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,    -1,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,    -1,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,    -1,
     402,   403,    -1,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,   414,    -1,    -1,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,    -1,
      -1,   433,   434,   435,   436,   437,   438,    -1,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,    -1,    -1,   456,    -1,    -1,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,    -1,
      -1,    -1,    -1,    -1,    -1,   487,   488,    -1,    -1,    -1,
      -1,    -1,   494,    -1,   496,    -1,    -1,    -1,    -1,   501,
      -1,   503,   504,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      20,    21,    22,    23,    24,    25,    26,    27,    -1,    29,
      30,    31,    -1,    -1,    -1,    -1,    36,    -1,    -1,    39,
      40,    -1,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    53,    -1,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    71,    72,    73,    -1,    75,    -1,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    86,    -1,    88,    89,
      90,    91,    92,    93,    -1,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,   117,    -1,   119,
     120,   121,   122,   123,   124,    -1,   126,   127,   128,   129,
     130,    -1,    -1,   133,   134,   135,   136,   137,    -1,   139,
     140,   141,    -1,   143,   144,   145,    -1,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
      -1,   161,   162,   163,   164,    -1,   166,    -1,   168,   169,
      -1,   171,   172,   173,   174,   175,   176,    -1,   178,    -1,
     180,   181,   182,    -1,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,    -1,   197,   198,   199,
     200,   201,   202,    -1,   204,   205,   206,   207,   208,   209,
     210,   211,   212,   213,    -1,   215,    -1,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,    -1,    -1,
     230,   231,   232,   233,    -1,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,    -1,   284,   285,    -1,    -1,   288,   289,
     290,    -1,    -1,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,    -1,
     310,   311,   312,   313,   314,   315,   316,   317,   318,    -1,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,    -1,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,    -1,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,    -1,   402,   403,    -1,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,   414,    -1,    -1,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,    -1,    -1,   433,   434,   435,   436,   437,   438,    -1,
     440,   441,   442,   443,   444,   445,   446,    -1,   448,   449,
     450,   451,   452,   453,    -1,    -1,   456,    -1,    -1,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,    -1,    -1,    -1,    -1,    -1,    -1,   487,   488,    -1,
      -1,    -1,    -1,    -1,   494,    -1,   496,   497,    -1,    -1,
      -1,   501,    -1,   503,   504,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    20,    21,    22,    23,    24,    25,    26,    27,
      -1,    29,    30,    31,    -1,    -1,    -1,    -1,    36,    -1,
      -1,    39,    40,    -1,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    53,    -1,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      -1,    69,    70,    71,    72,    73,    -1,    75,    -1,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    -1,
      88,    89,    90,    91,    92,    93,    -1,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
      -1,   119,   120,   121,   122,   123,   124,    -1,   126,   127,
     128,   129,   130,    -1,    -1,   133,   134,   135,   136,   137,
      -1,   139,   140,   141,    -1,   143,   144,   145,    -1,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,    -1,   161,   162,   163,   164,    -1,   166,    -1,
     168,   169,   170,   171,   172,   173,   174,   175,   176,    -1,
     178,    -1,   180,   181,   182,    -1,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,    -1,   197,
     198,   199,   200,   201,   202,    -1,   204,   205,   206,   207,
     208,   209,   210,   211,   212,   213,    -1,   215,    -1,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
      -1,    -1,   230,   231,   232,   233,    -1,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,    -1,   284,   285,    -1,    -1,
     288,   289,   290,    -1,    -1,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,    -1,   310,   311,   312,   313,   314,   315,   316,   317,
     318,    -1,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,    -1,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
      -1,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,    -1,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,    -1,   402,   403,    -1,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,   414,    -1,    -1,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,    -1,    -1,   433,   434,   435,   436,   437,
     438,    -1,   440,   441,   442,   443,   444,   445,   446,    -1,
     448,   449,   450,   451,   452,   453,    -1,    -1,   456,    -1,
      -1,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,    -1,    -1,    -1,    -1,    -1,    -1,   487,
     488,    -1,    -1,    -1,    -1,    -1,   494,    -1,   496,    -1,
      -1,    -1,    -1,   501,    -1,   503,   504,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    20,    21,    22,    23,    24,    25,
      26,    27,    -1,    29,    30,    31,    -1,    -1,    -1,    -1,
      36,    -1,    -1,    39,    40,    -1,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    53,    -1,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    -1,    69,    70,    71,    72,    73,    -1,    75,
      -1,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      86,    -1,    88,    89,    90,    91,    92,    93,    -1,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,   117,    -1,   119,   120,   121,   122,   123,   124,    -1,
     126,   127,   128,   129,   130,    -1,    -1,   133,   134,   135,
     136,   137,    -1,   139,   140,   141,    -1,   143,   144,   145,
      -1,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,    -1,   161,   162,   163,   164,    -1,
     166,    -1,   168,   169,    -1,   171,   172,   173,   174,   175,
     176,    -1,   178,    -1,   180,   181,   182,    -1,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
      -1,   197,   198,   199,   200,   201,   202,    -1,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   213,    -1,   215,
      -1,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,    -1,    -1,   230,   231,   232,   233,    -1,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,    -1,   284,   285,
      -1,    -1,   288,   289,   290,    -1,    -1,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,    -1,   310,   311,   312,   313,   314,   315,
     316,   317,   318,    -1,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,    -1,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,    -1,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,    -1,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,   414,    -1,
      -1,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,    -1,    -1,   433,   434,   435,
     436,   437,   438,    -1,   440,   441,   442,   443,   444,   445,
     446,    -1,   448,   449,   450,   451,   452,   453,    -1,    -1,
     456,    -1,    -1,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,    -1,    -1,    -1,    -1,    -1,
      -1,   487,   488,    -1,    -1,    -1,    -1,    -1,   494,    -1,
     496,    -1,    -1,    -1,    -1,   501,    -1,   503,   504,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    20,    21,    22,    23,
      24,    25,    26,    27,    -1,    29,    30,    31,    -1,    -1,
      -1,    -1,    36,    -1,    -1,    39,    40,    -1,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    53,
      -1,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    -1,    69,    70,    71,    72,    73,
      -1,    75,    -1,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    86,    -1,    88,    89,    90,    91,    92,    93,
      -1,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,   117,    -1,   119,   120,   121,   122,   123,
     124,    -1,   126,   127,   128,   129,   130,    -1,    -1,   133,
     134,   135,   136,   137,    -1,   139,   140,   141,    -1,   143,
     144,   145,    -1,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,    -1,   161,   162,   163,
     164,    -1,   166,    -1,   168,   169,    -1,   171,   172,   173,
     174,   175,   176,    -1,   178,    -1,   180,   181,   182,    -1,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,    -1,   197,   198,   199,   200,   201,   202,    -1,
     204,   205,   206,   207,   208,   209,   210,   211,   212,   213,
      -1,   215,    -1,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,    -1,    -1,   230,   231,   232,   233,
      -1,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,    -1,
     284,   285,    -1,    -1,   288,   289,   290,    -1,    -1,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,    -1,   310,   311,   312,   313,
     314,   315,   316,   317,   318,    -1,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,    -1,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,    -1,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,    -1,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,    -1,   402,   403,
      -1,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
     414,    -1,    -1,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,    -1,    -1,   433,
     434,   435,   436,   437,   438,    -1,   440,   441,   442,   443,
     444,   445,   446,    -1,   448,   449,   450,   451,   452,   453,
      -1,    -1,   456,    -1,    -1,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,    -1,    -1,    -1,
      -1,    -1,    -1,   487,   488,    -1,    -1,    -1,    -1,    -1,
     494,    -1,   496,    -1,    -1,    -1,    -1,   501,    -1,   503,
     504,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,    21,
      22,    23,    24,    25,    26,    27,    -1,    29,    30,    31,
      -1,    -1,    -1,    -1,    36,    -1,    -1,    39,    40,    -1,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    53,    -1,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    -1,    69,    70,    71,
      72,    73,    -1,    75,    -1,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    86,    -1,    88,    89,    90,    91,
      92,    93,    -1,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,   117,    -1,   119,   120,   121,
     122,   123,   124,    -1,   126,   127,   128,   129,   130,    -1,
      -1,   133,   134,   135,   136,   137,    -1,   139,   140,   141,
      -1,   143,   144,   145,    -1,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,    -1,   161,
     162,   163,   164,    -1,   166,    -1,   168,   169,    -1,   171,
     172,   173,   174,   175,   176,    -1,   178,    -1,   180,   181,
     182,    -1,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,    -1,   197,   198,   199,   200,   201,
     202,    -1,   204,   205,   206,   207,   208,   209,   210,   211,
     212,   213,    -1,   215,    -1,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,    -1,   230,   231,
     232,   233,    -1,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,    -1,   284,   285,    -1,    -1,   288,   289,   290,    -1,
      -1,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,    -1,   310,   311,
     312,   313,   314,   315,   316,   317,   318,    -1,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,    -1,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,    -1,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,    -1,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,    -1,
     402,   403,    -1,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,   414,    -1,    -1,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,    -1,
      -1,   433,   434,   435,   436,   437,   438,    -1,   440,   441,
     442,   443,   444,   445,   446,    -1,   448,   449,   450,   451,
     452,   453,    -1,    -1,   456,    -1,    -1,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,    -1,
      -1,    -1,    -1,    -1,    -1,   487,   488,    -1,    -1,    -1,
      -1,    -1,   494,    -1,   496,    -1,    -1,    -1,    -1,   501,
      -1,   503,   504,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      20,    21,    22,    23,    24,    25,    26,    27,    -1,    29,
      30,    31,    -1,    -1,    -1,    -1,    36,    -1,    -1,    39,
      40,    -1,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    53,    -1,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    71,    72,    73,    -1,    75,    -1,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    86,    -1,    88,    89,
      90,    91,    92,    93,    -1,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,   117,    -1,   119,
     120,   121,   122,   123,   124,    -1,   126,   127,   128,   129,
     130,    -1,    -1,   133,   134,   135,   136,   137,    -1,   139,
     140,   141,    -1,   143,   144,   145,    -1,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
      -1,   161,   162,   163,   164,    -1,   166,    -1,   168,   169,
      -1,   171,   172,   173,   174,   175,   176,    -1,   178,    -1,
     180,   181,   182,    -1,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,    -1,   197,   198,   199,
     200,   201,   202,    -1,   204,   205,   206,   207,   208,   209,
     210,   211,   212,   213,    -1,   215,    -1,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,    -1,    -1,
     230,   231,   232,   233,    -1,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,    -1,   284,   285,    -1,    -1,   288,   289,
     290,    -1,    -1,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,    -1,
     310,   311,   312,   313,   314,   315,   316,   317,   318,    -1,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,    -1,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,    -1,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,    -1,   402,   403,    -1,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,   414,    -1,    -1,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,    -1,    -1,   433,   434,   435,   436,   437,   438,    -1,
     440,   441,   442,   443,   444,   445,   446,    -1,   448,   449,
     450,   451,   452,   453,    -1,    -1,   456,    -1,    -1,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,    -1,    -1,    -1,    -1,    -1,    -1,   487,   488,    -1,
      -1,    -1,    -1,    -1,   494,    -1,   496,    -1,    -1,    -1,
      -1,   501,    -1,   503,   504,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    20,    21,    22,    23,    24,    25,    26,    27,
      -1,    29,    30,    31,    -1,    -1,    -1,    -1,    36,    -1,
      -1,    39,    40,    -1,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    53,    -1,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      -1,    69,    70,    71,    72,    73,    -1,    75,    -1,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    -1,
      88,    89,    90,    91,    92,    93,    -1,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
      -1,   119,   120,   121,   122,   123,   124,    -1,   126,   127,
     128,   129,   130,    -1,    -1,   133,   134,   135,   136,   137,
      -1,   139,   140,   141,    -1,   143,   144,   145,    -1,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,    -1,   161,   162,   163,   164,    -1,   166,    -1,
     168,   169,    -1,   171,   172,   173,   174,   175,   176,    -1,
     178,    -1,   180,   181,   182,    -1,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,    -1,   197,
     198,   199,   200,   201,   202,    -1,   204,   205,   206,   207,
     208,   209,   210,   211,   212,   213,    -1,   215,    -1,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
      -1,    -1,   230,   231,   232,   233,    -1,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,    -1,   284,   285,    -1,    -1,
     288,   289,   290,    -1,    -1,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,    -1,   310,   311,   312,   313,   314,   315,   316,   317,
     318,    -1,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,    -1,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
      -1,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,    -1,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,    -1,   402,   403,    -1,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,   414,    -1,    -1,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,    -1,    -1,   433,   434,   435,   436,   437,
     438,    -1,   440,   441,   442,   443,   444,   445,   446,    -1,
     448,   449,   450,   451,   452,   453,    -1,    -1,   456,    -1,
      -1,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,    -1,    -1,    -1,    -1,    -1,    -1,   487,
     488,    -1,    -1,    -1,    -1,    -1,   494,    -1,   496,    -1,
      -1,    -1,    -1,   501,    -1,   503,   504,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    20,    21,    22,    23,    24,    25,
      26,    27,    -1,    29,    30,    31,    -1,    -1,    -1,    -1,
      36,    -1,    -1,    39,    40,    -1,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    53,    -1,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    -1,    69,    70,    71,    72,    73,    -1,    75,
      -1,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      86,    -1,    88,    89,    90,    91,    92,    93,    -1,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,   117,    -1,   119,   120,   121,   122,   123,   124,    -1,
     126,   127,   128,   129,   130,    -1,    -1,   133,   134,   135,
     136,   137,    -1,   139,   140,   141,    -1,   143,   144,   145,
      -1,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,    -1,   161,   162,   163,   164,    -1,
     166,    -1,   168,   169,    -1,   171,   172,   173,   174,   175,
     176,    -1,   178,    -1,   180,   181,   182,    -1,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
      -1,   197,   198,   199,   200,   201,   202,    -1,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   213,    -1,   215,
      -1,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,    -1,    -1,   230,   231,   232,   233,    -1,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,    -1,   284,   285,
      -1,    -1,   288,   289,   290,    -1,    -1,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,    -1,   310,   311,   312,   313,   314,   315,
     316,   317,   318,    -1,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,    -1,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,    -1,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,    -1,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,    -1,   402,   403,    -1,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,   414,    -1,
      -1,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,    -1,    -1,   433,   434,   435,
     436,   437,   438,    -1,   440,   441,   442,   443,   444,   445,
     446,    -1,   448,   449,   450,   451,   452,   453,    -1,    -1,
     456,    -1,    -1,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,    -1,    -1,    -1,    -1,    -1,
      -1,   487,   488,    -1,    -1,    -1,    -1,    -1,   494,    -1,
     496,    -1,    -1,    -1,    -1,   501,    -1,   503,   504,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    20,    21,    22,    23,
      24,    25,    26,    27,    -1,    29,    30,    31,    -1,    -1,
      -1,    -1,    36,    -1,    -1,    39,    40,    -1,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    53,
      -1,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    -1,    69,    70,    71,    72,    73,
      -1,    75,    -1,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    86,    -1,    88,    89,    90,    91,    92,    93,
      -1,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,   117,    -1,   119,   120,   121,   122,   123,
     124,    -1,   126,   127,   128,   129,   130,    -1,    -1,   133,
     134,   135,   136,   137,    -1,   139,   140,   141,    -1,   143,
     144,   145,    -1,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,    -1,   161,   162,   163,
     164,    -1,   166,    -1,   168,   169,    -1,   171,   172,   173,
     174,   175,   176,    -1,   178,    -1,   180,   181,   182,    -1,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,    -1,   197,   198,   199,   200,   201,   202,    -1,
     204,   205,   206,   207,   208,   209,   210,   211,   212,   213,
      -1,   215,    -1,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,    -1,    -1,   230,   231,   232,   233,
      -1,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,    -1,
     284,   285,    -1,    -1,   288,   289,   290,    -1,    -1,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,    -1,   310,   311,   312,   313,
     314,   315,   316,   317,   318,    -1,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,    -1,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,    -1,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,    -1,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,    -1,   402,   403,
      -1,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
     414,    -1,    -1,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,    -1,    -1,   433,
     434,   435,   436,   437,   438,    -1,   440,   441,   442,   443,
     444,   445,   446,    -1,   448,   449,   450,   451,   452,   453,
      -1,    -1,   456,    -1,    -1,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,    -1,    -1,    -1,
      -1,    -1,    -1,   487,   488,    -1,    -1,    -1,    -1,    -1,
     494,    -1,   496,    -1,    -1,    -1,    -1,   501,    -1,   503,
     504,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,    21,
      22,    23,    24,    25,    26,    27,    -1,    29,    30,    31,
      -1,    -1,    -1,    -1,    36,    -1,    -1,    39,    40,    -1,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    53,    -1,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    -1,    69,    70,    71,
      72,    73,    -1,    75,    -1,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    86,    -1,    88,    89,    90,    91,
      92,    93,    -1,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,   117,    -1,   119,   120,   121,
     122,   123,   124,    -1,   126,   127,   128,   129,   130,    -1,
      -1,   133,   134,   135,   136,   137,    -1,   139,   140,   141,
      -1,   143,   144,   145,    -1,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,    -1,   161,
     162,   163,   164,    -1,   166,    -1,   168,   169,    -1,   171,
     172,   173,   174,   175,   176,    -1,   178,    -1,   180,   181,
     182,    -1,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,    -1,   197,   198,   199,   200,   201,
     202,    -1,   204,   205,   206,   207,   208,   209,   210,   211,
     212,   213,    -1,   215,    -1,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,    -1,   230,   231,
     232,   233,    -1,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,    -1,   284,   285,    -1,    -1,   288,   289,   290,    -1,
      -1,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,    -1,   310,   311,
     312,   313,   314,   315,   316,   317,   318,    -1,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,    -1,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,    -1,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,    -1,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,    -1,
     402,   403,    -1,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,   414,    -1,    -1,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,    -1,
      -1,   433,   434,   435,   436,   437,   438,    -1,   440,   441,
     442,   443,   444,   445,   446,    -1,   448,   449,   450,   451,
     452,   453,    -1,    -1,   456,    -1,    -1,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,    -1,
      -1,    -1,    -1,    -1,    -1,   487,   488,    -1,    -1,    -1,
      -1,    -1,   494,    -1,   496,    -1,    -1,    -1,    -1,   501,
      -1,   503,   504,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      20,    21,    22,    23,    24,    25,    26,    27,    -1,    29,
      30,    31,    -1,    -1,    -1,    -1,    36,    -1,    -1,    39,
      40,    -1,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    53,    -1,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    71,    72,    73,    -1,    75,    -1,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    86,    -1,    88,    89,
      90,    91,    92,    93,    -1,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,   117,    -1,   119,
     120,   121,   122,   123,   124,    -1,   126,   127,   128,   129,
     130,    -1,    -1,   133,   134,   135,   136,   137,    -1,   139,
     140,   141,    -1,   143,   144,   145,    -1,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
      -1,   161,   162,   163,   164,    -1,   166,    -1,   168,   169,
      -1,   171,   172,   173,   174,   175,   176,    -1,   178,    -1,
     180,   181,   182,    -1,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,    -1,   197,   198,   199,
     200,   201,   202,    -1,   204,   205,   206,   207,   208,   209,
     210,   211,   212,   213,    -1,   215,    -1,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,    -1,    -1,
     230,   231,   232,   233,    -1,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,    -1,   284,   285,    -1,    -1,   288,   289,
     290,    -1,    -1,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,    -1,
     310,   311,   312,   313,   314,   315,   316,   317,   318,    -1,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,    -1,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,    -1,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,    -1,   402,   403,    -1,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,   414,    -1,    -1,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,    -1,    -1,   433,   434,   435,   436,   437,   438,    -1,
     440,   441,   442,   443,   444,   445,   446,    -1,   448,   449,
     450,   451,   452,   453,    -1,    -1,   456,    -1,    -1,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,    -1,    -1,    -1,    -1,    -1,    -1,   487,   488,    -1,
      -1,    -1,    -1,    -1,   494,    -1,   496,    -1,    -1,    -1,
      -1,   501,    -1,   503,   504,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    20,    21,    22,    23,    24,    25,    26,    27,
      -1,    29,    30,    31,    -1,    -1,    -1,    -1,    36,    -1,
      -1,    39,    40,    -1,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    53,    -1,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      -1,    69,    70,    71,    72,    73,    -1,    75,    -1,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    -1,
      88,    89,    90,    91,    92,    93,    -1,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
      -1,   119,   120,   121,   122,   123,   124,    -1,   126,   127,
     128,   129,   130,    -1,    -1,   133,   134,   135,   136,   137,
      -1,   139,   140,   141,    -1,   143,   144,   145,    -1,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,    -1,   161,   162,   163,   164,    -1,   166,    -1,
     168,   169,    -1,   171,   172,   173,   174,   175,   176,    -1,
     178,    -1,   180,   181,   182,    -1,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,    -1,   197,
     198,   199,   200,   201,   202,    -1,   204,   205,   206,   207,
     208,   209,   210,   211,   212,   213,    -1,   215,    -1,   217,
      -1,    -1,   220,   221,   222,   223,   224,   225,   226,   227,
      -1,    -1,   230,   231,   232,   233,    -1,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,    -1,   272,   273,    -1,   275,   276,   277,
     278,   279,   280,   281,   282,    -1,   284,   285,    -1,    -1,
     288,   289,   290,    -1,    -1,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,    -1,   310,   311,   312,   313,   314,   315,   316,   317,
     318,    -1,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,    -1,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
      -1,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,    -1,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,    -1,   402,   403,    -1,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,   414,    -1,    -1,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,    -1,    -1,   433,   434,   435,   436,   437,
     438,    -1,   440,   441,   442,   443,   444,   445,   446,    -1,
     448,   449,   450,   451,   452,   453,    -1,    -1,   456,    -1,
      -1,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,    -1,    -1,    -1,    -1,    -1,    -1,   487,
     488,    -1,    -1,    -1,    -1,    -1,   494,    -1,   496,    -1,
      -1,    -1,    -1,   501,    -1,   503,   504,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    20,    21,    22,    23,    24,    25,
      26,    27,    -1,    29,    30,    31,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    39,    40,    -1,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    53,    -1,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    -1,    69,    70,    71,    72,    73,    -1,    75,
      -1,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      86,    -1,    88,    89,    90,    91,    92,    93,    -1,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
      -1,   117,    -1,   119,   120,   121,   122,   123,   124,    -1,
     126,   127,   128,   129,   130,    -1,    -1,   133,   134,   135,
     136,   137,    -1,   139,   140,   141,    -1,   143,   144,   145,
      -1,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,    -1,   161,   162,   163,   164,    -1,
     166,    -1,   168,   169,    -1,   171,   172,   173,   174,   175,
     176,    -1,   178,    -1,   180,   181,   182,    -1,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
      -1,   197,   198,   199,   200,   201,   202,    -1,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   213,    -1,   215,
      -1,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,    -1,    -1,   230,   231,   232,   233,    -1,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,    -1,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,    -1,   284,   285,
      -1,    -1,   288,   289,   290,    -1,    -1,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,    -1,   310,   311,   312,   313,   314,   315,
     316,   317,   318,    -1,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,    -1,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,    -1,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,    -1,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,    -1,   402,   403,    -1,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,   414,    -1,
      -1,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,    -1,    -1,   433,   434,   435,
     436,   437,   438,    -1,   440,   441,   442,   443,   444,   445,
     446,    -1,   448,   449,   450,   451,   452,   453,    -1,    -1,
     456,    -1,    -1,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   487,   488,    -1,    -1,     3,     4,     5,     6,     7,
     496,     9,    10,    -1,    -1,    -1,    -1,   503,   504,    -1,
      -1,    -1,    20,    21,    22,    23,    24,    25,    26,    27,
      -1,    29,    30,    31,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    39,    40,    -1,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    53,    -1,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      -1,    69,    70,    71,    72,    73,    -1,    75,    -1,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    -1,
      88,    89,    90,    91,    92,    93,    -1,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,    -1,   117,
      -1,   119,   120,   121,   122,   123,   124,    -1,   126,   127,
     128,   129,   130,    -1,    -1,   133,   134,   135,   136,   137,
      -1,   139,   140,   141,    -1,   143,   144,   145,    -1,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,    -1,   161,   162,   163,   164,    -1,   166,    -1,
     168,   169,    -1,   171,   172,   173,   174,   175,   176,    -1,
     178,    -1,   180,   181,   182,    -1,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,    -1,   197,
     198,   199,   200,   201,   202,    -1,   204,   205,   206,   207,
     208,   209,   210,   211,   212,   213,    -1,   215,    -1,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
      -1,    -1,   230,   231,   232,   233,    -1,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,    -1,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,    -1,   284,   285,    -1,    -1,
     288,   289,   290,    -1,    -1,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,    -1,   310,   311,   312,   313,   314,   315,   316,   317,
     318,    -1,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,    -1,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
      -1,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,    -1,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,    -1,   402,   403,    -1,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,   414,    -1,    -1,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,    -1,    -1,   433,   434,   435,   436,   437,
     438,    -1,   440,   441,   442,   443,   444,   445,   446,    -1,
     448,   449,   450,   451,   452,   453,    -1,    -1,   456,    -1,
      -1,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   487,
     488,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   496,    -1,
      -1,    -1,    -1,    -1,    -1,   503,   504,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    20,    21,    22,    23,    24,    25,
      26,    27,    -1,    29,    30,    31,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    39,    40,    -1,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    53,    -1,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    -1,    69,    70,    71,    72,    73,    -1,    75,
      -1,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      86,    -1,    88,    89,    90,    91,    92,    93,    -1,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
      -1,   117,    -1,   119,   120,   121,   122,   123,   124,    -1,
     126,   127,   128,   129,   130,    -1,    -1,   133,   134,   135,
     136,   137,    -1,   139,   140,   141,    -1,   143,   144,   145,
      -1,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,    -1,   161,   162,   163,   164,    -1,
     166,    -1,   168,   169,    -1,   171,   172,   173,   174,   175,
     176,    -1,   178,    -1,   180,   181,   182,    -1,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
      -1,   197,   198,   199,   200,   201,   202,    -1,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   213,    -1,   215,
      -1,   217,    -1,   219,   220,   221,   222,   223,   224,   225,
     226,   227,    -1,    -1,   230,   231,   232,   233,    -1,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,    -1,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,    -1,   284,   285,
      -1,    -1,   288,   289,   290,    -1,    -1,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,    -1,   310,   311,   312,   313,   314,   315,
     316,   317,   318,    -1,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,    -1,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,    -1,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,    -1,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,    -1,   402,   403,    -1,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,   414,    -1,
      -1,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,    -1,    -1,   433,   434,   435,
     436,   437,   438,    -1,   440,   441,   442,   443,   444,   445,
     446,    -1,   448,   449,   450,   451,   452,   453,    -1,    -1,
     456,    -1,    -1,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   487,   488,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     496,    -1,    -1,    -1,    -1,    -1,    -1,   503,   504,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    20,    21,    22,    23,
      24,    25,    26,    27,    -1,    29,    30,    31,    -1,    -1,
      -1,    -1,    36,    -1,    -1,    39,    40,    -1,    42,    43,
      44,    45,    46,    47,    48,    -1,    50,    51,    52,    53,
      -1,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    -1,    69,    70,    71,    72,    73,
      -1,    75,    -1,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    86,    -1,    88,    89,    90,    91,    92,    93,
      -1,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,   117,    -1,   119,   120,   121,   122,   123,
     124,    -1,   126,   127,   128,   129,   130,    -1,    -1,   133,
     134,   135,   136,   137,    -1,   139,   140,   141,    -1,   143,
      -1,   145,    -1,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,    -1,   161,   162,   163,
     164,    -1,   166,    -1,   168,   169,    -1,   171,   172,   173,
     174,    -1,   176,    -1,   178,    -1,   180,   181,   182,    -1,
     184,   185,   186,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,    -1,   197,   198,   199,   200,   201,   202,    -1,
     204,   205,   206,   207,   208,   209,   210,   211,   212,   213,
      -1,   215,    -1,   217,    -1,    -1,   220,   221,   222,   223,
     224,   225,   226,   227,    -1,    -1,   230,   231,   232,    -1,
      -1,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,    -1,   272,   273,
      -1,   275,   276,   277,   278,   279,   280,   281,   282,    -1,
     284,   285,    -1,    -1,   288,   289,   290,    -1,    -1,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,    -1,   310,   311,   312,   313,
     314,   315,   316,   317,   318,    -1,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,    -1,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,    -1,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,    -1,   381,   382,   383,
     384,    -1,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,    -1,   402,   403,
      -1,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
     414,    -1,    -1,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,    -1,    -1,   433,
     434,   435,   436,   437,   438,    -1,   440,   441,   442,   443,
     444,   445,   446,    -1,   448,   449,   450,   451,   452,   453,
      -1,    -1,   456,    -1,    -1,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   487,   488,     3,    -1,    -1,    -1,    -1,
     494,    -1,   496,    -1,    -1,    -1,    -1,   501,    -1,   503,
     504,    -1,    20,    21,    22,    23,    24,    25,    26,    27,
      -1,    29,    30,    31,    -1,    -1,    -1,    -1,    -1,    37,
      -1,    39,    40,    -1,    42,    43,    44,    -1,    46,    47,
      48,    49,    50,    -1,    52,    53,    -1,    55,    56,    57,
      58,    59,    60,    -1,    -1,    63,    64,    65,    66,    67,
      -1,    69,    70,    71,    72,    73,    -1,    -1,    -1,    77,
      78,    79,    80,    81,    82,    -1,    84,    85,    86,    -1,
      88,    89,    90,    91,    92,    93,    -1,    95,    96,    97,
      98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,    -1,   117,
      -1,   119,   120,   121,   122,   123,   124,    -1,   126,   127,
     128,   129,   130,    -1,    -1,   133,   134,   135,   136,   137,
      -1,   139,   140,   141,    -1,   143,   144,   145,    -1,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
      -1,   159,    -1,   161,   162,   163,   164,    -1,   166,    -1,
     168,    -1,    -1,   171,   172,   173,   174,    -1,   176,    -1,
     178,    -1,   180,   181,   182,    -1,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,    -1,   197,
     198,   199,   200,   201,   202,    -1,   204,   205,   206,   207,
     208,   209,   210,   211,   212,   213,    -1,   215,    -1,   217,
      -1,    -1,   220,   221,   222,   223,   224,   225,   226,   227,
      -1,    -1,   230,   231,   232,    -1,    -1,   235,   236,   237,
      -1,    -1,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,    -1,   272,   273,    -1,   275,    -1,   277,
     278,   279,   280,   281,   282,    -1,   284,   285,    -1,    -1,
     288,   289,   290,    -1,    -1,   293,   294,    -1,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,    -1,   310,   311,   312,   313,   314,   315,   316,   317,
     318,    -1,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,    -1,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
      -1,   369,   370,   371,   372,   373,    -1,   375,   376,   377,
     378,   379,    -1,   381,   382,   383,   384,    -1,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,    -1,   402,   403,    -1,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,   414,    -1,    -1,   417,
     418,   419,   420,   421,    -1,   423,   424,   425,   426,   427,
     428,   429,   430,    -1,    -1,   433,   434,   435,   436,   437,
      -1,    -1,   440,   441,   442,   443,   444,   445,   446,    -1,
     448,    -1,   450,   451,   452,   453,    -1,    -1,   456,    -1,
      -1,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,    -1,     3,    -1,     5,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   497,
      20,    21,    22,    23,    24,    25,    26,    27,    -1,    29,
      30,    31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    39,
      40,    -1,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    53,    -1,    55,    56,    57,    58,    59,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    71,    72,    73,    -1,    75,    -1,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    86,    -1,    88,    89,
      90,    91,    92,    93,    -1,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,    -1,   117,    -1,   119,
     120,   121,   122,   123,   124,    -1,   126,   127,   128,   129,
     130,    -1,    -1,   133,   134,   135,   136,   137,    -1,   139,
     140,   141,    -1,   143,   144,   145,    -1,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,    -1,   159,
      -1,   161,   162,   163,   164,    -1,   166,    -1,   168,   169,
      -1,   171,   172,   173,   174,   175,   176,    -1,   178,    -1,
     180,   181,   182,    -1,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,    -1,   197,   198,   199,
     200,   201,   202,    -1,   204,   205,   206,   207,   208,   209,
     210,   211,   212,   213,    -1,   215,    -1,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,    -1,
     230,   231,   232,   233,    -1,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,    -1,   272,   273,   274,   275,    -1,   277,   278,   279,
     280,   281,   282,    -1,   284,   285,    -1,   287,   288,   289,
     290,    -1,    -1,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,    -1,
     310,   311,   312,   313,   314,   315,   316,   317,   318,    -1,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,    -1,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,   414,    -1,    -1,   417,   418,   419,
     420,   421,    -1,   423,   424,   425,   426,   427,   428,   429,
     430,    -1,    -1,   433,   434,   435,   436,   437,   438,    -1,
     440,   441,   442,   443,   444,   445,   446,    -1,   448,   449,
     450,   451,   452,   453,    -1,    -1,   456,    -1,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
      -1,     3,   482,     5,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   496,    -1,    20,    21,
      22,    23,    24,    25,    26,    27,    -1,    29,    30,    31,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    39,    40,    -1,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    53,    -1,    55,    56,    57,    58,    59,    60,    -1,
      62,    63,    64,    65,    66,    67,    -1,    69,    70,    71,
      72,    73,    -1,    75,    -1,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    86,    -1,    88,    89,    90,    91,
      92,    93,    -1,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,    -1,   117,    -1,   119,   120,   121,
     122,   123,   124,    -1,   126,   127,   128,   129,   130,    -1,
      -1,   133,   134,   135,   136,   137,    -1,   139,   140,   141,
      -1,   143,   144,   145,    -1,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,    -1,   159,    -1,   161,
     162,   163,   164,    -1,   166,    -1,   168,   169,    -1,   171,
     172,   173,   174,   175,   176,    -1,   178,    -1,   180,   181,
     182,    -1,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,    -1,   197,   198,   199,   200,   201,
     202,    -1,   204,   205,   206,   207,   208,   209,   210,   211,
     212,   213,    -1,   215,    -1,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,    -1,   230,   231,
     232,   233,    -1,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,    -1,
     272,   273,   274,   275,    -1,   277,   278,   279,   280,   281,
     282,    -1,   284,   285,    -1,   287,   288,   289,   290,    -1,
      -1,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,    -1,   310,   311,
     312,   313,   314,   315,   316,   317,   318,    -1,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,    -1,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,    -1,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,    -1,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,    -1,
     402,   403,    -1,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,   414,    -1,    -1,   417,   418,   419,   420,   421,
      -1,   423,   424,   425,   426,   427,   428,   429,   430,    -1,
      -1,   433,   434,   435,   436,   437,   438,    -1,   440,   441,
     442,   443,   444,   445,   446,    -1,   448,   449,   450,   451,
     452,   453,    -1,    -1,   456,    -1,    -1,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   496,    20,    21,    22,    23,    24,
      25,    26,    27,    -1,    29,    30,    31,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    39,    40,    -1,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    -1,
      55,    56,    57,    58,    59,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    71,    72,    73,    -1,
      75,    -1,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    -1,    88,    89,    90,    91,    92,    93,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,    -1,   117,    -1,   119,   120,   121,   122,   123,   124,
      -1,   126,   127,   128,   129,   130,    -1,    -1,   133,   134,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,    -1,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,    -1,   159,    -1,   161,   162,   163,   164,
      -1,   166,    -1,   168,   169,    -1,   171,   172,   173,   174,
     175,   176,    -1,   178,    -1,   180,   181,   182,    -1,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,    -1,   197,   198,   199,   200,   201,   202,    -1,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,    -1,
     215,    -1,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,    -1,    -1,   230,   231,   232,   233,    -1,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,    -1,   272,   273,   274,
     275,    -1,   277,   278,   279,   280,   281,   282,    -1,   284,
     285,    -1,    -1,   288,   289,   290,    -1,    -1,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,   317,   318,    -1,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,    -1,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,    -1,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,    -1,   402,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,   414,
      -1,    -1,   417,   418,   419,   420,   421,    -1,   423,   424,
     425,   426,   427,   428,   429,   430,    -1,    -1,   433,   434,
     435,   436,   437,   438,    -1,   440,   441,   442,   443,   444,
     445,   446,    -1,   448,   449,   450,   451,   452,   453,    -1,
      -1,   456,    -1,    -1,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   496,    20,    21,    22,    23,    24,    25,    26,    27,
      -1,    29,    30,    31,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    39,    40,    -1,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    53,    -1,    55,    56,    57,
      58,    59,    60,    -1,    62,    63,    64,    65,    66,    67,
      -1,    69,    70,    71,    72,    73,    -1,    75,    -1,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    -1,
      88,    89,    90,    91,    92,    93,    -1,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,    -1,   117,
      -1,   119,   120,   121,   122,   123,   124,    -1,   126,   127,
     128,   129,   130,    -1,    -1,   133,   134,   135,   136,   137,
      -1,   139,   140,   141,    -1,   143,   144,   145,    -1,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
      -1,   159,    -1,   161,   162,   163,   164,    -1,   166,    -1,
     168,   169,    -1,   171,   172,   173,   174,   175,   176,    -1,
     178,    -1,   180,   181,   182,    -1,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,    -1,   197,
     198,   199,   200,   201,   202,    -1,   204,   205,   206,   207,
     208,   209,   210,   211,   212,   213,    -1,   215,    -1,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
      -1,    -1,   230,   231,   232,   233,    -1,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,    -1,   272,   273,   274,   275,    -1,   277,
     278,   279,   280,   281,   282,    -1,   284,   285,    -1,    -1,
     288,   289,   290,    -1,    -1,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,    -1,   310,   311,   312,   313,   314,   315,   316,   317,
     318,    -1,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,    -1,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
      -1,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,    -1,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,    -1,   402,   403,    -1,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,   414,    -1,    -1,   417,
     418,   419,   420,   421,    -1,   423,   424,   425,   426,   427,
     428,   429,   430,    -1,    -1,   433,   434,   435,   436,   437,
     438,    -1,   440,   441,   442,   443,   444,   445,   446,    -1,
     448,   449,   450,   451,   452,   453,    -1,    -1,   456,    -1,
      -1,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,     3,     4,     5,    -1,    -1,    -1,     9,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   496,    20,
      21,    22,    23,    24,    25,    26,    27,    -1,    29,    30,
      31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    39,    40,
      -1,    42,    43,    44,    -1,    46,    47,    48,    49,    50,
      -1,    52,    53,    -1,    55,    56,    57,    58,    59,    60,
      -1,    -1,    63,    64,    65,    66,    67,    -1,    69,    70,
      71,    72,    73,    -1,    -1,    -1,    77,    78,    79,    80,
      81,    82,    -1,    84,    85,    86,    -1,    88,    89,    90,
      91,    92,    93,    -1,    -1,    96,    97,    98,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,    -1,   117,    -1,   119,   120,
     121,   122,   123,   124,    -1,   126,   127,   128,   129,   130,
      -1,    -1,   133,   134,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,    -1,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,    -1,
     161,   162,   163,   164,    -1,   166,    -1,   168,    -1,    -1,
      -1,   172,   173,   174,    -1,   176,    -1,   178,    -1,   180,
     181,   182,    -1,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,    -1,   197,   198,   199,   200,
     201,   202,    -1,   204,    -1,   206,   207,   208,   209,   210,
     211,   212,   213,    -1,   215,    -1,   217,    -1,    -1,   220,
      -1,   222,   223,   224,   225,   226,   227,    -1,    -1,   230,
      -1,   232,    -1,    -1,   235,   236,   237,    -1,    -1,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,   268,   269,   270,
      -1,   272,   273,    -1,   275,    -1,   277,   278,   279,   280,
     281,   282,    -1,   284,   285,   286,    -1,   288,   289,   290,
      -1,    -1,   293,   294,    -1,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,   317,   318,    -1,   320,
     321,   322,   323,   324,   325,    -1,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,    -1,   350,
     351,    -1,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,    -1,   369,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,   379,    -1,
     381,   382,   383,   384,    -1,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
      -1,   402,   403,    -1,   405,    -1,   407,   408,   409,   410,
     411,    -1,   413,   414,    -1,    -1,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,    -1,    -1,   440,
     441,   442,   443,   444,   445,   446,    -1,   448,    -1,   450,
     451,   452,   453,    -1,    -1,   456,    -1,    -1,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,     3,
      -1,    -1,    -1,    -1,    -1,    -1,   487,   488,   489,    -1,
      -1,    -1,    -1,    -1,    -1,   496,    20,    21,    22,    23,
      24,    25,    26,    27,    -1,    29,    30,    31,    32,    33,
      -1,    -1,    -1,    -1,    -1,    39,    40,    -1,    42,    43,
      44,    -1,    46,    47,    48,    49,    50,    -1,    52,    53,
      -1,    55,    56,    57,    58,    59,    60,    -1,    -1,    63,
      64,    65,    66,    67,    -1,    69,    70,    71,    72,    73,
      -1,    -1,    -1,    77,    78,    79,    80,    81,    82,    -1,
      84,    85,    86,    -1,    88,    89,    90,    91,    92,    93,
      -1,    -1,    96,    97,    98,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,    -1,   117,    -1,   119,   120,   121,   122,   123,
     124,    -1,   126,   127,   128,   129,   130,    -1,    -1,   133,
     134,   135,   136,   137,    -1,   139,   140,   141,    -1,   143,
     144,   145,    -1,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,    -1,   159,    -1,   161,   162,   163,
     164,    -1,   166,    -1,   168,    -1,    -1,    -1,   172,   173,
     174,    -1,   176,    -1,   178,    -1,   180,   181,   182,    -1,
     184,   185,   186,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,    -1,   197,   198,   199,   200,   201,   202,    -1,
     204,    -1,   206,   207,   208,   209,   210,   211,   212,   213,
      -1,   215,    -1,   217,    -1,    -1,   220,    -1,   222,   223,
     224,   225,   226,   227,    -1,    -1,   230,    -1,   232,    -1,
      -1,   235,   236,   237,    -1,    -1,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,    -1,   266,   267,   268,   269,   270,    -1,   272,   273,
      -1,   275,    -1,   277,   278,   279,   280,   281,   282,    -1,
     284,   285,    -1,    -1,   288,   289,   290,    -1,    -1,   293,
     294,    -1,   296,    -1,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,    -1,   310,   311,   312,   313,
     314,   315,   316,   317,   318,    -1,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,    -1,   350,   351,    -1,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,   379,    -1,   381,   382,   383,
     384,    -1,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,    -1,   402,   403,
     404,   405,    -1,   407,   408,   409,   410,   411,    -1,   413,
     414,    -1,    -1,   417,   418,   419,   420,   421,    -1,   423,
     424,   425,   426,   427,   428,   429,   430,    -1,    -1,   433,
     434,   435,   436,   437,    -1,    -1,   440,   441,   442,   443,
     444,   445,   446,    -1,   448,    -1,   450,   451,   452,   453,
      -1,    -1,   456,    -1,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,     3,    -1,   482,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   496,    20,    21,    22,    23,    24,    25,    26,
      27,    28,    29,    30,    31,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    39,    40,    -1,    42,    43,    44,    -1,    46,
      47,    48,    49,    50,    -1,    52,    53,    -1,    55,    56,
      57,    58,    59,    60,    -1,    -1,    63,    64,    65,    66,
      67,    -1,    69,    70,    71,    72,    73,    -1,    -1,    -1,
      77,    78,    79,    80,    81,    82,    -1,    84,    85,    86,
      -1,    88,    89,    90,    91,    92,    93,    -1,    -1,    96,
      97,    98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,    -1,
     117,    -1,   119,   120,   121,   122,   123,   124,    -1,   126,
     127,   128,   129,   130,    -1,    -1,   133,   134,   135,   136,
     137,    -1,   139,   140,   141,    -1,   143,   144,   145,    -1,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,    -1,   159,    -1,   161,   162,   163,   164,    -1,   166,
      -1,   168,    -1,    -1,    -1,   172,   173,   174,    -1,   176,
      -1,   178,    -1,   180,   181,   182,    -1,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,    -1,
     197,   198,   199,   200,   201,   202,    -1,   204,    -1,   206,
     207,   208,   209,   210,   211,   212,   213,    -1,   215,    -1,
     217,    -1,    -1,   220,    -1,   222,   223,   224,   225,   226,
     227,    -1,    -1,   230,    -1,   232,    -1,    -1,   235,   236,
     237,    -1,    -1,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,    -1,   266,
     267,   268,   269,   270,    -1,   272,   273,    -1,   275,    -1,
     277,   278,   279,   280,   281,   282,    -1,   284,   285,    -1,
      -1,   288,   289,   290,    -1,    -1,   293,   294,    -1,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,   312,   313,   314,   315,   316,
     317,   318,    -1,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,    -1,   350,   351,    -1,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,   379,    -1,   381,   382,   383,   384,    -1,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,    -1,   402,   403,   404,   405,    -1,
     407,   408,   409,   410,   411,    -1,   413,   414,    -1,    -1,
     417,   418,   419,   420,   421,    -1,   423,   424,   425,   426,
     427,   428,   429,   430,    -1,    -1,   433,   434,   435,   436,
     437,    -1,    -1,   440,   441,   442,   443,   444,   445,   446,
      -1,   448,    -1,   450,   451,   452,   453,    -1,    -1,   456,
      -1,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,     3,    -1,   482,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   496,
      20,    21,    22,    23,    24,    25,    26,    27,    -1,    29,
      30,    31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    39,
      40,    -1,    42,    43,    44,    -1,    46,    47,    48,    49,
      50,    -1,    52,    53,    -1,    55,    56,    57,    58,    59,
      60,    -1,    -1,    63,    64,    65,    66,    67,    -1,    69,
      70,    71,    72,    73,    -1,    -1,    -1,    77,    78,    79,
      80,    81,    82,    -1,    84,    85,    86,    -1,    88,    89,
      90,    91,    92,    93,    -1,    -1,    96,    97,    98,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,    -1,   117,    -1,   119,
     120,   121,   122,   123,   124,    -1,   126,   127,   128,   129,
     130,    -1,    -1,   133,   134,   135,   136,   137,    -1,   139,
     140,   141,    -1,   143,   144,   145,    -1,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,    -1,   159,
      -1,   161,   162,   163,   164,    -1,   166,    -1,   168,    -1,
      -1,    -1,   172,   173,   174,    -1,   176,    -1,   178,    -1,
     180,   181,   182,    -1,   184,   185,   186,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,    -1,   197,   198,   199,
     200,   201,   202,    -1,   204,    -1,   206,   207,   208,   209,
     210,   211,   212,   213,    -1,   215,    -1,   217,    -1,    -1,
     220,    -1,   222,   223,   224,   225,   226,   227,    -1,    -1,
     230,    -1,   232,    -1,    -1,   235,   236,   237,    -1,    -1,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,    -1,   266,   267,   268,   269,
     270,    -1,   272,   273,    -1,   275,    -1,   277,   278,   279,
     280,   281,   282,    -1,   284,   285,    -1,    -1,   288,   289,
     290,    -1,    -1,   293,   294,    -1,   296,    -1,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,    -1,
     310,   311,   312,   313,   314,   315,   316,   317,   318,    -1,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,    -1,
     350,   351,    -1,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,   379,
      -1,   381,   382,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,    -1,   402,   403,   404,   405,    -1,   407,   408,   409,
     410,   411,    -1,   413,   414,    -1,    -1,   417,   418,   419,
     420,   421,    -1,   423,   424,   425,   426,   427,   428,   429,
     430,    -1,    -1,   433,   434,   435,   436,   437,    -1,    -1,
     440,   441,   442,   443,   444,   445,   446,    -1,   448,    -1,
     450,   451,   452,   453,    -1,    -1,   456,    -1,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
      -1,     3,   482,     5,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   496,    -1,    20,    21,
      22,    23,    24,    25,    26,    27,    -1,    29,    30,    31,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    39,    40,    -1,
      42,    43,    44,    -1,    46,    47,    48,    49,    50,    -1,
      52,    53,    -1,    55,    56,    57,    58,    59,    60,    -1,
      -1,    63,    64,    65,    66,    67,    -1,    69,    70,    71,
      72,    73,    -1,    -1,    -1,    77,    78,    79,    80,    81,
      82,    -1,    84,    85,    86,    -1,    88,    89,    90,    91,
      92,    93,    -1,    -1,    96,    97,    98,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,    -1,   117,    -1,   119,   120,   121,
     122,   123,   124,    -1,   126,   127,   128,   129,   130,    -1,
      -1,   133,   134,   135,   136,   137,    -1,   139,   140,   141,
      -1,   143,   144,   145,    -1,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,    -1,   159,    -1,   161,
     162,   163,   164,    -1,   166,    -1,   168,    -1,    -1,    -1,
     172,   173,   174,    -1,   176,    -1,   178,    -1,   180,   181,
     182,    -1,   184,   185,   186,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,    -1,   197,   198,   199,   200,   201,
     202,    -1,   204,    -1,   206,   207,   208,   209,   210,   211,
     212,   213,    -1,   215,    -1,   217,    -1,    -1,   220,    -1,
     222,   223,   224,   225,   226,   227,    -1,    -1,   230,    -1,
     232,    -1,    -1,   235,   236,   237,    -1,    -1,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,    -1,   266,   267,   268,   269,   270,    -1,
     272,   273,    -1,   275,    -1,   277,   278,   279,   280,   281,
     282,    -1,   284,   285,    -1,    -1,   288,   289,   290,    -1,
      -1,   293,   294,    -1,   296,    -1,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,    -1,   310,   311,
     312,   313,   314,   315,   316,   317,   318,    -1,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,    -1,   350,   351,
      -1,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,    -1,   369,   370,   371,
     372,   373,    -1,   375,   376,   377,   378,   379,    -1,   381,
     382,   383,   384,    -1,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,    -1,
     402,   403,    -1,   405,    -1,   407,   408,   409,   410,   411,
      -1,   413,   414,    -1,    -1,   417,   418,   419,   420,   421,
      -1,   423,   424,   425,   426,   427,   428,   429,   430,    -1,
      -1,   433,   434,   435,   436,   437,    -1,    -1,   440,   441,
     442,   443,   444,   445,   446,    -1,   448,    -1,   450,   451,
     452,   453,    -1,    -1,   456,    -1,    -1,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,     3,    -1,
       5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   496,    20,    21,    22,    23,    24,
      25,    26,    27,    -1,    29,    30,    31,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    39,    40,    -1,    42,    43,    44,
      -1,    46,    47,    48,    49,    50,    -1,    52,    53,    -1,
      55,    56,    57,    58,    59,    60,    -1,    -1,    63,    64,
      65,    66,    67,    -1,    69,    70,    71,    72,    73,    -1,
      -1,    -1,    77,    78,    79,    80,    81,    82,    -1,    84,
      85,    86,    -1,    88,    89,    90,    91,    92,    93,    -1,
      -1,    96,    97,    98,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,    -1,   117,    -1,   119,   120,   121,   122,   123,   124,
      -1,   126,   127,   128,   129,   130,    -1,    -1,   133,   134,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,    -1,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,    -1,   159,    -1,   161,   162,   163,   164,
      -1,   166,    -1,   168,    -1,    -1,    -1,   172,   173,   174,
      -1,   176,    -1,   178,    -1,   180,   181,   182,    -1,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,    -1,   197,   198,   199,   200,   201,   202,    -1,   204,
      -1,   206,   207,   208,   209,   210,   211,   212,   213,    -1,
     215,    -1,   217,    -1,    -1,   220,    -1,   222,   223,   224,
     225,   226,   227,    -1,    -1,   230,    -1,   232,    -1,    -1,
     235,   236,   237,    -1,    -1,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
      -1,   266,   267,   268,   269,   270,    -1,   272,   273,    -1,
     275,    -1,   277,   278,   279,   280,   281,   282,    -1,   284,
     285,    -1,    -1,   288,   289,   290,    -1,    -1,   293,   294,
      -1,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,   317,   318,    -1,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,    -1,   350,   351,    -1,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,    -1,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,    -1,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,    -1,   402,   403,    -1,
     405,    -1,   407,   408,   409,   410,   411,    -1,   413,   414,
      -1,    -1,   417,   418,   419,   420,   421,    -1,   423,   424,
     425,   426,   427,   428,   429,   430,    -1,    -1,   433,   434,
     435,   436,   437,    -1,    -1,   440,   441,   442,   443,   444,
     445,   446,    -1,   448,    -1,   450,   451,   452,   453,    -1,
      -1,   456,    -1,    -1,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   496,    20,    21,    22,    23,    24,    25,    26,    27,
      -1,    29,    30,    31,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    39,    40,    -1,    42,    43,    44,    -1,    46,    47,
      48,    49,    50,    -1,    52,    53,    -1,    55,    56,    57,
      58,    59,    60,    -1,    -1,    63,    64,    65,    66,    67,
      -1,    69,    70,    71,    72,    73,    -1,    -1,    -1,    77,
      78,    79,    80,    81,    82,    -1,    84,    85,    86,    -1,
      88,    89,    90,    91,    92,    93,    -1,    -1,    96,    97,
      98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,    -1,   117,
      -1,   119,   120,   121,   122,   123,   124,    -1,   126,   127,
     128,   129,   130,    -1,    -1,   133,   134,   135,   136,   137,
      -1,   139,   140,   141,    -1,   143,   144,   145,    -1,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
      -1,   159,    -1,   161,   162,   163,   164,    -1,   166,    -1,
     168,    -1,    -1,    -1,   172,   173,   174,    -1,   176,    -1,
     178,    -1,   180,   181,   182,    -1,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,    -1,   197,
     198,   199,   200,   201,   202,    -1,   204,    -1,   206,   207,
     208,   209,   210,   211,   212,   213,    -1,   215,    -1,   217,
      -1,    -1,   220,    -1,   222,   223,   224,   225,   226,   227,
      -1,    -1,   230,    -1,   232,    -1,    -1,   235,   236,   237,
      -1,    -1,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,    -1,   266,   267,
     268,   269,   270,    -1,   272,   273,    -1,   275,    -1,   277,
     278,   279,   280,   281,   282,    -1,   284,   285,    -1,    -1,
     288,   289,   290,    -1,    -1,   293,   294,    -1,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,    -1,   310,   311,   312,   313,   314,   315,   316,   317,
     318,    -1,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,    -1,   350,   351,    -1,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
      -1,   369,   370,   371,   372,   373,    -1,   375,   376,   377,
     378,   379,    -1,   381,   382,   383,   384,    -1,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,    -1,   402,   403,    -1,   405,    -1,   407,
     408,   409,   410,   411,    -1,   413,   414,    -1,    -1,   417,
     418,   419,   420,   421,    -1,   423,   424,   425,   426,   427,
     428,   429,   430,    -1,    -1,   433,   434,   435,   436,   437,
      -1,    -1,   440,   441,   442,   443,   444,   445,   446,    -1,
     448,    -1,   450,   451,   452,   453,    -1,    -1,   456,    -1,
      -1,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   496,    20,
      21,    22,    23,    24,    25,    26,    27,    -1,    29,    30,
      31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    39,    40,
      -1,    42,    43,    44,    -1,    46,    47,    48,    49,    50,
      -1,    52,    53,    -1,    55,    56,    57,    58,    59,    60,
      -1,    -1,    63,    64,    65,    66,    67,    -1,    69,    70,
      71,    72,    73,    -1,    -1,    -1,    77,    78,    79,    80,
      81,    82,    -1,    84,    85,    86,    -1,    88,    89,    90,
      91,    92,    93,    -1,    -1,    96,    97,    98,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,    -1,   117,    -1,   119,   120,
     121,   122,   123,   124,    -1,   126,   127,   128,   129,   130,
      -1,    -1,   133,   134,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,    -1,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,    -1,   159,    -1,
     161,   162,   163,   164,    -1,   166,    -1,   168,    -1,    -1,
      -1,   172,   173,   174,    -1,   176,    -1,   178,    -1,   180,
     181,   182,    -1,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,    -1,   197,   198,   199,   200,
     201,   202,    -1,   204,    -1,   206,   207,   208,   209,   210,
     211,   212,   213,    -1,   215,    -1,   217,    -1,    -1,   220,
      -1,   222,   223,   224,   225,   226,   227,    -1,    -1,   230,
      -1,   232,    -1,    -1,   235,   236,   237,    -1,    -1,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,   268,   269,   270,
      -1,   272,   273,    -1,   275,    -1,   277,   278,   279,   280,
     281,   282,    -1,   284,   285,    -1,    -1,   288,   289,   290,
      -1,    -1,   293,   294,    -1,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,   317,   318,    -1,   320,
     321,   322,   323,   324,   325,    -1,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,    -1,   350,
     351,    -1,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,    -1,   369,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,   379,    -1,
     381,   382,   383,   384,    -1,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
      -1,   402,   403,    -1,   405,    -1,   407,   408,   409,   410,
     411,    -1,   413,   414,    -1,    -1,   417,   418,   419,   420,
     421,    -1,   423,   424,   425,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,    -1,    -1,   440,
     441,   442,   443,   444,   445,   446,    -1,   448,    -1,   450,
     451,   452,   453,    -1,    -1,   456,    -1,    -1,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   496,    20,    21,    22,    23,
      24,    25,    26,    27,    -1,    29,    30,    31,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    39,    40,    -1,    42,    43,
      44,    -1,    46,    47,    48,    49,    50,    -1,    52,    53,
      -1,    55,    56,    57,    58,    59,    60,    -1,    -1,    63,
      64,    65,    66,    67,    -1,    69,    70,    71,    72,    73,
      -1,    -1,    -1,    77,    78,    79,    80,    81,    82,    -1,
      84,    85,    86,    -1,    88,    89,    90,    91,    92,    93,
      -1,    -1,    96,    97,    98,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,    -1,   117,    -1,   119,   120,   121,   122,   123,
     124,    -1,   126,   127,   128,   129,   130,    -1,    -1,   133,
     134,   135,   136,   137,    -1,   139,   140,   141,    -1,   143,
     144,   145,    -1,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,    -1,   159,    -1,   161,   162,   163,
     164,    -1,   166,    -1,   168,    -1,    -1,    -1,   172,   173,
     174,    -1,   176,    -1,   178,    -1,   180,   181,   182,    -1,
     184,   185,   186,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,    -1,   197,   198,   199,   200,   201,   202,    -1,
     204,    -1,   206,   207,   208,   209,   210,   211,   212,   213,
      -1,   215,    -1,   217,    -1,    -1,   220,    -1,   222,   223,
     224,   225,   226,   227,    -1,    -1,   230,    -1,   232,    -1,
      -1,   235,   236,   237,    -1,    -1,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,    -1,   266,   267,   268,   269,   270,    -1,   272,   273,
      -1,   275,    -1,   277,   278,   279,   280,   281,   282,    -1,
     284,   285,    -1,    -1,   288,   289,   290,    -1,    -1,   293,
     294,    -1,   296,    -1,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,    -1,   310,   311,   312,   313,
     314,   315,   316,   317,   318,    -1,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,    -1,   350,   351,    -1,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,    -1,   369,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,   379,    -1,   381,   382,   383,
     384,    -1,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,    -1,   402,   403,
      -1,   405,    -1,   407,   408,   409,   410,   411,    -1,   413,
     414,    -1,    -1,   417,   418,   419,   420,   421,    -1,   423,
     424,   425,   426,   427,   428,   429,   430,    -1,    -1,   433,
     434,   435,   436,   437,    -1,    -1,   440,   441,   442,   443,
     444,   445,   446,    -1,   448,    -1,   450,   451,   452,   453,
      -1,    -1,   456,    -1,    -1,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,    -1,    -1,    -1,    -1,
       3,     4,     5,    -1,    -1,     8,     9,    -1,    -1,    -1,
      -1,    -1,   496,    16,    17,    18,    19,    20,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
      33,    34,    35,    36,    37,    38,    39,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    -1,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      -1,    74,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    86,    87,    88,    89,    90,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   138,   139,   140,   141,   142,
     143,   144,   145,   146,   147,   148,   149,   150,    -1,   152,
     153,   154,   155,   156,    -1,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,    -1,    -1,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,    -1,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,    -1,   295,   296,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,    -1,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,    -1,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,    -1,   420,    -1,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,    -1,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   476,   477,   478,   479,    -1,     3,    -1,
     483,   484,   485,     8,   487,   488,   489,   490,   491,   492,
      -1,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    -1,    29,    30,    31,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    39,    40,    -1,    42,    43,    44,
      -1,    46,    47,    48,    49,    50,    -1,    52,    53,    -1,
      55,    56,    57,    58,    59,    60,    -1,    -1,    63,    64,
      65,    66,    67,    -1,    69,    70,    71,    72,    73,    -1,
      -1,    -1,    77,    78,    79,    80,    81,    82,    -1,    84,
      85,    86,    -1,    88,    89,    90,    91,    92,    93,    -1,
      -1,    96,    97,    98,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,    -1,   117,    -1,   119,   120,   121,   122,   123,   124,
      -1,   126,   127,   128,   129,   130,    -1,    -1,   133,   134,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,    -1,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,    -1,   159,    -1,   161,   162,   163,   164,
      -1,   166,    -1,   168,    -1,    -1,    -1,   172,   173,   174,
      -1,   176,    -1,   178,    -1,   180,   181,   182,    -1,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,    -1,   197,   198,   199,   200,   201,   202,    -1,   204,
      -1,   206,   207,   208,   209,   210,   211,   212,   213,    -1,
     215,    -1,   217,    -1,    -1,   220,    -1,   222,   223,   224,
     225,   226,   227,    -1,    -1,   230,    -1,   232,    -1,    -1,
     235,   236,   237,    -1,    -1,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
      -1,   266,   267,   268,   269,   270,    -1,   272,   273,    -1,
     275,    -1,   277,   278,   279,   280,   281,   282,    -1,   284,
     285,    -1,    -1,   288,   289,   290,    -1,    -1,   293,   294,
      -1,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,   317,   318,    -1,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,    -1,   350,   351,    -1,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,    -1,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,    -1,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,    -1,   402,   403,    -1,
     405,    -1,   407,   408,   409,   410,   411,    -1,   413,   414,
      -1,    -1,   417,   418,   419,   420,   421,    -1,   423,   424,
     425,   426,   427,   428,   429,   430,    -1,    -1,   433,   434,
     435,   436,   437,    -1,    -1,   440,   441,   442,   443,   444,
     445,   446,    -1,   448,    -1,   450,   451,   452,   453,    -1,
      -1,   456,    -1,    -1,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,    -1,    -1,    -1,   483,   484,
     485,    -1,   487,   488,   489,   490,   491,   492,     8,    -1,
      -1,    11,    -1,    -1,    -1,    15,    16,    17,    18,    19,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    34,    -1,    -1,     8,    -1,    -1,
      11,    -1,    42,    -1,    15,    16,    17,    18,    19,    49,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    34,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    42,     8,    -1,    74,    11,    -1,    -1,    49,    15,
      16,    17,    18,    19,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    34,    -1,
      -1,     8,    -1,    74,    11,    -1,    42,    -1,    15,    16,
      17,    18,    19,    49,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    34,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    42,    -1,    -1,    74,    -1,
      -1,    -1,    49,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    15,    16,
      17,    18,    19,    -1,    -1,    -1,    -1,    74,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   175,    -1,    34,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    42,    -1,    -1,    -1,    -1,
      -1,   191,    49,    -1,    -1,    -1,   196,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   175,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    74,   218,   219,
     191,    -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   233,    -1,    -1,    -1,    -1,    -1,   175,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,   219,    -1,
      -1,    -1,    -1,    -1,    -1,   191,    -1,    -1,    -1,    -1,
     196,    -1,   233,    -1,    -1,    -1,    -1,    -1,   175,    -1,
      -1,   271,    -1,    -1,   274,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   218,   219,   191,    -1,    -1,    -1,   288,   196,
      -1,   291,    -1,    -1,    -1,    -1,    -1,   233,    -1,    -1,
     271,    -1,    -1,   274,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   218,   219,    -1,    -1,    -1,    -1,   288,   175,    -1,
     291,    -1,    -1,    -1,    -1,    -1,   233,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   191,   271,    -1,    -1,   274,   196,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   288,    -1,    -1,   291,    -1,    -1,    -1,    -1,
      -1,   218,   219,    -1,   271,    -1,    -1,   274,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   233,    -1,    -1,    -1,
     380,   288,    -1,    -1,   291,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   380,
      -1,    -1,    -1,    -1,   271,    -1,    -1,   274,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   288,    -1,    -1,   291,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   380,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   380,    -1,    -1,    -1,    -1,    -1,    -1,
     480,    -1,    -1,   483,   484,   485,    -1,   487,   488,   489,
     490,   491,   492,    -1,    -1,    -1,     8,   497,    -1,    11,
      -1,    -1,    -1,    15,    16,    17,    18,    19,    -1,   480,
      -1,    -1,   483,   484,   485,    -1,   487,   488,   489,   490,
     491,   492,    34,   380,    -1,    -1,   497,    -1,    -1,    -1,
      42,     8,    -1,    -1,    11,    -1,    -1,    49,    15,    16,
      17,    18,    19,    -1,   480,    -1,    -1,   483,   484,   485,
      -1,   487,   488,   489,   490,   491,   492,    34,    -1,    -1,
      -1,   497,    74,    -1,    -1,    42,    -1,    -1,    -1,    -1,
      -1,    -1,    49,   480,    -1,    -1,   483,   484,   485,    -1,
     487,   488,   489,   490,   491,   492,    -1,    -1,    -1,    -1,
     497,    -1,    -1,    -1,    -1,    -1,    -1,    74,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
       8,    -1,    -1,    11,    -1,    -1,    -1,    15,    16,    17,
      18,    19,    -1,   480,    -1,    -1,   483,   484,   485,    -1,
     487,   488,   489,   490,   491,   492,    34,    -1,    -1,    -1,
     497,    -1,    -1,    -1,    42,    -1,     8,    -1,    -1,    11,
      -1,    49,    -1,    15,    16,    17,    18,    19,    -1,    -1,
      -1,    -1,    -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    34,    -1,    -1,    -1,    74,    -1,    -1,   191,
      42,    -1,    -1,    -1,   196,    -1,    -1,    49,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   175,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   218,   219,    -1,    -1,
      -1,    -1,    74,    -1,   191,    -1,    -1,    -1,    -1,   196,
      -1,   233,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   218,   219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   233,    -1,    -1,   271,
      -1,    -1,   274,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   288,   175,    -1,   291,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   191,   271,    -1,    -1,   274,   196,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   288,    -1,   175,   291,    -1,    -1,    -1,    -1,    -1,
     218,   219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   191,
      -1,    -1,    -1,    -1,   196,   233,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   218,   219,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   380,    -1,
      -1,   233,    -1,   271,    -1,    -1,   274,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     288,     8,    -1,   291,    11,    -1,    -1,    -1,    15,    16,
      17,    18,    19,   380,    -1,    -1,    -1,    -1,    -1,   271,
      -1,    -1,   274,    -1,    -1,    -1,    -1,    34,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    42,   288,    -1,    -1,   291,
      -1,    -1,    49,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    74,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   480,    -1,
      -1,   483,   484,   485,    -1,   487,   488,   489,   490,   491,
     492,    -1,   380,    -1,    -1,   497,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   480,    -1,    -1,   483,   484,   485,    -1,
     487,   488,   489,   490,   491,   492,    -1,    -1,   380,    -1,
     497,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   175,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   191,    -1,    -1,    -1,    -1,   196,
      -1,    -1,   480,    -1,    -1,   483,   484,   485,    -1,   487,
     488,   489,   490,   491,   492,    -1,    -1,    -1,    -1,   497,
      -1,   218,   219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   233,    -1,   480,    -1,
      -1,   483,   484,   485,    -1,   487,   488,   489,   490,   491,
     492,    -1,    -1,    -1,    -1,   497,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   271,    -1,    -1,   274,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   288,    -1,    -1,   291,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   380,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,     3,   480,    -1,    -1,   483,   484,   485,    -1,
     487,   488,   489,   490,   491,   492,    -1,    -1,   495,    20,
      21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
      31,    32,    33,    34,    35,    36,    37,    38,    39,    40,
      41,    42,    43,    44,    -1,    46,    47,    48,    49,    50,
      -1,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    -1,    84,    85,    86,    87,    88,    89,    90,
      91,    92,    93,    94,    -1,    96,    97,    98,    99,   100,
     101,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,   132,   133,   134,   135,   136,   137,   138,   139,   140,
     141,   142,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   168,    -1,   170,
      -1,   172,   173,   174,    -1,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,    -1,   206,   207,   208,   209,   210,
     211,   212,   213,   214,   215,   216,   217,    -1,    -1,   220,
      -1,   222,   223,   224,   225,   226,   227,   228,   229,   230,
      -1,   232,    -1,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,   268,   269,   270,
     271,   272,   273,    -1,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,    -1,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,    -1,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,    -1,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,    -1,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,    -1,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   489,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    20,    21,    22,    23,
      24,    25,    26,    27,    -1,    29,    30,    31,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    39,    40,    -1,    42,    43,
      44,    -1,    46,    47,    48,    49,    50,    -1,    52,    53,
      -1,    55,    56,    57,    58,    59,    60,    -1,    -1,    63,
      64,    65,    66,    67,    -1,    69,    70,    71,    72,    73,
      -1,    -1,    -1,    77,    78,    79,    80,    81,    82,    -1,
      84,    85,    86,    -1,    88,    89,    90,    91,    92,    93,
      -1,    -1,    96,    97,    98,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,    -1,   117,    -1,   119,   120,   121,   122,   123,
     124,    -1,   126,   127,   128,   129,   130,    -1,    -1,   133,
     134,   135,   136,   137,    -1,   139,   140,   141,    -1,   143,
     144,   145,    -1,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,    -1,   159,    -1,   161,   162,   163,
     164,    -1,   166,    -1,   168,    -1,    -1,    -1,   172,   173,
     174,    -1,   176,    -1,   178,    -1,   180,   181,   182,    -1,
     184,   185,   186,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,    -1,   197,   198,   199,   200,   201,   202,    -1,
     204,    -1,   206,   207,   208,   209,   210,   211,   212,   213,
      -1,   215,    -1,   217,    -1,    -1,   220,    -1,   222,   223,
     224,   225,   226,   227,    -1,    -1,   230,    -1,   232,    -1,
      -1,   235,   236,   237,    -1,    -1,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,    -1,   266,   267,   268,   269,   270,    -1,   272,   273,
      -1,   275,    -1,   277,   278,   279,   280,   281,   282,    -1,
     284,   285,    -1,    -1,   288,   289,   290,    -1,    -1,   293,
     294,    -1,   296,    -1,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,    -1,   310,   311,   312,   313,
     314,   315,   316,   317,   318,    -1,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,    -1,   350,   351,    -1,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,    -1,   369,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,   379,    -1,   381,   382,   383,
     384,    -1,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,    -1,   402,   403,
      -1,   405,    -1,   407,   408,   409,   410,   411,    -1,   413,
     414,    -1,    -1,   417,   418,   419,   420,   421,    -1,   423,
     424,   425,   426,   427,   428,   429,   430,    -1,    -1,   433,
     434,   435,   436,   437,    -1,    -1,   440,   441,   442,   443,
     444,   445,   446,    -1,   448,    -1,   450,   451,   452,   453,
      -1,    -1,   456,    -1,    -1,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,     3,     4,     5,    -1,
      -1,    -1,     9,    -1,    -1,   489,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    20,    21,    22,    23,    24,    25,    26,
      27,    -1,    29,    30,    31,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    39,    40,    -1,    42,    43,    44,    -1,    46,
      47,    48,    49,    50,    -1,    52,    53,    -1,    55,    56,
      57,    58,    59,    60,    -1,    -1,    63,    64,    65,    66,
      67,    -1,    69,    70,    71,    72,    73,    -1,    -1,    -1,
      77,    78,    79,    80,    81,    82,    -1,    84,    85,    86,
      -1,    88,    89,    90,    91,    92,    93,    -1,    -1,    96,
      97,    98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
     117,    -1,   119,   120,   121,   122,   123,   124,    -1,   126,
     127,   128,   129,   130,    -1,    -1,   133,   134,   135,   136,
     137,    -1,   139,   140,   141,    -1,   143,   144,   145,    -1,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,    -1,   161,   162,   163,   164,    -1,   166,
      -1,   168,    -1,    -1,    -1,   172,   173,   174,    -1,   176,
      -1,   178,    -1,   180,   181,   182,    -1,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,    -1,
     197,   198,   199,   200,   201,   202,    -1,   204,    -1,   206,
     207,   208,   209,   210,   211,   212,   213,    -1,   215,    -1,
     217,    -1,    -1,   220,    -1,   222,   223,   224,   225,   226,
     227,    -1,    -1,   230,    -1,   232,    -1,    -1,   235,   236,
     237,    -1,    -1,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,    -1,   266,
     267,   268,   269,   270,    -1,   272,   273,    -1,   275,    -1,
     277,   278,   279,   280,   281,   282,    -1,   284,   285,   286,
      -1,   288,   289,   290,    -1,    -1,   293,   294,    -1,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,   312,   313,   314,   315,   316,
     317,   318,    -1,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,    -1,   350,   351,    -1,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,    -1,   369,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,   379,    -1,   381,   382,   383,   384,    -1,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,    -1,   402,   403,    -1,   405,    -1,
     407,   408,   409,   410,   411,    -1,   413,   414,    -1,    -1,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,    -1,    -1,   433,   434,   435,   436,
     437,    -1,    -1,   440,   441,   442,   443,   444,   445,   446,
      -1,   448,    -1,   450,   451,   452,   453,    -1,    -1,   456,
      -1,    -1,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,     3,     4,     5,    -1,    -1,    -1,     9,
     487,   488,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      20,    21,    22,    23,    24,    25,    26,    27,    -1,    29,
      30,    31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    39,
      40,    -1,    42,    43,    44,    -1,    46,    47,    48,    49,
      50,    -1,    52,    53,    -1,    55,    56,    57,    58,    59,
      60,    -1,    -1,    63,    64,    65,    66,    67,    -1,    69,
      70,    71,    72,    73,    -1,    -1,    -1,    77,    78,    79,
      80,    81,    82,    -1,    84,    85,    86,    -1,    88,    89,
      90,    91,    92,    93,    -1,    -1,    96,    97,    98,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,   117,    -1,   119,
     120,   121,   122,   123,   124,    -1,   126,   127,   128,   129,
     130,    -1,    -1,   133,   134,   135,   136,   137,    -1,   139,
     140,   141,    -1,   143,   144,   145,    -1,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
      -1,   161,   162,   163,   164,    -1,   166,    -1,   168,    -1,
      -1,    -1,   172,   173,   174,    -1,   176,    -1,   178,    -1,
     180,   181,   182,    -1,   184,   185,   186,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,    -1,   197,   198,   199,
     200,   201,   202,    -1,   204,    -1,   206,   207,   208,   209,
     210,   211,   212,   213,    -1,   215,    -1,   217,    -1,    -1,
     220,    -1,   222,   223,   224,   225,   226,   227,    -1,    -1,
     230,    -1,   232,    -1,    -1,   235,   236,   237,    -1,    -1,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,    -1,   266,   267,   268,   269,
     270,    -1,   272,   273,    -1,   275,    -1,   277,   278,   279,
     280,   281,   282,    -1,   284,   285,   286,    -1,   288,   289,
     290,    -1,    -1,   293,   294,    -1,   296,    -1,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,    -1,
     310,   311,   312,   313,   314,   315,   316,   317,   318,    -1,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,    -1,
     350,   351,    -1,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,    -1,   369,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,   379,
      -1,   381,   382,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,    -1,   402,   403,    -1,   405,    -1,   407,   408,   409,
     410,   411,    -1,   413,   414,    -1,    -1,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,    -1,    -1,   433,   434,   435,   436,   437,    -1,    -1,
     440,   441,   442,   443,   444,   445,   446,    -1,   448,    -1,
     450,   451,   452,   453,    -1,    -1,   456,    -1,    -1,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
       3,     4,     5,    -1,    -1,    -1,     9,   487,   488,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,    21,    22,
      23,    24,    25,    26,    27,    -1,    29,    30,    31,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    39,    40,    -1,    42,
      43,    44,    -1,    46,    47,    48,    49,    50,    -1,    52,
      53,    -1,    55,    56,    57,    58,    59,    60,    -1,    -1,
      63,    64,    65,    66,    67,    -1,    69,    70,    71,    72,
      73,    -1,    -1,    -1,    77,    78,    79,    80,    81,    82,
      -1,    84,    85,    86,    -1,    88,    89,    90,    91,    92,
      93,    -1,    -1,    96,    97,    98,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,    -1,   117,    -1,   119,   120,   121,   122,
     123,   124,    -1,   126,   127,   128,   129,   130,    -1,    -1,
     133,   134,   135,   136,   137,    -1,   139,   140,   141,    -1,
     143,   144,   145,    -1,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,    -1,   161,   162,
     163,   164,    -1,   166,    -1,   168,    -1,    -1,    -1,   172,
     173,   174,    -1,   176,    -1,   178,    -1,   180,   181,   182,
      -1,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,    -1,   197,   198,   199,   200,   201,   202,
      -1,   204,    -1,   206,   207,   208,   209,   210,   211,   212,
     213,    -1,   215,    -1,   217,    -1,    -1,   220,    -1,   222,
     223,   224,   225,   226,   227,    -1,    -1,   230,    -1,   232,
      -1,    -1,   235,   236,   237,    -1,    -1,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,    -1,   266,   267,   268,   269,   270,    -1,   272,
     273,    -1,   275,    -1,   277,   278,   279,   280,   281,   282,
      -1,   284,   285,   286,    -1,   288,   289,   290,    -1,    -1,
     293,   294,    -1,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,   317,   318,    -1,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,    -1,   350,   351,    -1,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,    -1,   369,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,   379,    -1,   381,   382,
     383,   384,    -1,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,    -1,   402,
     403,    -1,   405,    -1,   407,   408,   409,   410,   411,    -1,
     413,   414,    -1,    -1,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,    -1,    -1,
     433,   434,   435,   436,   437,    -1,    -1,   440,   441,   442,
     443,   444,   445,   446,    -1,   448,    -1,   450,   451,   452,
     453,    -1,    -1,   456,    -1,    -1,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,    -1,    -1,     8,
      -1,    -1,    11,    -1,   487,   488,    15,    16,    17,    18,
      19,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    15,
      16,    17,    18,    19,    -1,    34,    -1,    -1,    -1,    38,
      -1,    -1,    -1,    42,    -1,    -1,    -1,    -1,    34,    -1,
      49,    -1,    -1,    -1,    -1,    -1,    42,     8,    -1,    -1,
      11,    -1,    -1,    49,    15,    16,    17,    18,    19,    -1,
       8,    -1,    -1,    11,    -1,    74,    -1,    15,    16,    17,
      18,    19,    -1,    34,    -1,    -1,    -1,    -1,    74,    -1,
      -1,    42,    -1,    -1,    -1,    -1,    34,    -1,    49,    37,
      -1,    -1,    -1,    -1,    42,    -1,    -1,    -1,    -1,    -1,
      -1,    49,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    74,     8,    -1,   125,    11,    -1,    -1,
      -1,    15,    16,    17,    18,    19,    74,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      34,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    42,    -1,
      -1,    -1,    -1,    -1,    -1,    49,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   175,    -1,    -1,   165,
      -1,    -1,    -1,    -1,   170,    -1,    -1,    -1,    -1,   175,
      74,    -1,   191,    -1,    -1,    -1,    -1,   196,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   191,    -1,    -1,    -1,    -1,
     196,    -1,    -1,   164,    -1,    -1,    -1,    -1,    -1,   218,
     219,    -1,    -1,    -1,   175,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   218,   219,   233,    -1,    -1,   175,    -1,    -1,
     191,    -1,    -1,    -1,    -1,   196,    -1,   233,    -1,    -1,
      -1,    -1,    -1,   191,    -1,    -1,    -1,    -1,   196,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,   219,    -1,
      -1,    -1,   271,    -1,    -1,   274,    -1,    -1,    -1,    -1,
     218,   219,   233,    -1,    -1,   271,    -1,    -1,   274,   288,
      -1,   175,   291,    -1,    -1,   233,    -1,    -1,    -1,    -1,
      -1,    -1,   288,    -1,    -1,   291,    -1,   191,    -1,    -1,
      -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     271,    -1,    -1,   274,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   271,   218,   219,   274,   288,    -1,    -1,
     291,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   233,
     288,    -1,    -1,   291,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   314,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   380,    -1,    -1,    -1,    -1,    -1,   271,    -1,    -1,
     274,    -1,    -1,    -1,   380,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,     8,    -1,   288,    11,    -1,   291,    -1,    15,
      16,    17,    18,    19,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   309,    -1,    -1,    34,   380,
      -1,    37,    -1,    -1,    -1,    -1,    42,    -1,    -1,    -1,
     439,    -1,   380,    49,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    74,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   480,    -1,    -1,   483,   484,   485,    -1,   487,   488,
     489,   490,   491,   492,   480,    -1,   380,   483,   484,   485,
      -1,   487,   488,   489,   490,   491,   492,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   480,
      -1,    -1,   483,   484,   485,    -1,   487,   488,   489,   490,
     491,   492,   480,    -1,    -1,   483,   484,   485,    -1,   487,
     488,   489,   490,   491,   492,    -1,    -1,     8,    -1,    -1,
      11,    -1,    -1,    -1,    15,    16,    17,    18,    19,   175,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    34,    -1,   191,    -1,    -1,    -1,    -1,
     196,    42,    -1,    -1,    -1,    -1,   480,    -1,    49,   483,
     484,   485,    -1,   487,   488,   489,   490,   491,   492,    -1,
      -1,    -1,   218,   219,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    74,    -1,     8,    -1,   233,    11,    -1,
      -1,    -1,    15,    16,    17,    18,    19,    -1,     8,    -1,
      -1,    11,    -1,    -1,    -1,    15,    16,    17,    18,    19,
      -1,    34,    -1,    -1,    37,    -1,    -1,    -1,    -1,    42,
      -1,    -1,    -1,    -1,    34,   271,    49,    -1,   274,    -1,
      -1,    -1,    42,    -1,    -1,    -1,    -1,    -1,    -1,    49,
      -1,    -1,   288,    -1,    -1,   291,    -1,     8,    -1,    -1,
      11,    74,    -1,    -1,    15,    16,    17,    18,    19,    -1,
      -1,    -1,    -1,    -1,    74,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    34,    -1,    -1,    37,    -1,    -1,   170,
      -1,    42,    -1,     8,   175,    -1,    11,    -1,    49,    -1,
      15,    16,    17,    18,    19,    -1,    -1,    -1,    -1,    -1,
     191,    -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    74,    -1,    -1,    -1,    42,    -1,    -1,
      -1,    -1,    -1,    -1,    49,    -1,    -1,   218,   219,    -1,
      -1,    -1,    -1,    -1,   380,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   233,    -1,    -1,    -1,    -1,    -1,    -1,    74,
      -1,    -1,   175,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   175,    -1,    -1,   191,    -1,
      -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,
     271,   191,    -1,   274,    -1,    -1,   196,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   218,   219,   288,    -1,    -1,
     291,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,   219,
     233,    -1,    -1,    -1,   175,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   233,    -1,    -1,    -1,    -1,    -1,    -1,
     191,    -1,    -1,    -1,   480,   196,    -1,   483,   484,   485,
      -1,   487,   488,   489,   490,   491,   492,    -1,   271,    -1,
     175,   274,    -1,    -1,    -1,    -1,    -1,   218,   219,    -1,
      -1,   271,    -1,    -1,   274,   288,   191,    -1,   291,    -1,
      -1,   196,   233,    -1,    -1,    -1,    -1,    -1,   288,    -1,
      -1,   291,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   380,
      -1,    -1,    -1,   218,   219,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   233,    -1,
     271,    -1,    -1,   274,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   288,    -1,    -1,
     291,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   271,    -1,    -1,   274,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   380,    -1,    -1,
      -1,    -1,    -1,   288,    -1,    -1,   291,    -1,    -1,     8,
     380,    -1,    11,    -1,    -1,    -1,    15,    16,    17,    18,
      19,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   480,
      -1,    -1,   483,   484,   485,    34,   487,   488,   489,   490,
     491,   492,   412,    42,    -1,    -1,    -1,    -1,    -1,    -1,
      49,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   380,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    74,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   380,    -1,   480,    -1,    -1,
     483,   484,   485,    -1,   487,   488,   489,   490,   491,   492,
     480,    -1,    -1,   483,   484,   485,    -1,   487,   488,   489,
     490,   491,   492,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   480,
      -1,    -1,   483,   484,   485,    -1,   487,   488,   489,   490,
     491,   492,    -1,    -1,    -1,    -1,   175,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   191,    -1,    -1,   480,    -1,   196,   483,   484,
     485,    -1,   487,   488,   489,   490,   491,   492,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,
     219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   233,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   271,    -1,    -1,   274,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   288,
      -1,    -1,   291,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   380,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,     3,    -1,     5,
      -1,   480,    -1,    -1,   483,   484,   485,    -1,   487,   488,
     489,   490,   491,   492,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    31,    32,    33,    34,    35,
      36,    37,    38,    39,    40,    41,    42,    43,    44,    -1,
      46,    47,    48,    49,    50,    -1,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    -1,    84,    85,
      86,    87,    88,    89,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    99,   100,   101,    -1,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,    -1,   170,    -1,   172,   173,   174,    -1,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,    -1,
     206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   217,    -1,    -1,   220,    -1,   222,   223,   224,   225,
     226,   227,   228,   229,   230,    -1,   232,    -1,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,    -1,
     266,   267,   268,   269,   270,   271,   272,   273,    -1,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,    -1,
     296,    -1,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,    -1,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,    -1,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
      -1,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,    -1,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    20,    21,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    31,    32,    33,    34,    35,    36,    37,    38,
      39,    40,    41,    42,    43,    44,    -1,    46,    47,    48,
      49,    50,    -1,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    -1,    84,    85,    86,    87,    88,
      89,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      99,   100,   101,    -1,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     129,   130,   131,   132,   133,   134,   135,   136,   137,   138,
     139,   140,   141,   142,   143,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
      -1,   170,    -1,   172,   173,   174,    -1,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,    -1,   206,   207,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   217,    -1,
      -1,   220,    -1,   222,   223,   224,   225,   226,   227,   228,
     229,   230,    -1,   232,    -1,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,    -1,   266,   267,   268,
     269,   270,   271,   272,   273,    -1,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,    -1,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,    -1,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,    -1,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,    -1,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
      -1,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    33,    34,    35,    36,    37,    38,    39,    40,    41,
      42,    43,    44,    -1,    46,    47,    48,    49,    50,    -1,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    -1,    84,    85,    86,    87,    88,    89,    90,    91,
      92,    93,    94,    -1,    96,    97,    98,    99,   100,   101,
      -1,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   139,   140,   141,
     142,   143,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   168,    -1,   170,    -1,
     172,   173,   174,    -1,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,    -1,   206,   207,   208,   209,   210,   211,
     212,   213,   214,   215,   216,   217,    -1,    -1,   220,    -1,
     222,   223,   224,   225,   226,   227,   228,   229,   230,    -1,
     232,    -1,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,    -1,   266,   267,   268,   269,   270,   271,
     272,   273,    -1,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,    -1,   296,    -1,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
      -1,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,    -1,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,    -1,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,    -1,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    20,    21,    22,    23,    24,
      25,    26,    27,    -1,    29,    30,    31,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    39,    40,    -1,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    -1,
      55,    56,    57,    58,    59,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    71,    72,    73,    -1,
      75,    -1,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    -1,    88,    89,    90,    91,    92,    93,    -1,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,    -1,   117,    -1,   119,   120,   121,   122,   123,   124,
      -1,   126,   127,   128,   129,   130,    -1,    -1,   133,   134,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,    -1,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,    -1,   159,    -1,   161,   162,   163,   164,
      -1,   166,    -1,   168,   169,    -1,   171,   172,   173,   174,
     175,   176,    -1,   178,    -1,   180,   181,   182,    -1,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,    -1,   197,   198,   199,   200,   201,   202,    -1,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,    -1,
     215,    -1,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,    -1,    -1,   230,   231,   232,   233,    -1,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,    -1,   272,   273,   274,
     275,    -1,   277,   278,   279,   280,   281,   282,    -1,   284,
     285,    -1,    -1,   288,   289,   290,    -1,    -1,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,   317,   318,    -1,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,    -1,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,    -1,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,    -1,   402,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,   414,
      -1,    -1,   417,   418,   419,   420,   421,    -1,   423,   424,
     425,   426,   427,   428,   429,   430,    -1,    -1,   433,   434,
     435,   436,   437,   438,    -1,   440,   441,   442,   443,   444,
     445,   446,    -1,   448,   449,   450,   451,   452,   453,    -1,
      -1,   456,    -1,    -1,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    20,    21,    22,    23,    24,    25,    26,    27,
      -1,    29,    30,    31,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    39,    40,    -1,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    53,    -1,    55,    56,    57,
      58,    59,    60,    -1,    -1,    63,    64,    65,    66,    67,
      -1,    69,    70,    71,    72,    73,    -1,    75,    -1,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    -1,
      88,    89,    90,    91,    92,    93,    -1,    95,    96,    97,
      98,    -1,    -1,    -1,   102,    -1,    -1,    -1,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,    -1,   117,
      -1,   119,   120,   121,   122,   123,   124,    -1,   126,   127,
     128,   129,   130,    -1,    -1,   133,   134,   135,   136,   137,
      -1,   139,   140,   141,    -1,   143,   144,   145,    -1,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
      -1,   159,    -1,   161,   162,   163,   164,    -1,   166,    -1,
     168,   169,    -1,   171,   172,   173,   174,   175,   176,    -1,
     178,    -1,   180,   181,   182,    -1,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,    -1,   197,
     198,   199,   200,   201,   202,    -1,   204,   205,   206,   207,
     208,   209,   210,   211,   212,   213,    -1,   215,    -1,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
      -1,    -1,   230,   231,   232,   233,    -1,   235,   236,   237,
      -1,    -1,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,    -1,   272,   273,   274,   275,    -1,   277,
     278,   279,   280,   281,   282,    -1,   284,   285,    -1,    -1,
     288,   289,   290,    -1,    -1,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,    -1,   310,   311,   312,   313,   314,   315,   316,   317,
     318,    -1,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,    -1,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
      -1,   369,   370,   371,   372,   373,    -1,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,    -1,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,    -1,   402,   403,    -1,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,   414,    -1,    -1,   417,
     418,   419,   420,   421,    -1,   423,   424,   425,   426,   427,
     428,   429,   430,    -1,    -1,   433,   434,   435,   436,   437,
      -1,    -1,   440,   441,   442,   443,   444,   445,   446,    -1,
     448,   449,   450,   451,   452,   453,    -1,    -1,   456,    -1,
      -1,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,
      21,    22,    23,    24,    25,    26,    27,    -1,    29,    30,
      31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    39,    40,
      -1,    42,    43,    44,    -1,    46,    47,    48,    49,    50,
      -1,    52,    53,    -1,    55,    56,    57,    58,    59,    60,
      -1,    -1,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    -1,    -1,    76,    77,    78,    79,    80,
      81,    82,    -1,    84,    85,    86,    87,    88,    89,    90,
      91,    92,    93,    -1,    -1,    96,    97,    98,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,    -1,   117,    -1,   119,   120,
     121,   122,   123,   124,    -1,   126,   127,   128,   129,   130,
      -1,    -1,   133,   134,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,    -1,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,    -1,   159,    -1,
     161,   162,   163,   164,    -1,   166,   167,   168,    -1,    -1,
      -1,   172,   173,   174,    -1,   176,    -1,   178,    -1,   180,
     181,   182,    -1,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,    -1,   197,   198,   199,   200,
     201,   202,    -1,   204,    -1,   206,   207,   208,   209,   210,
     211,   212,   213,    -1,   215,    -1,   217,    -1,    -1,   220,
      -1,   222,   223,   224,   225,   226,   227,    -1,    -1,   230,
      -1,   232,    -1,    -1,   235,   236,   237,    -1,    -1,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,   268,   269,   270,
      -1,   272,   273,    -1,   275,    -1,   277,   278,   279,   280,
     281,   282,    -1,   284,   285,    -1,    -1,   288,   289,   290,
      -1,    -1,   293,   294,    -1,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,    -1,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,    -1,   350,
     351,    -1,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,    -1,   369,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,   379,    -1,
     381,   382,   383,   384,    -1,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
      -1,   402,   403,    -1,   405,    -1,   407,   408,   409,   410,
     411,    -1,   413,   414,    -1,    -1,   417,   418,   419,   420,
     421,    -1,   423,   424,   425,   426,   427,   428,   429,   430,
      -1,   432,   433,   434,   435,   436,   437,    -1,    -1,   440,
     441,   442,   443,   444,   445,   446,    -1,   448,    -1,   450,
     451,   452,   453,    -1,    -1,   456,    -1,    -1,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    20,    21,    22,    23,
      24,    25,    26,    27,    -1,    29,    30,    31,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    39,    40,    -1,    42,    43,
      44,    -1,    46,    47,    48,    49,    50,    -1,    52,    53,
      -1,    55,    56,    57,    58,    59,    60,    -1,    -1,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      -1,    -1,    -1,    77,    78,    79,    80,    81,    82,    -1,
      84,    85,    86,    87,    88,    89,    90,    91,    92,    93,
      -1,    -1,    96,    97,    98,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,    -1,   117,    -1,   119,   120,   121,   122,   123,
     124,    -1,   126,   127,   128,   129,   130,    -1,    -1,   133,
     134,   135,   136,   137,    -1,   139,   140,   141,    -1,   143,
     144,   145,    -1,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,    -1,   159,    -1,   161,   162,   163,
     164,    -1,   166,   167,   168,    -1,    -1,    -1,   172,   173,
     174,    -1,   176,    -1,   178,    -1,   180,   181,   182,    -1,
     184,   185,   186,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,    -1,   197,   198,   199,   200,   201,   202,    -1,
     204,    -1,   206,   207,   208,   209,   210,   211,   212,   213,
      -1,   215,    -1,   217,    -1,    -1,   220,    -1,   222,   223,
     224,   225,   226,   227,    -1,    -1,   230,    -1,   232,   233,
      -1,   235,   236,   237,    -1,    -1,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,    -1,   266,   267,   268,   269,   270,    -1,   272,   273,
      -1,   275,    -1,   277,   278,   279,   280,   281,   282,    -1,
     284,   285,    -1,    -1,   288,   289,   290,    -1,    -1,   293,
     294,    -1,   296,    -1,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,    -1,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,    -1,   350,   351,    -1,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,    -1,   369,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,   379,    -1,   381,   382,   383,
     384,    -1,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,    -1,   402,   403,
      -1,   405,    -1,   407,   408,   409,   410,   411,    -1,   413,
     414,    -1,    -1,   417,   418,   419,   420,   421,    -1,   423,
     424,   425,   426,   427,   428,   429,   430,    -1,   432,   433,
     434,   435,   436,   437,    -1,    -1,   440,   441,   442,   443,
     444,   445,   446,    -1,   448,    -1,   450,   451,   452,   453,
      -1,    -1,   456,    -1,    -1,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,     3,    -1,     5,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    20,    21,    22,    23,    24,    25,    26,
      27,    -1,    29,    30,    31,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    39,    40,    -1,    42,    43,    44,    -1,    46,
      47,    48,    49,    50,    -1,    52,    53,    -1,    55,    56,
      57,    58,    59,    60,    -1,    -1,    63,    64,    65,    66,
      67,    -1,    69,    70,    71,    72,    73,    -1,    -1,    -1,
      77,    78,    79,    80,    81,    82,    -1,    84,    85,    86,
      -1,    88,    89,    90,    91,    92,    93,    -1,    -1,    96,
      97,    98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,    -1,
     117,    -1,   119,   120,   121,   122,   123,   124,    -1,   126,
     127,   128,   129,   130,    -1,    -1,   133,   134,   135,   136,
     137,    -1,   139,   140,   141,    -1,   143,   144,   145,    -1,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,    -1,   161,   162,   163,   164,    -1,   166,
      -1,   168,    -1,    -1,    -1,   172,   173,   174,    -1,   176,
      -1,   178,    -1,   180,   181,   182,    -1,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,    -1,
     197,   198,   199,   200,   201,   202,    -1,   204,    -1,   206,
     207,   208,   209,   210,   211,   212,   213,    -1,   215,    -1,
     217,    -1,    -1,   220,    -1,   222,   223,   224,   225,   226,
     227,    -1,    -1,   230,    -1,   232,    -1,    -1,   235,   236,
     237,    -1,    -1,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,    -1,   266,
     267,   268,   269,   270,    -1,   272,   273,    -1,   275,    -1,
     277,   278,   279,   280,   281,   282,    -1,   284,   285,   286,
      -1,   288,   289,   290,    -1,    -1,   293,   294,    -1,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,   312,   313,   314,   315,   316,
     317,   318,    -1,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,    -1,   350,   351,    -1,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,    -1,   369,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,   379,    -1,   381,   382,   383,   384,    -1,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,    -1,   402,   403,    -1,   405,    -1,
     407,   408,   409,   410,   411,    -1,   413,   414,    -1,    -1,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,    -1,    -1,   433,   434,   435,   436,
     437,    -1,    -1,   440,   441,   442,   443,   444,   445,   446,
      -1,   448,    -1,   450,   451,   452,   453,    -1,    -1,   456,
      -1,    -1,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,     3,    -1,     5,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      20,    21,    22,    23,    24,    25,    26,    27,    -1,    29,
      30,    31,    32,    33,    -1,    -1,    -1,    -1,    -1,    39,
      40,    -1,    42,    43,    44,    -1,    46,    47,    48,    49,
      50,    -1,    52,    53,    -1,    55,    56,    57,    58,    59,
      60,    -1,    -1,    63,    64,    65,    66,    67,    -1,    69,
      70,    71,    72,    73,    -1,    -1,    -1,    77,    78,    79,
      80,    81,    82,    -1,    84,    85,    86,    -1,    88,    89,
      90,    91,    92,    93,    -1,    -1,    96,    97,    98,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,    -1,   117,    -1,   119,
     120,   121,   122,   123,   124,    -1,   126,   127,   128,   129,
     130,    -1,    -1,   133,   134,   135,   136,   137,    -1,   139,
     140,   141,    -1,   143,   144,   145,    -1,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,    -1,   159,
      -1,   161,   162,   163,   164,    -1,   166,    -1,   168,    -1,
      -1,    -1,   172,   173,   174,    -1,   176,    -1,   178,    -1,
     180,   181,   182,    -1,   184,   185,   186,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,    -1,   197,   198,   199,
     200,   201,   202,    -1,   204,    -1,   206,   207,   208,   209,
     210,   211,   212,   213,    -1,   215,    -1,   217,    -1,    -1,
     220,    -1,   222,   223,   224,   225,   226,   227,    -1,    -1,
     230,    -1,   232,    -1,    -1,   235,   236,   237,    -1,    -1,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,    -1,   266,   267,   268,   269,
     270,    -1,   272,   273,    -1,   275,    -1,   277,   278,   279,
     280,   281,   282,    -1,   284,   285,    -1,    -1,   288,   289,
     290,    -1,    -1,   293,   294,    -1,   296,    -1,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,    -1,
     310,   311,   312,   313,   314,   315,   316,   317,   318,    -1,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,    -1,
     350,   351,    -1,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,    -1,   369,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,   379,
      -1,   381,   382,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,    -1,   402,   403,    -1,   405,    -1,   407,   408,   409,
     410,   411,    -1,   413,   414,    -1,    -1,   417,   418,   419,
     420,   421,    -1,   423,   424,   425,   426,   427,   428,   429,
     430,    -1,    -1,   433,   434,   435,   436,   437,    -1,    -1,
     440,   441,   442,   443,   444,   445,   446,    -1,   448,    -1,
     450,   451,   452,   453,    -1,    -1,   456,    -1,    -1,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
       3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,    21,    22,
      23,    24,    25,    26,    27,    -1,    29,    30,    31,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    39,    40,    -1,    42,
      43,    44,    -1,    46,    47,    48,    49,    50,    -1,    52,
      53,    -1,    55,    56,    57,    58,    59,    60,    -1,    -1,
      63,    64,    65,    66,    67,    -1,    69,    70,    71,    72,
      73,    -1,    -1,    -1,    77,    78,    79,    80,    81,    82,
      -1,    84,    85,    86,    -1,    88,    89,    90,    91,    92,
      93,    -1,    -1,    96,    97,    98,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,    -1,   117,    -1,   119,   120,   121,   122,
     123,   124,    -1,   126,   127,   128,   129,   130,    -1,    -1,
     133,   134,   135,   136,   137,    -1,   139,   140,   141,    -1,
     143,   144,   145,    -1,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,    -1,   159,    -1,   161,   162,
     163,   164,    -1,   166,    -1,   168,    -1,    -1,    -1,   172,
     173,   174,    -1,   176,    -1,   178,    -1,   180,   181,   182,
      -1,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,    -1,   197,   198,   199,   200,   201,   202,
      -1,   204,    -1,   206,   207,   208,   209,   210,   211,   212,
     213,    -1,   215,    -1,   217,    -1,    -1,   220,    -1,   222,
     223,   224,   225,   226,   227,    -1,    -1,   230,    -1,   232,
      -1,    -1,   235,   236,   237,    -1,    -1,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,    -1,   266,   267,   268,   269,   270,    -1,   272,
     273,    -1,   275,    -1,   277,   278,   279,   280,   281,   282,
      -1,   284,   285,    -1,   287,   288,   289,   290,    -1,    -1,
     293,   294,    -1,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,   317,   318,    -1,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,    -1,   350,   351,    -1,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,    -1,   369,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,   379,    -1,   381,   382,
     383,   384,    -1,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,    -1,   402,
     403,    -1,   405,    -1,   407,   408,   409,   410,   411,    -1,
     413,   414,    -1,    -1,   417,   418,   419,   420,   421,    -1,
     423,   424,   425,   426,   427,   428,   429,   430,    -1,    -1,
     433,   434,   435,   436,   437,    -1,    -1,   440,   441,   442,
     443,   444,   445,   446,    -1,   448,    -1,   450,   451,   452,
     453,    -1,    -1,   456,    -1,    -1,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,     3,    -1,     5,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    20,    21,    22,    23,    24,    25,
      26,    27,    -1,    29,    30,    31,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    39,    40,    -1,    42,    43,    44,    -1,
      46,    47,    48,    49,    50,    -1,    52,    53,    -1,    55,
      56,    57,    58,    59,    60,    -1,    -1,    63,    64,    65,
      66,    67,    -1,    69,    70,    71,    72,    73,    -1,    -1,
      -1,    77,    78,    79,    80,    81,    82,    -1,    84,    85,
      86,    -1,    88,    89,    90,    91,    92,    93,    -1,    -1,
      96,    97,    98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
      -1,   117,    -1,   119,   120,   121,   122,   123,   124,    -1,
     126,   127,   128,   129,   130,    -1,    -1,   133,   134,   135,
     136,   137,    -1,   139,   140,   141,    -1,   143,   144,   145,
      -1,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,    -1,   159,    -1,   161,   162,   163,   164,    -1,
     166,    -1,   168,    -1,    -1,    -1,   172,   173,   174,    -1,
     176,    -1,   178,    -1,   180,   181,   182,    -1,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
      -1,   197,   198,   199,   200,   201,   202,    -1,   204,    -1,
     206,   207,   208,   209,   210,   211,   212,   213,    -1,   215,
      -1,   217,    -1,    -1,   220,    -1,   222,   223,   224,   225,
     226,   227,    -1,    -1,   230,    -1,   232,    -1,    -1,   235,
     236,   237,    -1,    -1,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,    -1,
     266,   267,   268,   269,   270,    -1,   272,   273,    -1,   275,
      -1,   277,   278,   279,   280,   281,   282,    -1,   284,   285,
      -1,   287,   288,   289,   290,    -1,    -1,   293,   294,    -1,
     296,    -1,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,    -1,   310,   311,   312,   313,   314,   315,
     316,   317,   318,    -1,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,    -1,   350,   351,    -1,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,    -1,   369,   370,   371,   372,   373,    -1,   375,
     376,   377,   378,   379,    -1,   381,   382,   383,   384,    -1,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,    -1,   402,   403,    -1,   405,
      -1,   407,   408,   409,   410,   411,    -1,   413,   414,    -1,
      -1,   417,   418,   419,   420,   421,    -1,   423,   424,   425,
     426,   427,   428,   429,   430,    -1,    -1,   433,   434,   435,
     436,   437,    -1,    -1,   440,   441,   442,   443,   444,   445,
     446,    -1,   448,    -1,   450,   451,   452,   453,    -1,    -1,
     456,    -1,    -1,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    20,    21,    22,    23,    24,    25,    26,    27,    -1,
      29,    30,    31,    32,    33,    -1,    -1,    -1,    -1,    -1,
      39,    40,    -1,    42,    43,    44,    -1,    46,    47,    48,
      49,    50,    -1,    52,    53,    -1,    55,    56,    57,    58,
      59,    60,    -1,    -1,    63,    64,    65,    66,    67,    -1,
      69,    70,    71,    72,    73,    -1,    -1,    -1,    77,    78,
      79,    80,    81,    82,    -1,    84,    85,    86,    -1,    88,
      89,    90,    91,    92,    93,    -1,    -1,    96,    97,    98,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,    -1,   117,    -1,
     119,   120,   121,   122,   123,   124,    -1,   126,   127,   128,
     129,   130,    -1,    -1,   133,   134,   135,   136,   137,    -1,
     139,   140,   141,    -1,   143,   144,   145,    -1,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,    -1,
     159,    -1,   161,   162,   163,   164,    -1,   166,    -1,   168,
      -1,    -1,    -1,   172,   173,   174,    -1,   176,    -1,   178,
      -1,   180,   181,   182,    -1,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,    -1,   197,   198,
     199,   200,   201,   202,    -1,   204,    -1,   206,   207,   208,
     209,   210,   211,   212,   213,    -1,   215,    -1,   217,    -1,
      -1,   220,    -1,   222,   223,   224,   225,   226,   227,    -1,
      -1,   230,    -1,   232,    -1,    -1,   235,   236,   237,    -1,
      -1,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,    -1,   266,   267,   268,
     269,   270,    -1,   272,   273,    -1,   275,    -1,   277,   278,
     279,   280,   281,   282,    -1,   284,   285,    -1,    -1,   288,
     289,   290,    -1,    -1,   293,   294,    -1,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,   317,   318,
      -1,   320,   321,   322,   323,   324,   325,    -1,   327,   328,
     329,   330,   331,   332,   333,   334,    -1,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
      -1,   350,   351,    -1,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,    -1,
     369,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
     379,    -1,   381,   382,   383,   384,    -1,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,    -1,   402,   403,    -1,   405,    -1,   407,   408,
     409,   410,   411,    -1,   413,   414,    -1,    -1,   417,   418,
     419,   420,   421,    -1,   423,   424,   425,   426,   427,   428,
     429,   430,    -1,    -1,   433,   434,   435,   436,   437,    -1,
      -1,   440,   441,   442,   443,   444,   445,   446,    -1,   448,
      -1,   450,   451,   452,   453,    -1,    -1,   456,    -1,    -1,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,    21,
      22,    23,    24,    25,    26,    27,    -1,    29,    30,    31,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    39,    40,    -1,
      42,    43,    44,    -1,    46,    47,    48,    49,    50,    -1,
      52,    53,    -1,    55,    56,    57,    58,    59,    60,    -1,
      -1,    63,    64,    65,    66,    67,    -1,    69,    70,    71,
      72,    73,    -1,    -1,    -1,    77,    78,    79,    80,    81,
      82,    -1,    84,    85,    86,    -1,    88,    89,    90,    91,
      92,    93,    -1,    -1,    96,    97,    98,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,    -1,   117,    -1,   119,   120,   121,
     122,   123,   124,    -1,   126,   127,   128,   129,   130,    -1,
      -1,   133,   134,   135,   136,   137,    -1,   139,   140,   141,
      -1,   143,   144,   145,    -1,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,    -1,   159,    -1,   161,
     162,   163,   164,    -1,   166,    -1,   168,    -1,    -1,    -1,
     172,   173,   174,    -1,   176,    -1,   178,    -1,   180,   181,
     182,    -1,   184,   185,   186,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,    -1,   197,   198,   199,   200,   201,
     202,    -1,   204,    -1,   206,   207,   208,   209,   210,   211,
     212,   213,    -1,   215,    -1,   217,    -1,    -1,   220,    -1,
     222,   223,   224,   225,   226,   227,    -1,    -1,   230,    -1,
     232,    -1,    -1,   235,   236,   237,    -1,    -1,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,    -1,   266,   267,   268,   269,   270,    -1,
     272,   273,    -1,   275,    -1,   277,   278,   279,   280,   281,
     282,    -1,   284,   285,    -1,    -1,   288,   289,   290,    -1,
      -1,   293,   294,    -1,   296,    -1,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,    -1,   310,   311,
     312,   313,   314,   315,   316,   317,   318,    -1,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,    -1,   350,   351,
      -1,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,    -1,   369,   370,   371,
     372,   373,    -1,   375,   376,   377,   378,   379,    -1,   381,
     382,   383,   384,    -1,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,    -1,
     402,   403,   404,   405,    -1,   407,   408,   409,   410,   411,
      -1,   413,   414,    -1,    -1,   417,   418,   419,   420,   421,
      -1,   423,   424,   425,   426,   427,   428,   429,   430,    -1,
      -1,   433,   434,   435,   436,   437,    -1,    -1,   440,   441,
     442,   443,   444,   445,   446,    -1,   448,    -1,   450,   451,
     452,   453,    -1,    -1,   456,    -1,    -1,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,     3,     4,
      -1,    -1,    -1,    -1,     9,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    20,    21,    22,    23,    24,
      25,    26,    27,    -1,    29,    30,    31,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    39,    40,    -1,    42,    43,    44,
      -1,    46,    47,    48,    49,    50,    -1,    52,    53,    -1,
      55,    56,    57,    58,    59,    60,    -1,    -1,    63,    64,
      65,    66,    67,    -1,    69,    70,    71,    72,    73,    -1,
      -1,    -1,    77,    78,    79,    80,    81,    82,    -1,    84,
      85,    86,    -1,    88,    89,    90,    91,    92,    93,    -1,
      -1,    96,    97,    98,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,    -1,   117,    -1,   119,   120,   121,   122,   123,   124,
      -1,   126,   127,   128,   129,   130,    -1,    -1,   133,   134,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,    -1,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,    -1,   159,    -1,   161,   162,   163,   164,
      -1,   166,    -1,   168,    -1,    -1,    -1,   172,   173,   174,
      -1,   176,    -1,   178,    -1,   180,   181,   182,    -1,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,    -1,   197,   198,   199,   200,   201,   202,    -1,   204,
      -1,   206,   207,   208,   209,   210,   211,   212,   213,    -1,
     215,    -1,   217,    -1,    -1,   220,    -1,   222,   223,   224,
     225,   226,   227,    -1,    -1,   230,    -1,   232,    -1,    -1,
     235,   236,   237,    -1,    -1,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
      -1,   266,   267,   268,   269,   270,    -1,   272,   273,    -1,
     275,    -1,   277,   278,   279,   280,   281,   282,    -1,   284,
     285,    -1,    -1,   288,   289,   290,    -1,    -1,   293,   294,
      -1,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,   317,   318,    -1,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,    -1,   350,   351,    -1,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,    -1,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,    -1,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,    -1,   402,   403,    -1,
     405,    -1,   407,   408,   409,   410,   411,    -1,   413,   414,
      -1,    -1,   417,   418,   419,   420,   421,    -1,   423,   424,
     425,   426,   427,   428,   429,   430,    -1,    -1,   433,   434,
     435,   436,   437,    -1,    -1,   440,   441,   442,   443,   444,
     445,   446,    -1,   448,    -1,   450,   451,   452,   453,    -1,
      -1,   456,    -1,    -1,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    29,    30,    31,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    39,    40,    -1,    42,    43,    44,    -1,    46,    47,
      48,    49,    50,    -1,    52,    53,    -1,    55,    56,    57,
      58,    59,    60,    -1,    -1,    63,    64,    65,    66,    67,
      -1,    69,    70,    71,    72,    73,    -1,    -1,    -1,    77,
      78,    79,    80,    81,    82,    -1,    84,    85,    86,    -1,
      88,    89,    90,    91,    92,    93,    -1,    -1,    96,    97,
      98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,    -1,   117,
      -1,   119,   120,   121,   122,   123,   124,    -1,   126,   127,
     128,   129,   130,    -1,    -1,   133,   134,   135,   136,   137,
      -1,   139,   140,   141,    -1,   143,   144,   145,    -1,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
      -1,   159,    -1,   161,   162,   163,   164,    -1,   166,    -1,
     168,    -1,    -1,    -1,   172,   173,   174,    -1,   176,    -1,
     178,    -1,   180,   181,   182,    -1,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,    -1,   197,
     198,   199,   200,   201,   202,    -1,   204,    -1,   206,   207,
     208,   209,   210,   211,   212,   213,    -1,   215,    -1,   217,
      -1,    -1,   220,    -1,   222,   223,   224,   225,   226,   227,
      -1,    -1,   230,    -1,   232,    -1,    -1,   235,   236,   237,
      -1,    -1,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,    -1,   266,   267,
     268,   269,   270,    -1,   272,   273,    -1,   275,    -1,   277,
     278,   279,   280,   281,   282,    -1,   284,   285,    -1,    -1,
     288,   289,   290,    -1,    -1,   293,   294,    -1,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,    -1,   310,   311,   312,   313,   314,   315,   316,   317,
     318,    -1,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,    -1,   350,   351,    -1,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
      -1,   369,   370,   371,   372,   373,    -1,   375,   376,   377,
     378,   379,    -1,   381,   382,   383,   384,    -1,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,    -1,   402,   403,    -1,   405,    -1,   407,
     408,   409,   410,   411,    -1,   413,   414,    -1,    -1,   417,
     418,   419,   420,   421,    -1,   423,   424,   425,   426,   427,
     428,   429,   430,    -1,    -1,   433,   434,   435,   436,   437,
      -1,    -1,   440,   441,   442,   443,   444,   445,   446,    -1,
     448,    -1,   450,   451,   452,   453,    -1,    -1,   456,    -1,
      -1,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,
      21,    22,    23,    24,    25,    26,    27,    -1,    29,    30,
      31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    39,    40,
      -1,    42,    43,    44,    -1,    46,    47,    48,    49,    50,
      -1,    52,    53,    -1,    55,    56,    57,    58,    59,    60,
      -1,    -1,    63,    64,    65,    66,    67,    -1,    69,    70,
      71,    72,    73,    -1,    -1,    -1,    77,    78,    79,    80,
      81,    82,    -1,    84,    85,    86,    -1,    88,    89,    90,
      91,    92,    93,    -1,    -1,    96,    97,    98,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,    -1,   117,    -1,   119,   120,
     121,   122,   123,   124,    -1,   126,   127,   128,   129,   130,
      -1,    -1,   133,   134,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,    -1,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,    -1,   159,    -1,
     161,   162,   163,   164,    -1,   166,    -1,   168,    -1,    -1,
      -1,   172,   173,   174,    -1,   176,    -1,   178,    -1,   180,
     181,   182,    -1,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,    -1,   197,   198,   199,   200,
     201,   202,    -1,   204,    -1,   206,   207,   208,   209,   210,
     211,   212,   213,    -1,   215,    -1,   217,    -1,    -1,   220,
      -1,   222,   223,   224,   225,   226,   227,    -1,    -1,   230,
      -1,   232,    -1,    -1,   235,   236,   237,    -1,    -1,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,   268,   269,   270,
      -1,   272,   273,    -1,   275,    -1,   277,   278,   279,   280,
     281,   282,    -1,   284,   285,    -1,    -1,   288,   289,   290,
      -1,    -1,   293,   294,    -1,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,   317,   318,    -1,   320,
     321,   322,   323,   324,   325,    -1,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,    -1,   350,
     351,    -1,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,    -1,   369,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,   379,    -1,
     381,   382,   383,   384,    -1,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
      -1,   402,   403,    -1,   405,    -1,   407,   408,   409,   410,
     411,    -1,   413,   414,    -1,    -1,   417,   418,   419,   420,
     421,    -1,   423,   424,   425,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,    -1,    -1,   440,
     441,   442,   443,   444,   445,   446,    -1,   448,    -1,   450,
     451,   452,   453,    -1,    -1,   456,    -1,    -1,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    39,    40,    -1,    42,    43,
      44,    -1,    46,    47,    48,    49,    50,    -1,    52,    53,
      -1,    55,    56,    57,    58,    59,    60,    -1,    -1,    63,
      64,    65,    66,    67,    -1,    69,    70,    71,    72,    73,
      -1,    -1,    -1,    77,    78,    79,    80,    81,    82,    -1,
      84,    85,    86,    -1,    88,    89,    90,    91,    92,    93,
      -1,    -1,    96,    97,    98,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,    -1,   117,    -1,   119,   120,   121,   122,   123,
     124,    -1,   126,   127,   128,   129,   130,    -1,    -1,   133,
     134,   135,   136,   137,    -1,   139,   140,   141,    -1,   143,
     144,   145,    -1,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,    -1,   159,    -1,   161,   162,   163,
     164,    -1,   166,    -1,   168,    -1,    -1,    -1,   172,   173,
     174,    -1,   176,    -1,   178,    -1,   180,   181,   182,    -1,
     184,   185,   186,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,    -1,   197,   198,   199,   200,   201,   202,    -1,
     204,    -1,   206,   207,   208,   209,   210,   211,   212,   213,
      -1,   215,    -1,   217,    -1,    -1,   220,    -1,   222,   223,
     224,   225,   226,   227,    -1,    -1,   230,    -1,   232,    -1,
      -1,   235,   236,   237,    -1,    -1,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,    -1,   266,   267,   268,   269,   270,    -1,   272,   273,
      -1,   275,    -1,   277,   278,   279,   280,   281,   282,    -1,
     284,   285,    -1,    -1,   288,   289,   290,    -1,    -1,   293,
     294,    -1,   296,    -1,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,    -1,   310,   311,   312,   313,
     314,   315,   316,   317,   318,    -1,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,    -1,   350,   351,    -1,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,    -1,   369,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,   379,    -1,   381,   382,   383,
     384,    -1,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,    -1,   402,   403,
      -1,   405,    -1,   407,   408,   409,   410,   411,    -1,   413,
     414,    -1,    -1,   417,   418,   419,   420,   421,    -1,   423,
     424,   425,   426,   427,   428,   429,   430,    -1,    -1,   433,
     434,   435,   436,   437,    -1,    -1,   440,   441,   442,   443,
     444,   445,   446,    -1,   448,    -1,   450,   451,   452,   453,
      -1,    -1,   456,    -1,    -1,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,     3,    -1,     5,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    20,    21,    22,    23,    24,    25,    26,
      27,    -1,    29,    30,    31,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    39,    40,    -1,    42,    43,    44,    -1,    46,
      47,    48,    49,    50,    -1,    52,    53,    -1,    55,    56,
      57,    58,    59,    60,    -1,    -1,    63,    64,    65,    66,
      67,    -1,    69,    70,    71,    72,    73,    -1,    -1,    -1,
      77,    78,    79,    80,    81,    82,    -1,    84,    85,    86,
      -1,    88,    89,    90,    91,    92,    93,    -1,    -1,    96,
      97,    98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,    -1,
     117,    -1,   119,   120,   121,   122,   123,   124,    -1,   126,
     127,   128,   129,   130,    -1,    -1,   133,   134,   135,   136,
     137,    -1,   139,   140,   141,    -1,   143,   144,   145,    -1,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,    -1,   159,    -1,   161,   162,   163,   164,    -1,   166,
      -1,   168,    -1,    -1,    -1,   172,   173,   174,    -1,   176,
      -1,   178,    -1,   180,   181,   182,    -1,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,    -1,
     197,   198,   199,   200,   201,   202,    -1,   204,    -1,   206,
     207,   208,   209,   210,   211,   212,   213,    -1,   215,    -1,
     217,    -1,    -1,   220,    -1,   222,   223,   224,   225,   226,
     227,    -1,    -1,   230,    -1,   232,    -1,    -1,   235,   236,
     237,    -1,    -1,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,    -1,   266,
     267,   268,   269,   270,    -1,   272,   273,    -1,   275,    -1,
     277,   278,   279,   280,   281,   282,    -1,   284,   285,    -1,
      -1,   288,   289,   290,    -1,    -1,   293,   294,    -1,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,   312,   313,   314,   315,   316,
     317,   318,    -1,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,    -1,   350,   351,    -1,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,    -1,   369,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,   379,    -1,   381,   382,   383,   384,    -1,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,    -1,   402,   403,    -1,   405,    -1,
     407,   408,   409,   410,   411,    -1,   413,   414,    -1,    -1,
     417,   418,   419,   420,   421,    -1,   423,   424,   425,   426,
     427,   428,   429,   430,    -1,    -1,   433,   434,   435,   436,
     437,    -1,    -1,   440,   441,   442,   443,   444,   445,   446,
      -1,   448,    -1,   450,   451,   452,   453,    -1,    -1,   456,
      -1,    -1,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,     3,    -1,     5,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      20,    21,    22,    23,    24,    25,    26,    27,    -1,    29,
      30,    31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    39,
      40,    -1,    42,    43,    44,    -1,    46,    47,    48,    49,
      50,    -1,    52,    53,    -1,    55,    56,    57,    58,    59,
      60,    -1,    -1,    63,    64,    65,    66,    67,    -1,    69,
      70,    71,    72,    73,    -1,    -1,    -1,    77,    78,    79,
      80,    81,    82,    -1,    84,    85,    86,    -1,    88,    89,
      90,    91,    92,    93,    -1,    -1,    96,    97,    98,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,    -1,   117,    -1,   119,
     120,   121,   122,   123,   124,    -1,   126,   127,   128,   129,
     130,    -1,    -1,   133,   134,   135,   136,   137,    -1,   139,
     140,   141,    -1,   143,   144,   145,    -1,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,    -1,   159,
      -1,   161,   162,   163,   164,    -1,   166,    -1,   168,    -1,
      -1,    -1,   172,   173,   174,    -1,   176,    -1,   178,    -1,
     180,   181,   182,    -1,   184,   185,   186,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,    -1,   197,   198,   199,
     200,   201,   202,    -1,   204,    -1,   206,   207,   208,   209,
     210,   211,   212,   213,    -1,   215,    -1,   217,    -1,    -1,
     220,    -1,   222,   223,   224,   225,   226,   227,    -1,    -1,
     230,    -1,   232,    -1,    -1,   235,   236,   237,    -1,    -1,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,    -1,   266,   267,   268,   269,
     270,    -1,   272,   273,    -1,   275,    -1,   277,   278,   279,
     280,   281,   282,    -1,   284,   285,    -1,    -1,   288,   289,
     290,    -1,    -1,   293,   294,    -1,   296,    -1,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,    -1,
     310,   311,   312,   313,   314,   315,   316,   317,   318,    -1,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,    -1,
     350,   351,    -1,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,    -1,   369,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,   379,
      -1,   381,   382,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,    -1,   402,   403,    -1,   405,    -1,   407,   408,   409,
     410,   411,    -1,   413,   414,    -1,    -1,   417,   418,   419,
     420,   421,    -1,   423,   424,   425,   426,   427,   428,   429,
     430,    -1,    -1,   433,   434,   435,   436,   437,    -1,    -1,
     440,   441,   442,   443,   444,   445,   446,    -1,   448,    -1,
     450,   451,   452,   453,    -1,    -1,   456,    -1,    -1,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
       3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,    21,    22,
      23,    24,    25,    26,    27,    -1,    29,    30,    31,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    39,    40,    -1,    42,
      43,    44,    -1,    46,    47,    48,    49,    50,    -1,    52,
      53,    -1,    55,    56,    57,    58,    59,    60,    -1,    -1,
      63,    64,    65,    66,    67,    -1,    69,    70,    71,    72,
      73,    -1,    -1,    -1,    77,    78,    79,    80,    81,    82,
      -1,    84,    85,    86,    -1,    88,    89,    90,    91,    92,
      93,    -1,    -1,    96,    97,    98,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,    -1,   117,    -1,   119,   120,   121,   122,
     123,   124,    -1,   126,   127,   128,   129,   130,    -1,    -1,
     133,   134,   135,   136,   137,    -1,   139,   140,   141,    -1,
     143,   144,   145,    -1,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,    -1,   159,    -1,   161,   162,
     163,   164,    -1,   166,    -1,   168,    -1,    -1,    -1,   172,
     173,   174,    -1,   176,    -1,   178,    -1,   180,   181,   182,
      -1,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,    -1,   197,   198,   199,   200,   201,   202,
      -1,   204,    -1,   206,   207,   208,   209,   210,   211,   212,
     213,    -1,   215,    -1,   217,    -1,    -1,   220,    -1,   222,
     223,   224,   225,   226,   227,    -1,    -1,   230,    -1,   232,
      -1,    -1,   235,   236,   237,    -1,    -1,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,    -1,   266,   267,   268,   269,   270,    -1,   272,
     273,    -1,   275,    -1,   277,   278,   279,   280,   281,   282,
      -1,   284,   285,    -1,    -1,   288,   289,   290,    -1,    -1,
     293,   294,    -1,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,   317,   318,    -1,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,    -1,   350,   351,    -1,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,    -1,   369,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,   379,    -1,   381,   382,
     383,   384,    -1,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,    -1,   402,
     403,    -1,   405,    -1,   407,   408,   409,   410,   411,    -1,
     413,   414,    -1,    -1,   417,   418,   419,   420,   421,    -1,
     423,   424,   425,   426,   427,   428,   429,   430,    -1,    -1,
     433,   434,   435,   436,   437,    -1,    -1,   440,   441,   442,
     443,   444,   445,   446,    -1,   448,    -1,   450,   451,   452,
     453,    -1,    -1,   456,    -1,    -1,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,     3,    -1,     5,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    20,    21,    22,    23,    24,    25,
      26,    27,    -1,    29,    30,    31,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    39,    40,    -1,    42,    43,    44,    -1,
      46,    47,    48,    49,    50,    -1,    52,    53,    -1,    55,
      56,    57,    58,    59,    60,    -1,    -1,    63,    64,    65,
      66,    67,    -1,    69,    70,    71,    72,    73,    -1,    -1,
      -1,    77,    78,    79,    80,    81,    82,    -1,    84,    85,
      86,    -1,    88,    89,    90,    91,    92,    93,    -1,    -1,
      96,    97,    98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
      -1,   117,    -1,   119,   120,   121,   122,   123,   124,    -1,
     126,   127,   128,   129,   130,    -1,    -1,   133,   134,   135,
     136,   137,    -1,   139,   140,   141,    -1,   143,   144,   145,
      -1,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,    -1,   159,    -1,   161,   162,   163,   164,    -1,
     166,    -1,   168,    -1,    -1,    -1,   172,   173,   174,    -1,
     176,    -1,   178,    -1,   180,   181,   182,    -1,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
      -1,   197,   198,   199,   200,   201,   202,    -1,   204,    -1,
     206,   207,   208,   209,   210,   211,   212,   213,    -1,   215,
      -1,   217,    -1,    -1,   220,    -1,   222,   223,   224,   225,
     226,   227,    -1,    -1,   230,    -1,   232,    -1,    -1,   235,
     236,   237,    -1,    -1,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,    -1,
     266,   267,   268,   269,   270,    -1,   272,   273,    -1,   275,
      -1,   277,   278,   279,   280,   281,   282,    -1,   284,   285,
      -1,    -1,   288,   289,   290,    -1,    -1,   293,   294,    -1,
     296,    -1,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,    -1,   310,   311,   312,   313,   314,   315,
     316,   317,   318,    -1,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,    -1,   350,   351,    -1,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,    -1,   369,   370,   371,   372,   373,    -1,   375,
     376,   377,   378,   379,    -1,   381,   382,   383,   384,    -1,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,    -1,   402,   403,    -1,   405,
      -1,   407,   408,   409,   410,   411,    -1,   413,   414,    -1,
      -1,   417,   418,   419,   420,   421,    -1,   423,   424,   425,
     426,   427,   428,   429,   430,    -1,    -1,   433,   434,   435,
     436,   437,    -1,    -1,   440,   441,   442,   443,   444,   445,
     446,    -1,   448,    -1,   450,   451,   452,   453,    -1,    -1,
     456,    -1,    -1,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    20,    21,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      39,    40,    -1,    42,    43,    44,    -1,    46,    47,    48,
      49,    50,    -1,    52,    53,    -1,    55,    56,    57,    58,
      59,    60,    -1,    -1,    63,    64,    65,    66,    67,    -1,
      69,    70,    71,    72,    73,    -1,    -1,    -1,    77,    78,
      79,    80,    81,    82,    -1,    84,    85,    86,    -1,    88,
      89,    90,    91,    92,    93,    -1,    -1,    96,    97,    98,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,    -1,   117,    -1,
     119,   120,   121,   122,   123,   124,    -1,   126,   127,   128,
     129,   130,    -1,    -1,   133,   134,   135,   136,   137,    -1,
     139,   140,   141,    -1,   143,   144,   145,    -1,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,    -1,
     159,    -1,   161,   162,   163,   164,    -1,   166,    -1,   168,
      -1,    -1,    -1,   172,   173,   174,    -1,   176,    -1,   178,
      -1,   180,   181,   182,    -1,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,    -1,   197,   198,
     199,   200,   201,   202,    -1,   204,    -1,   206,   207,   208,
     209,   210,   211,   212,   213,    -1,   215,    -1,   217,    -1,
      -1,   220,    -1,   222,   223,   224,   225,   226,   227,    -1,
      -1,   230,    -1,   232,    -1,    -1,   235,   236,   237,    -1,
      -1,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,    -1,   266,   267,   268,
     269,   270,    -1,   272,   273,    -1,   275,    -1,   277,   278,
     279,   280,   281,   282,    -1,   284,   285,    -1,    -1,   288,
     289,   290,    -1,    -1,   293,   294,    -1,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,   317,   318,
      -1,   320,   321,   322,   323,   324,   325,    -1,   327,   328,
     329,   330,   331,   332,   333,   334,    -1,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
      -1,   350,   351,    -1,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,    -1,
     369,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
     379,    -1,   381,   382,   383,   384,    -1,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,    -1,   402,   403,    -1,   405,    -1,   407,   408,
     409,   410,   411,    -1,   413,   414,    -1,    -1,   417,   418,
     419,   420,   421,    -1,   423,   424,   425,   426,   427,   428,
     429,   430,    -1,    -1,   433,   434,   435,   436,   437,    -1,
      -1,   440,   441,   442,   443,   444,   445,   446,    -1,   448,
      -1,   450,   451,   452,   453,    -1,    -1,   456,    -1,    -1,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,    21,
      22,    23,    24,    25,    26,    27,    -1,    29,    30,    31,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    39,    40,    -1,
      42,    43,    44,    -1,    46,    47,    48,    49,    50,    -1,
      52,    53,    -1,    55,    56,    57,    58,    59,    60,    -1,
      -1,    63,    64,    65,    66,    67,    -1,    69,    70,    71,
      72,    73,    -1,    -1,    -1,    77,    78,    79,    80,    81,
      82,    -1,    84,    85,    86,    -1,    88,    89,    90,    91,
      92,    93,    -1,    -1,    96,    97,    98,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,    -1,   117,    -1,   119,   120,   121,
     122,   123,   124,    -1,   126,   127,   128,   129,   130,    -1,
      -1,   133,   134,   135,   136,   137,    -1,   139,   140,   141,
      -1,   143,   144,   145,    -1,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,    -1,   159,    -1,   161,
     162,   163,   164,    -1,   166,    -1,   168,    -1,    -1,    -1,
     172,   173,   174,    -1,   176,    -1,   178,    -1,   180,   181,
     182,    -1,   184,   185,   186,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,    -1,   197,   198,   199,   200,   201,
     202,    -1,   204,    -1,   206,   207,   208,   209,   210,   211,
     212,   213,    -1,   215,    -1,   217,    -1,    -1,   220,    -1,
     222,   223,   224,   225,   226,   227,    -1,    -1,   230,    -1,
     232,    -1,    -1,   235,   236,   237,    -1,    -1,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,    -1,   266,   267,   268,   269,   270,    -1,
     272,   273,    -1,   275,    -1,   277,   278,   279,   280,   281,
     282,    -1,   284,   285,    -1,    -1,   288,   289,   290,    -1,
      -1,   293,   294,    -1,   296,    -1,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,    -1,   310,   311,
     312,   313,   314,   315,   316,   317,   318,    -1,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,    -1,   350,   351,
      -1,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,    -1,   369,   370,   371,
     372,   373,    -1,   375,   376,   377,   378,   379,    -1,   381,
     382,   383,   384,    -1,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,    -1,
     402,   403,    -1,   405,    -1,   407,   408,   409,   410,   411,
      -1,   413,   414,    -1,    -1,   417,   418,   419,   420,   421,
      -1,   423,   424,   425,   426,   427,   428,   429,   430,    -1,
      -1,   433,   434,   435,   436,   437,    -1,    -1,   440,   441,
     442,   443,   444,   445,   446,    -1,   448,    -1,   450,   451,
     452,   453,    -1,    -1,   456,    -1,    -1,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,     3,    -1,
       5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    20,    21,    22,    23,    24,
      25,    26,    27,    -1,    29,    30,    31,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    39,    40,    -1,    42,    43,    44,
      -1,    46,    47,    48,    49,    50,    -1,    52,    53,    -1,
      55,    56,    57,    58,    59,    60,    -1,    -1,    63,    64,
      65,    66,    67,    -1,    69,    70,    71,    72,    73,    -1,
      -1,    -1,    77,    78,    79,    80,    81,    82,    -1,    84,
      85,    86,    -1,    88,    89,    90,    91,    92,    93,    -1,
      -1,    96,    97,    98,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,    -1,   117,    -1,   119,   120,   121,   122,   123,   124,
      -1,   126,   127,   128,   129,   130,    -1,    -1,   133,   134,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,    -1,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,    -1,   159,    -1,   161,   162,   163,   164,
      -1,   166,    -1,   168,    -1,    -1,    -1,   172,   173,   174,
      -1,   176,    -1,   178,    -1,   180,   181,   182,    -1,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,    -1,   197,   198,   199,   200,   201,   202,    -1,   204,
      -1,   206,   207,   208,   209,   210,   211,   212,   213,    -1,
     215,    -1,   217,    -1,    -1,   220,    -1,   222,   223,   224,
     225,   226,   227,    -1,    -1,   230,    -1,   232,    -1,    -1,
     235,   236,   237,    -1,    -1,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
      -1,   266,   267,   268,   269,   270,    -1,   272,   273,    -1,
     275,    -1,   277,   278,   279,   280,   281,   282,    -1,   284,
     285,    -1,    -1,   288,   289,   290,    -1,    -1,   293,   294,
      -1,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,   317,   318,    -1,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,    -1,   350,   351,    -1,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,    -1,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,    -1,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,    -1,   402,   403,    -1,
     405,    -1,   407,   408,   409,   410,   411,    -1,   413,   414,
      -1,    -1,   417,   418,   419,   420,   421,    -1,   423,   424,
     425,   426,   427,   428,   429,   430,    -1,    -1,   433,   434,
     435,   436,   437,    -1,    -1,   440,   441,   442,   443,   444,
     445,   446,    -1,   448,    -1,   450,   451,   452,   453,    -1,
      -1,   456,    -1,    -1,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,     3,    -1,     5,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    20,    21,    22,    23,    24,    25,    26,    27,
      -1,    29,    30,    31,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    39,    40,    -1,    42,    43,    44,    -1,    46,    47,
      48,    49,    50,    -1,    52,    53,    -1,    55,    56,    57,
      58,    59,    60,    -1,    -1,    63,    64,    65,    66,    67,
      -1,    69,    70,    71,    72,    73,    -1,    -1,    -1,    77,
      78,    79,    80,    81,    82,    -1,    84,    85,    86,    -1,
      88,    89,    90,    91,    92,    93,    -1,    -1,    96,    97,
      98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,    -1,   117,
      -1,   119,   120,   121,   122,   123,   124,    -1,   126,   127,
     128,   129,   130,    -1,    -1,   133,   134,   135,   136,   137,
      -1,   139,   140,   141,    -1,   143,   144,   145,    -1,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
      -1,   159,    -1,   161,   162,   163,   164,    -1,   166,    -1,
     168,    -1,    -1,    -1,   172,   173,   174,    -1,   176,    -1,
     178,    -1,   180,   181,   182,    -1,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,    -1,   197,
     198,   199,   200,   201,   202,    -1,   204,    -1,   206,   207,
     208,   209,   210,   211,   212,   213,    -1,   215,    -1,   217,
      -1,    -1,   220,    -1,   222,   223,   224,   225,   226,   227,
      -1,    -1,   230,    -1,   232,    -1,    -1,   235,   236,   237,
      -1,    -1,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,    -1,   266,   267,
     268,   269,   270,    -1,   272,   273,    -1,   275,    -1,   277,
     278,   279,   280,   281,   282,    -1,   284,   285,    -1,    -1,
     288,   289,   290,    -1,    -1,   293,   294,    -1,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,    -1,   310,   311,   312,   313,   314,   315,   316,   317,
     318,    -1,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,    -1,   350,   351,    -1,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
      -1,   369,   370,   371,   372,   373,    -1,   375,   376,   377,
     378,   379,    -1,   381,   382,   383,   384,    -1,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,    -1,   402,   403,    -1,   405,    -1,   407,
     408,   409,   410,   411,    -1,   413,   414,    -1,    -1,   417,
     418,   419,   420,   421,    -1,   423,   424,   425,   426,   427,
     428,   429,   430,    -1,    -1,   433,   434,   435,   436,   437,
      -1,    -1,   440,   441,   442,   443,   444,   445,   446,    -1,
     448,    -1,   450,   451,   452,   453,    -1,    -1,   456,    -1,
      -1,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,
      21,    22,    23,    24,    25,    26,    27,    -1,    29,    30,
      31,    -1,    -1,    -1,    -1,    -1,    37,    -1,    39,    40,
      -1,    42,    43,    44,    -1,    46,    47,    48,    49,    50,
      -1,    52,    53,    -1,    55,    56,    57,    58,    59,    60,
      -1,    -1,    63,    64,    65,    66,    67,    -1,    69,    70,
      71,    72,    73,    -1,    -1,    -1,    77,    78,    79,    80,
      81,    82,    -1,    84,    85,    86,    -1,    88,    89,    90,
      91,    92,    93,    -1,    -1,    96,    97,    98,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,    -1,   117,    -1,   119,   120,
     121,   122,   123,   124,    -1,   126,   127,   128,   129,   130,
      -1,    -1,   133,   134,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,    -1,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,    -1,   159,    -1,
     161,   162,   163,   164,    -1,   166,    -1,   168,    -1,    -1,
      -1,   172,   173,   174,    -1,   176,    -1,   178,    -1,   180,
     181,   182,    -1,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,    -1,   197,   198,   199,   200,
     201,   202,    -1,   204,    -1,   206,   207,   208,   209,   210,
     211,   212,   213,    -1,   215,    -1,   217,    -1,    -1,   220,
      -1,   222,   223,   224,   225,   226,   227,    -1,    -1,   230,
      -1,   232,    -1,    -1,   235,   236,   237,    -1,    -1,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,   268,   269,   270,
      -1,   272,   273,    -1,   275,    -1,   277,   278,   279,   280,
     281,   282,    -1,   284,   285,    -1,    -1,   288,   289,   290,
      -1,    -1,   293,   294,    -1,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,   317,   318,    -1,   320,
     321,   322,   323,   324,   325,    -1,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,    -1,   350,
     351,    -1,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,    -1,   369,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,   379,    -1,
     381,   382,   383,   384,    -1,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
      -1,   402,   403,    -1,   405,    -1,   407,   408,   409,   410,
     411,    -1,   413,   414,    -1,    -1,   417,   418,   419,   420,
     421,    -1,   423,   424,   425,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,    -1,    -1,   440,
     441,   442,   443,   444,   445,   446,    -1,   448,    -1,   450,
     451,   452,   453,    -1,    -1,   456,    -1,    -1,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    20,    21,    22,    23,
      24,    25,    26,    27,    -1,    29,    30,    31,    -1,    -1,
      -1,    -1,    -1,    37,    -1,    39,    40,    -1,    42,    43,
      44,    -1,    46,    47,    48,    49,    50,    -1,    52,    53,
      -1,    55,    56,    57,    58,    59,    60,    -1,    -1,    63,
      64,    65,    66,    67,    -1,    69,    70,    71,    72,    73,
      -1,    -1,    -1,    77,    78,    79,    80,    81,    82,    -1,
      84,    85,    86,    -1,    88,    89,    90,    91,    92,    93,
      -1,    -1,    96,    97,    98,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,    -1,   117,    -1,   119,   120,   121,   122,   123,
     124,    -1,   126,   127,   128,   129,   130,    -1,    -1,   133,
     134,   135,   136,   137,    -1,   139,   140,   141,    -1,   143,
     144,   145,    -1,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,    -1,   159,    -1,   161,   162,   163,
     164,    -1,   166,    -1,   168,    -1,    -1,    -1,   172,   173,
     174,    -1,   176,    -1,   178,    -1,   180,   181,   182,    -1,
     184,   185,   186,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,    -1,   197,   198,   199,   200,   201,   202,    -1,
     204,    -1,   206,   207,   208,   209,   210,   211,   212,   213,
      -1,   215,    -1,   217,    -1,    -1,   220,    -1,   222,   223,
     224,   225,   226,   227,    -1,    -1,   230,    -1,   232,    -1,
      -1,   235,   236,   237,    -1,    -1,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,    -1,   266,   267,   268,   269,   270,    -1,   272,   273,
      -1,   275,    -1,   277,   278,   279,   280,   281,   282,    -1,
     284,   285,    -1,    -1,   288,   289,   290,    -1,    -1,   293,
     294,    -1,   296,    -1,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,    -1,   310,   311,   312,   313,
     314,   315,   316,   317,   318,    -1,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,    -1,   350,   351,    -1,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,    -1,   369,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,   379,    -1,   381,   382,   383,
     384,    -1,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,    -1,   402,   403,
      -1,   405,    -1,   407,   408,   409,   410,   411,    -1,   413,
     414,    -1,    -1,   417,   418,   419,   420,   421,    -1,   423,
     424,   425,   426,   427,   428,   429,   430,    -1,    -1,   433,
     434,   435,   436,   437,    -1,    -1,   440,   441,   442,   443,
     444,   445,   446,    -1,   448,    -1,   450,   451,   452,   453,
      -1,    -1,   456,    -1,    -1,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,     3,    -1,     5,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    20,    21,    22,    23,    24,    25,    26,
      27,    -1,    29,    30,    31,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    39,    40,    -1,    42,    43,    44,    -1,    46,
      47,    48,    49,    50,    -1,    52,    53,    -1,    55,    56,
      57,    58,    59,    60,    -1,    -1,    63,    64,    65,    66,
      67,    -1,    69,    70,    71,    72,    73,    -1,    -1,    -1,
      77,    78,    79,    80,    81,    82,    -1,    84,    85,    86,
      -1,    88,    89,    90,    91,    92,    93,    -1,    -1,    96,
      97,    98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,    -1,
     117,    -1,   119,   120,   121,   122,   123,   124,    -1,   126,
     127,   128,   129,   130,    -1,    -1,   133,   134,   135,   136,
     137,    -1,   139,   140,   141,    -1,   143,   144,   145,    -1,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,    -1,   159,    -1,   161,   162,   163,   164,    -1,   166,
      -1,   168,    -1,    -1,    -1,   172,   173,   174,    -1,   176,
      -1,   178,    -1,   180,   181,   182,    -1,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,    -1,
     197,   198,   199,   200,   201,   202,    -1,   204,    -1,   206,
     207,   208,   209,   210,   211,   212,   213,    -1,   215,    -1,
     217,    -1,    -1,   220,    -1,   222,   223,   224,   225,   226,
     227,    -1,    -1,   230,    -1,   232,    -1,    -1,   235,   236,
     237,    -1,    -1,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,    -1,   266,
     267,   268,   269,   270,    -1,   272,   273,    -1,   275,    -1,
     277,   278,   279,   280,   281,   282,    -1,   284,   285,    -1,
      -1,   288,   289,   290,    -1,    -1,   293,   294,    -1,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,   312,   313,   314,   315,   316,
     317,   318,    -1,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,    -1,   350,   351,    -1,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,    -1,   369,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,   379,    -1,   381,   382,   383,   384,    -1,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,    -1,   402,   403,    -1,   405,    -1,
     407,   408,   409,   410,   411,    -1,   413,   414,    -1,    -1,
     417,   418,   419,   420,   421,    -1,   423,   424,   425,   426,
     427,   428,   429,   430,    -1,    -1,   433,   434,   435,   436,
     437,    -1,    -1,   440,   441,   442,   443,   444,   445,   446,
      -1,   448,    -1,   450,   451,   452,   453,    -1,    -1,   456,
      -1,    -1,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      20,    21,    22,    23,    24,    25,    26,    27,    -1,    29,
      30,    31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    39,
      40,    -1,    42,    43,    44,    -1,    46,    47,    48,    49,
      50,    -1,    52,    53,    -1,    55,    56,    57,    58,    59,
      60,    -1,    -1,    63,    64,    65,    66,    67,    -1,    69,
      70,    71,    72,    73,    -1,    -1,    -1,    77,    78,    79,
      80,    81,    82,    -1,    84,    85,    86,    -1,    88,    89,
      90,    91,    92,    93,    -1,    -1,    96,    97,    98,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,    -1,   117,    -1,   119,
     120,   121,   122,   123,   124,    -1,   126,   127,   128,   129,
     130,    -1,    -1,   133,   134,   135,   136,   137,    -1,   139,
     140,   141,    -1,   143,   144,   145,    -1,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,    -1,   159,
      -1,   161,   162,   163,   164,    -1,   166,    -1,   168,    -1,
      -1,    -1,   172,   173,   174,    -1,   176,    -1,   178,    -1,
     180,   181,   182,    -1,   184,   185,   186,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,    -1,   197,   198,   199,
     200,   201,   202,    -1,   204,    -1,   206,   207,   208,   209,
     210,   211,   212,   213,    -1,   215,    -1,   217,    -1,    -1,
     220,    -1,   222,   223,   224,   225,   226,   227,    -1,    -1,
     230,    -1,   232,    -1,    -1,   235,   236,   237,    -1,    -1,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,    -1,   266,   267,   268,   269,
     270,    -1,   272,   273,    -1,   275,    -1,   277,   278,   279,
     280,   281,   282,    -1,   284,   285,    -1,    -1,   288,   289,
     290,    -1,    -1,   293,   294,    -1,   296,    -1,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,    -1,
     310,   311,   312,   313,   314,   315,   316,   317,   318,    -1,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,    -1,
     350,   351,    -1,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,    -1,   369,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,   379,
      -1,   381,   382,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,    -1,   402,   403,    -1,   405,    -1,   407,   408,   409,
     410,   411,    -1,   413,   414,    -1,    -1,   417,   418,   419,
     420,   421,    -1,   423,   424,   425,   426,   427,   428,   429,
     430,    -1,    -1,   433,   434,   435,   436,   437,    -1,    -1,
     440,   441,   442,   443,   444,   445,   446,    -1,   448,    -1,
     450,   451,   452,   453,    -1,    -1,   456,    -1,    -1,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,    21,    22,
      23,    24,    25,    26,    27,    -1,    29,    30,    31,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    39,    40,    -1,    42,
      43,    44,    -1,    46,    47,    48,    49,    50,    -1,    52,
      53,    -1,    55,    56,    57,    58,    59,    60,    -1,    -1,
      63,    64,    65,    66,    67,    -1,    69,    70,    71,    72,
      73,    -1,    -1,    -1,    77,    78,    79,    80,    81,    82,
      -1,    84,    85,    86,    -1,    88,    89,    90,    91,    92,
      93,    -1,    -1,    96,    97,    98,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,    -1,   117,    -1,   119,   120,   121,   122,
     123,   124,    -1,   126,   127,   128,   129,   130,    -1,    -1,
     133,   134,   135,   136,   137,    -1,   139,   140,   141,    -1,
     143,   144,   145,    -1,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,    -1,   159,    -1,   161,   162,
     163,   164,    -1,   166,    -1,   168,    -1,    -1,    -1,   172,
     173,   174,    -1,   176,    -1,   178,    -1,   180,   181,   182,
      -1,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,    -1,   197,   198,   199,   200,   201,   202,
      -1,   204,    -1,   206,   207,   208,   209,   210,   211,   212,
     213,    -1,   215,    -1,   217,    -1,    -1,   220,    -1,   222,
     223,   224,   225,   226,   227,    -1,    -1,   230,    -1,   232,
      -1,    -1,   235,   236,   237,    -1,    -1,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,    -1,   266,   267,   268,   269,   270,    -1,   272,
     273,    -1,   275,    -1,   277,   278,   279,   280,   281,   282,
      -1,   284,   285,    -1,    -1,   288,   289,   290,    -1,    -1,
     293,   294,    -1,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,   317,   318,    -1,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,    -1,   350,   351,    -1,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,    -1,   369,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,   379,    -1,   381,   382,
     383,   384,    -1,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,    -1,   402,
     403,    -1,   405,    -1,   407,   408,   409,   410,   411,    -1,
     413,   414,    -1,    -1,   417,   418,   419,   420,   421,    -1,
     423,   424,   425,   426,   427,   428,   429,   430,    -1,    -1,
     433,   434,   435,   436,   437,    -1,    -1,   440,   441,   442,
     443,   444,   445,   446,    -1,   448,    -1,   450,   451,   452,
     453,    -1,    -1,   456,    -1,    -1,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    20,    21,    22,    23,    24,    25,
      26,    27,    -1,    29,    30,    31,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    39,    40,    -1,    42,    43,    44,    -1,
      46,    47,    48,    49,    50,    -1,    52,    53,    -1,    55,
      56,    57,    58,    59,    60,    -1,    -1,    63,    64,    65,
      66,    67,    -1,    69,    70,    71,    72,    73,    -1,    -1,
      -1,    77,    78,    79,    80,    81,    82,    -1,    84,    85,
      86,    -1,    88,    89,    90,    91,    92,    93,    -1,    -1,
      96,    97,    98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
      -1,   117,    -1,   119,   120,   121,   122,   123,   124,    -1,
     126,   127,   128,   129,   130,    -1,    -1,   133,   134,   135,
     136,   137,    -1,   139,   140,   141,    -1,   143,   144,   145,
      -1,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,    -1,   159,    -1,   161,   162,   163,   164,    -1,
     166,    -1,   168,    -1,    -1,    -1,   172,   173,   174,    -1,
     176,    -1,   178,    -1,   180,   181,   182,    -1,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
      -1,   197,   198,   199,   200,   201,   202,    -1,   204,    -1,
     206,   207,   208,   209,   210,   211,   212,   213,    -1,   215,
      -1,   217,    -1,    -1,   220,    -1,   222,   223,   224,   225,
     226,   227,    -1,    -1,   230,    -1,   232,    -1,    -1,   235,
     236,   237,    -1,    -1,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,    -1,
     266,   267,   268,   269,   270,    -1,   272,   273,    -1,   275,
      -1,   277,   278,   279,   280,   281,   282,    -1,   284,   285,
      -1,    -1,   288,   289,   290,    -1,    -1,   293,   294,    -1,
     296,    -1,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,    -1,   310,   311,   312,   313,   314,   315,
     316,   317,   318,    -1,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,    -1,   350,   351,    -1,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,    -1,   369,   370,   371,   372,   373,    -1,   375,
     376,   377,   378,   379,    -1,   381,   382,   383,   384,    -1,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,    -1,   402,   403,    -1,   405,
      -1,   407,   408,   409,   410,   411,    -1,   413,   414,    -1,
      -1,   417,   418,   419,   420,   421,    -1,   423,   424,   425,
     426,   427,   428,   429,   430,    -1,    -1,   433,   434,   435,
     436,   437,    -1,    -1,   440,   441,   442,   443,   444,   445,
     446,    -1,   448,    -1,   450,   451,   452,   453,    -1,    -1,
     456,    -1,    -1,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    20,    21,    22,    23,    24,    25,    26,    27,    -1,
      29,    30,    31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      39,    40,    -1,    42,    43,    44,    -1,    46,    47,    48,
      49,    50,    -1,    52,    53,    -1,    55,    56,    57,    58,
      59,    60,    -1,    -1,    63,    64,    65,    66,    67,    -1,
      69,    70,    71,    72,    73,    -1,    -1,    -1,    77,    78,
      79,    80,    81,    82,    -1,    84,    85,    86,    -1,    88,
      89,    90,    91,    92,    93,    -1,    -1,    96,    97,    98,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,    -1,   117,    -1,
     119,   120,   121,   122,   123,   124,    -1,   126,   127,   128,
     129,   130,    -1,    -1,   133,   134,   135,   136,   137,    -1,
     139,   140,   141,    -1,   143,   144,   145,    -1,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,    -1,
     159,    -1,   161,   162,   163,   164,    -1,   166,    -1,   168,
      -1,    -1,    -1,   172,   173,   174,    -1,   176,    -1,   178,
      -1,   180,   181,   182,    -1,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,    -1,   197,   198,
     199,   200,   201,   202,    -1,   204,    -1,   206,   207,   208,
     209,   210,   211,   212,   213,    -1,   215,    -1,   217,    -1,
      -1,   220,    -1,   222,   223,   224,   225,   226,   227,    -1,
      -1,   230,    -1,   232,    -1,    -1,   235,   236,   237,    -1,
      -1,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,    -1,   266,   267,   268,
     269,   270,    -1,   272,   273,    -1,   275,    -1,   277,   278,
     279,   280,   281,   282,    -1,   284,   285,    -1,    -1,   288,
     289,   290,    -1,    -1,   293,   294,    -1,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,   317,   318,
      -1,   320,   321,   322,   323,   324,   325,    -1,   327,   328,
     329,   330,   331,   332,   333,   334,    -1,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
      -1,   350,   351,    -1,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,    -1,
     369,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
     379,    -1,   381,   382,   383,   384,    -1,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,    -1,   402,   403,    -1,   405,    -1,   407,   408,
     409,   410,   411,    -1,   413,   414,    -1,    -1,   417,   418,
     419,   420,   421,    -1,   423,   424,   425,   426,   427,   428,
     429,   430,    -1,    -1,   433,   434,   435,   436,   437,    -1,
      -1,   440,   441,   442,   443,   444,   445,   446,    -1,   448,
      -1,   450,   451,   452,   453,    -1,    -1,   456,    -1,    -1,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,    21,
      22,    23,    24,    25,    26,    27,    -1,    29,    30,    31,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    39,    40,    -1,
      42,    43,    44,    -1,    46,    47,    48,    49,    50,    -1,
      52,    53,    -1,    55,    56,    57,    58,    59,    60,    -1,
      -1,    63,    64,    65,    66,    67,    -1,    69,    70,    71,
      72,    73,    -1,    -1,    -1,    77,    78,    79,    80,    81,
      82,    -1,    84,    85,    86,    -1,    88,    89,    90,    91,
      92,    93,    -1,    -1,    96,    97,    98,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,    -1,   117,    -1,   119,   120,   121,
     122,   123,   124,    -1,   126,   127,   128,   129,   130,    -1,
      -1,   133,   134,   135,   136,   137,    -1,   139,   140,   141,
      -1,   143,   144,   145,    -1,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,    -1,   159,    -1,   161,
     162,   163,   164,    -1,   166,    -1,   168,    -1,    -1,    -1,
     172,   173,   174,    -1,   176,    -1,   178,    -1,   180,   181,
     182,    -1,   184,   185,   186,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,    -1,   197,   198,   199,   200,   201,
     202,    -1,   204,    -1,   206,   207,   208,   209,   210,   211,
     212,   213,    -1,   215,    -1,   217,    -1,    -1,   220,    -1,
     222,   223,   224,   225,   226,   227,    -1,    -1,   230,    -1,
     232,    -1,    -1,   235,   236,   237,    -1,    -1,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,    -1,   266,   267,   268,   269,   270,    -1,
     272,   273,    -1,   275,    -1,   277,   278,   279,   280,   281,
     282,    -1,   284,   285,    -1,    -1,   288,   289,   290,    -1,
      -1,   293,   294,    -1,   296,    -1,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,    -1,   310,   311,
     312,   313,   314,   315,   316,   317,   318,    -1,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,    -1,   350,   351,
      -1,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,    -1,   369,   370,   371,
     372,   373,    -1,   375,   376,   377,   378,   379,    -1,   381,
     382,   383,   384,    -1,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,    -1,
     402,   403,    -1,   405,    -1,   407,   408,   409,   410,   411,
      -1,   413,   414,    -1,    -1,   417,   418,   419,   420,   421,
      -1,   423,   424,   425,   426,   427,   428,   429,   430,    -1,
      -1,   433,   434,   435,   436,   437,    -1,    -1,   440,   441,
     442,   443,   444,   445,   446,    -1,   448,    -1,   450,   451,
     452,   453,    -1,    -1,   456,    -1,    -1,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    20,    21,    22,    23,    24,
      25,    26,    27,    -1,    29,    30,    31,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    39,    40,    -1,    42,    43,    44,
      -1,    46,    47,    48,    49,    50,    -1,    52,    53,    -1,
      55,    56,    57,    58,    59,    60,    -1,    -1,    63,    64,
      65,    66,    67,    -1,    69,    70,    71,    72,    73,    -1,
      -1,    -1,    77,    78,    79,    80,    81,    82,    -1,    84,
      85,    86,    -1,    88,    89,    90,    91,    92,    93,    -1,
      -1,    96,    97,    98,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,    -1,   117,    -1,   119,   120,   121,   122,   123,   124,
      -1,   126,   127,   128,   129,   130,    -1,    -1,   133,   134,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,    -1,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,    -1,   159,    -1,   161,   162,   163,   164,
      -1,   166,    -1,   168,    -1,    -1,    -1,   172,   173,   174,
      -1,   176,    -1,   178,    -1,   180,   181,   182,    -1,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,    -1,   197,   198,   199,   200,   201,   202,    -1,   204,
      -1,   206,   207,   208,   209,   210,   211,   212,   213,    -1,
     215,    -1,   217,    -1,    -1,   220,    -1,   222,   223,   224,
     225,   226,   227,    -1,    -1,   230,    -1,   232,    -1,    -1,
     235,   236,   237,    -1,    -1,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
      -1,   266,   267,   268,   269,   270,    -1,   272,   273,    -1,
     275,    -1,   277,   278,   279,   280,   281,   282,    -1,   284,
     285,    -1,    -1,   288,   289,   290,    -1,    -1,   293,   294,
      -1,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,    -1,   310,   311,   312,   313,   314,
     315,   316,   317,   318,    -1,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,    -1,   350,   351,    -1,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,    -1,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,    -1,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,    -1,   402,   403,    -1,
     405,    -1,   407,   408,   409,   410,   411,    -1,   413,   414,
      -1,    -1,   417,   418,   419,   420,   421,    -1,   423,   424,
     425,   426,   427,   428,   429,   430,    -1,    -1,   433,   434,
     435,   436,   437,    -1,    -1,   440,   441,   442,   443,   444,
     445,   446,    -1,   448,    -1,   450,   451,   452,   453,    -1,
      -1,   456,    -1,    -1,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    20,    21,    22,    23,    24,    25,    26,    27,
      -1,    29,    30,    31,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    39,    40,    -1,    42,    43,    44,    -1,    46,    47,
      48,    49,    50,    -1,    52,    53,    -1,    55,    56,    57,
      58,    59,    60,    -1,    -1,    63,    64,    65,    66,    67,
      -1,    69,    70,    71,    72,    73,    -1,    -1,    -1,    77,
      78,    79,    80,    81,    82,    -1,    84,    85,    86,    -1,
      88,    89,    90,    91,    92,    93,    -1,    -1,    96,    97,
      98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,    -1,   117,
      -1,   119,   120,   121,   122,   123,   124,    -1,   126,   127,
     128,   129,   130,    -1,    -1,   133,   134,   135,   136,   137,
      -1,   139,   140,   141,    -1,   143,   144,   145,    -1,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
      -1,   159,    -1,   161,   162,   163,   164,    -1,   166,    -1,
     168,    -1,    -1,    -1,   172,   173,   174,    -1,   176,    -1,
     178,    -1,   180,   181,   182,    -1,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,    -1,   197,
     198,   199,   200,   201,   202,    -1,   204,    -1,   206,   207,
     208,   209,   210,   211,   212,   213,    -1,   215,    -1,   217,
      -1,    -1,   220,    -1,   222,   223,   224,   225,   226,   227,
      -1,    -1,   230,    -1,   232,    -1,    -1,   235,   236,   237,
      -1,    -1,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,    -1,   266,   267,
     268,   269,   270,    -1,   272,   273,    -1,   275,    -1,   277,
     278,   279,   280,   281,   282,    -1,   284,   285,    -1,    -1,
     288,   289,   290,    -1,    -1,   293,   294,    -1,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,    -1,   310,   311,   312,   313,   314,   315,   316,   317,
     318,    -1,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,    -1,   350,   351,    -1,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
      -1,   369,   370,   371,   372,   373,    -1,   375,   376,   377,
     378,   379,    -1,   381,   382,   383,   384,    -1,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,    -1,   402,   403,    -1,   405,    -1,   407,
     408,   409,   410,   411,    -1,   413,   414,    -1,    -1,   417,
     418,   419,   420,   421,    -1,   423,   424,   425,   426,   427,
     428,   429,   430,    -1,    -1,   433,   434,   435,   436,   437,
      -1,    -1,   440,   441,   442,   443,   444,   445,   446,    -1,
     448,    -1,   450,   451,   452,   453,    -1,    -1,   456,    -1,
      -1,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,
      21,    22,    23,    24,    25,    26,    27,    -1,    29,    30,
      31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    39,    40,
      -1,    42,    43,    44,    -1,    46,    47,    48,    49,    50,
      -1,    52,    53,    -1,    55,    56,    57,    58,    59,    60,
      -1,    -1,    63,    64,    65,    66,    67,    -1,    69,    70,
      71,    72,    73,    -1,    -1,    -1,    77,    78,    79,    80,
      81,    82,    -1,    84,    85,    86,    -1,    88,    89,    90,
      91,    92,    93,    -1,    -1,    96,    97,    98,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,    -1,   117,    -1,   119,   120,
     121,   122,   123,   124,    -1,   126,   127,   128,   129,   130,
      -1,    -1,   133,   134,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,    -1,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,    -1,   159,    -1,
     161,   162,   163,   164,    -1,   166,    -1,   168,    -1,    -1,
      -1,   172,   173,   174,    -1,   176,    -1,   178,    -1,   180,
     181,   182,    -1,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,    -1,   197,   198,   199,   200,
     201,   202,    -1,   204,    -1,   206,   207,   208,   209,   210,
     211,   212,   213,    -1,   215,    -1,   217,    -1,    -1,   220,
      -1,   222,   223,   224,   225,   226,   227,    -1,    -1,   230,
      -1,   232,    -1,    -1,   235,   236,   237,    -1,    -1,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,   268,   269,   270,
      -1,   272,   273,    -1,   275,    -1,   277,   278,   279,   280,
     281,   282,    -1,   284,   285,    -1,    -1,   288,   289,   290,
      -1,    -1,   293,   294,    -1,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,    -1,   310,
     311,   312,   313,   314,   315,   316,   317,   318,    -1,   320,
     321,   322,   323,   324,   325,    -1,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,    -1,   350,
     351,    -1,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,    -1,   369,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,   379,    -1,
     381,   382,   383,   384,    -1,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
      -1,   402,   403,    -1,   405,    -1,   407,   408,   409,   410,
     411,    -1,   413,   414,    -1,    -1,   417,   418,   419,   420,
     421,    -1,   423,   424,   425,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,    -1,    -1,   440,
     441,   442,   443,   444,   445,   446,    -1,   448,    -1,   450,
     451,   452,   453,    -1,    -1,   456,    -1,    -1,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    20,    21,    22,    23,
      24,    25,    26,    27,    -1,    29,    30,    31,    -1,    -1,
      -1,    -1,    -1,    37,    -1,    39,    40,    -1,    42,    43,
      44,    -1,    46,    47,    48,    49,    50,    -1,    52,    53,
      -1,    55,    56,    57,    58,    59,    60,    -1,    -1,    63,
      64,    65,    66,    67,    -1,    69,    70,    71,    72,    73,
      -1,    -1,    -1,    77,    78,    79,    80,    81,    82,    -1,
      84,    85,    86,    -1,    88,    89,    90,    91,    92,    93,
      -1,    -1,    96,    97,    98,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,    -1,   117,    -1,   119,   120,   121,   122,   123,
     124,    -1,   126,   127,   128,   129,   130,    -1,    -1,   133,
     134,   135,   136,   137,    -1,   139,   140,   141,    -1,   143,
     144,   145,    -1,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,    -1,   159,    -1,   161,   162,   163,
     164,    -1,   166,    -1,   168,    -1,    -1,    -1,   172,   173,
     174,    -1,   176,    -1,   178,    -1,   180,   181,   182,    -1,
     184,   185,   186,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,    -1,   197,   198,   199,   200,   201,   202,    -1,
     204,    -1,   206,   207,   208,   209,   210,   211,   212,   213,
      -1,   215,    -1,   217,    -1,    -1,   220,    -1,   222,   223,
     224,   225,   226,   227,    -1,    -1,   230,    -1,   232,    -1,
      -1,   235,   236,   237,    -1,    -1,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,    -1,   266,   267,   268,   269,   270,    -1,   272,   273,
      -1,   275,    -1,   277,   278,   279,   280,   281,   282,    -1,
     284,   285,    -1,    -1,   288,   289,   290,    -1,    -1,   293,
     294,    -1,   296,    -1,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,    -1,   310,   311,   312,   313,
     314,   315,   316,   317,   318,    -1,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,    -1,   350,   351,    -1,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,    -1,   369,   370,   371,   372,   373,
      -1,    -1,   376,   377,   378,   379,    -1,   381,   382,   383,
     384,    -1,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,    -1,   402,   403,
      -1,   405,    -1,   407,   408,   409,   410,   411,    -1,   413,
     414,    -1,    -1,   417,   418,   419,   420,   421,    -1,   423,
     424,   425,   426,   427,   428,   429,   430,    -1,    -1,   433,
     434,   435,   436,   437,    -1,    -1,   440,   441,   442,   443,
     444,   445,   446,    -1,   448,    -1,   450,   451,   452,   453,
      -1,    -1,   456,    -1,    -1,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    20,    21,    22,    23,    24,    25,    26,
      27,    -1,    29,    30,    31,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    39,    40,    -1,    42,    43,    44,    -1,    46,
      47,    48,    49,    50,    -1,    52,    53,    -1,    55,    56,
      57,    58,    59,    60,    -1,    -1,    63,    64,    65,    66,
      67,    -1,    69,    70,    71,    72,    73,    -1,    -1,    -1,
      77,    78,    79,    80,    81,    82,    -1,    84,    85,    86,
      -1,    88,    89,    90,    91,    92,    93,    -1,    -1,    96,
      97,    98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,    -1,
     117,    -1,   119,   120,   121,   122,   123,   124,    -1,   126,
     127,   128,   129,   130,    -1,    -1,   133,   134,   135,   136,
     137,    -1,   139,   140,   141,    -1,   143,   144,   145,    -1,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,    -1,   159,    -1,   161,   162,   163,   164,    -1,   166,
      -1,   168,    -1,    -1,    -1,   172,   173,   174,    -1,   176,
      -1,   178,    -1,   180,   181,   182,    -1,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,    -1,
     197,   198,   199,   200,   201,   202,    -1,   204,    -1,   206,
     207,   208,   209,   210,   211,   212,   213,    -1,   215,    -1,
     217,    -1,    -1,   220,    -1,   222,   223,   224,   225,   226,
     227,    -1,    -1,   230,    -1,   232,    -1,    -1,   235,   236,
     237,    -1,    -1,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,    -1,   266,
     267,   268,   269,   270,    -1,   272,   273,    -1,   275,    -1,
     277,   278,   279,   280,   281,   282,    -1,   284,   285,    -1,
      -1,   288,   289,   290,    -1,    -1,   293,   294,    -1,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,    -1,   310,   311,   312,   313,   314,   315,   316,
     317,   318,    -1,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,    -1,   350,   351,    -1,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,    -1,   369,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,   379,    -1,   381,   382,   383,   384,    -1,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,    -1,   402,   403,    -1,   405,    -1,
     407,   408,   409,   410,   411,    -1,   413,   414,    -1,    -1,
     417,   418,   419,   420,   421,    -1,   423,   424,   425,   426,
     427,   428,   429,   430,    -1,    -1,   433,   434,   435,   436,
     437,    -1,    -1,   440,   441,   442,   443,   444,   445,   446,
      -1,   448,    -1,   450,   451,   452,   453,    -1,    -1,   456,
      -1,    -1,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      20,    21,    22,    23,    24,    25,    26,    27,    -1,    29,
      30,    31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    39,
      40,    -1,    42,    43,    44,    -1,    46,    47,    48,    49,
      50,    -1,    52,    53,    -1,    55,    56,    57,    58,    59,
      60,    -1,    -1,    63,    64,    65,    66,    67,    -1,    69,
      70,    71,    72,    73,    -1,    -1,    -1,    77,    78,    79,
      80,    81,    82,    -1,    84,    85,    86,    -1,    88,    89,
      90,    91,    92,    93,    -1,    -1,    96,    97,    98,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,    -1,   117,    -1,   119,
     120,   121,   122,   123,   124,    -1,   126,   127,   128,   129,
     130,    -1,    -1,   133,   134,   135,   136,   137,    -1,   139,
     140,   141,    -1,   143,   144,   145,    -1,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,    -1,   159,
      -1,   161,   162,   163,   164,    -1,   166,    -1,   168,    -1,
      -1,    -1,   172,   173,   174,    -1,   176,    -1,   178,    -1,
     180,   181,   182,    -1,   184,   185,   186,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,    -1,   197,   198,   199,
     200,   201,   202,    -1,   204,    -1,   206,   207,   208,   209,
     210,   211,   212,   213,    -1,   215,    -1,   217,    -1,    -1,
     220,    -1,   222,   223,   224,   225,   226,   227,    -1,    -1,
     230,    -1,   232,    -1,    -1,   235,   236,   237,    -1,    -1,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,    -1,   266,   267,   268,   269,
     270,    -1,   272,   273,    -1,   275,    -1,   277,   278,   279,
     280,   281,   282,    -1,   284,   285,    -1,    -1,   288,   289,
     290,    -1,    -1,   293,   294,    -1,   296,    -1,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,    -1,
     310,   311,   312,   313,   314,   315,   316,   317,   318,    -1,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,    -1,
     350,   351,    -1,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,    -1,   369,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,   379,
      -1,   381,   382,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,    -1,   402,   403,    -1,   405,    -1,   407,   408,   409,
     410,   411,    -1,   413,   414,    -1,    -1,   417,   418,   419,
     420,   421,    -1,   423,   424,   425,   426,   427,   428,   429,
     430,    -1,    -1,   433,   434,   435,   436,   437,    -1,    -1,
     440,   441,   442,   443,   444,   445,   446,    -1,   448,    -1,
     450,   451,   452,   453,    -1,    -1,   456,    -1,    -1,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,    21,    22,
      23,    24,    25,    26,    27,    -1,    29,    30,    31,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    39,    40,    -1,    42,
      43,    44,    -1,    46,    47,    48,    49,    50,    -1,    52,
      53,    -1,    55,    56,    57,    58,    59,    60,    -1,    -1,
      63,    64,    65,    66,    67,    -1,    69,    70,    71,    72,
      73,    -1,    -1,    -1,    77,    78,    79,    80,    81,    82,
      -1,    84,    85,    86,    -1,    88,    89,    90,    91,    92,
      93,    -1,    -1,    96,    97,    98,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,    -1,   117,    -1,   119,   120,   121,   122,
     123,   124,    -1,   126,   127,   128,   129,   130,    -1,    -1,
     133,   134,   135,   136,   137,    -1,   139,   140,   141,    -1,
     143,   144,   145,    -1,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,    -1,   159,    -1,   161,   162,
     163,   164,    -1,   166,    -1,   168,    -1,    -1,    -1,   172,
     173,   174,    -1,   176,    -1,   178,    -1,   180,   181,   182,
      -1,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,    -1,   197,   198,   199,   200,   201,   202,
      -1,   204,    -1,   206,   207,   208,   209,   210,   211,   212,
     213,    -1,   215,    -1,   217,    -1,    -1,   220,    -1,   222,
     223,   224,   225,   226,   227,    -1,    -1,   230,    -1,   232,
      -1,    -1,   235,   236,   237,    -1,    -1,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,    -1,   266,   267,   268,   269,   270,    -1,   272,
     273,    -1,   275,    -1,   277,   278,   279,   280,   281,   282,
      -1,   284,   285,    -1,    -1,   288,   289,   290,    -1,    -1,
     293,   294,    -1,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,    -1,   310,   311,   312,
     313,   314,   315,   316,   317,   318,    -1,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,    -1,   350,   351,    -1,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,    -1,   369,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,   379,    -1,   381,   382,
     383,   384,    -1,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,    -1,   402,
     403,    -1,   405,    -1,   407,   408,   409,   410,   411,    -1,
     413,   414,    -1,    -1,   417,   418,   419,   420,   421,    -1,
     423,   424,   425,   426,   427,   428,   429,   430,    -1,    -1,
     433,   434,   435,   436,   437,    -1,    -1,   440,   441,   442,
     443,   444,   445,   446,    -1,   448,    -1,   450,   451,   452,
     453,    -1,    -1,   456,    -1,    -1,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    20,    21,    22,    23,    24,    25,
      26,    27,    -1,    29,    30,    31,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    39,    40,    -1,    42,    43,    44,    -1,
      46,    47,    48,    49,    50,    -1,    52,    53,    -1,    55,
      56,    57,    58,    59,    60,    -1,    -1,    63,    64,    65,
      66,    67,    -1,    69,    70,    71,    72,    73,    -1,    -1,
      -1,    77,    78,    79,    80,    81,    82,    -1,    84,    85,
      86,    -1,    88,    89,    90,    91,    92,    93,    -1,    -1,
      96,    97,    98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
      -1,   117,    -1,   119,   120,   121,   122,   123,   124,    -1,
     126,   127,   128,   129,   130,    -1,    -1,   133,   134,   135,
     136,   137,    -1,   139,   140,   141,    -1,   143,   144,   145,
      -1,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,    -1,   159,    -1,   161,   162,   163,   164,    -1,
     166,    -1,   168,    -1,    -1,    -1,   172,   173,   174,    -1,
     176,    -1,   178,    -1,   180,   181,   182,    -1,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
      -1,   197,   198,   199,   200,   201,   202,    -1,   204,    -1,
     206,   207,   208,   209,   210,   211,   212,   213,    -1,   215,
      -1,   217,    -1,    -1,   220,    -1,   222,   223,   224,   225,
     226,   227,    -1,    -1,   230,    -1,   232,    -1,    -1,   235,
     236,   237,    -1,    -1,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,    -1,
     266,   267,   268,   269,   270,    -1,   272,   273,    -1,   275,
      -1,   277,   278,   279,   280,   281,   282,    -1,   284,   285,
      -1,    -1,   288,   289,   290,    -1,    -1,   293,   294,    -1,
     296,    -1,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,    -1,   310,   311,   312,   313,   314,   315,
     316,   317,   318,    -1,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,    -1,   350,   351,    -1,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,    -1,   369,   370,   371,   372,   373,    -1,   375,
     376,   377,   378,   379,    -1,   381,   382,   383,   384,    -1,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,    -1,   402,   403,    -1,   405,
      -1,   407,   408,   409,   410,   411,    -1,   413,   414,    -1,
      -1,   417,   418,   419,   420,   421,    -1,   423,   424,   425,
     426,   427,   428,   429,   430,    -1,    -1,   433,   434,   435,
     436,   437,    -1,    -1,   440,   441,   442,   443,   444,   445,
     446,    -1,   448,    -1,   450,   451,   452,   453,    -1,    -1,
     456,    -1,    -1,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    20,    21,    22,    23,    24,    25,    26,    27,    -1,
      29,    30,    31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      39,    40,    -1,    42,    43,    44,    -1,    46,    47,    48,
      49,    50,    -1,    52,    53,    -1,    55,    56,    57,    58,
      59,    60,    -1,    -1,    63,    64,    65,    66,    67,    -1,
      69,    70,    71,    72,    73,    -1,    -1,    -1,    77,    78,
      79,    80,    81,    82,    -1,    84,    85,    86,    -1,    88,
      89,    90,    91,    92,    93,    -1,    -1,    96,    97,    98,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,    -1,   117,    -1,
     119,   120,   121,   122,   123,   124,    -1,   126,   127,   128,
     129,   130,    -1,    -1,   133,   134,   135,   136,   137,    -1,
     139,   140,   141,    -1,   143,   144,   145,    -1,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,    -1,
     159,    -1,   161,   162,   163,   164,    -1,   166,    -1,   168,
      -1,    -1,    -1,   172,   173,   174,    -1,   176,    -1,   178,
      -1,   180,   181,   182,    -1,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,    -1,   197,   198,
     199,   200,   201,   202,    -1,   204,    -1,   206,   207,   208,
     209,   210,   211,   212,   213,    -1,   215,    -1,   217,    -1,
      -1,   220,    -1,   222,   223,   224,   225,   226,   227,    -1,
      -1,   230,    -1,   232,    -1,    -1,   235,   236,   237,    -1,
      -1,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,    -1,   266,   267,   268,
     269,   270,    -1,   272,   273,    -1,   275,    -1,   277,   278,
     279,   280,   281,   282,    -1,   284,   285,    -1,    -1,   288,
     289,   290,    -1,    -1,   293,   294,    -1,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,    -1,   306,   307,   308,
      -1,   310,   311,   312,   313,   314,   315,   316,   317,   318,
      -1,   320,   321,   322,   323,   324,   325,    -1,   327,    -1,
     329,   330,   331,   332,   333,   334,    -1,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
      -1,   350,   351,    -1,   353,   354,   355,   356,    -1,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,    -1,
     369,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
     379,    -1,   381,   382,   383,   384,    -1,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,    -1,   402,   403,    -1,   405,    -1,   407,   408,
     409,   410,   411,    -1,   413,   414,    -1,    -1,   417,   418,
     419,   420,   421,    -1,   423,   424,   425,   426,   427,   428,
     429,   430,    -1,    -1,   433,   434,   435,   436,   437,    -1,
      -1,   440,   441,   442,   443,   444,   445,   446,    -1,   448,
      -1,   450,   451,   452,   453,    -1,    -1,   456,    -1,    -1,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,    21,
      22,    23,    24,    25,    26,    27,    -1,    29,    30,    31,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    39,    40,    -1,
      42,    43,    44,    45,    46,    47,    48,    -1,    50,    51,
      52,    53,    -1,    55,    56,    57,    58,    59,    60,    -1,
      -1,    63,    64,    65,    66,    67,    -1,    69,    70,    71,
      72,    -1,    -1,    75,    -1,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    86,    -1,    88,    89,    90,    91,
      92,    93,    -1,    95,    96,    97,    98,    -1,    -1,    -1,
     102,    -1,    -1,    -1,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,    -1,   117,    -1,   119,   120,   121,
     122,   123,   124,    -1,   126,   127,   128,   129,   130,    -1,
      -1,   133,   134,   135,   136,   137,    -1,   139,   140,   141,
      -1,   143,   144,   145,    -1,   147,   148,   149,   150,    -1,
     152,   153,   154,   155,   156,    -1,    -1,   159,    -1,   161,
     162,   163,   164,    -1,   166,    -1,   168,   169,    -1,   171,
     172,   173,   174,   175,   176,    -1,   178,    -1,    -1,    -1,
     182,    -1,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,    -1,   197,   198,   199,   200,   201,
     202,    -1,   204,   205,    -1,   207,   208,   209,   210,   211,
     212,   213,    -1,   215,    -1,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,    -1,    -1,   230,   231,
     232,   233,    -1,   235,   236,   237,    -1,    -1,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,    -1,    -1,
     272,   273,   274,   275,    -1,    -1,   278,   279,   280,   281,
     282,    -1,   284,   285,    -1,    -1,   288,   289,   290,    -1,
      -1,   293,    -1,   295,   296,   297,    -1,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,    -1,   310,   311,
      -1,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,    -1,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,    -1,   369,   370,   371,
     372,   373,    -1,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,    -1,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,    -1,   400,    -1,
     402,   403,    -1,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,   414,    -1,    -1,   417,   418,    -1,   420,    -1,
      -1,   423,   424,   425,   426,   427,   428,   429,   430,    -1,
      -1,   433,   434,   435,   436,   437,    -1,    -1,   440,   441,
     442,   443,   444,    -1,   446,    -1,   448,   449,   450,   451,
     452,   453,    -1,    -1,   456,    -1,    -1,   459,   460,   461,
     462,   463,   464,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   476,   477,   478,   479,    -1,    -1,
      20,    21,    22,    23,    24,    25,    26,    27,    -1,    29,
      30,    31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    39,
      40,    -1,    42,    43,    44,    45,    46,    47,    48,    -1,
      50,    51,    52,    53,    -1,    55,    56,    57,    58,    59,
      60,    -1,    -1,    63,    64,    65,    66,    67,    -1,    69,
      70,    71,    72,    -1,    -1,    75,    -1,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    86,    -1,    88,    89,
      90,    91,    92,    93,    -1,    95,    96,    97,    98,    -1,
      -1,    -1,   102,    -1,    -1,    -1,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,    -1,   117,    -1,   119,
     120,   121,   122,   123,   124,    -1,   126,   127,   128,   129,
     130,    -1,    -1,   133,   134,   135,   136,   137,    -1,   139,
     140,   141,    -1,   143,   144,   145,    -1,   147,   148,   149,
     150,    -1,   152,   153,   154,   155,   156,    -1,    -1,   159,
      -1,   161,   162,   163,   164,    -1,   166,    -1,   168,   169,
      -1,   171,   172,   173,   174,   175,   176,    -1,   178,    -1,
      -1,    -1,   182,    -1,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,    -1,   197,   198,   199,
     200,   201,   202,    -1,   204,   205,    -1,   207,   208,   209,
     210,   211,   212,   213,    -1,   215,    -1,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,    -1,    -1,
     230,   231,   232,   233,    -1,   235,   236,   237,    -1,    -1,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
      -1,    -1,   272,   273,   274,   275,    -1,    -1,   278,   279,
     280,   281,   282,    -1,   284,   285,    -1,    -1,   288,   289,
     290,    -1,    -1,   293,    -1,   295,   296,   297,    -1,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,    -1,
     310,   311,    -1,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,    -1,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,    -1,   369,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,    -1,
     400,    -1,   402,   403,    -1,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,   414,    -1,    -1,   417,   418,    -1,
     420,    -1,    -1,   423,   424,   425,   426,   427,   428,   429,
     430,    -1,    -1,   433,   434,   435,   436,   437,    -1,    -1,
     440,   441,   442,   443,   444,    -1,   446,    -1,   448,   449,
     450,   451,   452,   453,    -1,    -1,   456,    -1,    -1,   459,
     460,   461,   462,   463,   464,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   476,   477,   478,   479,
      -1,    -1,    20,    21,    22,    23,    24,    25,    26,    27,
      -1,    29,    30,    31,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    39,    40,    -1,    42,    43,    44,    45,    46,    47,
      48,    -1,    50,    51,    52,    53,    -1,    55,    56,    57,
      58,    59,    60,    -1,    -1,    63,    64,    65,    66,    67,
      -1,    69,    70,    71,    72,    -1,    -1,    75,    -1,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    -1,
      88,    89,    90,    91,    92,    93,    -1,    95,    96,    97,
      98,    -1,    -1,    -1,   102,    -1,    -1,    -1,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,    -1,   117,
      -1,   119,   120,   121,   122,   123,   124,    -1,   126,   127,
     128,   129,   130,    -1,    -1,   133,   134,   135,   136,   137,
      -1,   139,   140,   141,    -1,   143,   144,   145,    -1,   147,
     148,   149,   150,    -1,   152,   153,   154,   155,   156,    -1,
      -1,   159,    -1,   161,   162,   163,   164,    -1,   166,    -1,
     168,   169,    -1,   171,   172,   173,   174,   175,   176,    -1,
     178,    -1,    -1,    -1,   182,    -1,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,    -1,   197,
     198,   199,   200,   201,   202,    -1,   204,   205,    -1,   207,
     208,   209,   210,   211,   212,   213,    -1,   215,    -1,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
      -1,    -1,   230,   231,   232,   233,    -1,   235,   236,   237,
      -1,    -1,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,    -1,    -1,   272,   273,   274,   275,    -1,    -1,
     278,   279,   280,   281,   282,    -1,   284,   285,    -1,    -1,
     288,   289,   290,    -1,    -1,   293,    -1,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,    -1,   310,   311,    -1,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,    -1,   350,   351,   352,   353,   354,   355,    -1,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
      -1,   369,   370,   371,   372,   373,    -1,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,    -1,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,    -1,   400,    -1,   402,   403,    -1,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,   414,    -1,    -1,   417,
     418,    -1,   420,    -1,    -1,   423,   424,   425,   426,   427,
     428,   429,   430,    -1,    -1,   433,   434,   435,   436,   437,
      -1,    -1,   440,   441,   442,   443,   444,    -1,   446,    -1,
     448,   449,   450,   451,   452,   453,    -1,    -1,   456,    -1,
      -1,   459,   460,   461,   462,   463,   464,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   476,   477,
     478,   479,    -1,    -1,    20,    21,    22,    23,    24,    25,
      26,    27,    -1,    29,    30,    31,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    39,    40,    -1,    42,    43,    44,    45,
      46,    47,    48,    -1,    50,    51,    52,    53,    -1,    55,
      56,    57,    58,    59,    60,    -1,    -1,    63,    64,    65,
      66,    67,    -1,    69,    70,    71,    72,    -1,    -1,    75,
      -1,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      86,    -1,    88,    89,    90,    91,    92,    93,    -1,    95,
      96,    97,    98,    -1,    -1,    -1,   102,    -1,    -1,    -1,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
      -1,   117,    -1,   119,   120,   121,   122,   123,   124,    -1,
     126,   127,   128,   129,   130,    -1,    -1,   133,   134,   135,
     136,   137,    -1,   139,   140,   141,    -1,   143,   144,   145,
      -1,   147,   148,   149,   150,    -1,   152,   153,   154,   155,
     156,    -1,    -1,   159,    -1,   161,   162,   163,   164,    -1,
     166,    -1,   168,   169,    -1,   171,   172,   173,   174,   175,
     176,    -1,   178,    -1,    -1,    -1,   182,    -1,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
      -1,   197,   198,   199,   200,   201,   202,    -1,   204,   205,
      -1,   207,   208,   209,   210,   211,   212,   213,    -1,   215,
      -1,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,    -1,    -1,   230,   231,   232,   233,    -1,   235,
     236,   237,    -1,    -1,   240,   241,   242,   243,   244,    -1,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,    -1,    -1,   272,   273,   274,   275,
      -1,    -1,   278,   279,   280,   281,   282,    -1,   284,   285,
      -1,    -1,   288,   289,   290,    -1,    -1,   293,    -1,   295,
     296,   297,    -1,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,    -1,   310,   311,    -1,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,    -1,   350,   351,   352,   353,   354,   355,
      -1,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,    -1,   369,   370,   371,   372,   373,    -1,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,    -1,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,    -1,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,   414,    -1,
      -1,   417,   418,    -1,   420,    -1,    -1,   423,   424,   425,
     426,   427,   428,   429,   430,    -1,    -1,   433,   434,   435,
     436,   437,    -1,    -1,   440,   441,   442,   443,   444,    -1,
     446,    -1,   448,   449,   450,   451,   452,   453,    -1,    -1,
     456,    -1,    -1,   459,   460,   461,   462,   463,   464,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     476,   477,   478,   479
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    20,    30,    32,    33,    48,    57,    69,    80,    92,
      94,   112,   126,   136,   142,   150,   152,   153,   166,   195,
     210,   236,   313,   316,   345,   354,   368,   375,   379,   389,
     400,   404,   440,   445,   458,   482,   496,   507,   508,   509,
     510,   521,   522,   524,   528,   543,   546,   547,   549,   551,
     558,   560,   607,   614,   617,   618,   635,   636,   637,   638,
     639,   640,   691,   692,   836,   839,   842,   849,   850,   851,
     852,   853,   860,   864,   870,   872,   877,   881,   882,   885,
     886,   888,   889,   891,   417,   461,   559,   199,   361,   369,
     404,   451,   559,     3,    20,    21,    22,    23,    24,    25,
      26,    27,    29,    30,    31,    39,    40,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    55,
      56,    57,    58,    59,    60,    63,    64,    65,    66,    67,
      69,    70,    71,    72,    73,    75,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    86,    88,    89,    90,    91,
      92,    93,    95,    96,    97,    98,   102,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   117,   119,   120,
     121,   122,   123,   124,   126,   127,   128,   129,   130,   133,
     134,   135,   136,   137,   139,   140,   141,   143,   144,   145,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   159,   161,   162,   163,   164,   166,   168,   169,   171,
     172,   173,   174,   175,   176,   178,   180,   181,   182,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   197,   198,   199,   200,   201,   202,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   215,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   230,
     231,   232,   233,   235,   236,   237,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   272,   273,   274,
     275,   277,   278,   279,   280,   281,   282,   284,   285,   288,
     289,   290,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   320,   321,   322,
     323,   324,   325,   327,   328,   329,   330,   331,   332,   333,
     334,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   369,   370,   371,   372,   373,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   402,   403,   405,   406,   407,   408,   409,   410,
     411,   413,   414,   417,   418,   419,   420,   421,   423,   424,
     425,   426,   427,   428,   429,   430,   433,   434,   435,   436,
     437,   440,   441,   442,   443,   444,   445,   446,   448,   449,
     450,   451,   452,   453,   456,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   749,   821,   825,   828,
     894,   895,   896,   559,    51,   496,   630,   176,   237,   291,
     361,   408,   410,   426,   432,   435,   605,   848,     3,    28,
     245,   316,   397,   819,   825,   894,    22,    75,    91,   145,
     155,   167,   172,   199,   244,   248,   311,   325,   358,   361,
     369,   372,   391,   404,   411,   420,   426,   451,   608,   609,
     612,   559,   819,    94,   449,   496,   524,   617,   635,   856,
     860,   877,   891,   109,    69,   210,   109,     5,   824,   825,
     871,   871,   825,   819,    28,   413,   417,   825,   883,   884,
     887,   559,    28,   131,   647,   648,   176,   237,   361,   373,
     413,   865,   866,   887,   559,   445,   635,   640,   887,     5,
     287,   704,   816,   825,   826,   171,   496,   874,   496,   333,
     641,   642,   819,   641,   636,   637,     0,   499,   121,   209,
     437,   146,   214,   292,   431,   650,   651,   636,   638,   639,
     500,   449,   854,    28,   413,   417,   635,   887,   189,   816,
     819,   189,   816,   189,   704,   189,   816,   496,   494,   498,
     800,   802,   524,   617,   635,   838,   877,   816,   408,   410,
     408,   410,   343,   189,   825,   825,   830,   172,   244,   333,
     369,   404,   451,   615,   199,    28,   819,   250,   420,   108,
     404,   404,   451,   364,     3,    45,    50,    51,    52,    53,
      65,    66,    75,    83,    95,   102,   113,   114,   135,   163,
     169,   171,   175,   189,   191,   205,   212,   213,   215,   218,
     219,   221,   231,   233,   245,   264,   265,   266,   274,   279,
     295,   297,   330,   352,   356,   376,   380,   383,   397,   406,
     413,   414,   425,   446,   449,   613,   715,   716,   718,   720,
     722,   724,   726,   727,   728,   730,   731,   732,   734,   735,
     829,   894,   897,   189,   610,   830,   189,   817,   819,   189,
     819,   496,   550,   291,   605,   856,     3,    49,    50,    52,
      53,    65,    66,    73,   113,   114,   151,   157,   163,   180,
     181,   206,   212,   213,   215,   245,   264,   266,   270,   277,
     279,   294,   298,   312,   315,   330,   356,   376,   383,   397,
     399,   413,   414,   419,   421,   425,   445,   446,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   857,
     859,   860,   862,   863,   894,   898,   854,   824,   871,   824,
     485,   496,   496,   837,   479,   220,   498,   286,     4,     6,
       7,     8,     9,    10,    36,    50,    52,    53,    61,    62,
      65,    66,    73,    75,    99,   100,   101,   102,   103,   104,
     105,   113,   114,   116,   151,   157,   158,   163,   180,   181,
     212,   213,   215,   238,   239,   264,   266,   271,   276,   277,
     279,   288,   298,   312,   330,   356,   374,   383,   399,   413,
     414,   419,   421,   422,   425,   438,   446,   480,   487,   488,
     489,   494,   496,   501,   503,   504,   636,   681,   719,   722,
     725,   726,   727,   729,   730,   731,   734,   735,   746,   748,
     749,   750,   752,   766,   767,   774,   794,   799,   806,   807,
     808,   821,   822,   823,   824,   825,   805,   807,   865,   865,
     824,   865,   479,   170,   415,   485,   496,   816,   489,   802,
       3,   169,   171,   449,   860,   873,   875,   169,   876,   746,
     778,   779,   825,   641,   500,   496,   832,   497,   497,   509,
     170,   216,   704,   878,    28,   131,   646,   646,    55,   646,
     160,   165,   234,   283,   656,   658,   659,   684,   686,   687,
     688,   650,   651,   496,   816,   479,   220,   151,    24,    30,
     136,   290,   341,   345,   375,   442,   515,   518,   519,   341,
     151,    37,    56,   107,   198,   249,   257,   269,   300,   341,
     347,   369,   375,   389,   518,   552,   555,   151,   341,   375,
     518,   151,   341,   375,   518,     3,    28,    45,    51,    75,
      83,    95,   102,   131,   169,   171,   175,   191,   205,   218,
     219,   221,   231,   233,   245,   265,   274,   295,   297,   352,
     380,   397,   406,   425,   447,   449,   489,   497,   746,   781,
     782,   827,   833,   894,   899,   746,   801,     3,    28,    32,
      33,    34,    35,    36,    37,    38,    41,    54,    61,    62,
      68,    74,    76,    87,    94,    99,   100,   101,   103,   104,
     105,   116,   118,   125,   131,   132,   138,   142,   146,   158,
     160,   165,   167,   170,   177,   179,   183,   196,   203,   214,
     216,   228,   229,   234,   238,   239,   271,   276,   283,   286,
     287,   291,   292,   309,   319,   326,   335,   349,   368,   374,
     385,   401,   404,   412,   415,   416,   422,   431,   432,   438,
     439,   445,   447,   454,   455,   457,   458,   820,   834,   894,
     898,   900,   800,   497,   496,   594,   605,   271,   840,   498,
     831,    37,   451,   189,   816,   189,   816,   893,   816,   816,
      83,   845,   462,    84,   128,   303,   409,   448,   733,   733,
     733,   496,   721,   721,   315,   496,   723,   151,   496,    65,
      66,   733,   721,   718,   460,   482,   496,   736,   496,   736,
      59,   348,   500,   611,   496,    36,   717,   496,   110,   111,
     186,   187,   251,   252,   253,   254,   255,   256,   259,   260,
     365,   366,   476,   477,   496,   737,   738,   739,   740,   741,
     742,   743,   744,   745,   721,   151,   500,   611,   151,   500,
     611,   151,   286,   779,   343,   404,   497,   500,     4,   158,
     286,   422,   487,   488,   554,   557,   823,   824,   855,   857,
     858,   861,   856,   496,   625,   629,   554,   861,   867,   869,
     781,   716,   783,    37,   232,   825,   496,   803,   494,   746,
     798,   496,   496,   165,   496,   496,   636,   496,   496,   496,
     746,   496,   496,   496,   496,   496,   496,   496,   496,   496,
     746,   746,   746,   147,   809,   810,   779,   780,   636,   746,
     778,   768,   769,   770,   825,   826,     9,   803,   802,   496,
     824,   496,   823,   824,     3,     8,    11,    15,    16,    17,
      18,    19,    34,    37,    42,    49,    74,   175,   191,   196,
     218,   219,   233,   271,   274,   288,   291,   380,   480,   483,
     484,   485,   487,   488,   489,   490,   491,   492,   772,   773,
     774,   776,   459,   753,   803,   297,   746,   500,   216,   643,
     496,   824,   803,   498,   802,   643,     3,   116,   237,   554,
     735,   824,   868,    98,   116,   869,   116,   869,   816,   497,
     500,   854,   500,   497,   642,   817,    37,   878,   526,   816,
      37,   825,   375,   638,   638,    28,   489,   652,   653,   746,
     638,   162,   268,   672,   223,   269,   329,   378,   437,     4,
       9,    28,   667,   746,   487,   488,   668,   669,   746,   748,
     684,   685,   659,   658,   656,   657,   165,   687,   281,   689,
     656,   684,   779,   832,   232,   816,    68,    76,    87,   167,
     189,   319,   432,   575,   585,   601,   825,    76,    87,   523,
      87,   523,   496,   415,   496,   573,   243,   435,   573,    87,
     500,   415,   816,   718,   554,    55,   556,   554,   554,   107,
     249,   257,    55,   415,   458,   482,   553,   262,   361,   553,
     555,   704,    87,   415,   523,   361,   816,   415,   361,   781,
     781,   782,   497,   500,   650,   651,    13,    14,   495,   505,
     415,   593,   598,   825,   458,   628,   333,   404,   451,   151,
      94,   547,   560,   841,   842,   889,   820,   498,   135,   143,
     719,   816,   271,   548,   552,   271,   496,   594,    37,   594,
     496,   616,   189,   588,   825,   846,   496,   779,   823,   613,
     783,   733,   733,    36,   717,   413,   413,   823,   823,   716,
     714,   825,   494,   494,   823,   823,   415,   415,   415,   415,
     610,   830,   817,   819,   819,   830,   497,   605,   189,   816,
     893,   856,   862,     4,   823,     4,   823,   627,   634,   834,
      51,    96,   122,   140,   144,   166,   169,   184,   276,   284,
     327,   631,   500,   497,   500,   497,   500,   838,   779,   800,
     780,   454,   795,   796,   746,   779,   496,   823,   823,     3,
     737,   738,   739,   740,   741,   742,   743,   744,   784,   785,
     824,   823,   823,   746,     8,    16,    17,    18,    19,   483,
     484,   485,   487,   488,   489,   490,   491,   492,   772,   777,
     825,   746,   786,   487,   488,   496,   747,   748,   774,   788,
     497,   779,   746,   778,   789,   746,    54,   170,   229,   416,
     746,   779,   792,   746,   496,   825,   343,   814,   495,   497,
     500,   500,   502,   505,   779,   746,   745,   745,   716,   746,
     746,   746,   746,   746,   746,     5,   834,   835,   413,    41,
     401,   804,   830,   746,   746,   496,   636,   793,   131,   158,
     271,   276,   281,   422,   433,   746,   276,   496,   746,   415,
      49,   175,   191,   196,   233,   380,   746,   746,   746,   746,
     746,   746,   746,   746,   746,   746,    28,    35,   385,   771,
     179,   161,   754,   356,   496,   767,   808,   176,   237,   404,
     408,   410,   435,   644,   816,   170,   693,   781,   489,   693,
     496,   824,   497,   816,   873,   816,   881,   746,   497,   496,
     439,   880,   116,   299,   496,   525,   635,    37,   825,   496,
     530,   539,   540,   542,   825,    38,   125,   654,   654,   500,
     439,   654,   356,   357,   487,   488,   669,   671,   748,   378,
     223,   287,   308,   308,   500,   491,     4,   670,   823,   670,
     356,   357,   671,   815,   816,   275,   382,   690,   685,   657,
     497,   341,   518,   496,   189,   585,   819,   223,   271,   223,
     439,   496,   578,   716,   819,   825,   189,   819,   189,   825,
      24,   136,   375,   514,   517,   568,   583,   834,   819,   577,
     597,   834,   819,   515,   819,   341,   375,   518,   552,   554,
     830,   819,   554,   830,   819,   554,   341,   375,   518,   819,
     819,   819,   819,   341,   375,   518,   819,   819,   650,   650,
     650,   447,   782,   190,   346,   649,   746,   746,   746,   801,
     324,   624,   497,   500,   284,   170,   415,   619,   451,   816,
     893,   816,   825,   291,   605,   820,   496,   496,   151,   151,
     233,   575,   585,   589,   592,   602,   604,   825,   458,   460,
     580,   150,   635,   458,   847,   497,   781,    37,   271,   286,
     779,   497,   497,   611,   497,   494,   479,   479,   497,   497,
     497,   500,   716,   823,   495,   823,   497,   497,   738,   740,
     741,   742,   741,   742,   742,   611,   611,   286,   611,   404,
     271,    37,   497,   500,   489,   496,   554,   626,   861,    37,
     623,   824,   623,   271,   276,   327,   623,   623,   867,   716,
     497,   495,   746,   138,   796,   797,    37,   497,   746,   497,
     497,   497,   170,   497,   497,   500,   497,   498,   309,   787,
     497,   747,   747,   746,    11,    16,    17,    18,    19,   196,
     218,   288,   483,   484,   485,   487,   488,   489,   490,   491,
     492,   774,   747,   497,   497,   165,   170,   790,   791,   500,
     497,    37,   792,   779,   792,   792,   170,   497,    37,   817,
     818,   496,   746,   811,   803,   746,   768,   746,   497,   497,
     479,   747,   747,   144,   779,   170,   131,   158,   276,   281,
     422,   433,   496,   144,   777,   746,   401,   804,   746,   793,
     746,   415,   496,   636,   496,   496,   154,   755,   408,   410,
     408,   410,   816,   404,   645,   645,   645,   228,   357,   496,
     636,   694,   695,   696,   697,   704,   705,   749,   751,   752,
     825,   455,   710,   650,   810,   710,   823,   745,   832,   838,
     695,   455,   879,   445,   403,   438,   534,   529,   538,   825,
     286,   531,   825,   535,   542,   500,   693,   485,   803,   481,
     655,   655,   653,   288,   772,   775,   655,     4,   823,   671,
     287,   437,   668,   500,   242,   415,   746,   271,   601,   496,
     151,   496,   578,   199,   598,   599,   561,   290,   571,   561,
      24,   136,   345,   347,   375,   511,   512,   513,   519,   520,
     151,   611,   151,   611,   568,   583,   568,   497,   500,   564,
     824,   497,   500,   485,   498,   415,   361,    87,   415,   523,
     361,   415,   415,   415,   361,   649,   649,   649,   782,   278,
     278,   497,   495,   392,   393,   633,   824,   593,   624,   816,
     496,    37,   594,   840,   343,   404,   544,   545,   824,   598,
     816,   816,   893,   816,   497,   500,   284,   573,   284,   286,
     572,   819,   458,   892,   573,    37,   497,   404,   746,   151,
     816,   497,   717,   823,   736,   736,   717,   825,   495,   495,
     830,   151,   627,   621,   632,   861,   824,   824,   276,   598,
     489,   598,   824,   824,   412,   746,   142,   716,   497,   746,
     746,   777,   746,   790,   716,   747,   747,   747,   747,   747,
     131,   271,   281,   747,   747,   747,   747,   747,   747,   747,
     747,   747,   747,   746,   746,   791,   790,   716,   497,   497,
     497,   779,   716,   500,   497,   746,   811,   812,   813,    37,
     497,   745,   746,    34,    34,   746,   497,   746,   170,   496,
     783,   746,   497,   144,   747,   747,   144,   144,   746,   746,
     651,   455,   296,   759,   645,   645,   645,   645,   816,   816,
     816,   636,   705,   170,   636,   696,   697,    37,   698,   699,
     825,   500,    95,   171,   205,   221,   231,   265,   352,   701,
     699,    37,   698,   700,   825,   482,   709,   802,   746,   179,
     673,   649,   814,   673,   497,   497,   746,   349,   533,   444,
     497,   500,   803,    85,   533,   497,   500,   530,   879,   746,
     162,   227,   496,   655,   287,   816,   819,   497,   151,   599,
     585,   599,   561,   588,   500,   497,   118,   203,   269,   271,
     584,   496,   595,   174,   116,   188,   271,   573,   553,   108,
     116,   174,   271,   391,   394,   555,   573,   375,   513,   426,
     819,   825,   517,   597,     3,    45,    51,    75,    83,    95,
     102,   169,   171,   175,   191,   205,   218,   219,   221,   231,
     233,   245,   265,   270,   274,   288,   295,   297,   352,   376,
     380,   397,   406,   425,   449,   487,   488,   554,   562,   600,
     716,   775,   824,   827,   894,   900,   834,   819,   819,   819,
     819,   819,   819,   819,   819,   819,   819,   497,   497,   497,
     650,   553,   633,   496,   592,   635,   847,   605,   189,   816,
     497,   500,   497,   548,   496,    37,   582,   580,   589,    80,
     550,   108,   269,   635,   635,   588,   439,   844,   495,   716,
     611,   893,   497,   500,   598,   746,   497,   497,   791,   170,
     131,   281,   496,   497,   497,   500,   497,   825,   746,   746,
     746,   783,   497,   746,    34,    34,   746,   746,   144,   497,
     497,   746,   496,   760,   825,   816,   816,   816,   816,   699,
     700,   496,   497,   825,   826,   406,   664,   665,   496,   696,
     221,   295,   702,   696,   702,   221,   701,   702,   221,   665,
     496,   825,   665,   496,   293,    55,   183,   682,   497,   682,
     824,   806,   635,   299,   635,   529,   286,   496,   527,   485,
     542,   533,   777,   561,   585,   497,   497,   458,   591,   119,
     192,   201,   118,   441,   568,   586,    68,    74,    87,   116,
     118,   174,   203,   271,   276,   319,   335,   432,   439,   566,
     567,   579,    31,    55,   606,   189,   276,   554,   746,   606,
     276,   487,   488,   557,   825,   716,   611,   611,   245,   397,
     827,   831,   485,   415,   415,   649,   625,   439,   620,   622,
     598,   497,   892,    37,   404,   271,   496,   824,   847,   592,
     150,   635,   148,   197,   572,   121,   136,   318,   892,   108,
     458,   890,   286,   825,   843,   496,    37,   632,   747,   170,
     496,   783,   811,   497,   746,   746,   746,   497,   761,   825,
     706,   707,   751,   698,   496,     4,     9,   660,   662,   663,
     825,   818,   696,   286,   439,   703,   696,   221,   696,   711,
     712,   825,   496,   711,   825,    28,    97,   180,   355,   489,
     496,   674,   675,   676,   677,   678,   679,   680,   746,   746,
     457,   756,   824,   756,   500,   534,    87,   496,   532,   541,
     751,   825,   132,   746,   497,   335,   591,   496,   581,   561,
     497,   500,   496,   830,   819,   747,   606,   119,   192,   118,
     276,   223,   816,   591,    82,   116,    37,   151,    74,   713,
     831,   491,   562,   819,   819,   497,   553,   123,   497,   580,
     635,   816,   151,    37,   497,   819,   892,    28,    79,    88,
     117,   188,   200,   391,   394,   576,   576,   357,   357,    60,
      68,   237,   816,   541,   747,   783,   497,   305,   762,   497,
     500,    37,   708,   818,   308,   491,   308,   357,   491,   496,
     496,   497,   746,   496,   696,   703,   497,   500,   716,   711,
     497,   496,   377,   496,   497,   500,   757,   758,   825,   326,
     683,   683,   444,   819,   746,   497,   500,    74,   536,   536,
     272,   437,   816,   561,   587,   590,   834,   568,   746,   271,
     567,    37,   591,   594,   819,   188,   830,   439,   516,   491,
     426,   625,   824,   847,   572,   890,   496,   816,   635,   580,
     550,    68,   289,    68,   844,   497,   497,    55,   650,   709,
     706,   496,   497,   825,   660,   818,   712,   713,   497,   779,
     496,   779,   676,   500,    37,   746,   439,   661,   661,   635,
     497,   710,   532,   830,   537,   830,   537,   375,   594,   497,
     500,   485,   497,   188,   247,   603,   496,   563,   746,   426,
      37,   496,   890,   572,   892,   289,   289,   496,   847,   778,
     328,   357,   763,   711,   497,   500,   497,   497,   497,   675,
     497,   758,   760,   359,   536,   654,   654,   540,   603,   590,
     562,   269,   574,   563,   171,   304,   381,   286,   569,   570,
     596,   552,   635,   541,   710,    49,    98,   428,   746,   764,
     765,   764,   497,   497,     9,   342,   666,   497,   663,   537,
     655,   655,   710,   570,   201,   121,   437,   286,   596,   286,
     569,   497,   890,   497,   765,   356,   164,   314,   164,   314,
     497,   496,   654,   561,    59,   269,   348,   375,   565,   565,
     847,    34,     9,   655,    23,   116,   276,   710,   765,   497
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */

#define YYFAIL		goto yyerrlab

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)					\
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    {								\
      yychar = (Token);						\
      yylval = (Value);						\
      yytoken = YYTRANSLATE (yychar);				\
      YYPOPSTACK (1);						\
      goto yybackup;						\
    }								\
  else								\
    {								\
      yyerror (&yylloc, yyscanner, YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (YYID (0))


#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#define YYRHSLOC(Rhs, K) ((Rhs)[K])
#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)				\
    do									\
      if (YYID (N))                                                    \
	{								\
	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
	}								\
      else								\
	{								\
	  (Current).first_line   = (Current).last_line   =		\
	    YYRHSLOC (Rhs, 0).last_line;				\
	  (Current).first_column = (Current).last_column =		\
	    YYRHSLOC (Rhs, 0).last_column;				\
	}								\
    while (YYID (0))
#endif


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
#  define YY_LOCATION_PRINT(File, Loc)			\
     fprintf (File, "%d.%d-%d.%d",			\
	      (Loc).first_line, (Loc).first_column,	\
	      (Loc).last_line,  (Loc).last_column)
# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */

#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, &yylloc, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval, &yylloc, yyscanner)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (YYID (0))

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
do {									  \
  if (yydebug)								  \
    {									  \
      YYFPRINTF (stderr, "%s ", Title);					  \
      yy_symbol_print (stderr,						  \
		  Type, Value, Location, yyscanner); \
      YYFPRINTF (stderr, "\n");						  \
    }									  \
} while (YYID (0))


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (!yyvaluep)
    return;
  YYUSE (yylocationp);
  YYUSE (yyscanner);
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# else
  YYUSE (yyoutput);
# endif
  switch (yytype)
    {
      default:
	break;
    }
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
#else
static void
yy_stack_print (bottom, top)
    yytype_int16 *bottom;
    yytype_int16 *top;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (; bottom <= top; ++bottom)
    YYFPRINTF (stderr, " %d", *bottom);
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (YYID (0))


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_reduce_print (YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, core_yyscan_t yyscanner)
#else
static void
yy_reduce_print (yyvsp, yylsp, yyrule, yyscanner)
    YYSTYPE *yyvsp;
    YYLTYPE *yylsp;
    int yyrule;
    core_yyscan_t yyscanner;
#endif
{
  int yynrhs = yyr2[yyrule];
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
	     yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      fprintf (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
		       &(yyvsp[(yyi + 1) - (yynrhs)])
		       , &(yylsp[(yyi + 1) - (yynrhs)])		       , yyscanner);
      fprintf (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (yyvsp, yylsp, Rule, yyscanner); \
} while (YYID (0))

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif



#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static YYSIZE_T
yystrlen (const char *yystr)
#else
static YYSIZE_T
yystrlen (yystr)
    const char *yystr;
#endif
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static char *
yystpcpy (char *yydest, const char *yysrc)
#else
static char *
yystpcpy (yydest, yysrc)
    char *yydest;
    const char *yysrc;
#endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into YYRESULT an error message about the unexpected token
   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
   including the terminating null byte.  If YYRESULT is null, do not
   copy anything; just return the number of bytes that would be
   copied.  As a special case, return 0 if an ordinary "syntax error"
   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
   size calculation.  */
static YYSIZE_T
yysyntax_error (char *yyresult, int yystate, int yychar)
{
  int yyn = yypact[yystate];

  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
    return 0;
  else
    {
      int yytype = YYTRANSLATE (yychar);
      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
      YYSIZE_T yysize = yysize0;
      YYSIZE_T yysize1;
      int yysize_overflow = 0;
      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
      int yyx;

# if 0
      /* This is so xgettext sees the translatable formats that are
	 constructed on the fly.  */
      YY_("syntax error, unexpected %s");
      YY_("syntax error, unexpected %s, expecting %s");
      YY_("syntax error, unexpected %s, expecting %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
# endif
      char *yyfmt;
      char const *yyf;
      static char const yyunexpected[] = "syntax error, unexpected %s";
      static char const yyexpecting[] = ", expecting %s";
      static char const yyor[] = " or %s";
      char yyformat[sizeof yyunexpected
		    + sizeof yyexpecting - 1
		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
		       * (sizeof yyor - 1))];
      char const *yyprefix = yyexpecting;

      /* Start YYX at -YYN if negative to avoid negative indexes in
	 YYCHECK.  */
      int yyxbegin = yyn < 0 ? -yyn : 0;

      /* Stay within bounds of both yycheck and yytname.  */
      int yychecklim = YYLAST - yyn + 1;
      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
      int yycount = 1;

      yyarg[0] = yytname[yytype];
      yyfmt = yystpcpy (yyformat, yyunexpected);

      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
	  {
	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
	      {
		yycount = 1;
		yysize = yysize0;
		yyformat[sizeof yyunexpected - 1] = '\0';
		break;
	      }
	    yyarg[yycount++] = yytname[yyx];
	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
	    yysize_overflow |= (yysize1 < yysize);
	    yysize = yysize1;
	    yyfmt = yystpcpy (yyfmt, yyprefix);
	    yyprefix = yyor;
	  }

      yyf = YY_(yyformat);
      yysize1 = yysize + yystrlen (yyf);
      yysize_overflow |= (yysize1 < yysize);
      yysize = yysize1;

      if (yysize_overflow)
	return YYSIZE_MAXIMUM;

      if (yyresult)
	{
	  /* Avoid sprintf, as that infringes on the user's name space.
	     Don't have undefined behavior even if the translation
	     produced a string with the wrong number of "%s"s.  */
	  char *yyp = yyresult;
	  int yyi = 0;
	  while ((*yyp = *yyf) != '\0')
	    {
	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
		{
		  yyp += yytnamerr (yyp, yyarg[yyi++]);
		  yyf += 2;
		}
	      else
		{
		  yyp++;
		  yyf++;
		}
	    }
	}
      return yysize;
    }
}
#endif /* YYERROR_VERBOSE */


/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, core_yyscan_t yyscanner)
#else
static void
yydestruct (yymsg, yytype, yyvaluep, yylocationp, yyscanner)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
    YYLTYPE *yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (yyscanner);

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
	break;
    }
}


/* Prevent warnings from -Wmissing-prototypes.  */

#ifdef YYPARSE_PARAM
#if defined __STDC__ || defined __cplusplus
int yyparse (void *YYPARSE_PARAM);
#else
int yyparse ();
#endif
#else /* ! YYPARSE_PARAM */
#if defined __STDC__ || defined __cplusplus
int yyparse (core_yyscan_t yyscanner);
#else
int yyparse ();
#endif
#endif /* ! YYPARSE_PARAM */






/*----------.
| yyparse.  |
`----------*/

#ifdef YYPARSE_PARAM
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void *YYPARSE_PARAM)
#else
int
yyparse (YYPARSE_PARAM)
    void *YYPARSE_PARAM;
#endif
#else /* ! YYPARSE_PARAM */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (core_yyscan_t yyscanner)
#else
int
yyparse (yyscanner)
    core_yyscan_t yyscanner;
#endif
#endif
{
  /* The look-ahead symbol.  */
int yychar;

/* The semantic value of the look-ahead symbol.  */
YYSTYPE yylval;

/* Number of syntax errors so far.  */
int yynerrs;
/* Location data for the look-ahead symbol.  */
YYLTYPE yylloc;

  int yystate;
  int yyn;
  int yyresult;
  /* Number of tokens to shift before error messages enabled.  */
  int yyerrstatus;
  /* Look-ahead token as an internal (translated) token number.  */
  int yytoken = 0;
#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

  /* Three stacks and their tools:
     `yyss': related to states,
     `yyvs': related to semantic values,
     `yyls': related to locations.

     Refer to the stacks thru separate pointers, to allow yyoverflow
     to reallocate them elsewhere.  */

  /* The state stack.  */
  yytype_int16 yyssa[YYINITDEPTH];
  yytype_int16 *yyss = yyssa;
  yytype_int16 *yyssp;

  /* The semantic value stack.  */
  YYSTYPE yyvsa[YYINITDEPTH];
  YYSTYPE *yyvs = yyvsa;
  YYSTYPE *yyvsp;

  /* The location stack.  */
  YYLTYPE yylsa[YYINITDEPTH];
  YYLTYPE *yyls = yylsa;
  YYLTYPE *yylsp;
  /* The locations where the error started and ended.  */
  YYLTYPE yyerror_range[2];

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  YYSIZE_T yystacksize = YYINITDEPTH;

  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY;		/* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */

  yyssp = yyss;
  yyvsp = yyvs;
  yylsp = yyls;
#if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  /* Initialize the default location before parsing starts.  */
  yylloc.first_line   = yylloc.last_line   = 1;
  yylloc.first_column = yylloc.last_column = 0;
#endif

  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack.  Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	yytype_int16 *yyss1 = yyss;
	YYLTYPE *yyls1 = yyls;

	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),
		    &yyls1, yysize * sizeof (*yylsp),
		    &yystacksize);
	yyls = yyls1;
	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	yytype_int16 *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss);
	YYSTACK_RELOCATE (yyvs);
	YYSTACK_RELOCATE (yyls);
#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     look-ahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to look-ahead token.  */
  yyn = yypact[yystate];
  if (yyn == YYPACT_NINF)
    goto yydefault;

  /* Not known => get a look-ahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yyn == 0 || yyn == YYTABLE_NINF)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the look-ahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token unless it is eof.  */
  if (yychar != YYEOF)
    yychar = YYEMPTY;

  yystate = yyn;
  *++yyvsp = yylval;
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 468 "third_party/libpg_query/grammar/grammar.y"
    {
				pg_yyget_extra(yyscanner)->parsetree = (yyvsp[(1) - (1)].list);
			;}
    break;

  case 3:
#line 484 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (3)].list) != NIL)
					{
						/* update length of previous stmt */
						updateRawStmtEnd(llast_node(PGRawStmt, (yyvsp[(1) - (3)].list)), (yylsp[(2) - (3)]));
					}
					if ((yyvsp[(3) - (3)].node) != NULL)
						(yyval.list) = lappend((yyvsp[(1) - (3)].list), makeRawStmt((yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]) + 1));
					else
						(yyval.list) = (yyvsp[(1) - (3)].list);
				;}
    break;

  case 4:
#line 496 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (1)].node) != NULL)
						(yyval.list) = list_make1(makeRawStmt((yyvsp[(1) - (1)].node), 0));
					else
						(yyval.list) = NIL;
				;}
    break;

  case 39:
#line 539 "third_party/libpg_query/grammar/grammar.y"
    { (yyval.node) = NULL; ;}
    break;

  case 40:
#line 10 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 41:
#line 19 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 42:
#line 28 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 43:
#line 37 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 44:
#line 46 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 45:
#line 55 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 46:
#line 64 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 47:
#line 73 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 48:
#line 86 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 49:
#line 88 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 50:
#line 93 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(3) - (3)].node); ;}
    break;

  case 51:
#line 94 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 52:
#line 100 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 53:
#line 104 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 54:
#line 108 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					if (strcmp((yyvsp[(2) - (2)].defelt)->defname, "as") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "restart") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "owned_by") == 0)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("sequence option \"%s\" not supported here", (yyvsp[(2) - (2)].defelt)->defname),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
				;}
    break;

  case 55:
#line 119 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("generated", (PGNode *) makeInteger((yyvsp[(3) - (3)].ival)), (yylsp[(1) - (3)]));
				;}
    break;

  case 56:
#line 127 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 57:
#line 131 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 58:
#line 140 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(2) - (2)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 59:
#line 149 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(5) - (5)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 60:
#line 158 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(3) - (3)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 61:
#line 167 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(6) - (6)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 62:
#line 176 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ColumnDefault;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (yyvsp[(4) - (4)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 63:
#line 185 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 64:
#line 193 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 65:
#line 201 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStatistics;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeInteger((yyvsp[(6) - (6)].ival));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 66:
#line 210 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 67:
#line 219 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 68:
#line 228 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStorage;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeString((yyvsp[(6) - (6)].str));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 69:
#line 237 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);

					c->contype = PG_CONSTR_IDENTITY;
					c->generated_when = (yyvsp[(6) - (9)].ival);
					c->options = (yyvsp[(9) - (9)].list);
					c->location = (yylsp[(5) - (9)]);

					n->subtype = PG_AT_AddIdentity;
					n->name = (yyvsp[(3) - (9)].str);
					n->def = (PGNode *) c;

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 70:
#line 254 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetIdentity;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 71:
#line 263 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (5)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 72:
#line 272 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (7)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 73:
#line 281 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 74:
#line 291 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 75:
#line 304 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGColumnDef *def = makeNode(PGColumnDef);
					n->subtype = PG_AT_AlterColumnType;
					n->name = (yyvsp[(3) - (8)].str);
					n->def = (PGNode *) def;
					/* We only use these fields of the PGColumnDef node */
					def->typeName = (yyvsp[(6) - (8)].typnam);
					def->collClause = (PGCollateClause *) (yyvsp[(7) - (8)].node);
					def->raw_default = (yyvsp[(8) - (8)].node);
					def->location = (yylsp[(3) - (8)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 76:
#line 319 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AlterColumnGenericOptions;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 77:
#line 328 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddConstraint;
					n->def = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 78:
#line 336 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);
					n->subtype = PG_AT_AlterConstraint;
					n->def = (PGNode *) c;
					c->contype = PG_CONSTR_FOREIGN; /* others not supported, yet */
					c->conname = (yyvsp[(3) - (4)].str);
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "ALTER CONSTRAINT statement",
									&c->deferrable,
									&c->initdeferred,
									NULL, NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 79:
#line 351 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ValidateConstraint;
					n->name = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 80:
#line 359 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 81:
#line 369 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 82:
#line 379 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 83:
#line 386 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetUnLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 84:
#line 393 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 85:
#line 401 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 86:
#line 408 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_GenericOptions;
					n->def = (PGNode *)(yyvsp[(1) - (1)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 87:
#line 418 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 88:
#line 419 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 89:
#line 425 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(1) - (1)].defelt);
				;}
    break;

  case 90:
#line 429 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_SET;
				;}
    break;

  case 91:
#line 434 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_ADD;
				;}
    break;

  case 92:
#line 439 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElemExtended(NULL, (yyvsp[(2) - (2)].str), NULL, DEFELEM_DROP, (yylsp[(2) - (2)]));
				;}
    break;

  case 93:
#line 446 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 94:
#line 447 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 95:
#line 452 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 96:
#line 456 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 1; ;}
    break;

  case 97:
#line 457 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 0; ;}
    break;

  case 98:
#line 458 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 0; ;}
    break;

  case 99:
#line 8 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(2) - (2)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 100:
#line 14 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(3) - (3)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 101:
#line 20 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 102:
#line 26 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 103:
#line 7 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SCHEMA;
					n->subname = (yyvsp[(3) - (6)].str);
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 104:
#line 16 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 105:
#line 26 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 106:
#line 36 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 107:
#line 46 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 108:
#line 56 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 109:
#line 66 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 110:
#line 76 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 111:
#line 86 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 112:
#line 96 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 113:
#line 107 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 114:
#line 118 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 115:
#line 128 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 116:
#line 140 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = COLUMN; ;}
    break;

  case 117:
#line 141 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = 0; ;}
    break;

  case 118:
#line 10 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(5) - (7)].istmt)->relation = (yyvsp[(4) - (7)].range);
					(yyvsp[(5) - (7)].istmt)->onConflictClause = (yyvsp[(6) - (7)].onconflict);
					(yyvsp[(5) - (7)].istmt)->returningList = (yyvsp[(7) - (7)].list);
					(yyvsp[(5) - (7)].istmt)->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *) (yyvsp[(5) - (7)].istmt);
				;}
    break;

  case 119:
#line 22 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 120:
#line 28 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->override = (yyvsp[(2) - (4)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 121:
#line 35 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (4)].list);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 122:
#line 41 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (7)].list);
					(yyval.istmt)->override = (yyvsp[(5) - (7)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(7) - (7)].node);
				;}
    break;

  case 123:
#line 48 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = NULL;
				;}
    break;

  case 124:
#line 58 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 125:
#line 62 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].range)->alias = makeAlias((yyvsp[(3) - (3)].str), NIL);
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 126:
#line 71 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = (yyvsp[(2) - (4)].list);
					(yyval.infer)->whereClause = (yyvsp[(4) - (4)].node);
					(yyval.infer)->conname = NULL;
					(yyval.infer)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 127:
#line 80 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = NIL;
					(yyval.infer)->whereClause = NULL;
					(yyval.infer)->conname = (yyvsp[(3) - (3)].str);
					(yyval.infer)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 128:
#line 88 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = NULL;
				;}
    break;

  case 129:
#line 95 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = (yyvsp[(1) - (1)].with); ;}
    break;

  case 130:
#line 96 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = NULL; ;}
    break;

  case 131:
#line 102 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 132:
#line 114 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].target)->val = (PGNode *) (yyvsp[(3) - (3)].node);
					(yyval.list) = list_make1((yyvsp[(1) - (3)].target));
				;}
    break;

  case 133:
#line 119 "third_party/libpg_query/grammar/statements/insert.y"
    {
					int ncolumns = list_length((yyvsp[(2) - (5)].list));
					int i = 1;
					PGListCell *col_cell;

					/* Create a PGMultiAssignRef source for each target */
					foreach(col_cell, (yyvsp[(2) - (5)].list))
					{
						PGResTarget *res_col = (PGResTarget *) lfirst(col_cell);
						PGMultiAssignRef *r = makeNode(PGMultiAssignRef);

						r->source = (PGNode *) (yyvsp[(5) - (5)].node);
						r->colno = i;
						r->ncolumns = ncolumns;
						res_col->val = (PGNode *) r;
						i++;
					}

					(yyval.list) = (yyvsp[(2) - (5)].list);
				;}
    break;

  case 134:
#line 144 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_UPDATE;
					(yyval.onconflict)->infer = (yyvsp[(3) - (8)].infer);
					(yyval.onconflict)->targetList = (yyvsp[(7) - (8)].list);
					(yyval.onconflict)->whereClause = (yyvsp[(8) - (8)].node);
					(yyval.onconflict)->location = (yylsp[(1) - (8)]);
				;}
    break;

  case 135:
#line 154 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_NOTHING;
					(yyval.onconflict)->infer = (yyvsp[(3) - (5)].infer);
					(yyval.onconflict)->targetList = NIL;
					(yyval.onconflict)->whereClause = NULL;
					(yyval.onconflict)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 136:
#line 163 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = NULL;
				;}
    break;

  case 137:
#line 170 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = (yyvsp[(1) - (5)].str);
					(yyval.ielem)->expr = NULL;
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 138:
#line 181 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(1) - (5)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 139:
#line 192 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(2) - (7)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(4) - (7)].list);
					(yyval.ielem)->opclass = (yyvsp[(5) - (7)].list);
					(yyval.ielem)->ordering = (yyvsp[(6) - (7)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(7) - (7)].nullorder);
				;}
    break;

  case 140:
#line 206 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 141:
#line 207 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 142:
#line 213 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = PG_OVERRIDING_USER_VALUE; ;}
    break;

  case 143:
#line 214 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = OVERRIDING_SYSTEM_VALUE; ;}
    break;

  case 144:
#line 219 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 145:
#line 220 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].target)); ;}
    break;

  case 146:
#line 226 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 147:
#line 227 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 148:
#line 231 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 149:
#line 232 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 150:
#line 238 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 151:
#line 240 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 152:
#line 245 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 153:
#line 246 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_concat((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].list)); ;}
    break;

  case 154:
#line 250 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 155:
#line 251 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 156:
#line 254 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].ielem)); ;}
    break;

  case 157:
#line 255 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].ielem)); ;}
    break;

  case 158:
#line 261 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;	/* upper production sets this */
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 159:
#line 8 "third_party/libpg_query/grammar/statements/create_type.y"
    {
					PGCreateTypeStmt *n = makeNode(PGCreateTypeStmt);
					n->kind = PG_NEWTYPE_ENUM;
					n->typeName = (yyvsp[(3) - (8)].list);
					n->vals = (yyvsp[(7) - (8)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 160:
#line 16 "third_party/libpg_query/grammar/statements/create_type.y"
    {
					PGCreateTypeStmt *n = makeNode(PGCreateTypeStmt);
					n->kind = PG_NEWTYPE_ALIAS;
					n->typeName = (yyvsp[(3) - (5)].list);
					n->ofType = (yyvsp[(5) - (5)].typnam);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 161:
#line 26 "third_party/libpg_query/grammar/statements/create_type.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 162:
#line 27 "third_party/libpg_query/grammar/statements/create_type.y"
    { (yyval.list) = NIL; ;}
    break;

  case 163:
#line 31 "third_party/libpg_query/grammar/statements/create_type.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 164:
#line 33 "third_party/libpg_query/grammar/statements/create_type.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 165:
#line 8 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_NOTHING;
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 166:
#line 15 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_ASSIGNMENT;
					n->name = (yyvsp[(2) - (4)].str);
					n->args = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 167:
#line 23 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_CALL;
					n->name = (yyvsp[(2) - (5)].str);
					n->args = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 168:
#line 10 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(4) - (5)].range)->relpersistence = (yyvsp[(2) - (5)].ival);
					n->sequence = (yyvsp[(4) - (5)].range);
					n->options = (yyvsp[(5) - (5)].list);
					n->ownerId = InvalidOid;
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 169:
#line 20 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(7) - (8)].range)->relpersistence = (yyvsp[(2) - (8)].ival);
					n->sequence = (yyvsp[(7) - (8)].range);
					n->options = (yyvsp[(8) - (8)].list);
					n->ownerId = InvalidOid;
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 170:
#line 32 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 171:
#line 33 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = NIL; ;}
    break;

  case 172:
#line 8 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(2) - (3)].str);
					n->params = (yyvsp[(3) - (3)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 173:
#line 16 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(7) - (9)].str);
					n->params = (yyvsp[(8) - (9)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(4) - (9)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_ERROR_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (9)].into)->rel->relpersistence = (yyvsp[(2) - (9)].ival);
					(yyvsp[(4) - (9)].into)->skipData = !((yyvsp[(9) - (9)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 174:
#line 33 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(10) - (12)].str);
					n->params = (yyvsp[(11) - (12)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(7) - (12)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_IGNORE_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (12)].into)->rel->relpersistence = (yyvsp[(2) - (12)].ival);
					(yyvsp[(7) - (12)].into)->skipData = !((yyvsp[(12) - (12)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 175:
#line 51 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 176:
#line 52 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = NIL; ;}
    break;

  case 177:
#line 10 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(3) - (4)].range);
					n->options = (yyvsp[(4) - (4)].list);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 178:
#line 18 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(5) - (6)].range);
					n->options = (yyvsp[(6) - (6)].list);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 179:
#line 29 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 180:
#line 30 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 181:
#line 34 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 182:
#line 35 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 183:
#line 36 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 184:
#line 41 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(1) - (1)].str)); ;}
    break;

  case 185:
#line 42 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(2) - (2)].str)); ;}
    break;

  case 186:
#line 44 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.value) = makeFloat((yyvsp[(2) - (2)].str));
					doNegateFloat((yyval.value));
				;}
    break;

  case 187:
#line 48 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeInteger((yyvsp[(1) - (1)].ival)); ;}
    break;

  case 188:
#line 53 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("as", (PGNode *)(yyvsp[(2) - (2)].typnam), (yylsp[(1) - (2)]));
				;}
    break;

  case 189:
#line 57 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cache", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 190:
#line 61 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 191:
#line 65 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(false), (yylsp[(1) - (2)]));
				;}
    break;

  case 192:
#line 69 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("increment", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 193:
#line 73 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 194:
#line 77 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 195:
#line 81 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 196:
#line 85 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 197:
#line 89 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("owned_by", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 198:
#line 93 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					/* not documented, only used by pg_dump */
					(yyval.defelt) = makeDefElem("sequence_name", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 199:
#line 98 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("start", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 200:
#line 102 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 201:
#line 106 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 202:
#line 112 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 203:
#line 113 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 204:
#line 117 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 205:
#line 118 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = + (yyvsp[(2) - (2)].ival); ;}
    break;

  case 206:
#line 119 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = - (yyvsp[(2) - (2)].ival); ;}
    break;

  case 207:
#line 3 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 208:
#line 10 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_BEGIN;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 209:
#line 16 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_START;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 210:
#line 22 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 211:
#line 29 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 212:
#line 36 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 213:
#line 45 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 214:
#line 46 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 215:
#line 47 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 216:
#line 9 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(4) - (9)].range)->relpersistence = (yyvsp[(2) - (9)].ival);
					n->relation = (yyvsp[(4) - (9)].range);
					n->tableElts = (yyvsp[(6) - (9)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(8) - (9)].list);
					n->oncommit = (yyvsp[(9) - (9)].oncommit);
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 217:
#line 24 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(7) - (12)].range)->relpersistence = (yyvsp[(2) - (12)].ival);
					n->relation = (yyvsp[(7) - (12)].range);
					n->tableElts = (yyvsp[(9) - (12)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(11) - (12)].list);
					n->oncommit = (yyvsp[(12) - (12)].oncommit);
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 218:
#line 39 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(6) - (11)].range)->relpersistence = (yyvsp[(4) - (11)].ival);
					n->relation = (yyvsp[(6) - (11)].range);
					n->tableElts = (yyvsp[(8) - (11)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(10) - (11)].list);
					n->oncommit = (yyvsp[(11) - (11)].oncommit);
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 219:
#line 56 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 220:
#line 58 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * We must complain about conflicting options.
					 * We could, but choose not to, complain about redundant
					 * options (ie, where $2's bit is already set in $1).
					 */
					int		newspec = (yyvsp[(1) - (2)].ival) | (yyvsp[(2) - (2)].ival);

					/* special message for this case */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED)) == (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("constraint declared INITIALLY DEFERRED must be DEFERRABLE"),
								 parser_errposition((yylsp[(2) - (2)]))));
					/* generic message for other conflicts */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE)) == (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE) ||
						(newspec & (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED)) == (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("conflicting constraint properties"),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.ival) = newspec;
				;}
    break;

  case 221:
#line 84 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].typnam); ;}
    break;

  case 222:
#line 85 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 223:
#line 86 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].list); ;}
    break;

  case 224:
#line 87 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].value); ;}
    break;

  case 225:
#line 88 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 226:
#line 89 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 227:
#line 93 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 228:
#line 94 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 229:
#line 99 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 230:
#line 104 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_NOACTION; ;}
    break;

  case 231:
#line 105 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_RESTRICT; ;}
    break;

  case 232:
#line 106 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_CASCADE; ;}
    break;

  case 233:
#line 107 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETNULL; ;}
    break;

  case 234:
#line 108 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETDEFAULT; ;}
    break;

  case 235:
#line 114 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 236:
#line 120 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 237:
#line 121 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 238:
#line 123 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * Note: the PGCollateClause is momentarily included in
					 * the list built by ColQualList, but we split it out
					 * again in SplitColQualList.
					 */
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 239:
#line 140 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NOTNULL;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 240:
#line 147 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NULL;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 241:
#line 154 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (2)]);
					n->keys = NULL;
					n->options = (yyvsp[(2) - (2)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 242:
#line 164 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NULL;
					n->options = (yyvsp[(3) - (3)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 243:
#line 174 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->is_no_inherit = (yyvsp[(5) - (5)].boolean);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					n->skip_validation = false;
					n->initially_valid = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 244:
#line 186 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_COMPRESSION;
					n->location = (yylsp[(1) - (3)]);
					n->compression_name = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 245:
#line 194 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_DEFAULT;
					n->location = (yylsp[(1) - (2)]);
					n->raw_expr = (yyvsp[(2) - (2)].node);
					n->cooked_expr = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 246:
#line 203 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_IDENTITY;
					n->generated_when = (yyvsp[(2) - (5)].ival);
					n->options = (yyvsp[(5) - (5)].list);
					n->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 247:
#line 212 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (5)]);
					n->pktable			= (yyvsp[(2) - (5)].range);
					n->fk_attrs			= NIL;
					n->pk_attrs			= (yyvsp[(3) - (5)].list);
					n->fk_matchtype		= (yyvsp[(4) - (5)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(5) - (5)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(5) - (5)].ival) & 0xFF);
					n->skip_validation  = false;
					n->initially_valid  = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 248:
#line 231 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 249:
#line 237 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 250:
#line 243 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (1)].ival) << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 251:
#line 245 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | ((yyvsp[(1) - (1)].ival) & 0xFF); ;}
    break;

  case 252:
#line 247 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (2)].ival) << 8) | ((yyvsp[(2) - (2)].ival) & 0xFF); ;}
    break;

  case 253:
#line 249 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(2) - (2)].ival) << 8) | ((yyvsp[(1) - (2)].ival) & 0xFF); ;}
    break;

  case 254:
#line 251 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 255:
#line 256 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 256:
#line 257 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 257:
#line 261 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = ONCOMMIT_DROP; ;}
    break;

  case 258:
#line 262 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_DELETE_ROWS; ;}
    break;

  case 259:
#line 263 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_PRESERVE_ROWS; ;}
    break;

  case 260:
#line 264 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_NOOP; ;}
    break;

  case 261:
#line 269 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 262:
#line 273 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = true; ;}
    break;

  case 263:
#line 274 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = false; ;}
    break;

  case 264:
#line 280 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 265:
#line 286 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 266:
#line 291 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_COMMENTS; ;}
    break;

  case 267:
#line 292 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_CONSTRAINTS; ;}
    break;

  case 268:
#line 293 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_DEFAULTS; ;}
    break;

  case 269:
#line 294 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_IDENTITY; ;}
    break;

  case 270:
#line 295 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_INDEXES; ;}
    break;

  case 271:
#line 296 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STATISTICS; ;}
    break;

  case 272:
#line 297 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STORAGE; ;}
    break;

  case 273:
#line 298 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_ALL; ;}
    break;

  case 274:
#line 304 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 275:
#line 305 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 276:
#line 309 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
    break;

  case 277:
#line 315 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRABLE;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 278:
#line 322 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_NOT_DEFERRABLE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 279:
#line 329 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRED;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 280:
#line 336 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_IMMEDIATE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 281:
#line 347 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 282:
#line 348 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(true), (yylsp[(1) - (2)]))); ;}
    break;

  case 283:
#line 349 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(false), (yylsp[(1) - (2)]))); ;}
    break;

  case 284:
#line 350 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 285:
#line 354 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 286:
#line 359 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 287:
#line 360 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) & ~(yyvsp[(3) - (3)].ival); ;}
    break;

  case 288:
#line 361 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 289:
#line 366 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 290:
#line 371 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_DEFERRABLE; ;}
    break;

  case 291:
#line 372 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_DEFERRABLE; ;}
    break;

  case 292:
#line 373 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_IMMEDIATE; ;}
    break;

  case 293:
#line 374 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_DEFERRED; ;}
    break;

  case 294:
#line 375 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_VALID; ;}
    break;

  case 295:
#line 376 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NO_INHERIT; ;}
    break;

  case 296:
#line 382 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (4)].str);
					n->typeName = (yyvsp[(2) - (4)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collOid = InvalidOid;
					n->fdwoptions = (yyvsp[(3) - (4)].list);
					SplitColQualList((yyvsp[(4) - (4)].list), &n->constraints, &n->collClause,
									 yyscanner);
					n->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 297:
#line 405 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 298:
#line 409 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 299:
#line 415 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 300:
#line 416 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 301:
#line 420 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 302:
#line 424 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 303:
#line 425 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 304:
#line 426 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 305:
#line 431 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 306:
#line 435 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 307:
#line 442 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 308:
#line 443 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 309:
#line 448 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 310:
#line 449 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 311:
#line 450 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 312:
#line 455 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str));
				;}
    break;

  case 313:
#line 462 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 314:
#line 463 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 315:
#line 468 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 316:
#line 469 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 317:
#line 473 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 318:
#line 479 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 319:
#line 483 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 320:
#line 487 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (5)].str), (yyvsp[(3) - (5)].str), (PGNode *) (yyvsp[(5) - (5)].node),
											 PG_DEFELEM_UNSPEC, (yylsp[(1) - (5)]));
				;}
    break;

  case 321:
#line 492 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str), NULL, PG_DEFELEM_UNSPEC, (yylsp[(1) - (3)]));
				;}
    break;

  case 322:
#line 499 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 323:
#line 500 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 324:
#line 504 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 325:
#line 505 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 326:
#line 509 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 327:
#line 511 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (4)].str)), (yyvsp[(2) - (4)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 328:
#line 517 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(2) - (5)].str)), (yyvsp[(3) - (5)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->setof = true;
					(yyval.typnam)->location = (yylsp[(2) - (5)]);
				;}
    break;

  case 329:
#line 528 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					processCASbits((yyvsp[(5) - (5)].ival), (yylsp[(5) - (5)]), "CHECK",
								   NULL, NULL, &n->skip_validation,
								   &n->is_no_inherit, yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 330:
#line 542 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (6)]);
					n->keys = (yyvsp[(3) - (6)].list);
					n->options = (yyvsp[(5) - (6)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(6) - (6)].ival), (yylsp[(6) - (6)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 331:
#line 555 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(2) - (3)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(3) - (3)].ival), (yylsp[(3) - (3)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 332:
#line 570 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (7)]);
					n->keys = (yyvsp[(4) - (7)].list);
					n->options = (yyvsp[(6) - (7)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(7) - (7)].ival), (yylsp[(7) - (7)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 333:
#line 583 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (4)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(3) - (4)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 334:
#line 598 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (11)]);
					n->pktable			= (yyvsp[(7) - (11)].range);
					n->fk_attrs			= (yyvsp[(4) - (11)].list);
					n->pk_attrs			= (yyvsp[(8) - (11)].list);
					n->fk_matchtype		= (yyvsp[(9) - (11)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(10) - (11)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(10) - (11)].ival) & 0xFF);
					processCASbits((yyvsp[(11) - (11)].ival), (yylsp[(11) - (11)]), "FOREIGN KEY",
								   &n->deferrable, &n->initdeferred,
								   &n->skip_validation, NULL,
								   yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 335:
#line 620 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 336:
#line 624 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 337:
#line 631 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_FULL;
			;}
    break;

  case 338:
#line 635 "third_party/libpg_query/grammar/statements/create.y"
    {
				ereport(ERROR,
						(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
						 errmsg("MATCH PARTIAL not yet implemented"),
						 parser_errposition((yylsp[(1) - (2)]))));
				(yyval.ival) = PG_FKCONSTR_MATCH_PARTIAL;
			;}
    break;

  case 339:
#line 643 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 340:
#line 647 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 341:
#line 655 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGTableLikeClause *n = makeNode(PGTableLikeClause);
					n->relation = (yyvsp[(2) - (3)].range);
					n->options = (yyvsp[(3) - (3)].ival);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 342:
#line 664 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 343:
#line 665 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 344:
#line 666 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 345:
#line 667 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 346:
#line 669 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 347:
#line 676 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 348:
#line 682 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_UNLOGGED; ;}
    break;

  case 349:
#line 683 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = RELPERSISTENCE_PERMANENT; ;}
    break;

  case 350:
#line 688 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_ATTRIBUTE_IDENTITY_ALWAYS; ;}
    break;

  case 351:
#line 689 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ATTRIBUTE_IDENTITY_BY_DEFAULT; ;}
    break;

  case 352:
#line 10 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 353:
#line 20 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 354:
#line 30 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 355:
#line 40 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 356:
#line 50 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->objects = list_make1(lappend((yyvsp[(5) - (6)].list), makeString((yyvsp[(3) - (6)].str))));
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 357:
#line 60 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (8)].objtype);
					n->objects = list_make1(lappend((yyvsp[(7) - (8)].list), makeString((yyvsp[(5) - (8)].str))));
					n->behavior = (yyvsp[(8) - (8)].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 358:
#line 70 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = PG_OBJECT_TYPE;
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 359:
#line 80 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = PG_OBJECT_TYPE;
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 360:
#line 93 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TABLE; ;}
    break;

  case 361:
#line 94 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SEQUENCE; ;}
    break;

  case 362:
#line 95 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 363:
#line 96 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 364:
#line 97 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TABLE_MACRO; ;}
    break;

  case 365:
#line 98 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_VIEW; ;}
    break;

  case 366:
#line 99 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_MATVIEW; ;}
    break;

  case 367:
#line 100 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_INDEX; ;}
    break;

  case 368:
#line 101 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_TABLE; ;}
    break;

  case 369:
#line 102 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_COLLATION; ;}
    break;

  case 370:
#line 103 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_CONVERSION; ;}
    break;

  case 371:
#line 104 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_STATISTIC_EXT; ;}
    break;

  case 372:
#line 105 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSPARSER; ;}
    break;

  case 373:
#line 106 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSDICTIONARY; ;}
    break;

  case 374:
#line 107 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSTEMPLATE; ;}
    break;

  case 375:
#line 108 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSCONFIGURATION; ;}
    break;

  case 376:
#line 113 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_ACCESS_METHOD; ;}
    break;

  case 377:
#line 114 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EVENT_TRIGGER; ;}
    break;

  case 378:
#line 115 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EXTENSION; ;}
    break;

  case 379:
#line 116 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FDW; ;}
    break;

  case 380:
#line 117 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_PUBLICATION; ;}
    break;

  case 381:
#line 118 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SCHEMA; ;}
    break;

  case 382:
#line 119 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_SERVER; ;}
    break;

  case 383:
#line 124 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 384:
#line 125 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 385:
#line 130 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_CASCADE; ;}
    break;

  case 386:
#line 131 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; ;}
    break;

  case 387:
#line 132 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; /* default */ ;}
    break;

  case 388:
#line 137 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_POLICY; ;}
    break;

  case 389:
#line 138 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_RULE; ;}
    break;

  case 390:
#line 139 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TRIGGER; ;}
    break;

  case 391:
#line 142 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 392:
#line 143 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 393:
#line 9 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				PGCreateFunctionStmt *n = makeNode(PGCreateFunctionStmt);
				n->relpersistence=(yyvsp[(2) - (8)].ival);
				n->name = (yyvsp[(4) - (8)].range);
				n->params = (yyvsp[(5) - (8)].list);
				n->function = NULL;
				n->query = (yyvsp[(8) - (8)].node);
				(yyval.node) = (PGNode *)n;
				
			;}
    break;

  case 394:
#line 21 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				PGCreateFunctionStmt *n = makeNode(PGCreateFunctionStmt);
				n->relpersistence=(yyvsp[(2) - (7)].ival);
				n->name = (yyvsp[(4) - (7)].range);
				n->params = (yyvsp[(5) - (7)].list);
				n->function = (yyvsp[(7) - (7)].node);
				n->query = NULL;
				(yyval.node) = (PGNode *)n;
                         ;}
    break;

  case 397:
#line 42 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = NIL;
			;}
    break;

  case 398:
#line 46 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = (yyvsp[(2) - (3)].list);
			;}
    break;

  case 399:
#line 12 "third_party/libpg_query/grammar/statements/update.y"
    {
					PGUpdateStmt *n = makeNode(PGUpdateStmt);
					n->relation = (yyvsp[(3) - (8)].range);
					n->targetList = (yyvsp[(5) - (8)].list);
					n->fromClause = (yyvsp[(6) - (8)].list);
					n->whereClause = (yyvsp[(7) - (8)].node);
					n->returningList = (yyvsp[(8) - (8)].list);
					n->withClause = (yyvsp[(1) - (8)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 400:
#line 3 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = (yyvsp[(3) - (11)].range);
					n->query = NULL;
					n->attlist = (yyvsp[(4) - (11)].list);
					n->is_from = (yyvsp[(6) - (11)].boolean);
					n->is_program = (yyvsp[(7) - (11)].boolean);
					n->filename = (yyvsp[(8) - (11)].str);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(8) - (11)]))));

					n->options = NIL;
					/* Concatenate user-supplied flags */
					if ((yyvsp[(2) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(2) - (11)].defelt));
					if ((yyvsp[(5) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(5) - (11)].defelt));
					if ((yyvsp[(9) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(9) - (11)].defelt));
					if ((yyvsp[(11) - (11)].list))
						n->options = list_concat(n->options, (yyvsp[(11) - (11)].list));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 401:
#line 31 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = NULL;
					n->query = (yyvsp[(3) - (9)].node);
					n->attlist = NIL;
					n->is_from = false;
					n->is_program = (yyvsp[(6) - (9)].boolean);
					n->filename = (yyvsp[(7) - (9)].str);
					n->options = (yyvsp[(9) - (9)].list);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(5) - (9)]))));

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 402:
#line 53 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 403:
#line 54 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 404:
#line 60 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(2) - (3)]));
				;}
    break;

  case 405:
#line 63 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 406:
#line 69 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 407:
#line 73 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 408:
#line 80 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 409:
#line 81 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 410:
#line 85 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 411:
#line 86 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 412:
#line 91 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 413:
#line 92 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 414:
#line 96 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 415:
#line 97 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 416:
#line 102 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 417:
#line 103 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 418:
#line 104 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeNode(PGAStar); ;}
    break;

  case 419:
#line 105 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (3)].list); ;}
    break;

  case 420:
#line 106 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = NULL; ;}
    break;

  case 421:
#line 112 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 422:
#line 120 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (2)]));
				;}
    break;

  case 423:
#line 123 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 424:
#line 128 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 425:
#line 129 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = NIL; ;}
    break;

  case 426:
#line 135 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 427:
#line 138 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 428:
#line 144 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 429:
#line 148 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 430:
#line 152 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("freeze", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 431:
#line 156 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 432:
#line 160 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("null", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 433:
#line 164 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("csv"), (yylsp[(1) - (1)]));
				;}
    break;

  case 434:
#line 168 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("header", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 435:
#line 172 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("quote", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 436:
#line 176 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("escape", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 437:
#line 180 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 438:
#line 184 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)makeNode(PGAStar), (yylsp[(1) - (3)]));
				;}
    break;

  case 439:
#line 188 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_not_null", (PGNode *)(yyvsp[(4) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 440:
#line 192 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_null", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 441:
#line 196 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("encoding", (PGNode *)makeString((yyvsp[(2) - (2)].str)), (yylsp[(1) - (2)]));
				;}
    break;

  case 442:
#line 203 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 443:
#line 209 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 444:
#line 210 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 445:
#line 211 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 446:
#line 217 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 447:
#line 221 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 450:
#line 52 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 451:
#line 53 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 452:
#line 68 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 453:
#line 70 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list), NIL,
										NULL, NULL, NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (2)].node);
				;}
    break;

  case 454:
#line 77 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(3) - (4)].list),
										(PGNode*) list_nth((yyvsp[(4) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 455:
#line 85 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(4) - (4)].list),
										(PGNode*) list_nth((yyvsp[(3) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(3) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 456:
#line 93 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (2)].node), NULL, NIL,
										NULL, NULL,
										(yyvsp[(1) - (2)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 457:
#line 101 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].list), NIL,
										NULL, NULL,
										(yyvsp[(1) - (3)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (3)].node);
				;}
    break;

  case 458:
#line 109 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(4) - (5)].list),
										(PGNode*) list_nth((yyvsp[(5) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(5) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 459:
#line 117 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(5) - (5)].list),
										(PGNode*) list_nth((yyvsp[(4) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 460:
#line 127 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 461:
#line 128 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 462:
#line 158 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->targetList = (yyvsp[(3) - (11)].list);
					n->intoClause = (yyvsp[(4) - (11)].into);
					n->fromClause = (yyvsp[(5) - (11)].list);
					n->whereClause = (yyvsp[(6) - (11)].node);
					n->groupClause = (yyvsp[(7) - (11)].list);
					n->havingClause = (yyvsp[(8) - (11)].node);
					n->windowClause = (yyvsp[(9) - (11)].list);
					n->qualifyClause = (yyvsp[(10) - (11)].node);
					n->sampleOptions = (yyvsp[(11) - (11)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 463:
#line 174 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->distinctClause = (yyvsp[(2) - (11)].list);
					n->targetList = (yyvsp[(3) - (11)].list);
					n->intoClause = (yyvsp[(4) - (11)].into);
					n->fromClause = (yyvsp[(5) - (11)].list);
					n->whereClause = (yyvsp[(6) - (11)].node);
					n->groupClause = (yyvsp[(7) - (11)].list);
					n->havingClause = (yyvsp[(8) - (11)].node);
					n->windowClause = (yyvsp[(9) - (11)].list);
					n->qualifyClause = (yyvsp[(10) - (11)].node);
					n->sampleOptions = (yyvsp[(11) - (11)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 464:
#line 188 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 465:
#line 190 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* same as SELECT * FROM relation_expr */
					PGColumnRef *cr = makeNode(PGColumnRef);
					PGResTarget *rt = makeNode(PGResTarget);
					PGSelectStmt *n = makeNode(PGSelectStmt);

					cr->fields = list_make1(makeNode(PGAStar));
					cr->location = -1;

					rt->name = NULL;
					rt->indirection = NIL;
					rt->val = (PGNode *)cr;
					rt->location = -1;

					n->targetList = list_make1(rt);
					n->fromClause = list_make1((yyvsp[(2) - (2)].range));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 466:
#line 209 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_UNION, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 467:
#line 213 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_INTERSECT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 468:
#line 217 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_EXCEPT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 469:
#line 234 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 470:
#line 241 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 471:
#line 248 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(3) - (3)].list);
				(yyval.with)->recursive = true;
				(yyval.with)->location = (yylsp[(1) - (3)]);
			;}
    break;

  case 472:
#line 257 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 473:
#line 258 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 474:
#line 262 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGCommonTableExpr *n = makeNode(PGCommonTableExpr);
				n->ctename = (yyvsp[(1) - (6)].str);
				n->aliascolnames = (yyvsp[(2) - (6)].list);
				n->ctequery = (yyvsp[(5) - (6)].node);
				n->location = (yylsp[(1) - (6)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 475:
#line 274 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(2) - (2)].range);
					(yyval.into)->colNames = NIL;
					(yyval.into)->options = NIL;
					(yyval.into)->onCommit = PG_ONCOMMIT_NOOP;
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;
				;}
    break;

  case 476:
#line 284 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.into) = NULL; ;}
    break;

  case 477:
#line 293 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 478:
#line 298 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 479:
#line 303 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 480:
#line 308 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 481:
#line 313 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 482:
#line 321 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 483:
#line 329 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_UNLOGGED;
				;}
    break;

  case 484:
#line 334 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 485:
#line 339 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 486:
#line 345 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 487:
#line 346 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 488:
#line 350 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 489:
#line 351 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 490:
#line 352 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 491:
#line 359 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(NIL); ;}
    break;

  case 492:
#line 360 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 493:
#line 364 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL;;}
    break;

  case 494:
#line 365 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 495:
#line 369 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true;;}
    break;

  case 496:
#line 370 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false;;}
    break;

  case 497:
#line 371 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 498:
#line 375 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 499:
#line 376 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 500:
#line 380 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 501:
#line 382 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSortBy *sort = makeNode(PGSortBy);
					sort->node = (PGNode *) makeNode(PGAStar);
					sort->sortby_dir = (yyvsp[(4) - (5)].sortorder);
					sort->sortby_nulls = (yyvsp[(5) - (5)].nullorder);
					sort->useOp = NIL;
					sort->location = -1;		/* no operator */
					(yyval.list) = list_make1(sort);
				;}
    break;

  case 502:
#line 392 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSortBy *sort = makeNode(PGSortBy);
					sort->node = (PGNode *) makeNode(PGAStar);
					sort->sortby_dir = (yyvsp[(4) - (5)].sortorder);
					sort->sortby_nulls = (yyvsp[(5) - (5)].nullorder);
					sort->useOp = NIL;
					sort->location = -1;		/* no operator */
					(yyval.list) = list_make1(sort);
				;}
    break;

  case 503:
#line 404 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].sortby)); ;}
    break;

  case 504:
#line 405 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].sortby)); ;}
    break;

  case 505:
#line 409 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (4)].node);
					(yyval.sortby)->sortby_dir = SORTBY_USING;
					(yyval.sortby)->sortby_nulls = (yyvsp[(4) - (4)].nullorder);
					(yyval.sortby)->useOp = (yyvsp[(3) - (4)].list);
					(yyval.sortby)->location = (yylsp[(3) - (4)]);
				;}
    break;

  case 506:
#line 418 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (3)].node);
					(yyval.sortby)->sortby_dir = (yyvsp[(2) - (3)].sortorder);
					(yyval.sortby)->sortby_nulls = (yyvsp[(3) - (3)].nullorder);
					(yyval.sortby)->useOp = NIL;
					(yyval.sortby)->location = -1;		/* no operator */
				;}
    break;

  case 507:
#line 428 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_ASC; ;}
    break;

  case 508:
#line 429 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DESC; ;}
    break;

  case 509:
#line 430 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DEFAULT; ;}
    break;

  case 510:
#line 433 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_FIRST; ;}
    break;

  case 511:
#line 434 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_LAST; ;}
    break;

  case 512:
#line 435 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_DEFAULT; ;}
    break;

  case 513:
#line 439 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(2) - (2)].node), (yyvsp[(1) - (2)].node)); ;}
    break;

  case 514:
#line 440 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 515:
#line 441 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL, (yyvsp[(1) - (1)].node)); ;}
    break;

  case 516:
#line 442 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (1)].node), NULL); ;}
    break;

  case 517:
#line 446 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 518:
#line 447 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL,NULL); ;}
    break;

  case 519:
#line 452 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 520:
#line 454 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Disabled because it was too confusing, bjm 2002-02-18 */
					ereport(ERROR,
							(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("LIMIT #,# syntax is not supported"),
							 errhint("Use separate LIMIT and OFFSET clauses."),
							 parser_errposition((yylsp[(1) - (4)]))));
				;}
    break;

  case 521:
#line 470 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(3) - (5)].node); ;}
    break;

  case 522:
#line 472 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst(1, -1); ;}
    break;

  case 523:
#line 477 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 524:
#line 480 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 525:
#line 488 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
		;}
    break;

  case 526:
#line 492 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
		;}
    break;

  case 527:
#line 496 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
		;}
    break;

  case 528:
#line 500 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
		;}
    break;

  case 529:
#line 504 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (1)].ival)), false);
		;}
    break;

  case 530:
#line 508 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), false);
		;}
    break;

  case 531:
#line 515 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(3) - (3)].node);
				;}
    break;

  case 532:
#line 519 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 533:
#line 526 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 534:
#line 527 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 535:
#line 532 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSampleOptions((yyvsp[(3) - (5)].node), (yyvsp[(1) - (5)].str), (yyvsp[(5) - (5)].ival), (yylsp[(1) - (5)]));
				;}
    break;

  case 536:
#line 536 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (1)].node), NULL, -1, (yylsp[(1) - (1)]));
		;}
    break;

  case 537:
#line 540 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (4)].node), (yyvsp[(3) - (4)].str), -1, (yylsp[(1) - (4)]));
		;}
    break;

  case 538:
#line 544 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (6)].node), (yyvsp[(3) - (6)].str), (yyvsp[(5) - (6)].ival), (yylsp[(1) - (6)]));
		;}
    break;

  case 539:
#line 551 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 540:
#line 557 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 541:
#line 558 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 542:
#line 563 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(3) - (4)].ival); ;}
    break;

  case 543:
#line 564 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = -1; ;}
    break;

  case 544:
#line 568 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 545:
#line 570 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* LIMIT ALL is represented as a NULL constant */
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 546:
#line 575 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeLimitPercent((yyvsp[(1) - (2)].node)); ;}
    break;

  case 547:
#line 577 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeLimitPercent(makeFloatConst((yyvsp[(1) - (2)].str),(yylsp[(1) - (2)]))); ;}
    break;

  case 548:
#line 579 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeLimitPercent(makeIntConst((yyvsp[(1) - (2)].ival),(yylsp[(1) - (2)]))); ;}
    break;

  case 549:
#line 583 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 550:
#line 603 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 551:
#line 605 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 552:
#line 607 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 553:
#line 611 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival),(yylsp[(1) - (1)])); ;}
    break;

  case 554:
#line 612 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str),(yylsp[(1) - (1)])); ;}
    break;

  case 555:
#line 616 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 556:
#line 617 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 557:
#line 620 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 558:
#line 621 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 559:
#line 646 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 560:
#line 648 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNode *node = (PGNode *) makeGroupingSet(GROUPING_SET_ALL, NIL, (yylsp[(3) - (3)]));
					(yyval.list) = list_make1(node);
				;}
    break;

  case 561:
#line 653 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNode *node = (PGNode *) makeGroupingSet(GROUPING_SET_ALL, NIL, (yylsp[(3) - (3)]));
					(yyval.list) = list_make1(node);
				;}
    break;

  case 562:
#line 657 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 563:
#line 661 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 564:
#line 662 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].node)); ;}
    break;

  case 565:
#line 666 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 566:
#line 667 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 567:
#line 671 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 568:
#line 672 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 569:
#line 673 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 570:
#line 674 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 571:
#line 675 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 572:
#line 680 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_EMPTY, NIL, (yylsp[(1) - (2)]));
				;}
    break;

  case 573:
#line 693 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_ROLLUP, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 574:
#line 700 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_CUBE, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 575:
#line 707 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_SETS, (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 576:
#line 713 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 577:
#line 714 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 578:
#line 718 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 579:
#line 719 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 580:
#line 723 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 581:
#line 724 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 582:
#line 728 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 583:
#line 729 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 584:
#line 733 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 585:
#line 734 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 586:
#line 738 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 587:
#line 739 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 588:
#line 744 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGLockingClause *n = makeNode(PGLockingClause);
					n->lockedRels = (yyvsp[(2) - (3)].list);
					n->strength = (yyvsp[(1) - (3)].lockstrength);
					n->waitPolicy = (yyvsp[(3) - (3)].lockwaitpolicy);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 589:
#line 754 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = LCS_FORUPDATE; ;}
    break;

  case 590:
#line 755 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORNOKEYUPDATE; ;}
    break;

  case 591:
#line 756 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORSHARE; ;}
    break;

  case 592:
#line 757 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORKEYSHARE; ;}
    break;

  case 593:
#line 761 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 594:
#line 762 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 595:
#line 767 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = LockWaitError; ;}
    break;

  case 596:
#line 768 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitSkip; ;}
    break;

  case 597:
#line 769 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitBlock; ;}
    break;

  case 598:
#line 779 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->valuesLists = list_make1((yyvsp[(3) - (4)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 599:
#line 785 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = (PGSelectStmt *) (yyvsp[(1) - (5)].node);
					n->valuesLists = lappend(n->valuesLists, (yyvsp[(4) - (5)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 600:
#line 793 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 601:
#line 794 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (2)].node); ;}
    break;

  case 602:
#line 807 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 603:
#line 808 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 604:
#line 812 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 605:
#line 813 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 606:
#line 817 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 607:
#line 818 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 608:
#line 825 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(1) - (3)].range)->alias = (yyvsp[(2) - (3)].alias);
					(yyvsp[(1) - (3)].range)->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) (yyvsp[(1) - (3)].range);
				;}
    break;

  case 609:
#line 831 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(1) - (3)].node);
					n->alias = (PGAlias*) linitial((yyvsp[(2) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(2) - (3)].list));
					n->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 610:
#line 839 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(2) - (3)].node);
					n->lateral = true;
					n->alias = (PGAlias*) linitial((yyvsp[(3) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(3) - (3)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 611:
#line 847 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = false;
					n->subquery = (yyvsp[(1) - (3)].node);
					n->alias = (yyvsp[(2) - (3)].alias);
					n->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 612:
#line 856 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = true;
					n->subquery = (yyvsp[(2) - (3)].node);
					n->alias = (yyvsp[(3) - (3)].alias);
					n->sample = NULL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 613:
#line 865 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) (yyvsp[(1) - (1)].jexpr);
				;}
    break;

  case 614:
#line 869 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(2) - (4)].jexpr)->alias = (yyvsp[(4) - (4)].alias);
					(yyval.node) = (PGNode *) (yyvsp[(2) - (4)].jexpr);
				;}
    break;

  case 615:
#line 895 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.jexpr) = (yyvsp[(2) - (3)].jexpr);
				;}
    break;

  case 616:
#line 899 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* CROSS JOIN is same as unqualified inner join */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL;
					n->quals = NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 617:
#line 912 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(2) - (5)].jtype);
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(4) - (5)].node);
					if ((yyvsp[(5) - (5)].node) != NULL && IsA((yyvsp[(5) - (5)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(5) - (5)].node); /* USING clause */
					else
						n->quals = (yyvsp[(5) - (5)].node); /* ON clause */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 618:
#line 926 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(3) - (4)].node);
					if ((yyvsp[(4) - (4)].node) != NULL && IsA((yyvsp[(4) - (4)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(4) - (4)].node); /* USING clause */
					else
						n->quals = (yyvsp[(4) - (4)].node); /* ON clause */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 619:
#line 941 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(3) - (5)].jtype);
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(5) - (5)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 620:
#line 953 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 621:
#line 969 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.alias)->colnames = (yyvsp[(4) - (5)].list);
				;}
    break;

  case 622:
#line 975 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (2)].str);
				;}
    break;

  case 623:
#line 980 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.alias)->colnames = (yyvsp[(3) - (4)].list);
				;}
    break;

  case 624:
#line 986 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (1)].str);
				;}
    break;

  case 625:
#line 992 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = (yyvsp[(1) - (1)].alias); ;}
    break;

  case 626:
#line 993 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = NULL; ;}
    break;

  case 627:
#line 1002 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (1)].alias), NIL);
				;}
    break;

  case 628:
#line 1006 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 629:
#line 1010 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.list) = list_make2(a, (yyvsp[(4) - (5)].list));
				;}
    break;

  case 630:
#line 1016 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.list) = list_make2(a, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 631:
#line 1022 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, NIL);
				;}
    break;

  case 632:
#line 1027 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_FULL; ;}
    break;

  case 633:
#line 1028 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_LEFT; ;}
    break;

  case 634:
#line 1029 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_RIGHT; ;}
    break;

  case 635:
#line 1030 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_INNER; ;}
    break;

  case 636:
#line 1034 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 637:
#line 1035 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 638:
#line 1047 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) (yyvsp[(3) - (4)].list); ;}
    break;

  case 639:
#line 1048 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 640:
#line 1054 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, implicitly */
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 641:
#line 1061 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, explicitly */
					(yyval.range) = (yyvsp[(1) - (2)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 642:
#line 1068 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance */
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 643:
#line 1075 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance, SQL99-style syntax */
					(yyval.range) = (yyvsp[(3) - (4)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 644:
#line 1107 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(2) - (2)].boolean);
					n->is_rowsfrom = false;
					n->functions = list_make1(list_make2((yyvsp[(1) - (2)].node), NIL));
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 645:
#line 1118 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(6) - (6)].boolean);
					n->is_rowsfrom = true;
					n->functions = (yyvsp[(4) - (6)].list);
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 646:
#line 1131 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 647:
#line 1135 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 648:
#line 1136 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 649:
#line 1139 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 650:
#line 1140 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 651:
#line 1143 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 652:
#line 1144 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 653:
#line 1149 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 654:
#line 1150 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 655:
#line 1156 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 656:
#line 1160 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 657:
#line 1166 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (3)].str);
					n->typeName = (yyvsp[(2) - (3)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collClause = (PGCollateClause *) (yyvsp[(3) - (3)].node);
					n->collOid = InvalidOid;
					n->constraints = NIL;
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 658:
#line 1187 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 659:
#line 1194 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 660:
#line 1207 "third_party/libpg_query/grammar/statements/select.y"
    {
             (yyval.list) = list_make1(list_make2(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].typnam)));
            ;}
    break;

  case 661:
#line 1210 "third_party/libpg_query/grammar/statements/select.y"
    {
             (yyval.list) = lappend((yyvsp[(1) - (4)].list), list_make2(makeString((yyvsp[(3) - (4)].str)), (yyvsp[(4) - (4)].typnam)));
            ;}
    break;

  case 664:
#line 1217 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 665:
#line 1222 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->setof = true;
				;}
    break;

  case 666:
#line 1229 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (5)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(4) - (5)].ival)));
				;}
    break;

  case 667:
#line 1234 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (6)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(5) - (6)].ival)));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 668:
#line 1240 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
				;}
    break;

  case 669:
#line 1245 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 670:
#line 1250 "third_party/libpg_query/grammar/statements/select.y"
    {
               (yyval.typnam) = SystemTypeName("struct");
               (yyval.typnam)->arrayBounds = (yyvsp[(5) - (5)].list);
               (yyval.typnam)->typmods = (yyvsp[(3) - (5)].list);
               (yyval.typnam)->location = (yylsp[(1) - (5)]);
               ;}
    break;

  case 671:
#line 1256 "third_party/libpg_query/grammar/statements/select.y"
    {
               (yyval.typnam) = SystemTypeName("map");
               (yyval.typnam)->arrayBounds = (yyvsp[(5) - (5)].list);
               (yyval.typnam)->typmods = (yyvsp[(3) - (5)].list);
               (yyval.typnam)->location = (yylsp[(1) - (5)]);
			;}
    break;

  case 672:
#line 1266 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeInteger(-1)); ;}
    break;

  case 673:
#line 1268 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (4)].list), makeInteger((yyvsp[(3) - (4)].ival))); ;}
    break;

  case 674:
#line 1270 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = NIL; ;}
    break;

  case 675:
#line 1274 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 676:
#line 1275 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 677:
#line 1276 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 678:
#line 1277 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 679:
#line 1278 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 680:
#line 1280 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 681:
#line 1285 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (4)].typnam);
					(yyval.typnam)->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											 makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
				;}
    break;

  case 682:
#line 1304 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 683:
#line 1305 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 684:
#line 1306 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 685:
#line 1307 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 686:
#line 1319 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = makeTypeName((yyvsp[(1) - (2)].str));
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 687:
#line 1332 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 688:
#line 1333 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 689:
#line 1340 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 690:
#line 1345 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 691:
#line 1350 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int2");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 692:
#line 1355 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int8");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 693:
#line 1360 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 694:
#line 1365 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (2)].typnam);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 695:
#line 1370 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float8");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 696:
#line 1375 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 697:
#line 1381 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 698:
#line 1387 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 699:
#line 1393 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("bool");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 700:
#line 1400 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Check FLOAT() precision limits assuming IEEE floating
					 * types - thomas 1997-09-18
					 */
					if ((yyvsp[(2) - (3)].ival) < 1)
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be at least 1 bit"),
								 parser_errposition((yylsp[(2) - (3)]))));
					else if ((yyvsp[(2) - (3)].ival) <= 24)
						(yyval.typnam) = SystemTypeName("float4");
					else if ((yyvsp[(2) - (3)].ival) <= 53)
						(yyval.typnam) = SystemTypeName("float8");
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be less than 54 bits"),
								 parser_errposition((yylsp[(2) - (3)]))));
				;}
    break;

  case 701:
#line 1421 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
				;}
    break;

  case 702:
#line 1431 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 703:
#line 1435 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 704:
#line 1443 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 705:
#line 1447 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 706:
#line 1455 "third_party/libpg_query/grammar/statements/select.y"
    {
					const char *typname;

					typname = (yyvsp[(2) - (5)].boolean) ? "varbit" : "bit";
					(yyval.typnam) = SystemTypeName(typname);
					(yyval.typnam)->typmods = (yyvsp[(4) - (5)].list);
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 707:
#line 1467 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* bit defaults to bit(1), varbit to no limit */
					if ((yyvsp[(2) - (2)].boolean))
					{
						(yyval.typnam) = SystemTypeName("varbit");
					}
					else
					{
						(yyval.typnam) = SystemTypeName("bit");
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					}
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 708:
#line 1488 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 709:
#line 1492 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 710:
#line 1498 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 711:
#line 1502 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Length was not specified so allow to be unrestricted.
					 * This handles problems with fixed-length (bpchar) strings
					 * which in column definitions must default to a length
					 * of one, but should not be constrained if the length
					 * was not specified.
					 */
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 712:
#line 1515 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (4)].conststr));
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 713:
#line 1523 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (1)].conststr));
					/* char defaults to char(1), varchar to no limit */
					if (strcmp((yyvsp[(1) - (1)].conststr), "bpchar") == 0)
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 714:
#line 1533 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 715:
#line 1535 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 716:
#line 1537 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "varchar"; ;}
    break;

  case 717:
#line 1539 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 718:
#line 1541 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 719:
#line 1543 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 720:
#line 1547 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 721:
#line 1548 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 722:
#line 1556 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 723:
#line 1565 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 724:
#line 1573 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 725:
#line 1582 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 726:
#line 1593 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("interval");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 727:
#line 1600 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 728:
#line 1601 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 729:
#line 1602 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 746:
#line 1631 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR), (yylsp[(1) - (1)]))); ;}
    break;

  case 747:
#line 1633 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MONTH), (yylsp[(1) - (1)]))); ;}
    break;

  case 748:
#line 1635 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY), (yylsp[(1) - (1)]))); ;}
    break;

  case 749:
#line 1637 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR), (yylsp[(1) - (1)]))); ;}
    break;

  case 750:
#line 1639 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE), (yylsp[(1) - (1)]))); ;}
    break;

  case 751:
#line 1641 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 752:
#line 1643 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MILLISECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 753:
#line 1645 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MICROSECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 754:
#line 1647 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR) |
												 INTERVAL_MASK(MONTH), (yylsp[(1) - (3)])));
				;}
    break;

  case 755:
#line 1652 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR), (yylsp[(1) - (3)])));
				;}
    break;

  case 756:
#line 1657 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 757:
#line 1663 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 758:
#line 1670 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 759:
#line 1675 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 760:
#line 1681 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 761:
#line 1686 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 762:
#line 1717 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 763:
#line 1720 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), 0, (yylsp[(2) - (3)])); ;}
    break;

  case 764:
#line 1722 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = (yyvsp[(1) - (3)].node);
					n->collname = (yyvsp[(3) - (3)].list);
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 765:
#line 1730 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("timezone"),
											   list_make2((yyvsp[(5) - (5)].node), (yyvsp[(1) - (5)].node)),
											   (yylsp[(2) - (5)]));
				;}
    break;

  case 766:
#line 1745 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 767:
#line 1747 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 768:
#line 1749 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 769:
#line 1751 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 770:
#line 1753 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 771:
#line 1755 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 772:
#line 1757 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 773:
#line 1759 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 774:
#line 1761 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "**", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 775:
#line 1763 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 776:
#line 1765 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 777:
#line 1767 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 778:
#line 1769 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 779:
#line 1771 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 780:
#line 1773 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 781:
#line 1776 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 782:
#line 1778 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 783:
#line 1780 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 784:
#line 1783 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeAndExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 785:
#line 1785 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeOrExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 786:
#line 1787 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 787:
#line 1789 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 788:
#line 1792 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_GLOB, "~~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 789:
#line 1797 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 790:
#line 1802 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make3((yyvsp[(1) - (5)].node), (yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 791:
#line 1809 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "!~~",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 792:
#line 1814 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make3((yyvsp[(1) - (6)].node), (yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 793:
#line 1821 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 794:
#line 1826 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("ilike_escape"),
											   list_make3((yyvsp[(1) - (5)].node), (yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 795:
#line 1833 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 796:
#line 1838 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_ilike_escape"),
											   list_make3((yyvsp[(1) - (6)].node), (yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 797:
#line 1846 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (4)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (4)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (4)].node), (PGNode *) n, (yylsp[(2) - (4)]));
				;}
    break;

  case 798:
#line 1854 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 799:
#line 1862 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (5)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 800:
#line 1870 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
											   (yylsp[(2) - (7)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (7)].node), (PGNode *) n, (yylsp[(2) - (7)]));
				;}
    break;

  case 801:
#line 1888 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 802:
#line 1896 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 803:
#line 1904 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 804:
#line 1912 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 805:
#line 1920 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 806:
#line 1927 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("row"), (yyvsp[(1) - (1)].list), (yylsp[(1) - (1)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 807:
#line 1931 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("struct_pack"), (yyvsp[(2) - (3)].list), (yylsp[(2) - (3)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 808:
#line 1935 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("list_value"), (yyvsp[(2) - (3)].list), (yylsp[(2) - (3)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 809:
#line 1940 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGLambdaFunction *n = makeNode(PGLambdaFunction);
				n->lhs = (yyvsp[(1) - (3)].node);
				n->rhs = (yyvsp[(3) - (3)].node);
				n->location = (yylsp[(2) - (3)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 810:
#line 1948 "third_party/libpg_query/grammar/statements/select.y"
    {
					if (list_length((yyvsp[(1) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on left side of OVERLAPS expression"),
								 parser_errposition((yylsp[(1) - (3)]))));
					if (list_length((yyvsp[(3) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on right side of OVERLAPS expression"),
								 parser_errposition((yylsp[(3) - (3)]))));
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlaps"),
											   list_concat((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)),
											   (yylsp[(2) - (3)]));
				;}
    break;

  case 811:
#line 1964 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = PG_IS_TRUE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 812:
#line 1972 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_TRUE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 813:
#line 1980 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_FALSE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 814:
#line 1988 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_FALSE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 815:
#line 1996 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_UNKNOWN;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 816:
#line 2004 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_UNKNOWN;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 817:
#line 2012 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 818:
#line 2016 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 819:
#line 2020 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 820:
#line 2024 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 821:
#line 2028 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN,
												   "BETWEEN",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 822:
#line 2036 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN,
												   "NOT BETWEEN",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 823:
#line 2044 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN_SYM,
												   "BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 824:
#line 2052 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN_SYM,
												   "NOT BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 825:
#line 2060 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(3) - (3)].node), PGSubLink))
					{
						/* generate foo = ANY (subquery) */
						PGSubLink *n = (PGSubLink *) (yyvsp[(3) - (3)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (3)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (3)]);
						(yyval.node) = (PGNode *)n;
					}
					else
					{
						/* generate scalar IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
					}
				;}
    break;

  case 826:
#line 2080 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(4) - (4)].node), PGSubLink))
					{
						/* generate NOT (foo = ANY (subquery)) */
						/* Make an = ANY node */
						PGSubLink *n = (PGSubLink *) (yyvsp[(4) - (4)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (4)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (4)]);
						/* Stick a NOT on top; must have same parse location */
						(yyval.node) = makeNotExpr((PGNode *) n, (yylsp[(2) - (4)]));
					}
					else
					{
						/* generate scalar NOT IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "<>", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
					}
				;}
    break;

  case 827:
#line 2102 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = (yyvsp[(3) - (4)].subquerytype);
					n->subLinkId = 0;
					n->testexpr = (yyvsp[(1) - (4)].node);
					n->operName = (yyvsp[(2) - (4)].list);
					n->subselect = (yyvsp[(4) - (4)].node);
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 828:
#line 2113 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(3) - (6)].subquerytype) == PG_ANY_SUBLINK)
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ANY, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
					else
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ALL, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 829:
#line 2120 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * The SQL spec only allows DEFAULT in "contextually typed
					 * expressions", but for us, it's easier to allow it in
					 * any a_expr and then throw error during parse analysis
					 * if it's in an inappropriate context.  This way also
					 * lets us say something smarter than "syntax error".
					 */
					PGSetToDefault *n = makeNode(PGSetToDefault);
					/* parse analysis will fill in the rest */
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 830:
#line 2133 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGList *func_name = list_make1(makeString("construct_array"));
				PGFuncCall *n = makeFuncCall(func_name, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 831:
#line 2150 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 832:
#line 2152 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), 0, (yylsp[(2) - (3)])); ;}
    break;

  case 833:
#line 2154 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 834:
#line 2156 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 835:
#line 2158 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 836:
#line 2160 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 837:
#line 2162 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 838:
#line 2164 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 839:
#line 2166 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 840:
#line 2168 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 841:
#line 2170 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "**", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 842:
#line 2172 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 843:
#line 2174 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 844:
#line 2176 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 845:
#line 2178 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 846:
#line 2180 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 847:
#line 2182 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 848:
#line 2184 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 849:
#line 2186 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 850:
#line 2188 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 851:
#line 2190 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 852:
#line 2194 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 853:
#line 2198 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 854:
#line 2202 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 855:
#line 2215 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 856:
#line 2216 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 857:
#line 2218 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGPositionalReference *n = makeNode(PGPositionalReference);
					n->position = (yyvsp[(2) - (2)].ival);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 858:
#line 2225 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeParamRef(0, (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeParamRef(0, (yylsp[(1) - (2)]));
				;}
    break;

  case 859:
#line 2237 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGParamRef *p = makeNode(PGParamRef);
					p->number = (yyvsp[(1) - (2)].ival);
					p->location = (yylsp[(1) - (2)]);
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (PGNode *) p;
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = (PGNode *) p;
				;}
    break;

  case 860:
#line 2252 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(4) - (4)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(2) - (4)].node);
						n->indirection = check_indirection((yyvsp[(4) - (4)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else
						(yyval.node) = (yyvsp[(2) - (4)].node);
				;}
    break;

  case 861:
#line 2264 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 862:
#line 2266 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list)) {
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(1) - (2)].node);
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else {
						(yyval.node) = (yyvsp[(1) - (2)].node);
					}
				;}
    break;

  case 863:
#line 2278 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (1)].node);
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 864:
#line 2289 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Because the select_with_parens nonterminal is designed
					 * to "eat" as many levels of parens as possible, the
					 * '(' a_expr ')' opt_indirection production above will
					 * fail to match a sub-SELECT with indirection decoration;
					 * the sub-SELECT won't be regarded as an a_expr as long
					 * as there are parens around it.  To support applying
					 * subscripting or field selection to a sub-SELECT result,
					 * we need this redundant-looking production.
					 */
					PGSubLink *n = makeNode(PGSubLink);
					PGAIndirection *a = makeNode(PGAIndirection);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					a->arg = (PGNode *)n;
					a->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.node) = (PGNode *)a;
				;}
    break;

  case 865:
#line 2313 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXISTS_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(2) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 866:
#line 2324 "third_party/libpg_query/grammar/statements/select.y"
    {
				  PGGroupingFunc *g = makeNode(PGGroupingFunc);
				  g->args = (yyvsp[(3) - (4)].list);
				  g->location = (yylsp[(1) - (4)]);
				  (yyval.node) = (PGNode *)g;
			  ;}
    break;

  case 867:
#line 2333 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall((yyvsp[(1) - (3)].list), NIL, (yylsp[(1) - (3)]));
				;}
    break;

  case 868:
#line 2337 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(3) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(4) - (6)].list);
					n->agg_ignore_nulls = (yyvsp[(5) - (6)].boolean);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 869:
#line 2344 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (7)].list), list_make1((yyvsp[(4) - (7)].node)), (yylsp[(1) - (7)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(5) - (7)].list);
					n->agg_ignore_nulls = (yyvsp[(6) - (7)].boolean);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 870:
#line 2352 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (9)].list), lappend((yyvsp[(3) - (9)].list), (yyvsp[(6) - (9)].node)), (yylsp[(1) - (9)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(7) - (9)].list);
					n->agg_ignore_nulls = (yyvsp[(8) - (9)].boolean);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 871:
#line 2360 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (7)].list), (yyvsp[(4) - (7)].list), (yylsp[(1) - (7)]));
					n->agg_order = (yyvsp[(5) - (7)].list);
					n->agg_ignore_nulls = (yyvsp[(6) - (7)].boolean);
					/* Ideally we'd mark the PGFuncCall node to indicate
					 * "must be an aggregate", but there's no provision
					 * for that in PGFuncCall at the moment.
					 */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 872:
#line 2371 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (7)].list), (yyvsp[(4) - (7)].list), (yylsp[(1) - (7)]));
					n->agg_order = (yyvsp[(5) - (7)].list);
					n->agg_ignore_nulls = (yyvsp[(6) - (7)].boolean);
					n->agg_distinct = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 873:
#line 2379 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * We consider AGGREGATE(*) to invoke a parameterless
					 * aggregate.  This does the right thing for COUNT(*),
					 * and there are no other aggregates in SQL that accept
					 * '*' as parameter.
					 *
					 * The PGFuncCall node is also marked agg_star = true,
					 * so that later processing can detect what the argument
					 * really was.
					 */
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (4)].list), NIL, (yylsp[(1) - (4)]));
					n->agg_star = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 874:
#line 2407 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = (PGFuncCall *) (yyvsp[(1) - (5)].node);
					/*
					 * The order clause for WITHIN GROUP and the one for
					 * plain-aggregate ORDER BY share a field, so we have to
					 * check here that at most one is present.  We also check
					 * for DISTINCT and VARIADIC here to give a better error
					 * location.  Other consistency checks are deferred to
					 * parse analysis.
					 */
					if ((yyvsp[(2) - (5)].list) != NIL)
					{
						if (n->agg_order != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use multiple ORDER BY clauses with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (5)]))));
						if (n->agg_distinct)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use DISTINCT with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (5)]))));
						if (n->func_variadic)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use VARIADIC with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (5)]))));
						n->agg_order = (yyvsp[(2) - (5)].list);
						n->agg_within_group = true;
					}
					n->agg_filter = (yyvsp[(3) - (5)].node);
					n->export_state = (yyvsp[(4) - (5)].boolean);
					n->over = (yyvsp[(5) - (5)].windef);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 875:
#line 2443 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 876:
#line 2453 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 877:
#line 2454 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 878:
#line 2462 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("pg_collation_for"),
											   list_make1((yyvsp[(4) - (5)].node)),
											   (yylsp[(1) - (5)]));
				;}
    break;

  case 879:
#line 2468 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_DATE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 880:
#line 2472 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 881:
#line 2476 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 882:
#line 2480 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 883:
#line 2484 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 884:
#line 2488 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 885:
#line 2492 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 886:
#line 2496 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 887:
#line 2500 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 888:
#line 2504 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_ROLE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 889:
#line 2508 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 890:
#line 2512 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_SESSION_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 891:
#line 2516 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 892:
#line 2520 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_CATALOG, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 893:
#line 2524 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_SCHEMA, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 894:
#line 2528 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), 0, (yylsp[(1) - (6)])); ;}
    break;

  case 895:
#line 2530 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), 1, (yylsp[(1) - (6)])); ;}
    break;

  case 896:
#line 2532 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("date_part"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 897:
#line 2536 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* overlay(A PLACING B FROM C FOR D) is converted to
					 * overlay(A, B, C, D)
					 * overlay(A PLACING B FROM C) is converted to
					 * overlay(A, B, C)
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlay"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 898:
#line 2545 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* position(A in B) is converted to position(B, A) */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("position"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 899:
#line 2550 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* substring(A from B for C) is converted to
					 * substring(A, B, C) - thomas 2000-11-28
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("substring"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 900:
#line 2557 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* TREAT(expr AS target) converts expr of a particular type to target,
					 * which is defined to be a subtype of the original expression.
					 * In SQL99, this is intended for use with structured UDTs,
					 * but let's make this a generally useful form allowing stronger
					 * coercions than are handled by implicit casting.
					 *
					 * Convert SystemTypeName() to SystemFuncName() even though
					 * at the moment they result in the same thing.
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName(((PGValue *)llast((yyvsp[(5) - (6)].typnam)->names))->val.str),
												list_make1((yyvsp[(3) - (6)].node)),
												(yylsp[(1) - (6)]));
				;}
    break;

  case 901:
#line 2572 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* various trim expressions are defined in SQL
					 * - thomas 1997-07-19
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 902:
#line 2579 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("ltrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 903:
#line 2583 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("rtrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 904:
#line 2587 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 905:
#line 2591 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NULLIF, "=", (yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(1) - (6)]));
				;}
    break;

  case 906:
#line 2595 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCoalesceExpr *c = makeNode(PGCoalesceExpr);
					c->args = (yyvsp[(3) - (4)].list);
					c->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 907:
#line 2608 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 908:
#line 2609 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 909:
#line 2613 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(4) - (5)].node); ;}
    break;

  case 910:
#line 2614 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 911:
#line 2618 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 912:
#line 2619 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 913:
#line 2626 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 914:
#line 2627 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 915:
#line 2631 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].windef)); ;}
    break;

  case 916:
#line 2633 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].windef)); ;}
    break;

  case 917:
#line 2638 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(3) - (3)].windef);
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.windef) = n;
				;}
    break;

  case 918:
#line 2646 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = (yyvsp[(2) - (2)].windef); ;}
    break;

  case 919:
#line 2648 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = (yyvsp[(2) - (2)].str);
					n->refname = NULL;
					n->partitionClause = NIL;
					n->orderClause = NIL;
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.windef) = n;
				;}
    break;

  case 920:
#line 2661 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = NULL; ;}
    break;

  case 921:
#line 2666 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = NULL;
					n->refname = (yyvsp[(2) - (6)].str);
					n->partitionClause = (yyvsp[(3) - (6)].list);
					n->orderClause = (yyvsp[(4) - (6)].list);
					/* copy relevant fields of opt_frame_clause */
					n->frameOptions = (yyvsp[(5) - (6)].windef)->frameOptions;
					n->startOffset = (yyvsp[(5) - (6)].windef)->startOffset;
					n->endOffset = (yyvsp[(5) - (6)].windef)->endOffset;
					n->location = (yylsp[(1) - (6)]);
					(yyval.windef) = n;
				;}
    break;

  case 922:
#line 2691 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 923:
#line 2692 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 924:
#line 2695 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 925:
#line 2696 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 926:
#line 2708 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_RANGE;
					(yyval.windef) = n;
				;}
    break;

  case 927:
#line 2714 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_ROWS;
					(yyval.windef) = n;
				;}
    break;

  case 928:
#line 2720 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 929:
#line 2730 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(1) - (1)].windef);
					/* reject invalid cases */
					if (n->frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(1) - (1)]))));
					if (n->frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot end with current row"),
								 parser_errposition((yylsp[(1) - (1)]))));
					n->frameOptions |= FRAMEOPTION_END_CURRENT_ROW;
					(yyval.windef) = n;
				;}
    break;

  case 930:
#line 2747 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n1 = (yyvsp[(2) - (4)].windef);
					PGWindowDef *n2 = (yyvsp[(4) - (4)].windef);
					/* form merged options */
					int		frameOptions = n1->frameOptions;
					/* shift converts START_ options to END_ options */
					frameOptions |= n2->frameOptions << 1;
					frameOptions |= FRAMEOPTION_BETWEEN;
					/* reject invalid cases */
					if (frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(2) - (4)]))));
					if (frameOptions & FRAMEOPTION_END_UNBOUNDED_PRECEDING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame end cannot be UNBOUNDED PRECEDING"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_CURRENT_ROW) &&
						(frameOptions & FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from current row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING) &&
						(frameOptions & (FRAMEOPTION_END_VALUE_PRECEDING |
										 FRAMEOPTION_END_CURRENT_ROW)))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					n1->frameOptions = frameOptions;
					n1->endOffset = n2->startOffset;
					(yyval.windef) = n1;
				;}
    break;

  case 931:
#line 2792 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_PRECEDING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 932:
#line 2800 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_FOLLOWING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 933:
#line 2808 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_CURRENT_ROW;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 934:
#line 2816 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_PRECEDING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 935:
#line 2824 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_FOLLOWING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 936:
#line 2844 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 937:
#line 2845 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 938:
#line 2848 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 939:
#line 2849 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(2) - (5)].list), (yyvsp[(4) - (5)].node)); ;}
    break;

  case 940:
#line 2853 "third_party/libpg_query/grammar/statements/select.y"
    {
		PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
		na->name = (yyvsp[(1) - (3)].str);
		na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
		na->argnumber = -1;
		na->location = (yylsp[(1) - (3)]);
		(yyval.node) = (PGNode *) na;
	;}
    break;

  case 941:
#line 2863 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 942:
#line 2864 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 943:
#line 2868 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 944:
#line 2869 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 945:
#line 2873 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 946:
#line 2874 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 947:
#line 2875 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ALL_SUBLINK; ;}
    break;

  case 948:
#line 2878 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 949:
#line 2879 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) (yyvsp[(1) - (1)].conststr); ;}
    break;

  case 950:
#line 2882 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "+"; ;}
    break;

  case 951:
#line 2883 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "-"; ;}
    break;

  case 952:
#line 2884 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "*"; ;}
    break;

  case 953:
#line 2885 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "/"; ;}
    break;

  case 954:
#line 2886 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "%"; ;}
    break;

  case 955:
#line 2887 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "^"; ;}
    break;

  case 956:
#line 2888 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "**"; ;}
    break;

  case 957:
#line 2889 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<"; ;}
    break;

  case 958:
#line 2890 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">"; ;}
    break;

  case 959:
#line 2891 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "="; ;}
    break;

  case 960:
#line 2892 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<="; ;}
    break;

  case 961:
#line 2893 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">="; ;}
    break;

  case 962:
#line 2894 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<>"; ;}
    break;

  case 963:
#line 2898 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 964:
#line 2900 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 965:
#line 2905 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 966:
#line 2907 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 967:
#line 2912 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 968:
#line 2914 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 969:
#line 2916 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~")); ;}
    break;

  case 970:
#line 2918 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~")); ;}
    break;

  case 971:
#line 2920 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~~")); ;}
    break;

  case 972:
#line 2922 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~~")); ;}
    break;

  case 973:
#line 2924 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~*")); ;}
    break;

  case 974:
#line 2926 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~*")); ;}
    break;

  case 975:
#line 2940 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 976:
#line 2942 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 977:
#line 2946 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 978:
#line 2950 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 979:
#line 2957 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 980:
#line 2962 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (2)].list);
				;}
    break;

  case 981:
#line 2980 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 982:
#line 2984 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = NULL;
				;}
    break;

  case 983:
#line 2993 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 984:
#line 2997 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 985:
#line 3003 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 986:
#line 3007 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 987:
#line 3016 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 988:
#line 3026 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 989:
#line 3027 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 990:
#line 3032 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(makeStringConst((yyvsp[(1) - (3)].str), (yylsp[(1) - (3)])), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 991:
#line 3035 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 992:
#line 3042 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 993:
#line 3043 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "year"; ;}
    break;

  case 994:
#line 3044 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "month"; ;}
    break;

  case 995:
#line 3045 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "day"; ;}
    break;

  case 996:
#line 3046 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "hour"; ;}
    break;

  case 997:
#line 3047 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "minute"; ;}
    break;

  case 998:
#line 3048 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "second"; ;}
    break;

  case 999:
#line 3049 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "millisecond"; ;}
    break;

  case 1000:
#line 3050 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "microsecond"; ;}
    break;

  case 1001:
#line 3051 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1002:
#line 3062 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make4((yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].node), (yyvsp[(3) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 1003:
#line 3066 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 1004:
#line 3073 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1005:
#line 3079 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(3) - (3)].node), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 1006:
#line 3080 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1007:
#line 3097 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 1008:
#line 3101 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* not legal per SQL99, but might as well allow it */
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yyvsp[(2) - (3)].node));
				;}
    break;

  case 1009:
#line 3106 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 1010:
#line 3110 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Since there are no cases where this syntax allows
					 * a textual FOR value, we forcibly cast the argument
					 * to int4.  The possible matches in pg_proc are
					 * substring(text,int4) and substring(text,text),
					 * and we don't want the parser to choose the latter,
					 * which it is likely to do if the second argument
					 * is unknown or doesn't have an implicit cast to int4.
					 */
					(yyval.list) = list_make3((yyvsp[(1) - (2)].node), makeIntConst(1, -1),
									makeTypeCast((yyvsp[(2) - (2)].node),
												 SystemTypeName("int4"), 0, -1));
				;}
    break;

  case 1011:
#line 3125 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 1012:
#line 3129 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1013:
#line 3133 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1014:
#line 3136 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1015:
#line 3139 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(3) - (3)].list), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 1016:
#line 3140 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1017:
#line 3141 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1018:
#line 3145 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subselect = (yyvsp[(1) - (1)].node);
					/* other fields will be filled later */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1019:
#line 3151 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *)(yyvsp[(2) - (3)].list); ;}
    break;

  case 1020:
#line 3162 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseExpr *c = makeNode(PGCaseExpr);
					c->casetype = InvalidOid; /* not analyzed yet */
					c->arg = (PGExpr *) (yyvsp[(2) - (5)].node);
					c->args = (yyvsp[(3) - (5)].list);
					c->defresult = (PGExpr *) (yyvsp[(4) - (5)].node);
					c->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 1021:
#line 3175 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1022:
#line 3176 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 1023:
#line 3181 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseWhen *w = makeNode(PGCaseWhen);
					w->expr = (PGExpr *) (yyvsp[(2) - (4)].node);
					w->result = (PGExpr *) (yyvsp[(4) - (4)].node);
					w->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)w;
				;}
    break;

  case 1024:
#line 3191 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1025:
#line 3192 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1026:
#line 3195 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 1027:
#line 3196 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1028:
#line 3200 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (1)].str), NIL, (yylsp[(1) - (1)]), yyscanner);
				;}
    break;

  case 1029:
#line 3204 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].list), (yylsp[(1) - (2)]), yyscanner);
				;}
    break;

  case 1030:
#line 3211 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(2) - (2)].str));
				;}
    break;

  case 1031:
#line 3215 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = false;
					ai->lidx = NULL;
					ai->uidx = (yyvsp[(2) - (3)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 1032:
#line 3223 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = true;
					ai->lidx = (yyvsp[(2) - (5)].node);
					ai->uidx = (yyvsp[(4) - (5)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 1033:
#line 3233 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 1034:
#line 3234 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1035:
#line 3238 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1036:
#line 3239 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 1037:
#line 3243 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1038:
#line 3244 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 1041:
#line 3258 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1042:
#line 3259 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1043:
#line 3263 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 1044:
#line 3264 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 1045:
#line 3268 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1046:
#line 3269 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 1047:
#line 3273 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(3) - (3)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (3)].node);
					(yyval.target)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 1048:
#line 3289 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(2) - (2)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (2)].node);
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 1049:
#line 3297 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (1)].node);
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 1050:
#line 3305 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnRef *n = makeNode(PGColumnRef);
					PGAStar *star = makeNode(PGAStar);
					n->fields = list_make1(star);
					n->location = (yylsp[(1) - (3)]);
					star->except_list = (yyvsp[(2) - (3)].list);
					star->replace_list = (yyvsp[(3) - (3)].list);

					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)n;
					(yyval.target)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 1051:
#line 3320 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnRef *n = makeNode(PGColumnRef);
					PGAStar *star = makeNode(PGAStar);
					n->fields = list_make1(star);
					n->location = (yylsp[(1) - (5)]);
					star->relation = (yyvsp[(1) - (5)].str);
					star->except_list = (yyvsp[(4) - (5)].list);
					star->replace_list = (yyvsp[(5) - (5)].list);

					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)n;
					(yyval.target)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 1052:
#line 3337 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 1053:
#line 3338 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
    break;

  case 1054:
#line 3341 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1055:
#line 3342 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NULL; ;}
    break;

  case 1056:
#line 3345 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (3)].node), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1057:
#line 3349 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 1058:
#line 3350 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 1059:
#line 3354 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1060:
#line 3355 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 1061:
#line 3358 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 1062:
#line 3359 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(2) - (2)].list)); ;}
    break;

  case 1063:
#line 3360 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NULL; ;}
    break;

  case 1064:
#line 3370 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].range)); ;}
    break;

  case 1065:
#line 3371 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].range)); ;}
    break;

  case 1066:
#line 3383 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = makeRangeVar(NULL, (yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1067:
#line 3387 "third_party/libpg_query/grammar/statements/select.y"
    {
					check_qualified_name((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.range) = makeRangeVar(NULL, NULL, (yylsp[(1) - (2)]));
					switch (list_length((yyvsp[(2) - (2)].list)))
					{
						case 1:
							(yyval.range)->catalogname = NULL;
							(yyval.range)->schemaname = (yyvsp[(1) - (2)].str);
							(yyval.range)->relname = strVal(linitial((yyvsp[(2) - (2)].list)));
							break;
						case 2:
							(yyval.range)->catalogname = (yyvsp[(1) - (2)].str);
							(yyval.range)->schemaname = strVal(linitial((yyvsp[(2) - (2)].list)));
							(yyval.range)->relname = strVal(lsecond((yyvsp[(2) - (2)].list)));
							break;
						default:
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("improper qualified name (too many dotted names): %s",
											NameListToString(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)))),
									 parser_errposition((yylsp[(1) - (2)]))));
							break;
					}
				;}
    break;

  case 1068:
#line 3414 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1069:
#line 3416 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1070:
#line 3421 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1071:
#line 3422 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 1072:
#line 3425 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1073:
#line 3427 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1074:
#line 3438 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1075:
#line 3441 "third_party/libpg_query/grammar/statements/select.y"
    {
						(yyval.list) = check_func_name(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)),
											 yyscanner);
					;}
    break;

  case 1076:
#line 3452 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival), (yylsp[(1) - (1)]));
				;}
    break;

  case 1077:
#line 3456 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1078:
#line 3460 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeStringConst((yyvsp[(1) - (2)].str), (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeStringConst((yyvsp[(1) - (2)].str), (yylsp[(1) - (2)]));
				;}
    break;

  case 1079:
#line 3472 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1080:
#line 3476 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* This is a bit constant per SQL99:
					 * Without Feature F511, "BIT data type",
					 * a <general literal> shall not be a
					 * <bit string literal> or a <hex string literal>.
					 */
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1081:
#line 3485 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic type 'literal' syntax */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (2)].list));
					t->location = (yylsp[(1) - (2)]);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), t);
				;}
    break;

  case 1082:
#line 3492 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic syntax with a type modifier */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (7)].list));
					PGListCell *lc;

					/*
					 * We must use func_arg_list and opt_sort_clause in the
					 * production to avoid reduce/reduce conflicts, but we
					 * don't actually wish to allow PGNamedArgExpr in this
					 * context, ORDER BY, nor IGNORE NULLS.
					 */
					foreach(lc, (yyvsp[(3) - (7)].list))
					{
						PGNamedArgExpr *arg = (PGNamedArgExpr *) lfirst(lc);

						if (IsA(arg, PGNamedArgExpr))
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have parameter name"),
									 parser_errposition(arg->location)));
					}
					if ((yyvsp[(4) - (7)].list) != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have ORDER BY"),
									 parser_errposition((yylsp[(4) - (7)]))));
					if ((yyvsp[(5) - (7)].boolean) != false)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have IGNORE NULLS"),
									 parser_errposition((yylsp[(5) - (7)]))));


					t->typmods = (yyvsp[(3) - (7)].list);
					t->location = (yylsp[(1) - (7)]);
					(yyval.node) = makeStringConstCast((yyvsp[(7) - (7)].str), (yylsp[(7) - (7)]), t);
				;}
    break;

  case 1083:
#line 3530 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), (yyvsp[(1) - (2)].typnam));
				;}
    break;

  case 1084:
#line 3534 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(3) - (5)].node), (yylsp[(3) - (5)]), (yyvsp[(5) - (5)].list));
				;}
    break;

  case 1085:
#line 3538 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].ival), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 1086:
#line 3542 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 1087:
#line 3546 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(true, (yylsp[(1) - (1)]));
				;}
    break;

  case 1088:
#line 3550 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(false, (yylsp[(1) - (1)]));
				;}
    break;

  case 1089:
#line 3554 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 1090:
#line 3559 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1091:
#line 3560 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1092:
#line 3576 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1093:
#line 3577 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1094:
#line 3578 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1095:
#line 3581 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1096:
#line 3582 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1097:
#line 3588 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1098:
#line 3589 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1099:
#line 3590 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1100:
#line 3593 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1101:
#line 3594 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1102:
#line 3595 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1103:
#line 3598 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1104:
#line 3599 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1105:
#line 3600 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1106:
#line 3603 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1107:
#line 3604 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 1108:
#line 3608 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
    break;

  case 1109:
#line 3610 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1110:
#line 3614 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1111:
#line 3615 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1113:
#line 3626 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1114:
#line 3627 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1115:
#line 3628 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1116:
#line 3629 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1117:
#line 3632 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1118:
#line 3633 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1119:
#line 8 "third_party/libpg_query/grammar/statements/prepare.y"
    {
					PGPrepareStmt *n = makeNode(PGPrepareStmt);
					n->name = (yyvsp[(2) - (5)].str);
					n->argtypes = (yyvsp[(3) - (5)].list);
					n->query = (yyvsp[(5) - (5)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1120:
#line 18 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1121:
#line 19 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1126:
#line 8 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not both */
					n->schemaname = (yyvsp[(3) - (4)].str);
					n->schemaElts = (yyvsp[(4) - (4)].list);
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1127:
#line 17 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not here */
					n->schemaname = (yyvsp[(6) - (7)].str);
					if ((yyvsp[(7) - (7)].list) != NIL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("CREATE SCHEMA IF NOT EXISTS cannot include schema elements"),
								 parser_errposition((yylsp[(7) - (7)]))));
					n->schemaElts = (yyvsp[(7) - (7)].list);
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1128:
#line 35 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					if ((yyloc) < 0)			/* see comments for YYLLOC_DEFAULT */
						(yyloc) = (yylsp[(2) - (2)]);
					(yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 1129:
#line 41 "third_party/libpg_query/grammar/statements/create_schema.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1134:
#line 11 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (13)].boolean);
					n->concurrent = (yyvsp[(4) - (13)].boolean);
					n->idxname = (yyvsp[(5) - (13)].str);
					n->relation = (yyvsp[(7) - (13)].range);
					n->accessMethod = (yyvsp[(8) - (13)].str);
					n->indexParams = (yyvsp[(10) - (13)].list);
					n->options = (yyvsp[(12) - (13)].list);
					n->whereClause = (yyvsp[(13) - (13)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1135:
#line 36 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (16)].boolean);
					n->concurrent = (yyvsp[(4) - (16)].boolean);
					n->idxname = (yyvsp[(8) - (16)].str);
					n->relation = (yyvsp[(10) - (16)].range);
					n->accessMethod = (yyvsp[(11) - (16)].str);
					n->indexParams = (yyvsp[(13) - (16)].list);
					n->options = (yyvsp[(15) - (16)].list);
					n->whereClause = (yyvsp[(16) - (16)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1136:
#line 62 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1137:
#line 66 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
    break;

  case 1138:
#line 67 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (char*) DEFAULT_INDEX_TYPE; ;}
    break;

  case 1139:
#line 72 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1140:
#line 73 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1141:
#line 78 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1142:
#line 79 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = NULL; ;}
    break;

  case 1143:
#line 83 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1144:
#line 84 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1145:
#line 89 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1146:
#line 90 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1147:
#line 8 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1148:
#line 17 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1149:
#line 26 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1150:
#line 35 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1151:
#line 44 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1152:
#line 53 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1153:
#line 6 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					n->force = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1154:
#line 12 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					n->force = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1155:
#line 8 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGExportStmt *n = makeNode(PGExportStmt);
					n->filename = (yyvsp[(3) - (4)].str);
					n->options = NIL;
					if ((yyvsp[(4) - (4)].list)) {
						n->options = list_concat(n->options, (yyvsp[(4) - (4)].list));
					}
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1156:
#line 21 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGImportStmt *n = makeNode(PGImportStmt);
					n->filename = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1157:
#line 10 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(2) - (2)].node);
					n->options = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1158:
#line 17 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(4) - (4)].node);
					n->options = list_make1(makeDefElem("analyze", NULL, (yylsp[(2) - (4)])));
					if ((yyvsp[(3) - (4)].boolean))
						n->options = lappend(n->options,
											 makeDefElem("verbose", NULL, (yylsp[(3) - (4)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1159:
#line 27 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(3) - (3)].node);
					n->options = list_make1(makeDefElem("verbose", NULL, (yylsp[(2) - (3)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1160:
#line 34 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(5) - (5)].node);
					n->options = (yyvsp[(3) - (5)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1161:
#line 44 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1162:
#line 45 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1163:
#line 50 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 1164:
#line 51 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 1165:
#line 52 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1171:
#line 65 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1172:
#line 66 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1173:
#line 67 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1174:
#line 72 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1175:
#line 73 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1176:
#line 79 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 1177:
#line 83 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 1178:
#line 90 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1179:
#line 91 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1180:
#line 96 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "true"; ;}
    break;

  case 1181:
#line 97 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "false"; ;}
    break;

  case 1182:
#line 98 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "on"; ;}
    break;

  case 1183:
#line 104 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1184:
#line 110 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 1185:
#line 117 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1186:
#line 118 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "analyze"; ;}
    break;

  case 1187:
#line 11 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(2) - (2)].vsetstmt);
					n->scope = VAR_SET_SCOPE_DEFAULT;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1188:
#line 17 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->scope = VAR_SET_SCOPE_LOCAL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1189:
#line 23 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->scope = VAR_SET_SCOPE_SESSION;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1190:
#line 29 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->scope = VAR_SET_SCOPE_GLOBAL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1191:
#line 38 "third_party/libpg_query/grammar/statements/variable_set.y"
    {(yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt);;}
    break;

  case 1192:
#line 40 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_CURRENT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1193:
#line 48 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "timezone";
					if ((yyvsp[(3) - (3)].node) != NULL)
						n->args = list_make1((yyvsp[(3) - (3)].node));
					else
						n->kind = VAR_SET_DEFAULT;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1194:
#line 59 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "search_path";
					n->args = list_make1(makeStringConst((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)])));
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1195:
#line 71 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1196:
#line 79 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1197:
#line 87 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1198:
#line 94 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1199:
#line 104 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)])); ;}
    break;

  case 1200:
#line 106 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1201:
#line 112 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1202:
#line 116 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1203:
#line 120 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (3)].typnam);
					if ((yyvsp[(3) - (3)].list) != NIL)
					{
						PGAConst *n = (PGAConst *) linitial((yyvsp[(3) - (3)].list));
						if ((n->val.val.ival & ~(INTERVAL_MASK(HOUR) | INTERVAL_MASK(MINUTE))) != 0)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("time zone interval must be HOUR or HOUR TO MINUTE"),
									 parser_errposition((yylsp[(3) - (3)]))));
					}
					t->typmods = (yyvsp[(3) - (3)].list);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
				;}
    break;

  case 1204:
#line 135 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (5)].typnam);
					t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.node) = makeStringConstCast((yyvsp[(5) - (5)].str), (yylsp[(5) - (5)]), t);
				;}
    break;

  case 1205:
#line 141 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1206:
#line 142 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1207:
#line 143 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1208:
#line 147 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1209:
#line 148 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 1210:
#line 8 "third_party/libpg_query/grammar/statements/load.y"
    {
					PGLoadStmt *n = makeNode(PGLoadStmt);
					n->filename = (yyvsp[(2) - (2)].str);
					n->load_type = PG_LOAD_TYPE_LOAD;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1211:
#line 14 "third_party/libpg_query/grammar/statements/load.y"
    {
                    PGLoadStmt *n = makeNode(PGLoadStmt);
                    n->filename = (yyvsp[(2) - (2)].str);
                    n->load_type = PG_LOAD_TYPE_INSTALL;
                    (yyval.node) = (PGNode *)n;
				;}
    break;

  case 1212:
#line 20 "third_party/libpg_query/grammar/statements/load.y"
    {
                      PGLoadStmt *n = makeNode(PGLoadStmt);
                      n->filename = (yyvsp[(3) - (3)].str);
                      n->load_type = PG_LOAD_TYPE_FORCE_INSTALL;
                      (yyval.node) = (PGNode *)n;
                ;}
    break;

  case 1213:
#line 28 "third_party/libpg_query/grammar/statements/load.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1214:
#line 29 "third_party/libpg_query/grammar/statements/load.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1215:
#line 9 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (4)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1216:
#line 23 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(5) - (5)].range);
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1217:
#line 37 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = (PGVacuumStmt *) (yyvsp[(5) - (5)].node);
					n->options |= PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1218:
#line 49 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (4)].ival);
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1219:
#line 57 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (6)].ival);
					n->relation = (yyvsp[(5) - (6)].range);
					n->va_cols = (yyvsp[(6) - (6)].list);
					if (n->va_cols != NIL)	/* implies analyze */
						n->options |= PG_VACOPT_ANALYZE;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1220:
#line 70 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_ANALYZE; ;}
    break;

  case 1221:
#line 71 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_VERBOSE; ;}
    break;

  case 1222:
#line 72 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FREEZE; ;}
    break;

  case 1223:
#line 73 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FULL; ;}
    break;

  case 1224:
#line 75 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					if (strcmp((yyvsp[(1) - (1)].str), "disable_page_skipping") == 0)
						(yyval.ival) = PG_VACOPT_DISABLE_PAGE_SKIPPING;
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("unrecognized VACUUM option \"%s\"", (yyvsp[(1) - (1)].str)),
									 parser_errposition((yylsp[(1) - (1)]))));
				;}
    break;

  case 1225:
#line 87 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1226:
#line 88 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1227:
#line 93 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1228:
#line 94 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 1229:
#line 98 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1230:
#line 99 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1231:
#line 9 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGDeleteStmt *n = makeNode(PGDeleteStmt);
					n->relation = (yyvsp[(4) - (7)].range);
					n->usingClause = (yyvsp[(5) - (7)].list);
					n->whereClause = (yyvsp[(6) - (7)].node);
					n->returningList = (yyvsp[(7) - (7)].list);
					n->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1232:
#line 22 "third_party/libpg_query/grammar/statements/delete.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 1233:
#line 26 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(2) - (2)].str);
					(yyvsp[(1) - (2)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (2)].range);
				;}
    break;

  case 1234:
#line 33 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(3) - (3)].str);
					(yyvsp[(1) - (3)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 1235:
#line 43 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1236:
#line 44 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1237:
#line 50 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1238:
#line 51 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1239:
#line 10 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (2)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1240:
#line 20 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(3) - (4)].range);
					n->va_cols = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1241:
#line 2 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (2)].vsetstmt); ;}
    break;

  case 1242:
#line 8 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (yyvsp[(1) - (1)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1243:
#line 15 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET_ALL;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1244:
#line 24 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt); ;}
    break;

  case 1245:
#line 26 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "timezone";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1246:
#line 33 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "transaction_isolation";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1247:
#line 3 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowSelectStmt *n = makeNode(PGVariableShowSelectStmt);
				n->stmt = (yyvsp[(2) - (2)].node);
				n->name = (char*) "select";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1248:
#line 10 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowSelectStmt *n = makeNode(PGVariableShowSelectStmt);
				n->stmt = (yyvsp[(2) - (2)].node);
				n->name = (char*) "select";
				n->is_summary = 1;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1249:
#line 18 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (yyvsp[(2) - (2)].str);
				n->is_summary = 1;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1250:
#line 25 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (yyvsp[(2) - (2)].str);
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1251:
#line 32 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "timezone";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1252:
#line 39 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "transaction_isolation";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1253:
#line 46 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "__show_tables_expanded";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1254:
#line 53 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "__show_tables_expanded";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1257:
#line 63 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1258:
#line 65 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = psprintf("%s.%s", (yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str)); ;}
    break;

  case 1259:
#line 7 "third_party/libpg_query/grammar/statements/call.y"
    {
					PGCallStmt *n = makeNode(PGCallStmt);
					n->func = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1260:
#line 10 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(4) - (9)].range);
					n->view->relpersistence = (yyvsp[(2) - (9)].ival);
					n->aliases = (yyvsp[(5) - (9)].list);
					n->query = (yyvsp[(8) - (9)].node);
					n->onconflict = PG_ERROR_ON_CONFLICT;
					n->options = (yyvsp[(6) - (9)].list);
					n->withCheckOption = (yyvsp[(9) - (9)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1261:
#line 23 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(6) - (11)].range);
					n->view->relpersistence = (yyvsp[(4) - (11)].ival);
					n->aliases = (yyvsp[(7) - (11)].list);
					n->query = (yyvsp[(10) - (11)].node);
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					n->options = (yyvsp[(8) - (11)].list);
					n->withCheckOption = (yyvsp[(11) - (11)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1262:
#line 36 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(5) - (12)].range);
					n->view->relpersistence = (yyvsp[(2) - (12)].ival);
					n->aliases = (yyvsp[(7) - (12)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(11) - (12)].node));
					n->onconflict = PG_ERROR_ON_CONFLICT;
					n->options = (yyvsp[(9) - (12)].list);
					n->withCheckOption = (yyvsp[(12) - (12)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(12) - (12)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1263:
#line 54 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(7) - (14)].range);
					n->view->relpersistence = (yyvsp[(4) - (14)].ival);
					n->aliases = (yyvsp[(9) - (14)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(13) - (14)].node));
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					n->options = (yyvsp[(11) - (14)].list);
					n->withCheckOption = (yyvsp[(14) - (14)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(14) - (14)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1264:
#line 74 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1265:
#line 75 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1266:
#line 76 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_LOCAL_CHECK_OPTION; ;}
    break;

  case 1267:
#line 77 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_NO_CHECK_OPTION; ;}
    break;

  case 1268:
#line 12 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(6) - (7)].node);
					ctas->into = (yyvsp[(4) - (7)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_ERROR_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (7)].into)->rel->relpersistence = (yyvsp[(2) - (7)].ival);
					(yyvsp[(4) - (7)].into)->skipData = !((yyvsp[(7) - (7)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1269:
#line 25 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(9) - (10)].node);
					ctas->into = (yyvsp[(7) - (10)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_IGNORE_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (10)].into)->rel->relpersistence = (yyvsp[(2) - (10)].ival);
					(yyvsp[(7) - (10)].into)->skipData = !((yyvsp[(10) - (10)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1270:
#line 38 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(8) - (9)].node);
					ctas->into = (yyvsp[(6) - (9)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_REPLACE_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(6) - (9)].into)->rel->relpersistence = (yyvsp[(4) - (9)].ival);
					(yyvsp[(6) - (9)].into)->skipData = !((yyvsp[(9) - (9)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1271:
#line 54 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1272:
#line 55 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1273:
#line 56 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1274:
#line 62 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(1) - (4)].range);
					(yyval.into)->colNames = (yyvsp[(2) - (4)].list);
					(yyval.into)->options = (yyvsp[(3) - (4)].list);
					(yyval.into)->onCommit = (yyvsp[(4) - (4)].oncommit);
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;		/* might get changed later */
				;}
    break;


/* Line 1267 of yacc.c.  */
#line 25350 "third_party/libpg_query/grammar/grammar_out.cpp"
      default: break;
    }
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, yyscanner, YY_("syntax error"));
#else
      {
	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
	  {
	    YYSIZE_T yyalloc = 2 * yysize;
	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
	    if (yymsg != yymsgbuf)
	      YYSTACK_FREE (yymsg);
	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
	    if (yymsg)
	      yymsg_alloc = yyalloc;
	    else
	      {
		yymsg = yymsgbuf;
		yymsg_alloc = sizeof yymsgbuf;
	      }
	  }

	if (0 < yysize && yysize <= yymsg_alloc)
	  {
	    (void) yysyntax_error (yymsg, yystate, yychar);
	    yyerror (&yylloc, yyscanner, yymsg);
	  }
	else
	  {
	    yyerror (&yylloc, yyscanner, YY_("syntax error"));
	    if (yysize != 0)
	      goto yyexhaustedlab;
	  }
      }
#endif
    }

  yyerror_range[0] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse look-ahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
	{
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
	}
      else
	{
	  yydestruct ("Error: discarding",
		      yytoken, &yylval, &yylloc, yyscanner);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse look-ahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[0] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule which action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (yyn != YYPACT_NINF)
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;

      yyerror_range[0] = *yylsp;
      yydestruct ("Error: popping",
		  yystos[yystate], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  *++yyvsp = yylval;

  yyerror_range[1] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the look-ahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, (yyerror_range - 1), 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#ifndef yyoverflow
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, yyscanner, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEOF && yychar != YYEMPTY)
     yydestruct ("Cleanup: discarding lookahead",
		 yytoken, &yylval, &yylloc, yyscanner);
  /* Do not reclaim the symbols of the rule which action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  /* Make sure YYID is used.  */
  return YYID (yyresult);
}


#line 83 "third_party/libpg_query/grammar/statements/create_as.y"


#line 1 "third_party/libpg_query/grammar/grammar.cpp"
/*
 * The signature of this function is required by bison.  However, we
 * ignore the passed yylloc and instead use the last token position
 * available from the scanner.
 */
static void
base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner, const char *msg)
{
	parser_yyerror(msg);
}

static PGRawStmt *
makeRawStmt(PGNode *stmt, int stmt_location)
{
	PGRawStmt    *rs = makeNode(PGRawStmt);

	rs->stmt = stmt;
	rs->stmt_location = stmt_location;
	rs->stmt_len = 0;			/* might get changed later */
	return rs;
}

/* Adjust a PGRawStmt to reflect that it doesn't run to the end of the string */
static void
updateRawStmtEnd(PGRawStmt *rs, int end_location)
{
	/*
	 * If we already set the length, don't change it.  This is for situations
	 * like "select foo ;; select bar" where the same statement will be last
	 * in the string for more than one semicolon.
	 */
	if (rs->stmt_len > 0)
		return;

	/* OK, update length of PGRawStmt */
	rs->stmt_len = end_location - rs->stmt_location;
}

static PGNode *
makeColumnRef(char *colname, PGList *indirection,
			  int location, core_yyscan_t yyscanner)
{
	/*
	 * Generate a PGColumnRef node, with an PGAIndirection node added if there
	 * is any subscripting in the specified indirection list.  However,
	 * any field selection at the start of the indirection list must be
	 * transposed into the "fields" part of the PGColumnRef node.
	 */
	PGColumnRef  *c = makeNode(PGColumnRef);
	int		nfields = 0;
	PGListCell *l;

	c->location = location;
	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAIndices))
		{
			PGAIndirection *i = makeNode(PGAIndirection);

			if (nfields == 0)
			{
				/* easy case - all indirection goes to PGAIndirection */
				c->fields = list_make1(makeString(colname));
				i->indirection = check_indirection(indirection, yyscanner);
			}
			else
			{
				/* got to split the list in two */
				i->indirection = check_indirection(list_copy_tail(indirection,
																  nfields),
												   yyscanner);
				indirection = list_truncate(indirection, nfields);
				c->fields = lcons(makeString(colname), indirection);
			}
			i->arg = (PGNode *) c;
			return (PGNode *) i;
		}
		else if (IsA(lfirst(l), PGAStar))
		{
			/* We only allow '*' at the end of a PGColumnRef */
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
		nfields++;
	}
	/* No subscripting, so all indirection gets added to field list */
	c->fields = lcons(makeString(colname), indirection);
	return (PGNode *) c;
}

static PGNode *
makeTypeCast(PGNode *arg, PGTypeName *tpname, int trycast, int location)
{
	PGTypeCast *n = makeNode(PGTypeCast);
	n->arg = arg;
	n->typeName = tpname;
	n->tryCast = trycast;
	n->location = location;
	return (PGNode *) n;
}

static PGNode *
makeStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeStringConstCast(char *str, int location, PGTypeName *tpname)
{
	PGNode *s = makeStringConst(str, location);

	return makeTypeCast(s, tpname, 0, -1);
}

static PGNode *
makeIntervalNode(char *str, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGString;
	n->sval = str;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;

}

static PGNode *
makeIntervalNode(int val, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGInteger;
	n->ival = val;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeIntervalNode(PGNode *arg, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGAExpr;
	n->eval = arg;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeSampleSize(PGValue *sample_size, bool is_percentage) {
	PGSampleSize *n = makeNode(PGSampleSize);

	n->sample_size = *sample_size;
	n->is_percentage = is_percentage;

	return (PGNode *)n;
}

static PGNode *
makeSampleOptions(PGNode *sample_size, char *method, int seed, int location) {
	PGSampleOptions *n = makeNode(PGSampleOptions);

	n->sample_size = sample_size;
	n->method = method;
	n->seed = seed;
	n->location = location;

	return (PGNode *)n;
}

/* makeLimitPercent()
 * Make limit percent node
 */
static PGNode *
makeLimitPercent(PGNode *limit_percent) {
	PGLimitPercent *n = makeNode(PGLimitPercent);

	n->limit_percent = limit_percent;

	return (PGNode *)n;
}

static PGNode *
makeIntConst(int val, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGInteger;
	n->val.val.ival = val;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeFloatConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGFloat;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeBitStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGBitString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeNullAConst(int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGNull;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeAConst(PGValue *v, int location)
{
	PGNode *n;

	switch (v->type)
	{
		case T_PGFloat:
			n = makeFloatConst(v->val.str, location);
			break;

		case T_PGInteger:
			n = makeIntConst(v->val.ival, location);
			break;

		case T_PGString:
		default:
			n = makeStringConst(v->val.str, location);
			break;
	}

	return n;
}

/* makeBoolAConst()
 * Create an PGAConst string node and put it inside a boolean cast.
 */
static PGNode *
makeBoolAConst(bool state, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = (state ? (char*) "t" : (char*) "f");
	n->location = location;

	return makeTypeCast((PGNode *)n, SystemTypeName("bool"), 0, -1);
}

/* check_qualified_name --- check the result of qualified_name production
 *
 * It's easiest to let the grammar production for qualified_name allow
 * subscripts and '*', which we then must reject here.
 */
static void
check_qualified_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
}

/* check_func_name --- check the result of func_name production
 *
 * It's easiest to let the grammar production for func_name allow subscripts
 * and '*', which we then must reject here.
 */
static PGList *
check_func_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
	return names;
}

/* check_indirection --- check the result of indirection production
 *
 * We only allow '*' at the end of the list, but it's hard to enforce that
 * in the grammar, so do it here.
 */
static PGList *
check_indirection(PGList *indirection, core_yyscan_t yyscanner)
{
	PGListCell *l;

	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAStar))
		{
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
	}
	return indirection;
}

/* makeParamRef
 * Creates a new PGParamRef node
 */
static PGNode* makeParamRef(int number, int location)
{
	PGParamRef *p = makeNode(PGParamRef);
	p->number = number;
	p->location = location;
	return (PGNode *) p;
}


/* insertSelectOptions()
 * Insert ORDER BY, etc into an already-constructed SelectStmt.
 *
 * This routine is just to avoid duplicating code in PGSelectStmt productions.
 */
static void
insertSelectOptions(PGSelectStmt *stmt,
					PGList *sortClause, PGList *lockingClause,
					PGNode *limitOffset, PGNode *limitCount,
					PGWithClause *withClause,
					core_yyscan_t yyscanner)
{
	Assert(IsA(stmt, PGSelectStmt));

	/*
	 * Tests here are to reject constructs like
	 *	(SELECT foo ORDER BY bar) ORDER BY baz
	 */
	if (sortClause)
	{
		if (stmt->sortClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple ORDER BY clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) sortClause))));
		stmt->sortClause = sortClause;
	}
	/* We can handle multiple locking clauses, though */
	stmt->lockingClause = list_concat(stmt->lockingClause, lockingClause);
	if (limitOffset)
	{
		if (stmt->limitOffset)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple OFFSET clauses not allowed"),
					 parser_errposition(exprLocation(limitOffset))));
		stmt->limitOffset = limitOffset;
	}
	if (limitCount)
	{
		if (stmt->limitCount)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple LIMIT clauses not allowed"),
					 parser_errposition(exprLocation(limitCount))));
		stmt->limitCount = limitCount;
	}
	if (withClause)
	{
		if (stmt->withClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple WITH clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) withClause))));
		stmt->withClause = withClause;
	}
}

static PGNode *
makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg)
{
	PGSelectStmt *n = makeNode(PGSelectStmt);

	n->op = op;
	n->all = all;
	n->larg = (PGSelectStmt *) larg;
	n->rarg = (PGSelectStmt *) rarg;
	return (PGNode *) n;
}

/* SystemFuncName()
 * Build a properly-qualified reference to a built-in function.
 */
PGList *
SystemFuncName(const char *name)
{
	return list_make2(makeString(DEFAULT_SCHEMA), makeString(name));
}

/* SystemTypeName()
 * Build a properly-qualified reference to a built-in type.
 *
 * typmod is defaulted, but may be changed afterwards by caller.
 * Likewise for the location.
 */
PGTypeName *
SystemTypeName(const char *name)
{
	return makeTypeNameFromNameList(list_make2(makeString(DEFAULT_SCHEMA),
											   makeString(name)));
}

/* doNegate()
 * Handle negation of a numeric constant.
 *
 * Formerly, we did this here because the optimizer couldn't cope with
 * indexquals that looked like "var = -4" --- it wants "var = const"
 * and a unary minus operator applied to a constant didn't qualify.
 * As of Postgres 7.0, that problem doesn't exist anymore because there
 * is a constant-subexpression simplifier in the optimizer.  However,
 * there's still a good reason for doing this here, which is that we can
 * postpone committing to a particular internal representation for simple
 * negative constants.	It's better to leave "-123.456" in string form
 * until we know what the desired type is.
 */
static PGNode *
doNegate(PGNode *n, int location)
{
	if (IsA(n, PGAConst))
	{
		PGAConst *con = (PGAConst *)n;

		/* report the constant's location as that of the '-' sign */
		con->location = location;

		if (con->val.type == T_PGInteger)
		{
			con->val.val.ival = -con->val.val.ival;
			return n;
		}
		if (con->val.type == T_PGFloat)
		{
			doNegateFloat(&con->val);
			return n;
		}
	}

	return (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", NULL, n, location);
}

static void
doNegateFloat(PGValue *v)
{
	char   *oldval = v->val.str;

	Assert(IsA(v, PGFloat));
	if (*oldval == '+')
		oldval++;
	if (*oldval == '-')
		v->val.str = oldval+1;	/* just strip the '-' */
	else
		v->val.str = psprintf("-%s", oldval);
}

static PGNode *
makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a AND b AND c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_AND_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_AND_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a OR b OR c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_OR_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_OR_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeNotExpr(PGNode *expr, int location)
{
	return (PGNode *) makeBoolExpr(PG_NOT_EXPR, list_make1(expr), location);
}

static PGNode *
makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod, int location)
{
	PGSQLValueFunction *svf = makeNode(PGSQLValueFunction);

	svf->op = op;
	/* svf->type will be filled during parse analysis */
	svf->typmod = typmod;
	svf->location = location;
	return (PGNode *) svf;
}

/* Separate PGConstraint nodes from COLLATE clauses in a */
static void
SplitColQualList(PGList *qualList,
				 PGList **constraintList, PGCollateClause **collClause,
				 core_yyscan_t yyscanner)
{
	PGListCell   *cell;
	PGListCell   *prev;
	PGListCell   *next;

	*collClause = NULL;
	prev = NULL;
	for (cell = list_head(qualList); cell; cell = next)
	{
		PGNode   *n = (PGNode *) lfirst(cell);

		next = lnext(cell);
		if (IsA(n, PGConstraint))
		{
			/* keep it in list */
			prev = cell;
			continue;
		}
		if (IsA(n, PGCollateClause))
		{
			PGCollateClause *c = (PGCollateClause *) n;

			if (*collClause)
				ereport(ERROR,
						(errcode(PG_ERRCODE_SYNTAX_ERROR),
						 errmsg("multiple COLLATE clauses not allowed"),
						 parser_errposition(c->location)));
			*collClause = c;
		}
		else
			elog(ERROR, "unexpected node type %d", (int) n->type);
		/* remove non-Constraint nodes from qualList */
		qualList = list_delete_cell(qualList, cell, prev);
	}
	*constraintList = qualList;
}

/*
 * Process result of ConstraintAttributeSpec, and set appropriate bool flags
 * in the output command node.  Pass NULL for any flags the particular
 * command doesn't support.
 */
static void
processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner)
{
	/* defaults */
	if (deferrable)
		*deferrable = false;
	if (initdeferred)
		*initdeferred = false;
	if (not_valid)
		*not_valid = false;

	if (cas_bits & (CAS_DEFERRABLE | CAS_INITIALLY_DEFERRED))
	{
		if (deferrable)
			*deferrable = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_INITIALLY_DEFERRED)
	{
		if (initdeferred)
			*initdeferred = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NOT_VALID)
	{
		if (not_valid)
			*not_valid = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NOT VALID",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NO_INHERIT)
	{
		if (no_inherit)
			*no_inherit = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NO INHERIT",
							constrType),
					 parser_errposition(location)));
	}
}

/*----------
 * Recursive view transformation
 *
 * Convert
 *
 *     CREATE RECURSIVE VIEW relname (aliases) AS query
 *
 * to
 *
 *     CREATE VIEW relname (aliases) AS
 *         WITH RECURSIVE relname (aliases) AS (query)
 *         SELECT aliases FROM relname
 *
 * Actually, just the WITH ... part, which is then inserted into the original
 * view as the query.
 * ----------
 */
static PGNode *
makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query)
{
	PGSelectStmt *s = makeNode(PGSelectStmt);
	PGWithClause *w = makeNode(PGWithClause);
	PGCommonTableExpr *cte = makeNode(PGCommonTableExpr);
	PGList	   *tl = NIL;
	PGListCell   *lc;

	/* create common table expression */
	cte->ctename = relname;
	cte->aliascolnames = aliases;
	cte->ctequery = query;
	cte->location = -1;

	/* create WITH clause and attach CTE */
	w->recursive = true;
	w->ctes = list_make1(cte);
	w->location = -1;

	/* create target list for the new SELECT from the alias list of the
	 * recursive view specification */
	foreach (lc, aliases)
	{
		PGResTarget *rt = makeNode(PGResTarget);

		rt->name = NULL;
		rt->indirection = NIL;
		rt->val = makeColumnRef(strVal(lfirst(lc)), NIL, -1, 0);
		rt->location = -1;

		tl = lappend(tl, rt);
	}

	/* create new SELECT combining WITH clause, target list, and fake FROM
	 * clause */
	s->withClause = w;
	s->targetList = tl;
	s->fromClause = list_make1(makeRangeVar(NULL, relname, -1));

	return (PGNode *) s;
}

/* parser_init()
 * Initialize to parse one query string
 */
void
parser_init(base_yy_extra_type *yyext)
{
	yyext->parsetree = NIL;		/* in case grammar forgets to set it */
}

#undef yyparse
#undef yylex
#undef yyerror
#undef yylval
#undef yychar
#undef yydebug
#undef yynerrs
#undef yylloc

} // namespace duckdb_libpgquery

