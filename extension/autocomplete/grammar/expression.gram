ColumnReference <- CatalogQualification? SchemaQualification? TableQualification? ColumnName
FunctionExpression <- FunctionIdentifier Parens(DistinctOrAll? List(Expression)? OrderByClause?) OverClause?
FunctionIdentifier <- CatalogQualification? SchemaQualification? TableQualification? FunctionName
ParenthesisExpression <- Parens(List(Expression))
LiteralExpression <- StringLiteral / NumberLiteral / 'NULL'i / 'TRUE'i / 'FALSE'i
CastExpression <- CastOrTryCast Parens(Expression 'AS'i TypeName)
CastOrTryCast <- 'CAST'i / 'TRY_CAST'i
ExtractExpression <- 'EXTRACT'i Parens(ColumnReference 'FROM'i Expression)
CountStarExpression <- 'COUNT'i Parens('*')
SubqueryExpression <- 'NOT'i? 'EXISTS'i? SubqueryReference
CaseExpression <- 'CASE'i ColumnReference? CaseWhenThen CaseWhenThen* CaseElse? 'END'i
CaseWhenThen <- 'WHEN'i Expression 'THEN'i Expression
CaseElse <- 'ELSE'i Expression
DateExpression <- 'DATE'i Expression
SubstringExpression <- 'SUBSTRING'i Parens(Expression 'FROM'i NumberLiteral 'FOR'i NumberLiteral)
FrameClause <- Framing FrameExtent WindowExcludeClause?
Framing <- 'ROWS'i / 'RANGE'i / 'GROUPS'i
FrameExtent <- FrameBound / ('BETWEEN'i FrameBound 'AND'i FrameBound)
FrameBound <- ('UNBOUNDED'i 'PRECEDING'i) / ('UNBOUNDED'i 'FOLLOWING'i) / ('CURRENT'i 'ROW'i) / (Expression 'PRECEDING'i) / (Expression 'FOLLOWING'i)
WindowExcludeClause <- 'EXCLUDE'i WindowExcludeElement
WindowExcludeElement <- ('CURRENT'i 'ROW'i) / 'GROUP'i / 'TIES'i / ('NO'i 'OTHERS'i)
OverClause <- 'OVER'i WindowFrame
WindowFrame <- WindowFrameDefinition / Identifier / Parens(Identifier)
WindowFrameDefinition <- Parens(WindowFrameContents)
WindowFrameContents <- WindowPartition? OrderByClause? FrameClause?
WindowPartition <- 'PARTITION'i 'BY'i List(Expression)
IsNullExpression <- ColumnReference 'IS'i 'NOT'i? 'NULL'i # TODO
PrefixExpression <- PrefixOperator Expression
PrefixOperator <- '-' / '+'
ListExpression <- 'ARRAY'i? '[' List(Expression) ']'
StructExpression <- '{' List(StructField) '}'
StructField <- StringLiteral ':'i Expression

SingleExpression <-
    SubqueryExpression /
    ParenthesisExpression /
    DateExpression /
    SubstringExpression /
    IsNullExpression /
    CaseExpression /
    CountStarExpression /
    CastExpression /
    ExtractExpression /
    FunctionExpression /
    ColumnReference /
    LiteralExpression /
    PrefixExpression /
    ListExpression /
    StructExpression

ArithmeticOperator <- '+' / '-' / '*' / '/' / '//' / '%' / '^' / '**'
LikeOperator <- 'NOT'i? 'LIKE'i
InOperator <- 'NOT'i? 'IN'i
ConjunctionOperator <- 'OR'i / 'AND'i
ComparisonOperator <-  '=' / '<=' / '>=' / '<' / '>'
DistinctOperator <- 'IS'i 'NOT'i? 'DISTINCT'i 'FROM'i
BetweenOperator <- 'BETWEEN'i
CollateOperator <- 'COLLATE'i

Operator <-
    ArithmeticOperator /
    ComparisonOperator /
    ConjunctionOperator /
    LikeOperator /
    InOperator /
    BetweenOperator /
    CollateOperator /
    DistinctOperator

CastOperator <- '::' TypeName

BaseExpression <- SingleExpression CastOperator?
Expression <- BaseExpression RecursiveExpression*
RecursiveExpression <- (Operator Expression) / SliceExpression
SliceExpression <- '[' SliceBound ']'
SliceBound <- Expression? (':' Expression?)? (':' Expression?)?
