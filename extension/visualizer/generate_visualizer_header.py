# this script generates visualizer header
import os

visualizer_dir = 'extension/visualizer'
visualizer_css = os.path.join(visualizer_dir, 'visualizer.css')
visualizer_d3 = os.path.join(visualizer_dir, 'd3.js')
visualizer_script = os.path.join(visualizer_dir, 'script.js')
visualizer_header = os.path.join(visualizer_dir, 'include', 'visualizer_constants.hpp')

def open_utf8(fpath, flags):
    import sys
    if sys.version_info[0] < 3:
        return open(fpath, flags)
    else:
        return open(fpath, flags, encoding="utf8")

def get_byte_array(fpath, add_null_terminator = False):
    with open(fpath, 'rb') as f:
        text = bytearray(f.read())
    result_text = ""
    first = True
    for byte in text:
        if first:
            result_text += str(byte)
        else:
            result_text += ", " + str(byte)
        first = False
    if add_null_terminator:
        result_text += ", 0"
    return result_text

def write_file(fname, varname):
    result = "const uint8_t %s[] = {" % (varname,) + get_byte_array(fname) + "};\n"
    return result


def create_visualizer_header():
    result = """/* THIS FILE WAS AUTOMATICALLY GENERATED BY generate_visualizer_header.py */
    
#pragma once

"""

    result += write_file(visualizer_css, "css")
    result += write_file(visualizer_d3, "d3")
    result += write_file(visualizer_script, "script")

    with open_utf8(visualizer_header, 'w+') as f:
        f.write(result)

create_visualizer_header()